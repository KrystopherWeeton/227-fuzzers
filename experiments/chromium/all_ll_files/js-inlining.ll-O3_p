; ModuleID = '../../v8/src/compiler/js-inlining.cc'
source_filename = "../../v8/src/compiler/js-inlining.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::compiler::JSInliner" = type { %"class.v8::internal::compiler::AdvancedReducer", %"class.v8::internal::Zone"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::SourcePositionTable"* }
%"class.v8::internal::compiler::AdvancedReducer" = type { %"class.v8::internal::compiler::Reducer", %"class.v8::internal::compiler::AdvancedReducer::Editor"* }
%"class.v8::internal::compiler::Reducer" = type { i32 (...)** }
%"class.v8::internal::compiler::AdvancedReducer::Editor" = type { i32 (...)** }
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.2" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set", %"class.std::__1::set.11" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::set.11" = type { %"class.std::__1::__tree.12" }
%"class.std::__1::__tree.12" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::OptimizedCompilationInfo" = type { i32, i32, i32, i32, %"class.v8::internal::Handle", %"class.v8::internal::Handle.18", %"class.v8::internal::Handle.19", %"class.v8::internal::Handle.20", %"class.v8::internal::BasicBlockProfilerData"*, %"class.std::__1::unique_ptr.38", %"class.v8::internal::BytecodeOffset", %"class.v8::internal::JavaScriptFrame"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::NodeObserver"*, i8, %"class.std::__1::vector.1157", i32, i32, %"class.v8::internal::Vector.1164", %"class.std::__1::unique_ptr.1165", %"class.v8::internal::TickCounter", %"class.std::__1::unique_ptr.1089", %"class.std::__1::unique_ptr.780" }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Handle.18" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.19" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.20" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::BasicBlockProfilerData" = type <{ %"class.std::__1::vector", %"class.std::__1::vector.26", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i32* }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { i32*, i32*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i32* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.v8::internal::wasm::WasmCompilationResult"* }
%"struct.v8::internal::wasm::WasmCompilationResult" = type { %"class.v8::internal::CodeDesc", %"class.std::__1::unique_ptr.41", i32, i32, %"class.v8::internal::OwnedVector", %"class.v8::internal::OwnedVector", i32, i8, i8, i8, i8 }
%"class.v8::internal::CodeDesc" = type { i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, %"class.v8::internal::Assembler"* }
%"class.v8::internal::Assembler" = type opaque
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i8* }
%"class.v8::internal::OwnedVector" = type { %"class.std::__1::unique_ptr.41", i64 }
%"class.v8::internal::BytecodeOffset" = type { i32 }
%"class.v8::internal::JavaScriptFrame" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::CommonFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::CommonFrame" = type { %"class.v8::internal::StackFrame" }
%"class.v8::internal::StackFrame" = type { i32 (...)**, %"class.v8::internal::StackFrameIteratorBase"*, %"class.v8::internal::Isolate"*, %"struct.v8::internal::StackFrame::State" }
%"class.v8::internal::StackFrameIteratorBase" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::EntryFrame", %"class.v8::internal::ConstructEntryFrame", %"class.v8::internal::ExitFrame", %"class.v8::internal::WasmFrame", %"class.v8::internal::WasmToJsFrame", %"class.v8::internal::JsToWasmFrame", %"class.v8::internal::WasmDebugBreakFrame", %"class.v8::internal::CWasmEntryFrame", %"class.v8::internal::WasmExitFrame", %"class.v8::internal::WasmCompileLazyFrame", %"class.v8::internal::InterpretedFrame", %"class.v8::internal::BaselineFrame", %"class.v8::internal::OptimizedFrame", %"class.v8::internal::StubFrame", %"class.v8::internal::BuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationFrame", %"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame", %"class.v8::internal::InternalFrame", %"class.v8::internal::ConstructFrame", %"class.v8::internal::BuiltinFrame", %"class.v8::internal::BuiltinExitFrame", %"class.v8::internal::NativeFrame", %"class.v8::internal::StackFrame"*, %"class.v8::internal::StackHandler"*, i8, [7 x i8] }>
%"class.v8::internal::EntryFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::TypedFrame" = type { %"class.v8::internal::CommonFrame" }
%"class.v8::internal::ConstructEntryFrame" = type { %"class.v8::internal::EntryFrame" }
%"class.v8::internal::ExitFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::WasmToJsFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::JsToWasmFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmDebugBreakFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::CWasmEntryFrame" = type { %"class.v8::internal::StubFrame" }
%"class.v8::internal::WasmExitFrame" = type { %"class.v8::internal::WasmFrame" }
%"class.v8::internal::WasmCompileLazyFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::InterpretedFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::UnoptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::BaselineFrame" = type { %"class.v8::internal::UnoptimizedFrame" }
%"class.v8::internal::OptimizedFrame" = type { %"class.v8::internal::JavaScriptFrame" }
%"class.v8::internal::StubFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::BuiltinContinuationFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::JavaScriptBuiltinContinuationFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::TypedFrameWithJSLinkage" = type { %"class.v8::internal::CommonFrameWithJSLinkage" }
%"class.v8::internal::JavaScriptBuiltinContinuationWithCatchFrame" = type { %"class.v8::internal::JavaScriptBuiltinContinuationFrame" }
%"class.v8::internal::InternalFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::ConstructFrame" = type { %"class.v8::internal::InternalFrame" }
%"class.v8::internal::BuiltinFrame" = type { %"class.v8::internal::TypedFrameWithJSLinkage" }
%"class.v8::internal::BuiltinExitFrame" = type { %"class.v8::internal::ExitFrame" }
%"class.v8::internal::NativeFrame" = type { %"class.v8::internal::TypedFrame" }
%"class.v8::internal::StackHandler" = type { i8 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr.56", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.686", %"class.std::__1::unique_ptr.707", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.717", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.857", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.867", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.872", %"struct.std::__1::atomic.211", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.947", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.994"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.1004", i32, i8, i8, i32, i32, %"class.std::__1::vector.1010", %"class.std::__1::vector.1010", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1017", i64, %"class.std::__1::unordered_map.1018", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.582", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.219", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1074", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1112", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1146", %"class.std::__1::vector.1150", %"class.std::__1::vector.1150", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic.50", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.54", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.54" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic", i64, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic.85", %"class.std::__1::vector.89", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.220", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic", i64, i8, %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.224", %"class.std::__1::vector.224", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.237", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.373", %"class.std::__1::unique_ptr.379", %"class.std::__1::unique_ptr.418", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.487", %"class.std::__1::unique_ptr.493", %"class.std::__1::unique_ptr.503", %"class.std::__1::unique_ptr.509", %"class.std::__1::unique_ptr.509", %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.521", %"class.std::__1::unique_ptr.521", %"class.std::__1::unique_ptr.527", %"class.std::__1::unique_ptr.533", %"class.std::__1::shared_ptr.539", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.544", %"class.std::__1::unique_ptr.570", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.576", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.589", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.389", i8, [7 x i8], %"class.std::__1::unordered_map.595", %"class.std::__1::unordered_map.621", %"class.std::__1::unordered_map.595", %"class.std::__1::unordered_map.645", %"class.std::__1::vector.673", i8, %"class.std::__1::unique_ptr.680", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.62", %"class.std::__1::__compressed_pair.70", %"class.std::__1::__compressed_pair.75", %"class.std::__1::__compressed_pair.77", [4 x i8] }>
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64", %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.80", %"struct.std::__1::atomic.80", %"struct.std::__1::atomic.80" }
%"struct.std::__1::atomic.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__atomic_base.82" }
%"struct.std::__1::__atomic_base.82" = type { %"struct.std::__1::__cxx_atomic_impl.83" }
%"struct.std::__1::__cxx_atomic_impl.83" = type { %"struct.std::__1::__cxx_atomic_base_impl.84" }
%"struct.std::__1::__cxx_atomic_base_impl.84" = type { i64 }
%"struct.std::__1::atomic.85" = type { %"struct.std::__1::__atomic_base.86" }
%"struct.std::__1::__atomic_base.86" = type { %"struct.std::__1::__cxx_atomic_impl.87" }
%"struct.std::__1::__cxx_atomic_impl.87" = type { %"struct.std::__1::__cxx_atomic_base_impl.88" }
%"struct.std::__1::__cxx_atomic_base_impl.88" = type { i32 }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.91" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.162" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic"*, %"class.std::__1::unique_ptr.156" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.96", %"class.std::__1::vector.96", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.98" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.103" }
%"class.std::__1::__hash_table.103" = type <{ %"class.std::__1::unique_ptr.104", %"class.std::__1::__compressed_pair.114", %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.121", [4 x i8] }>
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106", %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base.107"** }
%"struct.std::__1::__hash_node_base.107" = type { %"struct.std::__1::__hash_node_base.107"* }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.std::__1::__bucket_list_deallocator.109" }
%"class.std::__1::__bucket_list_deallocator.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.107" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic", %"struct.std::__1::atomic.80", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set.137"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.145", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.80", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.80", %"struct.std::__1::atomic.126", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.126" = type { %"struct.std::__1::__atomic_base.127" }
%"struct.std::__1::__atomic_base.127" = type { %"struct.std::__1::__cxx_atomic_impl.128" }
%"struct.std::__1::__cxx_atomic_impl.128" = type { %"struct.std::__1::__cxx_atomic_base_impl.129" }
%"struct.std::__1::__cxx_atomic_base_impl.129" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.130" }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.132" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set.137" = type { %"class.std::__1::__tree.138" }
%"class.std::__1::__tree.138" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.145" = type { %"struct.std::__1::__atomic_base.146" }
%"struct.std::__1::__atomic_base.146" = type { %"struct.std::__1::__cxx_atomic_impl.147" }
%"struct.std::__1::__cxx_atomic_impl.147" = type { %"struct.std::__1::__cxx_atomic_base_impl.148" }
%"struct.std::__1::__cxx_atomic_base_impl.148" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.149", i8, [7 x i8] }>
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { i64*, i64*, %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"struct.std::__1::pair.164"*, %"struct.std::__1::pair.164"*, %"class.std::__1::__compressed_pair.165" }
%"struct.std::__1::pair.164" = type { i32, i64 }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::pair.164"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic", i64, %"struct.std::__1::atomic" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic", i32, %"struct.std::__1::atomic", %"class.v8::base::Mutex", %"struct.std::__1::atomic" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.170" }
%"class.std::__1::unordered_map.170" = type { %"class.std::__1::__hash_table.171" }
%"class.std::__1::__hash_table.171" = type <{ %"class.std::__1::unique_ptr.172", %"class.std::__1::__compressed_pair.182", %"class.std::__1::__compressed_pair.187", %"class.std::__1::__compressed_pair.192", [4 x i8] }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174", %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base.175"** }
%"struct.std::__1::__hash_node_base.175" = type { %"struct.std::__1::__hash_node_base.175"* }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.std::__1::__bucket_list_deallocator.177" }
%"class.std::__1::__bucket_list_deallocator.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"struct.std::__1::__hash_node_base.175" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.198", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.198" = type { %"class.std::__1::__vector_base.199" }
%"class.std::__1::__vector_base.199" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.200" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.200" = type { %"struct.std::__1::__compressed_pair_elem.201" }
%"struct.std::__1::__compressed_pair_elem.201" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1079", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1083", %"class.std::__1::unique_ptr.1089", %"class.std::__1::unique_ptr.533", %"class.std::__1::vector.1095", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1079" = type { %"struct.std::__1::__atomic_base.1080" }
%"struct.std::__1::__atomic_base.1080" = type { %"struct.std::__1::__cxx_atomic_impl.1081" }
%"struct.std::__1::__cxx_atomic_impl.1081" = type { %"struct.std::__1::__cxx_atomic_base_impl.1082" }
%"struct.std::__1::__cxx_atomic_base_impl.1082" = type { i32 }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.844" }
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { i64**, i64**, %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { i64** }
%"class.std::__1::vector.1095" = type { %"class.std::__1::__vector_base.1096" }
%"class.std::__1::__vector_base.1096" = type { %"struct.std::__1::pair.1097"*, %"struct.std::__1::pair.1097"*, %"class.std::__1::__compressed_pair.1098" }
%"struct.std::__1::pair.1097" = type opaque
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::pair.1097"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.211", %"struct.std::__1::atomic.215", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic.215" = type { %"struct.std::__1::__atomic_base.216" }
%"struct.std::__1::__atomic_base.216" = type { %"struct.std::__1::__cxx_atomic_impl.217" }
%"struct.std::__1::__cxx_atomic_impl.217" = type { %"struct.std::__1::__cxx_atomic_base_impl.218" }
%"struct.std::__1::__cxx_atomic_base_impl.218" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.219" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.220" = type { %"struct.std::__1::__atomic_base.221" }
%"struct.std::__1::__atomic_base.221" = type { %"struct.std::__1::__cxx_atomic_impl.222" }
%"struct.std::__1::__cxx_atomic_impl.222" = type { %"struct.std::__1::__cxx_atomic_base_impl.223" }
%"struct.std::__1::__cxx_atomic_base_impl.223" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.std::__1::vector.224" = type { %"class.std::__1::__vector_base.225" }
%"class.std::__1::__vector_base.225" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.226" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.285", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.339", %"class.std::__1::vector.339", %"class.std::__1::vector.339", %"class.std::__1::vector.346", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.240", %"class.std::__1::vector.241", %"class.std::__1::vector.248", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.240" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.241" = type { %"class.std::__1::__vector_base.242" }
%"class.std::__1::__vector_base.242" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.243" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.248" = type { %"class.std::__1::__vector_base.249" }
%"class.std::__1::__vector_base.249" = type { %"class.std::__1::unique_ptr.250"*, %"class.std::__1::unique_ptr.250"*, %"class.std::__1::__compressed_pair.251" }
%"class.std::__1::unique_ptr.250" = type opaque
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.252" }
%"struct.std::__1::__compressed_pair_elem.252" = type { %"class.std::__1::unique_ptr.250"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.256", %"class.v8::internal::Worklist.258", %"class.v8::internal::Worklist.258", %"class.v8::internal::Worklist.258", %"class.v8::internal::Worklist.260", %"class.v8::internal::Worklist.262", %"class.v8::internal::Worklist.264", %"class.v8::internal::Worklist.266", %"class.v8::internal::Worklist.268", %"class.v8::internal::Worklist.270" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.256" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.258" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.260" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.262" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.264" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.266" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.268" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic" }
%"class.v8::internal::Worklist.270" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.272", i8, i64 }
%"class.std::__1::vector.272" = type { %"class.std::__1::__vector_base.273" }
%"class.std::__1::__vector_base.273" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.285" = type { %"class.std::__1::__compressed_pair.286" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.287" }
%"struct.std::__1::__compressed_pair_elem.287" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.288" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.240"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.288" = type { %"class.std::__1::__hash_table.289" }
%"class.std::__1::__hash_table.289" = type <{ %"class.std::__1::unique_ptr.290", %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.305", %"class.std::__1::__compressed_pair.308", [4 x i8] }>
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292", %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"struct.std::__1::__hash_node_base.293"** }
%"struct.std::__1::__hash_node_base.293" = type { %"struct.std::__1::__hash_node_base.293"* }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.std::__1::__bucket_list_deallocator.295" }
%"class.std::__1::__bucket_list_deallocator.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.std::__1::__hash_node_base.293" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.315" }
%"class.std::__1::unordered_map.315" = type { %"class.std::__1::__hash_table.316" }
%"class.std::__1::__hash_table.316" = type <{ %"class.std::__1::unique_ptr.317", %"class.std::__1::__compressed_pair.327", %"class.std::__1::__compressed_pair.332", %"class.std::__1::__compressed_pair.335", [4 x i8] }>
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319", %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.std::__1::__hash_node_base.320"** }
%"struct.std::__1::__hash_node_base.320" = type { %"struct.std::__1::__hash_node_base.320"* }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.std::__1::__bucket_list_deallocator.322" }
%"class.std::__1::__bucket_list_deallocator.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"struct.std::__1::__hash_node_base.320" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::vector.339" = type { %"class.std::__1::__vector_base.340" }
%"class.std::__1::__vector_base.340" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.346" = type { %"class.std::__1::__vector_base.347" }
%"class.std::__1::__vector_base.347" = type { %"struct.std::__1::pair.348"*, %"struct.std::__1::pair.348"*, %"class.std::__1::__compressed_pair.349" }
%"struct.std::__1::pair.348" = type opaque
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"struct.std::__1::pair.348"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.354", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.339"], [3 x %"class.std::__1::vector.339"], i8, %"struct.std::__1::atomic.211", [6 x i8], %"class.std::__1::vector.339", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.354" = type { %"class.std::__1::__compressed_pair.355" }
%"class.std::__1::__compressed_pair.355" = type { %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.364"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.339", %"class.std::__1::vector.339", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.364" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"struct.std::__1::atomic", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.389", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.382"], %"class.std::__1::unique_ptr.354" }
%"class.std::__1::vector.382" = type { %"class.std::__1::__vector_base.383" }
%"class.std::__1::__vector_base.383" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.420" }
%"struct.std::__1::__compressed_pair_elem.420" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.421", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.425", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.430" }
%"struct.std::__1::atomic.421" = type { %"struct.std::__1::__atomic_base.422" }
%"struct.std::__1::__atomic_base.422" = type { %"struct.std::__1::__cxx_atomic_impl.423" }
%"struct.std::__1::__cxx_atomic_impl.423" = type { %"struct.std::__1::__cxx_atomic_base_impl.424" }
%"struct.std::__1::__cxx_atomic_base_impl.424" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.425" = type { %"struct.std::__1::__atomic_base.426" }
%"struct.std::__1::__atomic_base.426" = type { %"struct.std::__1::__cxx_atomic_impl.427" }
%"struct.std::__1::__cxx_atomic_impl.427" = type { %"struct.std::__1::__cxx_atomic_base_impl.428" }
%"struct.std::__1::__cxx_atomic_base_impl.428" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.430" = type { %"class.std::__1::__hash_table.431" }
%"class.std::__1::__hash_table.431" = type <{ %"class.std::__1::unique_ptr.432", %"class.std::__1::__compressed_pair.442", %"class.std::__1::__compressed_pair.447", %"class.std::__1::__compressed_pair.450", [4 x i8] }>
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434", %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"struct.std::__1::__hash_node_base.435"** }
%"struct.std::__1::__hash_node_base.435" = type { %"struct.std::__1::__hash_node_base.435"* }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.std::__1::__bucket_list_deallocator.437" }
%"class.std::__1::__bucket_list_deallocator.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.std::__1::__hash_node_base.435" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.354", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic", %"struct.std::__1::atomic.211", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.460", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.460" = type { %"class.std::__1::__hash_table.461" }
%"class.std::__1::__hash_table.461" = type <{ %"class.std::__1::unique_ptr.462", %"class.std::__1::__compressed_pair.472", %"class.std::__1::__compressed_pair.477", %"class.std::__1::__compressed_pair.480", [4 x i8] }>
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464", %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"struct.std::__1::__hash_node_base.465"** }
%"struct.std::__1::__hash_node_base.465" = type { %"struct.std::__1::__hash_node_base.465"* }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.std::__1::__bucket_list_deallocator.467" }
%"class.std::__1::__bucket_list_deallocator.467" = type { %"class.std::__1::__compressed_pair.468" }
%"class.std::__1::__compressed_pair.468" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"struct.std::__1::__hash_node_base.465" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.496" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.539" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.540", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.2", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.540" = type { %"struct.std::__1::__atomic_base.541" }
%"struct.std::__1::__atomic_base.541" = type { %"struct.std::__1::__cxx_atomic_impl.542" }
%"struct.std::__1::__cxx_atomic_impl.542" = type { %"struct.std::__1::__cxx_atomic_base_impl.543" }
%"struct.std::__1::__cxx_atomic_base_impl.543" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.544" = type { %"class.std::__1::__hash_table.545" }
%"class.std::__1::__hash_table.545" = type <{ %"class.std::__1::unique_ptr.546", %"class.std::__1::__compressed_pair.556", %"class.std::__1::__compressed_pair.561", %"class.std::__1::__compressed_pair.564", [4 x i8] }>
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548", %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"struct.std::__1::__hash_node_base.549"** }
%"struct.std::__1::__hash_node_base.549" = type { %"struct.std::__1::__hash_node_base.549"* }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.std::__1::__bucket_list_deallocator.551" }
%"class.std::__1::__bucket_list_deallocator.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"struct.std::__1::__hash_node_base.549" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::unique_ptr.570" = type { %"class.std::__1::__compressed_pair.571" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.582", %"class.std::__1::vector.582" }
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.389" = type { %"class.std::__1::__hash_table.390" }
%"class.std::__1::__hash_table.390" = type <{ %"class.std::__1::unique_ptr.391", %"class.std::__1::__compressed_pair.401", %"class.std::__1::__compressed_pair.406", %"class.std::__1::__compressed_pair.410", [4 x i8] }>
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393", %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.std::__1::__hash_node_base.394"** }
%"struct.std::__1::__hash_node_base.394" = type { %"struct.std::__1::__hash_node_base.394"* }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.std::__1::__bucket_list_deallocator.396" }
%"class.std::__1::__bucket_list_deallocator.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"struct.std::__1::__hash_node_base.394" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::unordered_map.621" = type { %"class.std::__1::__hash_table.622" }
%"class.std::__1::__hash_table.622" = type <{ %"class.std::__1::unique_ptr.623", %"class.std::__1::__compressed_pair.633", %"class.std::__1::__compressed_pair.638", %"class.std::__1::__compressed_pair.641", [4 x i8] }>
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625", %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"struct.std::__1::__hash_node_base.626"** }
%"struct.std::__1::__hash_node_base.626" = type { %"struct.std::__1::__hash_node_base.626"* }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.std::__1::__bucket_list_deallocator.628" }
%"class.std::__1::__bucket_list_deallocator.628" = type { %"class.std::__1::__compressed_pair.629" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"struct.std::__1::__hash_node_base.626" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.641" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::unordered_map.595" = type { %"class.std::__1::__hash_table.596" }
%"class.std::__1::__hash_table.596" = type <{ %"class.std::__1::unique_ptr.597", %"class.std::__1::__compressed_pair.607", %"class.std::__1::__compressed_pair.612", %"class.std::__1::__compressed_pair.615", [4 x i8] }>
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599", %"struct.std::__1::__compressed_pair_elem.601" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"struct.std::__1::__hash_node_base.600"** }
%"struct.std::__1::__hash_node_base.600" = type { %"struct.std::__1::__hash_node_base.600"* }
%"struct.std::__1::__compressed_pair_elem.601" = type { %"class.std::__1::__bucket_list_deallocator.602" }
%"class.std::__1::__bucket_list_deallocator.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.600" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::unordered_map.645" = type { %"class.std::__1::__hash_table.646" }
%"class.std::__1::__hash_table.646" = type <{ %"class.std::__1::unique_ptr.647", %"class.std::__1::__compressed_pair.657", %"class.std::__1::__compressed_pair.662", %"class.std::__1::__compressed_pair.667", [4 x i8] }>
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649", %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"struct.std::__1::__hash_node_base.650"** }
%"struct.std::__1::__hash_node_base.650" = type { %"struct.std::__1::__hash_node_base.650"* }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.std::__1::__bucket_list_deallocator.652" }
%"class.std::__1::__bucket_list_deallocator.652" = type { %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"struct.std::__1::__hash_node_base.650" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.std::__1::vector.673" = type { %"class.std::__1::__vector_base.674" }
%"class.std::__1::__vector_base.674" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.675" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.582" }
%"class.std::__1::shared_ptr.686" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.198", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.687", %"class.std::__1::unique_ptr.701" }
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.690" }
%"class.std::__1::vector.690" = type { %"class.std::__1::__vector_base.691" }
%"class.std::__1::__vector_base.691" = type { %"class.std::__1::unique_ptr.692"*, %"class.std::__1::unique_ptr.692"*, %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.1617" }
%"class.std::__1::__compressed_pair.1617" = type { %"struct.std::__1::__compressed_pair_elem.1618" }
%"struct.std::__1::__compressed_pair_elem.1618" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.std::__1::unique_ptr.692"* }
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.710", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.710" = type { %"struct.std::__1::__atomic_base.711" }
%"struct.std::__1::__atomic_base.711" = type { %"struct.std::__1::__cxx_atomic_impl.712" }
%"struct.std::__1::__cxx_atomic_impl.712" = type { %"struct.std::__1::__cxx_atomic_base_impl.713" }
%"struct.std::__1::__cxx_atomic_base_impl.713" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.717" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.718", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.718" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.719", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.719" = type { %"class.std::__1::__vector_base.720" }
%"class.std::__1::__vector_base.720" = type { %"class.std::__1::unique_ptr.721"*, %"class.std::__1::unique_ptr.721"*, %"class.std::__1::__compressed_pair.722" }
%"class.std::__1::unique_ptr.721" = type opaque
%"class.std::__1::__compressed_pair.722" = type { %"struct.std::__1::__compressed_pair_elem.723" }
%"struct.std::__1::__compressed_pair_elem.723" = type { %"class.std::__1::unique_ptr.721"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.727 }
%union.anon.727 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.728", %"class.std::__1::unique_ptr.734", %"struct.std::__1::atomic.211", %"class.std::__1::unique_ptr.740", %"class.std::__1::unique_ptr.746", %"class.std::__1::unique_ptr.752", %"class.std::__1::unique_ptr.758", %"class.std::__1::unique_ptr.764", %"class.std::__1::set.770", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.736" }
%"struct.std::__1::__compressed_pair_elem.736" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.758" = type { %"class.std::__1::__compressed_pair.759" }
%"class.std::__1::__compressed_pair.759" = type { %"struct.std::__1::__compressed_pair_elem.760" }
%"struct.std::__1::__compressed_pair_elem.760" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.770" = type { %"class.std::__1::__tree.771" }
%"class.std::__1::__tree.771" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.776" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.779" }
%"class.v8::internal::TaggedImpl.779" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.778" }
%"class.v8::internal::TaggedImpl.778" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.780", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::RootIndexMap" = type { %"class.v8::internal::HeapObjectToIndexHashMap"* }
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.786", %"class.v8::internal::DetachableVector.787", %"class.v8::internal::DetachableVector.786", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.787" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.786" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.788", %"class.std::__1::vector.794", %"class.std::__1::unique_ptr.801", %"class.std::__1::vector.808", %"class.std::__1::unique_ptr.815", i64, %"class.std::__1::vector.821", %"class.std::__1::vector.829", %"class.std::__1::vector.837", i8, i8, i32 }
%"class.std::__1::unique_ptr.788" = type { %"class.std::__1::__compressed_pair.789" }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.794" = type { %"class.std::__1::__vector_base.795" }
%"class.std::__1::__vector_base.795" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.796" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.801" = type { %"class.std::__1::__compressed_pair.802" }
%"class.std::__1::__compressed_pair.802" = type { %"struct.std::__1::__compressed_pair_elem.803" }
%"struct.std::__1::__compressed_pair_elem.803" = type { %"class.v8::internal::GlobalHandles::NodeSpace.804"* }
%"class.v8::internal::GlobalHandles::NodeSpace.804" = type opaque
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.810" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.817" }
%"struct.std::__1::__compressed_pair_elem.817" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.821" = type { %"class.std::__1::__vector_base.822" }
%"class.std::__1::__vector_base.822" = type { %"struct.std::__1::pair.823"*, %"struct.std::__1::pair.823"*, %"class.std::__1::__compressed_pair.824" }
%"struct.std::__1::pair.823" = type opaque
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"struct.std::__1::pair.823"* }
%"class.std::__1::vector.829" = type { %"class.std::__1::__vector_base.830" }
%"class.std::__1::__vector_base.830" = type { %"struct.std::__1::pair.831"*, %"struct.std::__1::pair.831"*, %"class.std::__1::__compressed_pair.832" }
%"struct.std::__1::pair.831" = type opaque
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::pair.831"* }
%"class.std::__1::vector.837" = type { %"class.std::__1::__vector_base.838" }
%"class.std::__1::__vector_base.838" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.839" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.844", %"class.std::__1::vector" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.851" }
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.857" = type { %"struct.std::__1::__atomic_base.858" }
%"struct.std::__1::__atomic_base.858" = type { %"struct.std::__1::__cxx_atomic_impl.859" }
%"struct.std::__1::__cxx_atomic_impl.859" = type { %"struct.std::__1::__cxx_atomic_base_impl.860" }
%"struct.std::__1::__cxx_atomic_base_impl.860" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.867" = type { %"struct.std::__1::__atomic_base.868" }
%"struct.std::__1::__atomic_base.868" = type { %"struct.std::__1::__cxx_atomic_impl.869" }
%"struct.std::__1::__cxx_atomic_impl.869" = type { %"struct.std::__1::__cxx_atomic_base_impl.870" }
%"struct.std::__1::__cxx_atomic_base_impl.870" = type { i32 }
%"class.std::__1::unordered_map.872" = type { %"class.std::__1::__hash_table.873" }
%"class.std::__1::__hash_table.873" = type <{ %"class.std::__1::unique_ptr.874", %"class.std::__1::__compressed_pair.884", %"class.std::__1::__compressed_pair.889", %"class.std::__1::__compressed_pair.892", [4 x i8] }>
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876", %"struct.std::__1::__compressed_pair_elem.878" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.std::__1::__hash_node_base.877"** }
%"struct.std::__1::__hash_node_base.877" = type { %"struct.std::__1::__hash_node_base.877"* }
%"struct.std::__1::__compressed_pair_elem.878" = type { %"class.std::__1::__bucket_list_deallocator.879" }
%"class.std::__1::__bucket_list_deallocator.879" = type { %"class.std::__1::__compressed_pair.880" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.std::__1::__hash_node_base.877" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::atomic.211" = type { %"struct.std::__1::__atomic_base.212" }
%"struct.std::__1::__atomic_base.212" = type { %"struct.std::__1::__cxx_atomic_impl.213" }
%"struct.std::__1::__cxx_atomic_impl.213" = type { %"struct.std::__1::__cxx_atomic_base_impl.214" }
%"struct.std::__1::__cxx_atomic_base_impl.214" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.898", %"class.v8::internal::Handle.904", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.905", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.904" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.905" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.906", %"class.std::__1::vector.912", %"class.std::__1::unique_ptr.920", %"class.std::__1::unique_ptr.926", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.932", %"class.std::__1::vector.938", %"struct.std::__1::pair.946" }
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.912" = type { %"class.std::__1::__vector_base.913" }
%"class.std::__1::__vector_base.913" = type { %"class.std::__1::unique_ptr.914"*, %"class.std::__1::unique_ptr.914"*, %"class.std::__1::__compressed_pair.915" }
%"class.std::__1::unique_ptr.914" = type opaque
%"class.std::__1::__compressed_pair.915" = type { %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::unique_ptr.914"* }
%"class.std::__1::unique_ptr.920" = type { %"class.std::__1::__compressed_pair.921" }
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.938" = type { %"class.std::__1::__vector_base.939" }
%"class.std::__1::__vector_base.939" = type { %"struct.std::__1::pair.940"*, %"struct.std::__1::pair.940"*, %"class.std::__1::__compressed_pair.941" }
%"struct.std::__1::pair.940" = type opaque
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"struct.std::__1::pair.940"* }
%"struct.std::__1::pair.946" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.55"*, i16, i8*)*, i8* }
%"class.v8::Local.55" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.947" = type { %"class.std::__1::__compressed_pair.948" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.950", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.950" = type { %"class.std::__1::__hash_table.951" }
%"class.std::__1::__hash_table.951" = type <{ %"class.std::__1::unique_ptr.952", %"class.std::__1::__compressed_pair.962", %"class.std::__1::__compressed_pair.967", %"class.std::__1::__compressed_pair.971", [4 x i8] }>
%"class.std::__1::unique_ptr.952" = type { %"class.std::__1::__compressed_pair.953" }
%"class.std::__1::__compressed_pair.953" = type { %"struct.std::__1::__compressed_pair_elem.954", %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.954" = type { %"struct.std::__1::__hash_node_base.955"** }
%"struct.std::__1::__hash_node_base.955" = type { %"struct.std::__1::__hash_node_base.955"* }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.std::__1::__bucket_list_deallocator.957" }
%"class.std::__1::__bucket_list_deallocator.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"struct.std::__1::__hash_node_base.955" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::AstStringConstants" = type { %"class.v8::internal::Zone", %"class.v8::base::TemplateHashMapImpl.979", i64, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"*, %"class.v8::internal::AstRawString"* }
%"class.v8::base::TemplateHashMapImpl.979" = type { %"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<const v8::internal::AstRawString *, v8::base::NoHashMapValue, v8::internal::AstRawStringMapMatcher, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry.980"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.980" = type <{ %union.anon.1615, i32, [4 x i8] }>
%union.anon.1615 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::AstRawString" = type <{ %union.anon.981, %"class.v8::internal::Vector", i32, i8, [3 x i8] }>
%union.anon.981 = type { %"class.v8::internal::AstRawString"* }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.989" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.983"**, %"struct.std::__1::pair.983"**, %"struct.std::__1::pair.983"**, %"class.std::__1::__compressed_pair.984" }
%"struct.std::__1::pair.983" = type opaque
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"struct.std::__1::pair.983"** }
%"class.std::__1::__compressed_pair.989" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.994" = type { %"class.std::__1::__vector_base.995" }
%"class.std::__1::__vector_base.995" = type { %"class.v8::internal::Handle.996"*, %"class.v8::internal::Handle.996"*, %"class.std::__1::__compressed_pair.997" }
%"class.v8::internal::Handle.996" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.v8::internal::Handle.996"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap.1002" }
%"class.v8::internal::PointerToIndexHashMap.1002" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::base::TemplateHashMapImpl" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, unsigned int, v8::base::KeyEqualityMatcher<long>, v8::base::DefaultAllocationPolicy>::Impl" = type { %"struct.v8::base::TemplateHashMapEntry"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry" = type <{ i64, i32, i32, i8, [7 x i8] }>
%"class.v8::internal::HeapObjectToIndexHashMap" = type { %"class.v8::internal::PointerToIndexHashMap" }
%"class.v8::internal::PointerToIndexHashMap" = type { %"class.v8::base::TemplateHashMapImpl" }
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector.1003", [128 x i8] }
%"class.v8::internal::Vector.1003" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.862", i32, %"class.v8::Local.55" }
%"class.v8::Local.862" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.1004" = type { %"class.std::__1::__compressed_pair.1005" }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.844", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1010" = type { %"class.std::__1::__vector_base.1011" }
%"class.std::__1::__vector_base.1011" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1017" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1018" = type { %"class.std::__1::__hash_table.1019" }
%"class.std::__1::__hash_table.1019" = type <{ %"class.std::__1::unique_ptr.1020", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1035", %"class.std::__1::__compressed_pair.1038", [4 x i8] }>
%"class.std::__1::unique_ptr.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022", %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1023"** }
%"struct.std::__1::__hash_node_base.1023" = type { %"struct.std::__1::__hash_node_base.1023"* }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.std::__1::__bucket_list_deallocator.1025" }
%"class.std::__1::__bucket_list_deallocator.1025" = type { %"class.std::__1::__compressed_pair.1026" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.1031" }
%"struct.std::__1::__compressed_pair_elem.1031" = type { %"struct.std::__1::__hash_node_base.1023" }
%"class.std::__1::__compressed_pair.1035" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1038" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.582" = type { %"class.std::__1::__vector_base.583" }
%"class.std::__1::__vector_base.583" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.584" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.219" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1042", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1071", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1072", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1042" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1067, %union.anon.1069, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1067 = type { i64 }
%union.anon.1069 = type { i64 }
%"class.std::__1::weak_ptr.1071" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1072" = type { %"class.v8::PersistentBase.1073" }
%"class.v8::PersistentBase.1073" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1043", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1043" = type { %"class.std::__1::__hash_table.1044" }
%"class.std::__1::__hash_table.1044" = type <{ %"class.std::__1::unique_ptr.1045", %"class.std::__1::__compressed_pair.1055", %"class.std::__1::__compressed_pair.1060", %"class.std::__1::__compressed_pair.1063", [4 x i8] }>
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047", %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"struct.std::__1::__hash_node_base.1048"** }
%"struct.std::__1::__hash_node_base.1048" = type { %"struct.std::__1::__hash_node_base.1048"* }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.std::__1::__bucket_list_deallocator.1050" }
%"class.std::__1::__bucket_list_deallocator.1050" = type { %"class.std::__1::__compressed_pair.1051" }
%"class.std::__1::__compressed_pair.1051" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"struct.std::__1::__hash_node_base.1048" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1103", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1112" = type { %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.863", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.863" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1120" }
%"class.std::__1::unordered_map.1120" = type { %"class.std::__1::__hash_table.1121" }
%"class.std::__1::__hash_table.1121" = type <{ %"class.std::__1::unique_ptr.1122", %"class.std::__1::__compressed_pair.1132", %"class.std::__1::__compressed_pair.1137", %"class.std::__1::__compressed_pair.1140", [4 x i8] }>
%"class.std::__1::unique_ptr.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124", %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.std::__1::__hash_node_base.1125"** }
%"struct.std::__1::__hash_node_base.1125" = type { %"struct.std::__1::__hash_node_base.1125"* }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"class.std::__1::__bucket_list_deallocator.1127" }
%"class.std::__1::__bucket_list_deallocator.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"struct.std::__1::__hash_node_base.1125" }
%"class.std::__1::__compressed_pair.1137" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1140" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::atomic.1146" = type { %"struct.std::__1::__atomic_base.1147" }
%"struct.std::__1::__atomic_base.1147" = type { %"struct.std::__1::__cxx_atomic_impl.1148" }
%"struct.std::__1::__cxx_atomic_impl.1148" = type { %"struct.std::__1::__cxx_atomic_base_impl.1149" }
%"struct.std::__1::__cxx_atomic_base_impl.1149" = type { %"class.std::__1::vector.1150"* }
%"class.std::__1::vector.1150" = type { %"class.std::__1::__vector_base.1151" }
%"class.std::__1::__vector_base.1151" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1152" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"struct.v8::MemoryRange"* }
%"struct.v8::internal::StackFrame::State" = type { i64, i64, i64*, i64, i64*, i64* }
%"class.v8::internal::compiler::NodeObserver" = type <{ i32 (...)**, %"struct.std::__1::atomic.211", [7 x i8] }>
%"class.std::__1::vector.1157" = type { %"class.std::__1::__vector_base.1158" }
%"class.std::__1::__vector_base.1158" = type { %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"*, %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"*, %"class.std::__1::__compressed_pair.1159" }
%"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder" = type { %"class.v8::internal::Handle.18", %"class.v8::internal::Handle", %"struct.v8::internal::InliningPosition" }
%"struct.v8::internal::InliningPosition" = type <{ %"class.v8::internal::SourcePosition", i32, [4 x i8] }>
%"class.v8::internal::SourcePosition" = type { i64 }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { %"struct.v8::internal::OptimizedCompilationInfo::InlinedFunctionHolder"* }
%"class.v8::internal::Vector.1164" = type { i8*, i64 }
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { i8* }
%"class.v8::internal::TickCounter" = type { i64, %"class.v8::internal::LocalHeap"* }
%"class.std::__1::unique_ptr.1089" = type { %"class.std::__1::__compressed_pair.1090" }
%"class.std::__1::__compressed_pair.1090" = type { %"struct.std::__1::__compressed_pair_elem.1091" }
%"struct.std::__1::__compressed_pair_elem.1091" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::unique_ptr.780" = type { %"class.std::__1::__compressed_pair.781" }
%"class.std::__1::__compressed_pair.781" = type { %"struct.std::__1::__compressed_pair_elem.782" }
%"struct.std::__1::__compressed_pair_elem.782" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type { %"class.v8::internal::IdentityMapBase.base", %"class.v8::internal::ZoneAllocationPolicy" }
%"class.v8::internal::IdentityMapBase.base" = type <{ i32 (...)**, %"struct.v8::base::hash", [7 x i8], %"class.v8::internal::Heap"*, i32, i32, i32, i32, i64*, %"class.v8::internal::StrongRootsEntry"*, i64*, i8 }>
%"struct.v8::base::hash" = type { i8 }
%"class.v8::internal::ZoneAllocationPolicy" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::JSGraph" = type { %"class.v8::internal::compiler::MachineGraph", %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::JSOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::MachineGraph" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::MachineOperatorBuilder"*, %"class.v8::internal::compiler::CommonNodeCache", %"class.v8::internal::compiler::Node"* }
%"class.v8::internal::compiler::Graph" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, %"class.v8::internal::ZoneVector" }
%"class.v8::internal::ZoneVector" = type { %"class.std::__1::vector.1171" }
%"class.std::__1::vector.1171" = type { %"class.std::__1::__vector_base.1172" }
%"class.std::__1::__vector_base.1172" = type { %"class.v8::internal::compiler::GraphDecorator"**, %"class.v8::internal::compiler::GraphDecorator"**, %"class.std::__1::__compressed_pair.1173" }
%"class.v8::internal::compiler::GraphDecorator" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174", %"struct.std::__1::__compressed_pair_elem.1175" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"class.v8::internal::compiler::GraphDecorator"** }
%"struct.std::__1::__compressed_pair_elem.1175" = type { %"class.v8::internal::ZoneAllocator" }
%"class.v8::internal::ZoneAllocator" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::CommonOperatorBuilder" = type { %"struct.v8::internal::compiler::CommonOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::CommonOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::MachineOperatorBuilder" = type <{ %"class.v8::internal::Zone"*, %"struct.v8::internal::compiler::MachineOperatorGlobalCache"*, i8, [3 x i8], %"class.v8::base::Flags.1176", %"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements", [4 x i8] }>
%"struct.v8::internal::compiler::MachineOperatorGlobalCache" = type opaque
%"class.v8::base::Flags.1176" = type { i32 }
%"class.v8::internal::compiler::MachineOperatorBuilder::AlignmentRequirements" = type { i32, %"class.v8::base::EnumSet", %"class.v8::base::EnumSet" }
%"class.v8::base::EnumSet" = type { i32 }
%"class.v8::internal::compiler::CommonNodeCache" = type { %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.1200", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache", %"class.v8::internal::compiler::NodeCache.1200", %"class.v8::internal::compiler::NodeCache.1200", %"class.v8::internal::compiler::NodeCache.1200", %"class.v8::internal::compiler::NodeCache.1200", %"class.v8::internal::compiler::NodeCache.1200", %"class.v8::internal::compiler::NodeCache.1227", %"class.v8::internal::compiler::NodeCache.1254" }
%"class.v8::internal::compiler::NodeCache" = type { %"class.v8::internal::ZoneUnorderedMap" }
%"class.v8::internal::ZoneUnorderedMap" = type { %"class.std::__1::unordered_map.1177" }
%"class.std::__1::unordered_map.1177" = type { %"class.std::__1::__hash_table.1178" }
%"class.std::__1::__hash_table.1178" = type <{ %"class.std::__1::unique_ptr.1179", %"class.std::__1::__compressed_pair.1188", %"class.std::__1::__compressed_pair.1192", %"class.std::__1::__compressed_pair.1196", [4 x i8] }>
%"class.std::__1::unique_ptr.1179" = type { %"class.std::__1::__compressed_pair.1180" }
%"class.std::__1::__compressed_pair.1180" = type { %"struct.std::__1::__compressed_pair_elem.1181", %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1181" = type { %"struct.std::__1::__hash_node_base.1182"** }
%"struct.std::__1::__hash_node_base.1182" = type { %"struct.std::__1::__hash_node_base.1182"* }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"class.std::__1::__bucket_list_deallocator.1184" }
%"class.std::__1::__bucket_list_deallocator.1184" = type { %"class.std::__1::__compressed_pair.1185" }
%"class.std::__1::__compressed_pair.1185" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1186" }
%"struct.std::__1::__compressed_pair_elem.1186" = type { %"class.v8::internal::ZoneAllocator.1187" }
%"class.v8::internal::ZoneAllocator.1187" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189", %"struct.std::__1::__compressed_pair_elem.1190" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"struct.std::__1::__hash_node_base.1182" }
%"struct.std::__1::__compressed_pair_elem.1190" = type { %"class.v8::internal::ZoneAllocator.1191" }
%"class.v8::internal::ZoneAllocator.1191" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::compiler::NodeCache.1200" = type { %"class.v8::internal::ZoneUnorderedMap.1201" }
%"class.v8::internal::ZoneUnorderedMap.1201" = type { %"class.std::__1::unordered_map.1202" }
%"class.std::__1::unordered_map.1202" = type { %"class.std::__1::__hash_table.1203" }
%"class.std::__1::__hash_table.1203" = type <{ %"class.std::__1::unique_ptr.1204", %"class.std::__1::__compressed_pair.1213", %"class.std::__1::__compressed_pair.1217", %"class.std::__1::__compressed_pair.1221", [4 x i8] }>
%"class.std::__1::unique_ptr.1204" = type { %"class.std::__1::__compressed_pair.1205" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.1206", %"struct.std::__1::__compressed_pair_elem.1208" }
%"struct.std::__1::__compressed_pair_elem.1206" = type { %"struct.std::__1::__hash_node_base.1207"** }
%"struct.std::__1::__hash_node_base.1207" = type { %"struct.std::__1::__hash_node_base.1207"* }
%"struct.std::__1::__compressed_pair_elem.1208" = type { %"class.std::__1::__bucket_list_deallocator.1209" }
%"class.std::__1::__bucket_list_deallocator.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"class.v8::internal::ZoneAllocator.1212" }
%"class.v8::internal::ZoneAllocator.1212" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214", %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %"struct.std::__1::__hash_node_base.1207" }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.v8::internal::ZoneAllocator.1216" }
%"class.v8::internal::ZoneAllocator.1216" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::compiler::NodeCache.1227" = type { %"class.v8::internal::ZoneUnorderedMap.1228" }
%"class.v8::internal::ZoneUnorderedMap.1228" = type { %"class.std::__1::unordered_map.1229" }
%"class.std::__1::unordered_map.1229" = type { %"class.std::__1::__hash_table.1230" }
%"class.std::__1::__hash_table.1230" = type <{ %"class.std::__1::unique_ptr.1231", %"class.std::__1::__compressed_pair.1240", %"class.std::__1::__compressed_pair.1244", %"class.std::__1::__compressed_pair.1248", [4 x i8] }>
%"class.std::__1::unique_ptr.1231" = type { %"class.std::__1::__compressed_pair.1232" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.1233", %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1233" = type { %"struct.std::__1::__hash_node_base.1234"** }
%"struct.std::__1::__hash_node_base.1234" = type { %"struct.std::__1::__hash_node_base.1234"* }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.std::__1::__bucket_list_deallocator.1236" }
%"class.std::__1::__bucket_list_deallocator.1236" = type { %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.v8::internal::ZoneAllocator.1239" }
%"class.v8::internal::ZoneAllocator.1239" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.1241", %"struct.std::__1::__compressed_pair_elem.1242" }
%"struct.std::__1::__compressed_pair_elem.1241" = type { %"struct.std::__1::__hash_node_base.1234" }
%"struct.std::__1::__compressed_pair_elem.1242" = type { %"class.v8::internal::ZoneAllocator.1243" }
%"class.v8::internal::ZoneAllocator.1243" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::compiler::NodeCache.1254" = type { %"class.v8::internal::ZoneUnorderedMap.1255" }
%"class.v8::internal::ZoneUnorderedMap.1255" = type { %"class.std::__1::unordered_map.1256" }
%"class.std::__1::unordered_map.1256" = type { %"class.std::__1::__hash_table.1257" }
%"class.std::__1::__hash_table.1257" = type <{ %"class.std::__1::unique_ptr.1258", %"class.std::__1::__compressed_pair.1267", %"class.std::__1::__compressed_pair.1271", %"class.std::__1::__compressed_pair.1275", [4 x i8] }>
%"class.std::__1::unique_ptr.1258" = type { %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260", %"struct.std::__1::__compressed_pair_elem.1262" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"struct.std::__1::__hash_node_base.1261"** }
%"struct.std::__1::__hash_node_base.1261" = type { %"struct.std::__1::__hash_node_base.1261"* }
%"struct.std::__1::__compressed_pair_elem.1262" = type { %"class.std::__1::__bucket_list_deallocator.1263" }
%"class.std::__1::__bucket_list_deallocator.1263" = type { %"class.std::__1::__compressed_pair.1264" }
%"class.std::__1::__compressed_pair.1264" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1265" }
%"struct.std::__1::__compressed_pair_elem.1265" = type { %"class.v8::internal::ZoneAllocator.1266" }
%"class.v8::internal::ZoneAllocator.1266" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1267" = type { %"struct.std::__1::__compressed_pair_elem.1268", %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1268" = type { %"struct.std::__1::__hash_node_base.1261" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"class.v8::internal::ZoneAllocator.1270" }
%"class.v8::internal::ZoneAllocator.1270" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1275" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::compiler::JSOperatorBuilder" = type { %"struct.v8::internal::compiler::JSOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::JSOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::SimplifiedOperatorBuilder" = type { %"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache"*, %"class.v8::internal::Zone"* }
%"struct.v8::internal::compiler::SimplifiedOperatorGlobalCache" = type opaque
%"class.v8::internal::compiler::JSHeapBroker" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Zone"*, %"class.v8::base::Optional.1281", %"class.v8::internal::compiler::RefsMap"*, %"class.v8::internal::RootIndexMap", %"class.v8::internal::ZoneUnorderedSet", i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::unique_ptr.1089", %"class.v8::internal::LocalIsolate"*, %"class.std::__1::unique_ptr.780", i32, [4 x i8], %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::ZoneUnorderedMap.1309", %"class.v8::internal::ZoneUnorderedMap.1332", %"class.v8::internal::ZoneUnorderedMap.1355", %"class.v8::internal::ZoneVector.1378", %"class.v8::internal::ZoneMultimap", i32, [4 x i8] }>
%"class.v8::base::Optional.1281" = type { %"class.v8::base::internal::OptionalBase.1282" }
%"class.v8::base::internal::OptionalBase.1282" = type { %"struct.v8::base::internal::OptionalStorage.1283" }
%"struct.v8::base::internal::OptionalStorage.1283" = type { %"struct.v8::base::internal::OptionalStorageBase.1284" }
%"struct.v8::base::internal::OptionalStorageBase.1284" = type { i8, %union.anon.1285 }
%union.anon.1285 = type { %"class.v8::internal::compiler::NativeContextRef" }
%"class.v8::internal::compiler::NativeContextRef" = type { %"class.v8::internal::compiler::ContextRef" }
%"class.v8::internal::compiler::ContextRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::HeapObjectRef" = type { %"class.v8::internal::compiler::ObjectRef" }
%"class.v8::internal::compiler::ObjectRef" = type { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* }
%"class.v8::internal::compiler::ObjectData" = type opaque
%"class.v8::internal::compiler::RefsMap" = type { %"class.v8::base::TemplateHashMapImpl.1286" }
%"class.v8::base::TemplateHashMapImpl.1286" = type { %"struct.v8::base::TemplateHashMapImpl<unsigned long, v8::internal::compiler::ObjectData *, v8::internal::compiler::AddressMatcher, v8::internal::ZoneAllocationPolicy>::Impl" }
%"struct.v8::base::TemplateHashMapImpl<unsigned long, v8::internal::compiler::ObjectData *, v8::internal::compiler::AddressMatcher, v8::internal::ZoneAllocationPolicy>::Impl" = type { %"class.v8::internal::ZoneAllocationPolicy", %"struct.v8::base::TemplateHashMapEntry.1288"*, i32, i32 }
%"struct.v8::base::TemplateHashMapEntry.1288" = type opaque
%"class.v8::internal::ZoneUnorderedSet" = type { %"class.std::__1::unordered_set.1289" }
%"class.std::__1::unordered_set.1289" = type { %"class.std::__1::__hash_table.1290" }
%"class.std::__1::__hash_table.1290" = type <{ %"class.std::__1::unique_ptr.1291", %"class.std::__1::__compressed_pair.1300", %"class.std::__1::__compressed_pair.1304", %"class.std::__1::__compressed_pair.1306", [4 x i8] }>
%"class.std::__1::unique_ptr.1291" = type { %"class.std::__1::__compressed_pair.1292" }
%"class.std::__1::__compressed_pair.1292" = type { %"struct.std::__1::__compressed_pair_elem.1293", %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1293" = type { %"struct.std::__1::__hash_node_base.1294"** }
%"struct.std::__1::__hash_node_base.1294" = type { %"struct.std::__1::__hash_node_base.1294"* }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.std::__1::__bucket_list_deallocator.1296" }
%"class.std::__1::__bucket_list_deallocator.1296" = type { %"class.std::__1::__compressed_pair.1297" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"class.v8::internal::ZoneAllocator.1299" }
%"class.v8::internal::ZoneAllocator.1299" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1300" = type { %"struct.std::__1::__compressed_pair_elem.1301", %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1301" = type { %"struct.std::__1::__hash_node_base.1294" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"class.v8::internal::ZoneAllocator.1303" }
%"class.v8::internal::ZoneAllocator.1303" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1306" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::ZoneUnorderedMap.1309" = type { %"class.std::__1::unordered_map.1310" }
%"class.std::__1::unordered_map.1310" = type { %"class.std::__1::__hash_table.1311" }
%"class.std::__1::__hash_table.1311" = type <{ %"class.std::__1::unique_ptr.1312", %"class.std::__1::__compressed_pair.1321", %"class.std::__1::__compressed_pair.1325", %"class.std::__1::__compressed_pair.1328", [4 x i8] }>
%"class.std::__1::unique_ptr.1312" = type { %"class.std::__1::__compressed_pair.1313" }
%"class.std::__1::__compressed_pair.1313" = type { %"struct.std::__1::__compressed_pair_elem.1314", %"struct.std::__1::__compressed_pair_elem.1316" }
%"struct.std::__1::__compressed_pair_elem.1314" = type { %"struct.std::__1::__hash_node_base.1315"** }
%"struct.std::__1::__hash_node_base.1315" = type { %"struct.std::__1::__hash_node_base.1315"* }
%"struct.std::__1::__compressed_pair_elem.1316" = type { %"class.std::__1::__bucket_list_deallocator.1317" }
%"class.std::__1::__bucket_list_deallocator.1317" = type { %"class.std::__1::__compressed_pair.1318" }
%"class.std::__1::__compressed_pair.1318" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1319" }
%"struct.std::__1::__compressed_pair_elem.1319" = type { %"class.v8::internal::ZoneAllocator.1320" }
%"class.v8::internal::ZoneAllocator.1320" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1321" = type { %"struct.std::__1::__compressed_pair_elem.1322", %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1322" = type { %"struct.std::__1::__hash_node_base.1315" }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"class.v8::internal::ZoneAllocator.1324" }
%"class.v8::internal::ZoneAllocator.1324" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1328" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::ZoneUnorderedMap.1332" = type { %"class.std::__1::unordered_map.1333" }
%"class.std::__1::unordered_map.1333" = type { %"class.std::__1::__hash_table.1334" }
%"class.std::__1::__hash_table.1334" = type <{ %"class.std::__1::unique_ptr.1335", %"class.std::__1::__compressed_pair.1344", %"class.std::__1::__compressed_pair.1348", %"class.std::__1::__compressed_pair.1351", [4 x i8] }>
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337", %"struct.std::__1::__compressed_pair_elem.1339" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"struct.std::__1::__hash_node_base.1338"** }
%"struct.std::__1::__hash_node_base.1338" = type { %"struct.std::__1::__hash_node_base.1338"* }
%"struct.std::__1::__compressed_pair_elem.1339" = type { %"class.std::__1::__bucket_list_deallocator.1340" }
%"class.std::__1::__bucket_list_deallocator.1340" = type { %"class.std::__1::__compressed_pair.1341" }
%"class.std::__1::__compressed_pair.1341" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1342" }
%"struct.std::__1::__compressed_pair_elem.1342" = type { %"class.v8::internal::ZoneAllocator.1343" }
%"class.v8::internal::ZoneAllocator.1343" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345", %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"struct.std::__1::__hash_node_base.1338" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"class.v8::internal::ZoneAllocator.1347" }
%"class.v8::internal::ZoneAllocator.1347" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1348" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::ZoneUnorderedMap.1355" = type { %"class.std::__1::unordered_map.1356" }
%"class.std::__1::unordered_map.1356" = type { %"class.std::__1::__hash_table.1357" }
%"class.std::__1::__hash_table.1357" = type <{ %"class.std::__1::unique_ptr.1358", %"class.std::__1::__compressed_pair.1367", %"class.std::__1::__compressed_pair.1371", %"class.std::__1::__compressed_pair.1374", [4 x i8] }>
%"class.std::__1::unique_ptr.1358" = type { %"class.std::__1::__compressed_pair.1359" }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360", %"struct.std::__1::__compressed_pair_elem.1362" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"struct.std::__1::__hash_node_base.1361"** }
%"struct.std::__1::__hash_node_base.1361" = type { %"struct.std::__1::__hash_node_base.1361"* }
%"struct.std::__1::__compressed_pair_elem.1362" = type { %"class.std::__1::__bucket_list_deallocator.1363" }
%"class.std::__1::__bucket_list_deallocator.1363" = type { %"class.std::__1::__compressed_pair.1364" }
%"class.std::__1::__compressed_pair.1364" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1365" }
%"struct.std::__1::__compressed_pair_elem.1365" = type { %"class.v8::internal::ZoneAllocator.1366" }
%"class.v8::internal::ZoneAllocator.1366" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1367" = type { %"struct.std::__1::__compressed_pair_elem.1368", %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1368" = type { %"struct.std::__1::__hash_node_base.1361" }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"class.v8::internal::ZoneAllocator.1370" }
%"class.v8::internal::ZoneAllocator.1370" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1374" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::ZoneVector.1378" = type { %"class.std::__1::vector.1379" }
%"class.std::__1::vector.1379" = type { %"class.std::__1::__vector_base.1380" }
%"class.std::__1::__vector_base.1380" = type { %"class.v8::internal::compiler::ObjectData"**, %"class.v8::internal::compiler::ObjectData"**, %"class.std::__1::__compressed_pair.1381" }
%"class.std::__1::__compressed_pair.1381" = type { %"struct.std::__1::__compressed_pair_elem.1382", %"struct.std::__1::__compressed_pair_elem.1383" }
%"struct.std::__1::__compressed_pair_elem.1382" = type { %"class.v8::internal::compiler::ObjectData"** }
%"struct.std::__1::__compressed_pair_elem.1383" = type { %"class.v8::internal::ZoneAllocator.1384" }
%"class.v8::internal::ZoneAllocator.1384" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::ZoneMultimap" = type { %"class.std::__1::multimap" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.1385" }
%"class.std::__1::__tree.1385" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1386", %"class.std::__1::__compressed_pair.1389" }
%"class.std::__1::__compressed_pair.1386" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1387" }
%"struct.std::__1::__compressed_pair_elem.1387" = type { %"class.v8::internal::ZoneAllocator.1388" }
%"class.v8::internal::ZoneAllocator.1388" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1389" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::compiler::SourcePositionTable" = type { %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::SourcePositionTable::Decorator"*, %"class.v8::internal::SourcePosition", %"class.v8::internal::compiler::NodeAuxData" }
%"class.v8::internal::compiler::SourcePositionTable::Decorator" = type opaque
%"class.v8::internal::compiler::NodeAuxData" = type { %"class.v8::internal::ZoneVector.1393" }
%"class.v8::internal::ZoneVector.1393" = type { %"class.std::__1::vector.1394" }
%"class.std::__1::vector.1394" = type { %"class.std::__1::__vector_base.1395" }
%"class.std::__1::__vector_base.1395" = type { %"class.v8::internal::SourcePosition"*, %"class.v8::internal::SourcePosition"*, %"class.std::__1::__compressed_pair.1396" }
%"class.std::__1::__compressed_pair.1396" = type { %"struct.std::__1::__compressed_pair_elem.1397", %"struct.std::__1::__compressed_pair_elem.1398" }
%"struct.std::__1::__compressed_pair_elem.1397" = type { %"class.v8::internal::SourcePosition"* }
%"struct.std::__1::__compressed_pair_elem.1398" = type { %"class.v8::internal::ZoneAllocator.1399" }
%"class.v8::internal::ZoneAllocator.1399" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::compiler::Node" = type { %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Type", i32, i32, %"struct.v8::internal::compiler::Node::Use"* }
%"class.v8::internal::compiler::Operator" = type <{ i32 (...)**, i8*, i16, %"class.v8::base::Flags", i8, i32, i32, i32, i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.v8::base::Flags" = type { i8 }
%"class.v8::internal::compiler::Type" = type { i64 }
%"struct.v8::internal::compiler::Node::Use" = type { %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"*, i32 }
%"class.v8::internal::ZoneVector.1400" = type { %"class.std::__1::vector.1401" }
%"class.std::__1::vector.1401" = type { %"class.std::__1::__vector_base.1402" }
%"class.std::__1::__vector_base.1402" = type { %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**, %"class.std::__1::__compressed_pair.1403" }
%"class.std::__1::__compressed_pair.1403" = type { %"struct.std::__1::__compressed_pair_elem.1404", %"struct.std::__1::__compressed_pair_elem.1405" }
%"struct.std::__1::__compressed_pair_elem.1404" = type { %"class.v8::internal::compiler::Node"** }
%"struct.std::__1::__compressed_pair_elem.1405" = type { %"class.v8::internal::ZoneAllocator.1406" }
%"class.v8::internal::ZoneAllocator.1406" = type { %"class.v8::internal::Zone"* }
%"class.v8::internal::Signature" = type { i64, i64, %"class.v8::internal::wasm::ValueType"* }
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"struct.std::__1::array.1630" = type { [2 x %"class.v8::internal::compiler::Node"*] }
%"struct.std::__1::array.1629" = type { [1 x %"class.v8::internal::compiler::Node"*] }
%"class.v8::internal::StdoutStream" = type { %"class.v8::internal::OFStream.base", %"class.v8::base::LockGuard", %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream.base" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.v8::base::LockGuard" = type { %"class.v8::base::RecursiveMutex"* }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.v8::internal::compiler::Node::OutOfLineInputs" = type { %"class.v8::internal::compiler::Node"*, i32, i32 }
%"class.v8::internal::compiler::SharedFunctionInfoRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"struct.std::__1::array.1634" = type { [6 x %"class.v8::internal::compiler::Node"*] }
%"class.v8::internal::compiler::FrameStateFunctionInfo" = type { i32, i32, i32, %"class.v8::internal::Handle.18" }
%"class.v8::base::Optional.1585" = type { %"class.v8::base::internal::OptionalBase.1586" }
%"class.v8::base::internal::OptionalBase.1586" = type { %"struct.v8::base::internal::OptionalStorage.1587" }
%"struct.v8::base::internal::OptionalStorage.1587" = type { %"struct.v8::base::internal::OptionalStorageBase.1588" }
%"struct.v8::base::internal::OptionalStorageBase.1588" = type { i8, %union.anon.1589 }
%union.anon.1589 = type { %"class.v8::internal::compiler::SharedFunctionInfoRef" }
%"class.v8::base::Optional.1639" = type { %"class.v8::base::internal::OptionalBase.1640" }
%"class.v8::base::internal::OptionalBase.1640" = type { %"struct.v8::base::internal::OptionalStorage.1641" }
%"struct.v8::base::internal::OptionalStorage.1641" = type { %"struct.v8::base::internal::OptionalStorageBase.1642" }
%"struct.v8::base::internal::OptionalStorageBase.1642" = type { i8, %union.anon.1643 }
%union.anon.1643 = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::base::Optional.1646" = type { %"class.v8::base::internal::OptionalBase.1647" }
%"class.v8::base::internal::OptionalBase.1647" = type { %"struct.v8::base::internal::OptionalStorage.1648" }
%"struct.v8::base::internal::OptionalStorage.1648" = type { %"struct.v8::base::internal::OptionalStorageBase.1649" }
%"struct.v8::base::internal::OptionalStorageBase.1649" = type { i8, %union.anon.1650 }
%union.anon.1650 = type { %"class.v8::internal::compiler::FeedbackCellRef" }
%"class.v8::internal::compiler::FeedbackCellRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::JSFunctionRef" = type { %"class.v8::internal::compiler::JSObjectRef" }
%"class.v8::internal::compiler::JSObjectRef" = type { %"class.v8::internal::compiler::JSReceiverRef" }
%"class.v8::internal::compiler::JSReceiverRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::JSCreateClosureNode" = type { %"class.v8::internal::compiler::JSNodeWrapperBase" }
%"class.v8::internal::compiler::JSNodeWrapperBase" = type { %"class.v8::internal::compiler::NodeWrapper" }
%"class.v8::internal::compiler::NodeWrapper" = type { %"class.v8::internal::compiler::Node"* }
%"struct.std::__1::array.1651" = type { [3 x %"class.v8::internal::compiler::Node"*] }
%"struct.v8::internal::compiler::FieldAccess" = type <{ i8, [3 x i8], i32, %"class.v8::internal::MaybeHandle", %"class.v8::internal::MaybeHandle.1591", %"class.v8::internal::compiler::Type", %"class.v8::internal::MachineType", i8, i8, i32, %"struct.v8::internal::compiler::ConstFieldInfo", i8, [7 x i8] }>
%"class.v8::internal::MaybeHandle" = type { i64* }
%"class.v8::internal::MaybeHandle.1591" = type { i64* }
%"class.v8::internal::MachineType" = type { i8, i8 }
%"struct.v8::internal::compiler::ConstFieldInfo" = type { %"class.v8::internal::MaybeHandle.1591" }
%"class.v8::internal::compiler::JSWasmCallData" = type { i8, %"class.std::__1::vector.1592" }
%"class.std::__1::vector.1592" = type { i64*, i64, %"class.std::__1::__compressed_pair.1593" }
%"class.std::__1::__compressed_pair.1593" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::compiler::AllNodes" = type <{ %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1595", i8, [7 x i8] }>
%"class.v8::internal::ZoneVector.1595" = type { %"class.std::__1::vector.1596" }
%"class.std::__1::vector.1596" = type { i64*, i64, %"class.std::__1::__compressed_pair.1597" }
%"class.std::__1::__compressed_pair.1597" = type { %"struct.std::__1::__compressed_pair_elem.9", %"struct.std::__1::__compressed_pair_elem.1598" }
%"struct.std::__1::__compressed_pair_elem.1598" = type { %"class.v8::internal::ZoneAllocator.1599" }
%"class.v8::internal::ZoneAllocator.1599" = type { %"class.v8::internal::Zone"* }
%"struct.v8::internal::wasm::WasmModule" = type { %"class.std::__1::unique_ptr.1407", i32, i32, i8, i8, i8, i8, i8, i32, %"class.std::__1::vector.1413", i32, i32, i32, i32, i32, i32, i32, i32, %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", %"class.std::__1::vector.1427", %"class.std::__1::vector.1435", %"class.std::__1::vector.26", %"class.std::__1::vector.1441", %"class.std::__1::vector.1448", %"class.std::__1::vector.1455", %"class.std::__1::vector.1462", %"class.std::__1::vector.1469", %"class.std::__1::vector.1476", %"class.std::__1::vector.1483", %"class.std::__1::vector.1496", %"class.std::__1::unordered_map.1503", %"class.v8::internal::wasm::SignatureMap", i8, %"class.v8::internal::wasm::LazilyGeneratedNames", %"struct.v8::internal::wasm::WasmDebugSymbols", %"class.std::__1::unique_ptr.1565" }
%"class.std::__1::unique_ptr.1407" = type { %"class.std::__1::__compressed_pair.1408" }
%"class.std::__1::__compressed_pair.1408" = type { %"struct.std::__1::__compressed_pair_elem.1409" }
%"struct.std::__1::__compressed_pair_elem.1409" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::vector.1413" = type { %"class.std::__1::__vector_base.1414" }
%"class.std::__1::__vector_base.1414" = type { %"struct.v8::internal::wasm::WasmGlobal"*, %"struct.v8::internal::wasm::WasmGlobal"*, %"class.std::__1::__compressed_pair.1422" }
%"struct.v8::internal::wasm::WasmGlobal" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8], %"class.v8::internal::wasm::WasmInitExpr", %union.anon.1421, i8, i8, [2 x i8] }>
%"class.v8::internal::wasm::WasmInitExpr" = type { %"union.v8::internal::wasm::WasmInitExpr::Immediate", i32, %"class.std::__1::unique_ptr.1415" }
%"union.v8::internal::wasm::WasmInitExpr::Immediate" = type { i64, [8 x i8] }
%"class.std::__1::unique_ptr.1415" = type { %"class.std::__1::__compressed_pair.1416" }
%"class.std::__1::__compressed_pair.1416" = type { %"struct.std::__1::__compressed_pair_elem.1417" }
%"struct.std::__1::__compressed_pair_elem.1417" = type { %"class.v8::internal::wasm::WasmInitExpr"* }
%union.anon.1421 = type { i32 }
%"class.std::__1::__compressed_pair.1422" = type { %"struct.std::__1::__compressed_pair_elem.1423" }
%"struct.std::__1::__compressed_pair_elem.1423" = type { %"struct.v8::internal::wasm::WasmGlobal"* }
%"class.v8::internal::wasm::WireBytesRef" = type { i32, i32 }
%"class.std::__1::vector.1427" = type { %"class.std::__1::__vector_base.1428" }
%"class.std::__1::__vector_base.1428" = type { %"struct.v8::internal::wasm::TypeDefinition"*, %"struct.v8::internal::wasm::TypeDefinition"*, %"class.std::__1::__compressed_pair.1430" }
%"struct.v8::internal::wasm::TypeDefinition" = type { %union.anon.1429 }
%union.anon.1429 = type { %"class.v8::internal::Signature"* }
%"class.std::__1::__compressed_pair.1430" = type { %"struct.std::__1::__compressed_pair_elem.1431" }
%"struct.std::__1::__compressed_pair_elem.1431" = type { %"struct.v8::internal::wasm::TypeDefinition"* }
%"class.std::__1::vector.1435" = type { %"class.std::__1::__vector_base.1436" }
%"class.std::__1::__vector_base.1436" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.std::__1::vector.1441" = type { %"class.std::__1::__vector_base.1442" }
%"class.std::__1::__vector_base.1442" = type { %"struct.v8::internal::wasm::WasmFunction"*, %"struct.v8::internal::wasm::WasmFunction"*, %"class.std::__1::__compressed_pair.1443" }
%"struct.v8::internal::wasm::WasmFunction" = type <{ %"class.v8::internal::Signature"*, i32, i32, %"class.v8::internal::wasm::WireBytesRef", i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.1443" = type { %"struct.std::__1::__compressed_pair_elem.1444" }
%"struct.std::__1::__compressed_pair_elem.1444" = type { %"struct.v8::internal::wasm::WasmFunction"* }
%"class.std::__1::vector.1448" = type { %"class.std::__1::__vector_base.1449" }
%"class.std::__1::__vector_base.1449" = type { %"struct.v8::internal::wasm::WasmDataSegment"*, %"struct.v8::internal::wasm::WasmDataSegment"*, %"class.std::__1::__compressed_pair.1450" }
%"struct.v8::internal::wasm::WasmDataSegment" = type <{ %"class.v8::internal::wasm::WasmInitExpr", %"class.v8::internal::wasm::WireBytesRef", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1450" = type { %"struct.std::__1::__compressed_pair_elem.1451" }
%"struct.std::__1::__compressed_pair_elem.1451" = type { %"struct.v8::internal::wasm::WasmDataSegment"* }
%"class.std::__1::vector.1455" = type { %"class.std::__1::__vector_base.1456" }
%"class.std::__1::__vector_base.1456" = type { %"struct.v8::internal::wasm::WasmTable"*, %"struct.v8::internal::wasm::WasmTable"*, %"class.std::__1::__compressed_pair.1457" }
%"struct.v8::internal::wasm::WasmTable" = type { %"class.v8::internal::wasm::ValueType", i32, i32, i8, i8, i8, %"class.v8::internal::wasm::WasmInitExpr" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.1458" }
%"struct.std::__1::__compressed_pair_elem.1458" = type { %"struct.v8::internal::wasm::WasmTable"* }
%"class.std::__1::vector.1462" = type { %"class.std::__1::__vector_base.1463" }
%"class.std::__1::__vector_base.1463" = type { %"struct.v8::internal::wasm::WasmImport"*, %"struct.v8::internal::wasm::WasmImport"*, %"class.std::__1::__compressed_pair.1464" }
%"struct.v8::internal::wasm::WasmImport" = type { %"class.v8::internal::wasm::WireBytesRef", %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1464" = type { %"struct.std::__1::__compressed_pair_elem.1465" }
%"struct.std::__1::__compressed_pair_elem.1465" = type { %"struct.v8::internal::wasm::WasmImport"* }
%"class.std::__1::vector.1469" = type { %"class.std::__1::__vector_base.1470" }
%"class.std::__1::__vector_base.1470" = type { %"struct.v8::internal::wasm::WasmExport"*, %"struct.v8::internal::wasm::WasmExport"*, %"class.std::__1::__compressed_pair.1471" }
%"struct.v8::internal::wasm::WasmExport" = type { %"class.v8::internal::wasm::WireBytesRef", i8, i32 }
%"class.std::__1::__compressed_pair.1471" = type { %"struct.std::__1::__compressed_pair_elem.1472" }
%"struct.std::__1::__compressed_pair_elem.1472" = type { %"struct.v8::internal::wasm::WasmExport"* }
%"class.std::__1::vector.1476" = type { %"class.std::__1::__vector_base.1477" }
%"class.std::__1::__vector_base.1477" = type { %"struct.v8::internal::wasm::WasmException"*, %"struct.v8::internal::wasm::WasmException"*, %"class.std::__1::__compressed_pair.1478" }
%"struct.v8::internal::wasm::WasmException" = type { %"class.v8::internal::Signature"* }
%"class.std::__1::__compressed_pair.1478" = type { %"struct.std::__1::__compressed_pair_elem.1479" }
%"struct.std::__1::__compressed_pair_elem.1479" = type { %"struct.v8::internal::wasm::WasmException"* }
%"class.std::__1::vector.1483" = type { %"class.std::__1::__vector_base.1484" }
%"class.std::__1::__vector_base.1484" = type { %"struct.v8::internal::wasm::WasmElemSegment"*, %"struct.v8::internal::wasm::WasmElemSegment"*, %"class.std::__1::__compressed_pair.1491" }
%"struct.v8::internal::wasm::WasmElemSegment" = type <{ %"class.v8::internal::wasm::ValueType", i32, %"class.v8::internal::wasm::WasmInitExpr", %"class.std::__1::vector.1485", i32, [4 x i8] }>
%"class.std::__1::vector.1485" = type { %"class.std::__1::__vector_base.1486" }
%"class.std::__1::__vector_base.1486" = type { %"class.v8::internal::wasm::WasmInitExpr"*, %"class.v8::internal::wasm::WasmInitExpr"*, %"class.std::__1::__compressed_pair.1487" }
%"class.std::__1::__compressed_pair.1487" = type { %"struct.std::__1::__compressed_pair_elem.1417" }
%"class.std::__1::__compressed_pair.1491" = type { %"struct.std::__1::__compressed_pair_elem.1492" }
%"struct.std::__1::__compressed_pair_elem.1492" = type { %"struct.v8::internal::wasm::WasmElemSegment"* }
%"class.std::__1::vector.1496" = type { %"class.std::__1::__vector_base.1497" }
%"class.std::__1::__vector_base.1497" = type { %"struct.v8::internal::wasm::WasmCompilationHint"*, %"struct.v8::internal::wasm::WasmCompilationHint"*, %"class.std::__1::__compressed_pair.1498" }
%"struct.v8::internal::wasm::WasmCompilationHint" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.1498" = type { %"struct.std::__1::__compressed_pair_elem.1499" }
%"struct.std::__1::__compressed_pair_elem.1499" = type { %"struct.v8::internal::wasm::WasmCompilationHint"* }
%"class.std::__1::unordered_map.1503" = type { %"class.std::__1::__hash_table.1504" }
%"class.std::__1::__hash_table.1504" = type <{ %"class.std::__1::unique_ptr.1505", %"class.std::__1::__compressed_pair.1515", %"class.std::__1::__compressed_pair.1520", %"class.std::__1::__compressed_pair.1525", [4 x i8] }>
%"class.std::__1::unique_ptr.1505" = type { %"class.std::__1::__compressed_pair.1506" }
%"class.std::__1::__compressed_pair.1506" = type { %"struct.std::__1::__compressed_pair_elem.1507", %"struct.std::__1::__compressed_pair_elem.1509" }
%"struct.std::__1::__compressed_pair_elem.1507" = type { %"struct.std::__1::__hash_node_base.1508"** }
%"struct.std::__1::__hash_node_base.1508" = type { %"struct.std::__1::__hash_node_base.1508"* }
%"struct.std::__1::__compressed_pair_elem.1509" = type { %"class.std::__1::__bucket_list_deallocator.1510" }
%"class.std::__1::__bucket_list_deallocator.1510" = type { %"class.std::__1::__compressed_pair.1511" }
%"class.std::__1::__compressed_pair.1511" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1515" = type { %"struct.std::__1::__compressed_pair_elem.1516" }
%"struct.std::__1::__compressed_pair_elem.1516" = type { %"struct.std::__1::__hash_node_base.1508" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1525" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::wasm::SignatureMap" = type { i8, [7 x i8], %"class.std::__1::unordered_map.1531" }
%"class.std::__1::unordered_map.1531" = type { %"class.std::__1::__hash_table.1532" }
%"class.std::__1::__hash_table.1532" = type <{ %"class.std::__1::unique_ptr.1533", %"class.std::__1::__compressed_pair.1543", %"class.std::__1::__compressed_pair.1548", %"class.std::__1::__compressed_pair.1552", [4 x i8] }>
%"class.std::__1::unique_ptr.1533" = type { %"class.std::__1::__compressed_pair.1534" }
%"class.std::__1::__compressed_pair.1534" = type { %"struct.std::__1::__compressed_pair_elem.1535", %"struct.std::__1::__compressed_pair_elem.1537" }
%"struct.std::__1::__compressed_pair_elem.1535" = type { %"struct.std::__1::__hash_node_base.1536"** }
%"struct.std::__1::__hash_node_base.1536" = type { %"struct.std::__1::__hash_node_base.1536"* }
%"struct.std::__1::__compressed_pair_elem.1537" = type { %"class.std::__1::__bucket_list_deallocator.1538" }
%"class.std::__1::__bucket_list_deallocator.1538" = type { %"class.std::__1::__compressed_pair.1539" }
%"class.std::__1::__compressed_pair.1539" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1543" = type { %"struct.std::__1::__compressed_pair_elem.1544" }
%"struct.std::__1::__compressed_pair_elem.1544" = type { %"struct.std::__1::__hash_node_base.1536" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1552" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"class.v8::internal::wasm::LazilyGeneratedNames" = type { %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.1558" }
%"class.std::__1::unique_ptr.1558" = type { %"class.std::__1::__compressed_pair.1559" }
%"class.std::__1::__compressed_pair.1559" = type { %"struct.std::__1::__compressed_pair_elem.1560" }
%"struct.std::__1::__compressed_pair_elem.1560" = type { %"class.std::__1::unordered_map.1561"* }
%"class.std::__1::unordered_map.1561" = type opaque
%"struct.v8::internal::wasm::WasmDebugSymbols" = type { i32, %"class.v8::internal::wasm::WireBytesRef" }
%"class.std::__1::unique_ptr.1565" = type { %"class.std::__1::__compressed_pair.1566" }
%"class.std::__1::__compressed_pair.1566" = type { %"struct.std::__1::__compressed_pair_elem.1567" }
%"struct.std::__1::__compressed_pair_elem.1567" = type { %"class.v8::internal::wasm::AsmJsOffsetInformation"* }
%"class.v8::internal::wasm::AsmJsOffsetInformation" = type { %"class.v8::base::Mutex", %"class.v8::internal::OwnedVector.1568", %"class.std::__1::unique_ptr.1575" }
%"class.v8::internal::OwnedVector.1568" = type { %"class.std::__1::unique_ptr.1569", i64 }
%"class.std::__1::unique_ptr.1569" = type { %"class.std::__1::__compressed_pair.1570" }
%"class.std::__1::__compressed_pair.1570" = type { %"struct.std::__1::__compressed_pair_elem.1571" }
%"struct.std::__1::__compressed_pair_elem.1571" = type { i8* }
%"class.std::__1::unique_ptr.1575" = type { %"class.std::__1::__compressed_pair.1576" }
%"class.std::__1::__compressed_pair.1576" = type { %"struct.std::__1::__compressed_pair_elem.1577" }
%"struct.std::__1::__compressed_pair_elem.1577" = type { %"struct.v8::internal::wasm::AsmJsOffsets"* }
%"struct.v8::internal::wasm::AsmJsOffsets" = type opaque
%"struct.std::__1::array.1652" = type { [4 x %"class.v8::internal::compiler::Node"*] }
%"class.v8::base::Optional.1601" = type { %"class.v8::base::internal::OptionalBase.1602" }
%"class.v8::base::internal::OptionalBase.1602" = type { %"struct.v8::base::internal::OptionalStorage.1603" }
%"struct.v8::base::internal::OptionalStorage.1603" = type { %"struct.v8::base::internal::OptionalStorageBase.1604" }
%"struct.v8::base::internal::OptionalStorageBase.1604" = type { i8, %union.anon.1605 }
%union.anon.1605 = type { %"class.v8::internal::compiler::FeedbackVectorRef" }
%"class.v8::internal::compiler::FeedbackVectorRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::BytecodeArrayRef" = type { %"class.v8::internal::compiler::FixedArrayBaseRef" }
%"class.v8::internal::compiler::FixedArrayBaseRef" = type { %"class.v8::internal::compiler::HeapObjectRef" }
%"class.v8::internal::compiler::CallFrequency" = type { float }
%"struct.v8::internal::compiler::ObserveNodeInfo" = type { %"class.v8::internal::compiler::ObserveNodeManager"*, %"class.v8::internal::compiler::NodeObserver"* }
%"class.v8::internal::compiler::ObserveNodeManager" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::ZoneMap" }
%"class.v8::internal::ZoneMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.1607" }
%"class.std::__1::__tree.1607" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1608", %"class.std::__1::__compressed_pair.1611" }
%"class.std::__1::__compressed_pair.1608" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.1609" }
%"struct.std::__1::__compressed_pair_elem.1609" = type { %"class.v8::internal::ZoneAllocator.1610" }
%"class.v8::internal::ZoneAllocator.1610" = type { %"class.v8::internal::Zone"* }
%"class.std::__1::__compressed_pair.1611" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::compiler::JSGlobalProxyRef" = type { %"class.v8::internal::compiler::JSObjectRef" }
%"class.v8::internal::compiler::CallParameters" = type { i32, %"class.v8::internal::compiler::CallFrequency", %"struct.v8::internal::compiler::FeedbackSource" }
%"struct.v8::internal::compiler::FeedbackSource" = type <{ %"class.v8::internal::Handle.1584", %"class.v8::internal::FeedbackSlot", [4 x i8] }>
%"class.v8::internal::Handle.1584" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::FeedbackSlot" = type { i32 }
%"class.v8::internal::compiler::ConstructParameters" = type { i32, %"class.v8::internal::compiler::CallFrequency", %"struct.v8::internal::compiler::FeedbackSource" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.v8::internal::Brief" = type { i64 }

$_ZN2v88internal12StdoutStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal12StdoutStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD1Ev = comdat any

$_ZTv0_n24_N2v88internal12StdoutStreamD0Ev = comdat any

$_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE = comdat any

$_ZN2v88internal8compiler10TryMakeRefINS0_12FeedbackCellEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE = comdat any

$_ZN2v88internal8compiler10TryMakeRefINS0_18SharedFunctionInfoEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE = comdat any

$_ZTVN2v88internal12StdoutStreamE = comdat any

$_ZTTN2v88internal12StdoutStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = comdat any

$_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal25FLAG_trace_turbo_inliningE = external local_unnamed_addr global i8, align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Inlinee contains \00", align 1
@.str.2 = private unnamed_addr constant [41 x i8] c" calls without local exception handler; \00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"linking to surrounding exception handler.\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.6 = private unnamed_addr constant [31 x i8] c"function.has_feedback_vector()\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"Not inlining \00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c" into \00", align 1
@.str.9 = private unnamed_addr constant [43 x i8] c" because constructor is not constructable.\00", align 1
@.str.10 = private unnamed_addr constant [40 x i8] c" because callee is a class constructor.\00", align 1
@.str.11 = private unnamed_addr constant [68 x i8] c" because call has exceeded the maximum depth for function inlining.\00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"shared_info->is_compiled()\00", align 1
@.str.13 = private unnamed_addr constant [47 x i8] c" because it wasn't serialized for compilation.\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"Inlining \00", align 1
@.str.15 = private unnamed_addr constant [20 x i8] c" (inside try-block)\00", align 1
@.str.16 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.18 = private unnamed_addr constant [40 x i8] c"index < node->op()->ControlInputCount()\00", align 1
@.str.19 = private unnamed_addr constant [39 x i8] c"index < node->op()->EffectInputCount()\00", align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@_ZTVN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZN2v88internal12StdoutStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::StdoutStream"*)* @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal12StdoutStreamE = linkonce_odr hidden unnamed_addr constant [6 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTCN2v88internal12StdoutStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 88 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE = external unnamed_addr constant { [4 x i8*] }, align 8
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@.str.20 = private unnamed_addr constant [38 x i8] c"index < node->op()->ValueInputCount()\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"storage_.is_populated_\00", align 1
@.str.22 = private unnamed_addr constant [48 x i8] c"OperatorProperties::HasContextInput(node->op())\00", align 1
@.str.23 = private unnamed_addr constant [51 x i8] c"OperatorProperties::HasFrameStateInput(node->op())\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.25 = private unnamed_addr constant [9 x i8] c"Missing \00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"ObjectData for \00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.28 = private unnamed_addr constant [39 x i8] c"../../v8/src/compiler/js-heap-broker.h\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"IsHeapObject()\00", align 1
@.str.34 = private unnamed_addr constant [17 x i8] c"IsFeedbackCell()\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"IsSharedFunctionInfo()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler9JSInliner16InlineJSWasmCallEPNS1_4NodeES4_S4_S4_NS1_9StartNodeES4_S4_RKNS0_10ZoneVectorIS4_EE(%"class.v8::internal::compiler::JSInliner"* readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneVector.1400"* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %11 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %11, i64 1, i32 1
  %13 = bitcast i8** %12 to %"class.v8::internal::Signature"**
  %14 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %14, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = trunc i64 %16 to i32
  %18 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler9JSInliner10InlineCallEPNS1_4NodeES4_S4_S4_NS1_9StartNodeES4_S4_RKNS0_10ZoneVectorIS4_EEi(%"class.v8::internal::compiler::JSInliner"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"* %3, %"class.v8::internal::compiler::Node"* %4, %"class.v8::internal::compiler::Node"* %5, %"class.v8::internal::compiler::Node"* %6, %"class.v8::internal::compiler::Node"* %7, %"class.v8::internal::ZoneVector.1400"* dereferenceable(32) %8, i32 %17)
  ret %"class.v8::internal::compiler::Node"* %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler9JSInliner10InlineCallEPNS1_4NodeES4_S4_S4_NS1_9StartNodeES4_S4_RKNS0_10ZoneVectorIS4_EEi(%"class.v8::internal::compiler::JSInliner"* readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::ZoneVector.1400"* nocapture readonly dereferenceable(32), i32) local_unnamed_addr #0 align 2 {
  %11 = alloca %"struct.std::__1::array.1630", align 8
  %12 = alloca %"struct.std::__1::array.1629", align 8
  %13 = alloca %"class.v8::internal::StdoutStream", align 8
  %14 = alloca %"class.v8::internal::ZoneVector.1400", align 8
  %15 = alloca %"class.v8::internal::ZoneVector.1400", align 8
  %16 = alloca %"class.v8::internal::ZoneVector.1400", align 8
  %17 = alloca %"class.v8::internal::ZoneVector.1400", align 8
  %18 = alloca %"class.v8::internal::ZoneVector.1400", align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %20 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 7
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %25, label %24, !prof !2

24:                                               ; preds = %10
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0)) #9
  unreachable

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %20, i64 0, i32 5
  %27 = load i32, i32* %26, align 4
  %28 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %20) #10
  %29 = zext i1 %28 to i32
  %30 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %31 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %30) #10
  %32 = zext i1 %31 to i32
  %33 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %33, i64 0, i32 6
  %35 = load i32, i32* %34, align 8
  %36 = add i32 %27, %29
  %37 = add i32 %36, %32
  %38 = add i32 %37, %35
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %40 = load i32, i32* %39, align 4
  %41 = and i32 %40, 251658240
  %42 = icmp eq i32 %41, 251658240
  %43 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %44 = add i64 %43, 32
  br i1 %42, label %45, label %49

45:                                               ; preds = %25
  %46 = inttoptr i64 %44 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 16
  br label %49

49:                                               ; preds = %25, %45
  %50 = phi i64 [ %48, %45 ], [ %44, %25 ]
  %51 = inttoptr i64 %50 to %"class.v8::internal::compiler::Node"**
  %52 = sext i32 %38 to i64
  %53 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %51, i64 %52
  %54 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %53, align 8
  %55 = icmp sgt i32 %35, 0
  br i1 %55, label %57, label %56, !prof !2

56:                                               ; preds = %49
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0)) #9
  unreachable

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %33, i64 0, i32 5
  %59 = load i32, i32* %58, align 4
  %60 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %33) #10
  %61 = zext i1 %60 to i32
  %62 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %19, align 8
  %63 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %62) #10
  %64 = zext i1 %63 to i32
  %65 = add i32 %59, %61
  %66 = add i32 %65, %64
  %67 = load i32, i32* %39, align 4
  %68 = and i32 %67, 251658240
  %69 = icmp eq i32 %68, 251658240
  br i1 %69, label %70, label %74

70:                                               ; preds = %57
  %71 = inttoptr i64 %44 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 16
  br label %74

74:                                               ; preds = %57, %70
  %75 = phi i64 [ %73, %70 ], [ %44, %57 ]
  %76 = inttoptr i64 %75 to %"class.v8::internal::compiler::Node"**
  %77 = sext i32 %66 to i64
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %76, i64 %77
  %79 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 0
  %81 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %81, i64 0, i32 8
  %83 = load i32, i32* %82, align 8
  %84 = add nsw i32 %83, -3
  %85 = add nsw i32 %83, -2
  %86 = add nsw i32 %83, -1
  %87 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %5, i64 0, i32 4
  %88 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %87, align 8
  %89 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %88, null
  br i1 %89, label %98, label %90

90:                                               ; preds = %74
  %91 = icmp eq %"class.v8::internal::compiler::Node"* %4, null
  %92 = icmp eq %"class.v8::internal::compiler::Node"* %54, null
  %93 = icmp eq %"class.v8::internal::compiler::Node"* %79, null
  %94 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %95 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 0, i32 1
  %96 = sitofp i32 %9 to double
  %97 = inttoptr i64 %44 to i64*
  br label %100

98:                                               ; preds = %218, %74
  %99 = icmp eq %"class.v8::internal::compiler::Node"* %7, null
  br i1 %99, label %849, label %220

100:                                              ; preds = %218, %90
  %101 = phi %"struct.v8::internal::compiler::Node::Use"* [ %88, %90 ], [ %103, %218 ]
  %102 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %101, i64 0, i32 0
  %103 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %102, align 8
  %104 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %101, i64 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = lshr i32 %105, 1
  %107 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %101, i64 1
  %108 = zext i32 %106 to i64
  %109 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %107, i64 %108
  %110 = and i32 %105, 1
  %111 = icmp eq i32 %110, 0
  %112 = ptrtoint %"struct.v8::internal::compiler::Node::Use"* %109 to i64
  %113 = select i1 %111, i64 16, i64 32
  %114 = add i64 %113, %112
  %115 = inttoptr i64 %114 to %"class.v8::internal::compiler::Node"**
  %116 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %115, i64 %108
  br i1 %111, label %119, label %117

117:                                              ; preds = %100
  %118 = bitcast %"struct.v8::internal::compiler::Node::Use"* %109 to %"class.v8::internal::compiler::Node"*
  br label %122

119:                                              ; preds = %100
  %120 = bitcast %"struct.v8::internal::compiler::Node::Use"* %109 to %"class.v8::internal::compiler::Node"**
  %121 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %120, align 8
  br label %122

122:                                              ; preds = %117, %119
  %123 = phi %"class.v8::internal::compiler::Node"* [ %118, %117 ], [ %121, %119 ]
  %124 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %123, i64 0, i32 0
  %125 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %124, align 8
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %125, i64 0, i32 2
  %127 = load i16, i16* %126, align 8
  %128 = icmp eq i16 %127, 50
  br i1 %128, label %129, label %187

129:                                              ; preds = %122
  %130 = tail call i32 @_ZN2v88internal8compiler16ParameterIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %125) #10
  %131 = add nsw i32 %130, 1
  %132 = icmp sle i32 %130, %9
  %133 = icmp slt i32 %131, %84
  %134 = and i1 %132, %133
  br i1 %134, label %135, label %153

135:                                              ; preds = %129
  %136 = load i32, i32* %39, align 4
  %137 = and i32 %136, 251658240
  %138 = icmp eq i32 %137, 251658240
  br i1 %138, label %139, label %142

139:                                              ; preds = %135
  %140 = load i64, i64* %97, align 8
  %141 = add i64 %140, 16
  br label %142

142:                                              ; preds = %135, %139
  %143 = phi i64 [ %141, %139 ], [ %44, %135 ]
  %144 = inttoptr i64 %143 to %"class.v8::internal::compiler::Node"**
  %145 = sext i32 %131 to i64
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %144, i64 %145
  %147 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %146, align 8
  %148 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %95, align 8
  %149 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %148 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %150 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %150, i64 2
  %152 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %151, align 8
  tail call void %152(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %148, %"class.v8::internal::compiler::Node"* %123, %"class.v8::internal::compiler::Node"* %147) #10
  br label %218

153:                                              ; preds = %129
  %154 = icmp eq i32 %131, %84
  br i1 %154, label %155, label %161

155:                                              ; preds = %153
  %156 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %95, align 8
  %157 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %156 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %158 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %158, i64 2
  %160 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %159, align 8
  tail call void %160(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %156, %"class.v8::internal::compiler::Node"* %123, %"class.v8::internal::compiler::Node"* %2) #10
  br label %218

161:                                              ; preds = %153
  %162 = icmp eq i32 %131, %85
  br i1 %162, label %163, label %171

163:                                              ; preds = %161
  %164 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %94, align 8
  %165 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"* %164, double %96) #10
  %166 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %95, align 8
  %167 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %166 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %168 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %168, i64 2
  %170 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %169, align 8
  tail call void %170(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %166, %"class.v8::internal::compiler::Node"* %123, %"class.v8::internal::compiler::Node"* %165) #10
  br label %218

171:                                              ; preds = %161
  %172 = icmp eq i32 %131, %86
  br i1 %172, label %173, label %179

173:                                              ; preds = %171
  %174 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %95, align 8
  %175 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %174 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %176 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %175, align 8
  %177 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %176, i64 2
  %178 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %177, align 8
  tail call void %178(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %174, %"class.v8::internal::compiler::Node"* %123, %"class.v8::internal::compiler::Node"* %3) #10
  br label %218

179:                                              ; preds = %171
  %180 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %94, align 8
  %181 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph17UndefinedConstantEv(%"class.v8::internal::compiler::JSGraph"* %180) #10
  %182 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %95, align 8
  %183 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %182 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %184 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %183, align 8
  %185 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %184, i64 2
  %186 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %185, align 8
  tail call void %186(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %182, %"class.v8::internal::compiler::Node"* %123, %"class.v8::internal::compiler::Node"* %181) #10
  br label %218

187:                                              ; preds = %122
  %188 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties12IsEffectEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %101, %"class.v8::internal::compiler::Node"** %116) #10
  br i1 %188, label %189, label %197

189:                                              ; preds = %187
  %190 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, align 8
  %191 = icmp eq %"class.v8::internal::compiler::Node"* %190, %79
  br i1 %191, label %218, label %192

192:                                              ; preds = %189
  %193 = icmp eq %"class.v8::internal::compiler::Node"* %190, null
  br i1 %193, label %195, label %194

194:                                              ; preds = %192
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %190, %"struct.v8::internal::compiler::Node::Use"* nonnull %101) #10
  br label %195

195:                                              ; preds = %194, %192
  store %"class.v8::internal::compiler::Node"* %79, %"class.v8::internal::compiler::Node"** %116, align 8
  br i1 %93, label %218, label %196

196:                                              ; preds = %195
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %79, %"struct.v8::internal::compiler::Node::Use"* nonnull %101) #10
  br label %218

197:                                              ; preds = %187
  %198 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %101, %"class.v8::internal::compiler::Node"** %116) #10
  br i1 %198, label %199, label %207

199:                                              ; preds = %197
  %200 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, align 8
  %201 = icmp eq %"class.v8::internal::compiler::Node"* %200, %54
  br i1 %201, label %218, label %202

202:                                              ; preds = %199
  %203 = icmp eq %"class.v8::internal::compiler::Node"* %200, null
  br i1 %203, label %205, label %204

204:                                              ; preds = %202
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %200, %"struct.v8::internal::compiler::Node::Use"* nonnull %101) #10
  br label %205

205:                                              ; preds = %204, %202
  store %"class.v8::internal::compiler::Node"* %54, %"class.v8::internal::compiler::Node"** %116, align 8
  br i1 %92, label %218, label %206

206:                                              ; preds = %205
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %54, %"struct.v8::internal::compiler::Node::Use"* nonnull %101) #10
  br label %218

207:                                              ; preds = %197
  %208 = tail call zeroext i1 @_ZN2v88internal8compiler14NodeProperties16IsFrameStateEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"* nonnull %101, %"class.v8::internal::compiler::Node"** %116) #10
  br i1 %208, label %209, label %217

209:                                              ; preds = %207
  %210 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %116, align 8
  %211 = icmp eq %"class.v8::internal::compiler::Node"* %210, %4
  br i1 %211, label %218, label %212

212:                                              ; preds = %209
  %213 = icmp eq %"class.v8::internal::compiler::Node"* %210, null
  br i1 %213, label %215, label %214

214:                                              ; preds = %212
  tail call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %210, %"struct.v8::internal::compiler::Node::Use"* nonnull %101) #10
  br label %215

215:                                              ; preds = %214, %212
  store %"class.v8::internal::compiler::Node"* %4, %"class.v8::internal::compiler::Node"** %116, align 8
  br i1 %91, label %218, label %216

216:                                              ; preds = %215
  tail call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %4, %"struct.v8::internal::compiler::Node::Use"* nonnull %101) #10
  br label %218

217:                                              ; preds = %207
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #9
  unreachable

218:                                              ; preds = %216, %215, %209, %206, %205, %199, %196, %195, %189, %142, %163, %179, %173, %155
  %219 = icmp eq %"struct.v8::internal::compiler::Node::Use"* %103, null
  br i1 %219, label %98, label %100

220:                                              ; preds = %98
  %221 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %8, i64 0, i32 0, i32 0, i32 1
  %222 = bitcast %"class.v8::internal::compiler::Node"*** %221 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = bitcast %"class.v8::internal::ZoneVector.1400"* %8 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = sub i64 %223, %225
  %227 = lshr exact i64 %226, 3
  %228 = trunc i64 %227 to i32
  %229 = icmp slt i32 %228, 1
  %230 = load i8, i8* @_ZN2v88internal25FLAG_trace_turbo_inliningE, align 1
  %231 = icmp eq i8 %230, 0
  %232 = or i1 %231, %229
  %233 = inttoptr i64 %225 to %"class.v8::internal::compiler::Node"**
  %234 = inttoptr i64 %223 to %"class.v8::internal::compiler::Node"**
  br i1 %232, label %258, label %235

235:                                              ; preds = %220
  %236 = bitcast %"class.v8::internal::StdoutStream"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %236) #10
  %237 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %13, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %237, align 8
  %238 = bitcast %"class.v8::internal::StdoutStream"* %13 to %"class.v8::internal::OFStream"*
  %239 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %238, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %239) #10
  %240 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %13, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %240, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %237, align 8
  %241 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %242 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %13, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %241, %"class.v8::base::RecursiveMutex"** %242, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %241) #10
  %243 = bitcast %"class.v8::internal::StdoutStream"* %13 to %"class.std::__1::basic_ostream"*
  %244 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %243, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i64 17) #10
  %245 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %243, i32 %228) #10
  %246 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %243, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.2, i64 0, i64 0), i64 40) #10
  %247 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %243, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.3, i64 0, i64 0), i64 41) #10
  %248 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %243, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  %249 = bitcast %"class.v8::internal::StdoutStream"* %13 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %249, align 8
  %250 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %13, i64 0, i32 2
  %251 = bitcast %"class.std::__1::basic_ios.base"* %250 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %251, align 8
  %252 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %242, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %252) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %249, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %251, align 8
  %253 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %13, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %253) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %243, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %254 = bitcast %"class.std::__1::basic_ios.base"* %250 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %254) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %236) #10
  %255 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %8, i64 0, i32 0, i32 0, i32 0
  %256 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %255, align 8
  %257 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %221, align 8
  br label %258

258:                                              ; preds = %220, %235
  %259 = phi %"class.v8::internal::compiler::Node"** [ %234, %220 ], [ %257, %235 ]
  %260 = phi %"class.v8::internal::compiler::Node"** [ %233, %220 ], [ %256, %235 ]
  %261 = bitcast %"class.v8::internal::ZoneVector.1400"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %261) #10
  %262 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 1
  %263 = bitcast %"class.v8::internal::Zone"** %262 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %14, i64 0, i32 0, i32 0, i32 2, i32 1
  %266 = bitcast %"struct.std::__1::__compressed_pair_elem.1405"* %265 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %261, i8 0, i64 24, i1 false) #10
  store i64 %264, i64* %266, align 8
  %267 = icmp eq %"class.v8::internal::compiler::Node"** %260, %259
  br i1 %267, label %282, label %268

268:                                              ; preds = %258
  %269 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %270 = bitcast %"struct.std::__1::array.1629"* %12 to i8*
  %271 = getelementptr inbounds %"struct.std::__1::array.1629", %"struct.std::__1::array.1629"* %12, i64 0, i32 0, i64 0
  %272 = bitcast %"struct.std::__1::array.1630"* %11 to i8*
  %273 = getelementptr inbounds %"struct.std::__1::array.1630", %"struct.std::__1::array.1630"* %11, i64 0, i32 0, i64 0
  %274 = getelementptr inbounds %"struct.std::__1::array.1630", %"struct.std::__1::array.1630"* %11, i64 0, i32 0, i64 1
  %275 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %14, i64 0, i32 0, i32 0, i32 1
  %276 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %14, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %277 = bitcast %"class.v8::internal::compiler::Node"*** %275 to i64*
  %278 = bitcast %"class.v8::internal::ZoneVector.1400"* %14 to i64*
  %279 = bitcast %"class.v8::internal::compiler::Node"*** %276 to i64*
  %280 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %14, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %281 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %14, i64 0, i32 0, i32 0, i32 0
  br label %286

282:                                              ; preds = %530, %258
  %283 = icmp sgt i32 %228, 0
  %284 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %285 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %284, align 8
  br i1 %283, label %536, label %821

286:                                              ; preds = %534, %268
  %287 = phi %"class.v8::internal::compiler::Node"** [ null, %268 ], [ %535, %534 ]
  %288 = phi %"class.v8::internal::compiler::Node"** [ null, %268 ], [ %531, %534 ]
  %289 = phi %"class.v8::internal::compiler::Node"** [ %260, %268 ], [ %532, %534 ]
  %290 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %289, align 8
  %291 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %269, align 8
  %292 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %291, i64 0, i32 0, i32 0
  %293 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %292, align 8
  %294 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %291, i64 0, i32 0, i32 1
  %295 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %294, align 8
  %296 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9IfSuccessEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %295) #10
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %270) #10
  store %"class.v8::internal::compiler::Node"* %290, %"class.v8::internal::compiler::Node"** %271, align 8
  %297 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %293, %"class.v8::internal::compiler::Operator"* %296, i32 1, %"class.v8::internal::compiler::Node"** nonnull %271, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %270) #10
  call void @_ZN2v88internal8compiler14NodeProperties11ReplaceUsesEPNS1_4NodeES4_S4_S4_S4_(%"class.v8::internal::compiler::Node"* %290, %"class.v8::internal::compiler::Node"* %290, %"class.v8::internal::compiler::Node"* %290, %"class.v8::internal::compiler::Node"* %297, %"class.v8::internal::compiler::Node"* null) #10
  call void @_ZN2v88internal8compiler14NodeProperties19ReplaceControlInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %297, %"class.v8::internal::compiler::Node"* %290, i32 0) #10
  %298 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %269, align 8
  %299 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %298, i64 0, i32 0, i32 0
  %300 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %299, align 8
  %301 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %298, i64 0, i32 0, i32 1
  %302 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %301, align 8
  %303 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder11IfExceptionEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %302) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %272) #10
  store %"class.v8::internal::compiler::Node"* %290, %"class.v8::internal::compiler::Node"** %273, align 8
  store %"class.v8::internal::compiler::Node"* %290, %"class.v8::internal::compiler::Node"** %274, align 8
  %304 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %300, %"class.v8::internal::compiler::Operator"* %303, i32 2, %"class.v8::internal::compiler::Node"** nonnull %273, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %272) #10
  %305 = ptrtoint %"class.v8::internal::compiler::Node"* %304 to i64
  %306 = icmp eq %"class.v8::internal::compiler::Node"** %288, %287
  br i1 %306, label %311, label %307

307:                                              ; preds = %286
  %308 = bitcast %"class.v8::internal::compiler::Node"** %288 to i64*
  store i64 %305, i64* %308, align 8
  %309 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %288, i64 1
  %310 = ptrtoint %"class.v8::internal::compiler::Node"** %309 to i64
  store i64 %310, i64* %277, align 8
  br label %530

311:                                              ; preds = %286
  %312 = ptrtoint %"class.v8::internal::compiler::Node"** %287 to i64
  %313 = load i64, i64* %278, align 8
  %314 = sub i64 %312, %313
  %315 = ashr exact i64 %314, 3
  %316 = add nsw i64 %315, 1
  %317 = icmp ugt i64 %316, 268435455
  br i1 %317, label %318, label %320

318:                                              ; preds = %311
  %319 = bitcast %"class.v8::internal::ZoneVector.1400"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %319) #9
  unreachable

320:                                              ; preds = %311
  %321 = icmp ult i64 %315, 134217727
  br i1 %321, label %322, label %327

322:                                              ; preds = %320
  %323 = ashr exact i64 %314, 2
  %324 = icmp ult i64 %323, %316
  %325 = select i1 %324, i64 %316, i64 %323
  %326 = icmp eq i64 %325, 0
  br i1 %326, label %344, label %327

327:                                              ; preds = %322, %320
  %328 = phi i64 [ %325, %322 ], [ 268435455, %320 ]
  %329 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %280, align 8
  %330 = shl i64 %328, 3
  %331 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %329, i64 0, i32 2
  %332 = load i64, i64* %331, align 8
  %333 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %329, i64 0, i32 3
  %334 = load i64, i64* %333, align 8
  %335 = sub i64 %334, %332
  %336 = icmp ugt i64 %330, %335
  br i1 %336, label %337, label %339, !prof !3

337:                                              ; preds = %327
  %338 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %329, i64 %330) #10
  br label %341

339:                                              ; preds = %327
  %340 = add i64 %332, %330
  store i64 %340, i64* %331, align 8
  br label %341

341:                                              ; preds = %339, %337
  %342 = phi i64 [ %338, %337 ], [ %332, %339 ]
  %343 = inttoptr i64 %342 to %"class.v8::internal::compiler::Node"**
  br label %344

344:                                              ; preds = %341, %322
  %345 = phi i64 [ %328, %341 ], [ 0, %322 ]
  %346 = phi %"class.v8::internal::compiler::Node"** [ %343, %341 ], [ null, %322 ]
  %347 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 %315
  %348 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 %345
  %349 = ptrtoint %"class.v8::internal::compiler::Node"** %348 to i64
  %350 = bitcast %"class.v8::internal::compiler::Node"** %347 to i64*
  store i64 %305, i64* %350, align 8
  %351 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %347, i64 1
  %352 = ptrtoint %"class.v8::internal::compiler::Node"** %351 to i64
  %353 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %281, align 8
  %354 = ptrtoint %"class.v8::internal::compiler::Node"** %353 to i64
  %355 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %275, align 8
  %356 = icmp eq %"class.v8::internal::compiler::Node"** %355, %353
  br i1 %356, label %527, label %357

357:                                              ; preds = %344
  %358 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %355, i64 -1
  %359 = ptrtoint %"class.v8::internal::compiler::Node"** %358 to i64
  %360 = sub i64 %359, %354
  %361 = lshr i64 %360, 3
  %362 = add nuw nsw i64 %361, 1
  %363 = icmp ult i64 %362, 4
  br i1 %363, label %457, label %364

364:                                              ; preds = %357
  %365 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %346, i64 -1
  %366 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %355, i64 -1
  %367 = ptrtoint %"class.v8::internal::compiler::Node"** %366 to i64
  %368 = sub i64 %367, %354
  %369 = lshr i64 %368, 3
  %370 = sub nsw i64 %315, %369
  %371 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %365, i64 %370
  %372 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %355, i64 -1
  %373 = sub nsw i64 0, %369
  %374 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %372, i64 %373
  %375 = icmp ult %"class.v8::internal::compiler::Node"** %371, %355
  %376 = icmp ult %"class.v8::internal::compiler::Node"** %374, %347
  %377 = and i1 %375, %376
  br i1 %377, label %457, label %378

378:                                              ; preds = %364
  %379 = and i64 %362, 4611686018427387900
  %380 = sub nsw i64 0, %379
  %381 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %347, i64 %380
  %382 = sub nsw i64 0, %379
  %383 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %355, i64 %382
  %384 = add nsw i64 %379, -4
  %385 = lshr exact i64 %384, 2
  %386 = add nuw nsw i64 %385, 1
  %387 = and i64 %386, 1
  %388 = icmp eq i64 %384, 0
  br i1 %388, label %433, label %389

389:                                              ; preds = %378
  %390 = sub nuw nsw i64 %386, %387
  %391 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %347, i64 -1
  %392 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %355, i64 -1
  %393 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %347, i64 -1
  %394 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %355, i64 -1
  br label %395

395:                                              ; preds = %395, %389
  %396 = phi i64 [ 0, %389 ], [ %430, %395 ]
  %397 = phi i64 [ %390, %389 ], [ %431, %395 ]
  %398 = sub i64 0, %396
  %399 = sub i64 0, %396
  %400 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %391, i64 %398
  %401 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %392, i64 %399
  %402 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %401, i64 -1
  %403 = bitcast %"class.v8::internal::compiler::Node"** %402 to <2 x i64>*
  %404 = load <2 x i64>, <2 x i64>* %403, align 8, !alias.scope !4
  %405 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %401, i64 -2
  %406 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %405, i64 -1
  %407 = bitcast %"class.v8::internal::compiler::Node"** %406 to <2 x i64>*
  %408 = load <2 x i64>, <2 x i64>* %407, align 8, !alias.scope !4
  %409 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %400, i64 -1
  %410 = bitcast %"class.v8::internal::compiler::Node"** %409 to <2 x i64>*
  store <2 x i64> %404, <2 x i64>* %410, align 8, !alias.scope !7, !noalias !4
  %411 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %400, i64 -2
  %412 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %411, i64 -1
  %413 = bitcast %"class.v8::internal::compiler::Node"** %412 to <2 x i64>*
  store <2 x i64> %408, <2 x i64>* %413, align 8, !alias.scope !7, !noalias !4
  %414 = sub nuw nsw i64 -4, %396
  %415 = sub nuw nsw i64 -4, %396
  %416 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %393, i64 %414
  %417 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %394, i64 %415
  %418 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %417, i64 -1
  %419 = bitcast %"class.v8::internal::compiler::Node"** %418 to <2 x i64>*
  %420 = load <2 x i64>, <2 x i64>* %419, align 8, !alias.scope !4
  %421 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %417, i64 -2
  %422 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %421, i64 -1
  %423 = bitcast %"class.v8::internal::compiler::Node"** %422 to <2 x i64>*
  %424 = load <2 x i64>, <2 x i64>* %423, align 8, !alias.scope !4
  %425 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %416, i64 -1
  %426 = bitcast %"class.v8::internal::compiler::Node"** %425 to <2 x i64>*
  store <2 x i64> %420, <2 x i64>* %426, align 8, !alias.scope !7, !noalias !4
  %427 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %416, i64 -2
  %428 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %427, i64 -1
  %429 = bitcast %"class.v8::internal::compiler::Node"** %428 to <2 x i64>*
  store <2 x i64> %424, <2 x i64>* %429, align 8, !alias.scope !7, !noalias !4
  %430 = add i64 %396, 8
  %431 = add i64 %397, -2
  %432 = icmp eq i64 %431, 0
  br i1 %432, label %433, label %395, !llvm.loop !9

433:                                              ; preds = %395, %378
  %434 = phi i64 [ 0, %378 ], [ %430, %395 ]
  %435 = icmp eq i64 %387, 0
  br i1 %435, label %455, label %436

436:                                              ; preds = %433
  %437 = sub i64 0, %434
  %438 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %347, i64 -1
  %439 = sub i64 0, %434
  %440 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %355, i64 -1
  %441 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %438, i64 %437
  %442 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %440, i64 %439
  %443 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %442, i64 -1
  %444 = bitcast %"class.v8::internal::compiler::Node"** %443 to <2 x i64>*
  %445 = load <2 x i64>, <2 x i64>* %444, align 8, !alias.scope !4
  %446 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %442, i64 -2
  %447 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %446, i64 -1
  %448 = bitcast %"class.v8::internal::compiler::Node"** %447 to <2 x i64>*
  %449 = load <2 x i64>, <2 x i64>* %448, align 8, !alias.scope !4
  %450 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %441, i64 -1
  %451 = bitcast %"class.v8::internal::compiler::Node"** %450 to <2 x i64>*
  store <2 x i64> %445, <2 x i64>* %451, align 8, !alias.scope !7, !noalias !4
  %452 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %441, i64 -2
  %453 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %452, i64 -1
  %454 = bitcast %"class.v8::internal::compiler::Node"** %453 to <2 x i64>*
  store <2 x i64> %449, <2 x i64>* %454, align 8, !alias.scope !7, !noalias !4
  br label %455

455:                                              ; preds = %433, %436
  %456 = icmp eq i64 %362, %379
  br i1 %456, label %527, label %457

457:                                              ; preds = %455, %364, %357
  %458 = phi %"class.v8::internal::compiler::Node"** [ %347, %364 ], [ %347, %357 ], [ %381, %455 ]
  %459 = phi %"class.v8::internal::compiler::Node"** [ %355, %364 ], [ %355, %357 ], [ %383, %455 ]
  %460 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  %461 = ptrtoint %"class.v8::internal::compiler::Node"** %460 to i64
  %462 = sub i64 %461, %354
  %463 = lshr i64 %462, 3
  %464 = add nuw nsw i64 %463, 1
  %465 = and i64 %464, 7
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %478, label %467

467:                                              ; preds = %457, %467
  %468 = phi %"class.v8::internal::compiler::Node"** [ %471, %467 ], [ %458, %457 ]
  %469 = phi %"class.v8::internal::compiler::Node"** [ %472, %467 ], [ %459, %457 ]
  %470 = phi i64 [ %476, %467 ], [ %465, %457 ]
  %471 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %468, i64 -1
  %472 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %469, i64 -1
  %473 = bitcast %"class.v8::internal::compiler::Node"** %472 to i64*
  %474 = load i64, i64* %473, align 8
  %475 = bitcast %"class.v8::internal::compiler::Node"** %471 to i64*
  store i64 %474, i64* %475, align 8
  %476 = add i64 %470, -1
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %478, label %467, !llvm.loop !11

478:                                              ; preds = %467, %457
  %479 = phi %"class.v8::internal::compiler::Node"** [ undef, %457 ], [ %471, %467 ]
  %480 = phi %"class.v8::internal::compiler::Node"** [ %458, %457 ], [ %471, %467 ]
  %481 = phi %"class.v8::internal::compiler::Node"** [ %459, %457 ], [ %472, %467 ]
  %482 = icmp ult i64 %462, 56
  br i1 %482, label %527, label %483

483:                                              ; preds = %478, %483
  %484 = phi %"class.v8::internal::compiler::Node"** [ %521, %483 ], [ %480, %478 ]
  %485 = phi %"class.v8::internal::compiler::Node"** [ %522, %483 ], [ %481, %478 ]
  %486 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %484, i64 -1
  %487 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %485, i64 -1
  %488 = bitcast %"class.v8::internal::compiler::Node"** %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = bitcast %"class.v8::internal::compiler::Node"** %486 to i64*
  store i64 %489, i64* %490, align 8
  %491 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %484, i64 -2
  %492 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %485, i64 -2
  %493 = bitcast %"class.v8::internal::compiler::Node"** %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = bitcast %"class.v8::internal::compiler::Node"** %491 to i64*
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %484, i64 -3
  %497 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %485, i64 -3
  %498 = bitcast %"class.v8::internal::compiler::Node"** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast %"class.v8::internal::compiler::Node"** %496 to i64*
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %484, i64 -4
  %502 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %485, i64 -4
  %503 = bitcast %"class.v8::internal::compiler::Node"** %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.v8::internal::compiler::Node"** %501 to i64*
  store i64 %504, i64* %505, align 8
  %506 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %484, i64 -5
  %507 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %485, i64 -5
  %508 = bitcast %"class.v8::internal::compiler::Node"** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"class.v8::internal::compiler::Node"** %506 to i64*
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %484, i64 -6
  %512 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %485, i64 -6
  %513 = bitcast %"class.v8::internal::compiler::Node"** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast %"class.v8::internal::compiler::Node"** %511 to i64*
  store i64 %514, i64* %515, align 8
  %516 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %484, i64 -7
  %517 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %485, i64 -7
  %518 = bitcast %"class.v8::internal::compiler::Node"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"class.v8::internal::compiler::Node"** %516 to i64*
  store i64 %519, i64* %520, align 8
  %521 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %484, i64 -8
  %522 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %485, i64 -8
  %523 = bitcast %"class.v8::internal::compiler::Node"** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"class.v8::internal::compiler::Node"** %521 to i64*
  store i64 %524, i64* %525, align 8
  %526 = icmp eq %"class.v8::internal::compiler::Node"** %522, %353
  br i1 %526, label %527, label %483, !llvm.loop !13

527:                                              ; preds = %478, %483, %455, %344
  %528 = phi %"class.v8::internal::compiler::Node"** [ %347, %344 ], [ %381, %455 ], [ %479, %478 ], [ %521, %483 ]
  %529 = ptrtoint %"class.v8::internal::compiler::Node"** %528 to i64
  store i64 %529, i64* %278, align 8
  store i64 %352, i64* %277, align 8
  store i64 %349, i64* %279, align 8
  br label %530

530:                                              ; preds = %307, %527
  %531 = phi %"class.v8::internal::compiler::Node"** [ %309, %307 ], [ %351, %527 ]
  %532 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %289, i64 1
  %533 = icmp eq %"class.v8::internal::compiler::Node"** %532, %259
  br i1 %533, label %282, label %534

534:                                              ; preds = %530
  %535 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %276, align 8
  br label %286

536:                                              ; preds = %282
  %537 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %285, i64 0, i32 0, i32 0
  %538 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %537, align 8
  %539 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %285, i64 0, i32 0, i32 1
  %540 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %539, align 8
  %541 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5MergeEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %540, i32 %228) #10
  %542 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %14, i64 0, i32 0, i32 0, i32 0
  %543 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %542, align 8
  %544 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %538, %"class.v8::internal::compiler::Operator"* %541, i32 %228, %"class.v8::internal::compiler::Node"** %543, i1 zeroext false) #10
  %545 = ptrtoint %"class.v8::internal::compiler::Node"* %544 to i64
  %546 = bitcast %"class.v8::internal::ZoneVector.1400"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %546) #10
  %547 = load i64, i64* %263, align 8
  %548 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %15, i64 0, i32 0, i32 0, i32 2, i32 1
  %549 = bitcast %"struct.std::__1::__compressed_pair_elem.1405"* %548 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %546, i8 0, i64 24, i1 false) #10
  store i64 %547, i64* %549, align 8
  %550 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %15, i64 0, i32 0
  %551 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %542, align 8
  %552 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %14, i64 0, i32 0, i32 0, i32 1
  %553 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %552, align 8
  call void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.1401"* nonnull %550, %"class.v8::internal::compiler::Node"** %551, %"class.v8::internal::compiler::Node"** %553) #10
  %554 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %15, i64 0, i32 0, i32 0, i32 1
  %555 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %554, align 8
  %556 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %15, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %557 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %556, align 8
  %558 = icmp eq %"class.v8::internal::compiler::Node"** %555, %557
  %559 = ptrtoint %"class.v8::internal::compiler::Node"** %557 to i64
  br i1 %558, label %565, label %560

560:                                              ; preds = %536
  %561 = bitcast %"class.v8::internal::compiler::Node"** %555 to i64*
  store i64 %545, i64* %561, align 8
  %562 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %555, i64 1
  %563 = ptrtoint %"class.v8::internal::compiler::Node"** %562 to i64
  %564 = bitcast %"class.v8::internal::compiler::Node"*** %554 to i64*
  store i64 %563, i64* %564, align 8
  br label %790

565:                                              ; preds = %536
  %566 = ptrtoint %"class.v8::internal::compiler::Node"** %555 to i64
  %567 = bitcast %"class.v8::internal::compiler::Node"*** %554 to i64*
  %568 = bitcast %"class.v8::internal::ZoneVector.1400"* %15 to i64*
  %569 = load i64, i64* %568, align 8
  %570 = sub i64 %566, %569
  %571 = ashr exact i64 %570, 3
  %572 = add nsw i64 %571, 1
  %573 = icmp ugt i64 %572, 268435455
  br i1 %573, label %574, label %576

574:                                              ; preds = %565
  %575 = bitcast %"class.v8::internal::ZoneVector.1400"* %15 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %575) #9
  unreachable

576:                                              ; preds = %565
  %577 = bitcast %"class.v8::internal::compiler::Node"*** %556 to i64*
  %578 = sub i64 %559, %569
  %579 = ashr exact i64 %578, 3
  %580 = icmp ult i64 %579, 134217727
  br i1 %580, label %581, label %586

581:                                              ; preds = %576
  %582 = ashr exact i64 %578, 2
  %583 = icmp ult i64 %582, %572
  %584 = select i1 %583, i64 %572, i64 %582
  %585 = icmp eq i64 %584, 0
  br i1 %585, label %604, label %586

586:                                              ; preds = %581, %576
  %587 = phi i64 [ %584, %581 ], [ 268435455, %576 ]
  %588 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %15, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %589 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %588, align 8
  %590 = shl i64 %587, 3
  %591 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %589, i64 0, i32 2
  %592 = load i64, i64* %591, align 8
  %593 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %589, i64 0, i32 3
  %594 = load i64, i64* %593, align 8
  %595 = sub i64 %594, %592
  %596 = icmp ugt i64 %590, %595
  br i1 %596, label %597, label %599, !prof !3

597:                                              ; preds = %586
  %598 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %589, i64 %590) #10
  br label %601

599:                                              ; preds = %586
  %600 = add i64 %592, %590
  store i64 %600, i64* %591, align 8
  br label %601

601:                                              ; preds = %599, %597
  %602 = phi i64 [ %598, %597 ], [ %592, %599 ]
  %603 = inttoptr i64 %602 to %"class.v8::internal::compiler::Node"**
  br label %604

604:                                              ; preds = %601, %581
  %605 = phi i64 [ %587, %601 ], [ 0, %581 ]
  %606 = phi %"class.v8::internal::compiler::Node"** [ %603, %601 ], [ null, %581 ]
  %607 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %606, i64 %571
  %608 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %606, i64 %605
  %609 = ptrtoint %"class.v8::internal::compiler::Node"** %608 to i64
  %610 = bitcast %"class.v8::internal::compiler::Node"** %607 to i64*
  store i64 %545, i64* %610, align 8
  %611 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %607, i64 1
  %612 = ptrtoint %"class.v8::internal::compiler::Node"** %611 to i64
  %613 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %15, i64 0, i32 0, i32 0, i32 0
  %614 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %613, align 8
  %615 = ptrtoint %"class.v8::internal::compiler::Node"** %614 to i64
  %616 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %554, align 8
  %617 = icmp eq %"class.v8::internal::compiler::Node"** %616, %614
  br i1 %617, label %787, label %618

618:                                              ; preds = %604
  %619 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %616, i64 -1
  %620 = ptrtoint %"class.v8::internal::compiler::Node"** %619 to i64
  %621 = sub i64 %620, %615
  %622 = lshr i64 %621, 3
  %623 = add nuw nsw i64 %622, 1
  %624 = icmp ult i64 %623, 4
  br i1 %624, label %717, label %625

625:                                              ; preds = %618
  %626 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %616, i64 -1
  %627 = ptrtoint %"class.v8::internal::compiler::Node"** %626 to i64
  %628 = sub i64 %627, %615
  %629 = lshr i64 %628, 3
  %630 = xor i64 %629, -1
  %631 = add nsw i64 %571, %630
  %632 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %606, i64 %631
  %633 = xor i64 %629, -1
  %634 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %616, i64 %633
  %635 = icmp ult %"class.v8::internal::compiler::Node"** %632, %616
  %636 = icmp ult %"class.v8::internal::compiler::Node"** %634, %607
  %637 = and i1 %635, %636
  br i1 %637, label %717, label %638

638:                                              ; preds = %625
  %639 = and i64 %623, 4611686018427387900
  %640 = sub nsw i64 0, %639
  %641 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %607, i64 %640
  %642 = sub nsw i64 0, %639
  %643 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %616, i64 %642
  %644 = add nsw i64 %639, -4
  %645 = lshr exact i64 %644, 2
  %646 = add nuw nsw i64 %645, 1
  %647 = and i64 %646, 1
  %648 = icmp eq i64 %644, 0
  br i1 %648, label %693, label %649

649:                                              ; preds = %638
  %650 = sub nuw nsw i64 %646, %647
  %651 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %607, i64 -1
  %652 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %616, i64 -1
  %653 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %607, i64 -1
  %654 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %616, i64 -1
  br label %655

655:                                              ; preds = %655, %649
  %656 = phi i64 [ 0, %649 ], [ %690, %655 ]
  %657 = phi i64 [ %650, %649 ], [ %691, %655 ]
  %658 = sub i64 0, %656
  %659 = sub i64 0, %656
  %660 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %651, i64 %658
  %661 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %652, i64 %659
  %662 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %661, i64 -1
  %663 = bitcast %"class.v8::internal::compiler::Node"** %662 to <2 x i64>*
  %664 = load <2 x i64>, <2 x i64>* %663, align 8, !alias.scope !14
  %665 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %661, i64 -2
  %666 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %665, i64 -1
  %667 = bitcast %"class.v8::internal::compiler::Node"** %666 to <2 x i64>*
  %668 = load <2 x i64>, <2 x i64>* %667, align 8, !alias.scope !14
  %669 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %660, i64 -1
  %670 = bitcast %"class.v8::internal::compiler::Node"** %669 to <2 x i64>*
  store <2 x i64> %664, <2 x i64>* %670, align 8, !alias.scope !17, !noalias !14
  %671 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %660, i64 -2
  %672 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %671, i64 -1
  %673 = bitcast %"class.v8::internal::compiler::Node"** %672 to <2 x i64>*
  store <2 x i64> %668, <2 x i64>* %673, align 8, !alias.scope !17, !noalias !14
  %674 = sub nuw nsw i64 -4, %656
  %675 = sub nuw nsw i64 -4, %656
  %676 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %653, i64 %674
  %677 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %654, i64 %675
  %678 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %677, i64 -1
  %679 = bitcast %"class.v8::internal::compiler::Node"** %678 to <2 x i64>*
  %680 = load <2 x i64>, <2 x i64>* %679, align 8, !alias.scope !14
  %681 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %677, i64 -2
  %682 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %681, i64 -1
  %683 = bitcast %"class.v8::internal::compiler::Node"** %682 to <2 x i64>*
  %684 = load <2 x i64>, <2 x i64>* %683, align 8, !alias.scope !14
  %685 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %676, i64 -1
  %686 = bitcast %"class.v8::internal::compiler::Node"** %685 to <2 x i64>*
  store <2 x i64> %680, <2 x i64>* %686, align 8, !alias.scope !17, !noalias !14
  %687 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %676, i64 -2
  %688 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %687, i64 -1
  %689 = bitcast %"class.v8::internal::compiler::Node"** %688 to <2 x i64>*
  store <2 x i64> %684, <2 x i64>* %689, align 8, !alias.scope !17, !noalias !14
  %690 = add i64 %656, 8
  %691 = add i64 %657, -2
  %692 = icmp eq i64 %691, 0
  br i1 %692, label %693, label %655, !llvm.loop !19

693:                                              ; preds = %655, %638
  %694 = phi i64 [ 0, %638 ], [ %690, %655 ]
  %695 = icmp eq i64 %647, 0
  br i1 %695, label %715, label %696

696:                                              ; preds = %693
  %697 = sub i64 0, %694
  %698 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %607, i64 -1
  %699 = sub i64 0, %694
  %700 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %616, i64 -1
  %701 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %698, i64 %697
  %702 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %700, i64 %699
  %703 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %702, i64 -1
  %704 = bitcast %"class.v8::internal::compiler::Node"** %703 to <2 x i64>*
  %705 = load <2 x i64>, <2 x i64>* %704, align 8, !alias.scope !14
  %706 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %702, i64 -2
  %707 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %706, i64 -1
  %708 = bitcast %"class.v8::internal::compiler::Node"** %707 to <2 x i64>*
  %709 = load <2 x i64>, <2 x i64>* %708, align 8, !alias.scope !14
  %710 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %701, i64 -1
  %711 = bitcast %"class.v8::internal::compiler::Node"** %710 to <2 x i64>*
  store <2 x i64> %705, <2 x i64>* %711, align 8, !alias.scope !17, !noalias !14
  %712 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %701, i64 -2
  %713 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %712, i64 -1
  %714 = bitcast %"class.v8::internal::compiler::Node"** %713 to <2 x i64>*
  store <2 x i64> %709, <2 x i64>* %714, align 8, !alias.scope !17, !noalias !14
  br label %715

715:                                              ; preds = %693, %696
  %716 = icmp eq i64 %623, %639
  br i1 %716, label %787, label %717

717:                                              ; preds = %715, %625, %618
  %718 = phi %"class.v8::internal::compiler::Node"** [ %607, %625 ], [ %607, %618 ], [ %641, %715 ]
  %719 = phi %"class.v8::internal::compiler::Node"** [ %616, %625 ], [ %616, %618 ], [ %643, %715 ]
  %720 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %719, i64 -1
  %721 = ptrtoint %"class.v8::internal::compiler::Node"** %720 to i64
  %722 = sub i64 %721, %615
  %723 = lshr i64 %722, 3
  %724 = add nuw nsw i64 %723, 1
  %725 = and i64 %724, 7
  %726 = icmp eq i64 %725, 0
  br i1 %726, label %738, label %727

727:                                              ; preds = %717, %727
  %728 = phi %"class.v8::internal::compiler::Node"** [ %731, %727 ], [ %718, %717 ]
  %729 = phi %"class.v8::internal::compiler::Node"** [ %732, %727 ], [ %719, %717 ]
  %730 = phi i64 [ %736, %727 ], [ %725, %717 ]
  %731 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %728, i64 -1
  %732 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %729, i64 -1
  %733 = bitcast %"class.v8::internal::compiler::Node"** %732 to i64*
  %734 = load i64, i64* %733, align 8
  %735 = bitcast %"class.v8::internal::compiler::Node"** %731 to i64*
  store i64 %734, i64* %735, align 8
  %736 = add i64 %730, -1
  %737 = icmp eq i64 %736, 0
  br i1 %737, label %738, label %727, !llvm.loop !20

738:                                              ; preds = %727, %717
  %739 = phi %"class.v8::internal::compiler::Node"** [ undef, %717 ], [ %731, %727 ]
  %740 = phi %"class.v8::internal::compiler::Node"** [ %718, %717 ], [ %731, %727 ]
  %741 = phi %"class.v8::internal::compiler::Node"** [ %719, %717 ], [ %732, %727 ]
  %742 = icmp ult i64 %722, 56
  br i1 %742, label %787, label %743

743:                                              ; preds = %738, %743
  %744 = phi %"class.v8::internal::compiler::Node"** [ %781, %743 ], [ %740, %738 ]
  %745 = phi %"class.v8::internal::compiler::Node"** [ %782, %743 ], [ %741, %738 ]
  %746 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %744, i64 -1
  %747 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %745, i64 -1
  %748 = bitcast %"class.v8::internal::compiler::Node"** %747 to i64*
  %749 = load i64, i64* %748, align 8
  %750 = bitcast %"class.v8::internal::compiler::Node"** %746 to i64*
  store i64 %749, i64* %750, align 8
  %751 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %744, i64 -2
  %752 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %745, i64 -2
  %753 = bitcast %"class.v8::internal::compiler::Node"** %752 to i64*
  %754 = load i64, i64* %753, align 8
  %755 = bitcast %"class.v8::internal::compiler::Node"** %751 to i64*
  store i64 %754, i64* %755, align 8
  %756 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %744, i64 -3
  %757 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %745, i64 -3
  %758 = bitcast %"class.v8::internal::compiler::Node"** %757 to i64*
  %759 = load i64, i64* %758, align 8
  %760 = bitcast %"class.v8::internal::compiler::Node"** %756 to i64*
  store i64 %759, i64* %760, align 8
  %761 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %744, i64 -4
  %762 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %745, i64 -4
  %763 = bitcast %"class.v8::internal::compiler::Node"** %762 to i64*
  %764 = load i64, i64* %763, align 8
  %765 = bitcast %"class.v8::internal::compiler::Node"** %761 to i64*
  store i64 %764, i64* %765, align 8
  %766 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %744, i64 -5
  %767 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %745, i64 -5
  %768 = bitcast %"class.v8::internal::compiler::Node"** %767 to i64*
  %769 = load i64, i64* %768, align 8
  %770 = bitcast %"class.v8::internal::compiler::Node"** %766 to i64*
  store i64 %769, i64* %770, align 8
  %771 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %744, i64 -6
  %772 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %745, i64 -6
  %773 = bitcast %"class.v8::internal::compiler::Node"** %772 to i64*
  %774 = load i64, i64* %773, align 8
  %775 = bitcast %"class.v8::internal::compiler::Node"** %771 to i64*
  store i64 %774, i64* %775, align 8
  %776 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %744, i64 -7
  %777 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %745, i64 -7
  %778 = bitcast %"class.v8::internal::compiler::Node"** %777 to i64*
  %779 = load i64, i64* %778, align 8
  %780 = bitcast %"class.v8::internal::compiler::Node"** %776 to i64*
  store i64 %779, i64* %780, align 8
  %781 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %744, i64 -8
  %782 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %745, i64 -8
  %783 = bitcast %"class.v8::internal::compiler::Node"** %782 to i64*
  %784 = load i64, i64* %783, align 8
  %785 = bitcast %"class.v8::internal::compiler::Node"** %781 to i64*
  store i64 %784, i64* %785, align 8
  %786 = icmp eq %"class.v8::internal::compiler::Node"** %782, %614
  br i1 %786, label %787, label %743, !llvm.loop !21

787:                                              ; preds = %738, %743, %715, %604
  %788 = phi %"class.v8::internal::compiler::Node"** [ %607, %604 ], [ %641, %715 ], [ %739, %738 ], [ %781, %743 ]
  %789 = ptrtoint %"class.v8::internal::compiler::Node"** %788 to i64
  store i64 %789, i64* %568, align 8
  store i64 %612, i64* %567, align 8
  store i64 %609, i64* %577, align 8
  br label %790

790:                                              ; preds = %560, %787
  %791 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %284, align 8
  %792 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %791, i64 0, i32 0, i32 0
  %793 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %792, align 8
  %794 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %791, i64 0, i32 0, i32 1
  %795 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %794, align 8
  %796 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %795, i8 zeroext 9, i32 %228) #10
  %797 = add nsw i32 %228, 1
  %798 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %15, i64 0, i32 0, i32 0, i32 0
  %799 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %798, align 8
  %800 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %793, %"class.v8::internal::compiler::Operator"* %796, i32 %797, %"class.v8::internal::compiler::Node"** %799, i1 zeroext false) #10
  %801 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %284, align 8
  %802 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %801, i64 0, i32 0, i32 0
  %803 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %802, align 8
  %804 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %801, i64 0, i32 0, i32 1
  %805 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %804, align 8
  %806 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9EffectPhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %805, i32 %228) #10
  %807 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %798, align 8
  %808 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %803, %"class.v8::internal::compiler::Operator"* %806, i32 %797, %"class.v8::internal::compiler::Node"** %807, i1 zeroext false) #10
  %809 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 0, i32 1
  %810 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %809, align 8
  %811 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %810 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %812 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %811, align 8
  %813 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %812, i64 4
  %814 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %813, align 8
  call void %814(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %810, %"class.v8::internal::compiler::Node"* nonnull %7, %"class.v8::internal::compiler::Node"* %800, %"class.v8::internal::compiler::Node"* %808, %"class.v8::internal::compiler::Node"* %544) #10
  %815 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %798, align 8
  %816 = icmp eq %"class.v8::internal::compiler::Node"** %815, null
  br i1 %816, label %820, label %817

817:                                              ; preds = %790
  %818 = ptrtoint %"class.v8::internal::compiler::Node"** %815 to i64
  %819 = bitcast %"class.v8::internal::compiler::Node"*** %554 to i64*
  store i64 %818, i64* %819, align 8
  br label %820

820:                                              ; preds = %790, %817
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %546) #10
  br label %840

821:                                              ; preds = %282
  %822 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %285, i64 0, i32 0, i32 4
  %823 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %822, align 8
  %824 = icmp eq %"class.v8::internal::compiler::Node"* %823, null
  br i1 %824, label %825, label %832

825:                                              ; preds = %821
  %826 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %285, i64 0, i32 0, i32 0
  %827 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %826, align 8
  %828 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %285, i64 0, i32 0, i32 1
  %829 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %828, align 8
  %830 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %829) #10
  %831 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %827, %"class.v8::internal::compiler::Operator"* %830, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #10
  store %"class.v8::internal::compiler::Node"* %831, %"class.v8::internal::compiler::Node"** %822, align 8
  br label %832

832:                                              ; preds = %821, %825
  %833 = phi %"class.v8::internal::compiler::Node"* [ %831, %825 ], [ %823, %821 ]
  %834 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 0, i32 1
  %835 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %834, align 8
  %836 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %835 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %837 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %836, align 8
  %838 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %837, i64 4
  %839 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %838, align 8
  call void %839(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %835, %"class.v8::internal::compiler::Node"* nonnull %7, %"class.v8::internal::compiler::Node"* nonnull %7, %"class.v8::internal::compiler::Node"* nonnull %7, %"class.v8::internal::compiler::Node"* %833) #10
  br label %840

840:                                              ; preds = %832, %820
  %841 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %14, i64 0, i32 0, i32 0, i32 0
  %842 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %841, align 8
  %843 = icmp eq %"class.v8::internal::compiler::Node"** %842, null
  br i1 %843, label %848, label %844

844:                                              ; preds = %840
  %845 = ptrtoint %"class.v8::internal::compiler::Node"** %842 to i64
  %846 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %14, i64 0, i32 0, i32 0, i32 1
  %847 = bitcast %"class.v8::internal::compiler::Node"*** %846 to i64*
  store i64 %845, i64* %847, align 8
  br label %848

848:                                              ; preds = %840, %844
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %261) #10
  br label %849

849:                                              ; preds = %98, %848
  %850 = bitcast %"class.v8::internal::ZoneVector.1400"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %850) #10
  %851 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 1
  %852 = bitcast %"class.v8::internal::Zone"** %851 to i64*
  %853 = load i64, i64* %852, align 8
  %854 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %16, i64 0, i32 0, i32 0, i32 2, i32 1
  %855 = bitcast %"struct.std::__1::__compressed_pair_elem.1405"* %854 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %850, i8 0, i64 24, i1 false) #10
  store i64 %853, i64* %855, align 8
  %856 = bitcast %"class.v8::internal::ZoneVector.1400"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %856) #10
  %857 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %17, i64 0, i32 0, i32 0, i32 2, i32 1
  %858 = bitcast %"struct.std::__1::__compressed_pair_elem.1405"* %857 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %856, i8 0, i64 24, i1 false) #10
  store i64 %853, i64* %858, align 8
  %859 = bitcast %"class.v8::internal::ZoneVector.1400"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %859) #10
  %860 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %18, i64 0, i32 0, i32 0, i32 2, i32 1
  %861 = bitcast %"struct.std::__1::__compressed_pair_elem.1405"* %860 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %859, i8 0, i64 24, i1 false) #10
  store i64 %853, i64* %861, align 8
  %862 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %6, i64 0, i32 3
  %863 = load i32, i32* %862, align 4
  %864 = lshr i32 %863, 24
  %865 = and i32 %864, 15
  %866 = icmp eq i32 %865, 15
  %867 = ptrtoint %"class.v8::internal::compiler::Node"* %6 to i64
  %868 = add i64 %867, 32
  br i1 %866, label %869, label %876

869:                                              ; preds = %849
  %870 = inttoptr i64 %868 to %"struct.v8::internal::compiler::Node::OutOfLineInputs"**
  %871 = load %"struct.v8::internal::compiler::Node::OutOfLineInputs"*, %"struct.v8::internal::compiler::Node::OutOfLineInputs"** %870, align 8
  %872 = ptrtoint %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %871 to i64
  %873 = add i64 %872, 16
  %874 = getelementptr inbounds %"struct.v8::internal::compiler::Node::OutOfLineInputs", %"struct.v8::internal::compiler::Node::OutOfLineInputs"* %871, i64 0, i32 1
  %875 = load i32, i32* %874, align 8
  br label %876

876:                                              ; preds = %849, %869
  %877 = phi i32 [ %875, %869 ], [ %865, %849 ]
  %878 = phi i64 [ %873, %869 ], [ %868, %849 ]
  %879 = inttoptr i64 %878 to %"class.v8::internal::compiler::Node"**
  %880 = sext i32 %877 to i64
  %881 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %879, i64 %880
  %882 = icmp eq i32 %877, 0
  br i1 %882, label %883, label %886

883:                                              ; preds = %876
  %884 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %16, i64 0, i32 0, i32 0, i32 1
  %885 = bitcast %"class.v8::internal::compiler::Node"*** %884 to i64*
  br label %2241

886:                                              ; preds = %876
  %887 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %888 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 0, i32 1
  %889 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %16, i64 0, i32 0, i32 0, i32 1
  %890 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %16, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %891 = bitcast %"class.v8::internal::compiler::Node"*** %889 to i64*
  %892 = bitcast %"class.v8::internal::ZoneVector.1400"* %16 to i64*
  %893 = bitcast %"class.v8::internal::compiler::Node"*** %890 to i64*
  %894 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %16, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %895 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %16, i64 0, i32 0, i32 0, i32 0
  %896 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %17, i64 0, i32 0, i32 0, i32 1
  %897 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %17, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %898 = bitcast %"class.v8::internal::compiler::Node"*** %896 to i64*
  %899 = bitcast %"class.v8::internal::ZoneVector.1400"* %17 to i64*
  %900 = bitcast %"class.v8::internal::compiler::Node"*** %897 to i64*
  %901 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %17, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %902 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %17, i64 0, i32 0, i32 0, i32 0
  %903 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %18, i64 0, i32 0, i32 0, i32 1
  %904 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %18, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %905 = bitcast %"class.v8::internal::compiler::Node"*** %903 to i64*
  %906 = bitcast %"class.v8::internal::ZoneVector.1400"* %18 to i64*
  %907 = bitcast %"class.v8::internal::compiler::Node"*** %904 to i64*
  %908 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %18, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %909 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %18, i64 0, i32 0, i32 0, i32 0
  br label %916

910:                                              ; preds = %1713
  %911 = load i64, i64* %891, align 8
  %912 = load i64, i64* %892, align 8
  %913 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %16, i64 0, i32 0, i32 0, i32 1
  %914 = bitcast %"class.v8::internal::compiler::Node"*** %913 to i64*
  %915 = icmp eq i64 %911, %912
  br i1 %915, label %2241, label %1716

916:                                              ; preds = %886, %1713
  %917 = phi %"class.v8::internal::compiler::Node"** [ %879, %886 ], [ %1714, %1713 ]
  %918 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %917, align 8
  %919 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %918, i64 0, i32 0
  %920 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %919, align 8
  %921 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %920, i64 0, i32 2
  %922 = load i16, i16* %921, align 8
  switch i16 %922, label %1712 [
    i16 17, label %923
    i16 11, label %1696
    i16 19, label %1696
    i16 20, label %1696
  ]

923:                                              ; preds = %916
  %924 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %920, i64 0, i32 5
  %925 = load i32, i32* %924, align 4
  %926 = icmp sgt i32 %925, 1
  br i1 %926, label %928, label %927, !prof !2

927:                                              ; preds = %923
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0)) #9
  unreachable

928:                                              ; preds = %923
  %929 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %918, i64 0, i32 3
  %930 = load i32, i32* %929, align 4
  %931 = and i32 %930, 251658240
  %932 = icmp eq i32 %931, 251658240
  %933 = ptrtoint %"class.v8::internal::compiler::Node"* %918 to i64
  %934 = add i64 %933, 32
  br i1 %932, label %935, label %939

935:                                              ; preds = %928
  %936 = inttoptr i64 %934 to i64*
  %937 = load i64, i64* %936, align 8
  %938 = add i64 %937, 16
  br label %939

939:                                              ; preds = %928, %935
  %940 = phi i64 [ %938, %935 ], [ %934, %928 ]
  %941 = inttoptr i64 %940 to %"class.v8::internal::compiler::Node"**
  %942 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %941, i64 1
  %943 = bitcast %"class.v8::internal::compiler::Node"** %942 to i64*
  %944 = load i64, i64* %943, align 8
  %945 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %889, align 8
  %946 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %890, align 8
  %947 = icmp ult %"class.v8::internal::compiler::Node"** %945, %946
  %948 = ptrtoint %"class.v8::internal::compiler::Node"** %946 to i64
  br i1 %947, label %949, label %953

949:                                              ; preds = %939
  %950 = bitcast %"class.v8::internal::compiler::Node"** %945 to i64*
  store i64 %944, i64* %950, align 8
  %951 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %945, i64 1
  %952 = ptrtoint %"class.v8::internal::compiler::Node"** %951 to i64
  store i64 %952, i64* %891, align 8
  br label %1174

953:                                              ; preds = %939
  %954 = ptrtoint %"class.v8::internal::compiler::Node"** %945 to i64
  %955 = load i64, i64* %892, align 8
  %956 = sub i64 %954, %955
  %957 = ashr exact i64 %956, 3
  %958 = add nsw i64 %957, 1
  %959 = icmp ugt i64 %958, 268435455
  br i1 %959, label %960, label %962

960:                                              ; preds = %953
  %961 = bitcast %"class.v8::internal::ZoneVector.1400"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %961) #9
  unreachable

962:                                              ; preds = %953
  %963 = sub i64 %948, %955
  %964 = ashr exact i64 %963, 3
  %965 = icmp ult i64 %964, 134217727
  br i1 %965, label %966, label %971

966:                                              ; preds = %962
  %967 = ashr exact i64 %963, 2
  %968 = icmp ult i64 %967, %958
  %969 = select i1 %968, i64 %958, i64 %967
  %970 = icmp eq i64 %969, 0
  br i1 %970, label %988, label %971

971:                                              ; preds = %966, %962
  %972 = phi i64 [ %969, %966 ], [ 268435455, %962 ]
  %973 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %894, align 8
  %974 = shl i64 %972, 3
  %975 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %973, i64 0, i32 2
  %976 = load i64, i64* %975, align 8
  %977 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %973, i64 0, i32 3
  %978 = load i64, i64* %977, align 8
  %979 = sub i64 %978, %976
  %980 = icmp ugt i64 %974, %979
  br i1 %980, label %981, label %983, !prof !3

981:                                              ; preds = %971
  %982 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %973, i64 %974) #10
  br label %985

983:                                              ; preds = %971
  %984 = add i64 %976, %974
  store i64 %984, i64* %975, align 8
  br label %985

985:                                              ; preds = %983, %981
  %986 = phi i64 [ %982, %981 ], [ %976, %983 ]
  %987 = inttoptr i64 %986 to %"class.v8::internal::compiler::Node"**
  br label %988

988:                                              ; preds = %985, %966
  %989 = phi i64 [ %972, %985 ], [ 0, %966 ]
  %990 = phi %"class.v8::internal::compiler::Node"** [ %987, %985 ], [ null, %966 ]
  %991 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %990, i64 %957
  %992 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %990, i64 %989
  %993 = ptrtoint %"class.v8::internal::compiler::Node"** %992 to i64
  %994 = bitcast %"class.v8::internal::compiler::Node"** %991 to i64*
  store i64 %944, i64* %994, align 8
  %995 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %991, i64 1
  %996 = ptrtoint %"class.v8::internal::compiler::Node"** %995 to i64
  %997 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %895, align 8
  %998 = ptrtoint %"class.v8::internal::compiler::Node"** %997 to i64
  %999 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %889, align 8
  %1000 = icmp eq %"class.v8::internal::compiler::Node"** %999, %997
  br i1 %1000, label %1171, label %1001

1001:                                             ; preds = %988
  %1002 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %999, i64 -1
  %1003 = ptrtoint %"class.v8::internal::compiler::Node"** %1002 to i64
  %1004 = sub i64 %1003, %998
  %1005 = lshr i64 %1004, 3
  %1006 = add nuw nsw i64 %1005, 1
  %1007 = icmp ult i64 %1006, 4
  br i1 %1007, label %1101, label %1008

1008:                                             ; preds = %1001
  %1009 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %990, i64 -1
  %1010 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %999, i64 -1
  %1011 = ptrtoint %"class.v8::internal::compiler::Node"** %1010 to i64
  %1012 = sub i64 %1011, %998
  %1013 = lshr i64 %1012, 3
  %1014 = sub nsw i64 %957, %1013
  %1015 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1009, i64 %1014
  %1016 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %999, i64 -1
  %1017 = sub nsw i64 0, %1013
  %1018 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1016, i64 %1017
  %1019 = icmp ult %"class.v8::internal::compiler::Node"** %1015, %999
  %1020 = icmp ult %"class.v8::internal::compiler::Node"** %1018, %991
  %1021 = and i1 %1019, %1020
  br i1 %1021, label %1101, label %1022

1022:                                             ; preds = %1008
  %1023 = and i64 %1006, 4611686018427387900
  %1024 = sub nsw i64 0, %1023
  %1025 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %991, i64 %1024
  %1026 = sub nsw i64 0, %1023
  %1027 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %999, i64 %1026
  %1028 = add nsw i64 %1023, -4
  %1029 = lshr exact i64 %1028, 2
  %1030 = add nuw nsw i64 %1029, 1
  %1031 = and i64 %1030, 1
  %1032 = icmp eq i64 %1028, 0
  br i1 %1032, label %1077, label %1033

1033:                                             ; preds = %1022
  %1034 = sub nuw nsw i64 %1030, %1031
  %1035 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %991, i64 -1
  %1036 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %999, i64 -1
  %1037 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %991, i64 -1
  %1038 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %999, i64 -1
  br label %1039

1039:                                             ; preds = %1039, %1033
  %1040 = phi i64 [ 0, %1033 ], [ %1074, %1039 ]
  %1041 = phi i64 [ %1034, %1033 ], [ %1075, %1039 ]
  %1042 = sub i64 0, %1040
  %1043 = sub i64 0, %1040
  %1044 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1035, i64 %1042
  %1045 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1036, i64 %1043
  %1046 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1045, i64 -1
  %1047 = bitcast %"class.v8::internal::compiler::Node"** %1046 to <2 x i64>*
  %1048 = load <2 x i64>, <2 x i64>* %1047, align 8, !alias.scope !22
  %1049 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1045, i64 -2
  %1050 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1049, i64 -1
  %1051 = bitcast %"class.v8::internal::compiler::Node"** %1050 to <2 x i64>*
  %1052 = load <2 x i64>, <2 x i64>* %1051, align 8, !alias.scope !22
  %1053 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1044, i64 -1
  %1054 = bitcast %"class.v8::internal::compiler::Node"** %1053 to <2 x i64>*
  store <2 x i64> %1048, <2 x i64>* %1054, align 8, !alias.scope !25, !noalias !22
  %1055 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1044, i64 -2
  %1056 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1055, i64 -1
  %1057 = bitcast %"class.v8::internal::compiler::Node"** %1056 to <2 x i64>*
  store <2 x i64> %1052, <2 x i64>* %1057, align 8, !alias.scope !25, !noalias !22
  %1058 = sub nuw nsw i64 -4, %1040
  %1059 = sub nuw nsw i64 -4, %1040
  %1060 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1037, i64 %1058
  %1061 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1038, i64 %1059
  %1062 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1061, i64 -1
  %1063 = bitcast %"class.v8::internal::compiler::Node"** %1062 to <2 x i64>*
  %1064 = load <2 x i64>, <2 x i64>* %1063, align 8, !alias.scope !22
  %1065 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1061, i64 -2
  %1066 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1065, i64 -1
  %1067 = bitcast %"class.v8::internal::compiler::Node"** %1066 to <2 x i64>*
  %1068 = load <2 x i64>, <2 x i64>* %1067, align 8, !alias.scope !22
  %1069 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1060, i64 -1
  %1070 = bitcast %"class.v8::internal::compiler::Node"** %1069 to <2 x i64>*
  store <2 x i64> %1064, <2 x i64>* %1070, align 8, !alias.scope !25, !noalias !22
  %1071 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1060, i64 -2
  %1072 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1071, i64 -1
  %1073 = bitcast %"class.v8::internal::compiler::Node"** %1072 to <2 x i64>*
  store <2 x i64> %1068, <2 x i64>* %1073, align 8, !alias.scope !25, !noalias !22
  %1074 = add i64 %1040, 8
  %1075 = add i64 %1041, -2
  %1076 = icmp eq i64 %1075, 0
  br i1 %1076, label %1077, label %1039, !llvm.loop !27

1077:                                             ; preds = %1039, %1022
  %1078 = phi i64 [ 0, %1022 ], [ %1074, %1039 ]
  %1079 = icmp eq i64 %1031, 0
  br i1 %1079, label %1099, label %1080

1080:                                             ; preds = %1077
  %1081 = sub i64 0, %1078
  %1082 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %991, i64 -1
  %1083 = sub i64 0, %1078
  %1084 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %999, i64 -1
  %1085 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1082, i64 %1081
  %1086 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1084, i64 %1083
  %1087 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1086, i64 -1
  %1088 = bitcast %"class.v8::internal::compiler::Node"** %1087 to <2 x i64>*
  %1089 = load <2 x i64>, <2 x i64>* %1088, align 8, !alias.scope !22
  %1090 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1086, i64 -2
  %1091 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1090, i64 -1
  %1092 = bitcast %"class.v8::internal::compiler::Node"** %1091 to <2 x i64>*
  %1093 = load <2 x i64>, <2 x i64>* %1092, align 8, !alias.scope !22
  %1094 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1085, i64 -1
  %1095 = bitcast %"class.v8::internal::compiler::Node"** %1094 to <2 x i64>*
  store <2 x i64> %1089, <2 x i64>* %1095, align 8, !alias.scope !25, !noalias !22
  %1096 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1085, i64 -2
  %1097 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1096, i64 -1
  %1098 = bitcast %"class.v8::internal::compiler::Node"** %1097 to <2 x i64>*
  store <2 x i64> %1093, <2 x i64>* %1098, align 8, !alias.scope !25, !noalias !22
  br label %1099

1099:                                             ; preds = %1077, %1080
  %1100 = icmp eq i64 %1006, %1023
  br i1 %1100, label %1171, label %1101

1101:                                             ; preds = %1099, %1008, %1001
  %1102 = phi %"class.v8::internal::compiler::Node"** [ %991, %1008 ], [ %991, %1001 ], [ %1025, %1099 ]
  %1103 = phi %"class.v8::internal::compiler::Node"** [ %999, %1008 ], [ %999, %1001 ], [ %1027, %1099 ]
  %1104 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1103, i64 -1
  %1105 = ptrtoint %"class.v8::internal::compiler::Node"** %1104 to i64
  %1106 = sub i64 %1105, %998
  %1107 = lshr i64 %1106, 3
  %1108 = add nuw nsw i64 %1107, 1
  %1109 = and i64 %1108, 7
  %1110 = icmp eq i64 %1109, 0
  br i1 %1110, label %1122, label %1111

1111:                                             ; preds = %1101, %1111
  %1112 = phi %"class.v8::internal::compiler::Node"** [ %1115, %1111 ], [ %1102, %1101 ]
  %1113 = phi %"class.v8::internal::compiler::Node"** [ %1116, %1111 ], [ %1103, %1101 ]
  %1114 = phi i64 [ %1120, %1111 ], [ %1109, %1101 ]
  %1115 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1112, i64 -1
  %1116 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1113, i64 -1
  %1117 = bitcast %"class.v8::internal::compiler::Node"** %1116 to i64*
  %1118 = load i64, i64* %1117, align 8
  %1119 = bitcast %"class.v8::internal::compiler::Node"** %1115 to i64*
  store i64 %1118, i64* %1119, align 8
  %1120 = add i64 %1114, -1
  %1121 = icmp eq i64 %1120, 0
  br i1 %1121, label %1122, label %1111, !llvm.loop !28

1122:                                             ; preds = %1111, %1101
  %1123 = phi %"class.v8::internal::compiler::Node"** [ undef, %1101 ], [ %1115, %1111 ]
  %1124 = phi %"class.v8::internal::compiler::Node"** [ %1102, %1101 ], [ %1115, %1111 ]
  %1125 = phi %"class.v8::internal::compiler::Node"** [ %1103, %1101 ], [ %1116, %1111 ]
  %1126 = icmp ult i64 %1106, 56
  br i1 %1126, label %1171, label %1127

1127:                                             ; preds = %1122, %1127
  %1128 = phi %"class.v8::internal::compiler::Node"** [ %1165, %1127 ], [ %1124, %1122 ]
  %1129 = phi %"class.v8::internal::compiler::Node"** [ %1166, %1127 ], [ %1125, %1122 ]
  %1130 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1128, i64 -1
  %1131 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1129, i64 -1
  %1132 = bitcast %"class.v8::internal::compiler::Node"** %1131 to i64*
  %1133 = load i64, i64* %1132, align 8
  %1134 = bitcast %"class.v8::internal::compiler::Node"** %1130 to i64*
  store i64 %1133, i64* %1134, align 8
  %1135 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1128, i64 -2
  %1136 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1129, i64 -2
  %1137 = bitcast %"class.v8::internal::compiler::Node"** %1136 to i64*
  %1138 = load i64, i64* %1137, align 8
  %1139 = bitcast %"class.v8::internal::compiler::Node"** %1135 to i64*
  store i64 %1138, i64* %1139, align 8
  %1140 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1128, i64 -3
  %1141 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1129, i64 -3
  %1142 = bitcast %"class.v8::internal::compiler::Node"** %1141 to i64*
  %1143 = load i64, i64* %1142, align 8
  %1144 = bitcast %"class.v8::internal::compiler::Node"** %1140 to i64*
  store i64 %1143, i64* %1144, align 8
  %1145 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1128, i64 -4
  %1146 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1129, i64 -4
  %1147 = bitcast %"class.v8::internal::compiler::Node"** %1146 to i64*
  %1148 = load i64, i64* %1147, align 8
  %1149 = bitcast %"class.v8::internal::compiler::Node"** %1145 to i64*
  store i64 %1148, i64* %1149, align 8
  %1150 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1128, i64 -5
  %1151 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1129, i64 -5
  %1152 = bitcast %"class.v8::internal::compiler::Node"** %1151 to i64*
  %1153 = load i64, i64* %1152, align 8
  %1154 = bitcast %"class.v8::internal::compiler::Node"** %1150 to i64*
  store i64 %1153, i64* %1154, align 8
  %1155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1128, i64 -6
  %1156 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1129, i64 -6
  %1157 = bitcast %"class.v8::internal::compiler::Node"** %1156 to i64*
  %1158 = load i64, i64* %1157, align 8
  %1159 = bitcast %"class.v8::internal::compiler::Node"** %1155 to i64*
  store i64 %1158, i64* %1159, align 8
  %1160 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1128, i64 -7
  %1161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1129, i64 -7
  %1162 = bitcast %"class.v8::internal::compiler::Node"** %1161 to i64*
  %1163 = load i64, i64* %1162, align 8
  %1164 = bitcast %"class.v8::internal::compiler::Node"** %1160 to i64*
  store i64 %1163, i64* %1164, align 8
  %1165 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1128, i64 -8
  %1166 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1129, i64 -8
  %1167 = bitcast %"class.v8::internal::compiler::Node"** %1166 to i64*
  %1168 = load i64, i64* %1167, align 8
  %1169 = bitcast %"class.v8::internal::compiler::Node"** %1165 to i64*
  store i64 %1168, i64* %1169, align 8
  %1170 = icmp eq %"class.v8::internal::compiler::Node"** %1166, %997
  br i1 %1170, label %1171, label %1127, !llvm.loop !29

1171:                                             ; preds = %1122, %1127, %1099, %988
  %1172 = phi %"class.v8::internal::compiler::Node"** [ %991, %988 ], [ %1025, %1099 ], [ %1123, %1122 ], [ %1165, %1127 ]
  %1173 = ptrtoint %"class.v8::internal::compiler::Node"** %1172 to i64
  store i64 %1173, i64* %892, align 8
  store i64 %996, i64* %891, align 8
  store i64 %993, i64* %893, align 8
  br label %1174

1174:                                             ; preds = %949, %1171
  %1175 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %919, align 8
  %1176 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1175, i64 0, i32 6
  %1177 = load i32, i32* %1176, align 8
  %1178 = icmp sgt i32 %1177, 0
  br i1 %1178, label %1180, label %1179, !prof !2

1179:                                             ; preds = %1174
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0)) #9
  unreachable

1180:                                             ; preds = %1174
  %1181 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1175, i64 0, i32 5
  %1182 = load i32, i32* %1181, align 4
  %1183 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1175) #10
  %1184 = zext i1 %1183 to i32
  %1185 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %919, align 8
  %1186 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1185) #10
  %1187 = zext i1 %1186 to i32
  %1188 = add i32 %1182, %1184
  %1189 = add i32 %1188, %1187
  %1190 = load i32, i32* %929, align 4
  %1191 = and i32 %1190, 251658240
  %1192 = icmp eq i32 %1191, 251658240
  br i1 %1192, label %1193, label %1197

1193:                                             ; preds = %1180
  %1194 = inttoptr i64 %934 to i64*
  %1195 = load i64, i64* %1194, align 8
  %1196 = add i64 %1195, 16
  br label %1197

1197:                                             ; preds = %1180, %1193
  %1198 = phi i64 [ %1196, %1193 ], [ %934, %1180 ]
  %1199 = inttoptr i64 %1198 to %"class.v8::internal::compiler::Node"**
  %1200 = sext i32 %1189 to i64
  %1201 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1199, i64 %1200
  %1202 = bitcast %"class.v8::internal::compiler::Node"** %1201 to i64*
  %1203 = load i64, i64* %1202, align 8
  %1204 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %896, align 8
  %1205 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %897, align 8
  %1206 = icmp ult %"class.v8::internal::compiler::Node"** %1204, %1205
  %1207 = ptrtoint %"class.v8::internal::compiler::Node"** %1205 to i64
  br i1 %1206, label %1208, label %1212

1208:                                             ; preds = %1197
  %1209 = bitcast %"class.v8::internal::compiler::Node"** %1204 to i64*
  store i64 %1203, i64* %1209, align 8
  %1210 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1204, i64 1
  %1211 = ptrtoint %"class.v8::internal::compiler::Node"** %1210 to i64
  store i64 %1211, i64* %898, align 8
  br label %1433

1212:                                             ; preds = %1197
  %1213 = ptrtoint %"class.v8::internal::compiler::Node"** %1204 to i64
  %1214 = load i64, i64* %899, align 8
  %1215 = sub i64 %1213, %1214
  %1216 = ashr exact i64 %1215, 3
  %1217 = add nsw i64 %1216, 1
  %1218 = icmp ugt i64 %1217, 268435455
  br i1 %1218, label %1219, label %1221

1219:                                             ; preds = %1212
  %1220 = bitcast %"class.v8::internal::ZoneVector.1400"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1220) #9
  unreachable

1221:                                             ; preds = %1212
  %1222 = sub i64 %1207, %1214
  %1223 = ashr exact i64 %1222, 3
  %1224 = icmp ult i64 %1223, 134217727
  br i1 %1224, label %1225, label %1230

1225:                                             ; preds = %1221
  %1226 = ashr exact i64 %1222, 2
  %1227 = icmp ult i64 %1226, %1217
  %1228 = select i1 %1227, i64 %1217, i64 %1226
  %1229 = icmp eq i64 %1228, 0
  br i1 %1229, label %1247, label %1230

1230:                                             ; preds = %1225, %1221
  %1231 = phi i64 [ %1228, %1225 ], [ 268435455, %1221 ]
  %1232 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %901, align 8
  %1233 = shl i64 %1231, 3
  %1234 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1232, i64 0, i32 2
  %1235 = load i64, i64* %1234, align 8
  %1236 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1232, i64 0, i32 3
  %1237 = load i64, i64* %1236, align 8
  %1238 = sub i64 %1237, %1235
  %1239 = icmp ugt i64 %1233, %1238
  br i1 %1239, label %1240, label %1242, !prof !3

1240:                                             ; preds = %1230
  %1241 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1232, i64 %1233) #10
  br label %1244

1242:                                             ; preds = %1230
  %1243 = add i64 %1235, %1233
  store i64 %1243, i64* %1234, align 8
  br label %1244

1244:                                             ; preds = %1242, %1240
  %1245 = phi i64 [ %1241, %1240 ], [ %1235, %1242 ]
  %1246 = inttoptr i64 %1245 to %"class.v8::internal::compiler::Node"**
  br label %1247

1247:                                             ; preds = %1244, %1225
  %1248 = phi i64 [ %1231, %1244 ], [ 0, %1225 ]
  %1249 = phi %"class.v8::internal::compiler::Node"** [ %1246, %1244 ], [ null, %1225 ]
  %1250 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1249, i64 %1216
  %1251 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1249, i64 %1248
  %1252 = ptrtoint %"class.v8::internal::compiler::Node"** %1251 to i64
  %1253 = bitcast %"class.v8::internal::compiler::Node"** %1250 to i64*
  store i64 %1203, i64* %1253, align 8
  %1254 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1250, i64 1
  %1255 = ptrtoint %"class.v8::internal::compiler::Node"** %1254 to i64
  %1256 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %902, align 8
  %1257 = ptrtoint %"class.v8::internal::compiler::Node"** %1256 to i64
  %1258 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %896, align 8
  %1259 = icmp eq %"class.v8::internal::compiler::Node"** %1258, %1256
  br i1 %1259, label %1430, label %1260

1260:                                             ; preds = %1247
  %1261 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1258, i64 -1
  %1262 = ptrtoint %"class.v8::internal::compiler::Node"** %1261 to i64
  %1263 = sub i64 %1262, %1257
  %1264 = lshr i64 %1263, 3
  %1265 = add nuw nsw i64 %1264, 1
  %1266 = icmp ult i64 %1265, 4
  br i1 %1266, label %1360, label %1267

1267:                                             ; preds = %1260
  %1268 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1249, i64 -1
  %1269 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1258, i64 -1
  %1270 = ptrtoint %"class.v8::internal::compiler::Node"** %1269 to i64
  %1271 = sub i64 %1270, %1257
  %1272 = lshr i64 %1271, 3
  %1273 = sub nsw i64 %1216, %1272
  %1274 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1268, i64 %1273
  %1275 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1258, i64 -1
  %1276 = sub nsw i64 0, %1272
  %1277 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1275, i64 %1276
  %1278 = icmp ult %"class.v8::internal::compiler::Node"** %1274, %1258
  %1279 = icmp ult %"class.v8::internal::compiler::Node"** %1277, %1250
  %1280 = and i1 %1278, %1279
  br i1 %1280, label %1360, label %1281

1281:                                             ; preds = %1267
  %1282 = and i64 %1265, 4611686018427387900
  %1283 = sub nsw i64 0, %1282
  %1284 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1250, i64 %1283
  %1285 = sub nsw i64 0, %1282
  %1286 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1258, i64 %1285
  %1287 = add nsw i64 %1282, -4
  %1288 = lshr exact i64 %1287, 2
  %1289 = add nuw nsw i64 %1288, 1
  %1290 = and i64 %1289, 1
  %1291 = icmp eq i64 %1287, 0
  br i1 %1291, label %1336, label %1292

1292:                                             ; preds = %1281
  %1293 = sub nuw nsw i64 %1289, %1290
  %1294 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1250, i64 -1
  %1295 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1258, i64 -1
  %1296 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1250, i64 -1
  %1297 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1258, i64 -1
  br label %1298

1298:                                             ; preds = %1298, %1292
  %1299 = phi i64 [ 0, %1292 ], [ %1333, %1298 ]
  %1300 = phi i64 [ %1293, %1292 ], [ %1334, %1298 ]
  %1301 = sub i64 0, %1299
  %1302 = sub i64 0, %1299
  %1303 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1294, i64 %1301
  %1304 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1295, i64 %1302
  %1305 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1304, i64 -1
  %1306 = bitcast %"class.v8::internal::compiler::Node"** %1305 to <2 x i64>*
  %1307 = load <2 x i64>, <2 x i64>* %1306, align 8, !alias.scope !30
  %1308 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1304, i64 -2
  %1309 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1308, i64 -1
  %1310 = bitcast %"class.v8::internal::compiler::Node"** %1309 to <2 x i64>*
  %1311 = load <2 x i64>, <2 x i64>* %1310, align 8, !alias.scope !30
  %1312 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1303, i64 -1
  %1313 = bitcast %"class.v8::internal::compiler::Node"** %1312 to <2 x i64>*
  store <2 x i64> %1307, <2 x i64>* %1313, align 8, !alias.scope !33, !noalias !30
  %1314 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1303, i64 -2
  %1315 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1314, i64 -1
  %1316 = bitcast %"class.v8::internal::compiler::Node"** %1315 to <2 x i64>*
  store <2 x i64> %1311, <2 x i64>* %1316, align 8, !alias.scope !33, !noalias !30
  %1317 = sub nuw nsw i64 -4, %1299
  %1318 = sub nuw nsw i64 -4, %1299
  %1319 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1296, i64 %1317
  %1320 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1297, i64 %1318
  %1321 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1320, i64 -1
  %1322 = bitcast %"class.v8::internal::compiler::Node"** %1321 to <2 x i64>*
  %1323 = load <2 x i64>, <2 x i64>* %1322, align 8, !alias.scope !30
  %1324 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1320, i64 -2
  %1325 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1324, i64 -1
  %1326 = bitcast %"class.v8::internal::compiler::Node"** %1325 to <2 x i64>*
  %1327 = load <2 x i64>, <2 x i64>* %1326, align 8, !alias.scope !30
  %1328 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1319, i64 -1
  %1329 = bitcast %"class.v8::internal::compiler::Node"** %1328 to <2 x i64>*
  store <2 x i64> %1323, <2 x i64>* %1329, align 8, !alias.scope !33, !noalias !30
  %1330 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1319, i64 -2
  %1331 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1330, i64 -1
  %1332 = bitcast %"class.v8::internal::compiler::Node"** %1331 to <2 x i64>*
  store <2 x i64> %1327, <2 x i64>* %1332, align 8, !alias.scope !33, !noalias !30
  %1333 = add i64 %1299, 8
  %1334 = add i64 %1300, -2
  %1335 = icmp eq i64 %1334, 0
  br i1 %1335, label %1336, label %1298, !llvm.loop !35

1336:                                             ; preds = %1298, %1281
  %1337 = phi i64 [ 0, %1281 ], [ %1333, %1298 ]
  %1338 = icmp eq i64 %1290, 0
  br i1 %1338, label %1358, label %1339

1339:                                             ; preds = %1336
  %1340 = sub i64 0, %1337
  %1341 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1250, i64 -1
  %1342 = sub i64 0, %1337
  %1343 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1258, i64 -1
  %1344 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1341, i64 %1340
  %1345 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1343, i64 %1342
  %1346 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1345, i64 -1
  %1347 = bitcast %"class.v8::internal::compiler::Node"** %1346 to <2 x i64>*
  %1348 = load <2 x i64>, <2 x i64>* %1347, align 8, !alias.scope !30
  %1349 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1345, i64 -2
  %1350 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1349, i64 -1
  %1351 = bitcast %"class.v8::internal::compiler::Node"** %1350 to <2 x i64>*
  %1352 = load <2 x i64>, <2 x i64>* %1351, align 8, !alias.scope !30
  %1353 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1344, i64 -1
  %1354 = bitcast %"class.v8::internal::compiler::Node"** %1353 to <2 x i64>*
  store <2 x i64> %1348, <2 x i64>* %1354, align 8, !alias.scope !33, !noalias !30
  %1355 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1344, i64 -2
  %1356 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1355, i64 -1
  %1357 = bitcast %"class.v8::internal::compiler::Node"** %1356 to <2 x i64>*
  store <2 x i64> %1352, <2 x i64>* %1357, align 8, !alias.scope !33, !noalias !30
  br label %1358

1358:                                             ; preds = %1336, %1339
  %1359 = icmp eq i64 %1265, %1282
  br i1 %1359, label %1430, label %1360

1360:                                             ; preds = %1358, %1267, %1260
  %1361 = phi %"class.v8::internal::compiler::Node"** [ %1250, %1267 ], [ %1250, %1260 ], [ %1284, %1358 ]
  %1362 = phi %"class.v8::internal::compiler::Node"** [ %1258, %1267 ], [ %1258, %1260 ], [ %1286, %1358 ]
  %1363 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1362, i64 -1
  %1364 = ptrtoint %"class.v8::internal::compiler::Node"** %1363 to i64
  %1365 = sub i64 %1364, %1257
  %1366 = lshr i64 %1365, 3
  %1367 = add nuw nsw i64 %1366, 1
  %1368 = and i64 %1367, 7
  %1369 = icmp eq i64 %1368, 0
  br i1 %1369, label %1381, label %1370

1370:                                             ; preds = %1360, %1370
  %1371 = phi %"class.v8::internal::compiler::Node"** [ %1374, %1370 ], [ %1361, %1360 ]
  %1372 = phi %"class.v8::internal::compiler::Node"** [ %1375, %1370 ], [ %1362, %1360 ]
  %1373 = phi i64 [ %1379, %1370 ], [ %1368, %1360 ]
  %1374 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1371, i64 -1
  %1375 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1372, i64 -1
  %1376 = bitcast %"class.v8::internal::compiler::Node"** %1375 to i64*
  %1377 = load i64, i64* %1376, align 8
  %1378 = bitcast %"class.v8::internal::compiler::Node"** %1374 to i64*
  store i64 %1377, i64* %1378, align 8
  %1379 = add i64 %1373, -1
  %1380 = icmp eq i64 %1379, 0
  br i1 %1380, label %1381, label %1370, !llvm.loop !36

1381:                                             ; preds = %1370, %1360
  %1382 = phi %"class.v8::internal::compiler::Node"** [ undef, %1360 ], [ %1374, %1370 ]
  %1383 = phi %"class.v8::internal::compiler::Node"** [ %1361, %1360 ], [ %1374, %1370 ]
  %1384 = phi %"class.v8::internal::compiler::Node"** [ %1362, %1360 ], [ %1375, %1370 ]
  %1385 = icmp ult i64 %1365, 56
  br i1 %1385, label %1430, label %1386

1386:                                             ; preds = %1381, %1386
  %1387 = phi %"class.v8::internal::compiler::Node"** [ %1424, %1386 ], [ %1383, %1381 ]
  %1388 = phi %"class.v8::internal::compiler::Node"** [ %1425, %1386 ], [ %1384, %1381 ]
  %1389 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1387, i64 -1
  %1390 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1388, i64 -1
  %1391 = bitcast %"class.v8::internal::compiler::Node"** %1390 to i64*
  %1392 = load i64, i64* %1391, align 8
  %1393 = bitcast %"class.v8::internal::compiler::Node"** %1389 to i64*
  store i64 %1392, i64* %1393, align 8
  %1394 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1387, i64 -2
  %1395 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1388, i64 -2
  %1396 = bitcast %"class.v8::internal::compiler::Node"** %1395 to i64*
  %1397 = load i64, i64* %1396, align 8
  %1398 = bitcast %"class.v8::internal::compiler::Node"** %1394 to i64*
  store i64 %1397, i64* %1398, align 8
  %1399 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1387, i64 -3
  %1400 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1388, i64 -3
  %1401 = bitcast %"class.v8::internal::compiler::Node"** %1400 to i64*
  %1402 = load i64, i64* %1401, align 8
  %1403 = bitcast %"class.v8::internal::compiler::Node"** %1399 to i64*
  store i64 %1402, i64* %1403, align 8
  %1404 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1387, i64 -4
  %1405 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1388, i64 -4
  %1406 = bitcast %"class.v8::internal::compiler::Node"** %1405 to i64*
  %1407 = load i64, i64* %1406, align 8
  %1408 = bitcast %"class.v8::internal::compiler::Node"** %1404 to i64*
  store i64 %1407, i64* %1408, align 8
  %1409 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1387, i64 -5
  %1410 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1388, i64 -5
  %1411 = bitcast %"class.v8::internal::compiler::Node"** %1410 to i64*
  %1412 = load i64, i64* %1411, align 8
  %1413 = bitcast %"class.v8::internal::compiler::Node"** %1409 to i64*
  store i64 %1412, i64* %1413, align 8
  %1414 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1387, i64 -6
  %1415 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1388, i64 -6
  %1416 = bitcast %"class.v8::internal::compiler::Node"** %1415 to i64*
  %1417 = load i64, i64* %1416, align 8
  %1418 = bitcast %"class.v8::internal::compiler::Node"** %1414 to i64*
  store i64 %1417, i64* %1418, align 8
  %1419 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1387, i64 -7
  %1420 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1388, i64 -7
  %1421 = bitcast %"class.v8::internal::compiler::Node"** %1420 to i64*
  %1422 = load i64, i64* %1421, align 8
  %1423 = bitcast %"class.v8::internal::compiler::Node"** %1419 to i64*
  store i64 %1422, i64* %1423, align 8
  %1424 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1387, i64 -8
  %1425 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1388, i64 -8
  %1426 = bitcast %"class.v8::internal::compiler::Node"** %1425 to i64*
  %1427 = load i64, i64* %1426, align 8
  %1428 = bitcast %"class.v8::internal::compiler::Node"** %1424 to i64*
  store i64 %1427, i64* %1428, align 8
  %1429 = icmp eq %"class.v8::internal::compiler::Node"** %1425, %1256
  br i1 %1429, label %1430, label %1386, !llvm.loop !37

1430:                                             ; preds = %1381, %1386, %1358, %1247
  %1431 = phi %"class.v8::internal::compiler::Node"** [ %1250, %1247 ], [ %1284, %1358 ], [ %1382, %1381 ], [ %1424, %1386 ]
  %1432 = ptrtoint %"class.v8::internal::compiler::Node"** %1431 to i64
  store i64 %1432, i64* %899, align 8
  store i64 %1255, i64* %898, align 8
  store i64 %1252, i64* %900, align 8
  br label %1433

1433:                                             ; preds = %1208, %1430
  %1434 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %919, align 8
  %1435 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1434, i64 0, i32 7
  %1436 = load i32, i32* %1435, align 4
  %1437 = icmp sgt i32 %1436, 0
  br i1 %1437, label %1439, label %1438, !prof !2

1438:                                             ; preds = %1433
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0)) #9
  unreachable

1439:                                             ; preds = %1433
  %1440 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1434, i64 0, i32 5
  %1441 = load i32, i32* %1440, align 4
  %1442 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1434) #10
  %1443 = zext i1 %1442 to i32
  %1444 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %919, align 8
  %1445 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1444) #10
  %1446 = zext i1 %1445 to i32
  %1447 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %919, align 8
  %1448 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1447, i64 0, i32 6
  %1449 = load i32, i32* %1448, align 8
  %1450 = add i32 %1441, %1443
  %1451 = add i32 %1450, %1446
  %1452 = add i32 %1451, %1449
  %1453 = load i32, i32* %929, align 4
  %1454 = and i32 %1453, 251658240
  %1455 = icmp eq i32 %1454, 251658240
  br i1 %1455, label %1456, label %1460

1456:                                             ; preds = %1439
  %1457 = inttoptr i64 %934 to i64*
  %1458 = load i64, i64* %1457, align 8
  %1459 = add i64 %1458, 16
  br label %1460

1460:                                             ; preds = %1439, %1456
  %1461 = phi i64 [ %1459, %1456 ], [ %934, %1439 ]
  %1462 = inttoptr i64 %1461 to %"class.v8::internal::compiler::Node"**
  %1463 = sext i32 %1452 to i64
  %1464 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1462, i64 %1463
  %1465 = bitcast %"class.v8::internal::compiler::Node"** %1464 to i64*
  %1466 = load i64, i64* %1465, align 8
  %1467 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %903, align 8
  %1468 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %904, align 8
  %1469 = icmp ult %"class.v8::internal::compiler::Node"** %1467, %1468
  %1470 = ptrtoint %"class.v8::internal::compiler::Node"** %1468 to i64
  br i1 %1469, label %1471, label %1475

1471:                                             ; preds = %1460
  %1472 = bitcast %"class.v8::internal::compiler::Node"** %1467 to i64*
  store i64 %1466, i64* %1472, align 8
  %1473 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1467, i64 1
  %1474 = ptrtoint %"class.v8::internal::compiler::Node"** %1473 to i64
  store i64 %1474, i64* %905, align 8
  br label %1713

1475:                                             ; preds = %1460
  %1476 = ptrtoint %"class.v8::internal::compiler::Node"** %1467 to i64
  %1477 = load i64, i64* %906, align 8
  %1478 = sub i64 %1476, %1477
  %1479 = ashr exact i64 %1478, 3
  %1480 = add nsw i64 %1479, 1
  %1481 = icmp ugt i64 %1480, 268435455
  br i1 %1481, label %1482, label %1484

1482:                                             ; preds = %1475
  %1483 = bitcast %"class.v8::internal::ZoneVector.1400"* %18 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1483) #9
  unreachable

1484:                                             ; preds = %1475
  %1485 = sub i64 %1470, %1477
  %1486 = ashr exact i64 %1485, 3
  %1487 = icmp ult i64 %1486, 134217727
  br i1 %1487, label %1488, label %1493

1488:                                             ; preds = %1484
  %1489 = ashr exact i64 %1485, 2
  %1490 = icmp ult i64 %1489, %1480
  %1491 = select i1 %1490, i64 %1480, i64 %1489
  %1492 = icmp eq i64 %1491, 0
  br i1 %1492, label %1510, label %1493

1493:                                             ; preds = %1488, %1484
  %1494 = phi i64 [ %1491, %1488 ], [ 268435455, %1484 ]
  %1495 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %908, align 8
  %1496 = shl i64 %1494, 3
  %1497 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1495, i64 0, i32 2
  %1498 = load i64, i64* %1497, align 8
  %1499 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1495, i64 0, i32 3
  %1500 = load i64, i64* %1499, align 8
  %1501 = sub i64 %1500, %1498
  %1502 = icmp ugt i64 %1496, %1501
  br i1 %1502, label %1503, label %1505, !prof !3

1503:                                             ; preds = %1493
  %1504 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1495, i64 %1496) #10
  br label %1507

1505:                                             ; preds = %1493
  %1506 = add i64 %1498, %1496
  store i64 %1506, i64* %1497, align 8
  br label %1507

1507:                                             ; preds = %1505, %1503
  %1508 = phi i64 [ %1504, %1503 ], [ %1498, %1505 ]
  %1509 = inttoptr i64 %1508 to %"class.v8::internal::compiler::Node"**
  br label %1510

1510:                                             ; preds = %1507, %1488
  %1511 = phi i64 [ %1494, %1507 ], [ 0, %1488 ]
  %1512 = phi %"class.v8::internal::compiler::Node"** [ %1509, %1507 ], [ null, %1488 ]
  %1513 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1512, i64 %1479
  %1514 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1512, i64 %1511
  %1515 = ptrtoint %"class.v8::internal::compiler::Node"** %1514 to i64
  %1516 = bitcast %"class.v8::internal::compiler::Node"** %1513 to i64*
  store i64 %1466, i64* %1516, align 8
  %1517 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1513, i64 1
  %1518 = ptrtoint %"class.v8::internal::compiler::Node"** %1517 to i64
  %1519 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %909, align 8
  %1520 = ptrtoint %"class.v8::internal::compiler::Node"** %1519 to i64
  %1521 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %903, align 8
  %1522 = icmp eq %"class.v8::internal::compiler::Node"** %1521, %1519
  br i1 %1522, label %1693, label %1523

1523:                                             ; preds = %1510
  %1524 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1521, i64 -1
  %1525 = ptrtoint %"class.v8::internal::compiler::Node"** %1524 to i64
  %1526 = sub i64 %1525, %1520
  %1527 = lshr i64 %1526, 3
  %1528 = add nuw nsw i64 %1527, 1
  %1529 = icmp ult i64 %1528, 4
  br i1 %1529, label %1623, label %1530

1530:                                             ; preds = %1523
  %1531 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1512, i64 -1
  %1532 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1521, i64 -1
  %1533 = ptrtoint %"class.v8::internal::compiler::Node"** %1532 to i64
  %1534 = sub i64 %1533, %1520
  %1535 = lshr i64 %1534, 3
  %1536 = sub nsw i64 %1479, %1535
  %1537 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1531, i64 %1536
  %1538 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1521, i64 -1
  %1539 = sub nsw i64 0, %1535
  %1540 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1538, i64 %1539
  %1541 = icmp ult %"class.v8::internal::compiler::Node"** %1537, %1521
  %1542 = icmp ult %"class.v8::internal::compiler::Node"** %1540, %1513
  %1543 = and i1 %1541, %1542
  br i1 %1543, label %1623, label %1544

1544:                                             ; preds = %1530
  %1545 = and i64 %1528, 4611686018427387900
  %1546 = sub nsw i64 0, %1545
  %1547 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1513, i64 %1546
  %1548 = sub nsw i64 0, %1545
  %1549 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1521, i64 %1548
  %1550 = add nsw i64 %1545, -4
  %1551 = lshr exact i64 %1550, 2
  %1552 = add nuw nsw i64 %1551, 1
  %1553 = and i64 %1552, 1
  %1554 = icmp eq i64 %1550, 0
  br i1 %1554, label %1599, label %1555

1555:                                             ; preds = %1544
  %1556 = sub nuw nsw i64 %1552, %1553
  %1557 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1513, i64 -1
  %1558 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1521, i64 -1
  %1559 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1513, i64 -1
  %1560 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1521, i64 -1
  br label %1561

1561:                                             ; preds = %1561, %1555
  %1562 = phi i64 [ 0, %1555 ], [ %1596, %1561 ]
  %1563 = phi i64 [ %1556, %1555 ], [ %1597, %1561 ]
  %1564 = sub i64 0, %1562
  %1565 = sub i64 0, %1562
  %1566 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1557, i64 %1564
  %1567 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1558, i64 %1565
  %1568 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1567, i64 -1
  %1569 = bitcast %"class.v8::internal::compiler::Node"** %1568 to <2 x i64>*
  %1570 = load <2 x i64>, <2 x i64>* %1569, align 8, !alias.scope !38
  %1571 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1567, i64 -2
  %1572 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1571, i64 -1
  %1573 = bitcast %"class.v8::internal::compiler::Node"** %1572 to <2 x i64>*
  %1574 = load <2 x i64>, <2 x i64>* %1573, align 8, !alias.scope !38
  %1575 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1566, i64 -1
  %1576 = bitcast %"class.v8::internal::compiler::Node"** %1575 to <2 x i64>*
  store <2 x i64> %1570, <2 x i64>* %1576, align 8, !alias.scope !41, !noalias !38
  %1577 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1566, i64 -2
  %1578 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1577, i64 -1
  %1579 = bitcast %"class.v8::internal::compiler::Node"** %1578 to <2 x i64>*
  store <2 x i64> %1574, <2 x i64>* %1579, align 8, !alias.scope !41, !noalias !38
  %1580 = sub nuw nsw i64 -4, %1562
  %1581 = sub nuw nsw i64 -4, %1562
  %1582 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1559, i64 %1580
  %1583 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1560, i64 %1581
  %1584 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1583, i64 -1
  %1585 = bitcast %"class.v8::internal::compiler::Node"** %1584 to <2 x i64>*
  %1586 = load <2 x i64>, <2 x i64>* %1585, align 8, !alias.scope !38
  %1587 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1583, i64 -2
  %1588 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1587, i64 -1
  %1589 = bitcast %"class.v8::internal::compiler::Node"** %1588 to <2 x i64>*
  %1590 = load <2 x i64>, <2 x i64>* %1589, align 8, !alias.scope !38
  %1591 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1582, i64 -1
  %1592 = bitcast %"class.v8::internal::compiler::Node"** %1591 to <2 x i64>*
  store <2 x i64> %1586, <2 x i64>* %1592, align 8, !alias.scope !41, !noalias !38
  %1593 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1582, i64 -2
  %1594 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1593, i64 -1
  %1595 = bitcast %"class.v8::internal::compiler::Node"** %1594 to <2 x i64>*
  store <2 x i64> %1590, <2 x i64>* %1595, align 8, !alias.scope !41, !noalias !38
  %1596 = add i64 %1562, 8
  %1597 = add i64 %1563, -2
  %1598 = icmp eq i64 %1597, 0
  br i1 %1598, label %1599, label %1561, !llvm.loop !43

1599:                                             ; preds = %1561, %1544
  %1600 = phi i64 [ 0, %1544 ], [ %1596, %1561 ]
  %1601 = icmp eq i64 %1553, 0
  br i1 %1601, label %1621, label %1602

1602:                                             ; preds = %1599
  %1603 = sub i64 0, %1600
  %1604 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1513, i64 -1
  %1605 = sub i64 0, %1600
  %1606 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1521, i64 -1
  %1607 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1604, i64 %1603
  %1608 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1606, i64 %1605
  %1609 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1608, i64 -1
  %1610 = bitcast %"class.v8::internal::compiler::Node"** %1609 to <2 x i64>*
  %1611 = load <2 x i64>, <2 x i64>* %1610, align 8, !alias.scope !38
  %1612 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1608, i64 -2
  %1613 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1612, i64 -1
  %1614 = bitcast %"class.v8::internal::compiler::Node"** %1613 to <2 x i64>*
  %1615 = load <2 x i64>, <2 x i64>* %1614, align 8, !alias.scope !38
  %1616 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1607, i64 -1
  %1617 = bitcast %"class.v8::internal::compiler::Node"** %1616 to <2 x i64>*
  store <2 x i64> %1611, <2 x i64>* %1617, align 8, !alias.scope !41, !noalias !38
  %1618 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1607, i64 -2
  %1619 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1618, i64 -1
  %1620 = bitcast %"class.v8::internal::compiler::Node"** %1619 to <2 x i64>*
  store <2 x i64> %1615, <2 x i64>* %1620, align 8, !alias.scope !41, !noalias !38
  br label %1621

1621:                                             ; preds = %1599, %1602
  %1622 = icmp eq i64 %1528, %1545
  br i1 %1622, label %1693, label %1623

1623:                                             ; preds = %1621, %1530, %1523
  %1624 = phi %"class.v8::internal::compiler::Node"** [ %1513, %1530 ], [ %1513, %1523 ], [ %1547, %1621 ]
  %1625 = phi %"class.v8::internal::compiler::Node"** [ %1521, %1530 ], [ %1521, %1523 ], [ %1549, %1621 ]
  %1626 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1625, i64 -1
  %1627 = ptrtoint %"class.v8::internal::compiler::Node"** %1626 to i64
  %1628 = sub i64 %1627, %1520
  %1629 = lshr i64 %1628, 3
  %1630 = add nuw nsw i64 %1629, 1
  %1631 = and i64 %1630, 7
  %1632 = icmp eq i64 %1631, 0
  br i1 %1632, label %1644, label %1633

1633:                                             ; preds = %1623, %1633
  %1634 = phi %"class.v8::internal::compiler::Node"** [ %1637, %1633 ], [ %1624, %1623 ]
  %1635 = phi %"class.v8::internal::compiler::Node"** [ %1638, %1633 ], [ %1625, %1623 ]
  %1636 = phi i64 [ %1642, %1633 ], [ %1631, %1623 ]
  %1637 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1634, i64 -1
  %1638 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1635, i64 -1
  %1639 = bitcast %"class.v8::internal::compiler::Node"** %1638 to i64*
  %1640 = load i64, i64* %1639, align 8
  %1641 = bitcast %"class.v8::internal::compiler::Node"** %1637 to i64*
  store i64 %1640, i64* %1641, align 8
  %1642 = add i64 %1636, -1
  %1643 = icmp eq i64 %1642, 0
  br i1 %1643, label %1644, label %1633, !llvm.loop !44

1644:                                             ; preds = %1633, %1623
  %1645 = phi %"class.v8::internal::compiler::Node"** [ undef, %1623 ], [ %1637, %1633 ]
  %1646 = phi %"class.v8::internal::compiler::Node"** [ %1624, %1623 ], [ %1637, %1633 ]
  %1647 = phi %"class.v8::internal::compiler::Node"** [ %1625, %1623 ], [ %1638, %1633 ]
  %1648 = icmp ult i64 %1628, 56
  br i1 %1648, label %1693, label %1649

1649:                                             ; preds = %1644, %1649
  %1650 = phi %"class.v8::internal::compiler::Node"** [ %1687, %1649 ], [ %1646, %1644 ]
  %1651 = phi %"class.v8::internal::compiler::Node"** [ %1688, %1649 ], [ %1647, %1644 ]
  %1652 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1650, i64 -1
  %1653 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1651, i64 -1
  %1654 = bitcast %"class.v8::internal::compiler::Node"** %1653 to i64*
  %1655 = load i64, i64* %1654, align 8
  %1656 = bitcast %"class.v8::internal::compiler::Node"** %1652 to i64*
  store i64 %1655, i64* %1656, align 8
  %1657 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1650, i64 -2
  %1658 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1651, i64 -2
  %1659 = bitcast %"class.v8::internal::compiler::Node"** %1658 to i64*
  %1660 = load i64, i64* %1659, align 8
  %1661 = bitcast %"class.v8::internal::compiler::Node"** %1657 to i64*
  store i64 %1660, i64* %1661, align 8
  %1662 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1650, i64 -3
  %1663 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1651, i64 -3
  %1664 = bitcast %"class.v8::internal::compiler::Node"** %1663 to i64*
  %1665 = load i64, i64* %1664, align 8
  %1666 = bitcast %"class.v8::internal::compiler::Node"** %1662 to i64*
  store i64 %1665, i64* %1666, align 8
  %1667 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1650, i64 -4
  %1668 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1651, i64 -4
  %1669 = bitcast %"class.v8::internal::compiler::Node"** %1668 to i64*
  %1670 = load i64, i64* %1669, align 8
  %1671 = bitcast %"class.v8::internal::compiler::Node"** %1667 to i64*
  store i64 %1670, i64* %1671, align 8
  %1672 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1650, i64 -5
  %1673 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1651, i64 -5
  %1674 = bitcast %"class.v8::internal::compiler::Node"** %1673 to i64*
  %1675 = load i64, i64* %1674, align 8
  %1676 = bitcast %"class.v8::internal::compiler::Node"** %1672 to i64*
  store i64 %1675, i64* %1676, align 8
  %1677 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1650, i64 -6
  %1678 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1651, i64 -6
  %1679 = bitcast %"class.v8::internal::compiler::Node"** %1678 to i64*
  %1680 = load i64, i64* %1679, align 8
  %1681 = bitcast %"class.v8::internal::compiler::Node"** %1677 to i64*
  store i64 %1680, i64* %1681, align 8
  %1682 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1650, i64 -7
  %1683 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1651, i64 -7
  %1684 = bitcast %"class.v8::internal::compiler::Node"** %1683 to i64*
  %1685 = load i64, i64* %1684, align 8
  %1686 = bitcast %"class.v8::internal::compiler::Node"** %1682 to i64*
  store i64 %1685, i64* %1686, align 8
  %1687 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1650, i64 -8
  %1688 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1651, i64 -8
  %1689 = bitcast %"class.v8::internal::compiler::Node"** %1688 to i64*
  %1690 = load i64, i64* %1689, align 8
  %1691 = bitcast %"class.v8::internal::compiler::Node"** %1687 to i64*
  store i64 %1690, i64* %1691, align 8
  %1692 = icmp eq %"class.v8::internal::compiler::Node"** %1688, %1519
  br i1 %1692, label %1693, label %1649, !llvm.loop !45

1693:                                             ; preds = %1644, %1649, %1621, %1510
  %1694 = phi %"class.v8::internal::compiler::Node"** [ %1513, %1510 ], [ %1547, %1621 ], [ %1645, %1644 ], [ %1687, %1649 ]
  %1695 = ptrtoint %"class.v8::internal::compiler::Node"** %1694 to i64
  store i64 %1695, i64* %906, align 8
  store i64 %1518, i64* %905, align 8
  store i64 %1515, i64* %907, align 8
  br label %1713

1696:                                             ; preds = %916, %916, %916
  %1697 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %887, align 8
  %1698 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1697, i64 0, i32 0, i32 0
  %1699 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1698, align 8
  %1700 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1697, i64 0, i32 0, i32 1
  %1701 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1700, align 8
  call void @_ZN2v88internal8compiler14NodeProperties17MergeControlToEndEPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_4NodeE(%"class.v8::internal::compiler::Graph"* %1699, %"class.v8::internal::compiler::CommonOperatorBuilder"* %1701, %"class.v8::internal::compiler::Node"* %918) #10
  %1702 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %887, align 8
  %1703 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1702, i64 0, i32 0, i32 0
  %1704 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1703, align 8
  %1705 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %1704, i64 0, i32 2
  %1706 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1705, align 8
  %1707 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %888, align 8
  %1708 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1707 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)***
  %1709 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*** %1708, align 8
  %1710 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %1709, i64 3
  %1711 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*)** %1710, align 8
  call void %1711(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %1707, %"class.v8::internal::compiler::Node"* %1706) #10
  br label %1713

1712:                                             ; preds = %916
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #9
  unreachable

1713:                                             ; preds = %1693, %1471, %1696
  %1714 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %917, i64 1
  %1715 = icmp eq %"class.v8::internal::compiler::Node"** %1714, %881
  br i1 %1715, label %910, label %916

1716:                                             ; preds = %910
  %1717 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %18, i64 0, i32 0, i32 0, i32 1
  %1718 = bitcast %"class.v8::internal::compiler::Node"*** %1717 to i64*
  %1719 = load i64, i64* %1718, align 8
  %1720 = bitcast %"class.v8::internal::ZoneVector.1400"* %18 to i64*
  %1721 = load i64, i64* %1720, align 8
  %1722 = sub i64 %1719, %1721
  %1723 = lshr exact i64 %1722, 3
  %1724 = trunc i64 %1723 to i32
  %1725 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %1726 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1725, align 8
  %1727 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1726, i64 0, i32 0, i32 0
  %1728 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1727, align 8
  %1729 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1726, i64 0, i32 0, i32 1
  %1730 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1729, align 8
  %1731 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5MergeEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1730, i32 %1724) #10
  %1732 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %18, i64 0, i32 0, i32 0, i32 0
  %1733 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1732, align 8
  %1734 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1728, %"class.v8::internal::compiler::Operator"* %1731, i32 %1724, %"class.v8::internal::compiler::Node"** %1733, i1 zeroext false) #10
  %1735 = ptrtoint %"class.v8::internal::compiler::Node"* %1734 to i64
  %1736 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %913, align 8
  %1737 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %16, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1738 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1737, align 8
  %1739 = icmp eq %"class.v8::internal::compiler::Node"** %1736, %1738
  %1740 = ptrtoint %"class.v8::internal::compiler::Node"** %1738 to i64
  br i1 %1739, label %1745, label %1741

1741:                                             ; preds = %1716
  %1742 = bitcast %"class.v8::internal::compiler::Node"** %1736 to i64*
  store i64 %1735, i64* %1742, align 8
  %1743 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1736, i64 1
  %1744 = ptrtoint %"class.v8::internal::compiler::Node"** %1743 to i64
  store i64 %1744, i64* %914, align 8
  br label %1968

1745:                                             ; preds = %1716
  %1746 = ptrtoint %"class.v8::internal::compiler::Node"** %1736 to i64
  %1747 = load i64, i64* %892, align 8
  %1748 = sub i64 %1746, %1747
  %1749 = ashr exact i64 %1748, 3
  %1750 = add nsw i64 %1749, 1
  %1751 = icmp ugt i64 %1750, 268435455
  br i1 %1751, label %1752, label %1754

1752:                                             ; preds = %1745
  %1753 = bitcast %"class.v8::internal::ZoneVector.1400"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1753) #9
  unreachable

1754:                                             ; preds = %1745
  %1755 = bitcast %"class.v8::internal::compiler::Node"*** %1737 to i64*
  %1756 = sub i64 %1740, %1747
  %1757 = ashr exact i64 %1756, 3
  %1758 = icmp ult i64 %1757, 134217727
  br i1 %1758, label %1759, label %1764

1759:                                             ; preds = %1754
  %1760 = ashr exact i64 %1756, 2
  %1761 = icmp ult i64 %1760, %1750
  %1762 = select i1 %1761, i64 %1750, i64 %1760
  %1763 = icmp eq i64 %1762, 0
  br i1 %1763, label %1782, label %1764

1764:                                             ; preds = %1759, %1754
  %1765 = phi i64 [ %1762, %1759 ], [ 268435455, %1754 ]
  %1766 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %16, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1767 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1766, align 8
  %1768 = shl i64 %1765, 3
  %1769 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1767, i64 0, i32 2
  %1770 = load i64, i64* %1769, align 8
  %1771 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1767, i64 0, i32 3
  %1772 = load i64, i64* %1771, align 8
  %1773 = sub i64 %1772, %1770
  %1774 = icmp ugt i64 %1768, %1773
  br i1 %1774, label %1775, label %1777, !prof !3

1775:                                             ; preds = %1764
  %1776 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1767, i64 %1768) #10
  br label %1779

1777:                                             ; preds = %1764
  %1778 = add i64 %1770, %1768
  store i64 %1778, i64* %1769, align 8
  br label %1779

1779:                                             ; preds = %1777, %1775
  %1780 = phi i64 [ %1776, %1775 ], [ %1770, %1777 ]
  %1781 = inttoptr i64 %1780 to %"class.v8::internal::compiler::Node"**
  br label %1782

1782:                                             ; preds = %1779, %1759
  %1783 = phi i64 [ %1765, %1779 ], [ 0, %1759 ]
  %1784 = phi %"class.v8::internal::compiler::Node"** [ %1781, %1779 ], [ null, %1759 ]
  %1785 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1784, i64 %1749
  %1786 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1784, i64 %1783
  %1787 = ptrtoint %"class.v8::internal::compiler::Node"** %1786 to i64
  %1788 = bitcast %"class.v8::internal::compiler::Node"** %1785 to i64*
  store i64 %1735, i64* %1788, align 8
  %1789 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1785, i64 1
  %1790 = ptrtoint %"class.v8::internal::compiler::Node"** %1789 to i64
  %1791 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %16, i64 0, i32 0, i32 0, i32 0
  %1792 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1791, align 8
  %1793 = ptrtoint %"class.v8::internal::compiler::Node"** %1792 to i64
  %1794 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %913, align 8
  %1795 = icmp eq %"class.v8::internal::compiler::Node"** %1794, %1792
  br i1 %1795, label %1965, label %1796

1796:                                             ; preds = %1782
  %1797 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1794, i64 -1
  %1798 = ptrtoint %"class.v8::internal::compiler::Node"** %1797 to i64
  %1799 = sub i64 %1798, %1793
  %1800 = lshr i64 %1799, 3
  %1801 = add nuw nsw i64 %1800, 1
  %1802 = icmp ult i64 %1801, 4
  br i1 %1802, label %1895, label %1803

1803:                                             ; preds = %1796
  %1804 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1794, i64 -1
  %1805 = ptrtoint %"class.v8::internal::compiler::Node"** %1804 to i64
  %1806 = sub i64 %1805, %1793
  %1807 = lshr i64 %1806, 3
  %1808 = xor i64 %1807, -1
  %1809 = add nsw i64 %1749, %1808
  %1810 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1784, i64 %1809
  %1811 = xor i64 %1807, -1
  %1812 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1794, i64 %1811
  %1813 = icmp ult %"class.v8::internal::compiler::Node"** %1810, %1794
  %1814 = icmp ult %"class.v8::internal::compiler::Node"** %1812, %1785
  %1815 = and i1 %1813, %1814
  br i1 %1815, label %1895, label %1816

1816:                                             ; preds = %1803
  %1817 = and i64 %1801, 4611686018427387900
  %1818 = sub nsw i64 0, %1817
  %1819 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1785, i64 %1818
  %1820 = sub nsw i64 0, %1817
  %1821 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1794, i64 %1820
  %1822 = add nsw i64 %1817, -4
  %1823 = lshr exact i64 %1822, 2
  %1824 = add nuw nsw i64 %1823, 1
  %1825 = and i64 %1824, 1
  %1826 = icmp eq i64 %1822, 0
  br i1 %1826, label %1871, label %1827

1827:                                             ; preds = %1816
  %1828 = sub nuw nsw i64 %1824, %1825
  %1829 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1785, i64 -1
  %1830 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1794, i64 -1
  %1831 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1785, i64 -1
  %1832 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1794, i64 -1
  br label %1833

1833:                                             ; preds = %1833, %1827
  %1834 = phi i64 [ 0, %1827 ], [ %1868, %1833 ]
  %1835 = phi i64 [ %1828, %1827 ], [ %1869, %1833 ]
  %1836 = sub i64 0, %1834
  %1837 = sub i64 0, %1834
  %1838 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1829, i64 %1836
  %1839 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1830, i64 %1837
  %1840 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1839, i64 -1
  %1841 = bitcast %"class.v8::internal::compiler::Node"** %1840 to <2 x i64>*
  %1842 = load <2 x i64>, <2 x i64>* %1841, align 8, !alias.scope !46
  %1843 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1839, i64 -2
  %1844 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1843, i64 -1
  %1845 = bitcast %"class.v8::internal::compiler::Node"** %1844 to <2 x i64>*
  %1846 = load <2 x i64>, <2 x i64>* %1845, align 8, !alias.scope !46
  %1847 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1838, i64 -1
  %1848 = bitcast %"class.v8::internal::compiler::Node"** %1847 to <2 x i64>*
  store <2 x i64> %1842, <2 x i64>* %1848, align 8, !alias.scope !49, !noalias !46
  %1849 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1838, i64 -2
  %1850 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1849, i64 -1
  %1851 = bitcast %"class.v8::internal::compiler::Node"** %1850 to <2 x i64>*
  store <2 x i64> %1846, <2 x i64>* %1851, align 8, !alias.scope !49, !noalias !46
  %1852 = sub nuw nsw i64 -4, %1834
  %1853 = sub nuw nsw i64 -4, %1834
  %1854 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1831, i64 %1852
  %1855 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1832, i64 %1853
  %1856 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1855, i64 -1
  %1857 = bitcast %"class.v8::internal::compiler::Node"** %1856 to <2 x i64>*
  %1858 = load <2 x i64>, <2 x i64>* %1857, align 8, !alias.scope !46
  %1859 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1855, i64 -2
  %1860 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1859, i64 -1
  %1861 = bitcast %"class.v8::internal::compiler::Node"** %1860 to <2 x i64>*
  %1862 = load <2 x i64>, <2 x i64>* %1861, align 8, !alias.scope !46
  %1863 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1854, i64 -1
  %1864 = bitcast %"class.v8::internal::compiler::Node"** %1863 to <2 x i64>*
  store <2 x i64> %1858, <2 x i64>* %1864, align 8, !alias.scope !49, !noalias !46
  %1865 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1854, i64 -2
  %1866 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1865, i64 -1
  %1867 = bitcast %"class.v8::internal::compiler::Node"** %1866 to <2 x i64>*
  store <2 x i64> %1862, <2 x i64>* %1867, align 8, !alias.scope !49, !noalias !46
  %1868 = add i64 %1834, 8
  %1869 = add i64 %1835, -2
  %1870 = icmp eq i64 %1869, 0
  br i1 %1870, label %1871, label %1833, !llvm.loop !51

1871:                                             ; preds = %1833, %1816
  %1872 = phi i64 [ 0, %1816 ], [ %1868, %1833 ]
  %1873 = icmp eq i64 %1825, 0
  br i1 %1873, label %1893, label %1874

1874:                                             ; preds = %1871
  %1875 = sub i64 0, %1872
  %1876 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1785, i64 -1
  %1877 = sub i64 0, %1872
  %1878 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1794, i64 -1
  %1879 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1876, i64 %1875
  %1880 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1878, i64 %1877
  %1881 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1880, i64 -1
  %1882 = bitcast %"class.v8::internal::compiler::Node"** %1881 to <2 x i64>*
  %1883 = load <2 x i64>, <2 x i64>* %1882, align 8, !alias.scope !46
  %1884 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1880, i64 -2
  %1885 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1884, i64 -1
  %1886 = bitcast %"class.v8::internal::compiler::Node"** %1885 to <2 x i64>*
  %1887 = load <2 x i64>, <2 x i64>* %1886, align 8, !alias.scope !46
  %1888 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1879, i64 -1
  %1889 = bitcast %"class.v8::internal::compiler::Node"** %1888 to <2 x i64>*
  store <2 x i64> %1883, <2 x i64>* %1889, align 8, !alias.scope !49, !noalias !46
  %1890 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1879, i64 -2
  %1891 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1890, i64 -1
  %1892 = bitcast %"class.v8::internal::compiler::Node"** %1891 to <2 x i64>*
  store <2 x i64> %1887, <2 x i64>* %1892, align 8, !alias.scope !49, !noalias !46
  br label %1893

1893:                                             ; preds = %1871, %1874
  %1894 = icmp eq i64 %1801, %1817
  br i1 %1894, label %1965, label %1895

1895:                                             ; preds = %1893, %1803, %1796
  %1896 = phi %"class.v8::internal::compiler::Node"** [ %1785, %1803 ], [ %1785, %1796 ], [ %1819, %1893 ]
  %1897 = phi %"class.v8::internal::compiler::Node"** [ %1794, %1803 ], [ %1794, %1796 ], [ %1821, %1893 ]
  %1898 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1897, i64 -1
  %1899 = ptrtoint %"class.v8::internal::compiler::Node"** %1898 to i64
  %1900 = sub i64 %1899, %1793
  %1901 = lshr i64 %1900, 3
  %1902 = add nuw nsw i64 %1901, 1
  %1903 = and i64 %1902, 7
  %1904 = icmp eq i64 %1903, 0
  br i1 %1904, label %1916, label %1905

1905:                                             ; preds = %1895, %1905
  %1906 = phi %"class.v8::internal::compiler::Node"** [ %1909, %1905 ], [ %1896, %1895 ]
  %1907 = phi %"class.v8::internal::compiler::Node"** [ %1910, %1905 ], [ %1897, %1895 ]
  %1908 = phi i64 [ %1914, %1905 ], [ %1903, %1895 ]
  %1909 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1906, i64 -1
  %1910 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1907, i64 -1
  %1911 = bitcast %"class.v8::internal::compiler::Node"** %1910 to i64*
  %1912 = load i64, i64* %1911, align 8
  %1913 = bitcast %"class.v8::internal::compiler::Node"** %1909 to i64*
  store i64 %1912, i64* %1913, align 8
  %1914 = add i64 %1908, -1
  %1915 = icmp eq i64 %1914, 0
  br i1 %1915, label %1916, label %1905, !llvm.loop !52

1916:                                             ; preds = %1905, %1895
  %1917 = phi %"class.v8::internal::compiler::Node"** [ undef, %1895 ], [ %1909, %1905 ]
  %1918 = phi %"class.v8::internal::compiler::Node"** [ %1896, %1895 ], [ %1909, %1905 ]
  %1919 = phi %"class.v8::internal::compiler::Node"** [ %1897, %1895 ], [ %1910, %1905 ]
  %1920 = icmp ult i64 %1900, 56
  br i1 %1920, label %1965, label %1921

1921:                                             ; preds = %1916, %1921
  %1922 = phi %"class.v8::internal::compiler::Node"** [ %1959, %1921 ], [ %1918, %1916 ]
  %1923 = phi %"class.v8::internal::compiler::Node"** [ %1960, %1921 ], [ %1919, %1916 ]
  %1924 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1922, i64 -1
  %1925 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1923, i64 -1
  %1926 = bitcast %"class.v8::internal::compiler::Node"** %1925 to i64*
  %1927 = load i64, i64* %1926, align 8
  %1928 = bitcast %"class.v8::internal::compiler::Node"** %1924 to i64*
  store i64 %1927, i64* %1928, align 8
  %1929 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1922, i64 -2
  %1930 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1923, i64 -2
  %1931 = bitcast %"class.v8::internal::compiler::Node"** %1930 to i64*
  %1932 = load i64, i64* %1931, align 8
  %1933 = bitcast %"class.v8::internal::compiler::Node"** %1929 to i64*
  store i64 %1932, i64* %1933, align 8
  %1934 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1922, i64 -3
  %1935 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1923, i64 -3
  %1936 = bitcast %"class.v8::internal::compiler::Node"** %1935 to i64*
  %1937 = load i64, i64* %1936, align 8
  %1938 = bitcast %"class.v8::internal::compiler::Node"** %1934 to i64*
  store i64 %1937, i64* %1938, align 8
  %1939 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1922, i64 -4
  %1940 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1923, i64 -4
  %1941 = bitcast %"class.v8::internal::compiler::Node"** %1940 to i64*
  %1942 = load i64, i64* %1941, align 8
  %1943 = bitcast %"class.v8::internal::compiler::Node"** %1939 to i64*
  store i64 %1942, i64* %1943, align 8
  %1944 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1922, i64 -5
  %1945 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1923, i64 -5
  %1946 = bitcast %"class.v8::internal::compiler::Node"** %1945 to i64*
  %1947 = load i64, i64* %1946, align 8
  %1948 = bitcast %"class.v8::internal::compiler::Node"** %1944 to i64*
  store i64 %1947, i64* %1948, align 8
  %1949 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1922, i64 -6
  %1950 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1923, i64 -6
  %1951 = bitcast %"class.v8::internal::compiler::Node"** %1950 to i64*
  %1952 = load i64, i64* %1951, align 8
  %1953 = bitcast %"class.v8::internal::compiler::Node"** %1949 to i64*
  store i64 %1952, i64* %1953, align 8
  %1954 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1922, i64 -7
  %1955 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1923, i64 -7
  %1956 = bitcast %"class.v8::internal::compiler::Node"** %1955 to i64*
  %1957 = load i64, i64* %1956, align 8
  %1958 = bitcast %"class.v8::internal::compiler::Node"** %1954 to i64*
  store i64 %1957, i64* %1958, align 8
  %1959 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1922, i64 -8
  %1960 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1923, i64 -8
  %1961 = bitcast %"class.v8::internal::compiler::Node"** %1960 to i64*
  %1962 = load i64, i64* %1961, align 8
  %1963 = bitcast %"class.v8::internal::compiler::Node"** %1959 to i64*
  store i64 %1962, i64* %1963, align 8
  %1964 = icmp eq %"class.v8::internal::compiler::Node"** %1960, %1792
  br i1 %1964, label %1965, label %1921, !llvm.loop !53

1965:                                             ; preds = %1916, %1921, %1893, %1782
  %1966 = phi %"class.v8::internal::compiler::Node"** [ %1785, %1782 ], [ %1819, %1893 ], [ %1917, %1916 ], [ %1959, %1921 ]
  %1967 = ptrtoint %"class.v8::internal::compiler::Node"** %1966 to i64
  store i64 %1967, i64* %892, align 8
  store i64 %1790, i64* %914, align 8
  store i64 %1787, i64* %1755, align 8
  br label %1968

1968:                                             ; preds = %1741, %1965
  %1969 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %17, i64 0, i32 0, i32 0, i32 1
  %1970 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1969, align 8
  %1971 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %17, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1972 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1971, align 8
  %1973 = icmp eq %"class.v8::internal::compiler::Node"** %1970, %1972
  %1974 = ptrtoint %"class.v8::internal::compiler::Node"** %1972 to i64
  br i1 %1973, label %1981, label %1975

1975:                                             ; preds = %1968
  %1976 = bitcast %"class.v8::internal::compiler::Node"** %1970 to i64*
  store i64 %1735, i64* %1976, align 8
  %1977 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1970, i64 1
  %1978 = ptrtoint %"class.v8::internal::compiler::Node"** %1977 to i64
  %1979 = bitcast %"class.v8::internal::compiler::Node"*** %1969 to i64*
  store i64 %1978, i64* %1979, align 8
  %1980 = bitcast %"class.v8::internal::ZoneVector.1400"* %17 to i64*
  br label %2206

1981:                                             ; preds = %1968
  %1982 = ptrtoint %"class.v8::internal::compiler::Node"** %1970 to i64
  %1983 = bitcast %"class.v8::internal::compiler::Node"*** %1969 to i64*
  %1984 = bitcast %"class.v8::internal::ZoneVector.1400"* %17 to i64*
  %1985 = load i64, i64* %1984, align 8
  %1986 = sub i64 %1982, %1985
  %1987 = ashr exact i64 %1986, 3
  %1988 = add nsw i64 %1987, 1
  %1989 = icmp ugt i64 %1988, 268435455
  br i1 %1989, label %1990, label %1992

1990:                                             ; preds = %1981
  %1991 = bitcast %"class.v8::internal::ZoneVector.1400"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1991) #9
  unreachable

1992:                                             ; preds = %1981
  %1993 = bitcast %"class.v8::internal::compiler::Node"*** %1971 to i64*
  %1994 = sub i64 %1974, %1985
  %1995 = ashr exact i64 %1994, 3
  %1996 = icmp ult i64 %1995, 134217727
  br i1 %1996, label %1997, label %2002

1997:                                             ; preds = %1992
  %1998 = ashr exact i64 %1994, 2
  %1999 = icmp ult i64 %1998, %1988
  %2000 = select i1 %1999, i64 %1988, i64 %1998
  %2001 = icmp eq i64 %2000, 0
  br i1 %2001, label %2020, label %2002

2002:                                             ; preds = %1997, %1992
  %2003 = phi i64 [ %2000, %1997 ], [ 268435455, %1992 ]
  %2004 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %17, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %2005 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %2004, align 8
  %2006 = shl i64 %2003, 3
  %2007 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2005, i64 0, i32 2
  %2008 = load i64, i64* %2007, align 8
  %2009 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %2005, i64 0, i32 3
  %2010 = load i64, i64* %2009, align 8
  %2011 = sub i64 %2010, %2008
  %2012 = icmp ugt i64 %2006, %2011
  br i1 %2012, label %2013, label %2015, !prof !3

2013:                                             ; preds = %2002
  %2014 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %2005, i64 %2006) #10
  br label %2017

2015:                                             ; preds = %2002
  %2016 = add i64 %2008, %2006
  store i64 %2016, i64* %2007, align 8
  br label %2017

2017:                                             ; preds = %2015, %2013
  %2018 = phi i64 [ %2014, %2013 ], [ %2008, %2015 ]
  %2019 = inttoptr i64 %2018 to %"class.v8::internal::compiler::Node"**
  br label %2020

2020:                                             ; preds = %2017, %1997
  %2021 = phi i64 [ %2003, %2017 ], [ 0, %1997 ]
  %2022 = phi %"class.v8::internal::compiler::Node"** [ %2019, %2017 ], [ null, %1997 ]
  %2023 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2022, i64 %1987
  %2024 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2022, i64 %2021
  %2025 = ptrtoint %"class.v8::internal::compiler::Node"** %2024 to i64
  %2026 = bitcast %"class.v8::internal::compiler::Node"** %2023 to i64*
  store i64 %1735, i64* %2026, align 8
  %2027 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2023, i64 1
  %2028 = ptrtoint %"class.v8::internal::compiler::Node"** %2027 to i64
  %2029 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %17, i64 0, i32 0, i32 0, i32 0
  %2030 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %2029, align 8
  %2031 = ptrtoint %"class.v8::internal::compiler::Node"** %2030 to i64
  %2032 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1969, align 8
  %2033 = icmp eq %"class.v8::internal::compiler::Node"** %2032, %2030
  br i1 %2033, label %2203, label %2034

2034:                                             ; preds = %2020
  %2035 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2032, i64 -1
  %2036 = ptrtoint %"class.v8::internal::compiler::Node"** %2035 to i64
  %2037 = sub i64 %2036, %2031
  %2038 = lshr i64 %2037, 3
  %2039 = add nuw nsw i64 %2038, 1
  %2040 = icmp ult i64 %2039, 4
  br i1 %2040, label %2133, label %2041

2041:                                             ; preds = %2034
  %2042 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2032, i64 -1
  %2043 = ptrtoint %"class.v8::internal::compiler::Node"** %2042 to i64
  %2044 = sub i64 %2043, %2031
  %2045 = lshr i64 %2044, 3
  %2046 = xor i64 %2045, -1
  %2047 = add nsw i64 %1987, %2046
  %2048 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2022, i64 %2047
  %2049 = xor i64 %2045, -1
  %2050 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2032, i64 %2049
  %2051 = icmp ult %"class.v8::internal::compiler::Node"** %2048, %2032
  %2052 = icmp ult %"class.v8::internal::compiler::Node"** %2050, %2023
  %2053 = and i1 %2051, %2052
  br i1 %2053, label %2133, label %2054

2054:                                             ; preds = %2041
  %2055 = and i64 %2039, 4611686018427387900
  %2056 = sub nsw i64 0, %2055
  %2057 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2023, i64 %2056
  %2058 = sub nsw i64 0, %2055
  %2059 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2032, i64 %2058
  %2060 = add nsw i64 %2055, -4
  %2061 = lshr exact i64 %2060, 2
  %2062 = add nuw nsw i64 %2061, 1
  %2063 = and i64 %2062, 1
  %2064 = icmp eq i64 %2060, 0
  br i1 %2064, label %2111, label %2065

2065:                                             ; preds = %2054
  %2066 = sub nuw nsw i64 %2062, %2063
  %2067 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2023, i64 -1
  %2068 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2032, i64 -1
  %2069 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2023, i64 -1
  %2070 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2032, i64 -1
  br label %2071

2071:                                             ; preds = %2071, %2065
  %2072 = phi i64 [ 0, %2065 ], [ %2106, %2071 ]
  %2073 = phi i64 [ %2066, %2065 ], [ %2107, %2071 ]
  %2074 = sub i64 0, %2072
  %2075 = sub i64 0, %2072
  %2076 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2067, i64 %2074
  %2077 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2068, i64 %2075
  %2078 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2077, i64 -1
  %2079 = bitcast %"class.v8::internal::compiler::Node"** %2078 to <2 x i64>*
  %2080 = load <2 x i64>, <2 x i64>* %2079, align 8, !alias.scope !54
  %2081 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2077, i64 -2
  %2082 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2081, i64 -1
  %2083 = bitcast %"class.v8::internal::compiler::Node"** %2082 to <2 x i64>*
  %2084 = load <2 x i64>, <2 x i64>* %2083, align 8, !alias.scope !54
  %2085 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2076, i64 -1
  %2086 = bitcast %"class.v8::internal::compiler::Node"** %2085 to <2 x i64>*
  store <2 x i64> %2080, <2 x i64>* %2086, align 8, !alias.scope !57, !noalias !54
  %2087 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2076, i64 -2
  %2088 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2087, i64 -1
  %2089 = bitcast %"class.v8::internal::compiler::Node"** %2088 to <2 x i64>*
  store <2 x i64> %2084, <2 x i64>* %2089, align 8, !alias.scope !57, !noalias !54
  %2090 = sub nuw nsw i64 -4, %2072
  %2091 = sub nuw nsw i64 -4, %2072
  %2092 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2069, i64 %2090
  %2093 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2070, i64 %2091
  %2094 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2093, i64 -1
  %2095 = bitcast %"class.v8::internal::compiler::Node"** %2094 to <2 x i64>*
  %2096 = load <2 x i64>, <2 x i64>* %2095, align 8, !alias.scope !54
  %2097 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2093, i64 -2
  %2098 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2097, i64 -1
  %2099 = bitcast %"class.v8::internal::compiler::Node"** %2098 to <2 x i64>*
  %2100 = load <2 x i64>, <2 x i64>* %2099, align 8, !alias.scope !54
  %2101 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2092, i64 -1
  %2102 = bitcast %"class.v8::internal::compiler::Node"** %2101 to <2 x i64>*
  store <2 x i64> %2096, <2 x i64>* %2102, align 8, !alias.scope !57, !noalias !54
  %2103 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2092, i64 -2
  %2104 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2103, i64 -1
  %2105 = bitcast %"class.v8::internal::compiler::Node"** %2104 to <2 x i64>*
  store <2 x i64> %2100, <2 x i64>* %2105, align 8, !alias.scope !57, !noalias !54
  %2106 = add i64 %2072, 8
  %2107 = add i64 %2073, -2
  %2108 = icmp eq i64 %2107, 0
  br i1 %2108, label %2109, label %2071, !llvm.loop !59

2109:                                             ; preds = %2071
  %2110 = sub nuw nsw i64 -8, %2072
  br label %2111

2111:                                             ; preds = %2109, %2054
  %2112 = phi i64 [ 0, %2054 ], [ %2110, %2109 ]
  %2113 = icmp eq i64 %2063, 0
  br i1 %2113, label %2131, label %2114

2114:                                             ; preds = %2111
  %2115 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2023, i64 -1
  %2116 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2032, i64 -1
  %2117 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2115, i64 %2112
  %2118 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2116, i64 %2112
  %2119 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2118, i64 -1
  %2120 = bitcast %"class.v8::internal::compiler::Node"** %2119 to <2 x i64>*
  %2121 = load <2 x i64>, <2 x i64>* %2120, align 8, !alias.scope !54
  %2122 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2118, i64 -2
  %2123 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2122, i64 -1
  %2124 = bitcast %"class.v8::internal::compiler::Node"** %2123 to <2 x i64>*
  %2125 = load <2 x i64>, <2 x i64>* %2124, align 8, !alias.scope !54
  %2126 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2117, i64 -1
  %2127 = bitcast %"class.v8::internal::compiler::Node"** %2126 to <2 x i64>*
  store <2 x i64> %2121, <2 x i64>* %2127, align 8, !alias.scope !57, !noalias !54
  %2128 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2117, i64 -2
  %2129 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2128, i64 -1
  %2130 = bitcast %"class.v8::internal::compiler::Node"** %2129 to <2 x i64>*
  store <2 x i64> %2125, <2 x i64>* %2130, align 8, !alias.scope !57, !noalias !54
  br label %2131

2131:                                             ; preds = %2111, %2114
  %2132 = icmp eq i64 %2039, %2055
  br i1 %2132, label %2203, label %2133

2133:                                             ; preds = %2131, %2041, %2034
  %2134 = phi %"class.v8::internal::compiler::Node"** [ %2023, %2041 ], [ %2023, %2034 ], [ %2057, %2131 ]
  %2135 = phi %"class.v8::internal::compiler::Node"** [ %2032, %2041 ], [ %2032, %2034 ], [ %2059, %2131 ]
  %2136 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2135, i64 -1
  %2137 = ptrtoint %"class.v8::internal::compiler::Node"** %2136 to i64
  %2138 = sub i64 %2137, %2031
  %2139 = lshr i64 %2138, 3
  %2140 = add nuw nsw i64 %2139, 1
  %2141 = and i64 %2140, 7
  %2142 = icmp eq i64 %2141, 0
  br i1 %2142, label %2154, label %2143

2143:                                             ; preds = %2133, %2143
  %2144 = phi %"class.v8::internal::compiler::Node"** [ %2147, %2143 ], [ %2134, %2133 ]
  %2145 = phi %"class.v8::internal::compiler::Node"** [ %2148, %2143 ], [ %2135, %2133 ]
  %2146 = phi i64 [ %2152, %2143 ], [ %2141, %2133 ]
  %2147 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2144, i64 -1
  %2148 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2145, i64 -1
  %2149 = bitcast %"class.v8::internal::compiler::Node"** %2148 to i64*
  %2150 = load i64, i64* %2149, align 8
  %2151 = bitcast %"class.v8::internal::compiler::Node"** %2147 to i64*
  store i64 %2150, i64* %2151, align 8
  %2152 = add i64 %2146, -1
  %2153 = icmp eq i64 %2152, 0
  br i1 %2153, label %2154, label %2143, !llvm.loop !60

2154:                                             ; preds = %2143, %2133
  %2155 = phi %"class.v8::internal::compiler::Node"** [ undef, %2133 ], [ %2147, %2143 ]
  %2156 = phi %"class.v8::internal::compiler::Node"** [ %2134, %2133 ], [ %2147, %2143 ]
  %2157 = phi %"class.v8::internal::compiler::Node"** [ %2135, %2133 ], [ %2148, %2143 ]
  %2158 = icmp ult i64 %2138, 56
  br i1 %2158, label %2203, label %2159

2159:                                             ; preds = %2154, %2159
  %2160 = phi %"class.v8::internal::compiler::Node"** [ %2197, %2159 ], [ %2156, %2154 ]
  %2161 = phi %"class.v8::internal::compiler::Node"** [ %2198, %2159 ], [ %2157, %2154 ]
  %2162 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2160, i64 -1
  %2163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2161, i64 -1
  %2164 = bitcast %"class.v8::internal::compiler::Node"** %2163 to i64*
  %2165 = load i64, i64* %2164, align 8
  %2166 = bitcast %"class.v8::internal::compiler::Node"** %2162 to i64*
  store i64 %2165, i64* %2166, align 8
  %2167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2160, i64 -2
  %2168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2161, i64 -2
  %2169 = bitcast %"class.v8::internal::compiler::Node"** %2168 to i64*
  %2170 = load i64, i64* %2169, align 8
  %2171 = bitcast %"class.v8::internal::compiler::Node"** %2167 to i64*
  store i64 %2170, i64* %2171, align 8
  %2172 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2160, i64 -3
  %2173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2161, i64 -3
  %2174 = bitcast %"class.v8::internal::compiler::Node"** %2173 to i64*
  %2175 = load i64, i64* %2174, align 8
  %2176 = bitcast %"class.v8::internal::compiler::Node"** %2172 to i64*
  store i64 %2175, i64* %2176, align 8
  %2177 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2160, i64 -4
  %2178 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2161, i64 -4
  %2179 = bitcast %"class.v8::internal::compiler::Node"** %2178 to i64*
  %2180 = load i64, i64* %2179, align 8
  %2181 = bitcast %"class.v8::internal::compiler::Node"** %2177 to i64*
  store i64 %2180, i64* %2181, align 8
  %2182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2160, i64 -5
  %2183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2161, i64 -5
  %2184 = bitcast %"class.v8::internal::compiler::Node"** %2183 to i64*
  %2185 = load i64, i64* %2184, align 8
  %2186 = bitcast %"class.v8::internal::compiler::Node"** %2182 to i64*
  store i64 %2185, i64* %2186, align 8
  %2187 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2160, i64 -6
  %2188 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2161, i64 -6
  %2189 = bitcast %"class.v8::internal::compiler::Node"** %2188 to i64*
  %2190 = load i64, i64* %2189, align 8
  %2191 = bitcast %"class.v8::internal::compiler::Node"** %2187 to i64*
  store i64 %2190, i64* %2191, align 8
  %2192 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2160, i64 -7
  %2193 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2161, i64 -7
  %2194 = bitcast %"class.v8::internal::compiler::Node"** %2193 to i64*
  %2195 = load i64, i64* %2194, align 8
  %2196 = bitcast %"class.v8::internal::compiler::Node"** %2192 to i64*
  store i64 %2195, i64* %2196, align 8
  %2197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2160, i64 -8
  %2198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2161, i64 -8
  %2199 = bitcast %"class.v8::internal::compiler::Node"** %2198 to i64*
  %2200 = load i64, i64* %2199, align 8
  %2201 = bitcast %"class.v8::internal::compiler::Node"** %2197 to i64*
  store i64 %2200, i64* %2201, align 8
  %2202 = icmp eq %"class.v8::internal::compiler::Node"** %2198, %2030
  br i1 %2202, label %2203, label %2159, !llvm.loop !61

2203:                                             ; preds = %2154, %2159, %2131, %2020
  %2204 = phi %"class.v8::internal::compiler::Node"** [ %2023, %2020 ], [ %2057, %2131 ], [ %2155, %2154 ], [ %2197, %2159 ]
  %2205 = ptrtoint %"class.v8::internal::compiler::Node"** %2204 to i64
  store i64 %2205, i64* %1984, align 8
  store i64 %2028, i64* %1983, align 8
  store i64 %2025, i64* %1993, align 8
  br label %2206

2206:                                             ; preds = %1975, %2203
  %2207 = phi i64* [ %1980, %1975 ], [ %1984, %2203 ]
  %2208 = phi i64* [ %1979, %1975 ], [ %1983, %2203 ]
  %2209 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1725, align 8
  %2210 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2209, i64 0, i32 0, i32 0
  %2211 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2210, align 8
  %2212 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2209, i64 0, i32 0, i32 1
  %2213 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %2212, align 8
  %2214 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %2213, i8 zeroext 9, i32 %1724) #10
  %2215 = load i64, i64* %914, align 8
  %2216 = load i64, i64* %892, align 8
  %2217 = sub i64 %2215, %2216
  %2218 = lshr exact i64 %2217, 3
  %2219 = trunc i64 %2218 to i32
  %2220 = inttoptr i64 %2216 to %"class.v8::internal::compiler::Node"**
  %2221 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %2211, %"class.v8::internal::compiler::Operator"* %2214, i32 %2219, %"class.v8::internal::compiler::Node"** %2220, i1 zeroext false) #10
  %2222 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %1725, align 8
  %2223 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2222, i64 0, i32 0, i32 0
  %2224 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2223, align 8
  %2225 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2222, i64 0, i32 0, i32 1
  %2226 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %2225, align 8
  %2227 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9EffectPhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"* %2226, i32 %1724) #10
  %2228 = load i64, i64* %2208, align 8
  %2229 = load i64, i64* %2207, align 8
  %2230 = sub i64 %2228, %2229
  %2231 = lshr exact i64 %2230, 3
  %2232 = trunc i64 %2231 to i32
  %2233 = inttoptr i64 %2229 to %"class.v8::internal::compiler::Node"**
  %2234 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %2224, %"class.v8::internal::compiler::Operator"* %2227, i32 %2232, %"class.v8::internal::compiler::Node"** %2233, i1 zeroext false) #10
  %2235 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 0, i32 1
  %2236 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %2235, align 8
  %2237 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %2236 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %2238 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %2237, align 8
  %2239 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %2238, i64 4
  %2240 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %2239, align 8
  call void %2240(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %2236, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %2221, %"class.v8::internal::compiler::Node"* %2234, %"class.v8::internal::compiler::Node"* %1734) #10
  br label %2289

2241:                                             ; preds = %883, %910
  %2242 = phi i64* [ %885, %883 ], [ %914, %910 ]
  %2243 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %2244 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2243, align 8
  %2245 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2244, i64 0, i32 0, i32 4
  %2246 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2245, align 8
  %2247 = icmp eq %"class.v8::internal::compiler::Node"* %2246, null
  br i1 %2247, label %2248, label %2279

2248:                                             ; preds = %2241
  %2249 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2244, i64 0, i32 0, i32 0
  %2250 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2249, align 8
  %2251 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2244, i64 0, i32 0, i32 1
  %2252 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %2251, align 8
  %2253 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %2252) #10
  %2254 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %2250, %"class.v8::internal::compiler::Operator"* %2253, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #10
  store %"class.v8::internal::compiler::Node"* %2254, %"class.v8::internal::compiler::Node"** %2245, align 8
  %2255 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2243, align 8
  %2256 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2255, i64 0, i32 0, i32 4
  %2257 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2256, align 8
  %2258 = icmp eq %"class.v8::internal::compiler::Node"* %2257, null
  br i1 %2258, label %2259, label %2279

2259:                                             ; preds = %2248
  %2260 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2255, i64 0, i32 0, i32 4
  %2261 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2255, i64 0, i32 0, i32 0
  %2262 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2261, align 8
  %2263 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2255, i64 0, i32 0, i32 1
  %2264 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %2263, align 8
  %2265 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %2264) #10
  %2266 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %2262, %"class.v8::internal::compiler::Operator"* %2265, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #10
  store %"class.v8::internal::compiler::Node"* %2266, %"class.v8::internal::compiler::Node"** %2260, align 8
  %2267 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2243, align 8
  %2268 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2267, i64 0, i32 0, i32 4
  %2269 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2268, align 8
  %2270 = icmp eq %"class.v8::internal::compiler::Node"* %2269, null
  br i1 %2270, label %2271, label %2279

2271:                                             ; preds = %2259
  %2272 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2267, i64 0, i32 0, i32 4
  %2273 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2267, i64 0, i32 0, i32 0
  %2274 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %2273, align 8
  %2275 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %2267, i64 0, i32 0, i32 1
  %2276 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %2275, align 8
  %2277 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %2276) #10
  %2278 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %2274, %"class.v8::internal::compiler::Operator"* %2277, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #10
  store %"class.v8::internal::compiler::Node"* %2278, %"class.v8::internal::compiler::Node"** %2272, align 8
  br label %2279

2279:                                             ; preds = %2241, %2248, %2259, %2271
  %2280 = phi %"class.v8::internal::compiler::Node"* [ %2266, %2271 ], [ %2266, %2259 ], [ %2257, %2248 ], [ %2246, %2241 ]
  %2281 = phi %"class.v8::internal::compiler::Node"* [ %2254, %2271 ], [ %2254, %2259 ], [ %2254, %2248 ], [ %2246, %2241 ]
  %2282 = phi %"class.v8::internal::compiler::Node"* [ %2278, %2271 ], [ %2269, %2259 ], [ %2257, %2248 ], [ %2246, %2241 ]
  %2283 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 0, i32 1
  %2284 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %2283, align 8
  %2285 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %2284 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %2286 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %2285, align 8
  %2287 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %2286, i64 4
  %2288 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %2287, align 8
  call void %2288(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %2284, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %2281, %"class.v8::internal::compiler::Node"* %2280, %"class.v8::internal::compiler::Node"* %2282) #10
  br label %2289

2289:                                             ; preds = %2279, %2206
  %2290 = phi i64* [ %914, %2206 ], [ %2242, %2279 ]
  %2291 = phi %"class.v8::internal::compiler::Node"* [ %2221, %2206 ], [ %1, %2279 ]
  %2292 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %18, i64 0, i32 0, i32 0, i32 0
  %2293 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %2292, align 8
  %2294 = icmp eq %"class.v8::internal::compiler::Node"** %2293, null
  br i1 %2294, label %2299, label %2295

2295:                                             ; preds = %2289
  %2296 = ptrtoint %"class.v8::internal::compiler::Node"** %2293 to i64
  %2297 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %18, i64 0, i32 0, i32 0, i32 1
  %2298 = bitcast %"class.v8::internal::compiler::Node"*** %2297 to i64*
  store i64 %2296, i64* %2298, align 8
  br label %2299

2299:                                             ; preds = %2289, %2295
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %859) #10
  %2300 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %17, i64 0, i32 0, i32 0, i32 0
  %2301 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %2300, align 8
  %2302 = icmp eq %"class.v8::internal::compiler::Node"** %2301, null
  br i1 %2302, label %2307, label %2303

2303:                                             ; preds = %2299
  %2304 = ptrtoint %"class.v8::internal::compiler::Node"** %2301 to i64
  %2305 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %17, i64 0, i32 0, i32 0, i32 1
  %2306 = bitcast %"class.v8::internal::compiler::Node"*** %2305 to i64*
  store i64 %2304, i64* %2306, align 8
  br label %2307

2307:                                             ; preds = %2299, %2303
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %856) #10
  %2308 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %16, i64 0, i32 0, i32 0, i32 0
  %2309 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %2308, align 8
  %2310 = icmp eq %"class.v8::internal::compiler::Node"** %2309, null
  br i1 %2310, label %2313, label %2311

2311:                                             ; preds = %2307
  %2312 = ptrtoint %"class.v8::internal::compiler::Node"** %2309 to i64
  store i64 %2312, i64* %2290, align 8
  br label %2313

2313:                                             ; preds = %2307, %2311
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %850) #10
  ret %"class.v8::internal::compiler::Node"* %2291
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZN2v88internal8compiler16ParameterIndexOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantEd(%"class.v8::internal::compiler::JSGraph"*, double) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph17UndefinedConstantEv(%"class.v8::internal::compiler::JSGraph"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties12IsEffectEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties13IsControlEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties16IsFrameStateEdgeENS1_4EdgeE(%"struct.v8::internal::compiler::Node::Use"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #10
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #10
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::Graph"* @_ZNK2v88internal8compiler9JSInliner5graphEv(%"class.v8::internal::compiler::JSInliner"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %4, align 8
  ret %"class.v8::internal::compiler::Graph"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::CommonOperatorBuilder"* @_ZNK2v88internal8compiler9JSInliner6commonEv(%"class.v8::internal::compiler::JSInliner"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 0, i32 1
  %5 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %4, align 8
  ret %"class.v8::internal::compiler::CommonOperatorBuilder"* %5
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9IfSuccessEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties11ReplaceUsesEPNS1_4NodeES4_S4_S4_S4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties19ReplaceControlInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder11IfExceptionEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Operator"*, i32, %"class.v8::internal::compiler::Node"**, i1 zeroext) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5MergeEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder3PhiENS0_21MachineRepresentationEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder9EffectPhiEi(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties17MergeControlToEndEPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_4NodeE(%"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler9JSInliner26CreateArtificialFrameStateEPNS1_4NodeENS1_10FrameStateEiNS0_14BytecodeOffsetENS1_14FrameStateTypeENS1_21SharedFunctionInfoRefES4_(%"class.v8::internal::compiler::JSInliner"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32, i32, i32, %"class.v8::internal::compiler::SharedFunctionInfoRef"* byval(%"class.v8::internal::compiler::SharedFunctionInfoRef") align 8, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"struct.std::__1::array.1634", align 8
  %10 = alloca %"class.v8::internal::ZoneVector.1400", align 8
  %11 = add nsw i32 %3, 1
  %12 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %13 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %13, i64 0, i32 0, i32 1
  %15 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %14, align 8
  %16 = call i64* @_ZNK2v88internal8compiler21SharedFunctionInfoRef6objectEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* nonnull %6) #10
  %17 = call %"class.v8::internal::compiler::FrameStateFunctionInfo"* @_ZN2v88internal8compiler21CommonOperatorBuilder28CreateFrameStateFunctionInfoENS1_14FrameStateTypeEiiNS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %15, i32 %5, i32 %11, i32 0, i64* %16) #10
  %18 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %12, align 8
  %19 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %18, i64 0, i32 0, i32 1
  %20 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %19, align 8
  %21 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder10FrameStateENS0_14BytecodeOffsetENS1_23OutputFrameStateCombineEPKNS1_22FrameStateFunctionInfoE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %20, i32 %4, i64 -1, %"class.v8::internal::compiler::FrameStateFunctionInfo"* %17) #10
  %22 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %12, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %22, i64 0, i32 0, i32 1
  %24 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %23, align 8
  %25 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder11StateValuesEiNS1_15SparseInputMaskE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %24, i32 0, i32 0) #10
  %26 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %12, align 8
  %27 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %26, i64 0, i32 0, i32 0
  %28 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %27, align 8
  %29 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %28, %"class.v8::internal::compiler::Operator"* %25, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #10
  %30 = bitcast %"class.v8::internal::ZoneVector.1400"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #10
  %31 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 1
  %32 = bitcast %"class.v8::internal::Zone"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %10, i64 0, i32 0, i32 0, i32 2, i32 1
  %35 = bitcast %"struct.std::__1::__compressed_pair_elem.1405"* %34 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #10
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %37 = load i32, i32* %36, align 4
  %38 = and i32 %37, 251658240
  %39 = icmp eq i32 %38, 251658240
  %40 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %41 = add i64 %40, 32
  %42 = inttoptr i64 %33 to %"class.v8::internal::Zone"*
  br i1 %39, label %43, label %47

43:                                               ; preds = %8
  %44 = inttoptr i64 %41 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = add i64 %45, 16
  br label %47

47:                                               ; preds = %8, %43
  %48 = phi i64 [ %46, %43 ], [ %41, %8 ]
  %49 = inttoptr i64 %48 to %"class.v8::internal::compiler::Node"**
  %50 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %49, i64 1
  %51 = bitcast %"class.v8::internal::compiler::Node"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %10, i64 0, i32 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %10, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %55 = bitcast %"class.v8::internal::compiler::Node"*** %53 to i64*
  %56 = bitcast %"class.v8::internal::ZoneVector.1400"* %10 to i64*
  %57 = bitcast %"class.v8::internal::compiler::Node"*** %54 to i64*
  %58 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %42, i64 0, i32 2
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %42, i64 0, i32 3
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %61, %59
  %63 = icmp ult i64 %62, 8
  br i1 %63, label %64, label %66, !prof !3

64:                                               ; preds = %47
  %65 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %42, i64 8) #10
  br label %68

66:                                               ; preds = %47
  %67 = add i64 %59, 8
  store i64 %67, i64* %58, align 8
  br label %68

68:                                               ; preds = %64, %66
  %69 = phi i64 [ %65, %64 ], [ %59, %66 ]
  %70 = inttoptr i64 %69 to %"class.v8::internal::compiler::Node"**
  %71 = inttoptr i64 %69 to i8*
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, i64 1
  %73 = ptrtoint %"class.v8::internal::compiler::Node"** %72 to i64
  %74 = inttoptr i64 %69 to i64*
  store i64 %52, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %10, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %75, align 8
  %77 = ptrtoint %"class.v8::internal::compiler::Node"** %76 to i64
  %78 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %53, align 8
  %79 = icmp eq %"class.v8::internal::compiler::Node"** %78, %76
  br i1 %79, label %248, label %80

80:                                               ; preds = %68
  %81 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %82 = ptrtoint %"class.v8::internal::compiler::Node"** %81 to i64
  %83 = sub i64 %82, %77
  %84 = lshr i64 %83, 3
  %85 = add nuw nsw i64 %84, 1
  %86 = icmp ult i64 %85, 4
  br i1 %86, label %178, label %87

87:                                               ; preds = %80
  %88 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %89 = ptrtoint %"class.v8::internal::compiler::Node"** %88 to i64
  %90 = sub i64 %89, %77
  %91 = lshr i64 %90, 3
  %92 = xor i64 %91, -1
  %93 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, i64 %92
  %94 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 %92
  %95 = bitcast %"class.v8::internal::compiler::Node"** %94 to i8*
  %96 = icmp ult %"class.v8::internal::compiler::Node"** %93, %78
  %97 = icmp ult i8* %95, %71
  %98 = and i1 %96, %97
  br i1 %98, label %178, label %99

99:                                               ; preds = %87
  %100 = and i64 %85, 4611686018427387900
  %101 = sub nsw i64 0, %100
  %102 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, i64 %101
  %103 = sub nsw i64 0, %100
  %104 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 %103
  %105 = add nsw i64 %100, -4
  %106 = lshr exact i64 %105, 2
  %107 = add nuw nsw i64 %106, 1
  %108 = and i64 %107, 1
  %109 = icmp eq i64 %105, 0
  br i1 %109, label %156, label %110

110:                                              ; preds = %99
  %111 = sub nuw nsw i64 %107, %108
  %112 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, i64 -1
  %113 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %114 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, i64 -1
  %115 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  br label %116

116:                                              ; preds = %116, %110
  %117 = phi i64 [ 0, %110 ], [ %151, %116 ]
  %118 = phi i64 [ %111, %110 ], [ %152, %116 ]
  %119 = sub i64 0, %117
  %120 = sub i64 0, %117
  %121 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %112, i64 %119
  %122 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %113, i64 %120
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 -1
  %124 = bitcast %"class.v8::internal::compiler::Node"** %123 to <2 x i64>*
  %125 = load <2 x i64>, <2 x i64>* %124, align 8, !alias.scope !62
  %126 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %122, i64 -2
  %127 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %126, i64 -1
  %128 = bitcast %"class.v8::internal::compiler::Node"** %127 to <2 x i64>*
  %129 = load <2 x i64>, <2 x i64>* %128, align 8, !alias.scope !62
  %130 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %121, i64 -1
  %131 = bitcast %"class.v8::internal::compiler::Node"** %130 to <2 x i64>*
  store <2 x i64> %125, <2 x i64>* %131, align 8, !alias.scope !65, !noalias !62
  %132 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %121, i64 -2
  %133 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %132, i64 -1
  %134 = bitcast %"class.v8::internal::compiler::Node"** %133 to <2 x i64>*
  store <2 x i64> %129, <2 x i64>* %134, align 8, !alias.scope !65, !noalias !62
  %135 = sub nuw nsw i64 -4, %117
  %136 = sub nuw nsw i64 -4, %117
  %137 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %114, i64 %135
  %138 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %115, i64 %136
  %139 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 -1
  %140 = bitcast %"class.v8::internal::compiler::Node"** %139 to <2 x i64>*
  %141 = load <2 x i64>, <2 x i64>* %140, align 8, !alias.scope !62
  %142 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 -2
  %143 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %142, i64 -1
  %144 = bitcast %"class.v8::internal::compiler::Node"** %143 to <2 x i64>*
  %145 = load <2 x i64>, <2 x i64>* %144, align 8, !alias.scope !62
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %137, i64 -1
  %147 = bitcast %"class.v8::internal::compiler::Node"** %146 to <2 x i64>*
  store <2 x i64> %141, <2 x i64>* %147, align 8, !alias.scope !65, !noalias !62
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %137, i64 -2
  %149 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %148, i64 -1
  %150 = bitcast %"class.v8::internal::compiler::Node"** %149 to <2 x i64>*
  store <2 x i64> %145, <2 x i64>* %150, align 8, !alias.scope !65, !noalias !62
  %151 = add i64 %117, 8
  %152 = add i64 %118, -2
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %116, !llvm.loop !67

154:                                              ; preds = %116
  %155 = sub nuw nsw i64 -8, %117
  br label %156

156:                                              ; preds = %154, %99
  %157 = phi i64 [ 0, %99 ], [ %155, %154 ]
  %158 = icmp eq i64 %108, 0
  br i1 %158, label %176, label %159

159:                                              ; preds = %156
  %160 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %70, i64 -1
  %161 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %78, i64 -1
  %162 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %160, i64 %157
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %161, i64 %157
  %164 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -1
  %165 = bitcast %"class.v8::internal::compiler::Node"** %164 to <2 x i64>*
  %166 = load <2 x i64>, <2 x i64>* %165, align 8, !alias.scope !62
  %167 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %163, i64 -2
  %168 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %167, i64 -1
  %169 = bitcast %"class.v8::internal::compiler::Node"** %168 to <2 x i64>*
  %170 = load <2 x i64>, <2 x i64>* %169, align 8, !alias.scope !62
  %171 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 -1
  %172 = bitcast %"class.v8::internal::compiler::Node"** %171 to <2 x i64>*
  store <2 x i64> %166, <2 x i64>* %172, align 8, !alias.scope !65, !noalias !62
  %173 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %162, i64 -2
  %174 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %173, i64 -1
  %175 = bitcast %"class.v8::internal::compiler::Node"** %174 to <2 x i64>*
  store <2 x i64> %170, <2 x i64>* %175, align 8, !alias.scope !65, !noalias !62
  br label %176

176:                                              ; preds = %156, %159
  %177 = icmp eq i64 %85, %100
  br i1 %177, label %248, label %178

178:                                              ; preds = %176, %87, %80
  %179 = phi %"class.v8::internal::compiler::Node"** [ %70, %87 ], [ %70, %80 ], [ %102, %176 ]
  %180 = phi %"class.v8::internal::compiler::Node"** [ %78, %87 ], [ %78, %80 ], [ %104, %176 ]
  %181 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %180, i64 -1
  %182 = ptrtoint %"class.v8::internal::compiler::Node"** %181 to i64
  %183 = sub i64 %182, %77
  %184 = lshr i64 %183, 3
  %185 = add nuw nsw i64 %184, 1
  %186 = and i64 %185, 7
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %199, label %188

188:                                              ; preds = %178, %188
  %189 = phi %"class.v8::internal::compiler::Node"** [ %192, %188 ], [ %179, %178 ]
  %190 = phi %"class.v8::internal::compiler::Node"** [ %193, %188 ], [ %180, %178 ]
  %191 = phi i64 [ %197, %188 ], [ %186, %178 ]
  %192 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %189, i64 -1
  %193 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %190, i64 -1
  %194 = bitcast %"class.v8::internal::compiler::Node"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = bitcast %"class.v8::internal::compiler::Node"** %192 to i64*
  store i64 %195, i64* %196, align 8
  %197 = add i64 %191, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %188, !llvm.loop !68

199:                                              ; preds = %188, %178
  %200 = phi %"class.v8::internal::compiler::Node"** [ undef, %178 ], [ %192, %188 ]
  %201 = phi %"class.v8::internal::compiler::Node"** [ %179, %178 ], [ %192, %188 ]
  %202 = phi %"class.v8::internal::compiler::Node"** [ %180, %178 ], [ %193, %188 ]
  %203 = icmp ult i64 %183, 56
  br i1 %203, label %248, label %204

204:                                              ; preds = %199, %204
  %205 = phi %"class.v8::internal::compiler::Node"** [ %242, %204 ], [ %201, %199 ]
  %206 = phi %"class.v8::internal::compiler::Node"** [ %243, %204 ], [ %202, %199 ]
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -1
  %208 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -1
  %209 = bitcast %"class.v8::internal::compiler::Node"** %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = bitcast %"class.v8::internal::compiler::Node"** %207 to i64*
  store i64 %210, i64* %211, align 8
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -2
  %213 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -2
  %214 = bitcast %"class.v8::internal::compiler::Node"** %213 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = bitcast %"class.v8::internal::compiler::Node"** %212 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -3
  %218 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -3
  %219 = bitcast %"class.v8::internal::compiler::Node"** %218 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = bitcast %"class.v8::internal::compiler::Node"** %217 to i64*
  store i64 %220, i64* %221, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -4
  %223 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -4
  %224 = bitcast %"class.v8::internal::compiler::Node"** %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = bitcast %"class.v8::internal::compiler::Node"** %222 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -5
  %228 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -5
  %229 = bitcast %"class.v8::internal::compiler::Node"** %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = bitcast %"class.v8::internal::compiler::Node"** %227 to i64*
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -6
  %233 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -6
  %234 = bitcast %"class.v8::internal::compiler::Node"** %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = bitcast %"class.v8::internal::compiler::Node"** %232 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -7
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -7
  %239 = bitcast %"class.v8::internal::compiler::Node"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = bitcast %"class.v8::internal::compiler::Node"** %237 to i64*
  store i64 %240, i64* %241, align 8
  %242 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 -8
  %244 = bitcast %"class.v8::internal::compiler::Node"** %243 to i64*
  %245 = load i64, i64* %244, align 8
  %246 = bitcast %"class.v8::internal::compiler::Node"** %242 to i64*
  store i64 %245, i64* %246, align 8
  %247 = icmp eq %"class.v8::internal::compiler::Node"** %243, %76
  br i1 %247, label %248, label %204, !llvm.loop !69

248:                                              ; preds = %199, %204, %176, %68
  %249 = phi %"class.v8::internal::compiler::Node"** [ %70, %68 ], [ %102, %176 ], [ %200, %199 ], [ %242, %204 ]
  %250 = ptrtoint %"class.v8::internal::compiler::Node"** %249 to i64
  store i64 %250, i64* %56, align 8
  store i64 %73, i64* %55, align 8
  store i64 %73, i64* %57, align 8
  %251 = icmp sgt i32 %3, 0
  br i1 %251, label %255, label %252

252:                                              ; preds = %248
  %253 = bitcast %"class.v8::internal::compiler::Node"*** %53 to i64*
  %254 = bitcast %"class.v8::internal::ZoneVector.1400"* %10 to i64*
  br label %265

255:                                              ; preds = %248
  %256 = inttoptr i64 %41 to i64*
  %257 = bitcast %"class.v8::internal::compiler::Node"*** %53 to i64*
  %258 = bitcast %"class.v8::internal::ZoneVector.1400"* %10 to i64*
  %259 = bitcast %"class.v8::internal::compiler::Node"*** %54 to i64*
  %260 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %10, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %261 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %10, i64 0, i32 0, i32 0, i32 0
  %262 = zext i32 %3 to i64
  br label %289

263:                                              ; preds = %533
  %264 = load i64, i64* %258, align 8
  br label %265

265:                                              ; preds = %252, %263
  %266 = phi i64* [ %254, %252 ], [ %258, %263 ]
  %267 = phi i64* [ %253, %252 ], [ %257, %263 ]
  %268 = phi i64 [ %250, %252 ], [ %264, %263 ]
  %269 = phi i64 [ %73, %252 ], [ %534, %263 ]
  %270 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %12, align 8
  %271 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %270, i64 0, i32 0, i32 1
  %272 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %271, align 8
  %273 = sub i64 %269, %268
  %274 = lshr exact i64 %273, 3
  %275 = trunc i64 %274 to i32
  %276 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder11StateValuesEiNS1_15SparseInputMaskE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %272, i32 %275, i32 0) #10
  %277 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %12, align 8
  %278 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %278, align 8
  %280 = load i64, i64* %267, align 8
  %281 = load i64, i64* %266, align 8
  %282 = sub i64 %280, %281
  %283 = lshr exact i64 %282, 3
  %284 = trunc i64 %283 to i32
  %285 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %10, i64 0, i32 0, i32 0, i32 0
  %286 = inttoptr i64 %281 to %"class.v8::internal::compiler::Node"**
  %287 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %279, %"class.v8::internal::compiler::Operator"* %276, i32 %284, %"class.v8::internal::compiler::Node"** %286, i1 zeroext false) #10
  %288 = icmp eq %"class.v8::internal::compiler::Node"* %7, null
  br i1 %288, label %538, label %541

289:                                              ; preds = %533, %255
  %290 = phi %"class.v8::internal::compiler::Node"** [ %72, %255 ], [ %535, %533 ]
  %291 = phi i64 [ 0, %255 ], [ %536, %533 ]
  %292 = add nuw nsw i64 %291, 2
  %293 = load i32, i32* %36, align 4
  %294 = and i32 %293, 251658240
  %295 = icmp eq i32 %294, 251658240
  br i1 %295, label %296, label %299

296:                                              ; preds = %289
  %297 = load i64, i64* %256, align 8
  %298 = add i64 %297, 16
  br label %299

299:                                              ; preds = %289, %296
  %300 = phi i64 [ %298, %296 ], [ %41, %289 ]
  %301 = inttoptr i64 %300 to %"class.v8::internal::compiler::Node"**
  %302 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %301, i64 %292
  %303 = bitcast %"class.v8::internal::compiler::Node"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %54, align 8
  %306 = icmp ult %"class.v8::internal::compiler::Node"** %290, %305
  %307 = ptrtoint %"class.v8::internal::compiler::Node"** %305 to i64
  br i1 %306, label %308, label %312

308:                                              ; preds = %299
  %309 = bitcast %"class.v8::internal::compiler::Node"** %290 to i64*
  store i64 %304, i64* %309, align 8
  %310 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %290, i64 1
  %311 = ptrtoint %"class.v8::internal::compiler::Node"** %310 to i64
  store i64 %311, i64* %257, align 8
  br label %533

312:                                              ; preds = %299
  %313 = ptrtoint %"class.v8::internal::compiler::Node"** %290 to i64
  %314 = load i64, i64* %258, align 8
  %315 = sub i64 %313, %314
  %316 = ashr exact i64 %315, 3
  %317 = add nsw i64 %316, 1
  %318 = icmp ugt i64 %317, 268435455
  br i1 %318, label %319, label %321

319:                                              ; preds = %312
  %320 = bitcast %"class.v8::internal::ZoneVector.1400"* %10 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %320) #9
  unreachable

321:                                              ; preds = %312
  %322 = sub i64 %307, %314
  %323 = ashr exact i64 %322, 3
  %324 = icmp ult i64 %323, 134217727
  br i1 %324, label %325, label %330

325:                                              ; preds = %321
  %326 = ashr exact i64 %322, 2
  %327 = icmp ult i64 %326, %317
  %328 = select i1 %327, i64 %317, i64 %326
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %347, label %330

330:                                              ; preds = %325, %321
  %331 = phi i64 [ %328, %325 ], [ 268435455, %321 ]
  %332 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %260, align 8
  %333 = shl i64 %331, 3
  %334 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %332, i64 0, i32 2
  %335 = load i64, i64* %334, align 8
  %336 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %332, i64 0, i32 3
  %337 = load i64, i64* %336, align 8
  %338 = sub i64 %337, %335
  %339 = icmp ugt i64 %333, %338
  br i1 %339, label %340, label %342, !prof !3

340:                                              ; preds = %330
  %341 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %332, i64 %333) #10
  br label %344

342:                                              ; preds = %330
  %343 = add i64 %335, %333
  store i64 %343, i64* %334, align 8
  br label %344

344:                                              ; preds = %342, %340
  %345 = phi i64 [ %341, %340 ], [ %335, %342 ]
  %346 = inttoptr i64 %345 to %"class.v8::internal::compiler::Node"**
  br label %347

347:                                              ; preds = %344, %325
  %348 = phi i64 [ %331, %344 ], [ 0, %325 ]
  %349 = phi %"class.v8::internal::compiler::Node"** [ %346, %344 ], [ null, %325 ]
  %350 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %349, i64 %316
  %351 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %349, i64 %348
  %352 = ptrtoint %"class.v8::internal::compiler::Node"** %351 to i64
  %353 = bitcast %"class.v8::internal::compiler::Node"** %350 to i64*
  store i64 %304, i64* %353, align 8
  %354 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %350, i64 1
  %355 = ptrtoint %"class.v8::internal::compiler::Node"** %354 to i64
  %356 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %261, align 8
  %357 = ptrtoint %"class.v8::internal::compiler::Node"** %356 to i64
  %358 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %53, align 8
  %359 = icmp eq %"class.v8::internal::compiler::Node"** %358, %356
  br i1 %359, label %530, label %360

360:                                              ; preds = %347
  %361 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %358, i64 -1
  %362 = ptrtoint %"class.v8::internal::compiler::Node"** %361 to i64
  %363 = sub i64 %362, %357
  %364 = lshr i64 %363, 3
  %365 = add nuw nsw i64 %364, 1
  %366 = icmp ult i64 %365, 4
  br i1 %366, label %460, label %367

367:                                              ; preds = %360
  %368 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %349, i64 -1
  %369 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %358, i64 -1
  %370 = ptrtoint %"class.v8::internal::compiler::Node"** %369 to i64
  %371 = sub i64 %370, %357
  %372 = lshr i64 %371, 3
  %373 = sub nsw i64 %316, %372
  %374 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %368, i64 %373
  %375 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %358, i64 -1
  %376 = sub nsw i64 0, %372
  %377 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %375, i64 %376
  %378 = icmp ult %"class.v8::internal::compiler::Node"** %374, %358
  %379 = icmp ult %"class.v8::internal::compiler::Node"** %377, %350
  %380 = and i1 %378, %379
  br i1 %380, label %460, label %381

381:                                              ; preds = %367
  %382 = and i64 %365, 4611686018427387900
  %383 = sub nsw i64 0, %382
  %384 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %350, i64 %383
  %385 = sub nsw i64 0, %382
  %386 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %358, i64 %385
  %387 = add nsw i64 %382, -4
  %388 = lshr exact i64 %387, 2
  %389 = add nuw nsw i64 %388, 1
  %390 = and i64 %389, 1
  %391 = icmp eq i64 %387, 0
  br i1 %391, label %436, label %392

392:                                              ; preds = %381
  %393 = sub nuw nsw i64 %389, %390
  %394 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %350, i64 -1
  %395 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %358, i64 -1
  %396 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %350, i64 -1
  %397 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %358, i64 -1
  br label %398

398:                                              ; preds = %398, %392
  %399 = phi i64 [ 0, %392 ], [ %433, %398 ]
  %400 = phi i64 [ %393, %392 ], [ %434, %398 ]
  %401 = sub i64 0, %399
  %402 = sub i64 0, %399
  %403 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %394, i64 %401
  %404 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %395, i64 %402
  %405 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 -1
  %406 = bitcast %"class.v8::internal::compiler::Node"** %405 to <2 x i64>*
  %407 = load <2 x i64>, <2 x i64>* %406, align 8, !alias.scope !70
  %408 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %404, i64 -2
  %409 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %408, i64 -1
  %410 = bitcast %"class.v8::internal::compiler::Node"** %409 to <2 x i64>*
  %411 = load <2 x i64>, <2 x i64>* %410, align 8, !alias.scope !70
  %412 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %403, i64 -1
  %413 = bitcast %"class.v8::internal::compiler::Node"** %412 to <2 x i64>*
  store <2 x i64> %407, <2 x i64>* %413, align 8, !alias.scope !73, !noalias !70
  %414 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %403, i64 -2
  %415 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %414, i64 -1
  %416 = bitcast %"class.v8::internal::compiler::Node"** %415 to <2 x i64>*
  store <2 x i64> %411, <2 x i64>* %416, align 8, !alias.scope !73, !noalias !70
  %417 = sub nuw nsw i64 -4, %399
  %418 = sub nuw nsw i64 -4, %399
  %419 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %396, i64 %417
  %420 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %397, i64 %418
  %421 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %420, i64 -1
  %422 = bitcast %"class.v8::internal::compiler::Node"** %421 to <2 x i64>*
  %423 = load <2 x i64>, <2 x i64>* %422, align 8, !alias.scope !70
  %424 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %420, i64 -2
  %425 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %424, i64 -1
  %426 = bitcast %"class.v8::internal::compiler::Node"** %425 to <2 x i64>*
  %427 = load <2 x i64>, <2 x i64>* %426, align 8, !alias.scope !70
  %428 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %419, i64 -1
  %429 = bitcast %"class.v8::internal::compiler::Node"** %428 to <2 x i64>*
  store <2 x i64> %423, <2 x i64>* %429, align 8, !alias.scope !73, !noalias !70
  %430 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %419, i64 -2
  %431 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %430, i64 -1
  %432 = bitcast %"class.v8::internal::compiler::Node"** %431 to <2 x i64>*
  store <2 x i64> %427, <2 x i64>* %432, align 8, !alias.scope !73, !noalias !70
  %433 = add i64 %399, 8
  %434 = add i64 %400, -2
  %435 = icmp eq i64 %434, 0
  br i1 %435, label %436, label %398, !llvm.loop !75

436:                                              ; preds = %398, %381
  %437 = phi i64 [ 0, %381 ], [ %433, %398 ]
  %438 = icmp eq i64 %390, 0
  br i1 %438, label %458, label %439

439:                                              ; preds = %436
  %440 = sub i64 0, %437
  %441 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %350, i64 -1
  %442 = sub i64 0, %437
  %443 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %358, i64 -1
  %444 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %441, i64 %440
  %445 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %443, i64 %442
  %446 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %445, i64 -1
  %447 = bitcast %"class.v8::internal::compiler::Node"** %446 to <2 x i64>*
  %448 = load <2 x i64>, <2 x i64>* %447, align 8, !alias.scope !70
  %449 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %445, i64 -2
  %450 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %449, i64 -1
  %451 = bitcast %"class.v8::internal::compiler::Node"** %450 to <2 x i64>*
  %452 = load <2 x i64>, <2 x i64>* %451, align 8, !alias.scope !70
  %453 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %444, i64 -1
  %454 = bitcast %"class.v8::internal::compiler::Node"** %453 to <2 x i64>*
  store <2 x i64> %448, <2 x i64>* %454, align 8, !alias.scope !73, !noalias !70
  %455 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %444, i64 -2
  %456 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %455, i64 -1
  %457 = bitcast %"class.v8::internal::compiler::Node"** %456 to <2 x i64>*
  store <2 x i64> %452, <2 x i64>* %457, align 8, !alias.scope !73, !noalias !70
  br label %458

458:                                              ; preds = %436, %439
  %459 = icmp eq i64 %365, %382
  br i1 %459, label %530, label %460

460:                                              ; preds = %458, %367, %360
  %461 = phi %"class.v8::internal::compiler::Node"** [ %350, %367 ], [ %350, %360 ], [ %384, %458 ]
  %462 = phi %"class.v8::internal::compiler::Node"** [ %358, %367 ], [ %358, %360 ], [ %386, %458 ]
  %463 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %462, i64 -1
  %464 = ptrtoint %"class.v8::internal::compiler::Node"** %463 to i64
  %465 = sub i64 %464, %357
  %466 = lshr i64 %465, 3
  %467 = add nuw nsw i64 %466, 1
  %468 = and i64 %467, 7
  %469 = icmp eq i64 %468, 0
  br i1 %469, label %481, label %470

470:                                              ; preds = %460, %470
  %471 = phi %"class.v8::internal::compiler::Node"** [ %474, %470 ], [ %461, %460 ]
  %472 = phi %"class.v8::internal::compiler::Node"** [ %475, %470 ], [ %462, %460 ]
  %473 = phi i64 [ %479, %470 ], [ %468, %460 ]
  %474 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %471, i64 -1
  %475 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %472, i64 -1
  %476 = bitcast %"class.v8::internal::compiler::Node"** %475 to i64*
  %477 = load i64, i64* %476, align 8
  %478 = bitcast %"class.v8::internal::compiler::Node"** %474 to i64*
  store i64 %477, i64* %478, align 8
  %479 = add i64 %473, -1
  %480 = icmp eq i64 %479, 0
  br i1 %480, label %481, label %470, !llvm.loop !76

481:                                              ; preds = %470, %460
  %482 = phi %"class.v8::internal::compiler::Node"** [ undef, %460 ], [ %474, %470 ]
  %483 = phi %"class.v8::internal::compiler::Node"** [ %461, %460 ], [ %474, %470 ]
  %484 = phi %"class.v8::internal::compiler::Node"** [ %462, %460 ], [ %475, %470 ]
  %485 = icmp ult i64 %465, 56
  br i1 %485, label %530, label %486

486:                                              ; preds = %481, %486
  %487 = phi %"class.v8::internal::compiler::Node"** [ %524, %486 ], [ %483, %481 ]
  %488 = phi %"class.v8::internal::compiler::Node"** [ %525, %486 ], [ %484, %481 ]
  %489 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -1
  %490 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %488, i64 -1
  %491 = bitcast %"class.v8::internal::compiler::Node"** %490 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = bitcast %"class.v8::internal::compiler::Node"** %489 to i64*
  store i64 %492, i64* %493, align 8
  %494 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -2
  %495 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %488, i64 -2
  %496 = bitcast %"class.v8::internal::compiler::Node"** %495 to i64*
  %497 = load i64, i64* %496, align 8
  %498 = bitcast %"class.v8::internal::compiler::Node"** %494 to i64*
  store i64 %497, i64* %498, align 8
  %499 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -3
  %500 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %488, i64 -3
  %501 = bitcast %"class.v8::internal::compiler::Node"** %500 to i64*
  %502 = load i64, i64* %501, align 8
  %503 = bitcast %"class.v8::internal::compiler::Node"** %499 to i64*
  store i64 %502, i64* %503, align 8
  %504 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -4
  %505 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %488, i64 -4
  %506 = bitcast %"class.v8::internal::compiler::Node"** %505 to i64*
  %507 = load i64, i64* %506, align 8
  %508 = bitcast %"class.v8::internal::compiler::Node"** %504 to i64*
  store i64 %507, i64* %508, align 8
  %509 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -5
  %510 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %488, i64 -5
  %511 = bitcast %"class.v8::internal::compiler::Node"** %510 to i64*
  %512 = load i64, i64* %511, align 8
  %513 = bitcast %"class.v8::internal::compiler::Node"** %509 to i64*
  store i64 %512, i64* %513, align 8
  %514 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -6
  %515 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %488, i64 -6
  %516 = bitcast %"class.v8::internal::compiler::Node"** %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = bitcast %"class.v8::internal::compiler::Node"** %514 to i64*
  store i64 %517, i64* %518, align 8
  %519 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -7
  %520 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %488, i64 -7
  %521 = bitcast %"class.v8::internal::compiler::Node"** %520 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = bitcast %"class.v8::internal::compiler::Node"** %519 to i64*
  store i64 %522, i64* %523, align 8
  %524 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %487, i64 -8
  %525 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %488, i64 -8
  %526 = bitcast %"class.v8::internal::compiler::Node"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"class.v8::internal::compiler::Node"** %524 to i64*
  store i64 %527, i64* %528, align 8
  %529 = icmp eq %"class.v8::internal::compiler::Node"** %525, %356
  br i1 %529, label %530, label %486, !llvm.loop !77

530:                                              ; preds = %481, %486, %458, %347
  %531 = phi %"class.v8::internal::compiler::Node"** [ %350, %347 ], [ %384, %458 ], [ %482, %481 ], [ %524, %486 ]
  %532 = ptrtoint %"class.v8::internal::compiler::Node"** %531 to i64
  store i64 %532, i64* %258, align 8
  store i64 %355, i64* %257, align 8
  store i64 %352, i64* %259, align 8
  br label %533

533:                                              ; preds = %308, %530
  %534 = phi i64 [ %311, %308 ], [ %355, %530 ]
  %535 = phi %"class.v8::internal::compiler::Node"** [ %310, %308 ], [ %354, %530 ]
  %536 = add nuw nsw i64 %291, 1
  %537 = icmp eq i64 %536, %262
  br i1 %537, label %263, label %289

538:                                              ; preds = %265
  %539 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %12, align 8
  %540 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph17UndefinedConstantEv(%"class.v8::internal::compiler::JSGraph"* %539) #10
  br label %541

541:                                              ; preds = %538, %265
  %542 = phi %"class.v8::internal::compiler::Node"* [ %540, %538 ], [ %7, %265 ]
  %543 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %12, align 8
  %544 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %543, i64 0, i32 0, i32 0
  %545 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %544, align 8
  %546 = load i32, i32* %36, align 4
  %547 = and i32 %546, 251658240
  %548 = icmp eq i32 %547, 251658240
  br i1 %548, label %549, label %553

549:                                              ; preds = %541
  %550 = inttoptr i64 %41 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = add i64 %551, 16
  br label %553

553:                                              ; preds = %541, %549
  %554 = phi i64 [ %552, %549 ], [ %41, %541 ]
  %555 = inttoptr i64 %554 to i64*
  %556 = load i64, i64* %555, align 8
  %557 = bitcast %"struct.std::__1::array.1634"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %557) #10
  %558 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %9, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %287, %"class.v8::internal::compiler::Node"** %558, align 8
  %559 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %9, i64 0, i32 0, i64 1
  store %"class.v8::internal::compiler::Node"* %29, %"class.v8::internal::compiler::Node"** %559, align 8
  %560 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %9, i64 0, i32 0, i64 2
  store %"class.v8::internal::compiler::Node"* %29, %"class.v8::internal::compiler::Node"** %560, align 8
  %561 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %9, i64 0, i32 0, i64 3
  store %"class.v8::internal::compiler::Node"* %542, %"class.v8::internal::compiler::Node"** %561, align 8
  %562 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %9, i64 0, i32 0, i64 4
  %563 = bitcast %"class.v8::internal::compiler::Node"** %562 to i64*
  store i64 %556, i64* %563, align 8
  %564 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %9, i64 0, i32 0, i64 5
  store %"class.v8::internal::compiler::Node"* %2, %"class.v8::internal::compiler::Node"** %564, align 8
  %565 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %545, %"class.v8::internal::compiler::Operator"* %21, i32 6, %"class.v8::internal::compiler::Node"** nonnull %558, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %557) #10
  %566 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %285, align 8
  %567 = icmp eq %"class.v8::internal::compiler::Node"** %566, null
  br i1 %567, label %570, label %568

568:                                              ; preds = %553
  %569 = ptrtoint %"class.v8::internal::compiler::Node"** %566 to i64
  store i64 %569, i64* %267, align 8
  br label %570

570:                                              ; preds = %553, %568
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #10
  ret %"class.v8::internal::compiler::Node"* %565
}

declare %"class.v8::internal::compiler::FrameStateFunctionInfo"* @_ZN2v88internal8compiler21CommonOperatorBuilder28CreateFrameStateFunctionInfoENS1_14FrameStateTypeEiiNS0_6HandleINS0_18SharedFunctionInfoEEE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32, i32, i32, i64*) local_unnamed_addr #2

declare i64* @_ZNK2v88internal8compiler21SharedFunctionInfoRef6objectEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder10FrameStateENS0_14BytecodeOffsetENS1_23OutputFrameStateCombineEPKNS1_22FrameStateFunctionInfoE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32, i64, %"class.v8::internal::compiler::FrameStateFunctionInfo"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder11StateValuesEiNS1_15SparseInputMaskE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal8compiler9JSInliner19DetermineCallTargetEPNS1_4NodeE(%"class.v8::base::Optional.1585"* noalias sret, %"class.v8::internal::compiler::JSInliner"* nocapture readonly, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::base::Optional.1639", align 8
  %5 = alloca %"class.v8::base::Optional.1639", align 8
  %6 = alloca %"class.v8::base::Optional.1646", align 8
  %7 = alloca <2 x i64>, align 16
  %8 = alloca %"class.v8::internal::compiler::JSFunctionRef", align 8
  %9 = alloca <2 x i64>, align 16
  %10 = alloca %"class.v8::internal::compiler::NativeContextRef", align 8
  %11 = alloca <2 x i64>, align 16
  %12 = alloca %"class.v8::internal::compiler::JSCreateClosureNode", align 8
  %13 = alloca %"class.v8::internal::compiler::FeedbackCellRef", align 8
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to %"class.v8::internal::compiler::FeedbackCellRef"*
  %16 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %2, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 251658240
  %19 = icmp eq i32 %18, 251658240
  %20 = ptrtoint %"class.v8::internal::compiler::Node"* %2 to i64
  %21 = add i64 %20, 32
  br i1 %19, label %22, label %26

22:                                               ; preds = %3
  %23 = inttoptr i64 %21 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, 16
  br label %26

26:                                               ; preds = %3, %22
  %27 = phi i64 [ %25, %22 ], [ %21, %3 ]
  %28 = inttoptr i64 %27 to %"class.v8::internal::compiler::Node"**
  %29 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %28, align 8
  %30 = ptrtoint %"class.v8::internal::compiler::Node"* %29 to i64
  br label %31

31:                                               ; preds = %76, %26
  %32 = phi i64 [ %30, %26 ], [ %78, %76 ]
  %33 = inttoptr i64 %32 to %"class.v8::internal::compiler::Node"*
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %33, i64 0, i32 0
  %35 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %34, align 8
  %36 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %35, i64 0, i32 2
  %37 = load i16, i16* %36, align 8
  switch i16 %37, label %151 [
    i16 59, label %38
    i16 58, label %56
    i16 30, label %79
  ]

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %35, i64 0, i32 5
  %40 = load i32, i32* %39, align 4
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %43, label %42, !prof !2

42:                                               ; preds = %38
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0)) #9
  unreachable

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %33, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 251658240
  %47 = icmp eq i32 %46, 251658240
  %48 = add i64 %32, 32
  br i1 %47, label %49, label %53

49:                                               ; preds = %43
  %50 = inttoptr i64 %48 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 16
  br label %53

53:                                               ; preds = %49, %43
  %54 = phi i64 [ %52, %49 ], [ %48, %43 ]
  %55 = inttoptr i64 %54 to i64*
  br label %76

56:                                               ; preds = %31
  %57 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %35, i64 0, i32 5
  %58 = load i32, i32* %57, align 4
  %59 = icmp sgt i32 %58, 1
  br i1 %59, label %61, label %60, !prof !2

60:                                               ; preds = %56
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0)) #9
  unreachable

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %33, i64 0, i32 3
  %63 = load i32, i32* %62, align 4
  %64 = and i32 %63, 251658240
  %65 = icmp eq i32 %64, 251658240
  %66 = add i64 %32, 32
  br i1 %65, label %67, label %71

67:                                               ; preds = %61
  %68 = inttoptr i64 %66 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 16
  br label %71

71:                                               ; preds = %67, %61
  %72 = phi i64 [ %70, %67 ], [ %66, %61 ]
  %73 = inttoptr i64 %72 to %"class.v8::internal::compiler::Node"**
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 1
  %75 = bitcast %"class.v8::internal::compiler::Node"** %74 to i64*
  br label %76

76:                                               ; preds = %71, %53
  %77 = phi i64* [ %75, %71 ], [ %55, %53 ]
  %78 = load i64, i64* %77, align 8
  br label %31

79:                                               ; preds = %31
  %80 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %35, i64 1
  %81 = bitcast %"class.v8::internal::compiler::Operator"* %80 to i64**
  %82 = load i64*, i64** %81, align 8
  %83 = bitcast <2 x i64>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #10
  %84 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %1, i64 0, i32 4
  %85 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %84, align 8
  %86 = getelementptr inbounds %"class.v8::base::Optional.1639", %"class.v8::base::Optional.1639"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1639"* nonnull sret %5, %"class.v8::internal::compiler::JSHeapBroker"* %85, i64* %82, i32 3) #10
  %87 = load i8, i8* %86, align 8, !range !78
  %88 = icmp eq i8 %87, 1
  br i1 %88, label %90, label %89, !prof !2

89:                                               ; preds = %79
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

90:                                               ; preds = %79
  %91 = getelementptr inbounds %"class.v8::base::Optional.1639", %"class.v8::base::Optional.1639"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %92 = bitcast %"class.v8::internal::compiler::ObjectData"** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #10
  store <2 x i64> %93, <2 x i64>* %7, align 16
  %94 = bitcast <2 x i64>* %7 to %"class.v8::internal::compiler::ObjectRef"*
  %95 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef12IsJSFunctionEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %94) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #10
  br i1 %95, label %96, label %151

96:                                               ; preds = %90
  %97 = bitcast %"class.v8::internal::compiler::JSFunctionRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #10
  %98 = bitcast <2 x i64>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #10
  %99 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %84, align 8
  %100 = getelementptr inbounds %"class.v8::base::Optional.1639", %"class.v8::base::Optional.1639"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %100) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1639"* nonnull sret %4, %"class.v8::internal::compiler::JSHeapBroker"* %99, i64* %82, i32 3) #10
  %101 = load i8, i8* %100, align 8, !range !78
  %102 = icmp eq i8 %101, 1
  br i1 %102, label %104, label %103, !prof !2

103:                                              ; preds = %96
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

104:                                              ; preds = %96
  %105 = getelementptr inbounds %"class.v8::base::Optional.1639", %"class.v8::base::Optional.1639"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %106 = bitcast %"class.v8::internal::compiler::ObjectData"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %100) #10
  store <2 x i64> %107, <2 x i64>* %9, align 16
  %108 = bitcast <2 x i64>* %9 to %"class.v8::internal::compiler::ObjectRef"*
  %109 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef12AsJSFunctionEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %108) #10
  %110 = getelementptr inbounds %"class.v8::internal::compiler::JSFunctionRef", %"class.v8::internal::compiler::JSFunctionRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %109, 0
  store %"class.v8::internal::compiler::ObjectData"* %111, %"class.v8::internal::compiler::ObjectData"** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::JSFunctionRef", %"class.v8::internal::compiler::JSFunctionRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %109, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %113, %"class.v8::internal::compiler::JSHeapBroker"** %112, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #10
  %114 = call zeroext i1 @_ZNK2v88internal8compiler13JSFunctionRef19has_feedback_vectorEv(%"class.v8::internal::compiler::JSFunctionRef"* nonnull %8) #10
  br i1 %114, label %119, label %115

115:                                              ; preds = %104
  %116 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %116, align 8
  %117 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %118 = bitcast %union.anon.1589* %117 to i8*
  store i8 0, i8* %118, align 8
  br label %150

119:                                              ; preds = %104
  %120 = bitcast %"class.v8::internal::compiler::NativeContextRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %120) #10
  %121 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13JSFunctionRef14native_contextEv(%"class.v8::internal::compiler::JSFunctionRef"* nonnull %8) #10
  %122 = getelementptr inbounds %"class.v8::internal::compiler::NativeContextRef", %"class.v8::internal::compiler::NativeContextRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %123 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %121, 0
  store %"class.v8::internal::compiler::ObjectData"* %123, %"class.v8::internal::compiler::ObjectData"** %122, align 8
  %124 = getelementptr inbounds %"class.v8::internal::compiler::NativeContextRef", %"class.v8::internal::compiler::NativeContextRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %125 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %121, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %125, %"class.v8::internal::compiler::JSHeapBroker"** %124, align 8
  %126 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #10
  %127 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %84, align 8
  %128 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %129 = load i8, i8* %128, align 8, !range !78
  %130 = icmp eq i8 %129, 1
  br i1 %130, label %132, label %131, !prof !2

131:                                              ; preds = %119
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

132:                                              ; preds = %119
  %133 = getelementptr inbounds %"class.v8::internal::compiler::NativeContextRef", %"class.v8::internal::compiler::NativeContextRef"* %10, i64 0, i32 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = bitcast %"class.v8::internal::compiler::ObjectData"** %134 to <2 x i64>*
  %136 = load <2 x i64>, <2 x i64>* %135, align 8
  store <2 x i64> %136, <2 x i64>* %11, align 16
  %137 = bitcast <2 x i64>* %11 to %"class.v8::internal::compiler::ObjectRef"*
  %138 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef6equalsERKS2_(%"class.v8::internal::compiler::ObjectRef"* nonnull %133, %"class.v8::internal::compiler::ObjectRef"* nonnull dereferenceable(16) %137) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %120) #10
  br i1 %138, label %143, label %139

139:                                              ; preds = %132
  %140 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %140, align 8
  %141 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %142 = bitcast %union.anon.1589* %141 to i8*
  store i8 0, i8* %142, align 8
  br label %150

143:                                              ; preds = %132
  %144 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13JSFunctionRef6sharedEv(%"class.v8::internal::compiler::JSFunctionRef"* nonnull %8) #10
  %145 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %144, 0
  %146 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %144, 1
  %147 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %147, align 8
  %148 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::ObjectData"* %145, %"class.v8::internal::compiler::ObjectData"** %148, align 8
  %149 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %146, %"class.v8::internal::compiler::JSHeapBroker"** %149, align 8
  br label %150

150:                                              ; preds = %143, %139, %115
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #10
  br label %184

151:                                              ; preds = %31, %90
  %152 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %29, i64 0, i32 0
  %153 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %152, align 8
  %154 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %153, i64 0, i32 2
  %155 = load i16, i16* %154, align 8
  switch i16 %155, label %180 [
    i16 785, label %156
    i16 203, label %167
  ]

156:                                              ; preds = %151
  %157 = bitcast %"class.v8::internal::compiler::JSCreateClosureNode"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #10
  %158 = getelementptr inbounds %"class.v8::internal::compiler::JSCreateClosureNode", %"class.v8::internal::compiler::JSCreateClosureNode"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %29, %"class.v8::internal::compiler::Node"** %158, align 8
  %159 = bitcast %"class.v8::internal::compiler::FeedbackCellRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %159) #10
  %160 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %1, i64 0, i32 4
  %161 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %160, align 8
  %162 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler19JSCreateClosureNode25GetFeedbackCellRefCheckedEPNS1_12JSHeapBrokerE(%"class.v8::internal::compiler::JSCreateClosureNode"* nonnull %12, %"class.v8::internal::compiler::JSHeapBroker"* %161) #10
  %163 = getelementptr inbounds %"class.v8::internal::compiler::FeedbackCellRef", %"class.v8::internal::compiler::FeedbackCellRef"* %13, i64 0, i32 0, i32 0, i32 0
  %164 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %162, 0
  store %"class.v8::internal::compiler::ObjectData"* %164, %"class.v8::internal::compiler::ObjectData"** %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::compiler::FeedbackCellRef", %"class.v8::internal::compiler::FeedbackCellRef"* %13, i64 0, i32 0, i32 0, i32 1
  %166 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %162, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %166, %"class.v8::internal::compiler::JSHeapBroker"** %165, align 8
  call void @_ZNK2v88internal8compiler15FeedbackCellRef20shared_function_infoEv(%"class.v8::base::Optional.1585"* sret %0, %"class.v8::internal::compiler::FeedbackCellRef"* nonnull %13) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %159) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #10
  br label %184

167:                                              ; preds = %151
  %168 = bitcast <2 x i64>* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %168) #10
  %169 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %1, i64 0, i32 4
  %170 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %169, align 8
  %171 = call i64* @_ZN2v88internal8compiler14FeedbackCellOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %153) #10
  %172 = getelementptr inbounds %"class.v8::base::Optional.1646", %"class.v8::base::Optional.1646"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_12FeedbackCellEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1646"* nonnull sret %6, %"class.v8::internal::compiler::JSHeapBroker"* %170, i64* %171, i32 1) #10
  %173 = load i8, i8* %172, align 8, !range !78
  %174 = icmp eq i8 %173, 1
  br i1 %174, label %176, label %175, !prof !2

175:                                              ; preds = %167
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

176:                                              ; preds = %167
  %177 = getelementptr inbounds %"class.v8::base::Optional.1646", %"class.v8::base::Optional.1646"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %178 = bitcast %"class.v8::internal::compiler::ObjectData"** %177 to <2 x i64>*
  %179 = load <2 x i64>, <2 x i64>* %178, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #10
  store <2 x i64> %179, <2 x i64>* %14, align 16
  call void @_ZNK2v88internal8compiler15FeedbackCellRef20shared_function_infoEv(%"class.v8::base::Optional.1585"* sret %0, %"class.v8::internal::compiler::FeedbackCellRef"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %168) #10
  br label %184

180:                                              ; preds = %151
  %181 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %181, align 8
  %182 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %183 = bitcast %union.anon.1589* %182 to i8*
  store i8 0, i8* %183, align 8
  br label %184

184:                                              ; preds = %180, %176, %156, %150
  ret void
}

declare zeroext i1 @_ZNK2v88internal8compiler9ObjectRef12IsJSFunctionEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #2

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef12AsJSFunctionEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal8compiler13JSFunctionRef19has_feedback_vectorEv(%"class.v8::internal::compiler::JSFunctionRef"*) local_unnamed_addr #2

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13JSFunctionRef14native_contextEv(%"class.v8::internal::compiler::JSFunctionRef"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal8compiler9ObjectRef6equalsERKS2_(%"class.v8::internal::compiler::ObjectRef"*, %"class.v8::internal::compiler::ObjectRef"* dereferenceable(16)) local_unnamed_addr #2

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13JSFunctionRef6sharedEv(%"class.v8::internal::compiler::JSFunctionRef"*) local_unnamed_addr #2

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler19JSCreateClosureNode25GetFeedbackCellRefCheckedEPNS1_12JSHeapBrokerE(%"class.v8::internal::compiler::JSCreateClosureNode"*, %"class.v8::internal::compiler::JSHeapBroker"*) local_unnamed_addr #2

declare void @_ZNK2v88internal8compiler15FeedbackCellRef20shared_function_infoEv(%"class.v8::base::Optional.1585"* sret, %"class.v8::internal::compiler::FeedbackCellRef"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal8compiler14FeedbackCellOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZN2v88internal8compiler9JSInliner20DetermineCallContextEPNS1_4NodeEPS4_(%"class.v8::internal::compiler::JSInliner"* nocapture readonly, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** nocapture) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::base::Optional.1646", align 8
  %5 = alloca %"class.v8::base::Optional.1639", align 8
  %6 = alloca %"class.v8::base::Optional.1639", align 8
  %7 = alloca %"struct.std::__1::array.1651", align 8
  %8 = alloca <2 x i64>, align 16
  %9 = alloca %"class.v8::internal::compiler::JSFunctionRef", align 8
  %10 = alloca <2 x i64>, align 16
  %11 = alloca %"class.v8::internal::compiler::ContextRef", align 8
  %12 = alloca %"class.v8::internal::compiler::JSCreateClosureNode", align 8
  %13 = alloca %"struct.v8::internal::compiler::FieldAccess", align 8
  %14 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 251658240
  %17 = icmp eq i32 %16, 251658240
  %18 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %19 = add i64 %18, 32
  br i1 %17, label %20, label %24

20:                                               ; preds = %3
  %21 = inttoptr i64 %19 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, 16
  br label %24

24:                                               ; preds = %3, %20
  %25 = phi i64 [ %23, %20 ], [ %19, %3 ]
  %26 = inttoptr i64 %25 to %"class.v8::internal::compiler::Node"**
  %27 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %26, align 8
  %28 = ptrtoint %"class.v8::internal::compiler::Node"* %27 to i64
  br label %29

29:                                               ; preds = %74, %24
  %30 = phi i64 [ %28, %24 ], [ %76, %74 ]
  %31 = inttoptr i64 %30 to %"class.v8::internal::compiler::Node"*
  %32 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %31, i64 0, i32 0
  %33 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %33, i64 0, i32 2
  %35 = load i16, i16* %34, align 8
  switch i16 %35, label %128 [
    i16 59, label %36
    i16 58, label %54
    i16 30, label %77
  ]

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %33, i64 0, i32 5
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %41, label %40, !prof !2

40:                                               ; preds = %36
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0)) #9
  unreachable

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %31, i64 0, i32 3
  %43 = load i32, i32* %42, align 4
  %44 = and i32 %43, 251658240
  %45 = icmp eq i32 %44, 251658240
  %46 = add i64 %30, 32
  br i1 %45, label %47, label %51

47:                                               ; preds = %41
  %48 = inttoptr i64 %46 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, 16
  br label %51

51:                                               ; preds = %47, %41
  %52 = phi i64 [ %50, %47 ], [ %46, %41 ]
  %53 = inttoptr i64 %52 to i64*
  br label %74

54:                                               ; preds = %29
  %55 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %33, i64 0, i32 5
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, 1
  br i1 %57, label %59, label %58, !prof !2

58:                                               ; preds = %54
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0)) #9
  unreachable

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %31, i64 0, i32 3
  %61 = load i32, i32* %60, align 4
  %62 = and i32 %61, 251658240
  %63 = icmp eq i32 %62, 251658240
  %64 = add i64 %30, 32
  br i1 %63, label %65, label %69

65:                                               ; preds = %59
  %66 = inttoptr i64 %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = add i64 %67, 16
  br label %69

69:                                               ; preds = %65, %59
  %70 = phi i64 [ %68, %65 ], [ %64, %59 ]
  %71 = inttoptr i64 %70 to %"class.v8::internal::compiler::Node"**
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %71, i64 1
  %73 = bitcast %"class.v8::internal::compiler::Node"** %72 to i64*
  br label %74

74:                                               ; preds = %69, %51
  %75 = phi i64* [ %73, %69 ], [ %53, %51 ]
  %76 = load i64, i64* %75, align 8
  br label %29

77:                                               ; preds = %29
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %33, i64 1
  %79 = bitcast %"class.v8::internal::compiler::Operator"* %78 to i64**
  %80 = load i64*, i64** %79, align 8
  %81 = bitcast <2 x i64>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #10
  %82 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 4
  %83 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %82, align 8
  %84 = getelementptr inbounds %"class.v8::base::Optional.1639", %"class.v8::base::Optional.1639"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1639"* nonnull sret %6, %"class.v8::internal::compiler::JSHeapBroker"* %83, i64* %80, i32 3) #10
  %85 = load i8, i8* %84, align 8, !range !78
  %86 = icmp eq i8 %85, 1
  br i1 %86, label %88, label %87, !prof !2

87:                                               ; preds = %77
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

88:                                               ; preds = %77
  %89 = getelementptr inbounds %"class.v8::base::Optional.1639", %"class.v8::base::Optional.1639"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %90 = bitcast %"class.v8::internal::compiler::ObjectData"** %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #10
  store <2 x i64> %91, <2 x i64>* %8, align 16
  %92 = bitcast <2 x i64>* %8 to %"class.v8::internal::compiler::ObjectRef"*
  %93 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef12IsJSFunctionEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %92) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #10
  br i1 %93, label %94, label %128

94:                                               ; preds = %88
  %95 = bitcast %"class.v8::internal::compiler::JSFunctionRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #10
  %96 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #10
  %97 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %82, align 8
  %98 = getelementptr inbounds %"class.v8::base::Optional.1639", %"class.v8::base::Optional.1639"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1639"* nonnull sret %5, %"class.v8::internal::compiler::JSHeapBroker"* %97, i64* %80, i32 3) #10
  %99 = load i8, i8* %98, align 8, !range !78
  %100 = icmp eq i8 %99, 1
  br i1 %100, label %102, label %101, !prof !2

101:                                              ; preds = %94
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.v8::base::Optional.1639", %"class.v8::base::Optional.1639"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %104 = bitcast %"class.v8::internal::compiler::ObjectData"** %103 to <2 x i64>*
  %105 = load <2 x i64>, <2 x i64>* %104, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #10
  store <2 x i64> %105, <2 x i64>* %10, align 16
  %106 = bitcast <2 x i64>* %10 to %"class.v8::internal::compiler::ObjectRef"*
  %107 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler9ObjectRef12AsJSFunctionEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %106) #10
  %108 = getelementptr inbounds %"class.v8::internal::compiler::JSFunctionRef", %"class.v8::internal::compiler::JSFunctionRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %107, 0
  store %"class.v8::internal::compiler::ObjectData"* %109, %"class.v8::internal::compiler::ObjectData"** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::compiler::JSFunctionRef", %"class.v8::internal::compiler::JSFunctionRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %107, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %111, %"class.v8::internal::compiler::JSHeapBroker"** %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #10
  %112 = call zeroext i1 @_ZNK2v88internal8compiler13JSFunctionRef19has_feedback_vectorEv(%"class.v8::internal::compiler::JSFunctionRef"* nonnull %9) #10
  br i1 %112, label %114, label %113, !prof !2

113:                                              ; preds = %102
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.6, i64 0, i64 0)) #9
  unreachable

114:                                              ; preds = %102
  %115 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %116 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %115, align 8
  %117 = bitcast %"class.v8::internal::compiler::ContextRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #10
  %118 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13JSFunctionRef7contextEv(%"class.v8::internal::compiler::JSFunctionRef"* nonnull %9) #10
  %119 = getelementptr inbounds %"class.v8::internal::compiler::ContextRef", %"class.v8::internal::compiler::ContextRef"* %11, i64 0, i32 0, i32 0, i32 0
  %120 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %118, 0
  store %"class.v8::internal::compiler::ObjectData"* %120, %"class.v8::internal::compiler::ObjectData"** %119, align 8
  %121 = getelementptr inbounds %"class.v8::internal::compiler::ContextRef", %"class.v8::internal::compiler::ContextRef"* %11, i64 0, i32 0, i32 0, i32 1
  %122 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %118, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %122, %"class.v8::internal::compiler::JSHeapBroker"** %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::compiler::ContextRef", %"class.v8::internal::compiler::ContextRef"* %11, i64 0, i32 0, i32 0
  %124 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantERKNS1_9ObjectRefE(%"class.v8::internal::compiler::JSGraph"* %116, %"class.v8::internal::compiler::ObjectRef"* nonnull dereferenceable(16) %123) #10
  store %"class.v8::internal::compiler::Node"* %124, %"class.v8::internal::compiler::Node"** %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #10
  %125 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13JSFunctionRef17raw_feedback_cellEv(%"class.v8::internal::compiler::JSFunctionRef"* nonnull %9) #10
  %126 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %125, 0
  %127 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %125, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #10
  br label %257

128:                                              ; preds = %29, %88
  %129 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %27, i64 0, i32 0
  %130 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %130, i64 0, i32 2
  %132 = load i16, i16* %131, align 8
  switch i16 %132, label %256 [
    i16 785, label %133
    i16 203, label %165
  ]

133:                                              ; preds = %128
  %134 = bitcast %"class.v8::internal::compiler::JSCreateClosureNode"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #10
  %135 = getelementptr inbounds %"class.v8::internal::compiler::JSCreateClosureNode", %"class.v8::internal::compiler::JSCreateClosureNode"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::Node"* %27, %"class.v8::internal::compiler::Node"** %135, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 4
  %137 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %136, align 8
  %138 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler19JSCreateClosureNode25GetFeedbackCellRefCheckedEPNS1_12JSHeapBrokerE(%"class.v8::internal::compiler::JSCreateClosureNode"* nonnull %12, %"class.v8::internal::compiler::JSHeapBroker"* %137) #10
  %139 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %138, 0
  %140 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %138, 1
  %141 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %129, align 8
  %142 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %141) #10
  br i1 %142, label %144, label %143, !prof !2

143:                                              ; preds = %133
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.22, i64 0, i64 0)) #9
  unreachable

144:                                              ; preds = %133
  %145 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %129, align 8
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %145, i64 0, i32 5
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %27, i64 0, i32 3
  %149 = load i32, i32* %148, align 4
  %150 = and i32 %149, 251658240
  %151 = icmp eq i32 %150, 251658240
  %152 = add i64 %28, 32
  br i1 %151, label %153, label %157

153:                                              ; preds = %144
  %154 = inttoptr i64 %152 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, 16
  br label %157

157:                                              ; preds = %144, %153
  %158 = phi i64 [ %156, %153 ], [ %152, %144 ]
  %159 = inttoptr i64 %158 to %"class.v8::internal::compiler::Node"**
  %160 = sext i32 %147 to i64
  %161 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %159, i64 %160
  %162 = bitcast %"class.v8::internal::compiler::Node"** %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = bitcast %"class.v8::internal::compiler::Node"** %2 to i64*
  store i64 %163, i64* %164, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #10
  br label %257

165:                                              ; preds = %128
  %166 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 4
  %167 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %166, align 8
  %168 = call i64* @_ZN2v88internal8compiler14FeedbackCellOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %130) #10
  %169 = getelementptr inbounds %"class.v8::base::Optional.1646", %"class.v8::base::Optional.1646"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %169) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_12FeedbackCellEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1646"* nonnull sret %4, %"class.v8::internal::compiler::JSHeapBroker"* %167, i64* %168, i32 1) #10
  %170 = load i8, i8* %169, align 8, !range !78
  %171 = icmp eq i8 %170, 1
  br i1 %171, label %173, label %172, !prof !2

172:                                              ; preds = %165
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.v8::base::Optional.1646", %"class.v8::base::Optional.1646"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %175 = load %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::ObjectData"** %174, align 8
  %176 = getelementptr inbounds %"class.v8::base::Optional.1646", %"class.v8::base::Optional.1646"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %177 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %176, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %169) #10
  %178 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %179 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %178, align 8
  %180 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %179, i64 0, i32 6
  %181 = load i32, i32* %180, align 8
  %182 = icmp sgt i32 %181, 0
  br i1 %182, label %184, label %183, !prof !2

183:                                              ; preds = %173
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0)) #9
  unreachable

184:                                              ; preds = %173
  %185 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %179, i64 0, i32 5
  %186 = load i32, i32* %185, align 4
  %187 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %179) #10
  %188 = zext i1 %187 to i32
  %189 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %178, align 8
  %190 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %189) #10
  %191 = zext i1 %190 to i32
  %192 = add i32 %186, %188
  %193 = add i32 %192, %191
  %194 = load i32, i32* %14, align 4
  %195 = and i32 %194, 251658240
  %196 = icmp eq i32 %195, 251658240
  br i1 %196, label %197, label %201

197:                                              ; preds = %184
  %198 = inttoptr i64 %19 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = add i64 %199, 16
  br label %201

201:                                              ; preds = %184, %197
  %202 = phi i64 [ %200, %197 ], [ %19, %184 ]
  %203 = inttoptr i64 %202 to %"class.v8::internal::compiler::Node"**
  %204 = sext i32 %193 to i64
  %205 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %203, i64 %204
  %206 = bitcast %"class.v8::internal::compiler::Node"** %205 to i64*
  %207 = load i64, i64* %206, align 8
  %208 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %178, align 8
  %209 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %208, i64 0, i32 7
  %210 = load i32, i32* %209, align 4
  %211 = icmp sgt i32 %210, 0
  br i1 %211, label %213, label %212, !prof !2

212:                                              ; preds = %201
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0)) #9
  unreachable

213:                                              ; preds = %201
  %214 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %208, i64 0, i32 5
  %215 = load i32, i32* %214, align 4
  %216 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %208) #10
  %217 = zext i1 %216 to i32
  %218 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %178, align 8
  %219 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %218) #10
  %220 = zext i1 %219 to i32
  %221 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %178, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %221, i64 0, i32 6
  %223 = load i32, i32* %222, align 8
  %224 = add i32 %215, %217
  %225 = add i32 %224, %220
  %226 = add i32 %225, %223
  %227 = load i32, i32* %14, align 4
  %228 = and i32 %227, 251658240
  %229 = icmp eq i32 %228, 251658240
  br i1 %229, label %230, label %234

230:                                              ; preds = %213
  %231 = inttoptr i64 %19 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = add i64 %232, 16
  br label %234

234:                                              ; preds = %213, %230
  %235 = phi i64 [ %233, %230 ], [ %19, %213 ]
  %236 = inttoptr i64 %235 to %"class.v8::internal::compiler::Node"**
  %237 = sext i32 %226 to i64
  %238 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %236, i64 %237
  %239 = bitcast %"class.v8::internal::compiler::Node"** %238 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %242 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %241, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %242, i64 0, i32 0, i32 0
  %244 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %243, align 8
  %245 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %242, i64 0, i32 3
  %246 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %245, align 8
  %247 = getelementptr inbounds %"struct.v8::internal::compiler::FieldAccess", %"struct.v8::internal::compiler::FieldAccess"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %247) #10
  call void @_ZN2v88internal8compiler13AccessBuilder20ForJSFunctionContextEv(%"struct.v8::internal::compiler::FieldAccess"* nonnull sret %13) #10
  %248 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder9LoadFieldERKNS1_11FieldAccessE(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %246, %"struct.v8::internal::compiler::FieldAccess"* nonnull dereferenceable(56) %13) #10
  %249 = bitcast %"struct.std::__1::array.1651"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %249) #10
  %250 = getelementptr inbounds %"struct.std::__1::array.1651", %"struct.std::__1::array.1651"* %7, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %27, %"class.v8::internal::compiler::Node"** %250, align 8
  %251 = getelementptr inbounds %"struct.std::__1::array.1651", %"struct.std::__1::array.1651"* %7, i64 0, i32 0, i64 1
  %252 = bitcast %"class.v8::internal::compiler::Node"** %251 to i64*
  store i64 %207, i64* %252, align 8
  %253 = getelementptr inbounds %"struct.std::__1::array.1651", %"struct.std::__1::array.1651"* %7, i64 0, i32 0, i64 2
  %254 = bitcast %"class.v8::internal::compiler::Node"** %253 to i64*
  store i64 %240, i64* %254, align 8
  %255 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %244, %"class.v8::internal::compiler::Operator"* %248, i32 3, %"class.v8::internal::compiler::Node"** nonnull %250, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %249) #10
  store %"class.v8::internal::compiler::Node"* %255, %"class.v8::internal::compiler::Node"** %2, align 8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %247) #10
  call void @_ZN2v88internal8compiler14NodeProperties18ReplaceEffectInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %255, i32 0) #10
  br label %257

256:                                              ; preds = %128
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #9
  unreachable

257:                                              ; preds = %234, %157, %114
  %258 = phi %"class.v8::internal::compiler::ObjectData"* [ %126, %114 ], [ %139, %157 ], [ %175, %234 ]
  %259 = phi %"class.v8::internal::compiler::JSHeapBroker"* [ %127, %114 ], [ %140, %157 ], [ %177, %234 ]
  %260 = insertvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } undef, %"class.v8::internal::compiler::ObjectData"* %258, 0
  %261 = insertvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %260, %"class.v8::internal::compiler::JSHeapBroker"* %259, 1
  ret { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %261
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantERKNS1_9ObjectRefE(%"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::ObjectRef"* dereferenceable(16)) local_unnamed_addr #2

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13JSFunctionRef7contextEv(%"class.v8::internal::compiler::JSFunctionRef"*) local_unnamed_addr #2

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler13JSFunctionRef17raw_feedback_cellEv(%"class.v8::internal::compiler::JSFunctionRef"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::SimplifiedOperatorBuilder"* @_ZNK2v88internal8compiler9JSInliner10simplifiedEv(%"class.v8::internal::compiler::JSInliner"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 3
  %5 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %4, align 8
  ret %"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %5
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder9LoadFieldERKNS1_11FieldAccessE(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"struct.v8::internal::compiler::FieldAccess"* dereferenceable(56)) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler13AccessBuilder20ForJSFunctionContextEv(%"struct.v8::internal::compiler::FieldAccess"* sret) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties18ReplaceEffectInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler9JSInliner16ReduceJSWasmCallEPNS1_4NodeE(%"class.v8::internal::compiler::JSInliner"* readonly, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::compiler::JSWasmCallData", align 8
  %4 = alloca %"class.v8::internal::compiler::Node"*, align 8
  %5 = alloca %"class.v8::internal::ZoneVector.1400", align 8
  %6 = alloca %"class.v8::internal::compiler::AllNodes", align 8
  %7 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %8 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %10, i64 0, i32 1
  %12 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %10, i64 0, i32 2
  %13 = bitcast %"class.v8::internal::compiler::Node"** %11 to <2 x i64>*
  %14 = load <2 x i64>, <2 x i64>* %13, align 8
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %12, align 8
  %15 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %16 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %17 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %16, i64 1
  %18 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %7, align 8
  %19 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %16) #10
  br i1 %19, label %21, label %20, !prof !2

20:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.22, i64 0, i64 0)) #9
  unreachable

21:                                               ; preds = %2
  %22 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %23 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %22, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %26 = load i32, i32* %25, align 4
  %27 = and i32 %26, 251658240
  %28 = icmp eq i32 %27, 251658240
  %29 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %30 = add i64 %29, 32
  br i1 %28, label %31, label %35

31:                                               ; preds = %21
  %32 = inttoptr i64 %30 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, 16
  br label %35

35:                                               ; preds = %21, %31
  %36 = phi i64 [ %34, %31 ], [ %30, %21 ]
  %37 = inttoptr i64 %36 to %"class.v8::internal::compiler::Node"**
  %38 = sext i32 %24 to i64
  %39 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %37, i64 %38
  %40 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %39, align 8
  %41 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %22) #10
  br i1 %41, label %43, label %42, !prof !2

42:                                               ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.23, i64 0, i64 0)) #9
  unreachable

43:                                               ; preds = %35
  %44 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %45 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %44, i64 0, i32 5
  %46 = load i32, i32* %45, align 4
  %47 = tail call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %44) #10
  %48 = zext i1 %47 to i32
  %49 = add nsw i32 %46, %48
  %50 = load i32, i32* %25, align 4
  %51 = and i32 %50, 251658240
  %52 = icmp eq i32 %51, 251658240
  br i1 %52, label %53, label %57

53:                                               ; preds = %43
  %54 = inttoptr i64 %30 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 16
  br label %57

57:                                               ; preds = %43, %53
  %58 = phi i64 [ %56, %53 ], [ %30, %43 ]
  %59 = inttoptr i64 %58 to %"class.v8::internal::compiler::Node"**
  %60 = sext i32 %49 to i64
  %61 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %59, i64 %60
  %62 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %16, i64 1, i32 1
  %64 = bitcast i8** %63 to %"class.v8::internal::Signature"**
  %65 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %64, align 8
  %66 = tail call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler45CreateJSWasmCallBuiltinContinuationFrameStateEPNS1_7JSGraphEPNS1_4NodeES5_PKNS0_9SignatureINS0_4wasm9ValueTypeEEE(%"class.v8::internal::compiler::JSGraph"* %18, %"class.v8::internal::compiler::Node"* %40, %"class.v8::internal::compiler::Node"* %62, %"class.v8::internal::Signature"* %65) #10
  %67 = getelementptr inbounds %"class.v8::internal::compiler::JSWasmCallData", %"class.v8::internal::compiler::JSWasmCallData"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #10
  %68 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %64, align 8
  call void @_ZN2v88internal8compiler14JSWasmCallDataC1EPKNS0_9SignatureINS0_4wasm9ValueTypeEEE(%"class.v8::internal::compiler::JSWasmCallData"* nonnull %3, %"class.v8::internal::Signature"* %68) #10
  %69 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %7, align 8
  %70 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %71, i64 0, i32 4
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %71, i64 0, i32 0
  %75 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %69, i64 0, i32 0
  %77 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %64, align 8
  %78 = bitcast %"class.v8::internal::compiler::Operator"* %17 to %"struct.v8::internal::wasm::WasmModule"**
  %79 = load %"struct.v8::internal::wasm::WasmModule"*, %"struct.v8::internal::wasm::WasmModule"** %78, align 8
  %80 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %69, i64 0, i32 1
  %81 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %80, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 5
  %83 = load %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::SourcePositionTable"** %82, align 8
  %84 = call i32 @_ZN2v88internal4wasm12WasmFeatures9FromFlagsEv() #10
  call void @_ZN2v88internal8compiler27BuildInlinedJSToWasmWrapperEPNS0_4ZoneEPNS1_12MachineGraphEPKNS0_9SignatureINS0_4wasm9ValueTypeEEEPKNS7_10WasmModuleEPNS0_7IsolateEPNS1_19SourcePositionTableENS0_12StubCallModeENS7_12WasmFeaturesEPKNS1_14JSWasmCallDataEPNS1_4NodeE(%"class.v8::internal::Zone"* %75, %"class.v8::internal::compiler::MachineGraph"* %76, %"class.v8::internal::Signature"* %77, %"struct.v8::internal::wasm::WasmModule"* %79, %"class.v8::internal::Isolate"* %81, %"class.v8::internal::compiler::SourcePositionTable"* %83, i32 2, i32 %84, %"class.v8::internal::compiler::JSWasmCallData"* nonnull %3, %"class.v8::internal::compiler::Node"* %66) #10
  %85 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %7, align 8
  %86 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %85, i64 0, i32 0, i32 0
  %87 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %87, i64 0, i32 1
  %89 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %88, align 8
  %90 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %87, i64 0, i32 2
  %91 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::compiler::JSWasmCallData", %"class.v8::internal::compiler::JSWasmCallData"* %3, i64 0, i32 1, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = icmp eq i64* %93, null
  br i1 %94, label %97, label %95

95:                                               ; preds = %57
  %96 = bitcast i64* %93 to i8*
  call void @_ZdlPv(i8* %96) #11
  br label %97

97:                                               ; preds = %57, %95
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #10
  %98 = bitcast %"class.v8::internal::compiler::Node"** %11 to <2 x i64>*
  store <2 x i64> %14, <2 x i64>* %98, align 8
  %99 = bitcast %"class.v8::internal::compiler::Node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #10
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %4, align 8
  %100 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties17IsExceptionalCallEPNS1_4NodeEPS4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** nonnull %4) #10
  %101 = bitcast %"class.v8::internal::ZoneVector.1400"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %101) #10
  %102 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 1
  %103 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %102, align 8
  %104 = ptrtoint %"class.v8::internal::Zone"* %103 to i64
  %105 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %5, i64 0, i32 0, i32 0, i32 2, i32 1
  %106 = bitcast %"struct.std::__1::__compressed_pair_elem.1405"* %105 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 0, i64 24, i1 false) #10
  store i64 %104, i64* %106, align 8
  %107 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, align 8
  %108 = icmp eq %"class.v8::internal::compiler::Node"* %107, null
  br i1 %108, label %384, label %109

109:                                              ; preds = %97
  %110 = bitcast %"class.v8::internal::compiler::AllNodes"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %110) #10
  %111 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %7, align 8
  %112 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %111, i64 0, i32 0, i32 0
  %113 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %112, align 8
  call void @_ZN2v88internal8compiler8AllNodesC1EPNS0_4ZoneEPNS1_4NodeEPKNS1_5GraphEb(%"class.v8::internal::compiler::AllNodes"* nonnull %6, %"class.v8::internal::Zone"* %103, %"class.v8::internal::compiler::Node"* %91, %"class.v8::internal::compiler::Graph"* %113, i1 zeroext true) #10
  %114 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %114, align 8
  %116 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %117 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %116, align 8
  %118 = icmp eq %"class.v8::internal::compiler::Node"** %115, %117
  br i1 %118, label %129, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %5, i64 0, i32 0, i32 0, i32 1
  %121 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %5, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %122 = bitcast %"class.v8::internal::compiler::Node"*** %120 to i64*
  %123 = bitcast %"class.v8::internal::ZoneVector.1400"* %5 to i64*
  %124 = bitcast %"class.v8::internal::compiler::Node"*** %121 to i64*
  %125 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %5, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %126 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %5, i64 0, i32 0, i32 0, i32 0
  br label %136

127:                                              ; preds = %380
  %128 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %114, align 8
  br label %129

129:                                              ; preds = %127, %109
  %130 = phi %"class.v8::internal::compiler::Node"** [ %128, %127 ], [ %115, %109 ]
  %131 = icmp eq %"class.v8::internal::compiler::Node"** %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %129
  %133 = ptrtoint %"class.v8::internal::compiler::Node"** %130 to i64
  %134 = bitcast %"class.v8::internal::compiler::Node"*** %116 to i64*
  store i64 %133, i64* %134, align 8
  br label %135

135:                                              ; preds = %129, %132
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %110) #10
  br label %384

136:                                              ; preds = %119, %380
  %137 = phi %"class.v8::internal::compiler::Node"** [ null, %119 ], [ %381, %380 ]
  %138 = phi %"class.v8::internal::compiler::Node"** [ %115, %119 ], [ %382, %380 ]
  %139 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, align 8
  %140 = ptrtoint %"class.v8::internal::compiler::Node"* %139 to i64
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %139, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, 16777215
  %144 = icmp ugt i32 %73, %143
  br i1 %144, label %380, label %145

145:                                              ; preds = %136
  %146 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %139, i64 0, i32 0
  %147 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %147, i64 0, i32 3, i32 0
  %149 = load i8, i8* %148, align 2
  %150 = and i8 %149, 32
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %152, label %380

152:                                              ; preds = %145
  %153 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties17IsExceptionalCallEPNS1_4NodeEPS4_(%"class.v8::internal::compiler::Node"* %139, %"class.v8::internal::compiler::Node"** null) #10
  br i1 %153, label %380, label %154

154:                                              ; preds = %152
  %155 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %121, align 8
  %156 = icmp eq %"class.v8::internal::compiler::Node"** %137, %155
  br i1 %156, label %161, label %157

157:                                              ; preds = %154
  %158 = bitcast %"class.v8::internal::compiler::Node"** %137 to i64*
  store i64 %140, i64* %158, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %137, i64 1
  %160 = ptrtoint %"class.v8::internal::compiler::Node"** %159 to i64
  store i64 %160, i64* %122, align 8
  br label %380

161:                                              ; preds = %154
  %162 = ptrtoint %"class.v8::internal::compiler::Node"** %155 to i64
  %163 = load i64, i64* %123, align 8
  %164 = sub i64 %162, %163
  %165 = ashr exact i64 %164, 3
  %166 = add nsw i64 %165, 1
  %167 = icmp ugt i64 %166, 268435455
  br i1 %167, label %168, label %170

168:                                              ; preds = %161
  %169 = bitcast %"class.v8::internal::ZoneVector.1400"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %169) #9
  unreachable

170:                                              ; preds = %161
  %171 = icmp ult i64 %165, 134217727
  br i1 %171, label %172, label %177

172:                                              ; preds = %170
  %173 = ashr exact i64 %164, 2
  %174 = icmp ult i64 %173, %166
  %175 = select i1 %174, i64 %166, i64 %173
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %194, label %177

177:                                              ; preds = %172, %170
  %178 = phi i64 [ %175, %172 ], [ 268435455, %170 ]
  %179 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %125, align 8
  %180 = shl i64 %178, 3
  %181 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %179, i64 0, i32 2
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %179, i64 0, i32 3
  %184 = load i64, i64* %183, align 8
  %185 = sub i64 %184, %182
  %186 = icmp ugt i64 %180, %185
  br i1 %186, label %187, label %189, !prof !3

187:                                              ; preds = %177
  %188 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %179, i64 %180) #10
  br label %191

189:                                              ; preds = %177
  %190 = add i64 %182, %180
  store i64 %190, i64* %181, align 8
  br label %191

191:                                              ; preds = %189, %187
  %192 = phi i64 [ %188, %187 ], [ %182, %189 ]
  %193 = inttoptr i64 %192 to %"class.v8::internal::compiler::Node"**
  br label %194

194:                                              ; preds = %191, %172
  %195 = phi i64 [ %178, %191 ], [ 0, %172 ]
  %196 = phi %"class.v8::internal::compiler::Node"** [ %193, %191 ], [ null, %172 ]
  %197 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 %165
  %198 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 %195
  %199 = ptrtoint %"class.v8::internal::compiler::Node"** %198 to i64
  %200 = bitcast %"class.v8::internal::compiler::Node"** %197 to i64*
  store i64 %140, i64* %200, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 1
  %202 = ptrtoint %"class.v8::internal::compiler::Node"** %201 to i64
  %203 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %126, align 8
  %204 = ptrtoint %"class.v8::internal::compiler::Node"** %203 to i64
  %205 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %120, align 8
  %206 = icmp eq %"class.v8::internal::compiler::Node"** %205, %203
  br i1 %206, label %377, label %207

207:                                              ; preds = %194
  %208 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -1
  %209 = ptrtoint %"class.v8::internal::compiler::Node"** %208 to i64
  %210 = sub i64 %209, %204
  %211 = lshr i64 %210, 3
  %212 = add nuw nsw i64 %211, 1
  %213 = icmp ult i64 %212, 4
  br i1 %213, label %307, label %214

214:                                              ; preds = %207
  %215 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 -1
  %216 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -1
  %217 = ptrtoint %"class.v8::internal::compiler::Node"** %216 to i64
  %218 = sub i64 %217, %204
  %219 = lshr i64 %218, 3
  %220 = sub nsw i64 %165, %219
  %221 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %215, i64 %220
  %222 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -1
  %223 = sub nsw i64 0, %219
  %224 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %222, i64 %223
  %225 = icmp ult %"class.v8::internal::compiler::Node"** %221, %205
  %226 = icmp ult %"class.v8::internal::compiler::Node"** %224, %197
  %227 = and i1 %225, %226
  br i1 %227, label %307, label %228

228:                                              ; preds = %214
  %229 = and i64 %212, 4611686018427387900
  %230 = sub nsw i64 0, %229
  %231 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 %230
  %232 = sub nsw i64 0, %229
  %233 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 %232
  %234 = add nsw i64 %229, -4
  %235 = lshr exact i64 %234, 2
  %236 = add nuw nsw i64 %235, 1
  %237 = and i64 %236, 1
  %238 = icmp eq i64 %234, 0
  br i1 %238, label %283, label %239

239:                                              ; preds = %228
  %240 = sub nuw nsw i64 %236, %237
  %241 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -1
  %242 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -1
  %243 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -1
  %244 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -1
  br label %245

245:                                              ; preds = %245, %239
  %246 = phi i64 [ 0, %239 ], [ %280, %245 ]
  %247 = phi i64 [ %240, %239 ], [ %281, %245 ]
  %248 = sub i64 0, %246
  %249 = sub i64 0, %246
  %250 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %241, i64 %248
  %251 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %242, i64 %249
  %252 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %251, i64 -1
  %253 = bitcast %"class.v8::internal::compiler::Node"** %252 to <2 x i64>*
  %254 = load <2 x i64>, <2 x i64>* %253, align 8, !alias.scope !79
  %255 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %251, i64 -2
  %256 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %255, i64 -1
  %257 = bitcast %"class.v8::internal::compiler::Node"** %256 to <2 x i64>*
  %258 = load <2 x i64>, <2 x i64>* %257, align 8, !alias.scope !79
  %259 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %250, i64 -1
  %260 = bitcast %"class.v8::internal::compiler::Node"** %259 to <2 x i64>*
  store <2 x i64> %254, <2 x i64>* %260, align 8, !alias.scope !82, !noalias !79
  %261 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %250, i64 -2
  %262 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %261, i64 -1
  %263 = bitcast %"class.v8::internal::compiler::Node"** %262 to <2 x i64>*
  store <2 x i64> %258, <2 x i64>* %263, align 8, !alias.scope !82, !noalias !79
  %264 = sub nuw nsw i64 -4, %246
  %265 = sub nuw nsw i64 -4, %246
  %266 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %243, i64 %264
  %267 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %244, i64 %265
  %268 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %267, i64 -1
  %269 = bitcast %"class.v8::internal::compiler::Node"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !79
  %271 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %267, i64 -2
  %272 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %271, i64 -1
  %273 = bitcast %"class.v8::internal::compiler::Node"** %272 to <2 x i64>*
  %274 = load <2 x i64>, <2 x i64>* %273, align 8, !alias.scope !79
  %275 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %266, i64 -1
  %276 = bitcast %"class.v8::internal::compiler::Node"** %275 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %276, align 8, !alias.scope !82, !noalias !79
  %277 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %266, i64 -2
  %278 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %277, i64 -1
  %279 = bitcast %"class.v8::internal::compiler::Node"** %278 to <2 x i64>*
  store <2 x i64> %274, <2 x i64>* %279, align 8, !alias.scope !82, !noalias !79
  %280 = add i64 %246, 8
  %281 = add i64 %247, -2
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %245, !llvm.loop !84

283:                                              ; preds = %245, %228
  %284 = phi i64 [ 0, %228 ], [ %280, %245 ]
  %285 = icmp eq i64 %237, 0
  br i1 %285, label %305, label %286

286:                                              ; preds = %283
  %287 = sub i64 0, %284
  %288 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %197, i64 -1
  %289 = sub i64 0, %284
  %290 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %205, i64 -1
  %291 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %288, i64 %287
  %292 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %290, i64 %289
  %293 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %292, i64 -1
  %294 = bitcast %"class.v8::internal::compiler::Node"** %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !79
  %296 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %292, i64 -2
  %297 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %296, i64 -1
  %298 = bitcast %"class.v8::internal::compiler::Node"** %297 to <2 x i64>*
  %299 = load <2 x i64>, <2 x i64>* %298, align 8, !alias.scope !79
  %300 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %291, i64 -1
  %301 = bitcast %"class.v8::internal::compiler::Node"** %300 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %301, align 8, !alias.scope !82, !noalias !79
  %302 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %291, i64 -2
  %303 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %302, i64 -1
  %304 = bitcast %"class.v8::internal::compiler::Node"** %303 to <2 x i64>*
  store <2 x i64> %299, <2 x i64>* %304, align 8, !alias.scope !82, !noalias !79
  br label %305

305:                                              ; preds = %283, %286
  %306 = icmp eq i64 %212, %229
  br i1 %306, label %377, label %307

307:                                              ; preds = %305, %214, %207
  %308 = phi %"class.v8::internal::compiler::Node"** [ %197, %214 ], [ %197, %207 ], [ %231, %305 ]
  %309 = phi %"class.v8::internal::compiler::Node"** [ %205, %214 ], [ %205, %207 ], [ %233, %305 ]
  %310 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %309, i64 -1
  %311 = ptrtoint %"class.v8::internal::compiler::Node"** %310 to i64
  %312 = sub i64 %311, %204
  %313 = lshr i64 %312, 3
  %314 = add nuw nsw i64 %313, 1
  %315 = and i64 %314, 7
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %328, label %317

317:                                              ; preds = %307, %317
  %318 = phi %"class.v8::internal::compiler::Node"** [ %321, %317 ], [ %308, %307 ]
  %319 = phi %"class.v8::internal::compiler::Node"** [ %322, %317 ], [ %309, %307 ]
  %320 = phi i64 [ %326, %317 ], [ %315, %307 ]
  %321 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %318, i64 -1
  %322 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %319, i64 -1
  %323 = bitcast %"class.v8::internal::compiler::Node"** %322 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.v8::internal::compiler::Node"** %321 to i64*
  store i64 %324, i64* %325, align 8
  %326 = add i64 %320, -1
  %327 = icmp eq i64 %326, 0
  br i1 %327, label %328, label %317, !llvm.loop !85

328:                                              ; preds = %317, %307
  %329 = phi %"class.v8::internal::compiler::Node"** [ undef, %307 ], [ %321, %317 ]
  %330 = phi %"class.v8::internal::compiler::Node"** [ %308, %307 ], [ %321, %317 ]
  %331 = phi %"class.v8::internal::compiler::Node"** [ %309, %307 ], [ %322, %317 ]
  %332 = icmp ult i64 %312, 56
  br i1 %332, label %377, label %333

333:                                              ; preds = %328, %333
  %334 = phi %"class.v8::internal::compiler::Node"** [ %371, %333 ], [ %330, %328 ]
  %335 = phi %"class.v8::internal::compiler::Node"** [ %372, %333 ], [ %331, %328 ]
  %336 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %334, i64 -1
  %337 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %335, i64 -1
  %338 = bitcast %"class.v8::internal::compiler::Node"** %337 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = bitcast %"class.v8::internal::compiler::Node"** %336 to i64*
  store i64 %339, i64* %340, align 8
  %341 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %334, i64 -2
  %342 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %335, i64 -2
  %343 = bitcast %"class.v8::internal::compiler::Node"** %342 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = bitcast %"class.v8::internal::compiler::Node"** %341 to i64*
  store i64 %344, i64* %345, align 8
  %346 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %334, i64 -3
  %347 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %335, i64 -3
  %348 = bitcast %"class.v8::internal::compiler::Node"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.v8::internal::compiler::Node"** %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %334, i64 -4
  %352 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %335, i64 -4
  %353 = bitcast %"class.v8::internal::compiler::Node"** %352 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = bitcast %"class.v8::internal::compiler::Node"** %351 to i64*
  store i64 %354, i64* %355, align 8
  %356 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %334, i64 -5
  %357 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %335, i64 -5
  %358 = bitcast %"class.v8::internal::compiler::Node"** %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = bitcast %"class.v8::internal::compiler::Node"** %356 to i64*
  store i64 %359, i64* %360, align 8
  %361 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %334, i64 -6
  %362 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %335, i64 -6
  %363 = bitcast %"class.v8::internal::compiler::Node"** %362 to i64*
  %364 = load i64, i64* %363, align 8
  %365 = bitcast %"class.v8::internal::compiler::Node"** %361 to i64*
  store i64 %364, i64* %365, align 8
  %366 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %334, i64 -7
  %367 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %335, i64 -7
  %368 = bitcast %"class.v8::internal::compiler::Node"** %367 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = bitcast %"class.v8::internal::compiler::Node"** %366 to i64*
  store i64 %369, i64* %370, align 8
  %371 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %334, i64 -8
  %372 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %335, i64 -8
  %373 = bitcast %"class.v8::internal::compiler::Node"** %372 to i64*
  %374 = load i64, i64* %373, align 8
  %375 = bitcast %"class.v8::internal::compiler::Node"** %371 to i64*
  store i64 %374, i64* %375, align 8
  %376 = icmp eq %"class.v8::internal::compiler::Node"** %372, %203
  br i1 %376, label %377, label %333, !llvm.loop !86

377:                                              ; preds = %328, %333, %305, %194
  %378 = phi %"class.v8::internal::compiler::Node"** [ %197, %194 ], [ %231, %305 ], [ %329, %328 ], [ %371, %333 ]
  %379 = ptrtoint %"class.v8::internal::compiler::Node"** %378 to i64
  store i64 %379, i64* %123, align 8
  store i64 %202, i64* %122, align 8
  store i64 %199, i64* %124, align 8
  br label %380

380:                                              ; preds = %145, %377, %157, %152, %136
  %381 = phi %"class.v8::internal::compiler::Node"** [ %137, %145 ], [ %201, %377 ], [ %159, %157 ], [ %137, %152 ], [ %137, %136 ]
  %382 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %138, i64 1
  %383 = icmp eq %"class.v8::internal::compiler::Node"** %382, %117
  br i1 %383, label %127, label %136

384:                                              ; preds = %97, %135
  %385 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %386 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %385) #10
  br i1 %386, label %388, label %387, !prof !2

387:                                              ; preds = %384
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.22, i64 0, i64 0)) #9
  unreachable

388:                                              ; preds = %384
  %389 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %390 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %389, i64 0, i32 5
  %391 = load i32, i32* %390, align 4
  %392 = load i32, i32* %25, align 4
  %393 = and i32 %392, 251658240
  %394 = icmp eq i32 %393, 251658240
  br i1 %394, label %395, label %399

395:                                              ; preds = %388
  %396 = inttoptr i64 %30 to i64*
  %397 = load i64, i64* %396, align 8
  %398 = add i64 %397, 16
  br label %399

399:                                              ; preds = %388, %395
  %400 = phi i64 [ %398, %395 ], [ %30, %388 ]
  %401 = inttoptr i64 %400 to %"class.v8::internal::compiler::Node"**
  %402 = sext i32 %391 to i64
  %403 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %401, i64 %402
  %404 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %403, align 8
  %405 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %389) #10
  br i1 %405, label %407, label %406, !prof !2

406:                                              ; preds = %399
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.23, i64 0, i64 0)) #9
  unreachable

407:                                              ; preds = %399
  %408 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %409 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %408, i64 0, i32 5
  %410 = load i32, i32* %409, align 4
  %411 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %408) #10
  %412 = zext i1 %411 to i32
  %413 = add nsw i32 %410, %412
  %414 = load i32, i32* %25, align 4
  %415 = and i32 %414, 251658240
  %416 = icmp eq i32 %415, 251658240
  br i1 %416, label %417, label %421

417:                                              ; preds = %407
  %418 = inttoptr i64 %30 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = add i64 %419, 16
  br label %421

421:                                              ; preds = %407, %417
  %422 = phi i64 [ %420, %417 ], [ %30, %407 ]
  %423 = inttoptr i64 %422 to %"class.v8::internal::compiler::Node"**
  %424 = sext i32 %413 to i64
  %425 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %423, i64 %424
  %426 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %425, align 8
  %427 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %7, align 8
  %428 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph17UndefinedConstantEv(%"class.v8::internal::compiler::JSGraph"* %427) #10
  %429 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %4, align 8
  %430 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %15, align 8
  %431 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %430, i64 1, i32 1
  %432 = bitcast i8** %431 to %"class.v8::internal::Signature"**
  %433 = load %"class.v8::internal::Signature"*, %"class.v8::internal::Signature"** %432, align 8
  %434 = getelementptr inbounds %"class.v8::internal::Signature", %"class.v8::internal::Signature"* %433, i64 0, i32 1
  %435 = load i64, i64* %434, align 8
  %436 = trunc i64 %435 to i32
  %437 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler9JSInliner10InlineCallEPNS1_4NodeES4_S4_S4_NS1_9StartNodeES4_S4_RKNS0_10ZoneVectorIS4_EEi(%"class.v8::internal::compiler::JSInliner"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %428, %"class.v8::internal::compiler::Node"* %404, %"class.v8::internal::compiler::Node"* %426, %"class.v8::internal::compiler::Node"* %89, %"class.v8::internal::compiler::Node"* %91, %"class.v8::internal::compiler::Node"* %429, %"class.v8::internal::ZoneVector.1400"* nonnull dereferenceable(32) %5, i32 %436) #10
  %438 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %5, i64 0, i32 0, i32 0, i32 0
  %439 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %438, align 8
  %440 = icmp eq %"class.v8::internal::compiler::Node"** %439, null
  br i1 %440, label %445, label %441

441:                                              ; preds = %421
  %442 = ptrtoint %"class.v8::internal::compiler::Node"** %439 to i64
  %443 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %5, i64 0, i32 0, i32 0, i32 1
  %444 = bitcast %"class.v8::internal::compiler::Node"*** %443 to i64*
  store i64 %442, i64* %444, align 8
  br label %445

445:                                              ; preds = %421, %441
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %101) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #10
  ret %"class.v8::internal::compiler::Node"* %437
}

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler45CreateJSWasmCallBuiltinContinuationFrameStateEPNS1_7JSGraphEPNS1_4NodeES5_PKNS0_9SignatureINS0_4wasm9ValueTypeEEE(%"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::Signature"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14JSWasmCallDataC1EPKNS0_9SignatureINS0_4wasm9ValueTypeEEE(%"class.v8::internal::compiler::JSWasmCallData"*, %"class.v8::internal::Signature"*) unnamed_addr #2

declare void @_ZN2v88internal8compiler27BuildInlinedJSToWasmWrapperEPNS0_4ZoneEPNS1_12MachineGraphEPKNS0_9SignatureINS0_4wasm9ValueTypeEEEPKNS7_10WasmModuleEPNS0_7IsolateEPNS1_19SourcePositionTableENS0_12StubCallModeENS7_12WasmFeaturesEPKNS1_14JSWasmCallDataEPNS1_4NodeE(%"class.v8::internal::Zone"*, %"class.v8::internal::compiler::MachineGraph"*, %"class.v8::internal::Signature"*, %"struct.v8::internal::wasm::WasmModule"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::compiler::SourcePositionTable"*, i32, i32, %"class.v8::internal::compiler::JSWasmCallData"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare i32 @_ZN2v88internal4wasm12WasmFeatures9FromFlagsEv() local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties17IsExceptionalCallEPNS1_4NodeEPS4_(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler8AllNodesC1EPNS0_4ZoneEPNS1_4NodeEPKNS1_5GraphEb(%"class.v8::internal::compiler::AllNodes"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Graph"*, i1 zeroext) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler9JSInliner12ReduceJSCallEPNS1_4NodeE(%"class.v8::internal::compiler::JSInliner"* readonly, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::array.1630", align 8
  %4 = alloca %"struct.std::__1::array.1629", align 8
  %5 = alloca %"struct.std::__1::array.1629", align 8
  %6 = alloca %"struct.std::__1::array.1629", align 8
  %7 = alloca %"struct.std::__1::array.1651", align 8
  %8 = alloca %"struct.std::__1::array.1652", align 8
  %9 = alloca %"struct.std::__1::array.1629", align 8
  %10 = alloca %"struct.std::__1::array.1630", align 8
  %11 = alloca %"struct.std::__1::array.1634", align 8
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %"class.v8::internal::compiler::SharedFunctionInfoRef"*
  %14 = alloca %"struct.std::__1::array.1652", align 8
  %15 = alloca %"class.v8::base::Optional.1585", align 8
  %16 = alloca %"class.v8::base::Optional.1585", align 8
  %17 = alloca <2 x i64>, align 16
  %18 = alloca %"class.v8::internal::StdoutStream", align 8
  %19 = alloca %"class.v8::internal::StdoutStream", align 8
  %20 = alloca %"class.v8::internal::StdoutStream", align 8
  %21 = alloca %"class.v8::internal::compiler::Node"*, align 8
  %22 = alloca %"class.v8::internal::compiler::Node"*, align 8
  %23 = alloca %"class.v8::internal::compiler::FeedbackCellRef", align 8
  %24 = alloca %"class.v8::base::Optional.1601", align 8
  %25 = alloca %"class.v8::internal::StdoutStream", align 8
  %26 = alloca %"class.v8::internal::StdoutStream", align 8
  %27 = alloca %"class.v8::internal::compiler::BytecodeArrayRef", align 8
  %28 = alloca %"class.v8::internal::compiler::CallFrequency", align 4
  %29 = alloca %"struct.v8::internal::compiler::ObserveNodeInfo", align 8
  %30 = alloca %"class.v8::internal::ZoneVector.1400", align 8
  %31 = alloca %"class.v8::internal::compiler::AllNodes", align 8
  %32 = alloca %"class.v8::internal::compiler::JSGlobalProxyRef", align 8
  %33 = alloca <2 x i64>, align 16
  %34 = bitcast <2 x i64>* %33 to %"class.v8::internal::compiler::NativeContextRef"*
  %35 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #10
  call void @_ZN2v88internal8compiler9JSInliner19DetermineCallTargetEPNS1_4NodeE(%"class.v8::base::Optional.1585"* nonnull sret %16, %"class.v8::internal::compiler::JSInliner"* %0, %"class.v8::internal::compiler::Node"* %1)
  %36 = load i8, i8* %35, align 8, !range !78
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %1652, label %38

38:                                               ; preds = %2
  %39 = bitcast <2 x i64>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #10
  %40 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 4
  %41 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 2
  %43 = load %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::OptimizedCompilationInfo"** %42, align 8
  %44 = getelementptr inbounds %"class.v8::internal::OptimizedCompilationInfo", %"class.v8::internal::OptimizedCompilationInfo"* %43, i64 0, i32 5, i32 0, i32 0
  %45 = load i64*, i64** %44, align 8
  %46 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #10
  call void @_ZN2v88internal8compiler10TryMakeRefINS0_18SharedFunctionInfoEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1585"* nonnull sret %15, %"class.v8::internal::compiler::JSHeapBroker"* %41, i64* %45, i32 1) #10
  %47 = load i8, i8* %46, align 8, !range !78
  %48 = icmp eq i8 %47, 1
  br i1 %48, label %50, label %49, !prof !2

49:                                               ; preds = %38
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.v8::internal::compiler::ObjectData"** %51 to <2 x i64>*
  %53 = load <2 x i64>, <2 x i64>* %52, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #10
  store <2 x i64> %53, <2 x i64>* %17, align 16
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 0
  %55 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %55, i64 0, i32 2
  %57 = load i16, i16* %56, align 8
  %58 = icmp eq i16 %57, 826
  br i1 %58, label %59, label %93

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %61 = call zeroext i8 @_ZNK2v88internal8compiler21SharedFunctionInfoRef4kindEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* %60) #10
  %62 = icmp ult i8 %61, 7
  br i1 %62, label %63, label %67

63:                                               ; preds = %59
  %64 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %65 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %64, i64 0, i32 2
  %66 = load i16, i16* %65, align 8
  br label %93

67:                                               ; preds = %59
  %68 = load i8, i8* @_ZN2v88internal25FLAG_trace_turbo_inliningE, align 1, !range !78
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %1650, label %70

70:                                               ; preds = %67
  %71 = bitcast %"class.v8::internal::StdoutStream"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %71) #10
  %72 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %18, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %73 = bitcast %"class.v8::internal::StdoutStream"* %18 to %"class.v8::internal::OFStream"*
  %74 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %73, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %74) #10
  %75 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %18, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %75, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %72, align 8
  %76 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %77 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %18, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %76, %"class.v8::base::RecursiveMutex"** %77, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %76) #10
  %78 = bitcast %"class.v8::internal::StdoutStream"* %18 to %"class.std::__1::basic_ostream"*
  %79 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %78, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i64 13) #10
  %80 = getelementptr inbounds %"class.v8::internal::compiler::SharedFunctionInfoRef", %"class.v8::internal::compiler::SharedFunctionInfoRef"* %60, i64 0, i32 0, i32 0
  %81 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %78, %"class.v8::internal::compiler::ObjectRef"* dereferenceable(16) %80) #10
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %78, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #10
  %83 = bitcast <2 x i64>* %17 to %"class.v8::internal::compiler::ObjectRef"*
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %78, %"class.v8::internal::compiler::ObjectRef"* nonnull dereferenceable(16) %83) #10
  %85 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %78, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.9, i64 0, i64 0), i64 42) #10
  %86 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %78, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  %87 = bitcast %"class.v8::internal::StdoutStream"* %18 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %87, align 8
  %88 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %18, i64 0, i32 2
  %89 = bitcast %"class.std::__1::basic_ios.base"* %88 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %89, align 8
  %90 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %77, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %90) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %87, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %89, align 8
  %91 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %18, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %91) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %78, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %92 = bitcast %"class.std::__1::basic_ios.base"* %88 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %92) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %71) #10
  br label %1650

93:                                               ; preds = %63, %50
  %94 = phi i16 [ %66, %63 ], [ %57, %50 ]
  %95 = phi %"class.v8::internal::compiler::Operator"* [ %64, %63 ], [ %55, %50 ]
  %96 = icmp eq i16 %94, 820
  br i1 %96, label %97, label %130

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %99 = call zeroext i8 @_ZNK2v88internal8compiler21SharedFunctionInfoRef4kindEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* %98) #10
  %100 = add i8 %99, -3
  %101 = icmp ult i8 %100, 4
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  %103 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  br label %130

104:                                              ; preds = %97
  %105 = load i8, i8* @_ZN2v88internal25FLAG_trace_turbo_inliningE, align 1, !range !78
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %1650, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.v8::internal::StdoutStream"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %108) #10
  %109 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %19, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = bitcast %"class.v8::internal::StdoutStream"* %19 to %"class.v8::internal::OFStream"*
  %111 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %110, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %111) #10
  %112 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %19, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %112, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %109, align 8
  %113 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %114 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %19, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %113, %"class.v8::base::RecursiveMutex"** %114, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %113) #10
  %115 = bitcast %"class.v8::internal::StdoutStream"* %19 to %"class.std::__1::basic_ostream"*
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %115, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i64 13) #10
  %117 = getelementptr inbounds %"class.v8::internal::compiler::SharedFunctionInfoRef", %"class.v8::internal::compiler::SharedFunctionInfoRef"* %98, i64 0, i32 0, i32 0
  %118 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %115, %"class.v8::internal::compiler::ObjectRef"* dereferenceable(16) %117) #10
  %119 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %115, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #10
  %120 = bitcast <2 x i64>* %17 to %"class.v8::internal::compiler::ObjectRef"*
  %121 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %115, %"class.v8::internal::compiler::ObjectRef"* nonnull dereferenceable(16) %120) #10
  %122 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %115, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i64 39) #10
  %123 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %115, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  %124 = bitcast %"class.v8::internal::StdoutStream"* %19 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %19, i64 0, i32 2
  %126 = bitcast %"class.std::__1::basic_ios.base"* %125 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %126, align 8
  %127 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %114, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %127) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %124, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %19, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %128) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %115, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %129 = bitcast %"class.std::__1::basic_ios.base"* %125 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %129) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %108) #10
  br label %1650

130:                                              ; preds = %102, %93
  %131 = phi %"class.v8::internal::compiler::Operator"* [ %103, %102 ], [ %95, %93 ]
  %132 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %131) #10
  br i1 %132, label %134, label %133, !prof !2

133:                                              ; preds = %130
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.23, i64 0, i64 0)) #9
  unreachable

134:                                              ; preds = %130
  %135 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %136 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %135, i64 0, i32 5
  %137 = load i32, i32* %136, align 4
  %138 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %135) #10
  %139 = zext i1 %138 to i32
  %140 = add nsw i32 %137, %139
  %141 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %1, i64 0, i32 3
  %142 = load i32, i32* %141, align 4
  %143 = and i32 %142, 251658240
  %144 = icmp eq i32 %143, 251658240
  %145 = ptrtoint %"class.v8::internal::compiler::Node"* %1 to i64
  %146 = add i64 %145, 32
  br i1 %144, label %147, label %151

147:                                              ; preds = %134
  %148 = inttoptr i64 %146 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, 16
  br label %151

151:                                              ; preds = %134, %147
  %152 = phi i64 [ %150, %147 ], [ %146, %134 ]
  %153 = inttoptr i64 %152 to %"class.v8::internal::compiler::Node"**
  %154 = sext i32 %140 to i64
  %155 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %153, i64 %154
  %156 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %156, i64 0, i32 0
  %158 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %158, i64 0, i32 2
  %160 = load i16, i16* %159, align 8
  %161 = icmp eq i16 %160, 41
  br i1 %161, label %162, label %214

162:                                              ; preds = %151, %204
  %163 = phi %"class.v8::internal::compiler::Node"* [ %208, %204 ], [ %156, %151 ]
  %164 = phi i32 [ %193, %204 ], [ 0, %151 ]
  %165 = icmp eq i32 %164, 50
  br i1 %165, label %166, label %192

166:                                              ; preds = %162
  %167 = load i8, i8* @_ZN2v88internal25FLAG_trace_turbo_inliningE, align 1, !range !78
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %1650, label %169

169:                                              ; preds = %166
  %170 = bitcast %"class.v8::internal::StdoutStream"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %170) #10
  %171 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %20, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %171, align 8
  %172 = bitcast %"class.v8::internal::StdoutStream"* %20 to %"class.v8::internal::OFStream"*
  %173 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %172, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %173) #10
  %174 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %20, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %174, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %171, align 8
  %175 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %176 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %20, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %175, %"class.v8::base::RecursiveMutex"** %176, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %175) #10
  %177 = bitcast %"class.v8::internal::StdoutStream"* %20 to %"class.std::__1::basic_ostream"*
  %178 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %177, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i64 13) #10
  %179 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %180 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %177, %"class.v8::internal::compiler::ObjectRef"* dereferenceable(16) %179) #10
  %181 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %177, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #10
  %182 = bitcast <2 x i64>* %17 to %"class.v8::internal::compiler::ObjectRef"*
  %183 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %177, %"class.v8::internal::compiler::ObjectRef"* nonnull dereferenceable(16) %182) #10
  %184 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %177, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.11, i64 0, i64 0), i64 67) #10
  %185 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %177, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  %186 = bitcast %"class.v8::internal::StdoutStream"* %20 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %186, align 8
  %187 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %20, i64 0, i32 2
  %188 = bitcast %"class.std::__1::basic_ios.base"* %187 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %188, align 8
  %189 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %176, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %189) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %186, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %188, align 8
  %190 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %20, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %190) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %177, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %191 = bitcast %"class.std::__1::basic_ios.base"* %187 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %191) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %170) #10
  br label %1650

192:                                              ; preds = %162
  %193 = add nuw nsw i32 %164, 1
  %194 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %163, i64 0, i32 3
  %195 = load i32, i32* %194, align 4
  %196 = and i32 %195, 251658240
  %197 = icmp eq i32 %196, 251658240
  %198 = ptrtoint %"class.v8::internal::compiler::Node"* %163 to i64
  %199 = add i64 %198, 32
  br i1 %197, label %200, label %204

200:                                              ; preds = %192
  %201 = inttoptr i64 %199 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = add i64 %202, 16
  br label %204

204:                                              ; preds = %192, %200
  %205 = phi i64 [ %203, %200 ], [ %199, %192 ]
  %206 = inttoptr i64 %205 to %"class.v8::internal::compiler::Node"**
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %206, i64 5
  %208 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %207, align 8
  %209 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %208, i64 0, i32 0
  %210 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %209, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %210, i64 0, i32 2
  %212 = load i16, i16* %211, align 8
  %213 = icmp eq i16 %212, 41
  br i1 %213, label %162, label %214

214:                                              ; preds = %204, %151
  %215 = bitcast %"class.v8::internal::compiler::Node"** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #10
  store %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"** %21, align 8
  %216 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties17IsExceptionalCallEPNS1_4NodeEPS4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** nonnull %21) #10
  %217 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %218 = call zeroext i1 @_ZNK2v88internal8compiler21SharedFunctionInfoRef11is_compiledEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* %217) #10
  br i1 %218, label %220, label %219, !prof !2

219:                                              ; preds = %214
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0)) #9
  unreachable

220:                                              ; preds = %214
  %221 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %40, align 8
  %222 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %221, i64 0, i32 8
  %223 = load i8, i8* %222, align 1, !range !78
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %225, label %237

225:                                              ; preds = %220
  %226 = load %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::OptimizedCompilationInfo"** %42, align 8
  %227 = getelementptr inbounds %"class.v8::internal::OptimizedCompilationInfo", %"class.v8::internal::OptimizedCompilationInfo"* %226, i64 0, i32 0
  %228 = load i32, i32* %227, align 8
  %229 = and i32 %228, 16
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %237, label %231

231:                                              ; preds = %225
  %232 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %233 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %232, align 8
  %234 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %233, i64 0, i32 1
  %235 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %234, align 8
  %236 = call i64* @_ZNK2v88internal8compiler21SharedFunctionInfoRef6objectEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* %217) #10
  call void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %235, i64* %236) #10
  br label %237

237:                                              ; preds = %225, %220, %231
  %238 = bitcast %"class.v8::internal::compiler::Node"** %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %238) #10
  %239 = bitcast %"class.v8::internal::compiler::FeedbackCellRef"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %239) #10
  %240 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZN2v88internal8compiler9JSInliner20DetermineCallContextEPNS1_4NodeEPS4_(%"class.v8::internal::compiler::JSInliner"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** nonnull %22)
  %241 = getelementptr inbounds %"class.v8::internal::compiler::FeedbackCellRef", %"class.v8::internal::compiler::FeedbackCellRef"* %23, i64 0, i32 0, i32 0, i32 0
  %242 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %240, 0
  store %"class.v8::internal::compiler::ObjectData"* %242, %"class.v8::internal::compiler::ObjectData"** %241, align 8
  %243 = getelementptr inbounds %"class.v8::internal::compiler::FeedbackCellRef", %"class.v8::internal::compiler::FeedbackCellRef"* %23, i64 0, i32 0, i32 0, i32 1
  %244 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %240, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %244, %"class.v8::internal::compiler::JSHeapBroker"** %243, align 8
  %245 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %40, align 8
  %246 = getelementptr inbounds %"class.v8::base::Optional.1601", %"class.v8::base::Optional.1601"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #10
  call void @_ZNK2v88internal8compiler15FeedbackCellRef5valueEv(%"class.v8::base::Optional.1601"* nonnull sret %24, %"class.v8::internal::compiler::FeedbackCellRef"* nonnull %23) #10
  %247 = getelementptr inbounds %"class.v8::base::Optional.1601", %"class.v8::base::Optional.1601"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %248 = call zeroext i1 @_ZNK2v88internal8compiler12JSHeapBroker26IsSerializedForCompilationERKNS1_21SharedFunctionInfoRefERKNS1_17FeedbackVectorRefE(%"class.v8::internal::compiler::JSHeapBroker"* %245, %"class.v8::internal::compiler::SharedFunctionInfoRef"* dereferenceable(16) %217, %"class.v8::internal::compiler::FeedbackVectorRef"* dereferenceable(16) %247) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %246) #10
  %249 = load i8, i8* @_ZN2v88internal25FLAG_trace_turbo_inliningE, align 1, !range !78
  %250 = icmp ne i8 %249, 0
  br i1 %248, label %275, label %251

251:                                              ; preds = %237
  br i1 %250, label %252, label %1648

252:                                              ; preds = %251
  %253 = bitcast %"class.v8::internal::StdoutStream"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %253) #10
  %254 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %25, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %254, align 8
  %255 = bitcast %"class.v8::internal::StdoutStream"* %25 to %"class.v8::internal::OFStream"*
  %256 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %255, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %256) #10
  %257 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %25, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %257, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %254, align 8
  %258 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %259 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %25, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %258, %"class.v8::base::RecursiveMutex"** %259, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %258) #10
  %260 = bitcast %"class.v8::internal::StdoutStream"* %25 to %"class.std::__1::basic_ostream"*
  %261 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %260, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i64 13) #10
  %262 = getelementptr inbounds %"class.v8::internal::compiler::SharedFunctionInfoRef", %"class.v8::internal::compiler::SharedFunctionInfoRef"* %217, i64 0, i32 0, i32 0
  %263 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %260, %"class.v8::internal::compiler::ObjectRef"* dereferenceable(16) %262) #10
  %264 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %260, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #10
  %265 = bitcast <2 x i64>* %17 to %"class.v8::internal::compiler::ObjectRef"*
  %266 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %260, %"class.v8::internal::compiler::ObjectRef"* nonnull dereferenceable(16) %265) #10
  %267 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %260, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.13, i64 0, i64 0), i64 46) #10
  %268 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %260, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  %269 = bitcast %"class.v8::internal::StdoutStream"* %25 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %269, align 8
  %270 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %25, i64 0, i32 2
  %271 = bitcast %"class.std::__1::basic_ios.base"* %270 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %271, align 8
  %272 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %259, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %272) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %269, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %271, align 8
  %273 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %25, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %273) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %260, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %274 = bitcast %"class.std::__1::basic_ios.base"* %270 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %274) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %253) #10
  br label %1648

275:                                              ; preds = %237
  br i1 %250, label %276, label %303

276:                                              ; preds = %275
  %277 = bitcast %"class.v8::internal::StdoutStream"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %277) #10
  %278 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %26, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %278, align 8
  %279 = bitcast %"class.v8::internal::StdoutStream"* %26 to %"class.v8::internal::OFStream"*
  %280 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %279, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %280) #10
  %281 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %26, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %281, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %278, align 8
  %282 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %283 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %26, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %282, %"class.v8::base::RecursiveMutex"** %283, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %282) #10
  %284 = bitcast %"class.v8::internal::StdoutStream"* %26 to %"class.std::__1::basic_ostream"*
  %285 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %284, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9) #10
  %286 = getelementptr inbounds %"class.v8::internal::compiler::SharedFunctionInfoRef", %"class.v8::internal::compiler::SharedFunctionInfoRef"* %217, i64 0, i32 0, i32 0
  %287 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %284, %"class.v8::internal::compiler::ObjectRef"* dereferenceable(16) %286) #10
  %288 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %284, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #10
  %289 = bitcast <2 x i64>* %17 to %"class.v8::internal::compiler::ObjectRef"*
  %290 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %284, %"class.v8::internal::compiler::ObjectRef"* nonnull dereferenceable(16) %289) #10
  %291 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %21, align 8
  %292 = icmp eq %"class.v8::internal::compiler::Node"* %291, null
  %293 = select i1 %292, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.15, i64 0, i64 0)
  %294 = select i1 %292, i64 0, i64 19
  %295 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %284, i8* %293, i64 %294) #10
  %296 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %284, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #10
  %297 = bitcast %"class.v8::internal::StdoutStream"* %26 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %297, align 8
  %298 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %26, i64 0, i32 2
  %299 = bitcast %"class.std::__1::basic_ios.base"* %298 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %299, align 8
  %300 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %283, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %300) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %297, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %299, align 8
  %301 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %26, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %301) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %284, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %302 = bitcast %"class.std::__1::basic_ios.base"* %298 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %302) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %277) #10
  br label %303

303:                                              ; preds = %276, %275
  %304 = bitcast %"class.v8::internal::compiler::BytecodeArrayRef"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %304) #10
  %305 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler21SharedFunctionInfoRef16GetBytecodeArrayEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* %217) #10
  %306 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeArrayRef", %"class.v8::internal::compiler::BytecodeArrayRef"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %307 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %305, 0
  store %"class.v8::internal::compiler::ObjectData"* %307, %"class.v8::internal::compiler::ObjectData"** %306, align 8
  %308 = getelementptr inbounds %"class.v8::internal::compiler::BytecodeArrayRef", %"class.v8::internal::compiler::BytecodeArrayRef"* %27, i64 0, i32 0, i32 0, i32 0, i32 1
  %309 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %305, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %309, %"class.v8::internal::compiler::JSHeapBroker"** %308, align 8
  %310 = load %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::OptimizedCompilationInfo"** %42, align 8
  %311 = call i64* @_ZNK2v88internal8compiler21SharedFunctionInfoRef6objectEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* %217) #10
  %312 = call i64* @_ZNK2v88internal8compiler16BytecodeArrayRef6objectEv(%"class.v8::internal::compiler::BytecodeArrayRef"* nonnull %27) #10
  %313 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 5
  %314 = load %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::SourcePositionTable"** %313, align 8
  %315 = call i64 @_ZNK2v88internal8compiler19SourcePositionTable17GetSourcePositionEPNS1_4NodeE(%"class.v8::internal::compiler::SourcePositionTable"* %314, %"class.v8::internal::compiler::Node"* %1) #10
  %316 = call i32 @_ZN2v88internal24OptimizedCompilationInfo18AddInlinedFunctionENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_13BytecodeArrayEEENS0_14SourcePositionE(%"class.v8::internal::OptimizedCompilationInfo"* %310, i64* %311, i64* %312, i64 %315) #10
  %317 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %318 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %319 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %319, align 8
  %321 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %320, i64 0, i32 1
  %322 = bitcast %"class.v8::internal::compiler::Node"** %321 to <2 x i64>*
  %323 = load <2 x i64>, <2 x i64>* %322, align 8
  %324 = load %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::OptimizedCompilationInfo"** %42, align 8
  %325 = getelementptr inbounds %"class.v8::internal::OptimizedCompilationInfo", %"class.v8::internal::OptimizedCompilationInfo"* %324, i64 0, i32 0
  %326 = load i32, i32* %325, align 8
  %327 = and i32 %326, 4096
  %328 = icmp eq i32 %327, 0
  %329 = select i1 %328, i32 1, i32 3
  %330 = lshr i32 %326, 3
  %331 = and i32 %330, 4
  %332 = or i32 %329, %331
  %333 = bitcast %"class.v8::internal::compiler::CallFrequency"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %333) #10
  %334 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %335 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %334, i64 0, i32 2
  %336 = load i16, i16* %335, align 8
  %337 = icmp eq i16 %336, 820
  br i1 %337, label %338, label %341

338:                                              ; preds = %303
  %339 = call dereferenceable(24) %"class.v8::internal::compiler::CallParameters"* @_ZN2v88internal8compiler16CallParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %334) #10
  %340 = getelementptr inbounds %"class.v8::internal::compiler::CallParameters", %"class.v8::internal::compiler::CallParameters"* %339, i64 0, i32 1
  br label %344

341:                                              ; preds = %303
  %342 = call dereferenceable(24) %"class.v8::internal::compiler::ConstructParameters"* @_ZN2v88internal8compiler21ConstructParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %334) #10
  %343 = getelementptr inbounds %"class.v8::internal::compiler::ConstructParameters", %"class.v8::internal::compiler::ConstructParameters"* %342, i64 0, i32 1
  br label %344

344:                                              ; preds = %338, %341
  %345 = phi %"class.v8::internal::compiler::CallFrequency"* [ %340, %338 ], [ %343, %341 ]
  %346 = bitcast %"class.v8::internal::compiler::CallFrequency"* %345 to i32*
  %347 = bitcast %"class.v8::internal::compiler::CallFrequency"* %28 to i32*
  %348 = load i32, i32* %346, align 4
  store i32 %348, i32* %347, align 4
  %349 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %40, align 8
  %350 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 1
  %351 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %350, align 8
  %352 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %353 = load %"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::SourcePositionTable"** %313, align 8
  %354 = load %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::OptimizedCompilationInfo"** %42, align 8
  %355 = getelementptr inbounds %"class.v8::internal::OptimizedCompilationInfo", %"class.v8::internal::OptimizedCompilationInfo"* %354, i64 0, i32 2
  %356 = load i32, i32* %355, align 8
  %357 = getelementptr inbounds %"class.v8::internal::OptimizedCompilationInfo", %"class.v8::internal::OptimizedCompilationInfo"* %354, i64 0, i32 20
  %358 = bitcast %"struct.v8::internal::compiler::ObserveNodeInfo"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %358) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %358, i8 0, i64 16, i1 false) #10
  call void @_ZN2v88internal8compiler22BuildGraphFromBytecodeEPNS1_12JSHeapBrokerEPNS0_4ZoneERKNS1_21SharedFunctionInfoRefERKNS1_15FeedbackCellRefENS0_14BytecodeOffsetEPNS1_7JSGraphERKNS1_13CallFrequencyEPNS1_19SourcePositionTableEiNS0_8CodeKindENS_4base5FlagsINS1_24BytecodeGraphBuilderFlagEiEEPNS0_11TickCounterERKNS1_15ObserveNodeInfoE(%"class.v8::internal::compiler::JSHeapBroker"* %349, %"class.v8::internal::Zone"* %351, %"class.v8::internal::compiler::SharedFunctionInfoRef"* dereferenceable(16) %217, %"class.v8::internal::compiler::FeedbackCellRef"* nonnull dereferenceable(16) %23, i32 -1, %"class.v8::internal::compiler::JSGraph"* %352, %"class.v8::internal::compiler::CallFrequency"* nonnull dereferenceable(4) %28, %"class.v8::internal::compiler::SourcePositionTable"* %353, i32 %316, i32 %356, i32 %332, %"class.v8::internal::TickCounter"* %357, %"struct.v8::internal::compiler::ObserveNodeInfo"* nonnull dereferenceable(16) %29) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %358) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %333) #10
  %359 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %360 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %359, i64 0, i32 0, i32 0
  %361 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %360, align 8
  %362 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %361, i64 0, i32 1
  %363 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %362, align 8
  %364 = getelementptr inbounds %"class.v8::internal::compiler::Graph", %"class.v8::internal::compiler::Graph"* %361, i64 0, i32 2
  %365 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %364, align 8
  %366 = bitcast %"class.v8::internal::compiler::Node"** %321 to <2 x i64>*
  store <2 x i64> %323, <2 x i64>* %366, align 8
  %367 = bitcast %"class.v8::internal::ZoneVector.1400"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %367) #10
  %368 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %350, align 8
  %369 = ptrtoint %"class.v8::internal::Zone"* %368 to i64
  %370 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 2, i32 1
  %371 = bitcast %"struct.std::__1::__compressed_pair_elem.1405"* %370 to i64*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %367, i8 0, i64 24, i1 false) #10
  store i64 %369, i64* %371, align 8
  %372 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %21, align 8
  %373 = icmp eq %"class.v8::internal::compiler::Node"* %372, null
  br i1 %373, label %646, label %374

374:                                              ; preds = %344
  %375 = bitcast %"class.v8::internal::compiler::AllNodes"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %375) #10
  %376 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %377 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %376, i64 0, i32 0, i32 0
  %378 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %377, align 8
  call void @_ZN2v88internal8compiler8AllNodesC1EPNS0_4ZoneEPNS1_4NodeEPKNS1_5GraphEb(%"class.v8::internal::compiler::AllNodes"* nonnull %31, %"class.v8::internal::Zone"* %368, %"class.v8::internal::compiler::Node"* %365, %"class.v8::internal::compiler::Graph"* %378, i1 zeroext true) #10
  %379 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %380 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %379, align 8
  %381 = getelementptr inbounds %"class.v8::internal::compiler::AllNodes", %"class.v8::internal::compiler::AllNodes"* %31, i64 0, i32 0, i32 0, i32 0, i32 1
  %382 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %381, align 8
  %383 = icmp eq %"class.v8::internal::compiler::Node"** %380, %382
  br i1 %383, label %394, label %384

384:                                              ; preds = %374
  %385 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 1
  %386 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %387 = bitcast %"class.v8::internal::compiler::Node"*** %385 to i64*
  %388 = bitcast %"class.v8::internal::ZoneVector.1400"* %30 to i64*
  %389 = bitcast %"class.v8::internal::compiler::Node"*** %386 to i64*
  %390 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %391 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 0
  br label %401

392:                                              ; preds = %643
  %393 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %379, align 8
  br label %394

394:                                              ; preds = %392, %374
  %395 = phi %"class.v8::internal::compiler::Node"** [ %393, %392 ], [ %380, %374 ]
  %396 = icmp eq %"class.v8::internal::compiler::Node"** %395, null
  br i1 %396, label %400, label %397

397:                                              ; preds = %394
  %398 = ptrtoint %"class.v8::internal::compiler::Node"** %395 to i64
  %399 = bitcast %"class.v8::internal::compiler::Node"*** %381 to i64*
  store i64 %398, i64* %399, align 8
  br label %400

400:                                              ; preds = %394, %397
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %375) #10
  br label %646

401:                                              ; preds = %384, %643
  %402 = phi %"class.v8::internal::compiler::Node"** [ %380, %384 ], [ %644, %643 ]
  %403 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %402, align 8
  %404 = ptrtoint %"class.v8::internal::compiler::Node"* %403 to i64
  %405 = getelementptr inbounds %"class.v8::internal::compiler::Node", %"class.v8::internal::compiler::Node"* %403, i64 0, i32 0
  %406 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %405, align 8
  %407 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %406, i64 0, i32 3, i32 0
  %408 = load i8, i8* %407, align 2
  %409 = and i8 %408, 32
  %410 = icmp eq i8 %409, 0
  br i1 %410, label %411, label %643

411:                                              ; preds = %401
  %412 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties17IsExceptionalCallEPNS1_4NodeEPS4_(%"class.v8::internal::compiler::Node"* %403, %"class.v8::internal::compiler::Node"** null) #10
  br i1 %412, label %643, label %413

413:                                              ; preds = %411
  %414 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %385, align 8
  %415 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %386, align 8
  %416 = icmp eq %"class.v8::internal::compiler::Node"** %414, %415
  %417 = ptrtoint %"class.v8::internal::compiler::Node"** %415 to i64
  br i1 %416, label %422, label %418

418:                                              ; preds = %413
  %419 = bitcast %"class.v8::internal::compiler::Node"** %414 to i64*
  store i64 %404, i64* %419, align 8
  %420 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %414, i64 1
  %421 = ptrtoint %"class.v8::internal::compiler::Node"** %420 to i64
  store i64 %421, i64* %387, align 8
  br label %643

422:                                              ; preds = %413
  %423 = ptrtoint %"class.v8::internal::compiler::Node"** %414 to i64
  %424 = load i64, i64* %388, align 8
  %425 = sub i64 %423, %424
  %426 = ashr exact i64 %425, 3
  %427 = add nsw i64 %426, 1
  %428 = icmp ugt i64 %427, 268435455
  br i1 %428, label %429, label %431

429:                                              ; preds = %422
  %430 = bitcast %"class.v8::internal::ZoneVector.1400"* %30 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %430) #9
  unreachable

431:                                              ; preds = %422
  %432 = sub i64 %417, %424
  %433 = ashr exact i64 %432, 3
  %434 = icmp ult i64 %433, 134217727
  br i1 %434, label %435, label %440

435:                                              ; preds = %431
  %436 = ashr exact i64 %432, 2
  %437 = icmp ult i64 %436, %427
  %438 = select i1 %437, i64 %427, i64 %436
  %439 = icmp eq i64 %438, 0
  br i1 %439, label %457, label %440

440:                                              ; preds = %435, %431
  %441 = phi i64 [ %438, %435 ], [ 268435455, %431 ]
  %442 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %390, align 8
  %443 = shl i64 %441, 3
  %444 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %442, i64 0, i32 2
  %445 = load i64, i64* %444, align 8
  %446 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %442, i64 0, i32 3
  %447 = load i64, i64* %446, align 8
  %448 = sub i64 %447, %445
  %449 = icmp ugt i64 %443, %448
  br i1 %449, label %450, label %452, !prof !3

450:                                              ; preds = %440
  %451 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %442, i64 %443) #10
  br label %454

452:                                              ; preds = %440
  %453 = add i64 %445, %443
  store i64 %453, i64* %444, align 8
  br label %454

454:                                              ; preds = %452, %450
  %455 = phi i64 [ %451, %450 ], [ %445, %452 ]
  %456 = inttoptr i64 %455 to %"class.v8::internal::compiler::Node"**
  br label %457

457:                                              ; preds = %454, %435
  %458 = phi i64 [ %441, %454 ], [ 0, %435 ]
  %459 = phi %"class.v8::internal::compiler::Node"** [ %456, %454 ], [ null, %435 ]
  %460 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 %426
  %461 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 %458
  %462 = ptrtoint %"class.v8::internal::compiler::Node"** %461 to i64
  %463 = bitcast %"class.v8::internal::compiler::Node"** %460 to i64*
  store i64 %404, i64* %463, align 8
  %464 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %460, i64 1
  %465 = ptrtoint %"class.v8::internal::compiler::Node"** %464 to i64
  %466 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %391, align 8
  %467 = ptrtoint %"class.v8::internal::compiler::Node"** %466 to i64
  %468 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %385, align 8
  %469 = icmp eq %"class.v8::internal::compiler::Node"** %468, %466
  br i1 %469, label %640, label %470

470:                                              ; preds = %457
  %471 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %468, i64 -1
  %472 = ptrtoint %"class.v8::internal::compiler::Node"** %471 to i64
  %473 = sub i64 %472, %467
  %474 = lshr i64 %473, 3
  %475 = add nuw nsw i64 %474, 1
  %476 = icmp ult i64 %475, 4
  br i1 %476, label %570, label %477

477:                                              ; preds = %470
  %478 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %459, i64 -1
  %479 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %468, i64 -1
  %480 = ptrtoint %"class.v8::internal::compiler::Node"** %479 to i64
  %481 = sub i64 %480, %467
  %482 = lshr i64 %481, 3
  %483 = sub nsw i64 %426, %482
  %484 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %478, i64 %483
  %485 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %468, i64 -1
  %486 = sub nsw i64 0, %482
  %487 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %485, i64 %486
  %488 = icmp ult %"class.v8::internal::compiler::Node"** %484, %468
  %489 = icmp ult %"class.v8::internal::compiler::Node"** %487, %460
  %490 = and i1 %488, %489
  br i1 %490, label %570, label %491

491:                                              ; preds = %477
  %492 = and i64 %475, 4611686018427387900
  %493 = sub nsw i64 0, %492
  %494 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %460, i64 %493
  %495 = sub nsw i64 0, %492
  %496 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %468, i64 %495
  %497 = add nsw i64 %492, -4
  %498 = lshr exact i64 %497, 2
  %499 = add nuw nsw i64 %498, 1
  %500 = and i64 %499, 1
  %501 = icmp eq i64 %497, 0
  br i1 %501, label %546, label %502

502:                                              ; preds = %491
  %503 = sub nuw nsw i64 %499, %500
  %504 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %460, i64 -1
  %505 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %468, i64 -1
  %506 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %460, i64 -1
  %507 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %468, i64 -1
  br label %508

508:                                              ; preds = %508, %502
  %509 = phi i64 [ 0, %502 ], [ %543, %508 ]
  %510 = phi i64 [ %503, %502 ], [ %544, %508 ]
  %511 = sub i64 0, %509
  %512 = sub i64 0, %509
  %513 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %504, i64 %511
  %514 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %505, i64 %512
  %515 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %514, i64 -1
  %516 = bitcast %"class.v8::internal::compiler::Node"** %515 to <2 x i64>*
  %517 = load <2 x i64>, <2 x i64>* %516, align 8, !alias.scope !87
  %518 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %514, i64 -2
  %519 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %518, i64 -1
  %520 = bitcast %"class.v8::internal::compiler::Node"** %519 to <2 x i64>*
  %521 = load <2 x i64>, <2 x i64>* %520, align 8, !alias.scope !87
  %522 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %513, i64 -1
  %523 = bitcast %"class.v8::internal::compiler::Node"** %522 to <2 x i64>*
  store <2 x i64> %517, <2 x i64>* %523, align 8, !alias.scope !90, !noalias !87
  %524 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %513, i64 -2
  %525 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %524, i64 -1
  %526 = bitcast %"class.v8::internal::compiler::Node"** %525 to <2 x i64>*
  store <2 x i64> %521, <2 x i64>* %526, align 8, !alias.scope !90, !noalias !87
  %527 = sub nuw nsw i64 -4, %509
  %528 = sub nuw nsw i64 -4, %509
  %529 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %506, i64 %527
  %530 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %507, i64 %528
  %531 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %530, i64 -1
  %532 = bitcast %"class.v8::internal::compiler::Node"** %531 to <2 x i64>*
  %533 = load <2 x i64>, <2 x i64>* %532, align 8, !alias.scope !87
  %534 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %530, i64 -2
  %535 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %534, i64 -1
  %536 = bitcast %"class.v8::internal::compiler::Node"** %535 to <2 x i64>*
  %537 = load <2 x i64>, <2 x i64>* %536, align 8, !alias.scope !87
  %538 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %529, i64 -1
  %539 = bitcast %"class.v8::internal::compiler::Node"** %538 to <2 x i64>*
  store <2 x i64> %533, <2 x i64>* %539, align 8, !alias.scope !90, !noalias !87
  %540 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %529, i64 -2
  %541 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %540, i64 -1
  %542 = bitcast %"class.v8::internal::compiler::Node"** %541 to <2 x i64>*
  store <2 x i64> %537, <2 x i64>* %542, align 8, !alias.scope !90, !noalias !87
  %543 = add i64 %509, 8
  %544 = add i64 %510, -2
  %545 = icmp eq i64 %544, 0
  br i1 %545, label %546, label %508, !llvm.loop !92

546:                                              ; preds = %508, %491
  %547 = phi i64 [ 0, %491 ], [ %543, %508 ]
  %548 = icmp eq i64 %500, 0
  br i1 %548, label %568, label %549

549:                                              ; preds = %546
  %550 = sub i64 0, %547
  %551 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %460, i64 -1
  %552 = sub i64 0, %547
  %553 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %468, i64 -1
  %554 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %551, i64 %550
  %555 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %553, i64 %552
  %556 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %555, i64 -1
  %557 = bitcast %"class.v8::internal::compiler::Node"** %556 to <2 x i64>*
  %558 = load <2 x i64>, <2 x i64>* %557, align 8, !alias.scope !87
  %559 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %555, i64 -2
  %560 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %559, i64 -1
  %561 = bitcast %"class.v8::internal::compiler::Node"** %560 to <2 x i64>*
  %562 = load <2 x i64>, <2 x i64>* %561, align 8, !alias.scope !87
  %563 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %554, i64 -1
  %564 = bitcast %"class.v8::internal::compiler::Node"** %563 to <2 x i64>*
  store <2 x i64> %558, <2 x i64>* %564, align 8, !alias.scope !90, !noalias !87
  %565 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %554, i64 -2
  %566 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %565, i64 -1
  %567 = bitcast %"class.v8::internal::compiler::Node"** %566 to <2 x i64>*
  store <2 x i64> %562, <2 x i64>* %567, align 8, !alias.scope !90, !noalias !87
  br label %568

568:                                              ; preds = %546, %549
  %569 = icmp eq i64 %475, %492
  br i1 %569, label %640, label %570

570:                                              ; preds = %568, %477, %470
  %571 = phi %"class.v8::internal::compiler::Node"** [ %460, %477 ], [ %460, %470 ], [ %494, %568 ]
  %572 = phi %"class.v8::internal::compiler::Node"** [ %468, %477 ], [ %468, %470 ], [ %496, %568 ]
  %573 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %572, i64 -1
  %574 = ptrtoint %"class.v8::internal::compiler::Node"** %573 to i64
  %575 = sub i64 %574, %467
  %576 = lshr i64 %575, 3
  %577 = add nuw nsw i64 %576, 1
  %578 = and i64 %577, 7
  %579 = icmp eq i64 %578, 0
  br i1 %579, label %591, label %580

580:                                              ; preds = %570, %580
  %581 = phi %"class.v8::internal::compiler::Node"** [ %584, %580 ], [ %571, %570 ]
  %582 = phi %"class.v8::internal::compiler::Node"** [ %585, %580 ], [ %572, %570 ]
  %583 = phi i64 [ %589, %580 ], [ %578, %570 ]
  %584 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %581, i64 -1
  %585 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %582, i64 -1
  %586 = bitcast %"class.v8::internal::compiler::Node"** %585 to i64*
  %587 = load i64, i64* %586, align 8
  %588 = bitcast %"class.v8::internal::compiler::Node"** %584 to i64*
  store i64 %587, i64* %588, align 8
  %589 = add i64 %583, -1
  %590 = icmp eq i64 %589, 0
  br i1 %590, label %591, label %580, !llvm.loop !93

591:                                              ; preds = %580, %570
  %592 = phi %"class.v8::internal::compiler::Node"** [ undef, %570 ], [ %584, %580 ]
  %593 = phi %"class.v8::internal::compiler::Node"** [ %571, %570 ], [ %584, %580 ]
  %594 = phi %"class.v8::internal::compiler::Node"** [ %572, %570 ], [ %585, %580 ]
  %595 = icmp ult i64 %575, 56
  br i1 %595, label %640, label %596

596:                                              ; preds = %591, %596
  %597 = phi %"class.v8::internal::compiler::Node"** [ %634, %596 ], [ %593, %591 ]
  %598 = phi %"class.v8::internal::compiler::Node"** [ %635, %596 ], [ %594, %591 ]
  %599 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %597, i64 -1
  %600 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %598, i64 -1
  %601 = bitcast %"class.v8::internal::compiler::Node"** %600 to i64*
  %602 = load i64, i64* %601, align 8
  %603 = bitcast %"class.v8::internal::compiler::Node"** %599 to i64*
  store i64 %602, i64* %603, align 8
  %604 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %597, i64 -2
  %605 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %598, i64 -2
  %606 = bitcast %"class.v8::internal::compiler::Node"** %605 to i64*
  %607 = load i64, i64* %606, align 8
  %608 = bitcast %"class.v8::internal::compiler::Node"** %604 to i64*
  store i64 %607, i64* %608, align 8
  %609 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %597, i64 -3
  %610 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %598, i64 -3
  %611 = bitcast %"class.v8::internal::compiler::Node"** %610 to i64*
  %612 = load i64, i64* %611, align 8
  %613 = bitcast %"class.v8::internal::compiler::Node"** %609 to i64*
  store i64 %612, i64* %613, align 8
  %614 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %597, i64 -4
  %615 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %598, i64 -4
  %616 = bitcast %"class.v8::internal::compiler::Node"** %615 to i64*
  %617 = load i64, i64* %616, align 8
  %618 = bitcast %"class.v8::internal::compiler::Node"** %614 to i64*
  store i64 %617, i64* %618, align 8
  %619 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %597, i64 -5
  %620 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %598, i64 -5
  %621 = bitcast %"class.v8::internal::compiler::Node"** %620 to i64*
  %622 = load i64, i64* %621, align 8
  %623 = bitcast %"class.v8::internal::compiler::Node"** %619 to i64*
  store i64 %622, i64* %623, align 8
  %624 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %597, i64 -6
  %625 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %598, i64 -6
  %626 = bitcast %"class.v8::internal::compiler::Node"** %625 to i64*
  %627 = load i64, i64* %626, align 8
  %628 = bitcast %"class.v8::internal::compiler::Node"** %624 to i64*
  store i64 %627, i64* %628, align 8
  %629 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %597, i64 -7
  %630 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %598, i64 -7
  %631 = bitcast %"class.v8::internal::compiler::Node"** %630 to i64*
  %632 = load i64, i64* %631, align 8
  %633 = bitcast %"class.v8::internal::compiler::Node"** %629 to i64*
  store i64 %632, i64* %633, align 8
  %634 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %597, i64 -8
  %635 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %598, i64 -8
  %636 = bitcast %"class.v8::internal::compiler::Node"** %635 to i64*
  %637 = load i64, i64* %636, align 8
  %638 = bitcast %"class.v8::internal::compiler::Node"** %634 to i64*
  store i64 %637, i64* %638, align 8
  %639 = icmp eq %"class.v8::internal::compiler::Node"** %635, %466
  br i1 %639, label %640, label %596, !llvm.loop !94

640:                                              ; preds = %591, %596, %568, %457
  %641 = phi %"class.v8::internal::compiler::Node"** [ %460, %457 ], [ %494, %568 ], [ %592, %591 ], [ %634, %596 ]
  %642 = ptrtoint %"class.v8::internal::compiler::Node"** %641 to i64
  store i64 %642, i64* %388, align 8
  store i64 %465, i64* %387, align 8
  store i64 %462, i64* %389, align 8
  br label %643

643:                                              ; preds = %401, %640, %418, %411
  %644 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %402, i64 1
  %645 = icmp eq %"class.v8::internal::compiler::Node"** %644, %382
  br i1 %645, label %392, label %401

646:                                              ; preds = %344, %400
  %647 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %648 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %647) #10
  br i1 %648, label %650, label %649, !prof !2

649:                                              ; preds = %646
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.23, i64 0, i64 0)) #9
  unreachable

650:                                              ; preds = %646
  %651 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %652 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %651, i64 0, i32 5
  %653 = load i32, i32* %652, align 4
  %654 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %651) #10
  %655 = zext i1 %654 to i32
  %656 = add nsw i32 %653, %655
  %657 = load i32, i32* %141, align 4
  %658 = and i32 %657, 251658240
  %659 = icmp eq i32 %658, 251658240
  br i1 %659, label %660, label %664

660:                                              ; preds = %650
  %661 = inttoptr i64 %146 to i64*
  %662 = load i64, i64* %661, align 8
  %663 = add i64 %662, 16
  br label %664

664:                                              ; preds = %650, %660
  %665 = phi i64 [ %663, %660 ], [ %146, %650 ]
  %666 = inttoptr i64 %665 to %"class.v8::internal::compiler::Node"**
  %667 = sext i32 %656 to i64
  %668 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %666, i64 %667
  %669 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %668, align 8
  %670 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %671 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph17UndefinedConstantEv(%"class.v8::internal::compiler::JSGraph"* %670) #10
  %672 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %673 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %672, i64 0, i32 2
  %674 = load i16, i16* %673, align 8
  %675 = icmp eq i16 %674, 826
  br i1 %675, label %676, label %1470

676:                                              ; preds = %664
  %677 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %672, i64 0, i32 5
  %678 = load i32, i32* %677, align 4
  %679 = icmp sgt i32 %678, 1
  br i1 %679, label %681, label %680, !prof !2

680:                                              ; preds = %676
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0)) #9
  unreachable

681:                                              ; preds = %676
  %682 = load i32, i32* %141, align 4
  %683 = and i32 %682, 251658240
  %684 = icmp eq i32 %683, 251658240
  br i1 %684, label %685, label %689

685:                                              ; preds = %681
  %686 = inttoptr i64 %146 to i64*
  %687 = load i64, i64* %686, align 8
  %688 = add i64 %687, 16
  br label %689

689:                                              ; preds = %681, %685
  %690 = phi i64 [ %688, %685 ], [ %146, %681 ]
  %691 = inttoptr i64 %690 to %"class.v8::internal::compiler::Node"**
  %692 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %691, i64 1
  %693 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %692, align 8
  %694 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %695 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph15TheHoleConstantEv(%"class.v8::internal::compiler::JSGraph"* %694) #10
  %696 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %697 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %696) #10
  br i1 %697, label %699, label %698, !prof !2

698:                                              ; preds = %689
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.22, i64 0, i64 0)) #9
  unreachable

699:                                              ; preds = %689
  %700 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %701 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %700, i64 0, i32 5
  %702 = load i32, i32* %701, align 4
  %703 = load i32, i32* %141, align 4
  %704 = and i32 %703, 251658240
  %705 = icmp eq i32 %704, 251658240
  br i1 %705, label %706, label %710

706:                                              ; preds = %699
  %707 = inttoptr i64 %146 to i64*
  %708 = load i64, i64* %707, align 8
  %709 = add i64 %708, 16
  br label %710

710:                                              ; preds = %699, %706
  %711 = phi i64 [ %709, %706 ], [ %146, %699 ]
  %712 = inttoptr i64 %711 to %"class.v8::internal::compiler::Node"**
  %713 = sext i32 %702 to i64
  %714 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %712, i64 %713
  %715 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %714, align 8
  %716 = bitcast %"class.v8::internal::compiler::SharedFunctionInfoRef"* %217 to <2 x i64>*
  %717 = load <2 x i64>, <2 x i64>* %716, align 8
  %718 = bitcast <2 x i64>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %718)
  store <2 x i64> %717, <2 x i64>* %12, align 16
  %719 = call zeroext i1 @_ZNK2v88internal8compiler21SharedFunctionInfoRef20construct_as_builtinEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* nonnull %13) #10
  br i1 %719, label %720, label %721

720:                                              ; preds = %710
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %718)
  br label %1092

721:                                              ; preds = %710
  %722 = call zeroext i8 @_ZNK2v88internal8compiler21SharedFunctionInfoRef4kindEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* nonnull %13) #10
  %723 = add i8 %722, -5
  %724 = icmp ugt i8 %723, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %718)
  br i1 %724, label %725, label %1092

725:                                              ; preds = %721
  %726 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %727 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %726, i64 0, i32 6
  %728 = load i32, i32* %727, align 8
  %729 = icmp sgt i32 %728, 0
  br i1 %729, label %731, label %730, !prof !2

730:                                              ; preds = %725
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0)) #9
  unreachable

731:                                              ; preds = %725
  %732 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %726, i64 0, i32 5
  %733 = load i32, i32* %732, align 4
  %734 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %726) #10
  %735 = zext i1 %734 to i32
  %736 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %737 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %736) #10
  %738 = zext i1 %737 to i32
  %739 = add i32 %733, %735
  %740 = add i32 %739, %738
  %741 = load i32, i32* %141, align 4
  %742 = and i32 %741, 251658240
  %743 = icmp eq i32 %742, 251658240
  br i1 %743, label %744, label %748

744:                                              ; preds = %731
  %745 = inttoptr i64 %146 to i64*
  %746 = load i64, i64* %745, align 8
  %747 = add i64 %746, 16
  br label %748

748:                                              ; preds = %731, %744
  %749 = phi i64 [ %747, %744 ], [ %146, %731 ]
  %750 = inttoptr i64 %749 to %"class.v8::internal::compiler::Node"**
  %751 = sext i32 %740 to i64
  %752 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %750, i64 %751
  %753 = bitcast %"class.v8::internal::compiler::Node"** %752 to i64*
  %754 = load i64, i64* %753, align 8
  %755 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %756 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %755, i64 0, i32 7
  %757 = load i32, i32* %756, align 4
  %758 = icmp sgt i32 %757, 0
  br i1 %758, label %760, label %759, !prof !2

759:                                              ; preds = %748
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0)) #9
  unreachable

760:                                              ; preds = %748
  %761 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %755, i64 0, i32 5
  %762 = load i32, i32* %761, align 4
  %763 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %755) #10
  %764 = zext i1 %763 to i32
  %765 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %766 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %765) #10
  %767 = zext i1 %766 to i32
  %768 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %769 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %768, i64 0, i32 6
  %770 = load i32, i32* %769, align 8
  %771 = add i32 %762, %764
  %772 = add i32 %771, %767
  %773 = add i32 %772, %770
  %774 = load i32, i32* %141, align 4
  %775 = and i32 %774, 251658240
  %776 = icmp eq i32 %775, 251658240
  br i1 %776, label %777, label %781

777:                                              ; preds = %760
  %778 = inttoptr i64 %146 to i64*
  %779 = load i64, i64* %778, align 8
  %780 = add i64 %779, 16
  br label %781

781:                                              ; preds = %760, %777
  %782 = phi i64 [ %780, %777 ], [ %146, %760 ]
  %783 = inttoptr i64 %782 to %"class.v8::internal::compiler::Node"**
  %784 = sext i32 %773 to i64
  %785 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %783, i64 %784
  %786 = bitcast %"class.v8::internal::compiler::Node"** %785 to i64*
  %787 = load i64, i64* %786, align 8
  %788 = call dereferenceable(24) %"class.v8::internal::compiler::ConstructParameters"* @_ZN2v88internal8compiler21ConstructParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %768) #10
  %789 = getelementptr inbounds %"class.v8::internal::compiler::ConstructParameters", %"class.v8::internal::compiler::ConstructParameters"* %788, i64 0, i32 0
  %790 = load i32, i32* %789, align 8
  %791 = add i32 %790, -3
  %792 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler9JSInliner26CreateArtificialFrameStateEPNS1_4NodeENS1_10FrameStateEiNS0_14BytecodeOffsetENS1_14FrameStateTypeENS1_21SharedFunctionInfoRefES4_(%"class.v8::internal::compiler::JSInliner"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %669, i32 %791, i32 1, i32 2, %"class.v8::internal::compiler::SharedFunctionInfoRef"* nonnull byval(%"class.v8::internal::compiler::SharedFunctionInfoRef") align 8 %217, %"class.v8::internal::compiler::Node"* %715)
  %793 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %794 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %793, i64 0, i32 0, i32 0
  %795 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %794, align 8
  %796 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %793, i64 0, i32 2
  %797 = load %"class.v8::internal::compiler::JSOperatorBuilder"*, %"class.v8::internal::compiler::JSOperatorBuilder"** %796, align 8
  %798 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler17JSOperatorBuilder6CreateEv(%"class.v8::internal::compiler::JSOperatorBuilder"* %797) #10
  %799 = load i32, i32* %141, align 4
  %800 = and i32 %799, 251658240
  %801 = icmp eq i32 %800, 251658240
  br i1 %801, label %802, label %806

802:                                              ; preds = %781
  %803 = inttoptr i64 %146 to i64*
  %804 = load i64, i64* %803, align 8
  %805 = add i64 %804, 16
  br label %806

806:                                              ; preds = %781, %802
  %807 = phi i64 [ %805, %802 ], [ %146, %781 ]
  %808 = inttoptr i64 %807 to i64*
  %809 = load i64, i64* %808, align 8
  %810 = bitcast %"struct.std::__1::array.1634"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %810) #10
  %811 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %11, i64 0, i32 0, i64 0
  %812 = bitcast %"struct.std::__1::array.1634"* %11 to i64*
  store i64 %809, i64* %812, align 8
  %813 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %11, i64 0, i32 0, i64 1
  store %"class.v8::internal::compiler::Node"* %693, %"class.v8::internal::compiler::Node"** %813, align 8
  %814 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %11, i64 0, i32 0, i64 2
  store %"class.v8::internal::compiler::Node"* %715, %"class.v8::internal::compiler::Node"** %814, align 8
  %815 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %11, i64 0, i32 0, i64 3
  store %"class.v8::internal::compiler::Node"* %792, %"class.v8::internal::compiler::Node"** %815, align 8
  %816 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %11, i64 0, i32 0, i64 4
  %817 = bitcast %"class.v8::internal::compiler::Node"** %816 to i64*
  store i64 %754, i64* %817, align 8
  %818 = getelementptr inbounds %"struct.std::__1::array.1634", %"struct.std::__1::array.1634"* %11, i64 0, i32 0, i64 5
  %819 = bitcast %"class.v8::internal::compiler::Node"** %818 to i64*
  store i64 %787, i64* %819, align 8
  %820 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %795, %"class.v8::internal::compiler::Operator"* %798, i32 6, %"class.v8::internal::compiler::Node"** nonnull %811, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %810) #10
  %821 = ptrtoint %"class.v8::internal::compiler::Node"* %820 to i64
  %822 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 1
  %823 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %822, align 8
  %824 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %825 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %824, align 8
  %826 = icmp eq %"class.v8::internal::compiler::Node"** %823, %825
  %827 = ptrtoint %"class.v8::internal::compiler::Node"** %825 to i64
  br i1 %826, label %833, label %828

828:                                              ; preds = %806
  %829 = bitcast %"class.v8::internal::compiler::Node"** %823 to i64*
  store i64 %821, i64* %829, align 8
  %830 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %823, i64 1
  %831 = ptrtoint %"class.v8::internal::compiler::Node"** %830 to i64
  %832 = bitcast %"class.v8::internal::compiler::Node"*** %822 to i64*
  store i64 %831, i64* %832, align 8
  br label %1058

833:                                              ; preds = %806
  %834 = ptrtoint %"class.v8::internal::compiler::Node"** %823 to i64
  %835 = bitcast %"class.v8::internal::compiler::Node"*** %822 to i64*
  %836 = bitcast %"class.v8::internal::ZoneVector.1400"* %30 to i64*
  %837 = load i64, i64* %836, align 8
  %838 = sub i64 %834, %837
  %839 = ashr exact i64 %838, 3
  %840 = add nsw i64 %839, 1
  %841 = icmp ugt i64 %840, 268435455
  br i1 %841, label %842, label %844

842:                                              ; preds = %833
  %843 = bitcast %"class.v8::internal::ZoneVector.1400"* %30 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %843) #9
  unreachable

844:                                              ; preds = %833
  %845 = bitcast %"class.v8::internal::compiler::Node"*** %824 to i64*
  %846 = sub i64 %827, %837
  %847 = ashr exact i64 %846, 3
  %848 = icmp ult i64 %847, 134217727
  br i1 %848, label %849, label %854

849:                                              ; preds = %844
  %850 = ashr exact i64 %846, 2
  %851 = icmp ult i64 %850, %840
  %852 = select i1 %851, i64 %840, i64 %850
  %853 = icmp eq i64 %852, 0
  br i1 %853, label %872, label %854

854:                                              ; preds = %849, %844
  %855 = phi i64 [ %852, %849 ], [ 268435455, %844 ]
  %856 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %857 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %856, align 8
  %858 = shl i64 %855, 3
  %859 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %857, i64 0, i32 2
  %860 = load i64, i64* %859, align 8
  %861 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %857, i64 0, i32 3
  %862 = load i64, i64* %861, align 8
  %863 = sub i64 %862, %860
  %864 = icmp ugt i64 %858, %863
  br i1 %864, label %865, label %867, !prof !3

865:                                              ; preds = %854
  %866 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %857, i64 %858) #10
  br label %869

867:                                              ; preds = %854
  %868 = add i64 %860, %858
  store i64 %868, i64* %859, align 8
  br label %869

869:                                              ; preds = %867, %865
  %870 = phi i64 [ %866, %865 ], [ %860, %867 ]
  %871 = inttoptr i64 %870 to %"class.v8::internal::compiler::Node"**
  br label %872

872:                                              ; preds = %869, %849
  %873 = phi i64 [ %855, %869 ], [ 0, %849 ]
  %874 = phi %"class.v8::internal::compiler::Node"** [ %871, %869 ], [ null, %849 ]
  %875 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %874, i64 %839
  %876 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %874, i64 %873
  %877 = ptrtoint %"class.v8::internal::compiler::Node"** %876 to i64
  %878 = bitcast %"class.v8::internal::compiler::Node"** %875 to i64*
  store i64 %821, i64* %878, align 8
  %879 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %875, i64 1
  %880 = ptrtoint %"class.v8::internal::compiler::Node"** %879 to i64
  %881 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 0
  %882 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %881, align 8
  %883 = ptrtoint %"class.v8::internal::compiler::Node"** %882 to i64
  %884 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %822, align 8
  %885 = icmp eq %"class.v8::internal::compiler::Node"** %884, %882
  br i1 %885, label %1055, label %886

886:                                              ; preds = %872
  %887 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %884, i64 -1
  %888 = ptrtoint %"class.v8::internal::compiler::Node"** %887 to i64
  %889 = sub i64 %888, %883
  %890 = lshr i64 %889, 3
  %891 = add nuw nsw i64 %890, 1
  %892 = icmp ult i64 %891, 4
  br i1 %892, label %985, label %893

893:                                              ; preds = %886
  %894 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %884, i64 -1
  %895 = ptrtoint %"class.v8::internal::compiler::Node"** %894 to i64
  %896 = sub i64 %895, %883
  %897 = lshr i64 %896, 3
  %898 = xor i64 %897, -1
  %899 = add nsw i64 %839, %898
  %900 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %874, i64 %899
  %901 = xor i64 %897, -1
  %902 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %884, i64 %901
  %903 = icmp ult %"class.v8::internal::compiler::Node"** %900, %884
  %904 = icmp ult %"class.v8::internal::compiler::Node"** %902, %875
  %905 = and i1 %903, %904
  br i1 %905, label %985, label %906

906:                                              ; preds = %893
  %907 = and i64 %891, 4611686018427387900
  %908 = sub nsw i64 0, %907
  %909 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %875, i64 %908
  %910 = sub nsw i64 0, %907
  %911 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %884, i64 %910
  %912 = add nsw i64 %907, -4
  %913 = lshr exact i64 %912, 2
  %914 = add nuw nsw i64 %913, 1
  %915 = and i64 %914, 1
  %916 = icmp eq i64 %912, 0
  br i1 %916, label %961, label %917

917:                                              ; preds = %906
  %918 = sub nuw nsw i64 %914, %915
  %919 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %875, i64 -1
  %920 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %884, i64 -1
  %921 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %875, i64 -1
  %922 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %884, i64 -1
  br label %923

923:                                              ; preds = %923, %917
  %924 = phi i64 [ 0, %917 ], [ %958, %923 ]
  %925 = phi i64 [ %918, %917 ], [ %959, %923 ]
  %926 = sub i64 0, %924
  %927 = sub i64 0, %924
  %928 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %919, i64 %926
  %929 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %920, i64 %927
  %930 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %929, i64 -1
  %931 = bitcast %"class.v8::internal::compiler::Node"** %930 to <2 x i64>*
  %932 = load <2 x i64>, <2 x i64>* %931, align 8, !alias.scope !95
  %933 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %929, i64 -2
  %934 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %933, i64 -1
  %935 = bitcast %"class.v8::internal::compiler::Node"** %934 to <2 x i64>*
  %936 = load <2 x i64>, <2 x i64>* %935, align 8, !alias.scope !95
  %937 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %928, i64 -1
  %938 = bitcast %"class.v8::internal::compiler::Node"** %937 to <2 x i64>*
  store <2 x i64> %932, <2 x i64>* %938, align 8, !alias.scope !98, !noalias !95
  %939 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %928, i64 -2
  %940 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %939, i64 -1
  %941 = bitcast %"class.v8::internal::compiler::Node"** %940 to <2 x i64>*
  store <2 x i64> %936, <2 x i64>* %941, align 8, !alias.scope !98, !noalias !95
  %942 = sub nuw nsw i64 -4, %924
  %943 = sub nuw nsw i64 -4, %924
  %944 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %921, i64 %942
  %945 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %922, i64 %943
  %946 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %945, i64 -1
  %947 = bitcast %"class.v8::internal::compiler::Node"** %946 to <2 x i64>*
  %948 = load <2 x i64>, <2 x i64>* %947, align 8, !alias.scope !95
  %949 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %945, i64 -2
  %950 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %949, i64 -1
  %951 = bitcast %"class.v8::internal::compiler::Node"** %950 to <2 x i64>*
  %952 = load <2 x i64>, <2 x i64>* %951, align 8, !alias.scope !95
  %953 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %944, i64 -1
  %954 = bitcast %"class.v8::internal::compiler::Node"** %953 to <2 x i64>*
  store <2 x i64> %948, <2 x i64>* %954, align 8, !alias.scope !98, !noalias !95
  %955 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %944, i64 -2
  %956 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %955, i64 -1
  %957 = bitcast %"class.v8::internal::compiler::Node"** %956 to <2 x i64>*
  store <2 x i64> %952, <2 x i64>* %957, align 8, !alias.scope !98, !noalias !95
  %958 = add i64 %924, 8
  %959 = add i64 %925, -2
  %960 = icmp eq i64 %959, 0
  br i1 %960, label %961, label %923, !llvm.loop !100

961:                                              ; preds = %923, %906
  %962 = phi i64 [ 0, %906 ], [ %958, %923 ]
  %963 = icmp eq i64 %915, 0
  br i1 %963, label %983, label %964

964:                                              ; preds = %961
  %965 = sub i64 0, %962
  %966 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %875, i64 -1
  %967 = sub i64 0, %962
  %968 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %884, i64 -1
  %969 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %966, i64 %965
  %970 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %968, i64 %967
  %971 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %970, i64 -1
  %972 = bitcast %"class.v8::internal::compiler::Node"** %971 to <2 x i64>*
  %973 = load <2 x i64>, <2 x i64>* %972, align 8, !alias.scope !95
  %974 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %970, i64 -2
  %975 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %974, i64 -1
  %976 = bitcast %"class.v8::internal::compiler::Node"** %975 to <2 x i64>*
  %977 = load <2 x i64>, <2 x i64>* %976, align 8, !alias.scope !95
  %978 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %969, i64 -1
  %979 = bitcast %"class.v8::internal::compiler::Node"** %978 to <2 x i64>*
  store <2 x i64> %973, <2 x i64>* %979, align 8, !alias.scope !98, !noalias !95
  %980 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %969, i64 -2
  %981 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %980, i64 -1
  %982 = bitcast %"class.v8::internal::compiler::Node"** %981 to <2 x i64>*
  store <2 x i64> %977, <2 x i64>* %982, align 8, !alias.scope !98, !noalias !95
  br label %983

983:                                              ; preds = %961, %964
  %984 = icmp eq i64 %891, %907
  br i1 %984, label %1055, label %985

985:                                              ; preds = %983, %893, %886
  %986 = phi %"class.v8::internal::compiler::Node"** [ %875, %893 ], [ %875, %886 ], [ %909, %983 ]
  %987 = phi %"class.v8::internal::compiler::Node"** [ %884, %893 ], [ %884, %886 ], [ %911, %983 ]
  %988 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %987, i64 -1
  %989 = ptrtoint %"class.v8::internal::compiler::Node"** %988 to i64
  %990 = sub i64 %989, %883
  %991 = lshr i64 %990, 3
  %992 = add nuw nsw i64 %991, 1
  %993 = and i64 %992, 7
  %994 = icmp eq i64 %993, 0
  br i1 %994, label %1006, label %995

995:                                              ; preds = %985, %995
  %996 = phi %"class.v8::internal::compiler::Node"** [ %999, %995 ], [ %986, %985 ]
  %997 = phi %"class.v8::internal::compiler::Node"** [ %1000, %995 ], [ %987, %985 ]
  %998 = phi i64 [ %1004, %995 ], [ %993, %985 ]
  %999 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %996, i64 -1
  %1000 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %997, i64 -1
  %1001 = bitcast %"class.v8::internal::compiler::Node"** %1000 to i64*
  %1002 = load i64, i64* %1001, align 8
  %1003 = bitcast %"class.v8::internal::compiler::Node"** %999 to i64*
  store i64 %1002, i64* %1003, align 8
  %1004 = add i64 %998, -1
  %1005 = icmp eq i64 %1004, 0
  br i1 %1005, label %1006, label %995, !llvm.loop !101

1006:                                             ; preds = %995, %985
  %1007 = phi %"class.v8::internal::compiler::Node"** [ undef, %985 ], [ %999, %995 ]
  %1008 = phi %"class.v8::internal::compiler::Node"** [ %986, %985 ], [ %999, %995 ]
  %1009 = phi %"class.v8::internal::compiler::Node"** [ %987, %985 ], [ %1000, %995 ]
  %1010 = icmp ult i64 %990, 56
  br i1 %1010, label %1055, label %1011

1011:                                             ; preds = %1006, %1011
  %1012 = phi %"class.v8::internal::compiler::Node"** [ %1049, %1011 ], [ %1008, %1006 ]
  %1013 = phi %"class.v8::internal::compiler::Node"** [ %1050, %1011 ], [ %1009, %1006 ]
  %1014 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1012, i64 -1
  %1015 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1013, i64 -1
  %1016 = bitcast %"class.v8::internal::compiler::Node"** %1015 to i64*
  %1017 = load i64, i64* %1016, align 8
  %1018 = bitcast %"class.v8::internal::compiler::Node"** %1014 to i64*
  store i64 %1017, i64* %1018, align 8
  %1019 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1012, i64 -2
  %1020 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1013, i64 -2
  %1021 = bitcast %"class.v8::internal::compiler::Node"** %1020 to i64*
  %1022 = load i64, i64* %1021, align 8
  %1023 = bitcast %"class.v8::internal::compiler::Node"** %1019 to i64*
  store i64 %1022, i64* %1023, align 8
  %1024 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1012, i64 -3
  %1025 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1013, i64 -3
  %1026 = bitcast %"class.v8::internal::compiler::Node"** %1025 to i64*
  %1027 = load i64, i64* %1026, align 8
  %1028 = bitcast %"class.v8::internal::compiler::Node"** %1024 to i64*
  store i64 %1027, i64* %1028, align 8
  %1029 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1012, i64 -4
  %1030 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1013, i64 -4
  %1031 = bitcast %"class.v8::internal::compiler::Node"** %1030 to i64*
  %1032 = load i64, i64* %1031, align 8
  %1033 = bitcast %"class.v8::internal::compiler::Node"** %1029 to i64*
  store i64 %1032, i64* %1033, align 8
  %1034 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1012, i64 -5
  %1035 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1013, i64 -5
  %1036 = bitcast %"class.v8::internal::compiler::Node"** %1035 to i64*
  %1037 = load i64, i64* %1036, align 8
  %1038 = bitcast %"class.v8::internal::compiler::Node"** %1034 to i64*
  store i64 %1037, i64* %1038, align 8
  %1039 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1012, i64 -6
  %1040 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1013, i64 -6
  %1041 = bitcast %"class.v8::internal::compiler::Node"** %1040 to i64*
  %1042 = load i64, i64* %1041, align 8
  %1043 = bitcast %"class.v8::internal::compiler::Node"** %1039 to i64*
  store i64 %1042, i64* %1043, align 8
  %1044 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1012, i64 -7
  %1045 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1013, i64 -7
  %1046 = bitcast %"class.v8::internal::compiler::Node"** %1045 to i64*
  %1047 = load i64, i64* %1046, align 8
  %1048 = bitcast %"class.v8::internal::compiler::Node"** %1044 to i64*
  store i64 %1047, i64* %1048, align 8
  %1049 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1012, i64 -8
  %1050 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1013, i64 -8
  %1051 = bitcast %"class.v8::internal::compiler::Node"** %1050 to i64*
  %1052 = load i64, i64* %1051, align 8
  %1053 = bitcast %"class.v8::internal::compiler::Node"** %1049 to i64*
  store i64 %1052, i64* %1053, align 8
  %1054 = icmp eq %"class.v8::internal::compiler::Node"** %1050, %882
  br i1 %1054, label %1055, label %1011, !llvm.loop !102

1055:                                             ; preds = %1006, %1011, %983, %872
  %1056 = phi %"class.v8::internal::compiler::Node"** [ %875, %872 ], [ %909, %983 ], [ %1007, %1006 ], [ %1049, %1011 ]
  %1057 = ptrtoint %"class.v8::internal::compiler::Node"** %1056 to i64
  store i64 %1057, i64* %836, align 8
  store i64 %880, i64* %835, align 8
  store i64 %877, i64* %845, align 8
  br label %1058

1058:                                             ; preds = %828, %1055
  call void @_ZN2v88internal8compiler14NodeProperties19ReplaceControlInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %820, i32 0) #10
  call void @_ZN2v88internal8compiler14NodeProperties18ReplaceEffectInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %820, i32 0) #10
  %1059 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1060 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1059, i64 0, i32 0, i32 0
  %1061 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1060, align 8
  %1062 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1059, i64 0, i32 0, i32 1
  %1063 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1062, align 8
  %1064 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1063) #10
  %1065 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1061, %"class.v8::internal::compiler::Operator"* %1064, i32 0, %"class.v8::internal::compiler::Node"** null, i1 zeroext false) #10
  call void @_ZN2v88internal8compiler14NodeProperties11ReplaceUsesEPNS1_4NodeES4_S4_S4_S4_(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1065, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1) #10
  %1066 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1067 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1066, i64 0, i32 0, i32 0
  %1068 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1067, align 8
  %1069 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1066, i64 0, i32 3
  %1070 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %1069, align 8
  %1071 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder16ObjectIsReceiverEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %1070) #10
  %1072 = bitcast %"struct.std::__1::array.1629"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1072) #10
  %1073 = getelementptr inbounds %"struct.std::__1::array.1629", %"struct.std::__1::array.1629"* %9, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %1073, align 8
  %1074 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1068, %"class.v8::internal::compiler::Operator"* %1071, i32 1, %"class.v8::internal::compiler::Node"** nonnull %1073, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1072) #10
  %1075 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1076 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1075, i64 0, i32 0, i32 0
  %1077 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1076, align 8
  %1078 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1075, i64 0, i32 0, i32 1
  %1079 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1078, align 8
  %1080 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6SelectENS0_21MachineRepresentationENS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1079, i8 zeroext 9, i8 zeroext 0) #10
  %1081 = bitcast %"struct.std::__1::array.1651"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1081) #10
  %1082 = getelementptr inbounds %"struct.std::__1::array.1651", %"struct.std::__1::array.1651"* %7, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1074, %"class.v8::internal::compiler::Node"** %1082, align 8
  %1083 = getelementptr inbounds %"struct.std::__1::array.1651", %"struct.std::__1::array.1651"* %7, i64 0, i32 0, i64 1
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %1083, align 8
  %1084 = getelementptr inbounds %"struct.std::__1::array.1651", %"struct.std::__1::array.1651"* %7, i64 0, i32 0, i64 2
  store %"class.v8::internal::compiler::Node"* %820, %"class.v8::internal::compiler::Node"** %1084, align 8
  %1085 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1077, %"class.v8::internal::compiler::Operator"* %1080, i32 3, %"class.v8::internal::compiler::Node"** nonnull %1082, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1081) #10
  %1086 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 0, i32 1
  %1087 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %1086, align 8
  %1088 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1087 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %1089 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %1088, align 8
  %1090 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1089, i64 4
  %1091 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1090, align 8
  call void %1091(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %1087, %"class.v8::internal::compiler::Node"* %1065, %"class.v8::internal::compiler::Node"* %1085, %"class.v8::internal::compiler::Node"* null, %"class.v8::internal::compiler::Node"* null) #10
  br label %1431

1092:                                             ; preds = %720, %721
  %1093 = call zeroext i8 @_ZNK2v88internal8compiler21SharedFunctionInfoRef4kindEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* %217) #10
  %1094 = add i8 %1093, -5
  %1095 = icmp ult i8 %1094, 2
  br i1 %1095, label %1096, label %1431

1096:                                             ; preds = %1092
  %1097 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler14NodeProperties31FindSuccessfulControlProjectionEPNS1_4NodeE(%"class.v8::internal::compiler::Node"* %1) #10
  %1098 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1099 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1098, i64 0, i32 0, i32 0
  %1100 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1099, align 8
  %1101 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1098, i64 0, i32 3
  %1102 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %1101, align 8
  %1103 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder16ObjectIsReceiverEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %1102) #10
  %1104 = bitcast %"struct.std::__1::array.1629"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1104) #10
  %1105 = getelementptr inbounds %"struct.std::__1::array.1629", %"struct.std::__1::array.1629"* %5, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %1105, align 8
  %1106 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1100, %"class.v8::internal::compiler::Operator"* %1103, i32 1, %"class.v8::internal::compiler::Node"** nonnull %1105, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1104) #10
  %1107 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1108 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1107, i64 0, i32 0, i32 0
  %1109 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1108, align 8
  %1110 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1107, i64 0, i32 0, i32 1
  %1111 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1110, align 8
  %1112 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6BranchENS1_10BranchHintENS1_13IsSafetyCheckE(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1111, i8 zeroext 0, i8 zeroext 1) #10
  %1113 = bitcast %"struct.std::__1::array.1630"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1113) #10
  %1114 = getelementptr inbounds %"struct.std::__1::array.1630", %"struct.std::__1::array.1630"* %3, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1106, %"class.v8::internal::compiler::Node"** %1114, align 8
  %1115 = getelementptr inbounds %"struct.std::__1::array.1630", %"struct.std::__1::array.1630"* %3, i64 0, i32 0, i64 1
  store %"class.v8::internal::compiler::Node"* %1097, %"class.v8::internal::compiler::Node"** %1115, align 8
  %1116 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1109, %"class.v8::internal::compiler::Operator"* %1112, i32 2, %"class.v8::internal::compiler::Node"** nonnull %1114, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1113) #10
  %1117 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1118 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1117, i64 0, i32 0, i32 0
  %1119 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1118, align 8
  %1120 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1117, i64 0, i32 0, i32 1
  %1121 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1120, align 8
  %1122 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6IfTrueEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1121) #10
  %1123 = bitcast %"struct.std::__1::array.1629"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1123) #10
  %1124 = getelementptr inbounds %"struct.std::__1::array.1629", %"struct.std::__1::array.1629"* %4, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1116, %"class.v8::internal::compiler::Node"** %1124, align 8
  %1125 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1119, %"class.v8::internal::compiler::Operator"* %1122, i32 1, %"class.v8::internal::compiler::Node"** nonnull %1124, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1123) #10
  %1126 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1127 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1126, i64 0, i32 0, i32 0
  %1128 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1127, align 8
  %1129 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1126, i64 0, i32 0, i32 1
  %1130 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1129, align 8
  %1131 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder7IfFalseEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1130) #10
  %1132 = bitcast %"struct.std::__1::array.1629"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1132) #10
  %1133 = getelementptr inbounds %"struct.std::__1::array.1629", %"struct.std::__1::array.1629"* %6, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1116, %"class.v8::internal::compiler::Node"** %1133, align 8
  %1134 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1128, %"class.v8::internal::compiler::Operator"* %1131, i32 1, %"class.v8::internal::compiler::Node"** nonnull %1133, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1132) #10
  %1135 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1136 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1135, i64 0, i32 0, i32 0
  %1137 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1136, align 8
  %1138 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1135, i64 0, i32 2
  %1139 = load %"class.v8::internal::compiler::JSOperatorBuilder"*, %"class.v8::internal::compiler::JSOperatorBuilder"** %1138, align 8
  %1140 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler17JSOperatorBuilder11CallRuntimeENS0_7Runtime10FunctionIdE(%"class.v8::internal::compiler::JSOperatorBuilder"* %1139, i32 175) #10
  %1141 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1142 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1141) #10
  br i1 %1142, label %1144, label %1143, !prof !2

1143:                                             ; preds = %1096
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.23, i64 0, i64 0)) #9
  unreachable

1144:                                             ; preds = %1096
  %1145 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1146 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1145, i64 0, i32 5
  %1147 = load i32, i32* %1146, align 4
  %1148 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1145) #10
  %1149 = zext i1 %1148 to i32
  %1150 = add nsw i32 %1147, %1149
  %1151 = load i32, i32* %141, align 4
  %1152 = and i32 %1151, 251658240
  %1153 = icmp eq i32 %1152, 251658240
  br i1 %1153, label %1154, label %1158

1154:                                             ; preds = %1144
  %1155 = inttoptr i64 %146 to i64*
  %1156 = load i64, i64* %1155, align 8
  %1157 = add i64 %1156, 16
  br label %1158

1158:                                             ; preds = %1144, %1154
  %1159 = phi i64 [ %1157, %1154 ], [ %146, %1144 ]
  %1160 = inttoptr i64 %1159 to %"class.v8::internal::compiler::Node"**
  %1161 = sext i32 %1150 to i64
  %1162 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1160, i64 %1161
  %1163 = bitcast %"class.v8::internal::compiler::Node"** %1162 to i64*
  %1164 = load i64, i64* %1163, align 8
  %1165 = bitcast %"struct.std::__1::array.1652"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1165) #10
  %1166 = getelementptr inbounds %"struct.std::__1::array.1652", %"struct.std::__1::array.1652"* %8, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %715, %"class.v8::internal::compiler::Node"** %1166, align 8
  %1167 = getelementptr inbounds %"struct.std::__1::array.1652", %"struct.std::__1::array.1652"* %8, i64 0, i32 0, i64 1
  %1168 = bitcast %"class.v8::internal::compiler::Node"** %1167 to i64*
  store i64 %1164, i64* %1168, align 8
  %1169 = getelementptr inbounds %"struct.std::__1::array.1652", %"struct.std::__1::array.1652"* %8, i64 0, i32 0, i64 2
  store %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"** %1169, align 8
  %1170 = getelementptr inbounds %"struct.std::__1::array.1652", %"struct.std::__1::array.1652"* %8, i64 0, i32 0, i64 3
  store %"class.v8::internal::compiler::Node"* %1134, %"class.v8::internal::compiler::Node"** %1170, align 8
  %1171 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1137, %"class.v8::internal::compiler::Operator"* %1140, i32 4, %"class.v8::internal::compiler::Node"** nonnull %1166, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1165) #10
  %1172 = ptrtoint %"class.v8::internal::compiler::Node"* %1171 to i64
  %1173 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 1
  %1174 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1173, align 8
  %1175 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %1176 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1175, align 8
  %1177 = icmp eq %"class.v8::internal::compiler::Node"** %1174, %1176
  %1178 = ptrtoint %"class.v8::internal::compiler::Node"** %1176 to i64
  br i1 %1177, label %1184, label %1179

1179:                                             ; preds = %1158
  %1180 = bitcast %"class.v8::internal::compiler::Node"** %1174 to i64*
  store i64 %1172, i64* %1180, align 8
  %1181 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1174, i64 1
  %1182 = ptrtoint %"class.v8::internal::compiler::Node"** %1181 to i64
  %1183 = bitcast %"class.v8::internal::compiler::Node"*** %1173 to i64*
  store i64 %1182, i64* %1183, align 8
  br label %1409

1184:                                             ; preds = %1158
  %1185 = ptrtoint %"class.v8::internal::compiler::Node"** %1174 to i64
  %1186 = bitcast %"class.v8::internal::compiler::Node"*** %1173 to i64*
  %1187 = bitcast %"class.v8::internal::ZoneVector.1400"* %30 to i64*
  %1188 = load i64, i64* %1187, align 8
  %1189 = sub i64 %1185, %1188
  %1190 = ashr exact i64 %1189, 3
  %1191 = add nsw i64 %1190, 1
  %1192 = icmp ugt i64 %1191, 268435455
  br i1 %1192, label %1193, label %1195

1193:                                             ; preds = %1184
  %1194 = bitcast %"class.v8::internal::ZoneVector.1400"* %30 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %1194) #9
  unreachable

1195:                                             ; preds = %1184
  %1196 = bitcast %"class.v8::internal::compiler::Node"*** %1175 to i64*
  %1197 = sub i64 %1178, %1188
  %1198 = ashr exact i64 %1197, 3
  %1199 = icmp ult i64 %1198, 134217727
  br i1 %1199, label %1200, label %1205

1200:                                             ; preds = %1195
  %1201 = ashr exact i64 %1197, 2
  %1202 = icmp ult i64 %1201, %1191
  %1203 = select i1 %1202, i64 %1191, i64 %1201
  %1204 = icmp eq i64 %1203, 0
  br i1 %1204, label %1223, label %1205

1205:                                             ; preds = %1200, %1195
  %1206 = phi i64 [ %1203, %1200 ], [ 268435455, %1195 ]
  %1207 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %1208 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %1207, align 8
  %1209 = shl i64 %1206, 3
  %1210 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1208, i64 0, i32 2
  %1211 = load i64, i64* %1210, align 8
  %1212 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %1208, i64 0, i32 3
  %1213 = load i64, i64* %1212, align 8
  %1214 = sub i64 %1213, %1211
  %1215 = icmp ugt i64 %1209, %1214
  br i1 %1215, label %1216, label %1218, !prof !3

1216:                                             ; preds = %1205
  %1217 = call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %1208, i64 %1209) #10
  br label %1220

1218:                                             ; preds = %1205
  %1219 = add i64 %1211, %1209
  store i64 %1219, i64* %1210, align 8
  br label %1220

1220:                                             ; preds = %1218, %1216
  %1221 = phi i64 [ %1217, %1216 ], [ %1211, %1218 ]
  %1222 = inttoptr i64 %1221 to %"class.v8::internal::compiler::Node"**
  br label %1223

1223:                                             ; preds = %1220, %1200
  %1224 = phi i64 [ %1206, %1220 ], [ 0, %1200 ]
  %1225 = phi %"class.v8::internal::compiler::Node"** [ %1222, %1220 ], [ null, %1200 ]
  %1226 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1225, i64 %1190
  %1227 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1225, i64 %1224
  %1228 = ptrtoint %"class.v8::internal::compiler::Node"** %1227 to i64
  %1229 = bitcast %"class.v8::internal::compiler::Node"** %1226 to i64*
  store i64 %1172, i64* %1229, align 8
  %1230 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1226, i64 1
  %1231 = ptrtoint %"class.v8::internal::compiler::Node"** %1230 to i64
  %1232 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 0
  %1233 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1232, align 8
  %1234 = ptrtoint %"class.v8::internal::compiler::Node"** %1233 to i64
  %1235 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1173, align 8
  %1236 = icmp eq %"class.v8::internal::compiler::Node"** %1235, %1233
  br i1 %1236, label %1406, label %1237

1237:                                             ; preds = %1223
  %1238 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1235, i64 -1
  %1239 = ptrtoint %"class.v8::internal::compiler::Node"** %1238 to i64
  %1240 = sub i64 %1239, %1234
  %1241 = lshr i64 %1240, 3
  %1242 = add nuw nsw i64 %1241, 1
  %1243 = icmp ult i64 %1242, 4
  br i1 %1243, label %1336, label %1244

1244:                                             ; preds = %1237
  %1245 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1235, i64 -1
  %1246 = ptrtoint %"class.v8::internal::compiler::Node"** %1245 to i64
  %1247 = sub i64 %1246, %1234
  %1248 = lshr i64 %1247, 3
  %1249 = xor i64 %1248, -1
  %1250 = add nsw i64 %1190, %1249
  %1251 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1225, i64 %1250
  %1252 = xor i64 %1248, -1
  %1253 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1235, i64 %1252
  %1254 = icmp ult %"class.v8::internal::compiler::Node"** %1251, %1235
  %1255 = icmp ult %"class.v8::internal::compiler::Node"** %1253, %1226
  %1256 = and i1 %1254, %1255
  br i1 %1256, label %1336, label %1257

1257:                                             ; preds = %1244
  %1258 = and i64 %1242, 4611686018427387900
  %1259 = sub nsw i64 0, %1258
  %1260 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1226, i64 %1259
  %1261 = sub nsw i64 0, %1258
  %1262 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1235, i64 %1261
  %1263 = add nsw i64 %1258, -4
  %1264 = lshr exact i64 %1263, 2
  %1265 = add nuw nsw i64 %1264, 1
  %1266 = and i64 %1265, 1
  %1267 = icmp eq i64 %1263, 0
  br i1 %1267, label %1312, label %1268

1268:                                             ; preds = %1257
  %1269 = sub nuw nsw i64 %1265, %1266
  %1270 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1226, i64 -1
  %1271 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1235, i64 -1
  %1272 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1226, i64 -1
  %1273 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1235, i64 -1
  br label %1274

1274:                                             ; preds = %1274, %1268
  %1275 = phi i64 [ 0, %1268 ], [ %1309, %1274 ]
  %1276 = phi i64 [ %1269, %1268 ], [ %1310, %1274 ]
  %1277 = sub i64 0, %1275
  %1278 = sub i64 0, %1275
  %1279 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1270, i64 %1277
  %1280 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1271, i64 %1278
  %1281 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1280, i64 -1
  %1282 = bitcast %"class.v8::internal::compiler::Node"** %1281 to <2 x i64>*
  %1283 = load <2 x i64>, <2 x i64>* %1282, align 8, !alias.scope !103
  %1284 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1280, i64 -2
  %1285 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1284, i64 -1
  %1286 = bitcast %"class.v8::internal::compiler::Node"** %1285 to <2 x i64>*
  %1287 = load <2 x i64>, <2 x i64>* %1286, align 8, !alias.scope !103
  %1288 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1279, i64 -1
  %1289 = bitcast %"class.v8::internal::compiler::Node"** %1288 to <2 x i64>*
  store <2 x i64> %1283, <2 x i64>* %1289, align 8, !alias.scope !106, !noalias !103
  %1290 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1279, i64 -2
  %1291 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1290, i64 -1
  %1292 = bitcast %"class.v8::internal::compiler::Node"** %1291 to <2 x i64>*
  store <2 x i64> %1287, <2 x i64>* %1292, align 8, !alias.scope !106, !noalias !103
  %1293 = sub nuw nsw i64 -4, %1275
  %1294 = sub nuw nsw i64 -4, %1275
  %1295 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1272, i64 %1293
  %1296 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1273, i64 %1294
  %1297 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1296, i64 -1
  %1298 = bitcast %"class.v8::internal::compiler::Node"** %1297 to <2 x i64>*
  %1299 = load <2 x i64>, <2 x i64>* %1298, align 8, !alias.scope !103
  %1300 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1296, i64 -2
  %1301 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1300, i64 -1
  %1302 = bitcast %"class.v8::internal::compiler::Node"** %1301 to <2 x i64>*
  %1303 = load <2 x i64>, <2 x i64>* %1302, align 8, !alias.scope !103
  %1304 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1295, i64 -1
  %1305 = bitcast %"class.v8::internal::compiler::Node"** %1304 to <2 x i64>*
  store <2 x i64> %1299, <2 x i64>* %1305, align 8, !alias.scope !106, !noalias !103
  %1306 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1295, i64 -2
  %1307 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1306, i64 -1
  %1308 = bitcast %"class.v8::internal::compiler::Node"** %1307 to <2 x i64>*
  store <2 x i64> %1303, <2 x i64>* %1308, align 8, !alias.scope !106, !noalias !103
  %1309 = add i64 %1275, 8
  %1310 = add i64 %1276, -2
  %1311 = icmp eq i64 %1310, 0
  br i1 %1311, label %1312, label %1274, !llvm.loop !108

1312:                                             ; preds = %1274, %1257
  %1313 = phi i64 [ 0, %1257 ], [ %1309, %1274 ]
  %1314 = icmp eq i64 %1266, 0
  br i1 %1314, label %1334, label %1315

1315:                                             ; preds = %1312
  %1316 = sub i64 0, %1313
  %1317 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1226, i64 -1
  %1318 = sub i64 0, %1313
  %1319 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1235, i64 -1
  %1320 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1317, i64 %1316
  %1321 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1319, i64 %1318
  %1322 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1321, i64 -1
  %1323 = bitcast %"class.v8::internal::compiler::Node"** %1322 to <2 x i64>*
  %1324 = load <2 x i64>, <2 x i64>* %1323, align 8, !alias.scope !103
  %1325 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1321, i64 -2
  %1326 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1325, i64 -1
  %1327 = bitcast %"class.v8::internal::compiler::Node"** %1326 to <2 x i64>*
  %1328 = load <2 x i64>, <2 x i64>* %1327, align 8, !alias.scope !103
  %1329 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1320, i64 -1
  %1330 = bitcast %"class.v8::internal::compiler::Node"** %1329 to <2 x i64>*
  store <2 x i64> %1324, <2 x i64>* %1330, align 8, !alias.scope !106, !noalias !103
  %1331 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1320, i64 -2
  %1332 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1331, i64 -1
  %1333 = bitcast %"class.v8::internal::compiler::Node"** %1332 to <2 x i64>*
  store <2 x i64> %1328, <2 x i64>* %1333, align 8, !alias.scope !106, !noalias !103
  br label %1334

1334:                                             ; preds = %1312, %1315
  %1335 = icmp eq i64 %1242, %1258
  br i1 %1335, label %1406, label %1336

1336:                                             ; preds = %1334, %1244, %1237
  %1337 = phi %"class.v8::internal::compiler::Node"** [ %1226, %1244 ], [ %1226, %1237 ], [ %1260, %1334 ]
  %1338 = phi %"class.v8::internal::compiler::Node"** [ %1235, %1244 ], [ %1235, %1237 ], [ %1262, %1334 ]
  %1339 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1338, i64 -1
  %1340 = ptrtoint %"class.v8::internal::compiler::Node"** %1339 to i64
  %1341 = sub i64 %1340, %1234
  %1342 = lshr i64 %1341, 3
  %1343 = add nuw nsw i64 %1342, 1
  %1344 = and i64 %1343, 7
  %1345 = icmp eq i64 %1344, 0
  br i1 %1345, label %1357, label %1346

1346:                                             ; preds = %1336, %1346
  %1347 = phi %"class.v8::internal::compiler::Node"** [ %1350, %1346 ], [ %1337, %1336 ]
  %1348 = phi %"class.v8::internal::compiler::Node"** [ %1351, %1346 ], [ %1338, %1336 ]
  %1349 = phi i64 [ %1355, %1346 ], [ %1344, %1336 ]
  %1350 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1347, i64 -1
  %1351 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1348, i64 -1
  %1352 = bitcast %"class.v8::internal::compiler::Node"** %1351 to i64*
  %1353 = load i64, i64* %1352, align 8
  %1354 = bitcast %"class.v8::internal::compiler::Node"** %1350 to i64*
  store i64 %1353, i64* %1354, align 8
  %1355 = add i64 %1349, -1
  %1356 = icmp eq i64 %1355, 0
  br i1 %1356, label %1357, label %1346, !llvm.loop !109

1357:                                             ; preds = %1346, %1336
  %1358 = phi %"class.v8::internal::compiler::Node"** [ undef, %1336 ], [ %1350, %1346 ]
  %1359 = phi %"class.v8::internal::compiler::Node"** [ %1337, %1336 ], [ %1350, %1346 ]
  %1360 = phi %"class.v8::internal::compiler::Node"** [ %1338, %1336 ], [ %1351, %1346 ]
  %1361 = icmp ult i64 %1341, 56
  br i1 %1361, label %1406, label %1362

1362:                                             ; preds = %1357, %1362
  %1363 = phi %"class.v8::internal::compiler::Node"** [ %1400, %1362 ], [ %1359, %1357 ]
  %1364 = phi %"class.v8::internal::compiler::Node"** [ %1401, %1362 ], [ %1360, %1357 ]
  %1365 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1363, i64 -1
  %1366 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1364, i64 -1
  %1367 = bitcast %"class.v8::internal::compiler::Node"** %1366 to i64*
  %1368 = load i64, i64* %1367, align 8
  %1369 = bitcast %"class.v8::internal::compiler::Node"** %1365 to i64*
  store i64 %1368, i64* %1369, align 8
  %1370 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1363, i64 -2
  %1371 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1364, i64 -2
  %1372 = bitcast %"class.v8::internal::compiler::Node"** %1371 to i64*
  %1373 = load i64, i64* %1372, align 8
  %1374 = bitcast %"class.v8::internal::compiler::Node"** %1370 to i64*
  store i64 %1373, i64* %1374, align 8
  %1375 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1363, i64 -3
  %1376 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1364, i64 -3
  %1377 = bitcast %"class.v8::internal::compiler::Node"** %1376 to i64*
  %1378 = load i64, i64* %1377, align 8
  %1379 = bitcast %"class.v8::internal::compiler::Node"** %1375 to i64*
  store i64 %1378, i64* %1379, align 8
  %1380 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1363, i64 -4
  %1381 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1364, i64 -4
  %1382 = bitcast %"class.v8::internal::compiler::Node"** %1381 to i64*
  %1383 = load i64, i64* %1382, align 8
  %1384 = bitcast %"class.v8::internal::compiler::Node"** %1380 to i64*
  store i64 %1383, i64* %1384, align 8
  %1385 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1363, i64 -5
  %1386 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1364, i64 -5
  %1387 = bitcast %"class.v8::internal::compiler::Node"** %1386 to i64*
  %1388 = load i64, i64* %1387, align 8
  %1389 = bitcast %"class.v8::internal::compiler::Node"** %1385 to i64*
  store i64 %1388, i64* %1389, align 8
  %1390 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1363, i64 -6
  %1391 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1364, i64 -6
  %1392 = bitcast %"class.v8::internal::compiler::Node"** %1391 to i64*
  %1393 = load i64, i64* %1392, align 8
  %1394 = bitcast %"class.v8::internal::compiler::Node"** %1390 to i64*
  store i64 %1393, i64* %1394, align 8
  %1395 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1363, i64 -7
  %1396 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1364, i64 -7
  %1397 = bitcast %"class.v8::internal::compiler::Node"** %1396 to i64*
  %1398 = load i64, i64* %1397, align 8
  %1399 = bitcast %"class.v8::internal::compiler::Node"** %1395 to i64*
  store i64 %1398, i64* %1399, align 8
  %1400 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1363, i64 -8
  %1401 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1364, i64 -8
  %1402 = bitcast %"class.v8::internal::compiler::Node"** %1401 to i64*
  %1403 = load i64, i64* %1402, align 8
  %1404 = bitcast %"class.v8::internal::compiler::Node"** %1400 to i64*
  store i64 %1403, i64* %1404, align 8
  %1405 = icmp eq %"class.v8::internal::compiler::Node"** %1401, %1233
  br i1 %1405, label %1406, label %1362, !llvm.loop !110

1406:                                             ; preds = %1357, %1362, %1334, %1223
  %1407 = phi %"class.v8::internal::compiler::Node"** [ %1226, %1223 ], [ %1260, %1334 ], [ %1358, %1357 ], [ %1400, %1362 ]
  %1408 = ptrtoint %"class.v8::internal::compiler::Node"** %1407 to i64
  store i64 %1408, i64* %1187, align 8
  store i64 %1231, i64* %1186, align 8
  store i64 %1228, i64* %1196, align 8
  br label %1409

1409:                                             ; preds = %1179, %1406
  %1410 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1411 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1410, i64 0, i32 0, i32 0
  %1412 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1411, align 8
  %1413 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1410, i64 0, i32 0, i32 1
  %1414 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1413, align 8
  %1415 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5ThrowEv(%"class.v8::internal::compiler::CommonOperatorBuilder"* %1414) #10
  %1416 = bitcast %"struct.std::__1::array.1630"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1416) #10
  %1417 = getelementptr inbounds %"struct.std::__1::array.1630", %"struct.std::__1::array.1630"* %10, i64 0, i32 0, i64 0
  store %"class.v8::internal::compiler::Node"* %1171, %"class.v8::internal::compiler::Node"** %1417, align 8
  %1418 = getelementptr inbounds %"struct.std::__1::array.1630", %"struct.std::__1::array.1630"* %10, i64 0, i32 0, i64 1
  store %"class.v8::internal::compiler::Node"* %1171, %"class.v8::internal::compiler::Node"** %1418, align 8
  %1419 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1412, %"class.v8::internal::compiler::Operator"* %1415, i32 2, %"class.v8::internal::compiler::Node"** nonnull %1417, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1416) #10
  %1420 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1421 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1420, i64 0, i32 0, i32 0
  %1422 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1421, align 8
  %1423 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1420, i64 0, i32 0, i32 1
  %1424 = load %"class.v8::internal::compiler::CommonOperatorBuilder"*, %"class.v8::internal::compiler::CommonOperatorBuilder"** %1423, align 8
  call void @_ZN2v88internal8compiler14NodeProperties17MergeControlToEndEPNS1_5GraphEPNS1_21CommonOperatorBuilderEPNS1_4NodeE(%"class.v8::internal::compiler::Graph"* %1422, %"class.v8::internal::compiler::CommonOperatorBuilder"* %1424, %"class.v8::internal::compiler::Node"* %1419) #10
  %1425 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 0, i32 1
  %1426 = load %"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::AdvancedReducer::Editor"** %1425, align 8
  %1427 = bitcast %"class.v8::internal::compiler::AdvancedReducer::Editor"* %1426 to void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)***
  %1428 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)**, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*** %1427, align 8
  %1429 = getelementptr inbounds void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1428, i64 4
  %1430 = load void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)*, void (%"class.v8::internal::compiler::AdvancedReducer::Editor"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*)** %1429, align 8
  call void %1430(%"class.v8::internal::compiler::AdvancedReducer::Editor"* %1426, %"class.v8::internal::compiler::Node"* %1097, %"class.v8::internal::compiler::Node"* %1097, %"class.v8::internal::compiler::Node"* %1097, %"class.v8::internal::compiler::Node"* %1125) #10
  call void @_ZN2v88internal8compiler14NodeProperties19ReplaceControlInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %1116, %"class.v8::internal::compiler::Node"* %1097, i32 0) #10
  br label %1431

1431:                                             ; preds = %1092, %1409, %1058
  %1432 = phi %"class.v8::internal::compiler::Node"* [ %820, %1058 ], [ %695, %1409 ], [ %695, %1092 ]
  %1433 = load i32, i32* %141, align 4
  %1434 = and i32 %1433, 251658240
  %1435 = icmp eq i32 %1434, 251658240
  br i1 %1435, label %1436, label %1440

1436:                                             ; preds = %1431
  %1437 = inttoptr i64 %146 to i64*
  %1438 = load i64, i64* %1437, align 8
  %1439 = add i64 %1438, 16
  br label %1440

1440:                                             ; preds = %1431, %1436
  %1441 = phi i64 [ %1439, %1436 ], [ %146, %1431 ]
  %1442 = inttoptr i64 %1441 to %"class.v8::internal::compiler::Node"**
  %1443 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1442, i64 1
  %1444 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1443, align 8
  %1445 = icmp eq %"class.v8::internal::compiler::Node"* %1444, %1432
  br i1 %1445, label %1460, label %1446

1446:                                             ; preds = %1440
  br i1 %1435, label %1449, label %1447

1447:                                             ; preds = %1446
  %1448 = bitcast %"class.v8::internal::compiler::Node"* %1 to %"struct.v8::internal::compiler::Node::Use"*
  br label %1452

1449:                                             ; preds = %1446
  %1450 = inttoptr i64 %146 to %"struct.v8::internal::compiler::Node::Use"**
  %1451 = load %"struct.v8::internal::compiler::Node::Use"*, %"struct.v8::internal::compiler::Node::Use"** %1450, align 8
  br label %1452

1452:                                             ; preds = %1449, %1447
  %1453 = phi %"struct.v8::internal::compiler::Node::Use"* [ %1448, %1447 ], [ %1451, %1449 ]
  %1454 = getelementptr inbounds %"struct.v8::internal::compiler::Node::Use", %"struct.v8::internal::compiler::Node::Use"* %1453, i64 -2
  %1455 = icmp eq %"class.v8::internal::compiler::Node"* %1444, null
  br i1 %1455, label %1457, label %1456

1456:                                             ; preds = %1452
  call void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1444, %"struct.v8::internal::compiler::Node::Use"* %1454) #10
  br label %1457

1457:                                             ; preds = %1456, %1452
  store %"class.v8::internal::compiler::Node"* %1432, %"class.v8::internal::compiler::Node"** %1443, align 8
  %1458 = icmp eq %"class.v8::internal::compiler::Node"* %1432, null
  br i1 %1458, label %1460, label %1459

1459:                                             ; preds = %1457
  call void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"* nonnull %1432, %"struct.v8::internal::compiler::Node::Use"* %1454) #10
  br label %1460

1460:                                             ; preds = %1440, %1457, %1459
  %1461 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1462 = call dereferenceable(24) %"class.v8::internal::compiler::ConstructParameters"* @_ZN2v88internal8compiler21ConstructParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1461) #10
  %1463 = getelementptr inbounds %"class.v8::internal::compiler::ConstructParameters", %"class.v8::internal::compiler::ConstructParameters"* %1462, i64 0, i32 0
  %1464 = load i32, i32* %1463, align 8
  %1465 = add i32 %1464, -3
  %1466 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler9JSInliner26CreateArtificialFrameStateEPNS1_4NodeENS1_10FrameStateEiNS0_14BytecodeOffsetENS1_14FrameStateTypeENS1_21SharedFunctionInfoRefES4_(%"class.v8::internal::compiler::JSInliner"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %669, i32 %1465, i32 2, i32 2, %"class.v8::internal::compiler::SharedFunctionInfoRef"* nonnull byval(%"class.v8::internal::compiler::SharedFunctionInfoRef") align 8 %217, %"class.v8::internal::compiler::Node"* %715)
  %1467 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1468 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1467, i64 0, i32 2
  %1469 = load i16, i16* %1468, align 8
  br label %1470

1470:                                             ; preds = %1460, %664
  %1471 = phi i16 [ %1469, %1460 ], [ %674, %664 ]
  %1472 = phi %"class.v8::internal::compiler::Node"* [ %1466, %1460 ], [ %669, %664 ]
  %1473 = phi %"class.v8::internal::compiler::Node"* [ %693, %1460 ], [ %671, %664 ]
  %1474 = icmp eq i16 %1471, 820
  br i1 %1474, label %1475, label %1582

1475:                                             ; preds = %1470
  %1476 = call zeroext i1 @_ZNK2v88internal8compiler21SharedFunctionInfoRef13language_modeEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* %217) #10
  br i1 %1476, label %1582, label %1477

1477:                                             ; preds = %1475
  %1478 = call zeroext i1 @_ZNK2v88internal8compiler21SharedFunctionInfoRef6nativeEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* %217) #10
  br i1 %1478, label %1582, label %1479

1479:                                             ; preds = %1477
  %1480 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1481 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1480, i64 0, i32 6
  %1482 = load i32, i32* %1481, align 8
  %1483 = icmp sgt i32 %1482, 0
  br i1 %1483, label %1485, label %1484, !prof !2

1484:                                             ; preds = %1479
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.19, i64 0, i64 0)) #9
  unreachable

1485:                                             ; preds = %1479
  %1486 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1480, i64 0, i32 5
  %1487 = load i32, i32* %1486, align 4
  %1488 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1480) #10
  %1489 = zext i1 %1488 to i32
  %1490 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1491 = call zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1490) #10
  %1492 = zext i1 %1491 to i32
  %1493 = add i32 %1487, %1489
  %1494 = add i32 %1493, %1492
  %1495 = load i32, i32* %141, align 4
  %1496 = and i32 %1495, 251658240
  %1497 = icmp eq i32 %1496, 251658240
  br i1 %1497, label %1498, label %1502

1498:                                             ; preds = %1485
  %1499 = inttoptr i64 %146 to i64*
  %1500 = load i64, i64* %1499, align 8
  %1501 = add i64 %1500, 16
  br label %1502

1502:                                             ; preds = %1485, %1498
  %1503 = phi i64 [ %1501, %1498 ], [ %146, %1485 ]
  %1504 = inttoptr i64 %1503 to %"class.v8::internal::compiler::Node"**
  %1505 = sext i32 %1494 to i64
  %1506 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1504, i64 %1505
  %1507 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1506, align 8
  %1508 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %40, align 8
  %1509 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1510 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1509, i64 0, i32 5
  %1511 = load i32, i32* %1510, align 4
  %1512 = icmp sgt i32 %1511, 1
  br i1 %1512, label %1514, label %1513, !prof !2

1513:                                             ; preds = %1502
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0)) #9
  unreachable

1514:                                             ; preds = %1502
  br i1 %1497, label %1515, label %1519

1515:                                             ; preds = %1514
  %1516 = inttoptr i64 %146 to i64*
  %1517 = load i64, i64* %1516, align 8
  %1518 = add i64 %1517, 16
  br label %1519

1519:                                             ; preds = %1514, %1515
  %1520 = phi i64 [ %1518, %1515 ], [ %146, %1514 ]
  %1521 = inttoptr i64 %1520 to %"class.v8::internal::compiler::Node"**
  %1522 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1521, i64 1
  %1523 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1522, align 8
  %1524 = call zeroext i1 @_ZN2v88internal8compiler14NodeProperties14CanBePrimitiveEPNS1_12JSHeapBrokerEPNS1_4NodeES6_(%"class.v8::internal::compiler::JSHeapBroker"* %1508, %"class.v8::internal::compiler::Node"* %1523, %"class.v8::internal::compiler::Node"* %1507) #10
  br i1 %1524, label %1525, label %1582

1525:                                             ; preds = %1519
  %1526 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1527 = call dereferenceable(24) %"class.v8::internal::compiler::CallParameters"* @_ZN2v88internal8compiler16CallParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1526) #10
  %1528 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1529 = bitcast %"class.v8::internal::compiler::JSGlobalProxyRef"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1529) #10
  %1530 = bitcast <2 x i64>* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1530) #10
  %1531 = load %"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::JSHeapBroker"** %40, align 8
  %1532 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1531, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %1533 = load i8, i8* %1532, align 8, !range !78
  %1534 = icmp eq i8 %1533, 1
  br i1 %1534, label %1536, label %1535, !prof !2

1535:                                             ; preds = %1525
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0)) #9
  unreachable

1536:                                             ; preds = %1525
  %1537 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1531, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %1538 = bitcast %"class.v8::internal::compiler::ObjectData"** %1537 to <2 x i64>*
  %1539 = load <2 x i64>, <2 x i64>* %1538, align 8
  store <2 x i64> %1539, <2 x i64>* %33, align 16
  %1540 = call { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler16NativeContextRef19global_proxy_objectEv(%"class.v8::internal::compiler::NativeContextRef"* nonnull %34) #10
  %1541 = getelementptr inbounds %"class.v8::internal::compiler::JSGlobalProxyRef", %"class.v8::internal::compiler::JSGlobalProxyRef"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1542 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %1540, 0
  store %"class.v8::internal::compiler::ObjectData"* %1542, %"class.v8::internal::compiler::ObjectData"** %1541, align 8
  %1543 = getelementptr inbounds %"class.v8::internal::compiler::JSGlobalProxyRef", %"class.v8::internal::compiler::JSGlobalProxyRef"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1544 = extractvalue { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } %1540, 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %1544, %"class.v8::internal::compiler::JSHeapBroker"** %1543, align 8
  %1545 = getelementptr inbounds %"class.v8::internal::compiler::JSGlobalProxyRef", %"class.v8::internal::compiler::JSGlobalProxyRef"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %1546 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph8ConstantERKNS1_9ObjectRefE(%"class.v8::internal::compiler::JSGraph"* %1528, %"class.v8::internal::compiler::ObjectRef"* nonnull dereferenceable(16) %1545) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1530) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1529) #10
  %1547 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %317, align 8
  %1548 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1547, i64 0, i32 0, i32 0
  %1549 = load %"class.v8::internal::compiler::Graph"*, %"class.v8::internal::compiler::Graph"** %1548, align 8
  %1550 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %1547, i64 0, i32 3
  %1551 = load %"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, %"class.v8::internal::compiler::SimplifiedOperatorBuilder"** %1550, align 8
  %1552 = getelementptr inbounds %"class.v8::internal::compiler::CallParameters", %"class.v8::internal::compiler::CallParameters"* %1527, i64 0, i32 0
  %1553 = load i32, i32* %1552, align 8
  %1554 = lshr i32 %1553, 30
  %1555 = call %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder15ConvertReceiverENS0_19ConvertReceiverModeE(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"* %1551, i32 %1554) #10
  %1556 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1557 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1556, i64 0, i32 5
  %1558 = load i32, i32* %1557, align 4
  %1559 = icmp sgt i32 %1558, 1
  br i1 %1559, label %1561, label %1560, !prof !2

1560:                                             ; preds = %1536
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.20, i64 0, i64 0)) #9
  unreachable

1561:                                             ; preds = %1536
  %1562 = load i32, i32* %141, align 4
  %1563 = and i32 %1562, 251658240
  %1564 = icmp eq i32 %1563, 251658240
  br i1 %1564, label %1565, label %1569

1565:                                             ; preds = %1561
  %1566 = inttoptr i64 %146 to i64*
  %1567 = load i64, i64* %1566, align 8
  %1568 = add i64 %1567, 16
  br label %1569

1569:                                             ; preds = %1561, %1565
  %1570 = phi i64 [ %1568, %1565 ], [ %146, %1561 ]
  %1571 = inttoptr i64 %1570 to %"class.v8::internal::compiler::Node"**
  %1572 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1571, i64 1
  %1573 = bitcast %"class.v8::internal::compiler::Node"** %1572 to i64*
  %1574 = load i64, i64* %1573, align 8
  %1575 = bitcast %"struct.std::__1::array.1652"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1575) #10
  %1576 = getelementptr inbounds %"struct.std::__1::array.1652", %"struct.std::__1::array.1652"* %14, i64 0, i32 0, i64 0
  %1577 = bitcast %"struct.std::__1::array.1652"* %14 to i64*
  store i64 %1574, i64* %1577, align 8
  %1578 = getelementptr inbounds %"struct.std::__1::array.1652", %"struct.std::__1::array.1652"* %14, i64 0, i32 0, i64 1
  store %"class.v8::internal::compiler::Node"* %1546, %"class.v8::internal::compiler::Node"** %1578, align 8
  %1579 = getelementptr inbounds %"struct.std::__1::array.1652", %"struct.std::__1::array.1652"* %14, i64 0, i32 0, i64 2
  store %"class.v8::internal::compiler::Node"* %1507, %"class.v8::internal::compiler::Node"** %1579, align 8
  %1580 = getelementptr inbounds %"struct.std::__1::array.1652", %"struct.std::__1::array.1652"* %14, i64 0, i32 0, i64 3
  store %"class.v8::internal::compiler::Node"* %363, %"class.v8::internal::compiler::Node"** %1580, align 8
  %1581 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler5Graph7NewNodeEPKNS1_8OperatorEiPKPNS1_4NodeEb(%"class.v8::internal::compiler::Graph"* %1549, %"class.v8::internal::compiler::Operator"* %1555, i32 4, %"class.v8::internal::compiler::Node"** nonnull %1576, i1 zeroext false) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1575) #10
  call void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1581, i32 1) #10
  call void @_ZN2v88internal8compiler14NodeProperties18ReplaceEffectInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1581, i32 0) #10
  br label %1582

1582:                                             ; preds = %1475, %1519, %1569, %1477, %1470
  %1583 = call i32 @_ZNK2v88internal8compiler21SharedFunctionInfoRef31internal_formal_parameter_countEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"* %217) #10
  %1584 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1585 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1584, i64 0, i32 2
  %1586 = load i16, i16* %1585, align 8
  %1587 = icmp eq i16 %1586, 820
  br i1 %1587, label %1588, label %1593

1588:                                             ; preds = %1582
  %1589 = call dereferenceable(24) %"class.v8::internal::compiler::CallParameters"* @_ZN2v88internal8compiler16CallParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1584) #10
  %1590 = getelementptr inbounds %"class.v8::internal::compiler::CallParameters", %"class.v8::internal::compiler::CallParameters"* %1589, i64 0, i32 0
  %1591 = load i32, i32* %1590, align 8
  %1592 = and i32 %1591, 134217727
  br label %1597

1593:                                             ; preds = %1582
  %1594 = call dereferenceable(24) %"class.v8::internal::compiler::ConstructParameters"* @_ZN2v88internal8compiler21ConstructParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1584) #10
  %1595 = getelementptr inbounds %"class.v8::internal::compiler::ConstructParameters", %"class.v8::internal::compiler::ConstructParameters"* %1594, i64 0, i32 0
  %1596 = load i32, i32* %1595, align 8
  br label %1597

1597:                                             ; preds = %1588, %1593
  %1598 = phi i32 [ %1592, %1588 ], [ %1596, %1593 ]
  %1599 = add i32 %1598, -3
  %1600 = icmp eq i32 %1599, %1583
  br i1 %1600, label %1619, label %1601

1601:                                             ; preds = %1597
  %1602 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1603 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1602, i64 0, i32 2
  %1604 = load i16, i16* %1603, align 8
  %1605 = icmp eq i16 %1604, 820
  br i1 %1605, label %1606, label %1611

1606:                                             ; preds = %1601
  %1607 = call dereferenceable(24) %"class.v8::internal::compiler::CallParameters"* @_ZN2v88internal8compiler16CallParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1602) #10
  %1608 = getelementptr inbounds %"class.v8::internal::compiler::CallParameters", %"class.v8::internal::compiler::CallParameters"* %1607, i64 0, i32 0
  %1609 = load i32, i32* %1608, align 8
  %1610 = and i32 %1609, 134217727
  br label %1615

1611:                                             ; preds = %1601
  %1612 = call dereferenceable(24) %"class.v8::internal::compiler::ConstructParameters"* @_ZN2v88internal8compiler21ConstructParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1602) #10
  %1613 = getelementptr inbounds %"class.v8::internal::compiler::ConstructParameters", %"class.v8::internal::compiler::ConstructParameters"* %1612, i64 0, i32 0
  %1614 = load i32, i32* %1613, align 8
  br label %1615

1615:                                             ; preds = %1606, %1611
  %1616 = phi i32 [ %1610, %1606 ], [ %1614, %1611 ]
  %1617 = add i32 %1616, -3
  %1618 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler9JSInliner26CreateArtificialFrameStateEPNS1_4NodeENS1_10FrameStateEiNS0_14BytecodeOffsetENS1_14FrameStateTypeENS1_21SharedFunctionInfoRefES4_(%"class.v8::internal::compiler::JSInliner"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1472, i32 %1617, i32 -1, i32 1, %"class.v8::internal::compiler::SharedFunctionInfoRef"* nonnull byval(%"class.v8::internal::compiler::SharedFunctionInfoRef") align 8 %217, %"class.v8::internal::compiler::Node"* null)
  br label %1619

1619:                                             ; preds = %1597, %1615
  %1620 = phi %"class.v8::internal::compiler::Node"* [ %1472, %1597 ], [ %1618, %1615 ]
  %1621 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %22, align 8
  %1622 = load %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %21, align 8
  %1623 = load %"class.v8::internal::compiler::Operator"*, %"class.v8::internal::compiler::Operator"** %54, align 8
  %1624 = getelementptr inbounds %"class.v8::internal::compiler::Operator", %"class.v8::internal::compiler::Operator"* %1623, i64 0, i32 2
  %1625 = load i16, i16* %1624, align 8
  %1626 = icmp eq i16 %1625, 820
  br i1 %1626, label %1627, label %1632

1627:                                             ; preds = %1619
  %1628 = call dereferenceable(24) %"class.v8::internal::compiler::CallParameters"* @_ZN2v88internal8compiler16CallParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1623) #10
  %1629 = getelementptr inbounds %"class.v8::internal::compiler::CallParameters", %"class.v8::internal::compiler::CallParameters"* %1628, i64 0, i32 0
  %1630 = load i32, i32* %1629, align 8
  %1631 = and i32 %1630, 134217727
  br label %1636

1632:                                             ; preds = %1619
  %1633 = call dereferenceable(24) %"class.v8::internal::compiler::ConstructParameters"* @_ZN2v88internal8compiler21ConstructParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"* %1623) #10
  %1634 = getelementptr inbounds %"class.v8::internal::compiler::ConstructParameters", %"class.v8::internal::compiler::ConstructParameters"* %1633, i64 0, i32 0
  %1635 = load i32, i32* %1634, align 8
  br label %1636

1636:                                             ; preds = %1627, %1632
  %1637 = phi i32 [ %1631, %1627 ], [ %1635, %1632 ]
  %1638 = add i32 %1637, -3
  %1639 = call %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler9JSInliner10InlineCallEPNS1_4NodeES4_S4_S4_NS1_9StartNodeES4_S4_RKNS0_10ZoneVectorIS4_EEi(%"class.v8::internal::compiler::JSInliner"* %0, %"class.v8::internal::compiler::Node"* %1, %"class.v8::internal::compiler::Node"* %1473, %"class.v8::internal::compiler::Node"* %1621, %"class.v8::internal::compiler::Node"* %1620, %"class.v8::internal::compiler::Node"* %363, %"class.v8::internal::compiler::Node"* %365, %"class.v8::internal::compiler::Node"* %1622, %"class.v8::internal::ZoneVector.1400"* nonnull dereferenceable(32) %30, i32 %1638)
  %1640 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 0
  %1641 = load %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"*** %1640, align 8
  %1642 = icmp eq %"class.v8::internal::compiler::Node"** %1641, null
  br i1 %1642, label %1647, label %1643

1643:                                             ; preds = %1636
  %1644 = ptrtoint %"class.v8::internal::compiler::Node"** %1641 to i64
  %1645 = getelementptr inbounds %"class.v8::internal::ZoneVector.1400", %"class.v8::internal::ZoneVector.1400"* %30, i64 0, i32 0, i32 0, i32 1
  %1646 = bitcast %"class.v8::internal::compiler::Node"*** %1645 to i64*
  store i64 %1644, i64* %1646, align 8
  br label %1647

1647:                                             ; preds = %1636, %1643
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %367) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %304) #10
  br label %1648

1648:                                             ; preds = %251, %252, %1647
  %1649 = phi %"class.v8::internal::compiler::Node"* [ %1639, %1647 ], [ null, %252 ], [ null, %251 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %239) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %238) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #10
  br label %1650

1650:                                             ; preds = %169, %166, %107, %104, %70, %67, %1648
  %1651 = phi %"class.v8::internal::compiler::Node"* [ %1649, %1648 ], [ null, %67 ], [ null, %70 ], [ null, %104 ], [ null, %107 ], [ null, %166 ], [ null, %169 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #10
  br label %1652

1652:                                             ; preds = %2, %1650
  %1653 = phi %"class.v8::internal::compiler::Node"* [ %1651, %1650 ], [ null, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #10
  ret %"class.v8::internal::compiler::Node"* %1653
}

declare zeroext i8 @_ZNK2v88internal8compiler21SharedFunctionInfoRef4kindEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal8compiler21SharedFunctionInfoRef11is_compiledEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"*) local_unnamed_addr #2

declare void @_ZN2v88internal18SharedFunctionInfo30EnsureSourcePositionsAvailableEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal8compiler12JSHeapBroker26IsSerializedForCompilationERKNS1_21SharedFunctionInfoRefERKNS1_17FeedbackVectorRefE(%"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::SharedFunctionInfoRef"* dereferenceable(16), %"class.v8::internal::compiler::FeedbackVectorRef"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNK2v88internal8compiler15FeedbackCellRef5valueEv(%"class.v8::base::Optional.1601"* sret, %"class.v8::internal::compiler::FeedbackCellRef"*) local_unnamed_addr #2

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler21SharedFunctionInfoRef16GetBytecodeArrayEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"*) local_unnamed_addr #2

declare i32 @_ZN2v88internal24OptimizedCompilationInfo18AddInlinedFunctionENS0_6HandleINS0_18SharedFunctionInfoEEENS2_INS0_13BytecodeArrayEEENS0_14SourcePositionE(%"class.v8::internal::OptimizedCompilationInfo"*, i64*, i64*, i64) local_unnamed_addr #2

declare i64* @_ZNK2v88internal8compiler16BytecodeArrayRef6objectEv(%"class.v8::internal::compiler::BytecodeArrayRef"*) local_unnamed_addr #2

declare i64 @_ZNK2v88internal8compiler19SourcePositionTable17GetSourcePositionEPNS1_4NodeE(%"class.v8::internal::compiler::SourcePositionTable"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler22BuildGraphFromBytecodeEPNS1_12JSHeapBrokerEPNS0_4ZoneERKNS1_21SharedFunctionInfoRefERKNS1_15FeedbackCellRefENS0_14BytecodeOffsetEPNS1_7JSGraphERKNS1_13CallFrequencyEPNS1_19SourcePositionTableEiNS0_8CodeKindENS_4base5FlagsINS1_24BytecodeGraphBuilderFlagEiEEPNS0_11TickCounterERKNS1_15ObserveNodeInfoE(%"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::Zone"*, %"class.v8::internal::compiler::SharedFunctionInfoRef"* dereferenceable(16), %"class.v8::internal::compiler::FeedbackCellRef"* dereferenceable(16), i32, %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::CallFrequency"* dereferenceable(4), %"class.v8::internal::compiler::SourcePositionTable"*, i32, i32, i32, %"class.v8::internal::TickCounter"*, %"struct.v8::internal::compiler::ObserveNodeInfo"* dereferenceable(16)) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler7JSGraph15TheHoleConstantEv(%"class.v8::internal::compiler::JSGraph"*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.v8::internal::compiler::JSOperatorBuilder"* @_ZNK2v88internal8compiler9JSInliner10javascriptEv(%"class.v8::internal::compiler::JSInliner"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::compiler::JSInliner", %"class.v8::internal::compiler::JSInliner"* %0, i64 0, i32 3
  %3 = load %"class.v8::internal::compiler::JSGraph"*, %"class.v8::internal::compiler::JSGraph"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::compiler::JSGraph", %"class.v8::internal::compiler::JSGraph"* %3, i64 0, i32 2
  %5 = load %"class.v8::internal::compiler::JSOperatorBuilder"*, %"class.v8::internal::compiler::JSOperatorBuilder"** %4, align 8
  ret %"class.v8::internal::compiler::JSOperatorBuilder"* %5
}

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler17JSOperatorBuilder6CreateEv(%"class.v8::internal::compiler::JSOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder4DeadEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder16ObjectIsReceiverEv(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6SelectENS0_21MachineRepresentationENS1_10BranchHintE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext, i8 zeroext) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Node"* @_ZN2v88internal8compiler14NodeProperties31FindSuccessfulControlProjectionEPNS1_4NodeE(%"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6BranchENS1_10BranchHintENS1_13IsSafetyCheckE(%"class.v8::internal::compiler::CommonOperatorBuilder"*, i8 zeroext, i8 zeroext) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder6IfTrueEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder7IfFalseEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler17JSOperatorBuilder11CallRuntimeENS0_7Runtime10FunctionIdE(%"class.v8::internal::compiler::JSOperatorBuilder"*, i32) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler21CommonOperatorBuilder5ThrowEv(%"class.v8::internal::compiler::CommonOperatorBuilder"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal8compiler21SharedFunctionInfoRef13language_modeEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal8compiler21SharedFunctionInfoRef6nativeEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler14NodeProperties14CanBePrimitiveEPNS1_12JSHeapBrokerEPNS1_4NodeES6_(%"class.v8::internal::compiler::JSHeapBroker"*, %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*) local_unnamed_addr #2

declare dereferenceable(24) %"class.v8::internal::compiler::CallParameters"* @_ZN2v88internal8compiler16CallParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare { %"class.v8::internal::compiler::ObjectData"*, %"class.v8::internal::compiler::JSHeapBroker"* } @_ZNK2v88internal8compiler16NativeContextRef19global_proxy_objectEv(%"class.v8::internal::compiler::NativeContextRef"*) local_unnamed_addr #2

declare %"class.v8::internal::compiler::Operator"* @_ZN2v88internal8compiler25SimplifiedOperatorBuilder15ConvertReceiverENS0_19ConvertReceiverModeE(%"class.v8::internal::compiler::SimplifiedOperatorBuilder"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler14NodeProperties17ReplaceValueInputEPNS1_4NodeES4_i(%"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"*, i32) local_unnamed_addr #2

declare i32 @_ZNK2v88internal8compiler21SharedFunctionInfoRef31internal_formal_parameter_countEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties15HasContextInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal8compiler18OperatorProperties18HasFrameStateInputEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node9RemoveUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #2

declare void @_ZN2v88internal8compiler4Node9AppendUseEPNS2_3UseE(%"class.v8::internal::compiler::Node"*, %"struct.v8::internal::compiler::Node::Use"*) local_unnamed_addr #2

declare void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"*, i8**, %struct._IO_FILE*) unnamed_addr #2

declare %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #10
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #10
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #10
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #10
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #10
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #10
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #10
  tail call void @_ZdlPv(i8* %8) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %5, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %6) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %7 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %7) #10
  %8 = bitcast %"class.v8::internal::StdoutStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %8, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %9 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %9) #10
  %10 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD1Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #10
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal12StdoutStreamD0Ev(%"class.v8::internal::StdoutStream"*) unnamed_addr #4 comdat align 2 {
  %2 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::StdoutStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 88
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.v8::base::RecursiveMutex"**
  %14 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %13, align 8
  tail call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %14) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 8
  %16 = bitcast i8* %15 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %16) #10
  %17 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %17, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %18 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %18) #10
  tail call void @_ZdlPv(i8* %8) #11
  ret void
}

declare void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPN2v88internal8compiler4NodeENS2_13ZoneAllocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.1401"*, %"class.v8::internal::compiler::Node"**, %"class.v8::internal::compiler::Node"**) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.v8::internal::compiler::Node"** %1 to i64
  %5 = ptrtoint %"class.v8::internal::compiler::Node"** %2 to i64
  %6 = sub i64 %5, %4
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector.1401", %"class.std::__1::vector.1401"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.v8::internal::compiler::Node"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.1401"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.v8::internal::compiler::Node"**
  br i1 %15, label %124, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.1401", %"class.std::__1::vector.1401"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.v8::internal::compiler::Node"*** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %1, i64 %22
  %25 = select i1 %23, %"class.v8::internal::compiler::Node"** %24, %"class.v8::internal::compiler::Node"** %2
  %26 = ptrtoint %"class.v8::internal::compiler::Node"** %25 to i64
  %27 = sub i64 %26, %4
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"class.v8::internal::compiler::Node"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %122

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"class.v8::internal::compiler::Node"** %25, %2
  br i1 %36, label %120, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to i64*
  %39 = xor i64 %22, -1
  %40 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, i64 %39
  %41 = ptrtoint %"class.v8::internal::compiler::Node"** %40 to i64
  %42 = sub i64 %41, %4
  %43 = lshr i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %64, label %47

47:                                               ; preds = %37, %47
  %48 = phi i64 [ %57, %47 ], [ %35, %37 ]
  %49 = phi i64* [ %58, %47 ], [ %38, %37 ]
  %50 = phi %"class.v8::internal::compiler::Node"** [ %54, %47 ], [ %24, %37 ]
  %51 = phi i64 [ %59, %47 ], [ %45, %37 ]
  %52 = bitcast %"class.v8::internal::compiler::Node"** %50 to i64*
  %53 = load i64, i64* %52, align 8
  store i64 %53, i64* %49, align 8
  %54 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %50, i64 1
  %55 = inttoptr i64 %48 to %"class.v8::internal::compiler::Node"**
  %56 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %55, i64 1
  %57 = ptrtoint %"class.v8::internal::compiler::Node"** %56 to i64
  %58 = bitcast %"class.v8::internal::compiler::Node"** %56 to i64*
  %59 = add i64 %51, -1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %47, !llvm.loop !111

61:                                               ; preds = %47
  %62 = ptrtoint %"class.v8::internal::compiler::Node"** %56 to i64
  %63 = bitcast %"class.v8::internal::compiler::Node"** %56 to i64*
  br label %64

64:                                               ; preds = %37, %61
  %65 = phi %"class.v8::internal::compiler::Node"** [ undef, %37 ], [ %56, %61 ]
  %66 = phi i64 [ %35, %37 ], [ %62, %61 ]
  %67 = phi i64* [ %38, %37 ], [ %63, %61 ]
  %68 = phi %"class.v8::internal::compiler::Node"** [ %24, %37 ], [ %54, %61 ]
  %69 = icmp ult i64 %42, 56
  br i1 %69, label %117, label %70

70:                                               ; preds = %64
  %71 = inttoptr i64 %66 to %"class.v8::internal::compiler::Node"**
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi %"class.v8::internal::compiler::Node"** [ %71, %70 ], [ %114, %72 ]
  %74 = phi i64* [ %67, %70 ], [ %116, %72 ]
  %75 = phi %"class.v8::internal::compiler::Node"** [ %68, %70 ], [ %113, %72 ]
  %76 = bitcast %"class.v8::internal::compiler::Node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  %78 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 1
  %79 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 1
  %80 = bitcast %"class.v8::internal::compiler::Node"** %79 to i64*
  %81 = bitcast %"class.v8::internal::compiler::Node"** %78 to i64*
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %80, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 2
  %84 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 2
  %85 = bitcast %"class.v8::internal::compiler::Node"** %84 to i64*
  %86 = bitcast %"class.v8::internal::compiler::Node"** %83 to i64*
  %87 = load i64, i64* %86, align 8
  store i64 %87, i64* %85, align 8
  %88 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 3
  %89 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 3
  %90 = bitcast %"class.v8::internal::compiler::Node"** %89 to i64*
  %91 = bitcast %"class.v8::internal::compiler::Node"** %88 to i64*
  %92 = load i64, i64* %91, align 8
  store i64 %92, i64* %90, align 8
  %93 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 4
  %94 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 4
  %95 = bitcast %"class.v8::internal::compiler::Node"** %94 to i64*
  %96 = bitcast %"class.v8::internal::compiler::Node"** %93 to i64*
  %97 = load i64, i64* %96, align 8
  store i64 %97, i64* %95, align 8
  %98 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 5
  %99 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 5
  %100 = bitcast %"class.v8::internal::compiler::Node"** %99 to i64*
  %101 = bitcast %"class.v8::internal::compiler::Node"** %98 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %100, align 8
  %103 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 6
  %104 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 6
  %105 = bitcast %"class.v8::internal::compiler::Node"** %104 to i64*
  %106 = bitcast %"class.v8::internal::compiler::Node"** %103 to i64*
  %107 = load i64, i64* %106, align 8
  store i64 %107, i64* %105, align 8
  %108 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 7
  %109 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 7
  %110 = bitcast %"class.v8::internal::compiler::Node"** %109 to i64*
  %111 = bitcast %"class.v8::internal::compiler::Node"** %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %110, align 8
  %113 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %75, i64 8
  %114 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %73, i64 8
  %115 = icmp eq %"class.v8::internal::compiler::Node"** %113, %2
  %116 = bitcast %"class.v8::internal::compiler::Node"** %114 to i64*
  br i1 %115, label %117, label %72

117:                                              ; preds = %72, %64
  %118 = phi %"class.v8::internal::compiler::Node"** [ %65, %64 ], [ %114, %72 ]
  %119 = ptrtoint %"class.v8::internal::compiler::Node"** %118 to i64
  br label %120

120:                                              ; preds = %117, %34
  %121 = phi i64 [ %35, %34 ], [ %119, %117 ]
  store i64 %121, i64* %19, align 8
  br label %245

122:                                              ; preds = %33
  %123 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %16, i64 %28
  store %"class.v8::internal::compiler::Node"** %123, %"class.v8::internal::compiler::Node"*** %18, align 8
  br label %245

124:                                              ; preds = %3
  %125 = getelementptr inbounds %"class.std::__1::vector.1401", %"class.std::__1::vector.1401"* %0, i64 0, i32 0, i32 0
  %126 = icmp eq i64 %12, 0
  br i1 %126, label %129, label %127

127:                                              ; preds = %124
  %128 = bitcast %"class.std::__1::vector.1401"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %128, i8 0, i64 24, i1 false) #10
  br label %129

129:                                              ; preds = %124, %127
  %130 = phi i64 [ %10, %124 ], [ 0, %127 ]
  %131 = icmp ugt i64 %7, 268435455
  br i1 %131, label %132, label %134

132:                                              ; preds = %129
  %133 = bitcast %"class.std::__1::vector.1401"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %133) #9
  unreachable

134:                                              ; preds = %129
  %135 = ashr exact i64 %130, 3
  %136 = icmp ult i64 %135, 134217727
  br i1 %136, label %137, label %144

137:                                              ; preds = %134
  %138 = ashr exact i64 %130, 2
  %139 = icmp ult i64 %138, %7
  br i1 %139, label %144, label %140

140:                                              ; preds = %137
  %141 = icmp ugt i64 %138, 268435455
  br i1 %141, label %142, label %144

142:                                              ; preds = %140
  %143 = bitcast %"class.std::__1::vector.1401"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %143) #9
  unreachable

144:                                              ; preds = %137, %134, %140
  %145 = phi i64 [ %138, %140 ], [ 268435455, %134 ], [ %7, %137 ]
  %146 = getelementptr inbounds %"class.std::__1::vector.1401", %"class.std::__1::vector.1401"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %147 = load %"class.v8::internal::Zone"*, %"class.v8::internal::Zone"** %146, align 8
  %148 = shl i64 %145, 3
  %149 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %147, i64 0, i32 2
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Zone", %"class.v8::internal::Zone"* %147, i64 0, i32 3
  %152 = load i64, i64* %151, align 8
  %153 = sub i64 %152, %150
  %154 = icmp ugt i64 %148, %153
  br i1 %154, label %155, label %157, !prof !3

155:                                              ; preds = %144
  %156 = tail call i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"* %147, i64 %148) #10
  br label %159

157:                                              ; preds = %144
  %158 = add i64 %150, %148
  store i64 %158, i64* %149, align 8
  br label %159

159:                                              ; preds = %155, %157
  %160 = phi i64 [ %156, %155 ], [ %150, %157 ]
  %161 = inttoptr i64 %160 to %"class.v8::internal::compiler::Node"**
  %162 = getelementptr inbounds %"class.std::__1::vector.1401", %"class.std::__1::vector.1401"* %0, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::Node"** %161, %"class.v8::internal::compiler::Node"*** %162, align 8
  store %"class.v8::internal::compiler::Node"** %161, %"class.v8::internal::compiler::Node"*** %125, align 8
  %163 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %161, i64 %145
  store %"class.v8::internal::compiler::Node"** %163, %"class.v8::internal::compiler::Node"*** %8, align 8
  %164 = bitcast %"class.v8::internal::compiler::Node"*** %162 to i64*
  %165 = icmp eq %"class.v8::internal::compiler::Node"** %1, %2
  br i1 %165, label %243, label %166

166:                                              ; preds = %159
  %167 = inttoptr i64 %160 to i64*
  %168 = getelementptr %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %2, i64 -1
  %169 = ptrtoint %"class.v8::internal::compiler::Node"** %168 to i64
  %170 = sub i64 %169, %4
  %171 = lshr i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %189, label %175

175:                                              ; preds = %166, %175
  %176 = phi %"class.v8::internal::compiler::Node"** [ %183, %175 ], [ %161, %166 ]
  %177 = phi i64* [ %184, %175 ], [ %167, %166 ]
  %178 = phi %"class.v8::internal::compiler::Node"** [ %182, %175 ], [ %1, %166 ]
  %179 = phi i64 [ %185, %175 ], [ %173, %166 ]
  %180 = bitcast %"class.v8::internal::compiler::Node"** %178 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %177, align 8
  %182 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %178, i64 1
  %183 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %176, i64 1
  %184 = bitcast %"class.v8::internal::compiler::Node"** %183 to i64*
  %185 = add i64 %179, -1
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %187, label %175, !llvm.loop !112

187:                                              ; preds = %175
  %188 = bitcast %"class.v8::internal::compiler::Node"** %183 to i64*
  br label %189

189:                                              ; preds = %166, %187
  %190 = phi %"class.v8::internal::compiler::Node"** [ undef, %166 ], [ %183, %187 ]
  %191 = phi %"class.v8::internal::compiler::Node"** [ %161, %166 ], [ %183, %187 ]
  %192 = phi i64* [ %167, %166 ], [ %188, %187 ]
  %193 = phi %"class.v8::internal::compiler::Node"** [ %1, %166 ], [ %182, %187 ]
  %194 = icmp ult i64 %170, 56
  br i1 %194, label %240, label %195

195:                                              ; preds = %189, %195
  %196 = phi %"class.v8::internal::compiler::Node"** [ %237, %195 ], [ %191, %189 ]
  %197 = phi i64* [ %239, %195 ], [ %192, %189 ]
  %198 = phi %"class.v8::internal::compiler::Node"** [ %236, %195 ], [ %193, %189 ]
  %199 = bitcast %"class.v8::internal::compiler::Node"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  store i64 %200, i64* %197, align 8
  %201 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %198, i64 1
  %202 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 1
  %203 = bitcast %"class.v8::internal::compiler::Node"** %202 to i64*
  %204 = bitcast %"class.v8::internal::compiler::Node"** %201 to i64*
  %205 = load i64, i64* %204, align 8
  store i64 %205, i64* %203, align 8
  %206 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %198, i64 2
  %207 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 2
  %208 = bitcast %"class.v8::internal::compiler::Node"** %207 to i64*
  %209 = bitcast %"class.v8::internal::compiler::Node"** %206 to i64*
  %210 = load i64, i64* %209, align 8
  store i64 %210, i64* %208, align 8
  %211 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %198, i64 3
  %212 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 3
  %213 = bitcast %"class.v8::internal::compiler::Node"** %212 to i64*
  %214 = bitcast %"class.v8::internal::compiler::Node"** %211 to i64*
  %215 = load i64, i64* %214, align 8
  store i64 %215, i64* %213, align 8
  %216 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %198, i64 4
  %217 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 4
  %218 = bitcast %"class.v8::internal::compiler::Node"** %217 to i64*
  %219 = bitcast %"class.v8::internal::compiler::Node"** %216 to i64*
  %220 = load i64, i64* %219, align 8
  store i64 %220, i64* %218, align 8
  %221 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %198, i64 5
  %222 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 5
  %223 = bitcast %"class.v8::internal::compiler::Node"** %222 to i64*
  %224 = bitcast %"class.v8::internal::compiler::Node"** %221 to i64*
  %225 = load i64, i64* %224, align 8
  store i64 %225, i64* %223, align 8
  %226 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %198, i64 6
  %227 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 6
  %228 = bitcast %"class.v8::internal::compiler::Node"** %227 to i64*
  %229 = bitcast %"class.v8::internal::compiler::Node"** %226 to i64*
  %230 = load i64, i64* %229, align 8
  store i64 %230, i64* %228, align 8
  %231 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %198, i64 7
  %232 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 7
  %233 = bitcast %"class.v8::internal::compiler::Node"** %232 to i64*
  %234 = bitcast %"class.v8::internal::compiler::Node"** %231 to i64*
  %235 = load i64, i64* %234, align 8
  store i64 %235, i64* %233, align 8
  %236 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %198, i64 8
  %237 = getelementptr inbounds %"class.v8::internal::compiler::Node"*, %"class.v8::internal::compiler::Node"** %196, i64 8
  %238 = icmp eq %"class.v8::internal::compiler::Node"** %236, %2
  %239 = bitcast %"class.v8::internal::compiler::Node"** %237 to i64*
  br i1 %238, label %240, label %195

240:                                              ; preds = %195, %189
  %241 = phi %"class.v8::internal::compiler::Node"** [ %190, %189 ], [ %237, %195 ]
  %242 = ptrtoint %"class.v8::internal::compiler::Node"** %241 to i64
  br label %243

243:                                              ; preds = %240, %159
  %244 = phi i64 [ %160, %159 ], [ %242, %240 ]
  store i64 %244, i64* %164, align 8
  br label %245

245:                                              ; preds = %120, %122, %243
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal4Zone9NewExpandEm(%"class.v8::internal::Zone"*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.v8::internal::compiler::ConstructParameters"* @_ZN2v88internal8compiler21ConstructParametersOfEPKNS1_8OperatorE(%"class.v8::internal::compiler::Operator"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal8compiler21SharedFunctionInfoRef20construct_as_builtinEv(%"class.v8::internal::compiler::SharedFunctionInfoRef"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !78
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #11
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #10
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #6

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10TryMakeRefINS0_10HeapObjectEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1639"* noalias sret, %"class.v8::internal::compiler::JSHeapBroker"*, i64*, i32) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = alloca %"class.v8::internal::StdoutStream", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.v8::internal::Brief", align 8
  %9 = alloca %"class.v8::internal::compiler::HeapObjectRef", align 8
  %10 = tail call %"class.v8::internal::compiler::ObjectData"* @_ZN2v88internal8compiler12JSHeapBroker18TryGetOrCreateDataENS0_6HandleINS0_6ObjectEEENS_4base5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::internal::compiler::JSHeapBroker"* %1, i64* %2, i32 %3) #10
  %11 = icmp eq %"class.v8::internal::compiler::ObjectData"* %10, null
  br i1 %11, label %12, label %79

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1, i64 0, i32 7
  %14 = load i8, i8* %13, align 4, !range !78
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %77, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.v8::internal::OFStream"*
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %19, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %20) #10
  %21 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %18, align 8
  %22 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %23 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %22, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %22) #10
  %24 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  call void @_ZNK2v88internal8compiler12JSHeapBroker5TraceEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.v8::internal::compiler::JSHeapBroker"* %1) #10
  %25 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.std::__1::basic_ostream"*
  %26 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %28 to i64
  %35 = select i1 %29, i8* %31, i8* %24
  %36 = select i1 %29, i64 %33, i64 %34
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* %35, i64 %36) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i64 8) #10
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), i64 15) #10
  %40 = bitcast %"struct.v8::internal::Brief"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = load i64, i64* %2, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %8, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %8) #10
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #10
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.28, i64 0, i64 0), i64 38) #10
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %25, i32 598) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0), i64 1) #10
  %49 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr i8, i8* %50, i64 -24
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i8, i8* %17, i64 %53
  %55 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  %56 = bitcast i8* %54 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %56) #10
  %57 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %5, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %58 = bitcast %"class.std::__1::locale::facet"* %57 to %"class.std::__1::ctype"*
  %59 = bitcast %"class.std::__1::locale::facet"* %57 to i8 (%"class.std::__1::ctype"*, i8)***
  %60 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %59, align 8
  %61 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %60, i64 7
  %62 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %61, align 8
  %63 = call signext i8 %62(%"class.std::__1::ctype"* %58, i8 signext 10) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %25, i8 signext %63) #10
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  %66 = load i8, i8* %27, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %16
  %69 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %16, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %71 = bitcast %"class.v8::internal::StdoutStream"* %6 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2
  %73 = bitcast %"class.std::__1::basic_ios.base"* %72 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %74 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %74) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %75) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %25, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %76 = bitcast %"class.std::__1::basic_ios.base"* %72 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %76) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %17) #10
  br label %77

77:                                               ; preds = %12, %70
  %78 = getelementptr inbounds %"class.v8::base::Optional.1639", %"class.v8::base::Optional.1639"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false)
  br label %90

79:                                               ; preds = %4
  %80 = bitcast %"class.v8::internal::compiler::HeapObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #10
  %81 = getelementptr inbounds %"class.v8::internal::compiler::HeapObjectRef", %"class.v8::internal::compiler::HeapObjectRef"* %9, i64 0, i32 0
  %82 = getelementptr inbounds %"class.v8::internal::compiler::HeapObjectRef", %"class.v8::internal::compiler::HeapObjectRef"* %9, i64 0, i32 0, i32 0
  store %"class.v8::internal::compiler::ObjectData"* %10, %"class.v8::internal::compiler::ObjectData"** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::HeapObjectRef", %"class.v8::internal::compiler::HeapObjectRef"* %9, i64 0, i32 0, i32 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %1, %"class.v8::internal::compiler::JSHeapBroker"** %83, align 8
  %84 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef12IsHeapObjectEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %81) #10
  br i1 %84, label %86, label %85, !prof !2

85:                                               ; preds = %79
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0)) #9
  unreachable

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.v8::base::Optional.1639", %"class.v8::base::Optional.1639"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %87, align 8
  %88 = getelementptr inbounds %"class.v8::base::Optional.1639", %"class.v8::base::Optional.1639"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.v8::internal::compiler::HeapObjectRef"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %80, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #10
  br label %90

90:                                               ; preds = %86, %77
  ret void
}

declare %"class.v8::internal::compiler::ObjectData"* @_ZN2v88internal8compiler12JSHeapBroker18TryGetOrCreateDataENS0_6HandleINS0_6ObjectEEENS_4base5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::internal::compiler::JSHeapBroker"*, i64*, i32) local_unnamed_addr #2

declare void @_ZNK2v88internal8compiler12JSHeapBroker5TraceEv(%"class.std::__1::basic_string"* sret, %"class.v8::internal::compiler::JSHeapBroker"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::Brief"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal8compiler9ObjectRef12IsHeapObjectEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10TryMakeRefINS0_12FeedbackCellEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1646"* noalias sret, %"class.v8::internal::compiler::JSHeapBroker"*, i64*, i32) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = alloca %"class.v8::internal::StdoutStream", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.v8::internal::Brief", align 8
  %9 = alloca %"class.v8::internal::compiler::FeedbackCellRef", align 8
  %10 = tail call %"class.v8::internal::compiler::ObjectData"* @_ZN2v88internal8compiler12JSHeapBroker18TryGetOrCreateDataENS0_6HandleINS0_6ObjectEEENS_4base5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::internal::compiler::JSHeapBroker"* %1, i64* %2, i32 %3) #10
  %11 = icmp eq %"class.v8::internal::compiler::ObjectData"* %10, null
  br i1 %11, label %12, label %79

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1, i64 0, i32 7
  %14 = load i8, i8* %13, align 4, !range !78
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %77, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.v8::internal::OFStream"*
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %19, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %20) #10
  %21 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %18, align 8
  %22 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %23 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %22, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %22) #10
  %24 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  call void @_ZNK2v88internal8compiler12JSHeapBroker5TraceEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.v8::internal::compiler::JSHeapBroker"* %1) #10
  %25 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.std::__1::basic_ostream"*
  %26 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %28 to i64
  %35 = select i1 %29, i8* %31, i8* %24
  %36 = select i1 %29, i64 %33, i64 %34
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* %35, i64 %36) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i64 8) #10
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), i64 15) #10
  %40 = bitcast %"struct.v8::internal::Brief"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = load i64, i64* %2, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %8, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %8) #10
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #10
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.28, i64 0, i64 0), i64 38) #10
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %25, i32 598) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0), i64 1) #10
  %49 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr i8, i8* %50, i64 -24
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i8, i8* %17, i64 %53
  %55 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  %56 = bitcast i8* %54 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %56) #10
  %57 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %5, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %58 = bitcast %"class.std::__1::locale::facet"* %57 to %"class.std::__1::ctype"*
  %59 = bitcast %"class.std::__1::locale::facet"* %57 to i8 (%"class.std::__1::ctype"*, i8)***
  %60 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %59, align 8
  %61 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %60, i64 7
  %62 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %61, align 8
  %63 = call signext i8 %62(%"class.std::__1::ctype"* %58, i8 signext 10) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %25, i8 signext %63) #10
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  %66 = load i8, i8* %27, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %16
  %69 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %16, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %71 = bitcast %"class.v8::internal::StdoutStream"* %6 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2
  %73 = bitcast %"class.std::__1::basic_ios.base"* %72 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %74 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %74) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %75) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %25, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %76 = bitcast %"class.std::__1::basic_ios.base"* %72 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %76) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %17) #10
  br label %77

77:                                               ; preds = %12, %70
  %78 = getelementptr inbounds %"class.v8::base::Optional.1646", %"class.v8::base::Optional.1646"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false)
  br label %90

79:                                               ; preds = %4
  %80 = bitcast %"class.v8::internal::compiler::FeedbackCellRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #10
  %81 = getelementptr inbounds %"class.v8::internal::compiler::FeedbackCellRef", %"class.v8::internal::compiler::FeedbackCellRef"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::ObjectData"* %10, %"class.v8::internal::compiler::ObjectData"** %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::FeedbackCellRef", %"class.v8::internal::compiler::FeedbackCellRef"* %9, i64 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %1, %"class.v8::internal::compiler::JSHeapBroker"** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::FeedbackCellRef", %"class.v8::internal::compiler::FeedbackCellRef"* %9, i64 0, i32 0, i32 0
  %84 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef14IsFeedbackCellEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %83) #10
  br i1 %84, label %86, label %85, !prof !2

85:                                               ; preds = %79
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.34, i64 0, i64 0)) #9
  unreachable

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.v8::base::Optional.1646", %"class.v8::base::Optional.1646"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %87, align 8
  %88 = getelementptr inbounds %"class.v8::base::Optional.1646", %"class.v8::base::Optional.1646"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.v8::internal::compiler::FeedbackCellRef"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %80, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #10
  br label %90

90:                                               ; preds = %86, %77
  ret void
}

declare zeroext i1 @_ZNK2v88internal8compiler9ObjectRef14IsFeedbackCellEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8compiler10TryMakeRefINS0_18SharedFunctionInfoEvEENS_4base8OptionalINS1_10ref_traitsIT_E8ref_typeEEEPNS1_12JSHeapBrokerENS0_6HandleIS7_EENS4_5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::base::Optional.1585"* noalias sret, %"class.v8::internal::compiler::JSHeapBroker"*, i64*, i32) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.std::__1::locale", align 8
  %6 = alloca %"class.v8::internal::StdoutStream", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"struct.v8::internal::Brief", align 8
  %9 = alloca %"class.v8::internal::compiler::SharedFunctionInfoRef", align 8
  %10 = tail call %"class.v8::internal::compiler::ObjectData"* @_ZN2v88internal8compiler12JSHeapBroker18TryGetOrCreateDataENS0_6HandleINS0_6ObjectEEENS_4base5FlagsINS1_19GetOrCreateDataFlagEiEE(%"class.v8::internal::compiler::JSHeapBroker"* %1, i64* %2, i32 %3) #10
  %11 = icmp eq %"class.v8::internal::compiler::ObjectData"* %10, null
  br i1 %11, label %12, label %79

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::compiler::JSHeapBroker", %"class.v8::internal::compiler::JSHeapBroker"* %1, i64 0, i32 7
  %14 = load i8, i8* %13, align 4, !range !78
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %77, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 240, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVNSt3__19basic_iosIcNS_11char_traitsIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.v8::internal::OFStream"*
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  call void @_ZN2v88internal8OFStreamC2EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %19, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 1), %struct._IO_FILE* %20) #10
  %21 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %18, align 8
  %22 = call %"class.v8::base::RecursiveMutex"* @_ZN2v88internal12StdoutStream14GetStdoutMutexEv() #10
  %23 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 1, i32 0
  store %"class.v8::base::RecursiveMutex"* %22, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex4LockEv(%"class.v8::base::RecursiveMutex"* %22) #10
  %24 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  call void @_ZNK2v88internal8compiler12JSHeapBroker5TraceEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.v8::internal::compiler::JSHeapBroker"* %1) #10
  %25 = bitcast %"class.v8::internal::StdoutStream"* %6 to %"class.std::__1::basic_ostream"*
  %26 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %28 to i64
  %35 = select i1 %29, i8* %31, i8* %24
  %36 = select i1 %29, i64 %33, i64 %34
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* %35, i64 %36) #10
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i64 0, i64 0), i64 8) #10
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i64 0, i64 0), i64 15) #10
  %40 = bitcast %"struct.v8::internal::Brief"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #10
  %41 = load i64, i64* %2, align 8
  %42 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %8, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %8) #10
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #10
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.28, i64 0, i64 0), i64 38) #10
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* nonnull %25, i32 598) #10
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0), i64 1) #10
  %49 = bitcast %"class.v8::internal::StdoutStream"* %6 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr i8, i8* %50, i64 -24
  %52 = bitcast i8* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds i8, i8* %17, i64 %53
  %55 = bitcast %"class.std::__1::locale"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #10
  %56 = bitcast i8* %54 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %5, %"class.std::__1::ios_base"* %56) #10
  %57 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %5, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %58 = bitcast %"class.std::__1::locale::facet"* %57 to %"class.std::__1::ctype"*
  %59 = bitcast %"class.std::__1::locale::facet"* %57 to i8 (%"class.std::__1::ctype"*, i8)***
  %60 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %59, align 8
  %61 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %60, i64 7
  %62 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %61, align 8
  %63 = call signext i8 %62(%"class.std::__1::ctype"* %58, i8 signext 10) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #10
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* nonnull %25, i8 signext %63) #10
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* nonnull %25) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #10
  %66 = load i8, i8* %27, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %16
  %69 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %69) #11
  br label %70

70:                                               ; preds = %16, %68
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %71 = bitcast %"class.v8::internal::StdoutStream"* %6 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  %72 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 2
  %73 = bitcast %"class.std::__1::basic_ios.base"* %72 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal12StdoutStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %74 = load %"class.v8::base::RecursiveMutex"*, %"class.v8::base::RecursiveMutex"** %23, align 8
  call void @_ZN2v84base14RecursiveMutex6UnlockEv(%"class.v8::base::RecursiveMutex"* %74) #10
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %71, align 8
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal12StdoutStreamE0_NS0_8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::StdoutStream", %"class.v8::internal::StdoutStream"* %6, i64 0, i32 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %75) #10
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %25, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZTTN2v88internal12StdoutStreamE, i64 0, i64 2)) #10
  %76 = bitcast %"class.std::__1::basic_ios.base"* %72 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %76) #10
  call void @llvm.lifetime.end.p0i8(i64 240, i8* nonnull %17) #10
  br label %77

77:                                               ; preds = %12, %70
  %78 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false)
  br label %90

79:                                               ; preds = %4
  %80 = bitcast %"class.v8::internal::compiler::SharedFunctionInfoRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %80) #10
  %81 = getelementptr inbounds %"class.v8::internal::compiler::SharedFunctionInfoRef", %"class.v8::internal::compiler::SharedFunctionInfoRef"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::compiler::ObjectData"* %10, %"class.v8::internal::compiler::ObjectData"** %81, align 8
  %82 = getelementptr inbounds %"class.v8::internal::compiler::SharedFunctionInfoRef", %"class.v8::internal::compiler::SharedFunctionInfoRef"* %9, i64 0, i32 0, i32 0, i32 1
  store %"class.v8::internal::compiler::JSHeapBroker"* %1, %"class.v8::internal::compiler::JSHeapBroker"** %82, align 8
  %83 = getelementptr inbounds %"class.v8::internal::compiler::SharedFunctionInfoRef", %"class.v8::internal::compiler::SharedFunctionInfoRef"* %9, i64 0, i32 0, i32 0
  %84 = call zeroext i1 @_ZNK2v88internal8compiler9ObjectRef20IsSharedFunctionInfoEv(%"class.v8::internal::compiler::ObjectRef"* nonnull %83) #10
  br i1 %84, label %86, label %85, !prof !2

85:                                               ; preds = %79
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0)) #9
  unreachable

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %87, align 8
  %88 = getelementptr inbounds %"class.v8::base::Optional.1585", %"class.v8::base::Optional.1585"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = bitcast %"class.v8::internal::compiler::SharedFunctionInfoRef"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* nonnull align 8 %80, i64 16, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %80) #10
  br label %90

90:                                               ; preds = %86, %77
  ret void
}

declare zeroext i1 @_ZNK2v88internal8compiler9ObjectRef20IsSharedFunctionInfoEv(%"class.v8::internal::compiler::ObjectRef"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internal8compilerlsERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEERKNS1_9ObjectRefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.v8::internal::compiler::ObjectRef"* dereferenceable(16)) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!5}
!5 = distinct !{!5, !6}
!6 = distinct !{!6, !"LVerDomain"}
!7 = !{!8}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.isvectorized", i32 1}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.unroll.disable"}
!13 = distinct !{!13, !10}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !10}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !10}
!28 = distinct !{!28, !12}
!29 = distinct !{!29, !10}
!30 = !{!31}
!31 = distinct !{!31, !32}
!32 = distinct !{!32, !"LVerDomain"}
!33 = !{!34}
!34 = distinct !{!34, !32}
!35 = distinct !{!35, !10}
!36 = distinct !{!36, !12}
!37 = distinct !{!37, !10}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !10}
!44 = distinct !{!44, !12}
!45 = distinct !{!45, !10}
!46 = !{!47}
!47 = distinct !{!47, !48}
!48 = distinct !{!48, !"LVerDomain"}
!49 = !{!50}
!50 = distinct !{!50, !48}
!51 = distinct !{!51, !10}
!52 = distinct !{!52, !12}
!53 = distinct !{!53, !10}
!54 = !{!55}
!55 = distinct !{!55, !56}
!56 = distinct !{!56, !"LVerDomain"}
!57 = !{!58}
!58 = distinct !{!58, !56}
!59 = distinct !{!59, !10}
!60 = distinct !{!60, !12}
!61 = distinct !{!61, !10}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !10}
!68 = distinct !{!68, !12}
!69 = distinct !{!69, !10}
!70 = !{!71}
!71 = distinct !{!71, !72}
!72 = distinct !{!72, !"LVerDomain"}
!73 = !{!74}
!74 = distinct !{!74, !72}
!75 = distinct !{!75, !10}
!76 = distinct !{!76, !12}
!77 = distinct !{!77, !10}
!78 = !{i8 0, i8 2}
!79 = !{!80}
!80 = distinct !{!80, !81}
!81 = distinct !{!81, !"LVerDomain"}
!82 = !{!83}
!83 = distinct !{!83, !81}
!84 = distinct !{!84, !10}
!85 = distinct !{!85, !12}
!86 = distinct !{!86, !10}
!87 = !{!88}
!88 = distinct !{!88, !89}
!89 = distinct !{!89, !"LVerDomain"}
!90 = !{!91}
!91 = distinct !{!91, !89}
!92 = distinct !{!92, !10}
!93 = distinct !{!93, !12}
!94 = distinct !{!94, !10}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !10}
!101 = distinct !{!101, !12}
!102 = distinct !{!102, !10}
!103 = !{!104}
!104 = distinct !{!104, !105}
!105 = distinct !{!105, !"LVerDomain"}
!106 = !{!107}
!107 = distinct !{!107, !105}
!108 = distinct !{!108, !10}
!109 = distinct !{!109, !12}
!110 = distinct !{!110, !10}
!111 = distinct !{!111, !12}
!112 = distinct !{!112, !12}
