; ModuleID = '../../third_party/webrtc/modules/audio_processing/residual_echo_detector.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/residual_echo_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::metrics::Histogram" = type opaque
%union.anon.62 = type { double }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::ResidualEchoDetector" = type <{ %"class.webrtc::EchoDetector", %"class.std::__1::unique_ptr", i8, [7 x i8], %"struct.webrtc::CircularBuffer", i64, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.4", i64, %"class.webrtc::MeanVarianceEstimator", %"class.webrtc::MeanVarianceEstimator", float, float, %"class.webrtc::MovingMax", i32, [4 x i8] }>
%"class.webrtc::EchoDetector" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::ApmDataDumper"* }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"struct.webrtc::CircularBuffer" = type { %"class.std::__1::vector", i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { float* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"class.webrtc::NormalizedCovarianceEstimator"*, %"class.webrtc::NormalizedCovarianceEstimator"*, %"class.std::__1::__compressed_pair.6" }
%"class.webrtc::NormalizedCovarianceEstimator" = type { float, float }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.webrtc::NormalizedCovarianceEstimator"* }
%"class.webrtc::MeanVarianceEstimator" = type { float, float }
%"class.webrtc::MovingMax" = type { float, i64, i64 }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.13 }
%union.anon.13 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webrtc::AudioBuffer" = type { i32 (...)**, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.43", %"class.std::__1::vector.49", %"class.std::__1::vector.49", i8, i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.webrtc::ChannelBuffer"* }
%"class.webrtc::ChannelBuffer" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.26", i64, i64, i64, i64, i64, %"class.std::__1::vector.32", %"class.std::__1::vector.32" }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { float** }
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.std::__1::vector.34"*, %"class.std::__1::vector.34"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::vector.34" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::vector.34"* }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.webrtc::SplittingFilter"* }
%"class.webrtc::SplittingFilter" = type opaque
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.std::__1::unique_ptr.51"*, %"class.std::__1::unique_ptr.51"*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::unique_ptr.51" = type opaque
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::unique_ptr.51"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.webrtc::EchoDetector::Metrics" = type { %"class.absl::optional.58", %"class.absl::optional.58" }
%"class.absl::optional.58" = type { %"class.absl::optional_internal::optional_data.59" }
%"class.absl::optional_internal::optional_data.59" = type { %"class.absl::optional_internal::optional_data_base.60" }
%"class.absl::optional_internal::optional_data_base.60" = type { %"class.absl::optional_internal::optional_data_dtor_base.61" }
%"class.absl::optional_internal::optional_data_dtor_base.61" = type { i8, %union.anon.62 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZNSt3__16vectorIfNS_9allocatorIfEEE6insertIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKfEES7_S7_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN6webrtc20ResidualEchoDetector15instance_count_E = hidden global i32 0, align 4
@_ZTVN6webrtc20ResidualEchoDetectorE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.webrtc::ResidualEchoDetector"*)* @_ZN6webrtc20ResidualEchoDetectorD2Ev to i8*), i8* bitcast (void (%"class.webrtc::ResidualEchoDetector"*)* @_ZN6webrtc20ResidualEchoDetectorD0Ev to i8*), i8* bitcast (void (%"class.webrtc::ResidualEchoDetector"*, i32, i32, i32, i32)* @_ZN6webrtc20ResidualEchoDetector10InitializeEiiii to i8*), i8* bitcast (void (%"class.webrtc::ResidualEchoDetector"*, float*, i64)* @_ZN6webrtc20ResidualEchoDetector18AnalyzeRenderAudioEN3rtc9ArrayViewIKfLln4711EEE to i8*), i8* bitcast (void (%"class.webrtc::ResidualEchoDetector"*, float*, i64)* @_ZN6webrtc20ResidualEchoDetector19AnalyzeCaptureAudioEN3rtc9ArrayViewIKfLln4711EEE to i8*), i8* bitcast (void (%"struct.webrtc::EchoDetector::Metrics"*, %"class.webrtc::ResidualEchoDetector"*)* @_ZNK6webrtc20ResidualEchoDetector10GetMetricsEv to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [76 x i8] c"../../third_party/webrtc/modules/audio_processing/residual_echo_detector.cc\00", align 1
@__FUNCTION__._ZN6webrtc20ResidualEchoDetector19AnalyzeCaptureAudioEN3rtc9ArrayViewIKfLln4711EEE = private unnamed_addr constant [20 x i8] c"AnalyzeCaptureAudio\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.4 = private unnamed_addr constant [49 x i8] c"Echo detector internal state: {Echo likelihood: \00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c", Best Delay: \00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c", Covariance: \00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c", Last capture power: \00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c", Capture mean: \00", align 1
@.str.9 = private unnamed_addr constant [31 x i8] c", Capture_standard deviation: \00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c", Last render power: \00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c", Render mean: \00", align 1
@.str.12 = private unnamed_addr constant [30 x i8] c", Render standard deviation: \00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c", Reliability: \00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@_ZZN6webrtc20ResidualEchoDetector19AnalyzeCaptureAudioEN3rtc9ArrayViewIKfLln4711EEEE24atomic_histogram_pointer = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.15 = private unnamed_addr constant [49 x i8] c"WebRTC.Audio.ResidualEchoDetector.EchoLikelihood\00", align 1
@__const._ZNK6webrtc20ResidualEchoDetector10GetMetricsEv.metrics = private unnamed_addr constant { { { { { i8, [7 x i8], %union.anon.62 } } } }, { { { { i8, [7 x i8], %union.anon.62 } } } } } { { { { { i8, [7 x i8], %union.anon.62 } } } } { { { { i8, [7 x i8], %union.anon.62 } } } { { { i8, [7 x i8], %union.anon.62 } } { { i8, [7 x i8], %union.anon.62 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.62 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.62 } } } } { { { { i8, [7 x i8], %union.anon.62 } } } { { { i8, [7 x i8], %union.anon.62 } } { { i8, [7 x i8], %union.anon.62 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.62 { double 0xFFFFFFFFFFFFFFFF } } } } } }, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc20ResidualEchoDetectorD1Ev = hidden unnamed_addr alias void (%"class.webrtc::ResidualEchoDetector"*), void (%"class.webrtc::ResidualEchoDetector"*)* @_ZN6webrtc20ResidualEchoDetectorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ResidualEchoDetectorC2Ev(%"class.webrtc::ResidualEchoDetector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc20ResidualEchoDetectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 1
  %4 = tail call i8* @_Znwm(i64 1) #10
  %5 = bitcast i8* %4 to %"class.webrtc::ApmDataDumper"*
  %6 = atomicrmw add i32* @_ZN6webrtc20ResidualEchoDetector15instance_count_E, i32 1 seq_cst
  %7 = add i32 %6, 1
  tail call void @_ZN6webrtc13ApmDataDumperC1Ei(%"class.webrtc::ApmDataDumper"* nonnull %5, i32 %7) #11
  %8 = ptrtoint i8* %4 to i64
  %9 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 2
  store i8 1, i8* %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 4
  tail call void @_ZN6webrtc14CircularBufferC1Em(%"struct.webrtc::CircularBuffer"* %11, i64 30) #11
  %12 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 6
  store i64 0, i64* %12, align 8
  %14 = tail call i8* @_Znwm(i64 2600) #10
  %15 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 6, i32 0, i32 1
  %16 = bitcast %"class.std::__1::vector"* %13 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %14, i64 2600
  %18 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast float** %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = bitcast float** %15 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 0, i64 2600, i1 false) #11
  %21 = ptrtoint i8* %17 to i64
  store i64 %21, i64* %20, align 8
  %22 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 7
  %23 = tail call i8* @_Znwm(i64 2600) #10
  %24 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 7, i32 0, i32 1
  %25 = bitcast %"class.std::__1::vector"* %22 to i8**
  store i8* %23, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %23, i64 2600
  %27 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast float** %27 to i8**
  store i8* %26, i8** %28, align 8
  %29 = bitcast float** %24 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %23, i8 0, i64 2600, i1 false) #11
  %30 = ptrtoint i8* %26 to i64
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 8
  %32 = tail call i8* @_Znwm(i64 2600) #10
  %33 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 8, i32 0, i32 1
  %34 = bitcast %"class.std::__1::vector"* %31 to i8**
  store i8* %32, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %32, i64 2600
  %36 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %37 = bitcast float** %36 to i8**
  store i8* %35, i8** %37, align 8
  %38 = bitcast float** %33 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %32, i8 0, i64 2600, i1 false) #11
  %39 = ptrtoint i8* %35 to i64
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 9
  %41 = tail call i8* @_Znwm(i64 5200) #10
  %42 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 9, i32 0, i32 1
  %43 = bitcast %"class.std::__1::vector.4"* %40 to i8**
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds i8, i8* %41, i64 5200
  %45 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"class.webrtc::NormalizedCovarianceEstimator"** %45 to i8**
  store i8* %44, i8** %46, align 8
  %47 = bitcast %"class.webrtc::NormalizedCovarianceEstimator"** %42 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %41, i8 0, i64 5200, i1 false) #11
  %48 = ptrtoint i8* %44 to i64
  store i64 %48, i64* %47, align 8
  %49 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 10
  %50 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 15
  %51 = bitcast i64* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 32, i1 false)
  tail call void @_ZN6webrtc9MovingMaxC1Em(%"class.webrtc::MovingMax"* %50, i64 1000) #11
  %52 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 16
  store i32 0, i32* %52, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN6webrtc13ApmDataDumperC1Ei(%"class.webrtc::ApmDataDumper"*, i32) unnamed_addr #2

declare void @_ZN6webrtc14CircularBufferC1Em(%"struct.webrtc::CircularBuffer"*, i64) unnamed_addr #2

declare void @_ZN6webrtc9MovingMaxC1Em(%"class.webrtc::MovingMax"*, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ResidualEchoDetectorD2Ev(%"class.webrtc::ResidualEchoDetector"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc20ResidualEchoDetectorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 15
  tail call void @_ZN6webrtc9MovingMaxD1Ev(%"class.webrtc::MovingMax"* %3) #11
  %4 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.webrtc::NormalizedCovarianceEstimator"*, %"class.webrtc::NormalizedCovarianceEstimator"** %4, align 8
  %6 = icmp eq %"class.webrtc::NormalizedCovarianceEstimator"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"class.webrtc::NormalizedCovarianceEstimator"* %5 to i64
  %9 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 9, i32 0, i32 1
  %10 = bitcast %"class.webrtc::NormalizedCovarianceEstimator"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"class.webrtc::NormalizedCovarianceEstimator"* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 8, i32 0, i32 0
  %14 = load float*, float** %13, align 8
  %15 = icmp eq float* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %12
  %17 = ptrtoint float* %14 to i64
  %18 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 8, i32 0, i32 1
  %19 = bitcast float** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast float* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %12, %16
  %22 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 7, i32 0, i32 0
  %23 = load float*, float** %22, align 8
  %24 = icmp eq float* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %21
  %26 = ptrtoint float* %23 to i64
  %27 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 7, i32 0, i32 1
  %28 = bitcast float** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast float* %23 to i8*
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %21, %25
  %31 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 6, i32 0, i32 0
  %32 = load float*, float** %31, align 8
  %33 = icmp eq float* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %30
  %35 = ptrtoint float* %32 to i64
  %36 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 6, i32 0, i32 1
  %37 = bitcast float** %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = bitcast float* %32 to i8*
  tail call void @_ZdlPv(i8* %38) #10
  br label %39

39:                                               ; preds = %30, %34
  %40 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 4
  tail call void @_ZN6webrtc14CircularBufferD1Ev(%"struct.webrtc::CircularBuffer"* %40) #11
  %41 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"class.webrtc::ApmDataDumper"*, %"class.webrtc::ApmDataDumper"** %41, align 8
  store %"class.webrtc::ApmDataDumper"* null, %"class.webrtc::ApmDataDumper"** %41, align 8
  %43 = icmp eq %"class.webrtc::ApmDataDumper"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %39
  tail call void @_ZN6webrtc13ApmDataDumperD1Ev(%"class.webrtc::ApmDataDumper"* nonnull %42) #11
  %45 = getelementptr inbounds %"class.webrtc::ApmDataDumper", %"class.webrtc::ApmDataDumper"* %42, i64 0, i32 0
  tail call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %39, %44
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6webrtc9MovingMaxD1Ev(%"class.webrtc::MovingMax"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6webrtc14CircularBufferD1Ev(%"struct.webrtc::CircularBuffer"*) unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6webrtc20ResidualEchoDetectorD0Ev(%"class.webrtc::ResidualEchoDetector"* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ResidualEchoDetector18AnalyzeRenderAudioEN3rtc9ArrayViewIKfLln4711EEE(%"class.webrtc::ResidualEchoDetector"*, float*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 4, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  %8 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 5
  br i1 %7, label %14, label %9

9:                                                ; preds = %3
  %10 = load i64, i64* %8, align 8
  %11 = icmp ugt i64 %10, 29
  br i1 %11, label %12, label %15

12:                                               ; preds = %9
  %13 = tail call i64 @_ZN6webrtc14CircularBuffer3PopEv(%"struct.webrtc::CircularBuffer"* %4) #11
  br label %14

14:                                               ; preds = %3, %12
  store i64 0, i64* %8, align 8
  br label %15

15:                                               ; preds = %14, %9
  %16 = phi i64 [ %10, %9 ], [ 0, %14 ]
  %17 = add nuw nsw i64 %16, 1
  store i64 %17, i64* %8, align 8
  %18 = icmp eq i64 %2, 0
  br i1 %18, label %82, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds float, float* %1, i64 %2
  %21 = shl nsw i64 %2, 2
  %22 = add i64 %21, -4
  %23 = lshr exact i64 %22, 2
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %37, label %27

27:                                               ; preds = %19, %27
  %28 = phi float [ %33, %27 ], [ 0.000000e+00, %19 ]
  %29 = phi float* [ %34, %27 ], [ %1, %19 ]
  %30 = phi i64 [ %35, %27 ], [ %25, %19 ]
  %31 = load float, float* %29, align 4
  %32 = fmul float %31, %31
  %33 = fadd float %28, %32
  %34 = getelementptr inbounds float, float* %29, i64 1
  %35 = add i64 %30, -1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %27, !llvm.loop !2

37:                                               ; preds = %27, %19
  %38 = phi float [ undef, %19 ], [ %33, %27 ]
  %39 = phi float [ 0.000000e+00, %19 ], [ %33, %27 ]
  %40 = phi float* [ %1, %19 ], [ %34, %27 ]
  %41 = icmp ult i64 %22, 28
  br i1 %41, label %78, label %42

42:                                               ; preds = %37, %42
  %43 = phi float [ %75, %42 ], [ %39, %37 ]
  %44 = phi float* [ %76, %42 ], [ %40, %37 ]
  %45 = load float, float* %44, align 4
  %46 = fmul float %45, %45
  %47 = fadd float %43, %46
  %48 = getelementptr inbounds float, float* %44, i64 1
  %49 = load float, float* %48, align 4
  %50 = fmul float %49, %49
  %51 = fadd float %47, %50
  %52 = getelementptr inbounds float, float* %44, i64 2
  %53 = load float, float* %52, align 4
  %54 = fmul float %53, %53
  %55 = fadd float %51, %54
  %56 = getelementptr inbounds float, float* %44, i64 3
  %57 = load float, float* %56, align 4
  %58 = fmul float %57, %57
  %59 = fadd float %55, %58
  %60 = getelementptr inbounds float, float* %44, i64 4
  %61 = load float, float* %60, align 4
  %62 = fmul float %61, %61
  %63 = fadd float %59, %62
  %64 = getelementptr inbounds float, float* %44, i64 5
  %65 = load float, float* %64, align 4
  %66 = fmul float %65, %65
  %67 = fadd float %63, %66
  %68 = getelementptr inbounds float, float* %44, i64 6
  %69 = load float, float* %68, align 4
  %70 = fmul float %69, %69
  %71 = fadd float %67, %70
  %72 = getelementptr inbounds float, float* %44, i64 7
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %73
  %75 = fadd float %71, %74
  %76 = getelementptr inbounds float, float* %44, i64 8
  %77 = icmp eq float* %76, %20
  br i1 %77, label %78, label %42

78:                                               ; preds = %42, %37
  %79 = phi float [ %38, %37 ], [ %75, %42 ]
  %80 = uitofp i64 %2 to float
  %81 = fdiv float %79, %80
  br label %82

82:                                               ; preds = %15, %78
  %83 = phi float [ %81, %78 ], [ 0.000000e+00, %15 ]
  tail call void @_ZN6webrtc14CircularBuffer4PushEf(%"struct.webrtc::CircularBuffer"* %4, float %83) #11
  ret void
}

declare i64 @_ZN6webrtc14CircularBuffer3PopEv(%"struct.webrtc::CircularBuffer"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare void @_ZN6webrtc14CircularBuffer4PushEf(%"struct.webrtc::CircularBuffer"*, float) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ResidualEchoDetector19AnalyzeCaptureAudioEN3rtc9ArrayViewIKfLln4711EEE(%"class.webrtc::ResidualEchoDetector"*, float*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = alloca float, align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 4
  tail call void @_ZN6webrtc14CircularBuffer5ClearEv(%"struct.webrtc::CircularBuffer"* %11) #11
  store i8 0, i8* %7, align 8
  br label %12

12:                                               ; preds = %3, %10
  %13 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 4
  %14 = tail call i64 @_ZN6webrtc14CircularBuffer3PopEv(%"struct.webrtc::CircularBuffer"* %13) #11
  %15 = trunc i64 %14 to i8
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  %18 = icmp eq i8 %15, 0
  br i1 %18, label %260, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 11
  %21 = bitcast i32 %17 to float
  tail call void @_ZN6webrtc21MeanVarianceEstimator6UpdateEf(%"class.webrtc::MeanVarianceEstimator"* %20, float %21) #11
  %22 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 10
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 6, i32 0, i32 0
  %25 = load float*, float** %24, align 8
  %26 = getelementptr inbounds float, float* %25, i64 %23
  %27 = bitcast float* %26 to i32*
  store i32 %17, i32* %27, align 4
  %28 = tail call float @_ZNK6webrtc21MeanVarianceEstimator4meanEv(%"class.webrtc::MeanVarianceEstimator"* %20) #11
  %29 = load i64, i64* %22, align 8
  %30 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 7, i32 0, i32 0
  %31 = load float*, float** %30, align 8
  %32 = getelementptr inbounds float, float* %31, i64 %29
  store float %28, float* %32, align 4
  %33 = tail call float @_ZNK6webrtc21MeanVarianceEstimator13std_deviationEv(%"class.webrtc::MeanVarianceEstimator"* %20) #11
  %34 = load i64, i64* %22, align 8
  %35 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 8, i32 0, i32 0
  %36 = load float*, float** %35, align 8
  %37 = getelementptr inbounds float, float* %36, i64 %34
  store float %33, float* %37, align 4
  %38 = icmp eq i64 %2, 0
  br i1 %38, label %102, label %39

39:                                               ; preds = %19
  %40 = getelementptr inbounds float, float* %1, i64 %2
  %41 = shl nsw i64 %2, 2
  %42 = add i64 %41, -4
  %43 = lshr exact i64 %42, 2
  %44 = add nuw nsw i64 %43, 1
  %45 = and i64 %44, 7
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %57, label %47

47:                                               ; preds = %39, %47
  %48 = phi float [ %53, %47 ], [ 0.000000e+00, %39 ]
  %49 = phi float* [ %54, %47 ], [ %1, %39 ]
  %50 = phi i64 [ %55, %47 ], [ %45, %39 ]
  %51 = load float, float* %49, align 4
  %52 = fmul float %51, %51
  %53 = fadd float %48, %52
  %54 = getelementptr inbounds float, float* %49, i64 1
  %55 = add i64 %50, -1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %47, !llvm.loop !5

57:                                               ; preds = %47, %39
  %58 = phi float [ undef, %39 ], [ %53, %47 ]
  %59 = phi float [ 0.000000e+00, %39 ], [ %53, %47 ]
  %60 = phi float* [ %1, %39 ], [ %54, %47 ]
  %61 = icmp ult i64 %42, 28
  br i1 %61, label %98, label %62

62:                                               ; preds = %57, %62
  %63 = phi float [ %95, %62 ], [ %59, %57 ]
  %64 = phi float* [ %96, %62 ], [ %60, %57 ]
  %65 = load float, float* %64, align 4
  %66 = fmul float %65, %65
  %67 = fadd float %63, %66
  %68 = getelementptr inbounds float, float* %64, i64 1
  %69 = load float, float* %68, align 4
  %70 = fmul float %69, %69
  %71 = fadd float %67, %70
  %72 = getelementptr inbounds float, float* %64, i64 2
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %73
  %75 = fadd float %71, %74
  %76 = getelementptr inbounds float, float* %64, i64 3
  %77 = load float, float* %76, align 4
  %78 = fmul float %77, %77
  %79 = fadd float %75, %78
  %80 = getelementptr inbounds float, float* %64, i64 4
  %81 = load float, float* %80, align 4
  %82 = fmul float %81, %81
  %83 = fadd float %79, %82
  %84 = getelementptr inbounds float, float* %64, i64 5
  %85 = load float, float* %84, align 4
  %86 = fmul float %85, %85
  %87 = fadd float %83, %86
  %88 = getelementptr inbounds float, float* %64, i64 6
  %89 = load float, float* %88, align 4
  %90 = fmul float %89, %89
  %91 = fadd float %87, %90
  %92 = getelementptr inbounds float, float* %64, i64 7
  %93 = load float, float* %92, align 4
  %94 = fmul float %93, %93
  %95 = fadd float %91, %94
  %96 = getelementptr inbounds float, float* %64, i64 8
  %97 = icmp eq float* %96, %40
  br i1 %97, label %98, label %62

98:                                               ; preds = %62, %57
  %99 = phi float [ %58, %57 ], [ %95, %62 ]
  %100 = uitofp i64 %2 to float
  %101 = fdiv float %99, %100
  br label %102

102:                                              ; preds = %19, %98
  %103 = phi float [ %101, %98 ], [ 0.000000e+00, %19 ]
  %104 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 12
  tail call void @_ZN6webrtc21MeanVarianceEstimator6UpdateEf(%"class.webrtc::MeanVarianceEstimator"* %104, float %103) #11
  %105 = tail call float @_ZNK6webrtc21MeanVarianceEstimator4meanEv(%"class.webrtc::MeanVarianceEstimator"* %104) #11
  %106 = tail call float @_ZNK6webrtc21MeanVarianceEstimator13std_deviationEv(%"class.webrtc::MeanVarianceEstimator"* %104) #11
  %107 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 13
  store float 0.000000e+00, float* %107, align 8
  %108 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 9
  %109 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 9, i32 0, i32 1
  %110 = bitcast %"class.webrtc::NormalizedCovarianceEstimator"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.std::__1::vector.4"* %108 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = icmp eq i64 %111, %113
  br i1 %114, label %214, label %115

115:                                              ; preds = %102
  %116 = inttoptr i64 %113 to %"class.webrtc::NormalizedCovarianceEstimator"*
  %117 = load i64, i64* %22, align 8
  %118 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %108, i64 0, i32 0, i32 0
  br label %121

119:                                              ; preds = %147
  %120 = fcmp ogt float %148, 0x3FF19999A0000000
  br i1 %120, label %155, label %214

121:                                              ; preds = %115, %147
  %122 = phi %"class.webrtc::NormalizedCovarianceEstimator"* [ %116, %115 ], [ %139, %147 ]
  %123 = phi i64 [ 0, %115 ], [ %150, %147 ]
  %124 = phi i32 [ -1, %115 ], [ %149, %147 ]
  %125 = phi i64 [ %117, %115 ], [ %138, %147 ]
  %126 = getelementptr inbounds %"class.webrtc::NormalizedCovarianceEstimator", %"class.webrtc::NormalizedCovarianceEstimator"* %122, i64 %123
  %127 = load float*, float** %24, align 8
  %128 = getelementptr inbounds float, float* %127, i64 %125
  %129 = load float, float* %128, align 4
  %130 = load float*, float** %30, align 8
  %131 = getelementptr inbounds float, float* %130, i64 %125
  %132 = load float, float* %131, align 4
  %133 = load float*, float** %35, align 8
  %134 = getelementptr inbounds float, float* %133, i64 %125
  %135 = load float, float* %134, align 4
  tail call void @_ZN6webrtc29NormalizedCovarianceEstimator6UpdateEffffff(%"class.webrtc::NormalizedCovarianceEstimator"* %126, float %103, float %105, float %106, float %129, float %132, float %135) #11
  %136 = icmp eq i64 %125, 0
  %137 = add i64 %125, -1
  %138 = select i1 %136, i64 649, i64 %137
  %139 = load %"class.webrtc::NormalizedCovarianceEstimator"*, %"class.webrtc::NormalizedCovarianceEstimator"** %118, align 8
  %140 = getelementptr inbounds %"class.webrtc::NormalizedCovarianceEstimator", %"class.webrtc::NormalizedCovarianceEstimator"* %139, i64 %123, i32 0
  %141 = load float, float* %140, align 4
  %142 = load float, float* %107, align 8
  %143 = fcmp ogt float %141, %142
  %144 = ptrtoint %"class.webrtc::NormalizedCovarianceEstimator"* %139 to i64
  br i1 %143, label %145, label %147

145:                                              ; preds = %121
  store float %141, float* %107, align 8
  %146 = trunc i64 %123 to i32
  br label %147

147:                                              ; preds = %121, %145
  %148 = phi float [ %141, %145 ], [ %142, %121 ]
  %149 = phi i32 [ %146, %145 ], [ %124, %121 ]
  %150 = add nuw i64 %123, 1
  %151 = load i64, i64* %110, align 8
  %152 = sub i64 %151, %144
  %153 = ashr exact i64 %152, 3
  %154 = icmp ult i64 %150, %153
  br i1 %154, label %121, label %119

155:                                              ; preds = %119
  %156 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 16
  %157 = load i32, i32* %156, align 8
  %158 = icmp slt i32 %157, 5
  %159 = icmp ne i32 %149, -1
  %160 = and i1 %159, %158
  br i1 %160, label %161, label %214

161:                                              ; preds = %155
  %162 = load i64, i64* %22, align 8
  %163 = sext i32 %149 to i64
  %164 = sub nsw i64 650, %163
  %165 = add i64 %164, %162
  %166 = icmp ugt i64 %165, 649
  %167 = add i64 %165, -650
  %168 = select i1 %166, i64 %167, i64 %165
  %169 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %169) #11
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.2, i64 0, i64 0), i32 146, i32 1, i32 0, i32 0) #11
  %170 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %171 = bitcast %"class.std::__1::basic_ostringstream"* %170 to %"class.std::__1::basic_ostream"*
  %172 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %171, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__FUNCTION__._ZN6webrtc20ResidualEchoDetector19AnalyzeCaptureAudioEN3rtc9ArrayViewIKfLln4711EEE, i64 0, i64 0), i64 19) #11
  %173 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %172, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i64 2) #11
  %174 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %173, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4, i64 0, i64 0), i64 48) #11
  %175 = load float, float* %107, align 8
  %176 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %174, float %175) #11
  %177 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %176, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 14) #11
  %178 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %177, i32 %149) #11
  %179 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %178, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0), i64 14) #11
  %180 = getelementptr inbounds %"class.std::__1::vector.4", %"class.std::__1::vector.4"* %108, i64 0, i32 0, i32 0
  %181 = load %"class.webrtc::NormalizedCovarianceEstimator"*, %"class.webrtc::NormalizedCovarianceEstimator"** %180, align 8
  %182 = getelementptr inbounds %"class.webrtc::NormalizedCovarianceEstimator", %"class.webrtc::NormalizedCovarianceEstimator"* %181, i64 %163, i32 1
  %183 = load float, float* %182, align 4
  %184 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %179, float %183) #11
  %185 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %184, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i64 22) #11
  %186 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %185, float %103) #11
  %187 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %186, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i64 16) #11
  %188 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %187, float %105) #11
  %189 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %188, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.9, i64 0, i64 0), i64 30) #11
  %190 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %189, float %106) #11
  %191 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %190, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i64 21) #11
  %192 = load float*, float** %24, align 8
  %193 = getelementptr inbounds float, float* %192, i64 %168
  %194 = load float, float* %193, align 4
  %195 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %191, float %194) #11
  %196 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %195, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i64 15) #11
  %197 = load float*, float** %30, align 8
  %198 = getelementptr inbounds float, float* %197, i64 %168
  %199 = load float, float* %198, align 4
  %200 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %196, float %199) #11
  %201 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %200, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.12, i64 0, i64 0), i64 29) #11
  %202 = load float*, float** %35, align 8
  %203 = getelementptr inbounds float, float* %202, i64 %168
  %204 = load float, float* %203, align 4
  %205 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %201, float %204) #11
  %206 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %205, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i64 15) #11
  %207 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 14
  %208 = load float, float* %207, align 4
  %209 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"* %206, float %208) #11
  %210 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %209, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i64 1) #11
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %169) #11
  %211 = load i32, i32* %156, align 8
  %212 = add nsw i32 %211, 1
  store i32 %212, i32* %156, align 8
  %213 = load float, float* %107, align 8
  br label %214

214:                                              ; preds = %102, %155, %161, %119
  %215 = phi float [ %148, %155 ], [ %213, %161 ], [ %148, %119 ], [ 0.000000e+00, %102 ]
  %216 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 14
  %217 = load float, float* %216, align 4
  %218 = fmul float %217, 0x3FEFF7CEE0000000
  %219 = fadd float %218, 0x3F50624DE0000000
  store float %219, float* %216, align 4
  %220 = fmul float %215, %219
  store float %220, float* %107, align 8
  %221 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %221)
  store float 1.000000e+00, float* %5, align 4
  %222 = fcmp ogt float %220, 1.000000e+00
  %223 = select i1 %222, float* %5, float* %107
  %224 = bitcast float* %223 to i32*
  %225 = load i32, i32* %224, align 4
  %226 = bitcast float* %107 to i32*
  store i32 %225, i32* %226, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %221)
  %227 = bitcast i32 %225 to float
  %228 = fmul float %227, 1.000000e+02
  %229 = fptosi float %228 to i32
  %230 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20ResidualEchoDetector19AnalyzeCaptureAudioEN3rtc9ArrayViewIKfLln4711EEEE24atomic_histogram_pointer to i64*) acquire, align 8
  %231 = inttoptr i64 %230 to %"class.webrtc::metrics::Histogram"*
  %232 = icmp eq i64 %230, 0
  br i1 %232, label %233, label %251

233:                                              ; preds = %214
  %234 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %234) #11
  %235 = call i8* @_Znwm(i64 64) #10
  %236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %235, i8** %236, align 8
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %238 = bitcast i64* %237 to <2 x i64>*
  store <2 x i64> <i64 48, i64 -9223372036854775744>, <2 x i64>* %238, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %235, i8* align 1 getelementptr inbounds ([49 x i8], [49 x i8]* @.str.15, i64 0, i64 0), i64 48, i1 false) #11
  %239 = getelementptr inbounds i8, i8* %235, i64 48
  store i8 0, i8* %239, align 1
  %240 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i32 0, i32 100, i32 100) #11
  %241 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %241, i64 0, i32 1, i32 0
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %247

245:                                              ; preds = %233
  %246 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %246) #10
  br label %247

247:                                              ; preds = %245, %233
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %234) #11
  %248 = ptrtoint %"class.webrtc::metrics::Histogram"* %240 to i64
  %249 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc20ResidualEchoDetector19AnalyzeCaptureAudioEN3rtc9ArrayViewIKfLln4711EEEE24atomic_histogram_pointer to i64*), i64 0, i64 %248 seq_cst seq_cst
  %250 = icmp eq %"class.webrtc::metrics::Histogram"* %240, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %214, %247
  %252 = phi %"class.webrtc::metrics::Histogram"* [ %240, %247 ], [ %231, %214 ]
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %252, i32 %229) #11
  br label %253

253:                                              ; preds = %247, %251
  %254 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 15
  %255 = load float, float* %107, align 8
  call void @_ZN6webrtc9MovingMax6UpdateEf(%"class.webrtc::MovingMax"* %254, float %255) #11
  %256 = load i64, i64* %22, align 8
  %257 = icmp ult i64 %256, 649
  %258 = add i64 %256, 1
  %259 = select i1 %257, i64 %258, i64 0
  store i64 %259, i64* %22, align 8
  br label %260

260:                                              ; preds = %12, %253
  ret void
}

declare void @_ZN6webrtc14CircularBuffer5ClearEv(%"struct.webrtc::CircularBuffer"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

declare void @_ZN6webrtc21MeanVarianceEstimator6UpdateEf(%"class.webrtc::MeanVarianceEstimator"*, float) local_unnamed_addr #2

declare float @_ZNK6webrtc21MeanVarianceEstimator4meanEv(%"class.webrtc::MeanVarianceEstimator"*) local_unnamed_addr #2

declare float @_ZNK6webrtc21MeanVarianceEstimator13std_deviationEv(%"class.webrtc::MeanVarianceEstimator"*) local_unnamed_addr #2

declare void @_ZN6webrtc29NormalizedCovarianceEstimator6UpdateEffffff(%"class.webrtc::NormalizedCovarianceEstimator"*, float, float, float, float, float, float) local_unnamed_addr #2

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEf(%"class.std::__1::basic_ostream"*, float) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #3

declare %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics25HistogramFactoryGetCountsERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32) local_unnamed_addr #2

declare void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"*, i32) local_unnamed_addr #2

declare void @_ZN6webrtc9MovingMax6UpdateEf(%"class.webrtc::MovingMax"*, float) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc20ResidualEchoDetector10InitializeEiiii(%"class.webrtc::ResidualEchoDetector"*, i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 4
  tail call void @_ZN6webrtc14CircularBuffer5ClearEv(%"struct.webrtc::CircularBuffer"* %6) #11
  %7 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 6, i32 0, i32 0
  %8 = load float*, float** %7, align 8
  %9 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 6, i32 0, i32 1
  %10 = bitcast float** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = ptrtoint float* %8 to i64
  %13 = sub i64 %11, %12
  %14 = icmp sgt i64 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %5
  %16 = bitcast float* %8 to i8*
  %17 = and i64 %13, -4
  %18 = icmp ult i64 %13, 4
  %19 = sext i1 %18 to i64
  %20 = shl nsw i64 %19, 2
  %21 = sub i64 %17, %20
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 %21, i1 false)
  br label %22

22:                                               ; preds = %15, %5
  %23 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 7, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 7, i32 0, i32 1
  %26 = bitcast float** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = ptrtoint float* %24 to i64
  %29 = sub i64 %27, %28
  %30 = icmp sgt i64 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %22
  %32 = bitcast float* %24 to i8*
  %33 = and i64 %29, -4
  %34 = icmp ult i64 %29, 4
  %35 = sext i1 %34 to i64
  %36 = shl nsw i64 %35, 2
  %37 = sub i64 %33, %36
  call void @llvm.memset.p0i8.i64(i8* align 4 %32, i8 0, i64 %37, i1 false)
  br label %38

38:                                               ; preds = %31, %22
  %39 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 8, i32 0, i32 0
  %40 = load float*, float** %39, align 8
  %41 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 8, i32 0, i32 1
  %42 = bitcast float** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = ptrtoint float* %40 to i64
  %45 = sub i64 %43, %44
  %46 = icmp sgt i64 %45, 0
  br i1 %46, label %47, label %54

47:                                               ; preds = %38
  %48 = bitcast float* %40 to i8*
  %49 = and i64 %45, -4
  %50 = icmp ult i64 %45, 4
  %51 = sext i1 %50 to i64
  %52 = shl nsw i64 %51, 2
  %53 = sub i64 %49, %52
  call void @llvm.memset.p0i8.i64(i8* align 4 %48, i8 0, i64 %53, i1 false)
  br label %54

54:                                               ; preds = %47, %38
  %55 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 11
  tail call void @_ZN6webrtc21MeanVarianceEstimator5ClearEv(%"class.webrtc::MeanVarianceEstimator"* %55) #11
  %56 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 12
  tail call void @_ZN6webrtc21MeanVarianceEstimator5ClearEv(%"class.webrtc::MeanVarianceEstimator"* %56) #11
  %57 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 15
  tail call void @_ZN6webrtc9MovingMax5ClearEv(%"class.webrtc::MovingMax"* %57) #11
  %58 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 9, i32 0, i32 0
  %59 = load %"class.webrtc::NormalizedCovarianceEstimator"*, %"class.webrtc::NormalizedCovarianceEstimator"** %58, align 8
  %60 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 9, i32 0, i32 1
  %61 = load %"class.webrtc::NormalizedCovarianceEstimator"*, %"class.webrtc::NormalizedCovarianceEstimator"** %60, align 8
  %62 = icmp eq %"class.webrtc::NormalizedCovarianceEstimator"* %59, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %67, %54
  %64 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 13
  store float 0.000000e+00, float* %64, align 8
  %65 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 10
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %0, i64 0, i32 14
  store float 0.000000e+00, float* %66, align 4
  ret void

67:                                               ; preds = %54, %67
  %68 = phi %"class.webrtc::NormalizedCovarianceEstimator"* [ %69, %67 ], [ %59, %54 ]
  tail call void @_ZN6webrtc29NormalizedCovarianceEstimator5ClearEv(%"class.webrtc::NormalizedCovarianceEstimator"* %68) #11
  %69 = getelementptr inbounds %"class.webrtc::NormalizedCovarianceEstimator", %"class.webrtc::NormalizedCovarianceEstimator"* %68, i64 1
  %70 = icmp eq %"class.webrtc::NormalizedCovarianceEstimator"* %69, %61
  br i1 %70, label %63, label %67
}

declare void @_ZN6webrtc21MeanVarianceEstimator5ClearEv(%"class.webrtc::MeanVarianceEstimator"*) local_unnamed_addr #2

declare void @_ZN6webrtc9MovingMax5ClearEv(%"class.webrtc::MovingMax"*) local_unnamed_addr #2

declare void @_ZN6webrtc29NormalizedCovarianceEstimator5ClearEv(%"class.webrtc::NormalizedCovarianceEstimator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12EchoDetector21PackRenderAudioBufferEPNS_11AudioBufferEPNSt3__16vectorIfNS3_9allocatorIfEEEE(%"class.webrtc::AudioBuffer"* nocapture readonly, %"class.std::__1::vector"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::vector"* %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %6 = bitcast float** %5 to i64*
  store i64 %4, i64* %6, align 8
  %7 = inttoptr i64 %4 to float*
  %8 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %9 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load float**, float*** %10, align 8
  %12 = load float*, float** %11, align 8
  %13 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %0, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds float, float* %12, i64 %14
  %16 = tail call float* @_ZNSt3__16vectorIfNS_9allocatorIfEEE6insertIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKfEES7_S7_(%"class.std::__1::vector"* %1, float* %7, float* %12, float* %15)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float* @_ZNSt3__16vectorIfNS_9allocatorIfEEE6insertIPfEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIfNS_15iterator_traitsIS7_E9referenceEEE5valueENS_11__wrap_iterIS5_EEE4typeENSB_IPKfEES7_S7_(%"class.std::__1::vector"*, float*, float*, float*) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast float* %2 to i8*
  %6 = bitcast float* %1 to i8*
  %7 = ptrtoint float* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %9 = ptrtoint float* %3 to i64
  %10 = ptrtoint float* %2 to i64
  %11 = sub i64 %9, %10
  %12 = ashr exact i64 %11, 2
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %603

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast float** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = load float*, float** %18, align 8
  %20 = ptrtoint float* %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast float** %18 to i64*
  br i1 %23, label %190, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 2
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %45

29:                                               ; preds = %25
  %30 = getelementptr inbounds float, float* %2, i64 %27
  %31 = ptrtoint float* %30 to i64
  %32 = sub i64 %9, %31
  %33 = icmp sgt i64 %32, 0
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = lshr exact i64 %32, 2
  %36 = bitcast float* %19 to i8*
  %37 = bitcast float* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 %32, i1 false) #11
  %38 = getelementptr inbounds float, float* %19, i64 %35
  %39 = ptrtoint float* %38 to i64
  br label %40

40:                                               ; preds = %34, %29
  %41 = phi i64 [ %39, %34 ], [ %20, %29 ]
  store i64 %41, i64* %24, align 8
  %42 = icmp sgt i64 %26, 0
  br i1 %42, label %43, label %603

43:                                               ; preds = %40
  %44 = inttoptr i64 %41 to float*
  br label %45

45:                                               ; preds = %43, %25
  %46 = phi i64 [ %41, %43 ], [ %20, %25 ]
  %47 = phi float* [ %44, %43 ], [ %19, %25 ]
  %48 = phi float* [ %30, %43 ], [ %3, %25 ]
  %49 = getelementptr inbounds float, float* %1, i64 %12
  %50 = ptrtoint float* %49 to i64
  %51 = sub i64 %46, %50
  %52 = ashr exact i64 %51, 2
  %53 = getelementptr inbounds float, float* %1, i64 %52
  %54 = icmp ult float* %53, %19
  br i1 %54, label %55, label %168

55:                                               ; preds = %45
  %56 = sub nsw i64 0, %52
  %57 = getelementptr float, float* %19, i64 %56
  %58 = bitcast float* %57 to i8*
  %59 = xor i64 %7, -1
  %60 = getelementptr i8, i8* %58, i64 %59
  %61 = ptrtoint i8* %60 to i64
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %65, label %68

65:                                               ; preds = %163, %68, %55
  %66 = phi float* [ %47, %68 ], [ %47, %55 ], [ %86, %163 ]
  %67 = phi float* [ %53, %68 ], [ %53, %55 ], [ %87, %163 ]
  br label %176

68:                                               ; preds = %55
  %69 = sub nsw i64 0, %52
  %70 = getelementptr float, float* %19, i64 %69
  %71 = bitcast float* %70 to i8*
  %72 = xor i64 %7, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = ptrtoint i8* %73 to i64
  %75 = lshr i64 %74, 2
  %76 = add nuw nsw i64 %75, 1
  %77 = getelementptr float, float* %47, i64 %76
  %78 = add nsw i64 %52, %75
  %79 = add i64 %78, 1
  %80 = getelementptr float, float* %1, i64 %79
  %81 = icmp ult float* %47, %80
  %82 = icmp ult float* %53, %77
  %83 = and i1 %81, %82
  br i1 %83, label %65, label %84

84:                                               ; preds = %68
  %85 = and i64 %63, 9223372036854775800
  %86 = getelementptr float, float* %47, i64 %85
  %87 = getelementptr float, float* %53, i64 %85
  %88 = add nsw i64 %85, -8
  %89 = lshr exact i64 %88, 3
  %90 = add nuw nsw i64 %89, 1
  %91 = and i64 %90, 3
  %92 = icmp ult i64 %88, 24
  br i1 %92, label %144, label %93

93:                                               ; preds = %84
  %94 = sub nsw i64 %90, %91
  br label %95

95:                                               ; preds = %95, %93
  %96 = phi i64 [ 0, %93 ], [ %141, %95 ]
  %97 = phi i64 [ %94, %93 ], [ %142, %95 ]
  %98 = getelementptr float, float* %47, i64 %96
  %99 = getelementptr float, float* %53, i64 %96
  %100 = bitcast float* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4, !alias.scope !6
  %102 = getelementptr float, float* %99, i64 4
  %103 = bitcast float* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4, !alias.scope !6
  %105 = bitcast float* %98 to <4 x i32>*
  store <4 x i32> %101, <4 x i32>* %105, align 4, !alias.scope !9, !noalias !6
  %106 = getelementptr float, float* %98, i64 4
  %107 = bitcast float* %106 to <4 x i32>*
  store <4 x i32> %104, <4 x i32>* %107, align 4, !alias.scope !9, !noalias !6
  %108 = or i64 %96, 8
  %109 = getelementptr float, float* %47, i64 %108
  %110 = getelementptr float, float* %53, i64 %108
  %111 = bitcast float* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4, !alias.scope !6
  %113 = getelementptr float, float* %110, i64 4
  %114 = bitcast float* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4, !alias.scope !6
  %116 = bitcast float* %109 to <4 x i32>*
  store <4 x i32> %112, <4 x i32>* %116, align 4, !alias.scope !9, !noalias !6
  %117 = getelementptr float, float* %109, i64 4
  %118 = bitcast float* %117 to <4 x i32>*
  store <4 x i32> %115, <4 x i32>* %118, align 4, !alias.scope !9, !noalias !6
  %119 = or i64 %96, 16
  %120 = getelementptr float, float* %47, i64 %119
  %121 = getelementptr float, float* %53, i64 %119
  %122 = bitcast float* %121 to <4 x i32>*
  %123 = load <4 x i32>, <4 x i32>* %122, align 4, !alias.scope !6
  %124 = getelementptr float, float* %121, i64 4
  %125 = bitcast float* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !6
  %127 = bitcast float* %120 to <4 x i32>*
  store <4 x i32> %123, <4 x i32>* %127, align 4, !alias.scope !9, !noalias !6
  %128 = getelementptr float, float* %120, i64 4
  %129 = bitcast float* %128 to <4 x i32>*
  store <4 x i32> %126, <4 x i32>* %129, align 4, !alias.scope !9, !noalias !6
  %130 = or i64 %96, 24
  %131 = getelementptr float, float* %47, i64 %130
  %132 = getelementptr float, float* %53, i64 %130
  %133 = bitcast float* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4, !alias.scope !6
  %135 = getelementptr float, float* %132, i64 4
  %136 = bitcast float* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4, !alias.scope !6
  %138 = bitcast float* %131 to <4 x i32>*
  store <4 x i32> %134, <4 x i32>* %138, align 4, !alias.scope !9, !noalias !6
  %139 = getelementptr float, float* %131, i64 4
  %140 = bitcast float* %139 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %140, align 4, !alias.scope !9, !noalias !6
  %141 = add i64 %96, 32
  %142 = add i64 %97, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %95, !llvm.loop !11

144:                                              ; preds = %95, %84
  %145 = phi i64 [ 0, %84 ], [ %141, %95 ]
  %146 = icmp eq i64 %91, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %144, %147
  %148 = phi i64 [ %160, %147 ], [ %145, %144 ]
  %149 = phi i64 [ %161, %147 ], [ %91, %144 ]
  %150 = getelementptr float, float* %47, i64 %148
  %151 = getelementptr float, float* %53, i64 %148
  %152 = bitcast float* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4, !alias.scope !6
  %154 = getelementptr float, float* %151, i64 4
  %155 = bitcast float* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4, !alias.scope !6
  %157 = bitcast float* %150 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %157, align 4, !alias.scope !9, !noalias !6
  %158 = getelementptr float, float* %150, i64 4
  %159 = bitcast float* %158 to <4 x i32>*
  store <4 x i32> %156, <4 x i32>* %159, align 4, !alias.scope !9, !noalias !6
  %160 = add i64 %148, 8
  %161 = add i64 %149, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !13

163:                                              ; preds = %147, %144
  %164 = icmp eq i64 %63, %85
  br i1 %164, label %165, label %65

165:                                              ; preds = %176, %163
  %166 = phi float* [ %86, %163 ], [ %183, %176 ]
  %167 = ptrtoint float* %166 to i64
  br label %168

168:                                              ; preds = %165, %45
  %169 = phi i64 [ %167, %165 ], [ %46, %45 ]
  store i64 %169, i64* %24, align 8
  %170 = icmp eq i64 %51, 0
  br i1 %170, label %185, label %171

171:                                              ; preds = %168
  %172 = sub nsw i64 0, %52
  %173 = getelementptr inbounds float, float* %47, i64 %172
  %174 = bitcast float* %173 to i8*
  %175 = bitcast float* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 %51, i1 false) #11
  br label %185

176:                                              ; preds = %65, %176
  %177 = phi float* [ %183, %176 ], [ %66, %65 ]
  %178 = phi float* [ %182, %176 ], [ %67, %65 ]
  %179 = bitcast float* %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = bitcast float* %177 to i32*
  store i32 %180, i32* %181, align 4
  %182 = getelementptr inbounds float, float* %178, i64 1
  %183 = getelementptr inbounds float, float* %177, i64 1
  %184 = icmp ult float* %182, %19
  br i1 %184, label %176, label %165, !llvm.loop !14

185:                                              ; preds = %168, %171
  %186 = ptrtoint float* %48 to i64
  %187 = sub i64 %186, %10
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %603, label %189

189:                                              ; preds = %185
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %5, i64 %187, i1 false) #11
  br label %603

190:                                              ; preds = %14
  %191 = bitcast %"class.std::__1::vector"* %0 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %20, %192
  %194 = ashr exact i64 %193, 2
  %195 = add nsw i64 %194, %12
  %196 = icmp ugt i64 %195, 4611686018427387903
  br i1 %196, label %197, label %199

197:                                              ; preds = %190
  %198 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %198) #12
  unreachable

199:                                              ; preds = %190
  %200 = sub i64 %17, %192
  %201 = ashr exact i64 %200, 2
  %202 = icmp ult i64 %201, 2305843009213693951
  br i1 %202, label %206, label %203

203:                                              ; preds = %199
  %204 = sub i64 %7, %192
  %205 = ashr exact i64 %204, 2
  br label %216

206:                                              ; preds = %199
  %207 = ashr exact i64 %200, 1
  %208 = icmp ult i64 %207, %195
  %209 = select i1 %208, i64 %195, i64 %207
  %210 = sub i64 %7, %192
  %211 = ashr exact i64 %210, 2
  %212 = icmp eq i64 %209, 0
  br i1 %212, label %222, label %213

213:                                              ; preds = %206
  %214 = icmp ugt i64 %209, 4611686018427387903
  br i1 %214, label %215, label %216

215:                                              ; preds = %213
  tail call void @abort() #12
  unreachable

216:                                              ; preds = %203, %213
  %217 = phi i64 [ 4611686018427387903, %203 ], [ %209, %213 ]
  %218 = phi i64 [ %205, %203 ], [ %211, %213 ]
  %219 = shl i64 %217, 2
  %220 = tail call i8* @_Znwm(i64 %219) #10
  %221 = bitcast i8* %220 to float*
  br label %222

222:                                              ; preds = %216, %206
  %223 = phi i64 [ %218, %216 ], [ %211, %206 ]
  %224 = phi i64 [ %217, %216 ], [ 0, %206 ]
  %225 = phi float* [ %221, %216 ], [ null, %206 ]
  %226 = getelementptr inbounds float, float* %225, i64 %223
  %227 = getelementptr inbounds float, float* %225, i64 %224
  %228 = ptrtoint float* %227 to i64
  %229 = getelementptr inbounds float, float* %226, i64 %12
  %230 = add i64 %11, -4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 8
  br i1 %233, label %327, label %234

234:                                              ; preds = %222
  %235 = add i64 %11, -4
  %236 = lshr i64 %235, 2
  %237 = add nsw i64 %223, %236
  %238 = add i64 %237, 1
  %239 = getelementptr float, float* %225, i64 %238
  %240 = add nuw nsw i64 %236, 1
  %241 = getelementptr float, float* %2, i64 %240
  %242 = icmp ult float* %226, %241
  %243 = icmp ugt float* %239, %2
  %244 = and i1 %242, %243
  br i1 %244, label %327, label %245

245:                                              ; preds = %234
  %246 = and i64 %232, 9223372036854775800
  %247 = getelementptr float, float* %226, i64 %246
  %248 = getelementptr float, float* %2, i64 %246
  %249 = getelementptr float, float* %226, i64 %246
  %250 = add nsw i64 %246, -8
  %251 = lshr exact i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 3
  %254 = icmp ult i64 %250, 24
  br i1 %254, label %306, label %255

255:                                              ; preds = %245
  %256 = sub nsw i64 %252, %253
  br label %257

257:                                              ; preds = %257, %255
  %258 = phi i64 [ 0, %255 ], [ %303, %257 ]
  %259 = phi i64 [ %256, %255 ], [ %304, %257 ]
  %260 = getelementptr float, float* %2, i64 %258
  %261 = getelementptr float, float* %226, i64 %258
  %262 = bitcast float* %260 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4, !alias.scope !15
  %264 = getelementptr float, float* %260, i64 4
  %265 = bitcast float* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !15
  %267 = bitcast float* %261 to <4 x i32>*
  store <4 x i32> %263, <4 x i32>* %267, align 4, !alias.scope !18, !noalias !15
  %268 = getelementptr float, float* %261, i64 4
  %269 = bitcast float* %268 to <4 x i32>*
  store <4 x i32> %266, <4 x i32>* %269, align 4, !alias.scope !18, !noalias !15
  %270 = or i64 %258, 8
  %271 = getelementptr float, float* %2, i64 %270
  %272 = getelementptr float, float* %226, i64 %270
  %273 = bitcast float* %271 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !15
  %275 = getelementptr float, float* %271, i64 4
  %276 = bitcast float* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4, !alias.scope !15
  %278 = bitcast float* %272 to <4 x i32>*
  store <4 x i32> %274, <4 x i32>* %278, align 4, !alias.scope !18, !noalias !15
  %279 = getelementptr float, float* %272, i64 4
  %280 = bitcast float* %279 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %280, align 4, !alias.scope !18, !noalias !15
  %281 = or i64 %258, 16
  %282 = getelementptr float, float* %2, i64 %281
  %283 = getelementptr float, float* %226, i64 %281
  %284 = bitcast float* %282 to <4 x i32>*
  %285 = load <4 x i32>, <4 x i32>* %284, align 4, !alias.scope !15
  %286 = getelementptr float, float* %282, i64 4
  %287 = bitcast float* %286 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4, !alias.scope !15
  %289 = bitcast float* %283 to <4 x i32>*
  store <4 x i32> %285, <4 x i32>* %289, align 4, !alias.scope !18, !noalias !15
  %290 = getelementptr float, float* %283, i64 4
  %291 = bitcast float* %290 to <4 x i32>*
  store <4 x i32> %288, <4 x i32>* %291, align 4, !alias.scope !18, !noalias !15
  %292 = or i64 %258, 24
  %293 = getelementptr float, float* %2, i64 %292
  %294 = getelementptr float, float* %226, i64 %292
  %295 = bitcast float* %293 to <4 x i32>*
  %296 = load <4 x i32>, <4 x i32>* %295, align 4, !alias.scope !15
  %297 = getelementptr float, float* %293, i64 4
  %298 = bitcast float* %297 to <4 x i32>*
  %299 = load <4 x i32>, <4 x i32>* %298, align 4, !alias.scope !15
  %300 = bitcast float* %294 to <4 x i32>*
  store <4 x i32> %296, <4 x i32>* %300, align 4, !alias.scope !18, !noalias !15
  %301 = getelementptr float, float* %294, i64 4
  %302 = bitcast float* %301 to <4 x i32>*
  store <4 x i32> %299, <4 x i32>* %302, align 4, !alias.scope !18, !noalias !15
  %303 = add i64 %258, 32
  %304 = add i64 %259, -4
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %257, !llvm.loop !20

306:                                              ; preds = %257, %245
  %307 = phi i64 [ 0, %245 ], [ %303, %257 ]
  %308 = icmp eq i64 %253, 0
  br i1 %308, label %325, label %309

309:                                              ; preds = %306, %309
  %310 = phi i64 [ %322, %309 ], [ %307, %306 ]
  %311 = phi i64 [ %323, %309 ], [ %253, %306 ]
  %312 = getelementptr float, float* %2, i64 %310
  %313 = getelementptr float, float* %226, i64 %310
  %314 = bitcast float* %312 to <4 x i32>*
  %315 = load <4 x i32>, <4 x i32>* %314, align 4, !alias.scope !15
  %316 = getelementptr float, float* %312, i64 4
  %317 = bitcast float* %316 to <4 x i32>*
  %318 = load <4 x i32>, <4 x i32>* %317, align 4, !alias.scope !15
  %319 = bitcast float* %313 to <4 x i32>*
  store <4 x i32> %315, <4 x i32>* %319, align 4, !alias.scope !18, !noalias !15
  %320 = getelementptr float, float* %313, i64 4
  %321 = bitcast float* %320 to <4 x i32>*
  store <4 x i32> %318, <4 x i32>* %321, align 4, !alias.scope !18, !noalias !15
  %322 = add i64 %310, 8
  %323 = add i64 %311, -1
  %324 = icmp eq i64 %323, 0
  br i1 %324, label %325, label %309, !llvm.loop !21

325:                                              ; preds = %309, %306
  %326 = icmp eq i64 %232, %246
  br i1 %326, label %403, label %327

327:                                              ; preds = %325, %234, %222
  %328 = phi float* [ %226, %234 ], [ %226, %222 ], [ %247, %325 ]
  %329 = phi float* [ %2, %234 ], [ %2, %222 ], [ %248, %325 ]
  %330 = phi float* [ %226, %234 ], [ %226, %222 ], [ %249, %325 ]
  %331 = ptrtoint float* %328 to i64
  %332 = add nsw i64 %223, %12
  %333 = add nsw i64 %332, -1
  %334 = getelementptr float, float* %225, i64 %333
  %335 = ptrtoint float* %334 to i64
  %336 = sub i64 %335, %331
  %337 = lshr i64 %336, 2
  %338 = add nuw nsw i64 %337, 1
  %339 = and i64 %338, 7
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %353, label %341

341:                                              ; preds = %327, %341
  %342 = phi float* [ %349, %341 ], [ %328, %327 ]
  %343 = phi float* [ %350, %341 ], [ %329, %327 ]
  %344 = phi float* [ %349, %341 ], [ %330, %327 ]
  %345 = phi i64 [ %351, %341 ], [ %339, %327 ]
  %346 = bitcast float* %343 to i32*
  %347 = load i32, i32* %346, align 4
  %348 = bitcast float* %344 to i32*
  store i32 %347, i32* %348, align 4
  %349 = getelementptr inbounds float, float* %342, i64 1
  %350 = getelementptr inbounds float, float* %343, i64 1
  %351 = add i64 %345, -1
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %353, label %341, !llvm.loop !22

353:                                              ; preds = %341, %327
  %354 = phi float* [ %328, %327 ], [ %349, %341 ]
  %355 = phi float* [ %329, %327 ], [ %350, %341 ]
  %356 = phi float* [ %330, %327 ], [ %349, %341 ]
  %357 = icmp ult i64 %336, 28
  br i1 %357, label %403, label %358

358:                                              ; preds = %353, %358
  %359 = phi float* [ %400, %358 ], [ %354, %353 ]
  %360 = phi float* [ %401, %358 ], [ %355, %353 ]
  %361 = phi float* [ %400, %358 ], [ %356, %353 ]
  %362 = bitcast float* %360 to i32*
  %363 = load i32, i32* %362, align 4
  %364 = bitcast float* %361 to i32*
  store i32 %363, i32* %364, align 4
  %365 = getelementptr inbounds float, float* %359, i64 1
  %366 = getelementptr inbounds float, float* %360, i64 1
  %367 = bitcast float* %366 to i32*
  %368 = load i32, i32* %367, align 4
  %369 = bitcast float* %365 to i32*
  store i32 %368, i32* %369, align 4
  %370 = getelementptr inbounds float, float* %359, i64 2
  %371 = getelementptr inbounds float, float* %360, i64 2
  %372 = bitcast float* %371 to i32*
  %373 = load i32, i32* %372, align 4
  %374 = bitcast float* %370 to i32*
  store i32 %373, i32* %374, align 4
  %375 = getelementptr inbounds float, float* %359, i64 3
  %376 = getelementptr inbounds float, float* %360, i64 3
  %377 = bitcast float* %376 to i32*
  %378 = load i32, i32* %377, align 4
  %379 = bitcast float* %375 to i32*
  store i32 %378, i32* %379, align 4
  %380 = getelementptr inbounds float, float* %359, i64 4
  %381 = getelementptr inbounds float, float* %360, i64 4
  %382 = bitcast float* %381 to i32*
  %383 = load i32, i32* %382, align 4
  %384 = bitcast float* %380 to i32*
  store i32 %383, i32* %384, align 4
  %385 = getelementptr inbounds float, float* %359, i64 5
  %386 = getelementptr inbounds float, float* %360, i64 5
  %387 = bitcast float* %386 to i32*
  %388 = load i32, i32* %387, align 4
  %389 = bitcast float* %385 to i32*
  store i32 %388, i32* %389, align 4
  %390 = getelementptr inbounds float, float* %359, i64 6
  %391 = getelementptr inbounds float, float* %360, i64 6
  %392 = bitcast float* %391 to i32*
  %393 = load i32, i32* %392, align 4
  %394 = bitcast float* %390 to i32*
  store i32 %393, i32* %394, align 4
  %395 = getelementptr inbounds float, float* %359, i64 7
  %396 = getelementptr inbounds float, float* %360, i64 7
  %397 = bitcast float* %396 to i32*
  %398 = load i32, i32* %397, align 4
  %399 = bitcast float* %395 to i32*
  store i32 %398, i32* %399, align 4
  %400 = getelementptr inbounds float, float* %359, i64 8
  %401 = getelementptr inbounds float, float* %360, i64 8
  %402 = icmp eq float* %229, %400
  br i1 %402, label %403, label %358, !llvm.loop !23

403:                                              ; preds = %353, %358, %325
  %404 = load float*, float** %8, align 8
  %405 = ptrtoint float* %404 to i64
  %406 = sub i64 %7, %405
  %407 = ashr exact i64 %406, 2
  %408 = sub nsw i64 0, %407
  %409 = getelementptr inbounds float, float* %226, i64 %408
  %410 = ptrtoint float* %409 to i64
  %411 = icmp sgt i64 %406, 0
  br i1 %411, label %412, label %415

412:                                              ; preds = %403
  %413 = bitcast float* %409 to i8*
  %414 = bitcast float* %404 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %413, i8* align 4 %414, i64 %406, i1 false) #11
  br label %415

415:                                              ; preds = %412, %403
  %416 = load float*, float** %18, align 8
  %417 = icmp eq float* %416, %1
  br i1 %417, label %596, label %418

418:                                              ; preds = %415
  %419 = getelementptr float, float* %416, i64 -1
  %420 = ptrtoint float* %419 to i64
  %421 = sub i64 %420, %7
  %422 = lshr i64 %421, 2
  %423 = add nuw nsw i64 %422, 1
  %424 = icmp ult i64 %423, 8
  br i1 %424, label %521, label %425

425:                                              ; preds = %418
  %426 = add nsw i64 %223, %12
  %427 = getelementptr float, float* %416, i64 -1
  %428 = ptrtoint float* %427 to i64
  %429 = sub i64 %428, %7
  %430 = lshr i64 %429, 2
  %431 = add nsw i64 %426, %430
  %432 = add i64 %431, 1
  %433 = getelementptr float, float* %225, i64 %432
  %434 = add nuw nsw i64 %430, 1
  %435 = getelementptr float, float* %1, i64 %434
  %436 = icmp ult float* %229, %435
  %437 = icmp ugt float* %433, %1
  %438 = and i1 %436, %437
  br i1 %438, label %521, label %439

439:                                              ; preds = %425
  %440 = and i64 %423, 9223372036854775800
  %441 = getelementptr float, float* %229, i64 %440
  %442 = getelementptr float, float* %229, i64 %440
  %443 = getelementptr float, float* %1, i64 %440
  %444 = add nsw i64 %440, -8
  %445 = lshr exact i64 %444, 3
  %446 = add nuw nsw i64 %445, 1
  %447 = and i64 %446, 3
  %448 = icmp ult i64 %444, 24
  br i1 %448, label %500, label %449

449:                                              ; preds = %439
  %450 = sub nsw i64 %446, %447
  br label %451

451:                                              ; preds = %451, %449
  %452 = phi i64 [ 0, %449 ], [ %497, %451 ]
  %453 = phi i64 [ %450, %449 ], [ %498, %451 ]
  %454 = getelementptr float, float* %229, i64 %452
  %455 = getelementptr float, float* %1, i64 %452
  %456 = bitcast float* %455 to <4 x i32>*
  %457 = load <4 x i32>, <4 x i32>* %456, align 4, !alias.scope !24
  %458 = getelementptr float, float* %455, i64 4
  %459 = bitcast float* %458 to <4 x i32>*
  %460 = load <4 x i32>, <4 x i32>* %459, align 4, !alias.scope !24
  %461 = bitcast float* %454 to <4 x i32>*
  store <4 x i32> %457, <4 x i32>* %461, align 4, !alias.scope !27, !noalias !24
  %462 = getelementptr float, float* %454, i64 4
  %463 = bitcast float* %462 to <4 x i32>*
  store <4 x i32> %460, <4 x i32>* %463, align 4, !alias.scope !27, !noalias !24
  %464 = or i64 %452, 8
  %465 = getelementptr float, float* %229, i64 %464
  %466 = getelementptr float, float* %1, i64 %464
  %467 = bitcast float* %466 to <4 x i32>*
  %468 = load <4 x i32>, <4 x i32>* %467, align 4, !alias.scope !24
  %469 = getelementptr float, float* %466, i64 4
  %470 = bitcast float* %469 to <4 x i32>*
  %471 = load <4 x i32>, <4 x i32>* %470, align 4, !alias.scope !24
  %472 = bitcast float* %465 to <4 x i32>*
  store <4 x i32> %468, <4 x i32>* %472, align 4, !alias.scope !27, !noalias !24
  %473 = getelementptr float, float* %465, i64 4
  %474 = bitcast float* %473 to <4 x i32>*
  store <4 x i32> %471, <4 x i32>* %474, align 4, !alias.scope !27, !noalias !24
  %475 = or i64 %452, 16
  %476 = getelementptr float, float* %229, i64 %475
  %477 = getelementptr float, float* %1, i64 %475
  %478 = bitcast float* %477 to <4 x i32>*
  %479 = load <4 x i32>, <4 x i32>* %478, align 4, !alias.scope !24
  %480 = getelementptr float, float* %477, i64 4
  %481 = bitcast float* %480 to <4 x i32>*
  %482 = load <4 x i32>, <4 x i32>* %481, align 4, !alias.scope !24
  %483 = bitcast float* %476 to <4 x i32>*
  store <4 x i32> %479, <4 x i32>* %483, align 4, !alias.scope !27, !noalias !24
  %484 = getelementptr float, float* %476, i64 4
  %485 = bitcast float* %484 to <4 x i32>*
  store <4 x i32> %482, <4 x i32>* %485, align 4, !alias.scope !27, !noalias !24
  %486 = or i64 %452, 24
  %487 = getelementptr float, float* %229, i64 %486
  %488 = getelementptr float, float* %1, i64 %486
  %489 = bitcast float* %488 to <4 x i32>*
  %490 = load <4 x i32>, <4 x i32>* %489, align 4, !alias.scope !24
  %491 = getelementptr float, float* %488, i64 4
  %492 = bitcast float* %491 to <4 x i32>*
  %493 = load <4 x i32>, <4 x i32>* %492, align 4, !alias.scope !24
  %494 = bitcast float* %487 to <4 x i32>*
  store <4 x i32> %490, <4 x i32>* %494, align 4, !alias.scope !27, !noalias !24
  %495 = getelementptr float, float* %487, i64 4
  %496 = bitcast float* %495 to <4 x i32>*
  store <4 x i32> %493, <4 x i32>* %496, align 4, !alias.scope !27, !noalias !24
  %497 = add i64 %452, 32
  %498 = add i64 %453, -4
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %500, label %451, !llvm.loop !29

500:                                              ; preds = %451, %439
  %501 = phi i64 [ 0, %439 ], [ %497, %451 ]
  %502 = icmp eq i64 %447, 0
  br i1 %502, label %519, label %503

503:                                              ; preds = %500, %503
  %504 = phi i64 [ %516, %503 ], [ %501, %500 ]
  %505 = phi i64 [ %517, %503 ], [ %447, %500 ]
  %506 = getelementptr float, float* %229, i64 %504
  %507 = getelementptr float, float* %1, i64 %504
  %508 = bitcast float* %507 to <4 x i32>*
  %509 = load <4 x i32>, <4 x i32>* %508, align 4, !alias.scope !24
  %510 = getelementptr float, float* %507, i64 4
  %511 = bitcast float* %510 to <4 x i32>*
  %512 = load <4 x i32>, <4 x i32>* %511, align 4, !alias.scope !24
  %513 = bitcast float* %506 to <4 x i32>*
  store <4 x i32> %509, <4 x i32>* %513, align 4, !alias.scope !27, !noalias !24
  %514 = getelementptr float, float* %506, i64 4
  %515 = bitcast float* %514 to <4 x i32>*
  store <4 x i32> %512, <4 x i32>* %515, align 4, !alias.scope !27, !noalias !24
  %516 = add i64 %504, 8
  %517 = add i64 %505, -1
  %518 = icmp eq i64 %517, 0
  br i1 %518, label %519, label %503, !llvm.loop !30

519:                                              ; preds = %503, %500
  %520 = icmp eq i64 %423, %440
  br i1 %520, label %596, label %521

521:                                              ; preds = %519, %425, %418
  %522 = phi float* [ %229, %425 ], [ %229, %418 ], [ %441, %519 ]
  %523 = phi float* [ %229, %425 ], [ %229, %418 ], [ %442, %519 ]
  %524 = phi float* [ %1, %425 ], [ %1, %418 ], [ %443, %519 ]
  %525 = ptrtoint float* %524 to i64
  %526 = getelementptr float, float* %416, i64 -1
  %527 = ptrtoint float* %526 to i64
  %528 = sub i64 %527, %525
  %529 = lshr i64 %528, 2
  %530 = add nuw nsw i64 %529, 1
  %531 = and i64 %530, 7
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %545, label %533

533:                                              ; preds = %521, %533
  %534 = phi float* [ %542, %533 ], [ %522, %521 ]
  %535 = phi float* [ %542, %533 ], [ %523, %521 ]
  %536 = phi float* [ %541, %533 ], [ %524, %521 ]
  %537 = phi i64 [ %543, %533 ], [ %531, %521 ]
  %538 = bitcast float* %535 to i32*
  %539 = bitcast float* %536 to i32*
  %540 = load i32, i32* %539, align 4
  store i32 %540, i32* %538, align 4
  %541 = getelementptr inbounds float, float* %536, i64 1
  %542 = getelementptr inbounds float, float* %534, i64 1
  %543 = add i64 %537, -1
  %544 = icmp eq i64 %543, 0
  br i1 %544, label %545, label %533, !llvm.loop !31

545:                                              ; preds = %533, %521
  %546 = phi float* [ undef, %521 ], [ %542, %533 ]
  %547 = phi float* [ %522, %521 ], [ %542, %533 ]
  %548 = phi float* [ %523, %521 ], [ %542, %533 ]
  %549 = phi float* [ %524, %521 ], [ %541, %533 ]
  %550 = icmp ult i64 %528, 28
  br i1 %550, label %596, label %551

551:                                              ; preds = %545, %551
  %552 = phi float* [ %594, %551 ], [ %547, %545 ]
  %553 = phi float* [ %594, %551 ], [ %548, %545 ]
  %554 = phi float* [ %593, %551 ], [ %549, %545 ]
  %555 = bitcast float* %553 to i32*
  %556 = bitcast float* %554 to i32*
  %557 = load i32, i32* %556, align 4
  store i32 %557, i32* %555, align 4
  %558 = getelementptr inbounds float, float* %554, i64 1
  %559 = getelementptr inbounds float, float* %552, i64 1
  %560 = bitcast float* %559 to i32*
  %561 = bitcast float* %558 to i32*
  %562 = load i32, i32* %561, align 4
  store i32 %562, i32* %560, align 4
  %563 = getelementptr inbounds float, float* %554, i64 2
  %564 = getelementptr inbounds float, float* %552, i64 2
  %565 = bitcast float* %564 to i32*
  %566 = bitcast float* %563 to i32*
  %567 = load i32, i32* %566, align 4
  store i32 %567, i32* %565, align 4
  %568 = getelementptr inbounds float, float* %554, i64 3
  %569 = getelementptr inbounds float, float* %552, i64 3
  %570 = bitcast float* %569 to i32*
  %571 = bitcast float* %568 to i32*
  %572 = load i32, i32* %571, align 4
  store i32 %572, i32* %570, align 4
  %573 = getelementptr inbounds float, float* %554, i64 4
  %574 = getelementptr inbounds float, float* %552, i64 4
  %575 = bitcast float* %574 to i32*
  %576 = bitcast float* %573 to i32*
  %577 = load i32, i32* %576, align 4
  store i32 %577, i32* %575, align 4
  %578 = getelementptr inbounds float, float* %554, i64 5
  %579 = getelementptr inbounds float, float* %552, i64 5
  %580 = bitcast float* %579 to i32*
  %581 = bitcast float* %578 to i32*
  %582 = load i32, i32* %581, align 4
  store i32 %582, i32* %580, align 4
  %583 = getelementptr inbounds float, float* %554, i64 6
  %584 = getelementptr inbounds float, float* %552, i64 6
  %585 = bitcast float* %584 to i32*
  %586 = bitcast float* %583 to i32*
  %587 = load i32, i32* %586, align 4
  store i32 %587, i32* %585, align 4
  %588 = getelementptr inbounds float, float* %554, i64 7
  %589 = getelementptr inbounds float, float* %552, i64 7
  %590 = bitcast float* %589 to i32*
  %591 = bitcast float* %588 to i32*
  %592 = load i32, i32* %591, align 4
  store i32 %592, i32* %590, align 4
  %593 = getelementptr inbounds float, float* %554, i64 8
  %594 = getelementptr inbounds float, float* %552, i64 8
  %595 = icmp eq float* %593, %416
  br i1 %595, label %596, label %551, !llvm.loop !32

596:                                              ; preds = %545, %551, %519, %415
  %597 = phi float* [ %229, %415 ], [ %441, %519 ], [ %546, %545 ], [ %594, %551 ]
  %598 = ptrtoint float* %597 to i64
  %599 = load float*, float** %8, align 8
  store i64 %410, i64* %191, align 8
  store i64 %598, i64* %24, align 8
  store i64 %228, i64* %16, align 8
  %600 = icmp eq float* %599, null
  br i1 %600, label %603, label %601

601:                                              ; preds = %596
  %602 = bitcast float* %599 to i8*
  tail call void @_ZdlPv(i8* %602) #10
  br label %603

603:                                              ; preds = %601, %596, %40, %185, %189, %4
  %604 = phi float* [ %1, %4 ], [ %1, %189 ], [ %1, %185 ], [ %1, %40 ], [ %226, %596 ], [ %226, %601 ]
  ret float* %604
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc20ResidualEchoDetector10GetMetricsEv(%"struct.webrtc::EchoDetector::Metrics"* noalias nocapture sret, %"class.webrtc::ResidualEchoDetector"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.webrtc::EchoDetector::Metrics", %"struct.webrtc::EchoDetector::Metrics"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 getelementptr inbounds ({ { { { { i8, [7 x i8], %union.anon.62 } } } }, { { { { i8, [7 x i8], %union.anon.62 } } } } }, { { { { { i8, [7 x i8], %union.anon.62 } } } }, { { { { i8, [7 x i8], %union.anon.62 } } } } }* @__const._ZNK6webrtc20ResidualEchoDetector10GetMetricsEv.metrics, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 24, i1 false)
  %4 = getelementptr inbounds %"struct.webrtc::EchoDetector::Metrics", %"struct.webrtc::EchoDetector::Metrics"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %1, i64 0, i32 13
  %6 = load float, float* %5, align 4
  store i8 1, i8* %3, align 8
  %7 = fpext float %6 to double
  %8 = getelementptr inbounds %"struct.webrtc::EchoDetector::Metrics", %"struct.webrtc::EchoDetector::Metrics"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %7, double* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::ResidualEchoDetector", %"class.webrtc::ResidualEchoDetector"* %1, i64 0, i32 15
  %10 = tail call float @_ZNK6webrtc9MovingMax3maxEv(%"class.webrtc::MovingMax"* %9) #11
  store i8 1, i8* %4, align 8
  %11 = fpext float %10 to double
  %12 = getelementptr inbounds %"struct.webrtc::EchoDetector::Metrics", %"struct.webrtc::EchoDetector::Metrics"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store double %11, double* %12, align 8
  ret void
}

declare float @_ZNK6webrtc9MovingMax3maxEv(%"class.webrtc::MovingMax"*) local_unnamed_addr #2

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: nounwind
declare void @_ZN6webrtc13ApmDataDumperD1Ev(%"class.webrtc::ApmDataDumper"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i8 0, i8 2}
!5 = distinct !{!5, !3}
!6 = !{!7}
!7 = distinct !{!7, !8}
!8 = distinct !{!8, !"LVerDomain"}
!9 = !{!10}
!10 = distinct !{!10, !8}
!11 = distinct !{!11, !12}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = distinct !{!13, !3}
!14 = distinct !{!14, !12}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !12}
!21 = distinct !{!21, !3}
!22 = distinct !{!22, !3}
!23 = distinct !{!23, !12}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !12}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !3}
!32 = distinct !{!32, !12}
