; ModuleID = '../../third_party/blink/renderer/core/layout/grid_baseline_alignment.cc'
source_filename = "../../third_party/blink/renderer/core/layout/grid_baseline_alignment.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::BaselineGroup" = type { i8, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::HashSet" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.0" }
%"class.WTF::HashTable.0" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.860, %"class.WTF::Vector.861", %"class.std::__1::unique_ptr.866", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.891, %"class.blink::Persistent.892" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.694", %"class.std::__1::unique_ptr.696" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.255", %"class.blink::DataRef.406", %"class.blink::DataRef.410", %"class.blink::DataRef.610", %"class.blink::DataRef.677", %"class.blink::DataRef.681", %"class.blink::DataRef.685", %"class.blink::DataRef.689", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.4", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::DataRef.4" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.6", %"class.blink::Font" }
%"class.WTF::RefCounted.6" = type { %"class.base::RefCounted.7" }
%"class.base::RefCounted.7" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.39 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.11, %class.scoped_refptr.19, %class.scoped_refptr.29, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.38 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.10 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.10 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1286", [4 x i8] }>
%"class.WTF::RefCounted.1286" = type { %"class.base::RefCounted.1287" }
%"class.base::RefCounted.1287" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.17", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.12" }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.19 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.20", %"class.WTF::RefCounted.27", [4 x i8] }>
%"class.blink::FontSettings.20" = type { %"class.WTF::Vector.21" }
%"class.WTF::Vector.21" = type { %"class.WTF::VectorBuffer.22" }
%"class.WTF::VectorBuffer.22" = type { %"class.WTF::VectorBufferBase.23" }
%"class.WTF::VectorBufferBase.23" = type { %"class.blink::FontTagValuePair.24"*, i32, i32 }
%"class.blink::FontTagValuePair.24" = type { i32, float }
%"class.WTF::RefCounted.27" = type { %"class.base::RefCounted.28" }
%"class.base::RefCounted.28" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.29 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.30", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.35, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.35 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.38 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.39 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.40", %"class.WTF::Vector.42", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.40" = type { %"class.base::RefCounted.41" }
%"class.base::RefCounted.41" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.42" = type { %"class.WTF::VectorBuffer.43" }
%"class.WTF::VectorBuffer.43" = type { %"class.WTF::VectorBufferBase.44", [8 x i8] }
%"class.WTF::VectorBufferBase.44" = type { %class.scoped_refptr.45*, i32, i32 }
%class.scoped_refptr.45 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.46", [4 x i8] }>
%"class.WTF::RefCounted.46" = type { %"class.base::RefCounted.47" }
%"class.base::RefCounted.47" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.62", %class.scoped_refptr.67, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.46" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.50 }
%union.anon.50 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.61, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.51" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.51" }>
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.56" }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.61 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.65, %class.scoped_refptr.65 }
%class.scoped_refptr.65 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.67 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.68", [4 x i8] }>
%"class.WTF::RefCounted.68" = type { %"class.base::RefCounted.69" }
%"class.base::RefCounted.69" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.70", i32, [4 x i8], %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.224", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.249", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.135", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.188", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.106" = type { %"struct.std::__1::__atomic_base.107" }
%"struct.std::__1::__atomic_base.107" = type { %"struct.std::__1::__atomic_base.108" }
%"struct.std::__1::__atomic_base.108" = type { %"struct.std::__1::__cxx_atomic_impl.109" }
%"struct.std::__1::__cxx_atomic_impl.109" = type { %"struct.std::__1::__cxx_atomic_base_impl.110" }
%"struct.std::__1::__cxx_atomic_base_impl.110" = type { i64 }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::Worklist.124"* }
%"class.blink::Worklist.124" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist.131"* }
%"class.blink::Worklist.131" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.135" = type { %"class.std::__1::__compressed_pair.136" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.137" }
%"struct.std::__1::__compressed_pair_elem.137" = type { %"class.blink::Worklist.138"* }
%"class.blink::Worklist.138" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::Worklist.145"* }
%"class.blink::Worklist.145" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::Worklist.152"* }
%"class.blink::Worklist.152" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::Worklist.159"* }
%"class.blink::Worklist.159" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.106" }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.166", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.182", [4 x i8] }>
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168", %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { i64 }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { float }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.191", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.200" }
%"class.WTF::Vector.200" = type { %"class.WTF::VectorBuffer.201" }
%"class.WTF::VectorBuffer.201" = type { %"class.WTF::VectorBufferBase.202" }
%"class.WTF::VectorBufferBase.202" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.216" }
%"class.WTF::VectorBuffer.216" = type { %"class.WTF::VectorBufferBase.217" }
%"class.WTF::VectorBufferBase.217" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.230" }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.117"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.124"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.131"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.138"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.145"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1279", i64 }
%"class.std::__1::vector.1279" = type { %"class.std::__1::__vector_base.1280" }
%"class.std::__1::__vector_base.1280" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1281" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1281" = type { %"struct.std::__1::__compressed_pair_elem.1282" }
%"struct.std::__1::__compressed_pair_elem.1282" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.248 }
%class.scoped_refptr.248 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.249" = type { %"struct.std::__1::__atomic_base.250" }
%"struct.std::__1::__atomic_base.250" = type { %"struct.std::__1::__cxx_atomic_impl.251" }
%"struct.std::__1::__cxx_atomic_impl.251" = type { %"struct.std::__1::__cxx_atomic_base_impl.252" }
%"struct.std::__1::__cxx_atomic_base_impl.252" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.51" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.56" }
%"class.blink::Length" = type <{ %union.anon.254, i8, i8, i8, i8 }>
%union.anon.254 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.255" = type { %class.scoped_refptr.256 }
%class.scoped_refptr.256 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.257", [4 x i8], %"class.blink::DataRef.259", %"class.blink::DataRef.294", %"class.WTF::Vector.298", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.303, %class.scoped_refptr.312, %"class.blink::Persistent.320", %"class.blink::Persistent.322", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.257" = type { %"class.base::RefCounted.258" }
%"class.base::RefCounted.258" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.259" = type { %class.scoped_refptr.260 }
%class.scoped_refptr.260 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.261", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.263, %class.scoped_refptr.270, %"class.blink::Persistent.284", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.261" = type { %"class.base::RefCounted.262" }
%"class.base::RefCounted.262" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.263 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.264", %"class.WTF::Vector.265" }
%"class.base::RefCountedThreadSafe.264" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.265" = type { %"class.WTF::VectorBuffer.266" }
%"class.WTF::VectorBuffer.266" = type { %"class.WTF::VectorBufferBase.267" }
%"class.WTF::VectorBufferBase.267" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.270 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.271", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.271" = type { %"class.base::RefCounted.272" }
%"class.base::RefCounted.272" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.273", %"class.blink::Persistent" }
%"class.WTF::HashMap.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ %"struct.WTF::KeyValuePair.277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.277" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1303 }
%class.scoped_refptr.1303 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1304", %"class.WTF::Vector.593", %"class.WTF::Vector.1306", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1304" = type { %"class.base::RefCounted.1305" }
%"class.base::RefCounted.1305" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.593" = type { %"class.WTF::VectorBuffer.594" }
%"class.WTF::VectorBuffer.594" = type { %"class.WTF::VectorBufferBase.595" }
%"class.WTF::VectorBufferBase.595" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1306" = type { %"class.WTF::VectorBuffer.1307" }
%"class.WTF::VectorBuffer.1307" = type { %"class.WTF::VectorBufferBase.1308" }
%"class.WTF::VectorBufferBase.1308" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1309 }
%union.anon.1309 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.278" }
%"class.blink::PersistentBase.278" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.283" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.279" }
%"class.WTF::HashMap.279" = type { %"class.WTF::HashTable.280" }
%"class.WTF::HashTable.280" = type <{ %"struct.WTF::KeyValuePair.282"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.282" = type opaque
%"class.blink::PersistentNodePtr.283" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.284" = type { %"class.blink::PersistentBase.285" }
%"class.blink::PersistentBase.285" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.283" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.288" }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.294" = type { %class.scoped_refptr.295 }
%class.scoped_refptr.295 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.296", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.296" = type { %"class.base::RefCounted.297" }
%"class.base::RefCounted.297" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.298" = type { %"class.WTF::VectorBuffer.299" }
%"class.WTF::VectorBuffer.299" = type { %"class.WTF::VectorBufferBase.300" }
%"class.WTF::VectorBufferBase.300" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.303 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.304", %"class.WTF::Vector.306" }
%"class.WTF::RefCounted.304" = type { %"class.base::RefCounted.305" }
%"class.base::RefCounted.305" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.306" = type { %"class.WTF::VectorBuffer.307" }
%"class.WTF::VectorBuffer.307" = type { %"class.WTF::VectorBufferBase.308" }
%"class.WTF::VectorBufferBase.308" = type { %"struct.std::__1::pair.309"*, i32, i32 }
%"struct.std::__1::pair.309" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.312 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.313", [4 x i8], %"class.WTF::Vector.315" }
%"class.WTF::RefCounted.313" = type { %"class.base::RefCounted.314" }
%"class.base::RefCounted.314" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.315" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.317", [28 x i8] }>
%"class.WTF::VectorBufferBase.317" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.320" = type { %"class.blink::PersistentBase.321" }
%"class.blink::PersistentBase.321" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.283" }
%"class.blink::Persistent.322" = type { %"class.blink::PersistentBase.323" }
%"class.blink::PersistentBase.323" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.283" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.326", %"class.blink::Member.404" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.328", %"class.blink::Member.340", %"class.blink::Member.334", %"class.blink::Member.342", %"class.blink::Member.342", %"class.blink::Member.384", %"class.blink::Member.386", %"class.blink::Member.388", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.393", %"class.blink::HeapVector.395" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.332", %"class.blink::Member.332" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.332", %"class.blink::Member.334", %"class.blink::Member.332", %"class.blink::Member.332", %"class.blink::Member.336" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.336" = type { %"class.blink::MemberBase.337" }
%"class.blink::MemberBase.337" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::Node"* }
%"class.blink::Member.340" = type { %"class.blink::MemberBase.341" }
%"class.blink::MemberBase.341" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.922", %"class.WTF::Vector.922", i8, i32, %"class.blink::Member.929", %"class.blink::Member.931", %"class.blink::Member.933", %"class.blink::Member.935", %"class.blink::Member.937", %"class.blink::Member.939", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.947", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.953", %"class.blink::Member.955", %"class.blink::Member.401", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.958", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.377", %"class.blink::Member.357", %"class.blink::Member.982", %"class.blink::Member.357", %"class.blink::Member.357", %"class.blink::Member.357", %"class.blink::UserActionElementSet", %"class.blink::Member.991", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.999", i16, i8, %"class.blink::Member.1006", %"class.blink::Member.1008", %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.blink::TextLinkColors", %"class.blink::Member.1014", i8, [7 x i8], %"class.blink::HeapHashMap.1016", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.357", %"class.WTF::Vector.1023", %"class.blink::Member.1028", %"class.blink::Member.1030", i8, %"class.blink::Member.357", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1032", %"class.blink::HeapVector.1034", %"class.std::__1::unique_ptr.1042", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1048", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1061", %"class.WTF::Vector.1063", i8, i8, %"class.std::__1::unique_ptr.1068", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.377", %"class.blink::HeapVector.1074", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1082", i8, i32, %"class.blink::Member.1084", %"class.blink::Member.1086", %"class.blink::Member.1088", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1090", %"class.WTF::HashMap.1092", %"class.blink::Member.1097", %"class.blink::Member.1099", %"class.blink::Member.1101", %"class.blink::Member.1103", %"class.blink::Member.340", %"class.blink::Member.340", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1105", i8, i32, %"class.blink::Member.1112", %"class.blink::Member.1114", i32, %"class.blink::Member.1116", %"class.blink::Member.1118", %"class.blink::Member.1120", %"class.std::__1::unique_ptr.1122", i64, %"class.std::__1::unique_ptr.1128", i32, i32, %"class.blink::Member.1143", %"class.blink::Member.1145", %"class.blink::Member.1147", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1149", %"class.WTF::Vector.1151", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1156", %"class.blink::Member.1163", %"class.std::__1::unique_ptr.1165", %"class.blink::Member.1171", i8, i8, %"class.WTF::String", %"class.blink::Member.1173", i8, [7 x i8], %"class.blink::HeapHashMap.1175", %"class.blink::HeapObserverSet", %"class.blink::Member.1189", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1191", i32, i8, i8, %"class.blink::WeakMember.1193", %"class.blink::Member.1194" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.915" }
%"class.blink::HeapHashMap.915" = type { %"class.WTF::HashMap.918" }
%"class.WTF::HashMap.918" = type { %"class.WTF::HashTable.919" }
%"class.WTF::HashTable.919" = type <{ %"struct.WTF::KeyValuePair.921"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.921" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.922" = type { %"class.WTF::VectorBuffer.923" }
%"class.WTF::VectorBuffer.923" = type { %"class.WTF::VectorBufferBase.924" }
%"class.WTF::VectorBufferBase.924" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.925 }
%class.scoped_refptr.925 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.926", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.926" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.929" = type { %"class.blink::MemberBase.930" }
%"class.blink::MemberBase.930" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.931" = type { %"class.blink::MemberBase.932" }
%"class.blink::MemberBase.932" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1207", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1248", i32, i8, [3 x i8], %"class.blink::HeapVector.1250", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1258", %"class.blink::Member.1260", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1269", %"class.blink::Member.1275", %"class.blink::Member.1277", i8, [7 x i8] }>
%"class.blink::Supplementable.1207" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1208" }
%"class.blink::HeapHashMap.1208" = type { %"class.WTF::HashMap.1211" }
%"class.WTF::HashMap.1211" = type { %"class.WTF::HashTable.1212" }
%"class.WTF::HashTable.1212" = type <{ %"struct.WTF::KeyValuePair.1214"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1214" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1223" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1215" }
%"class.blink::HeapObserverSet.1215" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1216" }
%"class.blink::HeapHashSet.1216" = type { %"class.WTF::HashSet.1219" }
%"class.WTF::HashSet.1219" = type { %"class.WTF::HashTable.1220" }
%"class.WTF::HashTable.1220" = type <{ %"class.blink::WeakMember.1222"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1222" = type opaque
%"class.blink::Supplementable.1223" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1224" }
%"class.blink::HeapHashMap.1224" = type { %"class.WTF::HashMap.1227" }
%"class.WTF::HashMap.1227" = type { %"class.WTF::HashTable.1228" }
%"class.WTF::HashTable.1228" = type <{ %"struct.WTF::KeyValuePair.1230"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1230" = type { i8*, %"class.blink::Member.1289" }
%"class.blink::Member.1289" = type { %"class.blink::MemberBase.1290" }
%"class.blink::MemberBase.1290" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1291" }
%"class.blink::Member.1291" = type { %"class.blink::MemberBase.1292" }
%"class.blink::MemberBase.1292" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1231, %"class.std::__1::unique_ptr.1232", %"class.std::__1::unique_ptr.1232", %"class.std::__1::unique_ptr.1238", %"class.std::__1::unique_ptr.1238", %"class.blink::Member.931", i32, [4 x i8], %"class.WTF::HashSet.1244", i32, i32 }
%class.scoped_refptr.1231 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1232" = type { %"class.std::__1::__compressed_pair.1233" }
%"class.std::__1::__compressed_pair.1233" = type { %"struct.std::__1::__compressed_pair_elem.1234" }
%"struct.std::__1::__compressed_pair_elem.1234" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1238" = type { %"class.std::__1::__compressed_pair.1239" }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.1240" }
%"struct.std::__1::__compressed_pair_elem.1240" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1244" = type { %"class.WTF::HashTable.1245" }
%"class.WTF::HashTable.1245" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1248" = type { %"class.blink::MemberBase.1249" }
%"class.blink::MemberBase.1249" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1250" = type { %"class.WTF::Vector.1253" }
%"class.WTF::Vector.1253" = type { %"class.WTF::VectorBuffer.1254" }
%"class.WTF::VectorBuffer.1254" = type { %"class.WTF::VectorBufferBase.1255" }
%"class.WTF::VectorBufferBase.1255" = type { %"class.blink::Member.1256"*, i32, i32 }
%"class.blink::Member.1256" = type opaque
%"class.blink::Member.1258" = type { %"class.blink::MemberBase.1259" }
%"class.blink::MemberBase.1259" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1260" = type { %"class.blink::MemberBase.1261" }
%"class.blink::MemberBase.1261" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1262", i32, i32 }
%"class.blink::HeapHashMap.1262" = type { %"class.WTF::HashMap.1265" }
%"class.WTF::HashMap.1265" = type { %"class.WTF::HashTable.1266" }
%"class.WTF::HashTable.1266" = type <{ %"struct.WTF::KeyValuePair.1268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1268" = type opaque
%"class.std::__1::unique_ptr.1269" = type { %"class.std::__1::__compressed_pair.1270" }
%"class.std::__1::__compressed_pair.1270" = type { %"struct.std::__1::__compressed_pair_elem.1271" }
%"struct.std::__1::__compressed_pair_elem.1271" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1275" = type { %"class.blink::MemberBase.1276" }
%"class.blink::MemberBase.1276" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1277" = type { %"class.blink::MemberBase.1278" }
%"class.blink::MemberBase.1278" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.933" = type { %"class.blink::MemberBase.934" }
%"class.blink::MemberBase.934" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.935" = type { %"class.blink::MemberBase.936" }
%"class.blink::MemberBase.936" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.947" = type { %"class.std::__1::__compressed_pair.948" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.949" }
%"struct.std::__1::__compressed_pair_elem.949" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.941" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.blink::KURL"* }
%"class.blink::Member.953" = type { %"class.blink::MemberBase.954" }
%"class.blink::MemberBase.954" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.955" = type { %"class.blink::MemberBase.956" }
%"class.blink::MemberBase.956" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.401" = type { %"class.blink::MemberBase.402" }
%"class.blink::MemberBase.402" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.957 }
%class.scoped_refptr.957 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.958" = type { %"class.WTF::VectorBuffer.959" }
%"class.WTF::VectorBuffer.959" = type { %"class.WTF::VectorBufferBase.960" }
%"class.WTF::VectorBufferBase.960" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.961 }
%class.scoped_refptr.961 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.962", i32, i32, %"class.blink::Persistent.964" }
%"class.WTF::RefCounted.962" = type { %"class.base::RefCounted.963" }
%"class.base::RefCounted.963" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.964" = type { %"class.blink::PersistentBase.965" }
%"class.blink::PersistentBase.965" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.283" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.968" }
%"class.blink::HeapHashMap.968" = type { %"class.WTF::HashMap.971" }
%"class.WTF::HashMap.971" = type { %"class.WTF::HashTable.972" }
%"class.WTF::HashTable.972" = type <{ %"struct.WTF::KeyValuePair.974"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.974" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.975" }
%"class.blink::MemberBase.975" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.984" }
%"class.blink::HeapHashMap.984" = type { %"class.WTF::HashMap.987" }
%"class.WTF::HashMap.987" = type { %"class.WTF::HashTable.988" }
%"class.WTF::HashTable.988" = type <{ %"struct.WTF::KeyValuePair.990"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.990" = type opaque
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.995" }
%"class.WTF::HashSet.995" = type { %"class.WTF::HashTable.996" }
%"class.WTF::HashTable.996" = type <{ %"class.blink::WeakMember.998"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.998" = type opaque
%"class.blink::HeapHashSet.999" = type { %"class.WTF::HashSet.1002" }
%"class.WTF::HashSet.1002" = type { %"class.WTF::HashTable.1003" }
%"class.WTF::HashTable.1003" = type <{ %"class.blink::WeakMember.1005"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1005" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1016" = type { %"class.WTF::HashMap.1019" }
%"class.WTF::HashMap.1019" = type { %"class.WTF::HashTable.1020" }
%"class.WTF::HashTable.1020" = type <{ %"struct.WTF::KeyValuePair.1022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1022" = type opaque
%"class.WTF::Vector.1023" = type { %"class.WTF::VectorBuffer.1024" }
%"class.WTF::VectorBuffer.1024" = type { %"class.WTF::VectorBufferBase.1025" }
%"class.WTF::VectorBufferBase.1025" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.357" = type { %"class.blink::MemberBase.358" }
%"class.blink::MemberBase.358" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.362" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.359 }
%class.scoped_refptr.359 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.360", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.360" = type { %"class.base::RefCounted.361" }
%"class.base::RefCounted.361" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.362" = type { %"class.blink::MemberBase.363" }
%"class.blink::MemberBase.363" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.366", %"class.blink::Member.368", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.366" = type { %"class.WTF::SingleThreadedBitField.367" }
%"class.WTF::SingleThreadedBitField.367" = type { i32 }
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.370 }
%class.scoped_refptr.370 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.371", %"class.WTF::AtomicString", %"class.WTF::Vector.373" }
%"class.WTF::RefCounted.371" = type { %"class.base::RefCounted.372" }
%"class.base::RefCounted.372" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.373" = type { %"class.WTF::VectorBuffer.374" }
%"class.WTF::VectorBuffer.374" = type { %"class.WTF::VectorBufferBase.300", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1034" = type { %"class.WTF::Vector.1037" }
%"class.WTF::Vector.1037" = type { %"class.WTF::VectorBuffer.1038" }
%"class.WTF::VectorBuffer.1038" = type { %"class.WTF::VectorBufferBase.1039" }
%"class.WTF::VectorBufferBase.1039" = type { %"class.blink::Member.1040"*, i32, i32 }
%"class.blink::Member.1040" = type opaque
%"class.std::__1::unique_ptr.1042" = type { %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1048" = type { %"class.WTF::HashSet.1051" }
%"class.WTF::HashSet.1051" = type { %"class.WTF::HashTable.1052" }
%"class.WTF::HashTable.1052" = type <{ %"class.blink::WeakMember.1054"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1054" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1055", i32, [4 x i8] }>
%"class.WTF::Vector.1055" = type { %"class.WTF::VectorBuffer.1056" }
%"class.WTF::VectorBuffer.1056" = type { %"class.WTF::VectorBufferBase.1057" }
%"class.WTF::VectorBufferBase.1057" = type { %"struct.std::__1::pair.1058"*, i32, i32 }
%"struct.std::__1::pair.1058" = type opaque
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1063" = type { %"class.WTF::VectorBuffer.1064" }
%"class.WTF::VectorBuffer.1064" = type { %"class.WTF::VectorBufferBase.1065" }
%"class.WTF::VectorBufferBase.1065" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1068" = type { %"class.std::__1::__compressed_pair.1069" }
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.377" = type { %"class.WTF::Vector.380" }
%"class.WTF::Vector.380" = type { %"class.WTF::VectorBuffer.381" }
%"class.WTF::VectorBuffer.381" = type { %"class.WTF::VectorBufferBase.382" }
%"class.WTF::VectorBufferBase.382" = type { %"class.blink::Member.357"*, i32, i32 }
%"class.blink::HeapVector.1074" = type { %"class.WTF::Vector.1077" }
%"class.WTF::Vector.1077" = type { %"class.WTF::VectorBuffer.1078" }
%"class.WTF::VectorBuffer.1078" = type { %"class.WTF::VectorBufferBase.1079" }
%"class.WTF::VectorBufferBase.1079" = type { %"class.blink::Member.1080"*, i32, i32 }
%"class.blink::Member.1080" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.340" }
%"class.blink::Member.1082" = type { %"class.blink::MemberBase.1083" }
%"class.blink::MemberBase.1083" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1084" = type { %"class.blink::MemberBase.1085" }
%"class.blink::MemberBase.1085" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1086" = type { %"class.blink::MemberBase.1087" }
%"class.blink::MemberBase.1087" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1088" = type { %"class.blink::MemberBase.1089" }
%"class.blink::MemberBase.1089" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1090" = type { %"class.blink::MemberBase.1091" }
%"class.blink::MemberBase.1091" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1092" = type { %"class.WTF::HashTable.1093" }
%"class.WTF::HashTable.1093" = type <{ %"struct.WTF::KeyValuePair.1096"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1096" = type opaque
%"class.blink::Member.1097" = type { %"class.blink::MemberBase.1098" }
%"class.blink::MemberBase.1098" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1099" = type { %"class.blink::MemberBase.1100" }
%"class.blink::MemberBase.1100" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1101" = type { %"class.blink::MemberBase.1102" }
%"class.blink::MemberBase.1102" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.981", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.978, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.978 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.979" }>
%"class.base::RefCountedThreadSafe.979" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.980 }
%class.scoped_refptr.980 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.981" = type { %"class.blink::MemberBase.341" }
%"class.blink::HeapHashSet.1105" = type { %"class.WTF::HashSet.1108" }
%"class.WTF::HashSet.1108" = type { %"class.WTF::HashTable.1109" }
%"class.WTF::HashTable.1109" = type <{ %"class.blink::Member.1111"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1111" = type opaque
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1116" = type { %"class.blink::MemberBase.1117" }
%"class.blink::MemberBase.1117" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1118" = type { %"class.blink::MemberBase.1119" }
%"class.blink::MemberBase.1119" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1120" = type { %"class.blink::MemberBase.1121" }
%"class.blink::MemberBase.1121" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1122" = type { %"class.std::__1::__compressed_pair.1123" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1128" = type { %"class.std::__1::__compressed_pair.1129" }
%"class.std::__1::__compressed_pair.1129" = type { %"struct.std::__1::__compressed_pair_elem.1130" }
%"struct.std::__1::__compressed_pair_elem.1130" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.1131", %"class.WTF::HashSet.1131", %"class.WTF::HashSet.1131", %"class.WTF::HashSet.1131", %"class.WTF::HashSet.1131", %"class.WTF::HashSet.1131", i32, [4 x i8], %"class.WTF::HashMap.1135", %"class.WTF::HashMap.1135", %"class.WTF::HashMap.1135", %"class.WTF::HashMap.1135", %"class.WTF::HashMap.1135", %"class.WTF::HashMap.1135", %"class.WTF::HashMap.1135", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.1131" = type { %"class.WTF::HashTable.1132" }
%"class.WTF::HashTable.1132" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1135" = type { %"class.WTF::HashTable.1136" }
%"class.WTF::HashTable.1136" = type <{ %"struct.WTF::KeyValuePair.1139"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1139" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1143" = type { %"class.blink::MemberBase.1144" }
%"class.blink::MemberBase.1144" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1145" = type { %"class.blink::MemberBase.1146" }
%"class.blink::MemberBase.1146" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.1148" }
%"class.blink::MemberBase.1148" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1149" = type { %"class.blink::MemberBase.1150" }
%"class.blink::MemberBase.1150" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1151" = type { %"class.WTF::VectorBuffer.1152" }
%"class.WTF::VectorBuffer.1152" = type { %"class.WTF::VectorBufferBase.1153" }
%"class.WTF::VectorBufferBase.1153" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1156" = type { %"class.WTF::HashMap.1159" }
%"class.WTF::HashMap.1159" = type { %"class.WTF::HashTable.1160" }
%"class.WTF::HashTable.1160" = type <{ %"struct.WTF::KeyValuePair.1162"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1162" = type opaque
%"class.blink::Member.1163" = type { %"class.blink::MemberBase.1164" }
%"class.blink::MemberBase.1164" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1165" = type { %"class.std::__1::__compressed_pair.1166" }
%"class.std::__1::__compressed_pair.1166" = type { %"struct.std::__1::__compressed_pair_elem.1167" }
%"struct.std::__1::__compressed_pair_elem.1167" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1173" = type { %"class.blink::MemberBase.1174" }
%"class.blink::MemberBase.1174" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1175" = type { %"class.WTF::HashMap.1178" }
%"class.WTF::HashMap.1178" = type { %"class.WTF::HashTable.1179" }
%"class.WTF::HashTable.1179" = type <{ %"struct.WTF::KeyValuePair.1181"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1181" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1182" }
%"class.blink::HeapHashSet.1182" = type { %"class.WTF::HashSet.1185" }
%"class.WTF::HashSet.1185" = type { %"class.WTF::HashTable.1186" }
%"class.WTF::HashTable.1186" = type <{ %"class.blink::WeakMember.1188"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1188" = type opaque
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.340", %"class.blink::HeapHashSet.1198", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1205", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1198" = type { %"class.WTF::HashSet.1201" }
%"class.WTF::HashSet.1201" = type { %"class.WTF::HashTable.1202" }
%"class.WTF::HashTable.1202" = type <{ %"class.blink::Member.1204"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1204" = type opaque
%"class.blink::HeapTaskRunnerTimer.1205" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1206", { i64, i64 } }
%"class.blink::WeakMember.1206" = type { %"class.blink::MemberBase.1192" }
%"class.blink::WeakMember.1193" = type { %"class.blink::MemberBase.333" }
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.334" = type { %"class.blink::MemberBase.335" }
%"class.blink::MemberBase.335" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.342" = type { %"class.blink::MemberBase.343" }
%"class.blink::MemberBase.343" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.346" }
%"class.blink::HeapHashMap.346" = type { %"class.WTF::HashMap.349" }
%"class.WTF::HashMap.349" = type { %"class.WTF::HashTable.350" }
%"class.WTF::HashTable.350" = type <{ %"struct.WTF::KeyValuePair.352"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.352" = type { %"class.WTF::AtomicString", %"class.blink::Member.353" }
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.357", i32, %"class.blink::HeapVector.377" }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.390" }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::HeapHashMap.392"* }
%"class.blink::HeapHashMap.392" = type opaque
%"class.blink::Member.393" = type { %"class.blink::MemberBase.394" }
%"class.blink::MemberBase.394" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.395" = type { %"class.WTF::Vector.398" }
%"class.WTF::Vector.398" = type { %"class.WTF::VectorBuffer.399" }
%"class.WTF::VectorBuffer.399" = type { %"class.WTF::VectorBufferBase.400" }
%"class.WTF::VectorBufferBase.400" = type { %"class.blink::Member.401"*, i32, i32 }
%"class.blink::Member.404" = type { %"class.blink::MemberBase.405" }
%"class.blink::MemberBase.405" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.406" = type { %class.scoped_refptr.407 }
%class.scoped_refptr.407 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.408", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.408" = type { %"class.base::RefCounted.409" }
%"class.base::RefCounted.409" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.410" = type { %class.scoped_refptr.411 }
%class.scoped_refptr.411 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.412", [4 x i8], %"class.blink::DataRef.414", %"class.blink::DataRef.480", %"class.blink::TransformOperations", %class.scoped_refptr.312, %"class.blink::Persistent.604", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.412" = type { %"class.base::RefCounted.413" }
%"class.base::RefCounted.413" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.414" = type { %class.scoped_refptr.415 }
%class.scoped_refptr.415 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.416", [4 x i8], %"class.blink::DataRef.418", %"class.blink::Persistent.456", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.416" = type { %"class.base::RefCounted.417" }
%"class.base::RefCounted.417" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.418" = type { %class.scoped_refptr.419 }
%class.scoped_refptr.419 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.420", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.438, %class.scoped_refptr.441, %class.scoped_refptr.444, %class.scoped_refptr.447, %class.scoped_refptr.448, %class.scoped_refptr.449, %"class.blink::Persistent.456", %"class.blink::Persistent.471", %"class.absl::optional.475", %"class.absl::optional.475", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.420" = type { %"class.base::RefCounted.421" }
%"class.base::RefCounted.421" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.422", %"class.std::__1::unique_ptr.427" }
%"class.WTF::Vector.422" = type { %"class.WTF::VectorBuffer.423" }
%"class.WTF::VectorBuffer.423" = type { %"class.WTF::VectorBufferBase.424" }
%"class.WTF::VectorBufferBase.424" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.430", %"class.WTF::Vector.422", i32, i32 }
%"class.WTF::Vector.430" = type { %"class.WTF::VectorBuffer.431" }
%"class.WTF::VectorBuffer.431" = type { %"class.WTF::VectorBufferBase.432" }
%"class.WTF::VectorBufferBase.432" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.438 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.439", [4 x i8] }>
%"class.WTF::RefCounted.439" = type { %"class.base::RefCounted.440" }
%"class.base::RefCounted.440" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.441 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.442", [4 x i8] }>
%"class.WTF::RefCounted.442" = type { %"class.base::RefCounted.443" }
%"class.base::RefCounted.443" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.444 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.445" }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.447 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.448 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.449 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.450", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.450" = type { %"class.base::RefCounted.451" }
%"class.base::RefCounted.451" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.452" }
%"class.blink::DataRef.452" = type { %class.scoped_refptr.453 }
%class.scoped_refptr.453 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.320", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.454" }
%"class.WTF::RefCounted.454" = type { %"class.base::RefCounted.455" }
%"class.base::RefCounted.455" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.471" = type { %"class.blink::PersistentBase.472" }
%"class.blink::PersistentBase.472" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.283" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.441, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.475" = type { %"class.absl::optional_internal::optional_data.476" }
%"class.absl::optional_internal::optional_data.476" = type { %"class.absl::optional_internal::optional_data_base.477" }
%"class.absl::optional_internal::optional_data_base.477" = type { %"class.absl::optional_internal::optional_data_dtor_base.478" }
%"class.absl::optional_internal::optional_data_dtor_base.478" = type { i8, [3 x i8], %union.anon.479 }
%union.anon.479 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.456" = type { %"class.blink::PersistentBase.457" }
%"class.blink::PersistentBase.457" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.283" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.460" }
%"class.blink::HeapVector.460" = type { %"class.WTF::Vector.463" }
%"class.WTF::Vector.463" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"class.blink::Member.466"*, i32, i32 }
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.480" = type { %class.scoped_refptr.481 }
%class.scoped_refptr.481 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.482", %"class.blink::DataRef.484", %"class.blink::DataRef.488", %"class.blink::DataRef.497", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.516", %"class.std::__1::unique_ptr.527", %"class.std::__1::unique_ptr.565", %"class.std::__1::unique_ptr.576", %"class.std::__1::unique_ptr.587", %"class.WTF::Vector.593", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.484" = type { %class.scoped_refptr.485 }
%class.scoped_refptr.485 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.486", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.486" = type { %"class.base::RefCounted.487" }
%"class.base::RefCounted.487" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.488" = type { %class.scoped_refptr.489 }
%class.scoped_refptr.489 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.490", [4 x i8], %"class.WTF::Vector.492", i8, [7 x i8] }>
%"class.WTF::RefCounted.490" = type { %"class.base::RefCounted.491" }
%"class.base::RefCounted.491" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.492" = type { %"class.WTF::VectorBuffer.493" }
%"class.WTF::VectorBuffer.493" = type { %"class.WTF::VectorBufferBase.494" }
%"class.WTF::VectorBufferBase.494" = type { i32*, i32, i32 }
%"class.blink::DataRef.497" = type { %class.scoped_refptr.498 }
%class.scoped_refptr.498 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.499", [4 x i8], %"class.WTF::HashMap.501", %"class.WTF::HashMap.501", %"class.WTF::HashMap.501", %"class.WTF::HashMap.501", %"class.WTF::HashMap.501", %"class.WTF::HashMap.501", %"class.WTF::HashMap.506", %"class.WTF::HashMap.506", %"class.WTF::HashMap.506", %"class.WTF::HashMap.506", %"class.WTF::HashMap.511", %"class.WTF::Vector.422", %"class.WTF::Vector.422", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.499" = type { %"class.base::RefCounted.500" }
%"class.base::RefCounted.500" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"struct.WTF::KeyValuePair.505"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.505" = type { %"class.WTF::String", %"class.WTF::Vector.1293" }
%"class.WTF::Vector.1293" = type { %"class.WTF::VectorBuffer.1294" }
%"class.WTF::VectorBuffer.1294" = type { %"class.WTF::VectorBufferBase.1295" }
%"class.WTF::VectorBufferBase.1295" = type { i64*, i32, i32 }
%"class.WTF::HashMap.506" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"struct.WTF::KeyValuePair.510"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.510" = type { i64, %"class.WTF::Vector.593" }
%"class.WTF::HashMap.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.516" = type { %"class.std::__1::__compressed_pair.517" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.519" }
%"class.WTF::HashMap.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"struct.WTF::KeyValuePair.523"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.523" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1298", %"class.absl::optional.1298", %"class.absl::optional.1298" }
%"class.absl::optional.1298" = type { %"class.absl::optional_internal::optional_data.1299" }
%"class.absl::optional_internal::optional_data.1299" = type { %"class.absl::optional_internal::optional_data_base.1300" }
%"class.absl::optional_internal::optional_data_base.1300" = type { %"class.absl::optional_internal::optional_data_dtor_base.1301" }
%"class.absl::optional_internal::optional_data_dtor_base.1301" = type { i8, %union.anon.1302 }
%union.anon.1302 = type { i32 }
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.298", %"class.WTF::Vector.542", %"class.WTF::Vector.530", %"class.WTF::Vector.547", %"class.WTF::Vector.552", %"class.WTF::Vector.557" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.530", %"class.WTF::Vector.530", %"class.WTF::Vector.535" }
%"class.WTF::Vector.535" = type { %"class.WTF::VectorBuffer.536" }
%"class.WTF::VectorBuffer.536" = type { %"class.WTF::VectorBufferBase.537" }
%"class.WTF::VectorBufferBase.537" = type { %class.scoped_refptr.538*, i32, i32 }
%class.scoped_refptr.538 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.539" }
%"class.base::RefCountedThreadSafe.539" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.542" = type { %"class.WTF::VectorBuffer.543" }
%"class.WTF::VectorBuffer.543" = type { %"class.WTF::VectorBufferBase.544" }
%"class.WTF::VectorBufferBase.544" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.530" = type { %"class.WTF::VectorBuffer.531" }
%"class.WTF::VectorBuffer.531" = type { %"class.WTF::VectorBufferBase.532" }
%"class.WTF::VectorBufferBase.532" = type { double*, i32, i32 }
%"class.WTF::Vector.547" = type { %"class.WTF::VectorBuffer.548" }
%"class.WTF::VectorBuffer.548" = type { %"class.WTF::VectorBufferBase.549" }
%"class.WTF::VectorBufferBase.549" = type { i32*, i32, i32 }
%"class.WTF::Vector.552" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { i32*, i32, i32 }
%"class.WTF::Vector.557" = type { %"class.WTF::VectorBuffer.558" }
%"class.WTF::VectorBuffer.558" = type { %"class.WTF::VectorBufferBase.559" }
%"class.WTF::VectorBufferBase.559" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.565" = type { %"class.std::__1::__compressed_pair.566" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.568" }
%"class.WTF::Vector.568" = type { %"class.WTF::VectorBuffer.569" }
%"class.WTF::VectorBuffer.569" = type { %"class.WTF::VectorBufferBase.570" }
%"class.WTF::VectorBufferBase.570" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.576" = type { %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.579" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::Persistent.320"*, i32, i32 }
%"class.std::__1::unique_ptr.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.320", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.598" }
%"class.WTF::Vector.598" = type { %"class.WTF::VectorBuffer.599" }
%"class.WTF::VectorBuffer.599" = type { %"class.WTF::VectorBufferBase.600" }
%"class.WTF::VectorBufferBase.600" = type { %class.scoped_refptr.601*, i32, i32 }
%class.scoped_refptr.601 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.445", [4 x i8] }>
%"class.blink::Persistent.604" = type { %"class.blink::PersistentBase.605" }
%"class.blink::PersistentBase.605" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.283" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.608" }
%"class.blink::Member.608" = type { %"class.blink::MemberBase.609" }
%"class.blink::MemberBase.609" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.610" = type { %class.scoped_refptr.611 }
%class.scoped_refptr.611 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.612", [4 x i8], %"class.blink::DataRef.614", %"class.blink::DataRef.618", %"class.blink::DataRef.639", %"class.blink::DataRef.657", %"class.blink::DataRef.669", %"class.blink::DataRef.673", %class.scoped_refptr.643, i32, [4 x i8] }>
%"class.WTF::RefCounted.612" = type { %"class.base::RefCounted.613" }
%"class.base::RefCounted.613" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.614" = type { %class.scoped_refptr.615 }
%class.scoped_refptr.615 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.616", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.616" = type { %"class.base::RefCounted.617" }
%"class.base::RefCounted.617" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.618" = type { %class.scoped_refptr.619 }
%class.scoped_refptr.619 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.620", %class.scoped_refptr.622, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.620" = type { %"class.base::RefCounted.621" }
%"class.base::RefCounted.621" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.622 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.629", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.442" }>
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.632, i32, %"struct.std::__1::atomic.56", %"struct.std::__1::atomic.56", i8, i8 }>
%class.sk_sp.632 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.633, %class.SkTDArray.634, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.51" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.633 = type { i8*, i32, i32 }
%class.SkTDArray.634 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.635 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.51", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.635 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.249", [3 x i8] }
%"class.blink::DataRef.639" = type { %class.scoped_refptr.640 }
%class.scoped_refptr.640 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.641", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.641" = type { %"class.base::RefCounted.642" }
%"class.base::RefCounted.642" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.643, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.657" = type { %class.scoped_refptr.658 }
%class.scoped_refptr.658 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.659", [4 x i8], %class.scoped_refptr.661, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.659" = type { %"class.base::RefCounted.660" }
%"class.base::RefCounted.660" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.661 = type { %"class.base::RefCountedData.662"* }
%"class.base::RefCountedData.662" = type { %"class.base::RefCountedThreadSafe.663", %"class.WTF::Vector.664" }
%"class.base::RefCountedThreadSafe.663" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.664" = type { %"class.WTF::VectorBuffer.665" }
%"class.WTF::VectorBuffer.665" = type { %"class.WTF::VectorBufferBase.666" }
%"class.WTF::VectorBufferBase.666" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.669" = type { %class.scoped_refptr.670 }
%class.scoped_refptr.670 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.671", %class.scoped_refptr.643, %class.scoped_refptr.643, %class.scoped_refptr.643 }
%"class.WTF::RefCounted.671" = type { %"class.base::RefCounted.672" }
%"class.base::RefCounted.672" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.673" = type { %class.scoped_refptr.674 }
%class.scoped_refptr.674 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.675", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.675" = type { %"class.base::RefCounted.676" }
%"class.base::RefCounted.676" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.643 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.644", %"class.blink::Persistent.646", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.644" = type { %"class.base::RefCounted.645" }
%"class.base::RefCounted.645" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.646" = type { %"class.blink::PersistentBase.647" }
%"class.blink::PersistentBase.647" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.283" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.357", %"class.blink::HeapHashMap.650" }
%"class.blink::HeapHashMap.650" = type { %"class.WTF::HashMap.653" }
%"class.WTF::HashMap.653" = type { %"class.WTF::HashTable.654" }
%"class.WTF::HashTable.654" = type <{ %"struct.WTF::KeyValuePair.656"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.656" = type opaque
%"class.blink::DataRef.677" = type { %class.scoped_refptr.678 }
%class.scoped_refptr.678 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.679", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.679" = type { %"class.base::RefCounted.680" }
%"class.base::RefCounted.680" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.681" = type { %class.scoped_refptr.682 }
%class.scoped_refptr.682 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.683", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.683" = type { %"class.base::RefCounted.684" }
%"class.base::RefCounted.684" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.685" = type { %class.scoped_refptr.686 }
%class.scoped_refptr.686 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.687", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.687" = type { %"class.base::RefCounted.688" }
%"class.base::RefCounted.688" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.689" = type { %class.scoped_refptr.690 }
%class.scoped_refptr.690 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.691", %class.scoped_refptr.693 }
%"class.WTF::RefCounted.691" = type { %"class.base::RefCounted.692" }
%"class.base::RefCounted.692" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.693 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.913", %"class.blink::StyleVariables", %class.scoped_refptr.693 }
%"class.WTF::RefCounted.913" = type { %"class.base::RefCounted.914" }
%"class.base::RefCounted.914" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.694" = type { %"class.base::RefCounted.695" }
%"class.base::RefCounted.695" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.696" = type { %"class.std::__1::__compressed_pair.697" }
%"class.std::__1::__compressed_pair.697" = type { %"struct.std::__1::__compressed_pair_elem.698" }
%"struct.std::__1::__compressed_pair_elem.698" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.699" }
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.WTF::Vector.702"* }
%"class.WTF::Vector.702" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314", [32 x i8] }
%"class.WTF::VectorBufferBase.1314" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.709" }
%"class.blink::MemberBase.709" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.710" }
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.713", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.840", i8, %"class.absl::optional.846", %class.scoped_refptr.822, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.851" }
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.722, %class.scoped_refptr.722, %class.scoped_refptr.722, %class.scoped_refptr.722, %class.scoped_refptr.722, %class.scoped_refptr.722, %class.scoped_refptr.757, %class.scoped_refptr.771, %class.scoped_refptr.772, %class.scoped_refptr.772, %class.scoped_refptr.772, %class.scoped_refptr.772, %class.scoped_refptr.772, %class.scoped_refptr.772, %class.scoped_refptr.812, %class.scoped_refptr.813, %class.scoped_refptr.813, %class.scoped_refptr.813, %class.scoped_refptr.813, %class.scoped_refptr.813, %class.scoped_refptr.813, %class.scoped_refptr.813, %class.scoped_refptr.813, %class.scoped_refptr.836 }
%class.scoped_refptr.722 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.739" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.723", i8, i8, %class.scoped_refptr.725, i32, i32 }
%"class.WTF::RefCounted.723" = type { %"class.base::RefCounted.724" }
%"class.base::RefCounted.724" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.725 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.732, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.733", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.726" }
%"class.std::__1::unique_ptr.726" = type { %"class.std::__1::__compressed_pair.727" }
%"class.std::__1::__compressed_pair.727" = type { %"struct.std::__1::__compressed_pair_elem.728" }
%"struct.std::__1::__compressed_pair_elem.728" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.732 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.758", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.758" = type { %"class.WTF::RefCounted.759", i8, i8, %class.scoped_refptr.732, i32, i32 }
%"class.WTF::RefCounted.759" = type { %"class.base::RefCounted.760" }
%"class.base::RefCounted.760" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.761" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.761" = type { %"class.absl::optional_internal::optional_data.762" }
%"class.absl::optional_internal::optional_data.762" = type { %"class.absl::optional_internal::optional_data_base.763" }
%"class.absl::optional_internal::optional_data_base.763" = type { %"class.absl::optional_internal::optional_data_dtor_base.764" }
%"class.absl::optional_internal::optional_data_dtor_base.764" = type { i8, %union.anon.765 }
%union.anon.765 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.766" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.742", %"class.std::__1::unique_ptr.748", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.748" = type { %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.757 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.771 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.772 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.773" }
%"class.blink::PaintPropertyNode.773" = type { %"class.WTF::RefCounted.774", i8, i8, %class.scoped_refptr.776, i32, i32 }
%"class.WTF::RefCounted.774" = type { %"class.base::RefCounted.775" }
%"class.base::RefCounted.775" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.776 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.725, %class.scoped_refptr.777, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.799", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.777 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.814" }
%"class.blink::PaintPropertyNode.814" = type { %"class.WTF::RefCounted.815", i8, i8, %class.scoped_refptr.777, i32, i32 }
%"class.WTF::RefCounted.815" = type { %"class.base::RefCounted.816" }
%"class.base::RefCounted.816" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.778" }
%"class.std::__1::vector.778" = type { %"class.std::__1::__vector_base.779" }
%"class.std::__1::__vector_base.779" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.794" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.780, [20 x float], i32, [4 x i8], %"class.std::__1::vector.787", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.780 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.781, i32, %"class.absl::optional.782", i8, i32 }
%class.sk_sp.781 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.782" = type { %"class.absl::optional_internal::optional_data.783" }
%"class.absl::optional_internal::optional_data.783" = type { %"class.absl::optional_internal::optional_data_base.784" }
%"class.absl::optional_internal::optional_data_base.784" = type { %"class.absl::optional_internal::optional_data_dtor_base.785" }
%"class.absl::optional_internal::optional_data_dtor_base.785" = type { i8, %union.anon.786 }
%union.anon.786 = type { %struct.SkRect }
%"class.std::__1::vector.787" = type { %"class.std::__1::__vector_base.788" }
%"class.std::__1::__vector_base.788" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.789" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.789" = type { %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.805" }
%"class.std::__1::vector.805" = type { %"class.std::__1::__vector_base.806" }
%"class.std::__1::__vector_base.806" = type { i32*, i32*, %"class.std::__1::__compressed_pair.807" }
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { i32* }
%class.scoped_refptr.812 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.813 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.825" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.725, %"class.absl::optional.817", %class.scoped_refptr.822, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.817" = type { %"class.absl::optional_internal::optional_data.818" }
%"class.absl::optional_internal::optional_data.818" = type { %"class.absl::optional_internal::optional_data_base.819" }
%"class.absl::optional_internal::optional_data_base.819" = type { %"class.absl::optional_internal::optional_data_dtor_base.820" }
%"class.absl::optional_internal::optional_data_dtor_base.820" = type { i8, [3 x i8], %union.anon.821 }
%union.anon.821 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.828", i32, [4 x i8] }>
%"class.WTF::Vector.828" = type { %"class.WTF::VectorBuffer.829" }
%"class.WTF::VectorBuffer.829" = type { %"class.WTF::VectorBufferBase.830" }
%"class.WTF::VectorBufferBase.830" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.836 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.840" = type { %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.725, %class.scoped_refptr.777, %class.scoped_refptr.776 }
%"class.absl::optional.846" = type { %"class.absl::optional_internal::optional_data.847" }
%"class.absl::optional_internal::optional_data.847" = type { %"class.absl::optional_internal::optional_data_base.848" }
%"class.absl::optional_internal::optional_data_base.848" = type { %"class.absl::optional_internal::optional_data_dtor_base.849" }
%"class.absl::optional_internal::optional_data_dtor_base.849" = type { i8, %union.anon.850 }
%union.anon.850 = type { %"class.blink::IntRect" }
%class.scoped_refptr.822 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.823", [4 x i8] }
%"class.WTF::RefCounted.823" = type { %"class.base::RefCounted.824" }
%"class.base::RefCounted.824" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.860 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.861" = type { %"class.WTF::VectorBuffer.862" }
%"class.WTF::VectorBuffer.862" = type { %"class.WTF::VectorBufferBase.863", [8 x i8] }
%"class.WTF::VectorBufferBase.863" = type { %class.scoped_refptr.860*, i32, i32 }
%"class.std::__1::unique_ptr.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.868" }
%"struct.std::__1::__compressed_pair_elem.868" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.869", %"class.absl::optional.878", %"class.absl::optional.883" }
%"class.absl::optional.869" = type { %"class.absl::optional_internal::optional_data.870" }
%"class.absl::optional_internal::optional_data.870" = type { %"class.absl::optional_internal::optional_data_base.871" }
%"class.absl::optional_internal::optional_data_base.871" = type { %"class.absl::optional_internal::optional_data_dtor_base.872" }
%"class.absl::optional_internal::optional_data_dtor_base.872" = type { i8, %union.anon.873 }
%union.anon.873 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.878" = type { %"class.absl::optional_internal::optional_data.879" }
%"class.absl::optional_internal::optional_data.879" = type { %"class.absl::optional_internal::optional_data_base.880" }
%"class.absl::optional_internal::optional_data_base.880" = type { %"class.absl::optional_internal::optional_data_dtor_base.881" }
%"class.absl::optional_internal::optional_data_dtor_base.881" = type { i8, [3 x i8], %union.anon.882 }
%union.anon.882 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.891 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.892" = type { %"class.blink::PersistentBase.893" }
%"class.blink::PersistentBase.893" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.283" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.896", %"struct.blink::PhysicalRect", %"class.blink::Member.906" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.896" = type { %"class.std::__1::__compressed_pair.897" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"class.WTF::HashSet.899"* }
%"class.WTF::HashSet.899" = type { %"class.WTF::HashTable.900" }
%"class.WTF::HashTable.900" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::BaselineContext" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BaselineGroup"*, i32, i32 }
%"class.blink::GridBaselineAlignment" = type { i8, [7 x i8], %"class.WTF::HashMap", %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i32, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::BaselineContext"* }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.255", %"class.blink::DataRef.406", %"class.blink::DataRef.410", %"class.blink::DataRef.610", %"class.blink::DataRef.677", %"class.blink::DataRef.681", %"class.blink::DataRef.685", %"class.blink::DataRef.689", [20 x i8], [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERjDnEENS_18HashTableAddResultISK_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSL_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8ReinsertEOS9_ = comdat any

$_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE5clearEv = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_S4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN3WTF6VectorIN5blink13BaselineGroupELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjOT_ = comdat any

$_ZN3WTF6VectorIN5blink13BaselineGroupELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BaselineGroupEEEmm = comdat any

$_ZN3WTF11VectorMoverILb0EN5blink13BaselineGroupENS_18PartitionAllocatorEE15MoveOverlappingEPS2_S5_S5_b = comdat any

$_ZN3WTF6VectorIN5blink13BaselineGroupELj0ENS_18PartitionAllocatorEE2atEj = comdat any

@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEEEEPKcv = private unnamed_addr constant [177 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<unsigned int, std::__1::unique_ptr<blink::BaselineContext, std::__1::default_delete<blink::BaselineContext> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink9LayoutBoxEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = const blink::LayoutBox *]\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BaselineGroupEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BaselineGroup]\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1

@_ZN5blink13BaselineGroupC1ENS_11WritingModeENS_12ItemPositionE = hidden unnamed_addr alias void (%"class.blink::BaselineGroup"*, i8, i32), void (%"class.blink::BaselineGroup"*, i8, i32)* @_ZN5blink13BaselineGroupC2ENS_11WritingModeENS_12ItemPositionE
@_ZN5blink15BaselineContextC1ERKNS_9LayoutBoxENS_12ItemPositionENS_10LayoutUnitES5_ = hidden unnamed_addr alias void (%"class.blink::BaselineContext"*, %"class.blink::LayoutBox"*, i32, i32, i32), void (%"class.blink::BaselineContext"*, %"class.blink::LayoutBox"*, i32, i32, i32)* @_ZN5blink15BaselineContextC2ERKNS_9LayoutBoxENS_12ItemPositionENS_10LayoutUnitES5_

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21GridBaselineAlignment18MarginOverForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp ne i32 %2, 0
  %5 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  %8 = xor i1 %4, %7
  %9 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %10 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %9, align 8
  br i1 %8, label %11, label %15

11:                                               ; preds = %3
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %10, i64 130
  %13 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBox"* %1) #8
  br label %19

15:                                               ; preds = %3
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %10, i64 127
  %17 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBox"* %1) #8
  br label %19

19:                                               ; preds = %15, %11
  %20 = phi i32 [ %14, %11 ], [ %18, %15 ]
  ret i32 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink21GridBaselineAlignment24IsHorizontalBaselineAxisENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = icmp ne i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  %7 = xor i1 %3, %6
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21GridBaselineAlignment19MarginUnderForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp ne i32 %2, 0
  %5 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  %8 = xor i1 %4, %7
  %9 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %10 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %9, align 8
  br i1 %8, label %11, label %15

11:                                               ; preds = %3
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %10, i64 129
  %13 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBox"* %1) #8
  br label %19

15:                                               ; preds = %3
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %10, i64 128
  %17 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBox"* %1) #8
  br label %19

19:                                               ; preds = %15, %11
  %20 = phi i32 [ %14, %11 ], [ %18, %15 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21GridBaselineAlignment21LogicalAscentForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZNK5blink21GridBaselineAlignment14AscentForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2)
  %5 = icmp ne i32 %2, 0
  %6 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 0
  %9 = xor i1 %5, %8
  br i1 %9, label %10, label %24

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 9
  %14 = bitcast [20 x i8]* %13 to i160*
  %15 = load i160, i160* %14, align 8
  %16 = trunc i160 %15 to i104
  %17 = and i104 %16, -5070602400912917605986812821504
  switch i104 %17, label %24 [
    i104 5070602400912917605986812821504, label %18
    i104 -10141204801825835211973625643008, label %20
  ]

18:                                               ; preds = %10
  %19 = icmp eq i8 %7, 1
  br i1 %19, label %24, label %22

20:                                               ; preds = %10
  %21 = icmp eq i8 %7, 1
  br i1 %21, label %22, label %24

22:                                               ; preds = %18, %20
  %23 = tail call i32 @_ZNK5blink21GridBaselineAlignment15DescentForChildERKNS_9LayoutBoxENS_10LayoutUnitENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %4, i32 %2)
  br label %24

24:                                               ; preds = %18, %10, %3, %20, %22
  %25 = phi i32 [ %23, %22 ], [ %4, %20 ], [ %4, %18 ], [ %4, %3 ], [ %4, %10 ]
  ret i32 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21GridBaselineAlignment14AscentForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp ne i32 %2, 0
  %5 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  %8 = xor i1 %4, %7
  br i1 %8, label %9, label %33

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = trunc i160 %14 to i104
  %16 = and i104 %15, -5070602400912917605986812821504
  switch i104 %16, label %27 [
    i104 5070602400912917605986812821504, label %17
    i104 -10141204801825835211973625643008, label %19
  ]

17:                                               ; preds = %9
  %18 = icmp eq i8 %6, 1
  br i1 %18, label %27, label %21

19:                                               ; preds = %9
  %20 = icmp eq i8 %6, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17, %19
  %22 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %23 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %23, i64 129
  %25 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBox"* %1) #8
  br label %39

27:                                               ; preds = %19, %17, %9
  %28 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %29 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %28, align 8
  %30 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %29, i64 130
  %31 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %30, align 8
  %32 = tail call i32 %31(%"class.blink::LayoutBox"* %1) #8
  br label %39

33:                                               ; preds = %3
  %34 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %35 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %35, i64 127
  %37 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %36, align 8
  %38 = tail call i32 %37(%"class.blink::LayoutBox"* %1) #8
  br label %39

39:                                               ; preds = %33, %27, %21
  %40 = phi i32 [ %26, %21 ], [ %32, %27 ], [ %38, %33 ]
  %41 = icmp eq i32 %2, 1
  %42 = load i8, i8* %5, align 8
  %43 = icmp eq i8 %42, 0
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = trunc i96 %46 to i32
  %48 = icmp slt i32 %47, 0
  %49 = xor i1 %43, %48
  %50 = xor i1 %41, %49
  br i1 %50, label %51, label %60

51:                                               ; preds = %39
  %52 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %53 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %52, align 8
  %54 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %53, i64 180
  %55 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %54, align 8
  %56 = tail call i32 %55(%"class.blink::LayoutBox"* %1) #8
  %57 = icmp eq i32 %56, -64
  br i1 %57, label %58, label %91

58:                                               ; preds = %51
  %59 = load i8, i8* %5, align 8
  br label %60

60:                                               ; preds = %58, %39
  %61 = phi i8 [ %59, %58 ], [ %42, %39 ]
  %62 = icmp eq i8 %61, 0
  %63 = xor i1 %4, %62
  br i1 %63, label %64, label %79

64:                                               ; preds = %60
  %65 = icmp eq i8 %61, 1
  br i1 %65, label %66, label %98

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %68 = bitcast %"class.blink::LayoutSize"* %67 to i64*
  %69 = load i64, i64* %68, align 4
  %70 = trunc i64 %69 to i32
  %71 = sdiv i32 %70, 64
  %72 = shl nsw i32 %71, 6
  %73 = icmp slt i32 %40, 0
  %74 = select i1 %73, i32 -2147483648, i32 2147483647
  %75 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %72, i32 %40) #8
  %76 = extractvalue { i32, i1 } %75, 1
  %77 = extractvalue { i32, i1 } %75, 0
  %78 = select i1 %76, i32 %74, i32 %77, !prof !2
  br label %98

79:                                               ; preds = %60
  %80 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1
  %81 = bitcast %"class.blink::LayoutSize"* %80 to i64*
  %82 = load i64, i64* %81, align 4
  %83 = lshr i64 %82, 32
  %84 = trunc i64 %83 to i32
  %85 = icmp slt i32 %40, 0
  %86 = select i1 %85, i32 -2147483648, i32 2147483647
  %87 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %84, i32 %40) #8
  %88 = extractvalue { i32, i1 } %87, 1
  %89 = extractvalue { i32, i1 } %87, 0
  %90 = select i1 %88, i32 %86, i32 %89, !prof !2
  br label %98

91:                                               ; preds = %51
  %92 = icmp slt i32 %40, 0
  %93 = select i1 %92, i32 -2147483648, i32 2147483647
  %94 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 %40) #8
  %95 = extractvalue { i32, i1 } %94, 1
  %96 = extractvalue { i32, i1 } %94, 0
  %97 = select i1 %95, i32 %93, i32 %96, !prof !2
  br label %98

98:                                               ; preds = %66, %64, %91, %79
  %99 = phi i32 [ %90, %79 ], [ %97, %91 ], [ %78, %66 ], [ %40, %64 ]
  ret i32 %99
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink21GridBaselineAlignment25IsDescentBaselineForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), i32) local_unnamed_addr #1 align 2 {
  %4 = icmp ne i32 %2, 0
  %5 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  %8 = xor i1 %4, %7
  br i1 %8, label %9, label %21

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = trunc i160 %14 to i104
  %16 = and i104 %15, -5070602400912917605986812821504
  switch i104 %16, label %21 [
    i104 5070602400912917605986812821504, label %17
    i104 -10141204801825835211973625643008, label %19
  ]

17:                                               ; preds = %9
  %18 = icmp ne i8 %6, 1
  ret i1 %18

19:                                               ; preds = %9
  %20 = icmp eq i8 %6, 1
  br label %21

21:                                               ; preds = %9, %19, %3
  %22 = phi i1 [ false, %3 ], [ %20, %19 ], [ false, %9 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21GridBaselineAlignment15DescentForChildERKNS_9LayoutBoxENS_10LayoutUnitENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %3, 1
  %6 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = trunc i96 %11 to i32
  %13 = icmp slt i32 %12, 0
  %14 = xor i1 %8, %13
  %15 = xor i1 %5, %14
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8
  br i1 %15, label %22, label %104

22:                                               ; preds = %4
  %23 = lshr i160 %21, 102
  %24 = trunc i160 %23 to i8
  %25 = and i8 %24, 3
  %26 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %25, label %27 [
    i8 0, label %36
    i8 1, label %28
  ]

27:                                               ; preds = %22
  br label %28

28:                                               ; preds = %27, %22
  %29 = phi { i64, i64 } [ { i64 1033, i64 0 }, %27 ], [ { i64 1041, i64 0 }, %22 ]
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  %32 = getelementptr inbounds i8, i8* %26, i64 %31
  %33 = bitcast i8* %32 to %"class.blink::LayoutBoxModelObject"*
  %34 = and i64 %30, 1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %28, %22
  %37 = phi %"class.blink::LayoutBoxModelObject"* [ %33, %28 ], [ %16, %22 ]
  %38 = phi i8* [ %32, %28 ], [ %26, %22 ]
  %39 = phi i64 [ %30, %28 ], [ 1017, %22 ]
  %40 = bitcast i8* %38 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = add i64 %39, -1
  %43 = getelementptr i8, i8* %41, i64 %42
  %44 = bitcast i8* %43 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %45 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, align 8
  br label %48

46:                                               ; preds = %28
  %47 = inttoptr i64 %30 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %48

48:                                               ; preds = %46, %36
  %49 = phi %"class.blink::LayoutBoxModelObject"* [ %37, %36 ], [ %33, %46 ]
  %50 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %45, %36 ], [ %47, %46 ]
  %51 = tail call i32 %50(%"class.blink::LayoutBoxModelObject"* %49) #8
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8, !noalias !3
  %56 = lshr i160 %55, 102
  %57 = trunc i160 %56 to i8
  %58 = and i8 %57, 3
  switch i8 %58, label %59 [
    i8 0, label %68
    i8 1, label %60
  ]

59:                                               ; preds = %48
  br label %60

60:                                               ; preds = %59, %48
  %61 = phi { i64, i64 } [ { i64 1041, i64 0 }, %59 ], [ { i64 1033, i64 0 }, %48 ]
  %62 = extractvalue { i64, i64 } %61, 0
  %63 = extractvalue { i64, i64 } %61, 1
  %64 = getelementptr inbounds i8, i8* %26, i64 %63
  %65 = bitcast i8* %64 to %"class.blink::LayoutBoxModelObject"*
  %66 = and i64 %62, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %60, %48
  %69 = phi %"class.blink::LayoutBoxModelObject"* [ %65, %60 ], [ %16, %48 ]
  %70 = phi i8* [ %64, %60 ], [ %26, %48 ]
  %71 = phi i64 [ %62, %60 ], [ 1025, %48 ]
  %72 = bitcast i8* %70 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = add i64 %71, -1
  %75 = getelementptr i8, i8* %73, i64 %74
  %76 = bitcast i8* %75 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %77 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %76, align 8
  br label %80

78:                                               ; preds = %60
  %79 = inttoptr i64 %62 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %80

80:                                               ; preds = %68, %78
  %81 = phi %"class.blink::LayoutBoxModelObject"* [ %69, %68 ], [ %65, %78 ]
  %82 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %77, %68 ], [ %79, %78 ]
  %83 = tail call i32 %82(%"class.blink::LayoutBoxModelObject"* %81) #8
  %84 = icmp slt i32 %83, 0
  %85 = select i1 %84, i32 -2147483648, i32 2147483647
  %86 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 %83) #8
  %87 = extractvalue { i32, i1 } %86, 1
  %88 = extractvalue { i32, i1 } %86, 0
  %89 = select i1 %87, i32 %85, i32 %88, !prof !2
  %90 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %91 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %90, i64 0, i32 0, i32 9
  %92 = bitcast [20 x i8]* %91 to i160*
  %93 = load i160, i160* %92, align 8
  %94 = and i160 %93, 15211807202738752817960438464512
  %95 = icmp eq i160 %94, 0
  %96 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %97 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %98 = load i32, i32* %96, align 4
  %99 = load i32, i32* %97, align 4
  %100 = select i1 %95, i32 %98, i32 %99
  %101 = icmp slt i32 %100, 0
  %102 = select i1 %101, i32 -2147483648, i32 2147483647
  %103 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %89, i32 %100) #8
  br label %182

104:                                              ; preds = %4
  %105 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  %106 = and i160 %21, 15211807202738752817960438464512
  %107 = icmp eq i160 %106, 0
  %108 = and i160 %21, 41538374868278621028243970633760768
  %109 = icmp eq i160 %108, 0
  %110 = select i1 %109, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %111 = select i1 %109, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %112 = select i1 %107, { i64, i64 } %111, { i64, i64 } %110
  %113 = select i1 %107, { i64, i64 } %111, { i64, i64 } %110
  %114 = extractvalue { i64, i64 } %112, 0
  %115 = extractvalue { i64, i64 } %113, 1
  %116 = getelementptr inbounds i8, i8* %105, i64 %115
  %117 = bitcast i8* %116 to %"class.blink::LayoutBoxModelObject"*
  %118 = and i64 %114, 1
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %127, label %120

120:                                              ; preds = %104
  %121 = bitcast i8* %116 to i8**
  %122 = load i8*, i8** %121, align 8
  %123 = add i64 %114, -1
  %124 = getelementptr i8, i8* %122, i64 %123
  %125 = bitcast i8* %124 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %126 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %125, align 8
  br label %129

127:                                              ; preds = %104
  %128 = inttoptr i64 %114 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %126, %120 ], [ %128, %127 ]
  %131 = tail call i32 %130(%"class.blink::LayoutBoxModelObject"* %117) #8
  %132 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %133 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %132, i64 0, i32 0, i32 9
  %134 = bitcast [20 x i8]* %133 to i160*
  %135 = load i160, i160* %134, align 8, !noalias !6
  %136 = and i160 %135, 15211807202738752817960438464512
  %137 = icmp eq i160 %136, 0
  %138 = and i160 %135, 41538374868278621028243970633760768
  %139 = icmp eq i160 %138, 0
  %140 = select i1 %139, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %141 = select i1 %139, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %142 = select i1 %137, { i64, i64 } %141, { i64, i64 } %140
  %143 = select i1 %137, { i64, i64 } %141, { i64, i64 } %140
  %144 = extractvalue { i64, i64 } %142, 0
  %145 = extractvalue { i64, i64 } %143, 1
  %146 = getelementptr inbounds i8, i8* %105, i64 %145
  %147 = bitcast i8* %146 to %"class.blink::LayoutBoxModelObject"*
  %148 = and i64 %144, 1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %157, label %150

150:                                              ; preds = %129
  %151 = bitcast i8* %146 to i8**
  %152 = load i8*, i8** %151, align 8
  %153 = add i64 %144, -1
  %154 = getelementptr i8, i8* %152, i64 %153
  %155 = bitcast i8* %154 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %156 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %155, align 8
  br label %159

157:                                              ; preds = %129
  %158 = inttoptr i64 %144 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %159

159:                                              ; preds = %150, %157
  %160 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %156, %150 ], [ %158, %157 ]
  %161 = tail call i32 %160(%"class.blink::LayoutBoxModelObject"* %147) #8
  %162 = icmp slt i32 %161, 0
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %131, i32 %161) #8
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !2
  %168 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %169 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %168, i64 0, i32 0, i32 9
  %170 = bitcast [20 x i8]* %169 to i160*
  %171 = load i160, i160* %170, align 8
  %172 = and i160 %171, 15211807202738752817960438464512
  %173 = icmp eq i160 %172, 0
  %174 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %175 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %176 = load i32, i32* %174, align 4
  %177 = load i32, i32* %175, align 4
  %178 = select i1 %173, i32 %176, i32 %177
  %179 = icmp slt i32 %178, 0
  %180 = select i1 %179, i32 -2147483648, i32 2147483647
  %181 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %167, i32 %178) #8
  br label %182

182:                                              ; preds = %159, %80
  %183 = phi { i32, i1 } [ %181, %159 ], [ %103, %80 ]
  %184 = phi i32 [ %180, %159 ], [ %102, %80 ]
  %185 = extractvalue { i32, i1 } %183, 1
  %186 = extractvalue { i32, i1 } %183, 0
  %187 = select i1 %185, i32 %184, i32 %186
  %188 = icmp sgt i32 %2, -1
  %189 = select i1 %188, i32 -2147483648, i32 2147483647
  %190 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %187, i32 %2) #8
  %191 = extractvalue { i32, i1 } %190, 1
  %192 = extractvalue { i32, i1 } %190, 0
  %193 = select i1 %191, i32 %189, i32 %192
  ret i32 %193
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink21GridBaselineAlignment32IsParallelToBaselineAxisForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), i32) local_unnamed_addr #1 align 2 {
  %4 = icmp eq i32 %2, 1
  %5 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 0
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = trunc i96 %10 to i32
  %12 = icmp slt i32 %11, 0
  %13 = xor i1 %7, %12
  %14 = xor i1 %4, %13
  ret i1 %14
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink21GridBaselineAlignment28IsOrthogonalChildForBaselineERKNS_9LayoutBoxE(%"class.blink::GridBaselineAlignment"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = trunc i96 %8 to i32
  %10 = icmp slt i32 %9, 0
  %11 = xor i1 %5, %10
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.blink::BaselineGroup"* @_ZNK5blink21GridBaselineAlignment24GetBaselineGroupForChildENS_12ItemPositionEjRKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* nocapture readonly, i32, i32, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i32 %4, 1
  %7 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 3
  %9 = select i1 %6, %"class.WTF::HashMap"* %7, %"class.WTF::HashMap"* %8
  %10 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %10, align 8
  %12 = icmp eq %"struct.WTF::KeyValuePair"* %11, null
  br i1 %12, label %71, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %9, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = add i32 %15, -1
  %17 = zext i32 %16 to i64
  %18 = shl i32 %2, 15
  %19 = xor i32 %18, -1
  %20 = add i32 %19, %2
  %21 = lshr i32 %20, 10
  %22 = xor i32 %21, %20
  %23 = mul i32 %22, 9
  %24 = lshr i32 %23, 6
  %25 = xor i32 %24, %23
  %26 = shl i32 %25, 11
  %27 = xor i32 %26, -1
  %28 = add i32 %25, %27
  %29 = lshr i32 %28, 16
  %30 = xor i32 %29, %28
  %31 = and i32 %16, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, %2
  br i1 %36, label %65, label %37

37:                                               ; preds = %13
  %38 = xor i32 %30, -1
  %39 = lshr i32 %28, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %56, %37
  %52 = phi i32 [ %35, %37 ], [ %63, %56 ]
  %53 = phi i64 [ %32, %37 ], [ %60, %56 ]
  %54 = phi i64 [ 0, %37 ], [ %58, %56 ]
  %55 = icmp eq i32 %52, -1
  br i1 %55, label %71, label %56

56:                                               ; preds = %51
  %57 = icmp eq i64 %54, 0
  %58 = select i1 %57, i64 %50, i64 %54
  %59 = add i64 %58, %53
  %60 = and i64 %59, %17
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %60
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, %2
  br i1 %64, label %65, label %51

65:                                               ; preds = %56, %13
  %66 = phi %"struct.WTF::KeyValuePair"* [ %33, %13 ], [ %61, %56 ]
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, null
  br i1 %67, label %71, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %66, i64 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.blink::BaselineContext"*, %"class.blink::BaselineContext"** %69, align 8
  br label %71

71:                                               ; preds = %51, %5, %65, %68
  %72 = phi %"class.blink::BaselineContext"* [ %70, %68 ], [ null, %65 ], [ null, %5 ], [ null, %51 ]
  %73 = tail call dereferenceable(40) %"class.blink::BaselineGroup"* @_ZN5blink15BaselineContext25FindCompatibleSharedGroupERKNS_9LayoutBoxENS_12ItemPositionE(%"class.blink::BaselineContext"* %72, %"class.blink::LayoutBox"* dereferenceable(216) %3, i32 %1) #8
  ret %"class.blink::BaselineGroup"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.blink::BaselineGroup"* @_ZNK5blink15BaselineContext14GetSharedGroupERKNS_9LayoutBoxENS_12ItemPositionE(%"class.blink::BaselineContext"*, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = tail call dereferenceable(40) %"class.blink::BaselineGroup"* @_ZN5blink15BaselineContext25FindCompatibleSharedGroupERKNS_9LayoutBoxENS_12ItemPositionE(%"class.blink::BaselineContext"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2)
  ret %"class.blink::BaselineGroup"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21GridBaselineAlignment30UpdateBaselineAlignmentContextENS_12ItemPositionEjRKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"*, i32, i32, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.blink::LayoutBox"*, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.blink::LayoutBox"*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i8*, align 8
  store i32 %2, i32* %12, align 4
  %14 = tail call i32 @_ZNK5blink21GridBaselineAlignment14AscentForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %3, i32 %4)
  %15 = tail call i32 @_ZNK5blink21GridBaselineAlignment15DescentForChildERKNS_9LayoutBoxENS_10LayoutUnitENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %3, i32 %14, i32 %4)
  %16 = icmp ne i32 %4, 0
  %17 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 0
  %18 = load i8, i8* %17, align 8
  %19 = icmp eq i8 %18, 0
  %20 = xor i1 %16, %19
  br i1 %20, label %21, label %34

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 0, i32 0, i32 5, i32 0
  %23 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %23, i64 0, i32 0, i32 9
  %25 = bitcast [20 x i8]* %24 to i160*
  %26 = load i160, i160* %25, align 8
  %27 = trunc i160 %26 to i104
  %28 = and i104 %27, -5070602400912917605986812821504
  switch i104 %28, label %34 [
    i104 5070602400912917605986812821504, label %29
    i104 -10141204801825835211973625643008, label %31
  ]

29:                                               ; preds = %21
  %30 = icmp eq i8 %18, 1
  br i1 %30, label %34, label %33

31:                                               ; preds = %21
  %32 = icmp eq i8 %18, 1
  br i1 %32, label %33, label %34

33:                                               ; preds = %29, %31
  br label %34

34:                                               ; preds = %29, %21, %5, %33, %31
  %35 = phi i32 [ %15, %33 ], [ %14, %31 ], [ %14, %29 ], [ %14, %5 ], [ %14, %21 ]
  %36 = phi i32 [ %14, %33 ], [ %15, %31 ], [ %15, %29 ], [ %15, %5 ], [ %15, %21 ]
  %37 = icmp eq i32 %4, 1
  %38 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 3
  %40 = select i1 %37, %"class.WTF::HashMap"* %38, %"class.WTF::HashMap"* %39
  %41 = bitcast i8** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #8
  store i8* null, i8** %13, align 8
  %42 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %40, i64 0, i32 0
  %43 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERjDnEENS_18HashTableAddResultISK_S9_EEOT0_OT1_(%"class.WTF::HashTable"* %42, i32* nonnull dereferenceable(4) %12, i8** nonnull dereferenceable(8) %13) #8
  %44 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %43, 0
  %45 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %43, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #8
  %46 = and i8 %45, 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %112, label %48

48:                                               ; preds = %34
  %49 = call noalias i8* @malloc(i64 16) #8
  %50 = bitcast i8* %49 to %"class.blink::BaselineContext"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #8
  %51 = call dereferenceable(40) %"class.blink::BaselineGroup"* @_ZN5blink15BaselineContext25FindCompatibleSharedGroupERKNS_9LayoutBoxENS_12ItemPositionE(%"class.blink::BaselineContext"* %50, %"class.blink::LayoutBox"* dereferenceable(216) %3, i32 %1) #8
  %52 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52)
  %53 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %53)
  store i32 %35, i32* %6, align 4
  store i32 %36, i32* %7, align 4
  %54 = bitcast %"class.blink::LayoutBox"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #8
  store %"class.blink::LayoutBox"* %3, %"class.blink::LayoutBox"** %8, align 8
  %55 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %51, i64 0, i32 4, i32 0
  %56 = call { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_S4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.0"* %55, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %8, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %8) #8
  %57 = extractvalue { %"class.blink::LayoutBox"**, i8 } %56, 1
  %58 = and i8 %57, 1
  %59 = icmp eq i8 %58, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #8
  br i1 %59, label %77, label %60

60:                                               ; preds = %48
  %61 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %51, i64 0, i32 2
  %62 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %61, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp slt i32 %63, %35
  %65 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %66 = select i1 %64, %"class.blink::LayoutUnit"* %65, %"class.blink::LayoutUnit"* %61
  %67 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %66, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %62, align 8
  %69 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %51, i64 0, i32 3
  %70 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %69, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp slt i32 %71, %36
  %73 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %74 = select i1 %72, %"class.blink::LayoutUnit"* %73, %"class.blink::LayoutUnit"* %69
  %75 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %74, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %70, align 4
  br label %77

77:                                               ; preds = %48, %60
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %53)
  %78 = ptrtoint i8* %49 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::BaselineContext"*, %"class.blink::BaselineContext"** %80, align 8
  %82 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %78, i64* %82, align 8
  %83 = icmp eq %"class.blink::BaselineContext"* %81, null
  br i1 %83, label %142, label %84

84:                                               ; preds = %77
  %85 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %85, align 8
  %87 = icmp eq %"class.blink::BaselineGroup"* %86, null
  br i1 %87, label %110, label %88, !prof !9

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %81, i64 0, i32 0, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %107, label %92, !prof !2

92:                                               ; preds = %88
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %86, i64 %93
  br label %95

95:                                               ; preds = %102, %92
  %96 = phi %"class.blink::BaselineGroup"* [ %103, %102 ], [ %86, %92 ]
  %97 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %96, i64 0, i32 4, i32 0, i32 0
  %98 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %97, align 8
  %99 = icmp eq %"class.blink::LayoutBox"** %98, null
  br i1 %99, label %102, label %100, !prof !9

100:                                              ; preds = %95
  %101 = bitcast %"class.blink::LayoutBox"** %98 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %101) #8
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %97, align 8
  br label %102

102:                                              ; preds = %100, %95
  %103 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %96, i64 1
  %104 = icmp eq %"class.blink::BaselineGroup"* %103, %94
  br i1 %104, label %105, label %95

105:                                              ; preds = %102
  store i32 0, i32* %89, align 4
  %106 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %85, align 8
  br label %107

107:                                              ; preds = %105, %88
  %108 = phi %"class.blink::BaselineGroup"* [ %86, %88 ], [ %106, %105 ]
  %109 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %108, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %109) #8
  br label %110

110:                                              ; preds = %107, %84
  %111 = bitcast %"class.blink::BaselineContext"* %81 to i8*
  call void @free(i8* %111) #8
  br label %142

112:                                              ; preds = %34
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %44, i64 0, i32 1, i32 0, i32 0, i32 0
  %114 = load %"class.blink::BaselineContext"*, %"class.blink::BaselineContext"** %113, align 8
  %115 = call dereferenceable(40) %"class.blink::BaselineGroup"* @_ZN5blink15BaselineContext25FindCompatibleSharedGroupERKNS_9LayoutBoxENS_12ItemPositionE(%"class.blink::BaselineContext"* %114, %"class.blink::LayoutBox"* dereferenceable(216) %3, i32 %1) #8
  %116 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %116)
  %117 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117)
  store i32 %35, i32* %9, align 4
  store i32 %36, i32* %10, align 4
  %118 = bitcast %"class.blink::LayoutBox"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #8
  store %"class.blink::LayoutBox"* %3, %"class.blink::LayoutBox"** %11, align 8
  %119 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %115, i64 0, i32 4, i32 0
  %120 = call { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_S4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.0"* %119, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %11, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %11) #8
  %121 = extractvalue { %"class.blink::LayoutBox"**, i8 } %120, 1
  %122 = and i8 %121, 1
  %123 = icmp eq i8 %122, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #8
  br i1 %123, label %141, label %124

124:                                              ; preds = %112
  %125 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %115, i64 0, i32 2
  %126 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %125, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp slt i32 %127, %35
  %129 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %130 = select i1 %128, %"class.blink::LayoutUnit"* %129, %"class.blink::LayoutUnit"* %125
  %131 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %130, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  store i32 %132, i32* %126, align 8
  %133 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %115, i64 0, i32 3
  %134 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  %136 = icmp slt i32 %135, %36
  %137 = bitcast i32* %10 to %"class.blink::LayoutUnit"*
  %138 = select i1 %136, %"class.blink::LayoutUnit"* %137, %"class.blink::LayoutUnit"* %133
  %139 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %138, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  store i32 %140, i32* %134, align 4
  br label %141

141:                                              ; preds = %112, %124
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %116)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117)
  br label %142

142:                                              ; preds = %77, %110, %141
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15BaselineContext17UpdateSharedGroupERKNS_9LayoutBoxENS_12ItemPositionENS_10LayoutUnitES5_(%"class.blink::BaselineContext"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.blink::LayoutBox"*, align 8
  %9 = tail call dereferenceable(40) %"class.blink::BaselineGroup"* @_ZN5blink15BaselineContext25FindCompatibleSharedGroupERKNS_9LayoutBoxENS_12ItemPositionE(%"class.blink::BaselineContext"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2)
  %10 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10)
  %11 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11)
  store i32 %3, i32* %6, align 4
  store i32 %4, i32* %7, align 4
  %12 = bitcast %"class.blink::LayoutBox"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %8, align 8
  %13 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %9, i64 0, i32 4, i32 0
  %14 = call { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_S4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.0"* %13, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %8, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %8) #8
  %15 = extractvalue { %"class.blink::LayoutBox"**, i8 } %14, 1
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  br i1 %17, label %35, label %18

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %9, i64 0, i32 2
  %20 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp slt i32 %21, %3
  %23 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %24 = select i1 %22, %"class.blink::LayoutUnit"* %23, %"class.blink::LayoutUnit"* %19
  %25 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %20, align 8
  %27 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %9, i64 0, i32 3
  %28 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp slt i32 %29, %4
  %31 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %32 = select i1 %30, %"class.blink::LayoutUnit"* %31, %"class.blink::LayoutUnit"* %27
  %33 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %28, align 4
  br label %35

35:                                               ; preds = %5, %18
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink21GridBaselineAlignment22BaselineOffsetForChildENS_12ItemPositionEjRKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* nocapture readonly, i32, i32, %"class.blink::LayoutBox"* dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %6 = tail call dereferenceable(40) %"class.blink::BaselineGroup"* @_ZNK5blink21GridBaselineAlignment24GetBaselineGroupForChildENS_12ItemPositionEjRKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* %0, i32 %1, i32 %2, %"class.blink::LayoutBox"* dereferenceable(216) %3, i32 %4)
  %7 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %6, i64 0, i32 4, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 1
  br i1 %9, label %10, label %41

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %6, i64 0, i32 2, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = tail call i32 @_ZNK5blink21GridBaselineAlignment14AscentForChildERKNS_9LayoutBoxENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %3, i32 %4) #8
  %14 = icmp ne i32 %4, 0
  %15 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 0
  %16 = load i8, i8* %15, align 8
  %17 = icmp eq i8 %16, 0
  %18 = xor i1 %14, %17
  br i1 %18, label %19, label %33

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %3, i64 0, i32 0, i32 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = trunc i160 %24 to i104
  %26 = and i104 %25, -5070602400912917605986812821504
  switch i104 %26, label %33 [
    i104 5070602400912917605986812821504, label %27
    i104 -10141204801825835211973625643008, label %29
  ]

27:                                               ; preds = %19
  %28 = icmp eq i8 %16, 1
  br i1 %28, label %33, label %31

29:                                               ; preds = %19
  %30 = icmp eq i8 %16, 1
  br i1 %30, label %31, label %33

31:                                               ; preds = %29, %27
  %32 = tail call i32 @_ZNK5blink21GridBaselineAlignment15DescentForChildERKNS_9LayoutBoxENS_10LayoutUnitENS_8GridAxisE(%"class.blink::GridBaselineAlignment"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %3, i32 %13, i32 %4) #8
  br label %33

33:                                               ; preds = %10, %19, %27, %29, %31
  %34 = phi i32 [ %32, %31 ], [ %13, %29 ], [ %13, %27 ], [ %13, %10 ], [ %13, %19 ]
  %35 = icmp sgt i32 %34, -1
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %12, i32 %34) #8
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  br label %41

41:                                               ; preds = %5, %33
  %42 = phi i32 [ %40, %33 ], [ 0, %5 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21GridBaselineAlignment5ClearENS_8GridAxisE(%"class.blink::GridBaselineAlignment"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 1
  %4 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 3, i32 0
  %5 = getelementptr inbounds %"class.blink::GridBaselineAlignment", %"class.blink::GridBaselineAlignment"* %0, i64 0, i32 2, i32 0
  %6 = select i1 %3, %"class.WTF::HashTable"* %5, %"class.WTF::HashTable"* %4
  tail call void @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"* %6) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13BaselineGroupC2ENS_11WritingModeENS_12ItemPositionE(%"class.blink::BaselineGroup"* nocapture, i8 zeroext, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 2, i32 0
  %5 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 0
  %6 = bitcast i32* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 28, i1 false)
  store i8 %1, i8* %5, align 8
  %7 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13BaselineGroup6UpdateERKNS_9LayoutBoxENS_10LayoutUnitES4_(%"class.blink::BaselineGroup"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca %"class.blink::LayoutBox"*, align 8
  store i32 %2, i32* %5, align 4
  store i32 %3, i32* %6, align 4
  %8 = bitcast %"class.blink::LayoutBox"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #8
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 4, i32 0
  %10 = call { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_S4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.0"* %9, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %7, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %7) #8
  %11 = extractvalue { %"class.blink::LayoutBox"**, i8 } %10, 1
  %12 = and i8 %11, 1
  %13 = icmp eq i8 %12, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #8
  br i1 %13, label %31, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 2
  %16 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, %2
  %19 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %20 = select i1 %18, %"class.blink::LayoutUnit"* %19, %"class.blink::LayoutUnit"* %15
  %21 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  store i32 %22, i32* %16, align 8
  %23 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %23, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp slt i32 %25, %3
  %27 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %28 = select i1 %26, %"class.blink::LayoutUnit"* %27, %"class.blink::LayoutUnit"* %23
  %29 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %24, align 4
  br label %31

31:                                               ; preds = %4, %14
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13BaselineGroup19IsOppositeBlockFlowENS_11WritingModeE(%"class.blink::BaselineGroup"* nocapture readonly, i8 zeroext) local_unnamed_addr #1 align 2 {
  switch i8 %1, label %9 [
    i8 1, label %3
    i8 2, label %4
  ]

3:                                                ; preds = %2
  br label %4

4:                                                ; preds = %2, %3
  %5 = phi i8 [ 2, %3 ], [ 1, %2 ]
  %6 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 0
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, %5
  br label %9

9:                                                ; preds = %4, %2
  %10 = phi i1 [ false, %2 ], [ %8, %4 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13BaselineGroup21IsOrthogonalBlockFlowENS_11WritingModeE(%"class.blink::BaselineGroup"* nocapture readonly, i8 zeroext) local_unnamed_addr #1 align 2 {
  switch i8 %1, label %11 [
    i8 0, label %3
    i8 2, label %7
    i8 1, label %7
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = icmp ne i8 %5, 0
  br label %11

7:                                                ; preds = %2, %2
  %8 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 0
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 0
  br label %11

11:                                               ; preds = %2, %7, %3
  %12 = phi i1 [ %10, %7 ], [ %6, %3 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13BaselineGroup12IsCompatibleENS_11WritingModeENS_12ItemPositionE(%"class.blink::BaselineGroup"* nocapture readonly, i8 zeroext, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, %1
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  switch i8 %1, label %25 [
    i8 0, label %10
    i8 2, label %8
    i8 1, label %8
  ]

8:                                                ; preds = %7, %7
  %9 = icmp eq i8 %5, 0
  br i1 %9, label %12, label %16

10:                                               ; preds = %7
  %11 = icmp eq i8 %5, 0
  br i1 %11, label %25, label %12

12:                                               ; preds = %10, %8, %3
  %13 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %2
  br i1 %15, label %25, label %16

16:                                               ; preds = %8, %12
  switch i8 %1, label %25 [
    i8 1, label %17
    i8 2, label %19
  ]

17:                                               ; preds = %16
  %18 = icmp eq i8 %5, 2
  br i1 %18, label %21, label %25

19:                                               ; preds = %16
  %20 = icmp eq i8 %5, 1
  br i1 %20, label %21, label %25

21:                                               ; preds = %17, %19
  %22 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp ne i32 %23, %2
  br label %25

25:                                               ; preds = %10, %7, %16, %17, %19, %21, %12
  %26 = phi i1 [ true, %12 ], [ false, %19 ], [ %24, %21 ], [ false, %17 ], [ false, %16 ], [ false, %10 ], [ false, %7 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15BaselineContextC2ERKNS_9LayoutBoxENS_12ItemPositionENS_10LayoutUnitES5_(%"class.blink::BaselineContext"*, %"class.blink::LayoutBox"* dereferenceable(216), i32, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.blink::LayoutBox"*, align 8
  %9 = bitcast %"class.blink::BaselineContext"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #8
  %10 = tail call dereferenceable(40) %"class.blink::BaselineGroup"* @_ZN5blink15BaselineContext25FindCompatibleSharedGroupERKNS_9LayoutBoxENS_12ItemPositionE(%"class.blink::BaselineContext"* %0, %"class.blink::LayoutBox"* dereferenceable(216) %1, i32 %2) #8
  %11 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11)
  %12 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12)
  store i32 %3, i32* %6, align 4
  store i32 %4, i32* %7, align 4
  %13 = bitcast %"class.blink::LayoutBox"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %8, align 8
  %14 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %10, i64 0, i32 4, i32 0
  %15 = call { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_S4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.0"* %14, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %8, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %8) #8
  %16 = extractvalue { %"class.blink::LayoutBox"**, i8 } %15, 1
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8
  br i1 %18, label %36, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %10, i64 0, i32 2
  %21 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, %3
  %24 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %25 = select i1 %23, %"class.blink::LayoutUnit"* %24, %"class.blink::LayoutUnit"* %20
  %26 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %21, align 8
  %28 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %10, i64 0, i32 3
  %29 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %28, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, %4
  %32 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %33 = select i1 %31, %"class.blink::LayoutUnit"* %32, %"class.blink::LayoutUnit"* %28
  %34 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %33, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %29, align 4
  br label %36

36:                                               ; preds = %5, %19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %"class.blink::BaselineGroup"* @_ZN5blink15BaselineContext25FindCompatibleSharedGroupERKNS_9LayoutBoxENS_12ItemPositionE(%"class.blink::BaselineContext"*, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::BaselineGroup", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = bitcast %"class.blink::ComputedStyle"** %5 to %"class.blink::ComputedStyleBase"**
  %7 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %7, i64 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = lshr i160 %10, 102
  %12 = trunc i160 %11 to i8
  %13 = and i8 %12, 3
  %14 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %16, i64 %19
  %21 = icmp eq i32 %18, 0
  br i1 %21, label %48, label %22

22:                                               ; preds = %3, %45
  %23 = phi %"class.blink::BaselineGroup"* [ %46, %45 ], [ %16, %3 ]
  %24 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %23, i64 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, %13
  br i1 %26, label %32, label %27

27:                                               ; preds = %22
  switch i8 %13, label %45 [
    i8 0, label %30
    i8 2, label %28
    i8 1, label %28
  ]

28:                                               ; preds = %27, %27
  %29 = icmp eq i8 %25, 0
  br i1 %29, label %32, label %36

30:                                               ; preds = %27
  %31 = icmp eq i8 %25, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %30, %28, %22
  %33 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %23, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, %2
  br i1 %35, label %60, label %36

36:                                               ; preds = %32, %28
  switch i8 %13, label %45 [
    i8 1, label %37
    i8 2, label %39
  ]

37:                                               ; preds = %36
  %38 = icmp eq i8 %25, 2
  br i1 %38, label %41, label %45

39:                                               ; preds = %36
  %40 = icmp eq i8 %25, 1
  br i1 %40, label %41, label %45

41:                                               ; preds = %37, %39
  %42 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %23, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, %2
  br i1 %44, label %45, label %60

45:                                               ; preds = %41, %27, %30, %36, %37, %39
  %46 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %23, i64 1
  %47 = icmp eq %"class.blink::BaselineGroup"* %46, %20
  br i1 %47, label %48, label %22

48:                                               ; preds = %45, %3
  %49 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %49) #8
  %50 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %4, i64 0, i32 2, i32 0
  %51 = bitcast i32* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 28, i1 false) #8
  store i8 %13, i8* %49, align 8
  %52 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %4, i64 0, i32 1
  store i32 %2, i32* %52, align 4
  call void @_ZN3WTF6VectorIN5blink13BaselineGroupELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjOT_(%"class.WTF::Vector"* %14, i32 0, %"class.blink::BaselineGroup"* nonnull dereferenceable(40) %4) #8
  %53 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %4, i64 0, i32 4, i32 0, i32 0
  %54 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %53, align 8
  %55 = icmp eq %"class.blink::LayoutBox"** %54, null
  br i1 %55, label %58, label %56, !prof !9

56:                                               ; preds = %48
  %57 = bitcast %"class.blink::LayoutBox"** %54 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #8
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %53, align 8
  br label %58

58:                                               ; preds = %48, %56
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %49) #8
  %59 = call dereferenceable(40) %"class.blink::BaselineGroup"* @_ZN3WTF6VectorIN5blink13BaselineGroupELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 0) #8
  br label %60

60:                                               ; preds = %41, %32, %58
  %61 = phi %"class.blink::BaselineGroup"* [ %59, %58 ], [ %23, %32 ], [ %23, %41 ]
  ret %"class.blink::BaselineGroup"* %61
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SC_SJ_EERjDnEENS_18HashTableAddResultISK_S9_EEOT0_OT1_(%"class.WTF::HashTable"*, i32* dereferenceable(4), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %130, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -2
  %59 = select i1 %58, %"struct.WTF::KeyValuePair"* %52, %"struct.WTF::KeyValuePair"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 0
  store i32 -1, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1
  %73 = bitcast %"class.std::__1::unique_ptr"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::BaselineContext"*, %"class.blink::BaselineContext"** %86, align 8
  %88 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 0, i64* %88, align 8
  %89 = icmp eq %"class.blink::BaselineContext"* %87, null
  br i1 %89, label %118, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %87, i64 0, i32 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %91, align 8
  %93 = icmp eq %"class.blink::BaselineGroup"* %92, null
  br i1 %93, label %116, label %94, !prof !9

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %87, i64 0, i32 0, i32 0, i32 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %113, label %98, !prof !2

98:                                               ; preds = %94
  %99 = zext i32 %96 to i64
  %100 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %92, i64 %99
  br label %101

101:                                              ; preds = %108, %98
  %102 = phi %"class.blink::BaselineGroup"* [ %109, %108 ], [ %92, %98 ]
  %103 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %102, i64 0, i32 4, i32 0, i32 0
  %104 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %103, align 8
  %105 = icmp eq %"class.blink::LayoutBox"** %104, null
  br i1 %105, label %108, label %106, !prof !9

106:                                              ; preds = %101
  %107 = bitcast %"class.blink::LayoutBox"** %104 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %107) #8
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %103, align 8
  br label %108

108:                                              ; preds = %106, %101
  %109 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %102, i64 1
  %110 = icmp eq %"class.blink::BaselineGroup"* %109, %100
  br i1 %110, label %111, label %101

111:                                              ; preds = %108
  store i32 0, i32* %95, align 4
  %112 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %91, align 8
  br label %113

113:                                              ; preds = %111, %94
  %114 = phi %"class.blink::BaselineGroup"* [ %92, %94 ], [ %112, %111 ]
  %115 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %114, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %115) #8
  br label %116

116:                                              ; preds = %113, %90
  %117 = bitcast %"class.blink::BaselineContext"* %87 to i8*
  tail call void @free(i8* %117) #8
  br label %118

118:                                              ; preds = %81, %116
  %119 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = add i32 %120, 1
  store i32 %121, i32* %119, align 4
  %122 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %123 = load i32, i32* %122, align 8
  %124 = add i32 %123, %121
  %125 = shl i32 %124, 1
  %126 = load i32, i32* %12, align 8
  %127 = icmp ult i32 %125, %126
  br i1 %127, label %130, label %128

128:                                              ; preds = %118
  %129 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %83)
  br label %130

130:                                              ; preds = %50, %118, %128
  %131 = phi i8 [ 1, %118 ], [ 1, %128 ], [ 0, %50 ]
  %132 = phi %"struct.WTF::KeyValuePair"* [ %83, %118 ], [ %129, %128 ], [ %52, %50 ]
  %133 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %132, 0
  %134 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %133, i8 %131, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %134
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([177 x i8], [177 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEEEEPKcv, i64 0, i64 0)) #8
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 0
  store i32 -1, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %45, i32 1
  %49 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 0
  store i32 -1, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %50, i32 1
  %53 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 0
  store i32 -1, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %54, i32 1
  %57 = bitcast %"class.std::__1::unique_ptr"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 0
  store i32 -1, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %58, i32 1
  %61 = bitcast %"class.std::__1::unique_ptr"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 0
  store i32 -1, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %69, i32 1
  %73 = bitcast %"class.std::__1::unique_ptr"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !10

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #8
  ret %"struct.WTF::KeyValuePair"* %78
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8RehashToEPS9_jSL_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %88

24:                                               ; preds = %107
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %108, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %111, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %109, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  call void @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"* nonnull %5)
  %35 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, -2147483648
  store i32 %37, i32* %35, align 8
  %38 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %39 = icmp eq %"struct.WTF::KeyValuePair"* %38, null
  br i1 %39, label %87, label %40, !prof !9

40:                                               ; preds = %28
  %41 = load i32, i32* %8, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %85, label %43

43:                                               ; preds = %40
  %44 = zext i32 %41 to i64
  br label %45

45:                                               ; preds = %82, %43
  %46 = phi i64 [ 0, %43 ], [ %83, %82 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %46, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, -2
  br i1 %49, label %82, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 %46, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.blink::BaselineContext"*, %"class.blink::BaselineContext"** %51, align 8
  store %"class.blink::BaselineContext"* null, %"class.blink::BaselineContext"** %51, align 8
  %53 = icmp eq %"class.blink::BaselineContext"* %52, null
  br i1 %53, label %82, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %55, align 8
  %57 = icmp eq %"class.blink::BaselineGroup"* %56, null
  br i1 %57, label %80, label %58, !prof !9

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %52, i64 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %77, label %62, !prof !2

62:                                               ; preds = %58
  %63 = zext i32 %60 to i64
  %64 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %56, i64 %63
  br label %65

65:                                               ; preds = %72, %62
  %66 = phi %"class.blink::BaselineGroup"* [ %73, %72 ], [ %56, %62 ]
  %67 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %66, i64 0, i32 4, i32 0, i32 0
  %68 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %67, align 8
  %69 = icmp eq %"class.blink::LayoutBox"** %68, null
  br i1 %69, label %72, label %70, !prof !9

70:                                               ; preds = %65
  %71 = bitcast %"class.blink::LayoutBox"** %68 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #8
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %67, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %66, i64 1
  %74 = icmp eq %"class.blink::BaselineGroup"* %73, %64
  br i1 %74, label %75, label %65

75:                                               ; preds = %72
  store i32 0, i32* %59, align 4
  %76 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %55, align 8
  br label %77

77:                                               ; preds = %75, %58
  %78 = phi %"class.blink::BaselineGroup"* [ %56, %58 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %78, i64 0, i32 0
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #8
  br label %80

80:                                               ; preds = %77, %54
  %81 = bitcast %"class.blink::BaselineContext"* %52 to i8*
  call void @free(i8* %81) #8
  br label %82

82:                                               ; preds = %80, %50, %45
  %83 = add nuw nsw i64 %46, 1
  %84 = icmp eq i64 %83, %44
  br i1 %84, label %85, label %45

85:                                               ; preds = %82, %40
  %86 = bitcast %"struct.WTF::KeyValuePair"* %38 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %86) #8
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %7, align 8
  br label %87

87:                                               ; preds = %28, %85
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  ret %"struct.WTF::KeyValuePair"* %33

88:                                               ; preds = %21, %107
  %89 = phi i64 [ %108, %107 ], [ %23, %21 ]
  %90 = phi i32 [ %109, %107 ], [ %13, %21 ]
  %91 = phi %"struct.WTF::KeyValuePair"* [ %110, %107 ], [ %22, %21 ]
  %92 = phi %"struct.WTF::KeyValuePair"* [ %111, %107 ], [ null, %21 ]
  %93 = phi i32 [ %112, %107 ], [ 0, %21 ]
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %91, i64 %94
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %95, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp ugt i32 %97, -3
  br i1 %98, label %107, label %99

99:                                               ; preds = %88
  %100 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8ReinsertEOS9_(%"class.WTF::HashTable"* nonnull %5, %"struct.WTF::KeyValuePair"* dereferenceable(16) %95)
  %101 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 %94
  %103 = icmp eq %"struct.WTF::KeyValuePair"* %102, %3
  %104 = select i1 %103, %"struct.WTF::KeyValuePair"* %100, %"struct.WTF::KeyValuePair"* %92
  %105 = load i32, i32* %12, align 8
  %106 = ptrtoint %"struct.WTF::KeyValuePair"* %101 to i64
  br label %107

107:                                              ; preds = %88, %99
  %108 = phi i64 [ %89, %88 ], [ %106, %99 ]
  %109 = phi i32 [ %90, %88 ], [ %105, %99 ]
  %110 = phi %"struct.WTF::KeyValuePair"* [ %91, %88 ], [ %101, %99 ]
  %111 = phi %"struct.WTF::KeyValuePair"* [ %92, %88 ], [ %104, %99 ]
  %112 = add i32 %93, 1
  %113 = icmp eq i32 %112, %109
  br i1 %113, label %24, label %88
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE8ReinsertEOS9_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -1
  %9 = zext i32 %8 to i64
  %10 = load i32, i32* %3, align 4
  %11 = shl i32 %10, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %10, %12
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = and i32 %23, %8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %25
  %27 = ptrtoint %"struct.WTF::KeyValuePair"* %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %48, label %31

31:                                               ; preds = %2
  %32 = xor i32 %23, -1
  %33 = lshr i32 %21, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %54

45:                                               ; preds = %61
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %68 to i64
  %47 = inttoptr i64 %63 to %"struct.WTF::KeyValuePair"*
  br label %48

48:                                               ; preds = %45, %2
  %49 = phi i64 [ %46, %45 ], [ %27, %2 ]
  %50 = phi %"struct.WTF::KeyValuePair"* [ %47, %45 ], [ null, %2 ]
  %51 = icmp eq %"struct.WTF::KeyValuePair"* %50, null
  %52 = ptrtoint %"struct.WTF::KeyValuePair"* %50 to i64
  %53 = select i1 %51, i64 %49, i64 %52
  br label %73

54:                                               ; preds = %61, %31
  %55 = phi i64 [ 0, %31 ], [ %63, %61 ]
  %56 = phi i32 [ %29, %31 ], [ %71, %61 ]
  %57 = phi i64 [ %27, %31 ], [ %69, %61 ]
  %58 = phi i64 [ %25, %31 ], [ %67, %61 ]
  %59 = phi i64 [ 0, %31 ], [ %65, %61 ]
  %60 = icmp eq i32 %56, %10
  br i1 %60, label %73, label %61

61:                                               ; preds = %54
  %62 = icmp eq i32 %56, -2
  %63 = select i1 %62, i64 %57, i64 %55
  %64 = icmp eq i64 %59, 0
  %65 = select i1 %64, i64 %44, i64 %59
  %66 = add i64 %65, %58
  %67 = and i64 %66, %9
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %5, i64 %67
  %69 = ptrtoint %"struct.WTF::KeyValuePair"* %68 to i64
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %68, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %45, label %54

73:                                               ; preds = %54, %48
  %74 = phi i64 [ %53, %48 ], [ %57, %54 ]
  %75 = inttoptr i64 %74 to %"struct.WTF::KeyValuePair"*
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1, i32 0, i32 0, i32 0
  %77 = load %"class.blink::BaselineContext"*, %"class.blink::BaselineContext"** %76, align 8
  store %"class.blink::BaselineContext"* null, %"class.blink::BaselineContext"** %76, align 8
  %78 = icmp eq %"class.blink::BaselineContext"* %77, null
  br i1 %78, label %107, label %79

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %77, i64 0, i32 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %80, align 8
  %82 = icmp eq %"class.blink::BaselineGroup"* %81, null
  br i1 %82, label %105, label %83, !prof !9

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %77, i64 0, i32 0, i32 0, i32 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %102, label %87, !prof !2

87:                                               ; preds = %83
  %88 = zext i32 %85 to i64
  %89 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %81, i64 %88
  br label %90

90:                                               ; preds = %97, %87
  %91 = phi %"class.blink::BaselineGroup"* [ %98, %97 ], [ %81, %87 ]
  %92 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %91, i64 0, i32 4, i32 0, i32 0
  %93 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %92, align 8
  %94 = icmp eq %"class.blink::LayoutBox"** %93, null
  br i1 %94, label %97, label %95, !prof !9

95:                                               ; preds = %90
  %96 = bitcast %"class.blink::LayoutBox"** %93 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %96) #8
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %92, align 8
  br label %97

97:                                               ; preds = %95, %90
  %98 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %91, i64 1
  %99 = icmp eq %"class.blink::BaselineGroup"* %98, %89
  br i1 %99, label %100, label %90

100:                                              ; preds = %97
  store i32 0, i32* %84, align 4
  %101 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %80, align 8
  br label %102

102:                                              ; preds = %100, %83
  %103 = phi %"class.blink::BaselineGroup"* [ %81, %83 ], [ %101, %100 ]
  %104 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %103, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %104) #8
  br label %105

105:                                              ; preds = %102, %79
  %106 = bitcast %"class.blink::BaselineContext"* %77 to i8*
  tail call void @free(i8* %106) #8
  br label %107

107:                                              ; preds = %73, %105
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 0
  %109 = load i32, i32* %3, align 8
  store i32 %109, i32* %108, align 8
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %75, i64 0, i32 1
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::unique_ptr"* %111 to i64*
  %114 = load i64, i64* %113, align 8
  store %"class.blink::BaselineContext"* null, %"class.blink::BaselineContext"** %112, align 8
  %115 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  store i64 %114, i64* %115, align 8
  ret %"struct.WTF::KeyValuePair"* %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIjNS_12KeyValuePairIjNSt3__110unique_ptrIN5blink15BaselineContextENS2_14default_deleteIS5_EEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIjEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsIjEENS_10HashTraitsIS8_EEEESF_NS_18PartitionAllocatorEE5clearEv(%"class.WTF::HashTable"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair"* %3, null
  br i1 %4, label %55, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %51, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %48, %9
  %12 = phi i64 [ 0, %9 ], [ %49, %48 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -2
  br i1 %15, label %48, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %12, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::BaselineContext"*, %"class.blink::BaselineContext"** %17, align 8
  store %"class.blink::BaselineContext"* null, %"class.blink::BaselineContext"** %17, align 8
  %19 = icmp eq %"class.blink::BaselineContext"* %18, null
  br i1 %19, label %48, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %21, align 8
  %23 = icmp eq %"class.blink::BaselineGroup"* %22, null
  br i1 %23, label %46, label %24, !prof !9

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::BaselineContext", %"class.blink::BaselineContext"* %18, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %43, label %28, !prof !2

28:                                               ; preds = %24
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %22, i64 %29
  br label %31

31:                                               ; preds = %38, %28
  %32 = phi %"class.blink::BaselineGroup"* [ %39, %38 ], [ %22, %28 ]
  %33 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %32, i64 0, i32 4, i32 0, i32 0
  %34 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %33, align 8
  %35 = icmp eq %"class.blink::LayoutBox"** %34, null
  br i1 %35, label %38, label %36, !prof !9

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::LayoutBox"** %34 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #8
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %33, align 8
  br label %38

38:                                               ; preds = %36, %31
  %39 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %32, i64 1
  %40 = icmp eq %"class.blink::BaselineGroup"* %39, %30
  br i1 %40, label %41, label %31

41:                                               ; preds = %38
  store i32 0, i32* %25, align 4
  %42 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %21, align 8
  br label %43

43:                                               ; preds = %41, %24
  %44 = phi %"class.blink::BaselineGroup"* [ %22, %24 ], [ %42, %41 ]
  %45 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %44, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %45) #8
  br label %46

46:                                               ; preds = %43, %20
  %47 = bitcast %"class.blink::BaselineContext"* %18 to i8*
  tail call void @free(i8* %47) #8
  br label %48

48:                                               ; preds = %46, %16, %11
  %49 = add nuw nsw i64 %12, 1
  %50 = icmp eq i64 %49, %10
  br i1 %50, label %51, label %11

51:                                               ; preds = %48, %5
  %52 = bitcast %"struct.WTF::KeyValuePair"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %52) #8
  %53 = bitcast %"class.WTF::HashTable"* %0 to i64*
  store atomic i64 0, i64* %53 monotonic, align 8
  store i32 0, i32* %6, align 8
  %54 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  store i32 0, i32* %54, align 4
  br label %55

55:                                               ; preds = %1, %51
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_S4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.0"*, %"class.blink::LayoutBox"** dereferenceable(8), %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 0
  %5 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %4, align 8
  %6 = icmp eq %"class.blink::LayoutBox"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.0"* %0, %"class.blink::LayoutBox"** null)
  %9 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::LayoutBox"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, i64 %38
  %40 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutBox"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::LayoutBox"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::LayoutBox"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::LayoutBox"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::LayoutBox"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::LayoutBox"* %58, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %66 = select i1 %65, %"class.blink::LayoutBox"** %59, %"class.blink::LayoutBox"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %11, i64 %70
  %72 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %71, align 8
  %73 = icmp eq %"class.blink::LayoutBox"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::LayoutBox"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::LayoutBox"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::LayoutBox"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::LayoutBox"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::LayoutBox"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::LayoutBox"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.0"* %0, %"class.blink::LayoutBox"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::LayoutBox"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::LayoutBox"**, i8 } undef, %"class.blink::LayoutBox"** %105, 0
  %107 = insertvalue { %"class.blink::LayoutBox"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::LayoutBox"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.0"*, %"class.blink::LayoutBox"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #8
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #8
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #8
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPKN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #8
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #8
  %36 = bitcast i8* %35 to %"class.blink::LayoutBox"**
  %37 = call %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.0"* %0, %"class.blink::LayoutBox"** %36, i32 %32, %"class.blink::LayoutBox"** %1) #8
  ret %"class.blink::LayoutBox"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBox"** @_ZN3WTF9HashTableIPKN5blink9LayoutBoxES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.0"*, %"class.blink::LayoutBox"**, i32, %"class.blink::LayoutBox"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::LayoutBox"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.0"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %9, align 8
  %17 = ptrtoint %"class.blink::LayoutBox"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable.0"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::LayoutBox"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #8
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.0", %"class.WTF::HashTable.0"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::LayoutBox"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::LayoutBox"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::LayoutBox"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %34, i64 %37
  %39 = bitcast %"class.blink::LayoutBox"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %1, i64 %62
  %64 = ptrtoint %"class.blink::LayoutBox"** %63 to i64
  %65 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %63, align 8
  %66 = icmp eq %"class.blink::LayoutBox"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::LayoutBox"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::LayoutBox"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::LayoutBox"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::LayoutBox"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::LayoutBox"** %87, null
  %89 = ptrtoint %"class.blink::LayoutBox"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::LayoutBox"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::LayoutBox"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::LayoutBox"* %93, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %1, i64 %104
  %106 = ptrtoint %"class.blink::LayoutBox"** %105 to i64
  %107 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %105, align 8
  %108 = icmp eq %"class.blink::LayoutBox"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::LayoutBox"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %113, i64 %37
  %115 = icmp eq %"class.blink::LayoutBox"** %114, %3
  %116 = select i1 %115, %"class.blink::LayoutBox"** %111, %"class.blink::LayoutBox"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::LayoutBox"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::LayoutBox"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::LayoutBox"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BaselineGroupELj0ENS_18PartitionAllocatorEE6insertIS2_EEvjOT_(%"class.WTF::Vector"*, i32, %"class.blink::BaselineGroup"* dereferenceable(40)) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #8
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #8
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %28, label %84

28:                                               ; preds = %23
  %29 = add i32 %24, 1
  %30 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %30, align 8
  %32 = icmp ugt %"class.blink::BaselineGroup"* %31, %2
  br i1 %32, label %37, label %33

33:                                               ; preds = %28
  %34 = zext i32 %24 to i64
  %35 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %31, i64 %34
  %36 = icmp ugt %"class.blink::BaselineGroup"* %35, %2
  br i1 %36, label %56, label %37

37:                                               ; preds = %33, %28
  %38 = lshr i32 %24, 2
  %39 = add i32 %29, %38
  %40 = icmp ugt i32 %39, 4
  %41 = select i1 %40, i32 %39, i32 4
  %42 = icmp ugt i32 %41, %29
  %43 = select i1 %42, i32 %41, i32 %29
  %44 = icmp ult i32 %24, %43
  br i1 %44, label %45, label %84, !prof !9

45:                                               ; preds = %37
  %46 = icmp eq %"class.blink::BaselineGroup"* %31, null
  br i1 %46, label %47, label %55

47:                                               ; preds = %45
  %48 = zext i32 %43 to i64
  %49 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BaselineGroupEEEmm(i64 %48) #8
  %50 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %49, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BaselineGroupEEEPKcv, i64 0, i64 0)) #8
  %51 = ptrtoint i8* %50 to i64
  %52 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %51, i64* %52 monotonic, align 8
  %53 = udiv i64 %49, 40
  %54 = trunc i64 %53 to i32
  store i32 %54, i32* %25, align 8
  br label %84

55:                                               ; preds = %45
  call void @_ZN3WTF6VectorIN5blink13BaselineGroupELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %43) #8
  br label %84

56:                                               ; preds = %33
  %57 = ptrtoint %"class.blink::BaselineGroup"* %2 to i64
  %58 = ptrtoint %"class.blink::BaselineGroup"* %31 to i64
  %59 = sub i64 %57, %58
  %60 = sdiv exact i64 %59, 40
  %61 = lshr i32 %24, 2
  %62 = add i32 %29, %61
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %29
  %66 = select i1 %65, i32 %64, i32 %29
  %67 = icmp ult i32 %24, %66
  br i1 %67, label %68, label %81, !prof !9

68:                                               ; preds = %56
  %69 = icmp eq %"class.blink::BaselineGroup"* %31, null
  br i1 %69, label %70, label %79

70:                                               ; preds = %68
  %71 = zext i32 %66 to i64
  %72 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BaselineGroupEEEmm(i64 %71) #8
  %73 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BaselineGroupEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  %75 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %75 monotonic, align 8
  %76 = udiv i64 %72, 40
  %77 = trunc i64 %76 to i32
  store i32 %77, i32* %25, align 8
  %78 = bitcast i8* %73 to %"class.blink::BaselineGroup"*
  br label %81

79:                                               ; preds = %68
  call void @_ZN3WTF6VectorIN5blink13BaselineGroupELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %66) #8
  %80 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %30, align 8
  br label %81

81:                                               ; preds = %56, %70, %79
  %82 = phi %"class.blink::BaselineGroup"* [ %31, %56 ], [ %78, %70 ], [ %80, %79 ]
  %83 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %82, i64 %60
  br label %84

84:                                               ; preds = %81, %37, %47, %55, %23
  %85 = phi %"class.blink::BaselineGroup"* [ %2, %23 ], [ %83, %81 ], [ %2, %37 ], [ %2, %47 ], [ %2, %55 ]
  %86 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %86, align 8
  %88 = zext i32 %1 to i64
  %89 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %87, i64 %88
  %90 = load i32, i32* %9, align 4
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %87, i64 %91
  %93 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %89, i64 1
  call void @_ZN3WTF11VectorMoverILb0EN5blink13BaselineGroupENS_18PartitionAllocatorEE15MoveOverlappingEPS2_S5_S5_b(%"class.blink::BaselineGroup"* %89, %"class.blink::BaselineGroup"* %92, %"class.blink::BaselineGroup"* %93, i1 zeroext true) #8
  %94 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %89, i64 0, i32 0
  %95 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %85, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 16, i1 false) #8
  %96 = getelementptr inbounds i8, i8* %94, i64 16
  %97 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %85, i64 0, i32 4
  %98 = getelementptr inbounds i8, i8* %94, i64 24
  %99 = bitcast i8* %98 to i32*
  %100 = getelementptr inbounds i8, i8* %94, i64 28
  %101 = bitcast i8* %100 to i32*
  %102 = getelementptr inbounds i8, i8* %94, i64 32
  %103 = bitcast i8* %102 to i32*
  %104 = bitcast %"class.WTF::HashSet"* %97 to i64*
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 20, i1 false) #8
  %105 = load i64, i64* %104, align 8
  %106 = bitcast i8* %96 to i64*
  store atomic i64 0, i64* %104 monotonic, align 8
  store atomic i64 %105, i64* %106 monotonic, align 8
  %107 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %85, i64 0, i32 4, i32 0, i32 1
  %108 = load i32, i32* %99, align 4
  %109 = load i32, i32* %107, align 4
  store i32 %109, i32* %99, align 4
  store i32 %108, i32* %107, align 4
  %110 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %85, i64 0, i32 4, i32 0, i32 2
  %111 = load i32, i32* %101, align 4
  %112 = load i32, i32* %110, align 4
  store i32 %112, i32* %101, align 4
  store i32 %111, i32* %110, align 4
  %113 = load i32, i32* %103, align 8
  %114 = and i32 %113, 2147483647
  %115 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %85, i64 0, i32 4, i32 0, i32 3
  %116 = load i32, i32* %115, align 8
  %117 = and i32 %116, 2147483647
  %118 = and i32 %113, -2147483648
  %119 = or i32 %117, %118
  store i32 %119, i32* %103, align 8
  %120 = load i32, i32* %115, align 8
  %121 = and i32 %120, -2147483648
  %122 = or i32 %121, %114
  store i32 %122, i32* %115, align 8
  %123 = load i32, i32* %9, align 4
  %124 = add i32 %123, 1
  store i32 %124, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink13BaselineGroupELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %57

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %55, label %14

14:                                               ; preds = %4, %51
  %15 = phi %"class.blink::BaselineGroup"* [ %53, %51 ], [ %6, %4 ]
  %16 = phi %"class.blink::BaselineGroup"* [ %52, %51 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %15, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 16, i1 false) #8
  %19 = getelementptr inbounds i8, i8* %17, i64 16
  %20 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %15, i64 0, i32 4
  %21 = getelementptr inbounds i8, i8* %17, i64 24
  %22 = bitcast i8* %21 to i32*
  %23 = getelementptr inbounds i8, i8* %17, i64 28
  %24 = bitcast i8* %23 to i32*
  %25 = getelementptr inbounds i8, i8* %17, i64 32
  %26 = bitcast i8* %25 to i32*
  %27 = bitcast %"class.WTF::HashSet"* %20 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 20, i1 false) #8
  %28 = load i64, i64* %27, align 8
  %29 = bitcast i8* %19 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %15, i64 0, i32 4, i32 0, i32 1
  %31 = load i32, i32* %22, align 4
  %32 = load i32, i32* %30, align 4
  store i32 %32, i32* %22, align 4
  store i32 %31, i32* %30, align 4
  %33 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %15, i64 0, i32 4, i32 0, i32 2
  %34 = load i32, i32* %24, align 4
  %35 = load i32, i32* %33, align 4
  store i32 %35, i32* %24, align 4
  store i32 %34, i32* %33, align 4
  %36 = load i32, i32* %26, align 8
  %37 = and i32 %36, 2147483647
  %38 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %15, i64 0, i32 4, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  %41 = and i32 %36, -2147483648
  %42 = or i32 %40, %41
  store i32 %42, i32* %26, align 8
  %43 = load i32, i32* %38, align 8
  %44 = and i32 %43, -2147483648
  %45 = or i32 %44, %37
  store i32 %45, i32* %38, align 8
  %46 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %15, i64 0, i32 4, i32 0, i32 0
  %47 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %46, align 8
  %48 = icmp eq %"class.blink::LayoutBox"** %47, null
  br i1 %48, label %51, label %49, !prof !9

49:                                               ; preds = %14
  %50 = bitcast %"class.blink::LayoutBox"** %47 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %50) #8
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %46, align 8
  br label %51

51:                                               ; preds = %49, %14
  %52 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %16, i64 1
  %53 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %15, i64 1
  %54 = icmp eq %"class.blink::BaselineGroup"* %53, %10
  br i1 %54, label %55, label %14

55:                                               ; preds = %51, %4
  %56 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %6, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %56) #8
  br label %121

57:                                               ; preds = %2
  %58 = zext i32 %1 to i64
  %59 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BaselineGroupEEEmm(i64 %58) #8
  %60 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %59, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink13BaselineGroupEEEPKcv, i64 0, i64 0)) #8
  %61 = udiv i64 %59, 40
  %62 = ptrtoint i8* %60 to i64
  %63 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %63, align 8
  %65 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %64, i64 %67
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %115, label %70

70:                                               ; preds = %57
  %71 = bitcast i8* %60 to %"class.blink::BaselineGroup"*
  br label %72

72:                                               ; preds = %70, %109
  %73 = phi %"class.blink::BaselineGroup"* [ %111, %109 ], [ %64, %70 ]
  %74 = phi %"class.blink::BaselineGroup"* [ %110, %109 ], [ %71, %70 ]
  %75 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %74, i64 0, i32 0
  %76 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %73, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 16, i1 false) #8
  %77 = getelementptr inbounds i8, i8* %75, i64 16
  %78 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %73, i64 0, i32 4
  %79 = getelementptr inbounds i8, i8* %75, i64 24
  %80 = bitcast i8* %79 to i32*
  %81 = getelementptr inbounds i8, i8* %75, i64 28
  %82 = bitcast i8* %81 to i32*
  %83 = getelementptr inbounds i8, i8* %75, i64 32
  %84 = bitcast i8* %83 to i32*
  %85 = bitcast %"class.WTF::HashSet"* %78 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 20, i1 false) #8
  %86 = load i64, i64* %85, align 8
  %87 = bitcast i8* %77 to i64*
  store atomic i64 0, i64* %85 monotonic, align 8
  store atomic i64 %86, i64* %87 monotonic, align 8
  %88 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %73, i64 0, i32 4, i32 0, i32 1
  %89 = load i32, i32* %80, align 4
  %90 = load i32, i32* %88, align 4
  store i32 %90, i32* %80, align 4
  store i32 %89, i32* %88, align 4
  %91 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %73, i64 0, i32 4, i32 0, i32 2
  %92 = load i32, i32* %82, align 4
  %93 = load i32, i32* %91, align 4
  store i32 %93, i32* %82, align 4
  store i32 %92, i32* %91, align 4
  %94 = load i32, i32* %84, align 8
  %95 = and i32 %94, 2147483647
  %96 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %73, i64 0, i32 4, i32 0, i32 3
  %97 = load i32, i32* %96, align 8
  %98 = and i32 %97, 2147483647
  %99 = and i32 %94, -2147483648
  %100 = or i32 %98, %99
  store i32 %100, i32* %84, align 8
  %101 = load i32, i32* %96, align 8
  %102 = and i32 %101, -2147483648
  %103 = or i32 %102, %95
  store i32 %103, i32* %96, align 8
  %104 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %73, i64 0, i32 4, i32 0, i32 0
  %105 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %104, align 8
  %106 = icmp eq %"class.blink::LayoutBox"** %105, null
  br i1 %106, label %109, label %107, !prof !9

107:                                              ; preds = %72
  %108 = bitcast %"class.blink::LayoutBox"** %105 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %108) #8
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %104, align 8
  br label %109

109:                                              ; preds = %107, %72
  %110 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %74, i64 1
  %111 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %73, i64 1
  %112 = icmp eq %"class.blink::BaselineGroup"* %111, %68
  br i1 %112, label %113, label %72

113:                                              ; preds = %109
  %114 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %63, align 8
  br label %115

115:                                              ; preds = %113, %57
  %116 = phi %"class.blink::BaselineGroup"* [ %114, %113 ], [ %64, %57 ]
  %117 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %116, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %117) #8
  %118 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %62, i64* %118 monotonic, align 8
  %119 = trunc i64 %61 to i32
  %120 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %119, i32* %120, align 8
  br label %121

121:                                              ; preds = %115, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink13BaselineGroupEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 53634662
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 53634662) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = mul i64 %0, 40
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11VectorMoverILb0EN5blink13BaselineGroupENS_18PartitionAllocatorEE15MoveOverlappingEPS2_S5_S5_b(%"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"*, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %5 = icmp ugt %"class.blink::BaselineGroup"* %0, %2
  br i1 %5, label %6, label %49

6:                                                ; preds = %4
  %7 = icmp eq %"class.blink::BaselineGroup"* %0, %1
  br i1 %7, label %98, label %8

8:                                                ; preds = %6, %45
  %9 = phi %"class.blink::BaselineGroup"* [ %47, %45 ], [ %0, %6 ]
  %10 = phi %"class.blink::BaselineGroup"* [ %46, %45 ], [ %2, %6 ]
  %11 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %10, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %9, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false) #8
  %13 = getelementptr inbounds i8, i8* %11, i64 16
  %14 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %9, i64 0, i32 4
  %15 = getelementptr inbounds i8, i8* %11, i64 24
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %11, i64 28
  %18 = bitcast i8* %17 to i32*
  %19 = getelementptr inbounds i8, i8* %11, i64 32
  %20 = bitcast i8* %19 to i32*
  %21 = bitcast %"class.WTF::HashSet"* %14 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 20, i1 false) #8
  %22 = load i64, i64* %21, align 8
  %23 = bitcast i8* %13 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %9, i64 0, i32 4, i32 0, i32 1
  %25 = load i32, i32* %16, align 4
  %26 = load i32, i32* %24, align 4
  store i32 %26, i32* %16, align 4
  store i32 %25, i32* %24, align 4
  %27 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %9, i64 0, i32 4, i32 0, i32 2
  %28 = load i32, i32* %18, align 4
  %29 = load i32, i32* %27, align 4
  store i32 %29, i32* %18, align 4
  store i32 %28, i32* %27, align 4
  %30 = load i32, i32* %20, align 8
  %31 = and i32 %30, 2147483647
  %32 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %9, i64 0, i32 4, i32 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, 2147483647
  %35 = and i32 %30, -2147483648
  %36 = or i32 %34, %35
  store i32 %36, i32* %20, align 8
  %37 = load i32, i32* %32, align 8
  %38 = and i32 %37, -2147483648
  %39 = or i32 %38, %31
  store i32 %39, i32* %32, align 8
  %40 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %9, i64 0, i32 4, i32 0, i32 0
  %41 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBox"** %41, null
  br i1 %42, label %45, label %43, !prof !9

43:                                               ; preds = %8
  %44 = bitcast %"class.blink::LayoutBox"** %41 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %44) #8
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %40, align 8
  br label %45

45:                                               ; preds = %43, %8
  %46 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %10, i64 1
  %47 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %9, i64 1
  %48 = icmp eq %"class.blink::BaselineGroup"* %47, %1
  br i1 %48, label %98, label %8

49:                                               ; preds = %4
  %50 = icmp eq %"class.blink::BaselineGroup"* %1, %0
  br i1 %50, label %98, label %51

51:                                               ; preds = %49
  %52 = ptrtoint %"class.blink::BaselineGroup"* %1 to i64
  %53 = ptrtoint %"class.blink::BaselineGroup"* %0 to i64
  %54 = sub i64 %52, %53
  %55 = sdiv exact i64 %54, 40
  %56 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %2, i64 %55
  br label %57

57:                                               ; preds = %51, %96
  %58 = phi %"class.blink::BaselineGroup"* [ %61, %96 ], [ %56, %51 ]
  %59 = phi %"class.blink::BaselineGroup"* [ %60, %96 ], [ %1, %51 ]
  %60 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %59, i64 -1
  %61 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %58, i64 -1
  %62 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %61, i64 0, i32 0
  %63 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %60, i64 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 16, i1 false) #8
  %64 = getelementptr inbounds i8, i8* %62, i64 16
  %65 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %59, i64 -1, i32 4
  %66 = getelementptr inbounds i8, i8* %62, i64 24
  %67 = bitcast i8* %66 to i32*
  %68 = getelementptr inbounds i8, i8* %62, i64 28
  %69 = bitcast i8* %68 to i32*
  %70 = getelementptr inbounds i8, i8* %62, i64 32
  %71 = bitcast i8* %70 to i32*
  %72 = bitcast %"class.WTF::HashSet"* %65 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 20, i1 false) #8
  %73 = load i64, i64* %72, align 8
  %74 = bitcast i8* %64 to i64*
  store atomic i64 0, i64* %72 monotonic, align 8
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %59, i64 -1, i32 4, i32 0, i32 1
  %76 = load i32, i32* %67, align 4
  %77 = load i32, i32* %75, align 4
  store i32 %77, i32* %67, align 4
  store i32 %76, i32* %75, align 4
  %78 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %59, i64 -1, i32 4, i32 0, i32 2
  %79 = load i32, i32* %69, align 4
  %80 = load i32, i32* %78, align 4
  store i32 %80, i32* %69, align 4
  store i32 %79, i32* %78, align 4
  %81 = load i32, i32* %71, align 8
  %82 = and i32 %81, 2147483647
  %83 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %59, i64 -1, i32 4, i32 0, i32 3
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 2147483647
  %86 = and i32 %81, -2147483648
  %87 = or i32 %85, %86
  store i32 %87, i32* %71, align 8
  %88 = load i32, i32* %83, align 8
  %89 = and i32 %88, -2147483648
  %90 = or i32 %89, %82
  store i32 %90, i32* %83, align 8
  %91 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %59, i64 -1, i32 4, i32 0, i32 0
  %92 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %91, align 8
  %93 = icmp eq %"class.blink::LayoutBox"** %92, null
  br i1 %93, label %96, label %94, !prof !9

94:                                               ; preds = %57
  %95 = bitcast %"class.blink::LayoutBox"** %92 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %95) #8
  store %"class.blink::LayoutBox"** null, %"class.blink::LayoutBox"*** %91, align 8
  br label %96

96:                                               ; preds = %57, %94
  %97 = icmp eq %"class.blink::BaselineGroup"* %60, %0
  br i1 %97, label %98, label %57

98:                                               ; preds = %96, %45, %49, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.blink::BaselineGroup"* @_ZN3WTF6VectorIN5blink13BaselineGroupELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::BaselineGroup"*, %"class.blink::BaselineGroup"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::BaselineGroup", %"class.blink::BaselineGroup"* %24, i64 %25
  ret %"class.blink::BaselineGroup"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
