; ModuleID = '../../third_party/skia/src/core/SkTaskGroup.cpp'
source_filename = "../../third_party/skia/src/core/SkTaskGroup.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%class.SkTaskGroup = type { %"struct.std::__1::atomic", %class.SkExecutor* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkExecutor = type { i32 (...)** }
%"struct.SkTaskGroup::Enabler" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkExecutor* }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.std::__1::function.1" = type { %"class.std::__1::__function::__policy_func.4" }
%"class.std::__1::__function::__policy_func.4" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.5", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.5" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::__function::__default_alloc_func" = type { %class.anon }
%class.anon = type { %class.SkTaskGroup*, %"class.std::__1::function" }
%"class.std::__1::__function::__default_alloc_func.12" = type { %class.anon.6 }
%class.anon.6 = type { %"class.std::__1::function.1", i32, %class.SkTaskGroup* }

$_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIFvvEEEE3$_0S6_EEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIFvvEEEE3$_0S6_EEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIFvvEEEE3$_0S6_EEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1FvvEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1FvvEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8

@_ZN11SkTaskGroupC1ER10SkExecutor = hidden unnamed_addr alias void (%class.SkTaskGroup*, %class.SkExecutor*), void (%class.SkTaskGroup*, %class.SkExecutor*)* @_ZN11SkTaskGroupC2ER10SkExecutor
@_ZN11SkTaskGroup7EnablerC1Ei = hidden unnamed_addr alias void (%"struct.SkTaskGroup::Enabler"*, i32), void (%"struct.SkTaskGroup::Enabler"*, i32)* @_ZN11SkTaskGroup7EnablerC2Ei

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11SkTaskGroupC2ER10SkExecutor(%class.SkTaskGroup* nocapture, %class.SkExecutor* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkTaskGroup, %class.SkTaskGroup* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %class.SkTaskGroup, %class.SkTaskGroup* %0, i64 0, i32 1
  store %class.SkExecutor* %1, %class.SkExecutor** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkTaskGroup3addENSt3__18functionIFvvEEE(%class.SkTaskGroup*, %"class.std::__1::function"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.std::__1::function", align 8
  %4 = getelementptr inbounds %class.SkTaskGroup, %class.SkTaskGroup* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = atomicrmw add i32* %4, i32 1 monotonic
  %6 = getelementptr inbounds %class.SkTaskGroup, %class.SkTaskGroup* %0, i64 0, i32 1
  %7 = load %class.SkExecutor*, %class.SkExecutor** %6, align 8
  %8 = ptrtoint %class.SkTaskGroup* %0 to i64
  %9 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast [8 x i8]* %11 to <2 x i64>*
  %13 = load <2 x i64>, <2 x i64>* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %15 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %15, i64 0, i32 1
  %17 = load void (i8*)*, void (i8*)** %16, align 8
  %18 = icmp eq void (i8*)* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::__function::__policy_invoker"* %20 to i64*
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %14, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %21, align 8
  br label %22

22:                                               ; preds = %2, %19
  %23 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIS2_EEE3$_0S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %23, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIFvvEEEE3$_0S6_EEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %24, align 8
  %25 = tail call i8* @_Znwm(i64 40) #9, !noalias !2
  %26 = bitcast i8* %25 to i64*
  store i64 %8, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 8
  %28 = bitcast i8* %27 to i8**
  store i8* %10, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %25, i64 16
  %30 = bitcast i8* %29 to <2 x i64>*
  store <2 x i64> %13, <2 x i64>* %30, align 8
  %31 = getelementptr inbounds i8, i8* %25, i64 32
  %32 = bitcast i8* %31 to %"struct.std::__1::__function::__policy"**
  store %"struct.std::__1::__function::__policy"* %15, %"struct.std::__1::__function::__policy"** %32, align 8
  %33 = load void (i8*)*, void (i8*)** %16, align 8
  %34 = icmp eq void (i8*)* %33, null
  %35 = select i1 %34, %"struct.std::__1::__function::__policy"* %15, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_
  %36 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %36, align 8
  %37 = bitcast %class.SkExecutor* %7 to void (%class.SkExecutor*, %"class.std::__1::function"*)***
  %38 = load void (%class.SkExecutor*, %"class.std::__1::function"*)**, void (%class.SkExecutor*, %"class.std::__1::function"*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkExecutor*, %"class.std::__1::function"*)*, void (%class.SkExecutor*, %"class.std::__1::function"*)** %38, i64 2
  %40 = load void (%class.SkExecutor*, %"class.std::__1::function"*)*, void (%class.SkExecutor*, %"class.std::__1::function"*)** %39, align 8
  call void %40(%class.SkExecutor* %7, %"class.std::__1::function"* nonnull %3) #10
  %41 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %24, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %41, i64 0, i32 1
  %43 = load void (i8*)*, void (i8*)** %42, align 8
  %44 = icmp eq void (i8*)* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %22
  %46 = load i8*, i8** %36, align 8
  call void %43(i8* %46) #10
  br label %47

47:                                               ; preds = %22, %45
  %48 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %35, i64 0, i32 1
  %49 = load void (i8*)*, void (i8*)** %48, align 8
  %50 = icmp eq void (i8*)* %49, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %47
  call void %49(i8* %10) #10
  br label %52

52:                                               ; preds = %47, %51
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkTaskGroup5batchEiNSt3__18functionIFviEEE(%class.SkTaskGroup*, i32, %"class.std::__1::function.1"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.std::__1::function", align 8
  %5 = getelementptr inbounds %class.SkTaskGroup, %class.SkTaskGroup* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 %1 monotonic
  %7 = icmp sgt i32 %1, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkTaskGroup, %class.SkTaskGroup* %0, i64 0, i32 1
  %10 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %2, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::function.1", %"class.std::__1::function.1"* %2, i64 0, i32 0, i32 2
  %13 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %4, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast [8 x i8]* %11 to <2 x i64>*
  br label %18

17:                                               ; preds = %60, %3
  ret void

18:                                               ; preds = %60, %8
  %19 = phi i32 [ 0, %8 ], [ %61, %60 ]
  %20 = load %class.SkExecutor*, %class.SkExecutor** %9, align 8
  %21 = load i8*, i8** %10, align 8
  %22 = load <2 x i64>, <2 x i64>* %16, align 8
  %23 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %12, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %23, i64 0, i32 0
  %25 = load i8* (i8*)*, i8* (i8*)** %24, align 8
  %26 = icmp eq i8* (i8*)* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %18
  %28 = call i8* %25(i8* %21) #10
  br label %29

29:                                               ; preds = %18, %27
  %30 = phi i8* [ %21, %18 ], [ %28, %27 ]
  store void (%"union.std::__1::__function::__policy_storage"*)* @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1S2_EEEEvPKNS0_16__policy_storageE", void (%"union.std::__1::__function::__policy_storage"*)** %13, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1FvvEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %14, align 8
  %31 = call i8* @_Znwm(i64 48) #9, !noalias !7
  %32 = bitcast i8* %31 to i8**
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 8
  %34 = bitcast i8* %33 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %34, align 8
  %35 = getelementptr inbounds i8, i8* %31, i64 24
  %36 = bitcast i8* %35 to %"struct.std::__1::__function::__policy"**
  store %"struct.std::__1::__function::__policy"* %23, %"struct.std::__1::__function::__policy"** %36, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %23, i64 0, i32 1
  %38 = load void (i8*)*, void (i8*)** %37, align 8
  %39 = icmp eq void (i8*)* %38, null
  %40 = select i1 %39, %"struct.std::__1::__function::__policy"* %23, %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_
  %41 = getelementptr inbounds i8, i8* %31, i64 32
  %42 = bitcast i8* %41 to i32*
  store i32 %19, i32* %42, align 8
  %43 = getelementptr inbounds i8, i8* %31, i64 40
  %44 = bitcast i8* %43 to %class.SkTaskGroup**
  store %class.SkTaskGroup* %0, %class.SkTaskGroup** %44, align 8
  store i8* %31, i8** %15, align 8
  %45 = bitcast %class.SkExecutor* %20 to void (%class.SkExecutor*, %"class.std::__1::function"*)***
  %46 = load void (%class.SkExecutor*, %"class.std::__1::function"*)**, void (%class.SkExecutor*, %"class.std::__1::function"*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.SkExecutor*, %"class.std::__1::function"*)*, void (%class.SkExecutor*, %"class.std::__1::function"*)** %46, i64 2
  %48 = load void (%class.SkExecutor*, %"class.std::__1::function"*)*, void (%class.SkExecutor*, %"class.std::__1::function"*)** %47, align 8
  call void %48(%class.SkExecutor* %20, %"class.std::__1::function"* nonnull %4) #10
  %49 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %14, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %49, i64 0, i32 1
  %51 = load void (i8*)*, void (i8*)** %50, align 8
  %52 = icmp eq void (i8*)* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %29
  %54 = load i8*, i8** %15, align 8
  call void %51(i8* %54) #10
  br label %55

55:                                               ; preds = %29, %53
  %56 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %40, i64 0, i32 1
  %57 = load void (i8*)*, void (i8*)** %56, align 8
  %58 = icmp eq void (i8*)* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %55
  call void %57(i8* %30) #10
  br label %60

60:                                               ; preds = %55, %59
  %61 = add nuw nsw i32 %19, 1
  %62 = icmp eq i32 %61, %1
  br i1 %62, label %17, label %18
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK11SkTaskGroup4doneEv(%class.SkTaskGroup* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkTaskGroup, %class.SkTaskGroup* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 acquire, align 4
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkTaskGroup4waitEv(%class.SkTaskGroup* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.SkTaskGroup, %class.SkTaskGroup* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i32, i32* %2 acquire, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkTaskGroup, %class.SkTaskGroup* %0, i64 0, i32 1
  br label %7

7:                                                ; preds = %5, %7
  %8 = load %class.SkExecutor*, %class.SkExecutor** %6, align 8
  %9 = bitcast %class.SkExecutor* %8 to void (%class.SkExecutor*)***
  %10 = load void (%class.SkExecutor*)**, void (%class.SkExecutor*)*** %9, align 8
  %11 = getelementptr inbounds void (%class.SkExecutor*)*, void (%class.SkExecutor*)** %10, i64 3
  %12 = load void (%class.SkExecutor*)*, void (%class.SkExecutor*)** %11, align 8
  tail call void %12(%class.SkExecutor* %8) #10
  %13 = load atomic i32, i32* %2 acquire, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %7

15:                                               ; preds = %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11SkTaskGroup7EnablerC2Ei(%"struct.SkTaskGroup::Enabler"* nocapture, i32) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.SkTaskGroup::Enabler"* %0 to i64*
  store i64 0, i64* %3, align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %19, label %5

5:                                                ; preds = %2
  %6 = tail call %class.SkExecutor* @_ZN10SkExecutor18MakeLIFOThreadPoolEib(i32 %1, i1 zeroext true) #10
  %7 = ptrtoint %class.SkExecutor* %6 to i64
  %8 = getelementptr inbounds %"struct.SkTaskGroup::Enabler", %"struct.SkTaskGroup::Enabler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.SkExecutor*, %class.SkExecutor** %8, align 8
  store i64 %7, i64* %3, align 8
  %10 = icmp eq %class.SkExecutor* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %5
  %12 = bitcast %class.SkExecutor* %9 to void (%class.SkExecutor*)***
  %13 = load void (%class.SkExecutor*)**, void (%class.SkExecutor*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkExecutor*)*, void (%class.SkExecutor*)** %13, i64 1
  %15 = load void (%class.SkExecutor*)*, void (%class.SkExecutor*)** %14, align 8
  tail call void %15(%class.SkExecutor* nonnull %9) #10
  %16 = load %class.SkExecutor*, %class.SkExecutor** %8, align 8
  br label %17

17:                                               ; preds = %11, %5
  %18 = phi %class.SkExecutor* [ %16, %11 ], [ %6, %5 ]
  tail call void @_ZN10SkExecutor10SetDefaultEPS_(%class.SkExecutor* %18) #10
  br label %19

19:                                               ; preds = %2, %17
  ret void
}

declare %class.SkExecutor* @_ZN10SkExecutor18MakeLIFOThreadPoolEib(i32, i1 zeroext) local_unnamed_addr #3

declare void @_ZN10SkExecutor10SetDefaultEPS_(%class.SkExecutor*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #1 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #11
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #5 comdat {
  tail call void @abort() #12
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIS2_EEE3$_0S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #1 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func"**
  %3 = load %"class.std::__1::__function::__default_alloc_func"*, %"class.std::__1::__function::__default_alloc_func"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 0
  %5 = load %class.SkTaskGroup*, %class.SkTaskGroup** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %7 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func", %"class.std::__1::__function::__default_alloc_func"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void %7(%"union.std::__1::__function::__policy_storage"* %8) #10
  %9 = getelementptr inbounds %class.SkTaskGroup, %class.SkTaskGroup* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw add i32* %9, i32 -1 release
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIFvvEEEE3$_0S6_EEEEPvPKv"(i8* nocapture readonly) #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #9, !noalias !12
  %3 = bitcast i8* %0 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = bitcast i8* %2 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds i8, i8* %2, i64 8
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false) #10
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = getelementptr inbounds i8, i8* %0, i64 24
  %10 = bitcast i8* %9 to i64*
  %11 = bitcast i8* %8 to i64*
  %12 = load i64, i64* %10, align 8
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %2, i64 32
  %14 = bitcast i8* %13 to %"struct.std::__1::__function::__policy"**
  %15 = getelementptr inbounds i8, i8* %0, i64 32
  %16 = bitcast i8* %15 to %"struct.std::__1::__function::__policy"**
  %17 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %16, align 8
  store %"struct.std::__1::__function::__policy"* %17, %"struct.std::__1::__function::__policy"** %14, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %17, i64 0, i32 0
  %19 = load i8* (i8*)*, i8* (i8*)** %18, align 8
  %20 = icmp eq i8* (i8*)* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %1
  %22 = bitcast i8* %7 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i8* %19(i8* %23) #10
  %25 = bitcast i8* %6 to i8**
  store i8* %24, i8** %25, align 8
  br label %26

26:                                               ; preds = %1, %21
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIFvvEEEE3$_0S6_EEEEvPv"(i8*) #1 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 32
  %3 = bitcast i8* %2 to %"struct.std::__1::__function::__policy"**
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds i8, i8* %0, i64 8
  %10 = bitcast i8* %9 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void %6(i8* %11) #10
  br label %12

12:                                               ; preds = %1, %8
  tail call void @_ZdlPv(i8* %0) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvvEE11__call_implINS0_20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1S2_EEEEvPKNS0_16__policy_storageE"(%"union.std::__1::__function::__policy_storage"* nocapture readonly) #1 align 2 {
  %2 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.12"**
  %3 = load %"class.std::__1::__function::__default_alloc_func.12"*, %"class.std::__1::__function::__default_alloc_func.12"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.12", %"class.std::__1::__function::__default_alloc_func.12"* %3, i64 0, i32 0, i32 2
  %5 = load %class.SkTaskGroup*, %class.SkTaskGroup** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.12", %"class.std::__1::__function::__default_alloc_func.12"* %3, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.12", %"class.std::__1::__function::__default_alloc_func.12"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = load void (%"union.std::__1::__function::__policy_storage"*, i32)*, void (%"union.std::__1::__function::__policy_storage"*, i32)** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.12", %"class.std::__1::__function::__default_alloc_func.12"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void %9(%"union.std::__1::__function::__policy_storage"* %10, i32 %7) #10
  %11 = getelementptr inbounds %class.SkTaskGroup, %class.SkTaskGroup* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 release
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1FvvEEEEEPvPKv"(i8* nocapture readonly) #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 48) #9, !noalias !17
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 16, i1 false) #10
  %3 = getelementptr inbounds i8, i8* %2, i64 16
  %4 = getelementptr inbounds i8, i8* %0, i64 16
  %5 = bitcast i8* %4 to i64*
  %6 = bitcast i8* %3 to i64*
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 24
  %9 = bitcast i8* %8 to %"struct.std::__1::__function::__policy"**
  %10 = getelementptr inbounds i8, i8* %0, i64 24
  %11 = bitcast i8* %10 to %"struct.std::__1::__function::__policy"**
  %12 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %11, align 8
  store %"struct.std::__1::__function::__policy"* %12, %"struct.std::__1::__function::__policy"** %9, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %12, i64 0, i32 0
  %14 = load i8* (i8*)*, i8* (i8*)** %13, align 8
  %15 = icmp eq i8* (i8*)* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %1
  %17 = bitcast i8* %0 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i8* %14(i8* %18) #10
  %20 = bitcast i8* %2 to i8**
  store i8* %19, i8** %20, align 8
  br label %21

21:                                               ; preds = %1, %16
  %22 = getelementptr inbounds i8, i8* %2, i64 32
  %23 = getelementptr inbounds i8, i8* %0, i64 32
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false) #10
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1FvvEEEEEvPv"(i8*) #1 align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 24
  %3 = bitcast i8* %2 to %"struct.std::__1::__function::__policy"**
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = bitcast i8* %0 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #10
  br label %11

11:                                               ; preds = %1, %8
  tail call void @_ZdlPv(i8* %0) #9
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!5 = distinct !{!5, !6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIFvvEEEE3$_0S6_EEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIFvvEEEE3$_0S6_EEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!9 = distinct !{!9, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!10 = distinct !{!10, !11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!14 = distinct !{!14, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!15 = distinct !{!15, !16, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIFvvEEEE3$_0S6_EEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!16 = distinct !{!16, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkTaskGroup3addENS_8functionIFvvEEEE3$_0S6_EEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!20 = distinct !{!20, !21, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN11SkTaskGroup5batchEiNS_8functionIFviEEEE3$_1FvvEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
