; ModuleID = '../../third_party/blink/renderer/core/layout/ng/ng_length_utils.cc'
source_filename = "../../third_party/blink/renderer/core/layout/ng/ng_length_utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.1631, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%union.anon.1631 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.1632 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1632 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.1666 }
%class.scoped_refptr.1666 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.1667", [4 x i8], %"class.std::__1::unique_ptr.1669", i64, %"class.WTF::Vector.1673", %"class.WTF::Vector.1678", %"class.WTF::Vector.1684", %"class.WTF::Vector.1702", %class.scoped_refptr.1546, %"class.WTF::HashMap.1708", %"class.WTF::Vector.1713", %"class.WTF::Vector.1673", %"class.WTF::Vector.1718", %"class.WTF::HashMap.1723", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.1667" = type { %"class.base::RefCountedThreadSafe.1668" }
%"class.base::RefCountedThreadSafe.1668" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.std::__1::unique_ptr.1669" = type { %"class.std::__1::__compressed_pair.1670" }
%"class.std::__1::__compressed_pair.1670" = type { %"struct.std::__1::__compressed_pair_elem.1671" }
%"struct.std::__1::__compressed_pair_elem.1671" = type { i8* }
%"class.WTF::Vector.1678" = type { %"class.WTF::VectorBuffer.1679" }
%"class.WTF::VectorBuffer.1679" = type { %"class.WTF::VectorBufferBase.1680", [8 x i8] }
%"class.WTF::VectorBufferBase.1680" = type { %class.scoped_refptr.1681*, i32, i32 }
%class.scoped_refptr.1681 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.1684" = type { %"class.WTF::VectorBuffer.1685" }
%"class.WTF::VectorBuffer.1685" = type { %"class.WTF::VectorBufferBase.1686" }
%"class.WTF::VectorBufferBase.1686" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.1688", %"class.std::__1::unique_ptr.1694" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.1687 }
%class.scoped_refptr.1687 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.1688" = type { %"class.std::__1::__compressed_pair.1689" }
%"class.std::__1::__compressed_pair.1689" = type { %"struct.std::__1::__compressed_pair_elem.1690" }
%"struct.std::__1::__compressed_pair_elem.1690" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.1702" = type { %"class.WTF::VectorBuffer.1703" }
%"class.WTF::VectorBuffer.1703" = type { %"class.WTF::VectorBufferBase.1704" }
%"class.WTF::VectorBufferBase.1704" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.1705", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.1705" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1623", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1625", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1630 }
%"class.WTF::RefCounted.1623" = type { %"class.base::RefCounted.1624" }
%"class.base::RefCounted.1624" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1625" = type { %"class.absl::optional_internal::optional_data.1626" }
%"class.absl::optional_internal::optional_data.1626" = type { %"class.absl::optional_internal::optional_data_base.1627" }
%"class.absl::optional_internal::optional_data_base.1627" = type { %"class.absl::optional_internal::optional_data_dtor_base.1628" }
%"class.absl::optional_internal::optional_data_dtor_base.1628" = type { i8, %union.anon.1629 }
%union.anon.1629 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1630 = type { %"class.blink::SecurityOrigin"* }
%"class.WTF::HashMap.1708" = type { %"class.WTF::HashTable.1709" }
%"class.WTF::HashTable.1709" = type <{ %"struct.WTF::KeyValuePair.1712"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1712" = type opaque
%"class.WTF::Vector.1713" = type { %"class.WTF::VectorBuffer.1714" }
%"class.WTF::VectorBuffer.1714" = type { %"class.WTF::VectorBufferBase.1715" }
%"class.WTF::VectorBufferBase.1715" = type { %"class.mojo::ScopedHandleBase"*, i32, i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.1673" = type { %"class.WTF::VectorBuffer.1674" }
%"class.WTF::VectorBuffer.1674" = type { %"class.WTF::VectorBufferBase.1675", [16 x i8] }
%"class.WTF::VectorBufferBase.1675" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.1718" = type { %"class.WTF::VectorBuffer.1719" }
%"class.WTF::VectorBuffer.1719" = type { %"class.WTF::VectorBufferBase.1720" }
%"class.WTF::VectorBufferBase.1720" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type opaque
%"class.WTF::HashMap.1723" = type { %"class.WTF::HashTable.1724" }
%"class.WTF::HashTable.1724" = type <{ %"struct.WTF::KeyValuePair.1727"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1727" = type { i8**, %"class.std::__1::unique_ptr.1912" }
%"class.std::__1::unique_ptr.1912" = type { %"class.std::__1::__compressed_pair.1913" }
%"class.std::__1::__compressed_pair.1913" = type { %"struct.std::__1::__compressed_pair_elem.1914" }
%"struct.std::__1::__compressed_pair_elem.1914" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.1728" }
%"class.std::__1::unique_ptr.1728" = type { %"class.std::__1::__compressed_pair.1729" }
%"class.std::__1::__compressed_pair.1729" = type { %"struct.std::__1::__compressed_pair_elem.1730" }
%"struct.std::__1::__compressed_pair_elem.1730" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.1731, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.1792" }
%class.scoped_refptr.1731 = type { %"class.base::RefCountedData.1732"* }
%"class.base::RefCountedData.1732" = type { %"class.base::RefCountedThreadSafe.1733", %"class.WTF::Vector.1734" }
%"class.base::RefCountedThreadSafe.1733" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1734" = type { %"class.WTF::VectorBuffer.1735" }
%"class.WTF::VectorBuffer.1735" = type { %"class.WTF::VectorBufferBase.1736" }
%"class.WTF::VectorBufferBase.1736" = type { %class.scoped_refptr.1737*, i32, i32 }
%class.scoped_refptr.1737 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.1738", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.1740" }
%"class.WTF::RefCounted.1738" = type { %"class.base::RefCounted.1739" }
%"class.base::RefCounted.1739" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.1740" = type { %"class.std::__1::__compressed_pair.1741" }
%"class.std::__1::__compressed_pair.1741" = type { %"struct.std::__1::__compressed_pair_elem.1742" }
%"struct.std::__1::__compressed_pair_elem.1742" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1743, %"class.WTF::Vector.1744", %"class.std::__1::unique_ptr.1749", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1770, %"class.blink::Persistent.1771" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1886 }
%class.scoped_refptr.1886 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1887", %"class.WTF::Vector.630", %"class.WTF::Vector.1889", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1887" = type { %"class.base::RefCounted.1888" }
%"class.base::RefCounted.1888" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1889" = type { %"class.WTF::VectorBuffer.1890" }
%"class.WTF::VectorBuffer.1890" = type { %"class.WTF::VectorBufferBase.1891" }
%"class.WTF::VectorBufferBase.1891" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1892 }
%union.anon.1892 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1877" }
%"class.blink::Member.1877" = type { %"class.blink::MemberBase.1878" }
%"class.blink::MemberBase.1878" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1879" }
%"class.blink::Member.1879" = type { %"class.blink::MemberBase.1880" }
%"class.blink::MemberBase.1880" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1900 }
%class.scoped_refptr.1900 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1910" }
%"class.blink::Member.1910" = type { %"class.blink::MemberBase.1911" }
%"class.blink::MemberBase.1911" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1907" }
%"class.blink::MemberBase.1907" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1908" }
%"class.blink::MemberBase.1908" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1909" }
%"class.blink::MemberBase.1909" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1901", %"class.WTF::Vector.1901" }
%"class.WTF::Vector.1901" = type { %"class.WTF::VectorBuffer.1902" }
%"class.WTF::VectorBuffer.1902" = type { %"class.WTF::VectorBufferBase.1903" }
%"class.WTF::VectorBufferBase.1903" = type { %class.scoped_refptr.1900*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1881" }
%"class.WTF::Vector.1881" = type { %"class.WTF::VectorBuffer.1882" }
%"class.WTF::VectorBuffer.1882" = type { %"class.WTF::VectorBufferBase.1883" }
%"class.WTF::VectorBufferBase.1883" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1638", %"class.absl::optional.1638", %"class.absl::optional.1638" }
%"class.absl::optional.1638" = type { %"class.absl::optional_internal::optional_data.1639" }
%"class.absl::optional_internal::optional_data.1639" = type { %"class.absl::optional_internal::optional_data_base.1640" }
%"class.absl::optional_internal::optional_data_base.1640" = type { %"class.absl::optional_internal::optional_data_dtor_base.1641" }
%"class.absl::optional_internal::optional_data_dtor_base.1641" = type { i8, %union.anon.1642 }
%union.anon.1642 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1896" }
%"class.WTF::VectorBuffer.1896" = type { %"class.WTF::VectorBufferBase.1897", [32 x i8] }
%"class.WTF::VectorBufferBase.1897" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1743 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1744" = type { %"class.WTF::VectorBuffer.1745" }
%"class.WTF::VectorBuffer.1745" = type { %"class.WTF::VectorBufferBase.1746", [8 x i8] }
%"class.WTF::VectorBufferBase.1746" = type { %class.scoped_refptr.1743*, i32, i32 }
%"class.std::__1::unique_ptr.1749" = type { %"class.std::__1::__compressed_pair.1750" }
%"class.std::__1::__compressed_pair.1750" = type { %"struct.std::__1::__compressed_pair_elem.1751" }
%"struct.std::__1::__compressed_pair_elem.1751" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1752", %"class.absl::optional.1757", %"class.absl::optional.1762" }
%"class.absl::optional.1752" = type { %"class.absl::optional_internal::optional_data.1753" }
%"class.absl::optional_internal::optional_data.1753" = type { %"class.absl::optional_internal::optional_data_base.1754" }
%"class.absl::optional_internal::optional_data_base.1754" = type { %"class.absl::optional_internal::optional_data_dtor_base.1755" }
%"class.absl::optional_internal::optional_data_dtor_base.1755" = type { i8, %union.anon.1756 }
%union.anon.1756 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1757" = type { %"class.absl::optional_internal::optional_data.1758" }
%"class.absl::optional_internal::optional_data.1758" = type { %"class.absl::optional_internal::optional_data_base.1759" }
%"class.absl::optional_internal::optional_data_base.1759" = type { %"class.absl::optional_internal::optional_data_dtor_base.1760" }
%"class.absl::optional_internal::optional_data_dtor_base.1760" = type { i8, [3 x i8], %union.anon.1761 }
%union.anon.1761 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1762" = type { %"class.absl::optional_internal::optional_data.1763" }
%"class.absl::optional_internal::optional_data.1763" = type { %"class.absl::optional_internal::optional_data_base.1764" }
%"class.absl::optional_internal::optional_data_base.1764" = type { %"class.absl::optional_internal::optional_data_dtor_base.1765" }
%"class.absl::optional_internal::optional_data_dtor_base.1765" = type { i8, %union.anon.1766 }
%union.anon.1766 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1770 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1771" = type { %"class.blink::PersistentBase.1772" }
%"class.blink::PersistentBase.1772" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1775", %"struct.blink::PhysicalRect", %"class.blink::Member.1785" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.WTF::HashSet.1778"* }
%"class.WTF::HashSet.1778" = type { %"class.WTF::HashTable.1779" }
%"class.WTF::HashTable.1779" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1785" = type { %"class.blink::MemberBase.1786" }
%"class.blink::MemberBase.1786" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1792" = type { %"class.std::__1::__compressed_pair.1793" }
%"class.std::__1::__compressed_pair.1793" = type { %"struct.std::__1::__compressed_pair_elem.1794" }
%"struct.std::__1::__compressed_pair_elem.1794" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.1795", %"class.WTF::Vector.1808", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.1795" = type { %"class.WTF::VectorBuffer.1796" }
%"class.WTF::VectorBuffer.1796" = type { %"class.WTF::VectorBufferBase.1797", [320 x i8] }
%"class.WTF::VectorBufferBase.1797" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.1798", %"class.WTF::Vector.1798", %class.scoped_refptr.1803, i8, [7 x i8] }>
%"class.WTF::Vector.1798" = type { %"class.WTF::VectorBuffer.1799" }
%"class.WTF::VectorBuffer.1799" = type { %"class.WTF::VectorBufferBase.1800", [8 x i8] }
%"class.WTF::VectorBufferBase.1800" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1803 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.1804", %"class.WTF::Vector.1734", %"class.WTF::Vector.1734" }
%"class.WTF::RefCounted.1804" = type { %"class.base::RefCounted.1805" }
%"class.base::RefCounted.1805" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810", [288 x i8] }
%"class.WTF::VectorBufferBase.1810" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.1798", %"class.WTF::Vector.1798" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.1811 }
%class.scoped_refptr.1811 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%"class.absl::optional.1820" = type { %"class.absl::optional_internal::optional_data.1821" }
%"class.absl::optional_internal::optional_data.1821" = type { %"class.absl::optional_internal::optional_data_base.1822" }
%"class.absl::optional_internal::optional_data_base.1822" = type { %"class.absl::optional_internal::optional_data_dtor_base.1823" }
%"class.absl::optional_internal::optional_data_dtor_base.1823" = type { i8, %union.anon.1824 }
%union.anon.1824 = type { %"struct.blink::MinMaxSizes" }
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::NGTableNode" = type { %"class.blink::NGBlockNode.base", [7 x i8] }
%"class.blink::NGBlockNode.base" = type { %"class.blink::NGLayoutInputNode.base" }
%"class.absl::optional_internal::optional_data_dtor_base.1830" = type { i8, %union.anon.1831 }
%union.anon.1831 = type { %"struct.blink::LogicalSize" }
%class.anon.1832 = type { %"class.blink::NGConstraintSpace"*, %"struct.blink::NGBoxStrut"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutUnit"*, %"struct.blink::LogicalSize"*, %"struct.blink::MinMaxSizes"*, i32* }
%"class.blink::NGLayoutInputNode" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.absl::optional.1633" = type { %"class.absl::optional_internal::optional_data.1634" }
%"class.absl::optional_internal::optional_data.1634" = type { %"class.absl::optional_internal::optional_data_base.1635" }
%"class.absl::optional_internal::optional_data_base.1635" = type { %"class.absl::optional_internal::optional_data_dtor_base.1636" }
%"class.absl::optional_internal::optional_data_dtor_base.1636" = type { i8, %union.anon.1637 }
%union.anon.1637 = type { %"class.blink::LayoutUnit" }
%"class.blink::NGTableBorders" = type <{ %"class.WTF::RefCounted.1837", [4 x i8], %"class.WTF::Vector.1839", %"class.WTF::Vector.1844", i32, %"class.absl::optional.1849", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1837" = type { %"class.base::RefCounted.1838" }
%"class.base::RefCounted.1838" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1839" = type { %"class.WTF::VectorBuffer.1840" }
%"class.WTF::VectorBuffer.1840" = type { %"class.WTF::VectorBufferBase.1841" }
%"class.WTF::VectorBufferBase.1841" = type { %"struct.blink::NGTableBorders::Edge"*, i32, i32 }
%"struct.blink::NGTableBorders::Edge" = type { %class.scoped_refptr, i32, i32 }
%"class.WTF::Vector.1844" = type { %"class.WTF::VectorBuffer.1845" }
%"class.WTF::VectorBuffer.1845" = type { %"class.WTF::VectorBufferBase.1846" }
%"class.WTF::VectorBufferBase.1846" = type { %"struct.blink::NGTableBorders::Section"*, i32, i32 }
%"struct.blink::NGTableBorders::Section" = type { i32, i32 }
%"class.absl::optional.1849" = type { %"class.absl::optional_internal::optional_data.1850" }
%"class.absl::optional_internal::optional_data.1850" = type { %"class.absl::optional_internal::optional_data_base.1851" }
%"class.absl::optional_internal::optional_data_base.1851" = type { %"class.absl::optional_internal::optional_data_dtor_base.1852" }
%"class.absl::optional_internal::optional_data_dtor_base.1852" = type { i8, %union.anon.1853 }
%union.anon.1853 = type { %"struct.blink::NGBoxStrut" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1941", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.1959" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1867", %"class.blink::Member.1869", %"class.blink::Member.1871", %"class.blink::Member.1873", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1869" = type { %"class.blink::MemberBase.1870" }
%"class.blink::MemberBase.1870" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1871" = type { %"class.blink::MemberBase.1872" }
%"class.blink::MemberBase.1872" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1873" = type { %"class.blink::MemberBase.1874" }
%"class.blink::MemberBase.1874" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1939", %"class.blink::Member.1859", %"class.blink::Member.1859", i8, [7 x i8] }>
%"class.blink::Member.1939" = type { %"class.blink::MemberBase.1940" }
%"class.blink::MemberBase.1940" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1859" = type { %"class.blink::MemberBase.1860" }
%"class.blink::MemberBase.1860" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1865", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1875", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1865" = type { %"class.blink::MemberBase.1866" }
%"class.blink::MemberBase.1866" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1875" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1876", { i64, i64 } }
%"class.blink::WeakMember.1876" = type { %"class.blink::MemberBase.1860" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1865", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.1941" = type { %"class.std::__1::__compressed_pair.1942" }
%"class.std::__1::__compressed_pair.1942" = type { %"struct.std::__1::__compressed_pair_elem.1943" }
%"struct.std::__1::__compressed_pair_elem.1943" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1944", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1949" }
%"class.WTF::HashMap.1944" = type { %"class.WTF::HashTable.1945" }
%"class.WTF::HashTable.1945" = type <{ %"struct.WTF::KeyValuePair.1948"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1948" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.WTF::Vector.1949" = type { %"class.WTF::VectorBuffer.1950" }
%"class.WTF::VectorBuffer.1950" = type { %"class.WTF::VectorBufferBase.1951" }
%"class.WTF::VectorBufferBase.1951" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1957" }
%"class.blink::Member.1957" = type { %"class.blink::MemberBase.1958" }
%"class.blink::MemberBase.1958" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1957" }
%"class.absl::optional.1959" = type { %"class.absl::optional_internal::optional_data.1960" }
%"class.absl::optional_internal::optional_data.1960" = type { %"class.absl::optional_internal::optional_data_base.1961" }
%"class.absl::optional_internal::optional_data_base.1961" = type { %"class.absl::optional_internal::optional_data_dtor_base.1962" }
%"class.absl::optional_internal::optional_data_dtor_base.1962" = type { i8, %union.anon.1963 }
%union.anon.1963 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"struct.blink::NGFragmentGeometry" = type { %"struct.blink::LogicalSize", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"class.WTF::VectorBuffer.302" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.473" = type { i8 }

$_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE = comdat any

$_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv = comdat any

$_ZNK5blink11NGBlockNode24IsQuirkyAndFillsViewportEv = comdat any

$_ZNK5blink17NGLayoutInputNode31ShouldApplyBlockSizeContainmentEv = comdat any

$_ZNK5blink17NGLayoutInputNode32ShouldApplyInlineSizeContainmentEv = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

@_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_replaced_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase27is_layout_ng_table_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink10html_names8kBodyTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink24InlineLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthE(%"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::Length"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %28 [
    i8 8, label %5
    i8 1, label %5
    i8 6, label %23
  ]

5:                                                ; preds = %2, %2
  %6 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 26
  %9 = and i32 %8, 3
  switch i32 %9, label %10 [
    i32 0, label %11
    i32 1, label %20
    i32 2, label %14
    i32 3, label %15
  ]

10:                                               ; preds = %5
  unreachable

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 8
  br label %20

14:                                               ; preds = %5
  br label %20

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %17 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %16 to i32**
  %18 = load i32*, i32** %17, align 8
  %19 = load i32, i32* %18, align 8
  br label %20

20:                                               ; preds = %5, %11, %14, %15
  %21 = phi i32 [ %19, %15 ], [ -64, %14 ], [ %13, %11 ], [ 0, %5 ]
  %22 = icmp eq i32 %21, -64
  br label %28

23:                                               ; preds = %2
  %24 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  %27 = icmp eq i32 %26, -64
  br label %28

28:                                               ; preds = %2, %23, %20
  %29 = phi i1 [ %22, %20 ], [ %27, %23 ], [ false, %2 ]
  ret i1 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink23BlockLengthUnresolvableERKNS_17NGConstraintSpaceERKNS_6LengthEPKNS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::Length"* nocapture readonly dereferenceable(8), %"class.blink::LayoutUnit"* readonly) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 1
  switch i8 %5, label %34 [
    i8 0, label %35
    i8 3, label %35
    i8 4, label %35
    i8 5, label %35
    i8 7, label %35
    i8 12, label %35
    i8 8, label %6
    i8 1, label %6
    i8 6, label %29
  ]

6:                                                ; preds = %3, %3
  %7 = icmp eq %"class.blink::LayoutUnit"* %2, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  br label %26

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = lshr i32 %13, 28
  %15 = and i32 %14, 3
  switch i32 %15, label %16 [
    i32 0, label %17
    i32 1, label %26
    i32 2, label %20
    i32 3, label %21
  ]

16:                                               ; preds = %11
  unreachable

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %19 = load i32, i32* %18, align 4
  br label %26

20:                                               ; preds = %11
  br label %26

21:                                               ; preds = %11
  %22 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %23 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %23, i64 0, i32 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 4
  br label %26

26:                                               ; preds = %21, %20, %17, %11, %8
  %27 = phi i32 [ %10, %8 ], [ %25, %21 ], [ -64, %20 ], [ %19, %17 ], [ 0, %11 ]
  %28 = icmp eq i32 %27, -64
  br label %35

29:                                               ; preds = %3
  %30 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = and i64 %31, -4294967296
  %33 = icmp eq i64 %32, -274877906944
  br label %35

34:                                               ; preds = %3
  br label %35

35:                                               ; preds = %3, %3, %3, %3, %3, %3, %34, %29, %26
  %36 = phi i1 [ %28, %26 ], [ %33, %29 ], [ true, %3 ], [ true, %3 ], [ true, %3 ], [ true, %3 ], [ true, %3 ], [ true, %3 ], [ false, %34 ]
  ret i1 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), %"class.absl::optional.1820"* nocapture readonly dereferenceable(12), %"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #2 {
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %192 [
    i8 6, label %10
    i8 1, label %51
    i8 2, label %51
    i8 8, label %51
    i8 3, label %120
    i8 4, label %120
    i8 5, label %120
    i8 7, label %120
  ]

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp sgt i32 %5, -1
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %13, i32 %5) #13
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !2
  %20 = icmp sgt i32 %19, 0
  %21 = select i1 %20, i32 %19, i32 0
  %22 = tail call { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %1)
  %23 = extractvalue { i64, i64 } %22, 0
  %24 = trunc i64 %23 to i32
  %25 = lshr i64 %23, 32
  %26 = trunc i64 %25 to i32
  %27 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 1, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %28, i32 %30) #13
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35
  %37 = icmp slt i32 %26, 0
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %26) #13
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !2
  %43 = icmp sgt i32 %42, -1
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %21, i32 %42) #13
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !2
  %49 = icmp slt i32 %36, %48
  %50 = select i1 %49, i32 %48, i32 %36
  br label %203

51:                                               ; preds = %6, %6, %6
  %52 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = lshr i32 %53, 26
  %55 = and i32 %54, 3
  switch i32 %55, label %56 [
    i32 0, label %57
    i32 1, label %66
    i32 2, label %60
    i32 3, label %61
  ]

56:                                               ; preds = %51
  unreachable

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %59 = load i32, i32* %58, align 8
  br label %66

60:                                               ; preds = %51
  br label %66

61:                                               ; preds = %51
  %62 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %63 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %62 to i32**
  %64 = load i32*, i32** %63, align 8
  %65 = load i32, i32* %64, align 8
  br label %66

66:                                               ; preds = %51, %57, %60, %61
  %67 = phi i32 [ %65, %61 ], [ -64, %60 ], [ %59, %57 ], [ 0, %51 ]
  %68 = icmp eq i8 %9, 2
  br i1 %68, label %69, label %90, !prof !3

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 3
  %71 = load i8, i8* %70, align 2, !range !4
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.blink::Length"* %4 to float*
  %75 = load float, float* %74, align 4
  br label %80

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = sitofp i32 %78 to float
  br label %80

80:                                               ; preds = %76, %73
  %81 = phi float [ %75, %73 ], [ %79, %76 ]
  %82 = fmul float %81, 6.400000e+01
  %83 = fcmp ult float %82, 0xC1E0000000000000
  %84 = fcmp ugt float %82, 0x41DFFFFFE0000000
  %85 = fcmp ogt float %82, 0xC1E0000000000000
  %86 = select i1 %85, float %82, float 0xC1E0000000000000
  %87 = fptosi float %86 to i32
  %88 = select i1 %83, i32 0, i32 2147483647
  %89 = select i1 %84, i32 %88, i32 %87
  br label %92

90:                                               ; preds = %66
  %91 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %4, i32 %67) #13
  br label %92

92:                                               ; preds = %80, %90
  %93 = phi i32 [ %89, %80 ], [ %91, %90 ]
  %94 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 5, i32 0, i32 0
  %95 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %95, i64 0, i32 11
  %97 = load i8, i8* %96, align 4
  %98 = and i8 %97, 2
  %99 = icmp eq i8 %98, 0
  %100 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 0, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 1, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = icmp slt i32 %103, 0
  %105 = select i1 %104, i32 -2147483648, i32 2147483647
  %106 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %101, i32 %103) #13
  %107 = extractvalue { i32, i1 } %106, 1
  %108 = extractvalue { i32, i1 } %106, 0
  %109 = select i1 %107, i32 %105, i32 %108
  br i1 %99, label %110, label %113

110:                                              ; preds = %92
  %111 = icmp slt i32 %109, %93
  %112 = select i1 %111, i32 %93, i32 %109
  br label %203

113:                                              ; preds = %92
  %114 = icmp slt i32 %109, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %93, i32 %109) #13
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !2
  br label %203

120:                                              ; preds = %6, %6, %6, %6
  %121 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = trunc i64 %122 to i32
  switch i8 %9, label %142 [
    i8 3, label %126
    i8 5, label %126
    i8 7, label %124
    i8 4, label %134
  ]

124:                                              ; preds = %120
  %125 = icmp eq i32 %123, -64
  br i1 %125, label %126, label %142

126:                                              ; preds = %120, %120, %124
  %127 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i8, i8* %127, align 4, !range !4
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %131, !prof !2

130:                                              ; preds = %126
  tail call void @llvm.trap() #13
  unreachable

131:                                              ; preds = %126
  %132 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  br label %203

134:                                              ; preds = %120
  %135 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i8, i8* %135, align 4, !range !4
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %139, !prof !2

138:                                              ; preds = %134
  tail call void @llvm.trap() #13
  unreachable

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %141 = load i32, i32* %140, align 4
  br label %203

142:                                              ; preds = %120, %124
  %143 = icmp sgt i32 %5, -1
  %144 = select i1 %143, i32 -2147483648, i32 2147483647
  %145 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %123, i32 %5) #13
  %146 = extractvalue { i32, i1 } %145, 1
  %147 = extractvalue { i32, i1 } %145, 0
  %148 = select i1 %146, i32 %144, i32 %147, !prof !2
  %149 = icmp sgt i32 %148, 0
  %150 = select i1 %149, i32 %148, i32 0
  %151 = tail call { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %1)
  %152 = extractvalue { i64, i64 } %151, 0
  %153 = trunc i64 %152 to i32
  %154 = lshr i64 %152, 32
  %155 = trunc i64 %154 to i32
  %156 = icmp slt i32 %155, 0
  %157 = select i1 %156, i32 -2147483648, i32 2147483647
  %158 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %153, i32 %155) #13
  %159 = extractvalue { i32, i1 } %158, 1
  %160 = extractvalue { i32, i1 } %158, 0
  %161 = select i1 %159, i32 %157, i32 %160, !prof !2
  %162 = icmp sgt i32 %161, -1
  %163 = select i1 %162, i32 -2147483648, i32 2147483647
  %164 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %150, i32 %161) #13
  %165 = extractvalue { i32, i1 } %164, 1
  %166 = extractvalue { i32, i1 } %164, 0
  %167 = select i1 %165, i32 %163, i32 %166, !prof !2
  %168 = icmp sgt i32 %167, 0
  %169 = select i1 %168, i32 %167, i32 0
  %170 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8, i8* %170, align 4, !range !4
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %173, label %174, !prof !2

173:                                              ; preds = %142
  tail call void @llvm.trap() #13
  unreachable

174:                                              ; preds = %142
  %175 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %176 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %176)
  store i32 %169, i32* %7, align 4
  %177 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %178 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %175, i64 0, i32 0
  %179 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %175, i64 0, i32 0, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp slt i32 %180, %169
  %182 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %183 = select i1 %181, %"class.blink::LayoutUnit"* %182, %"class.blink::LayoutUnit"* %178
  %184 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %183, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  %186 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %177, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = icmp slt i32 %185, %187
  %189 = select i1 %188, %"class.blink::LayoutUnit"* %183, %"class.blink::LayoutUnit"* %177
  %190 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %189, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %176)
  br label %203

192:                                              ; preds = %6
  %193 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 1, i32 0
  %196 = load i32, i32* %195, align 4
  %197 = icmp slt i32 %196, 0
  %198 = select i1 %197, i32 -2147483648, i32 2147483647
  %199 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %194, i32 %196) #13
  %200 = extractvalue { i32, i1 } %199, 1
  %201 = extractvalue { i32, i1 } %199, 0
  %202 = select i1 %200, i32 %198, i32 %201, !prof !2
  br label %203

203:                                              ; preds = %131, %174, %139, %110, %113, %192, %10
  %204 = phi i32 [ %133, %131 ], [ %191, %174 ], [ %141, %139 ], [ %112, %110 ], [ %119, %113 ], [ %202, %192 ], [ %50, %10 ]
  ret i32 %204
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %4 = bitcast [20 x i8]* %3 to i160*
  %5 = load i160, i160* %4, align 8
  %6 = and i160 %5, 44601490397061246283071436545296723011960832
  %7 = icmp eq i160 %6, 0
  br i1 %7, label %92, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 512
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %92

13:                                               ; preds = %8
  %14 = and i32 %10, 2048
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %13
  %17 = lshr i32 %10, 26
  %18 = and i32 %17, 3
  switch i32 %18, label %19 [
    i32 0, label %20
    i32 1, label %54
    i32 2, label %23
    i32 3, label %24
  ]

19:                                               ; preds = %16
  unreachable

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 8
  br label %54

23:                                               ; preds = %16
  br label %54

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %26 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = load i32, i32* %27, align 8
  br label %54

29:                                               ; preds = %13
  %30 = lshr i32 %10, 28
  %31 = and i32 %30, 3
  switch i32 %31, label %32 [
    i32 0, label %33
    i32 1, label %54
    i32 2, label %54
    i32 3, label %35
  ]

32:                                               ; preds = %29
  unreachable

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %39

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %37 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %36, align 8
  %38 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %37, i64 0, i32 0, i32 1, i32 0
  br label %39

39:                                               ; preds = %35, %33
  %40 = phi i32* [ %38, %35 ], [ %34, %33 ]
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, -64
  br i1 %42, label %54, label %43

43:                                               ; preds = %39
  switch i32 %31, label %44 [
    i32 0, label %45
    i32 1, label %54
    i32 2, label %48
    i32 3, label %49
  ]

44:                                               ; preds = %43
  unreachable

45:                                               ; preds = %43
  %46 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %47 = load i32, i32* %46, align 4
  br label %54

48:                                               ; preds = %43
  br label %54

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %51 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %50, align 8
  %52 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %51, i64 0, i32 0, i32 1, i32 0
  %53 = load i32, i32* %52, align 4
  br label %54

54:                                               ; preds = %16, %20, %23, %24, %29, %29, %39, %43, %45, %48, %49
  %55 = phi i32 [ %28, %24 ], [ -64, %23 ], [ %22, %20 ], [ 0, %16 ], [ %53, %49 ], [ -64, %48 ], [ %47, %45 ], [ 0, %43 ], [ 0, %39 ], [ 0, %29 ], [ 0, %29 ]
  %56 = tail call { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %55)
  %57 = extractvalue { i64, i64 } %56, 0
  %58 = trunc i64 %57 to i32
  %59 = lshr i64 %57, 32
  %60 = extractvalue { i64, i64 } %56, 1
  %61 = load i160, i160* %4, align 8
  %62 = lshr i160 %61, 102
  %63 = trunc i160 %62 to i8
  %64 = and i8 %63, 3
  switch i8 %64, label %78 [
    i8 0, label %65
    i8 1, label %71
    i8 3, label %71
    i8 2, label %74
  ]

65:                                               ; preds = %54
  %66 = lshr i64 %60, 32
  %67 = trunc i64 %66 to i32
  %68 = and i64 %57, 4294967295
  %69 = shl i64 %60, 32
  %70 = or i64 %69, %68
  br label %79

71:                                               ; preds = %54, %54
  %72 = and i64 %60, -4294967296
  %73 = or i64 %72, %59
  br label %79

74:                                               ; preds = %54
  %75 = lshr i64 %60, 32
  %76 = and i64 %57, -4294967296
  %77 = or i64 %76, %75
  br label %79

78:                                               ; preds = %54
  unreachable

79:                                               ; preds = %65, %71, %74
  %80 = phi i64 [ %77, %74 ], [ %73, %71 ], [ %70, %65 ]
  %81 = phi i64 [ %60, %74 ], [ %60, %71 ], [ %59, %65 ]
  %82 = phi i32 [ %58, %74 ], [ %58, %71 ], [ %67, %65 ]
  %83 = trunc i64 %81 to i32
  %84 = and i160 %61, 41538374868278621028243970633760768
  %85 = icmp ne i160 %84, 0
  %86 = select i1 %85, i32 %82, i32 %83
  %87 = select i1 %85, i32 %83, i32 %82
  %88 = zext i32 %86 to i64
  %89 = shl nuw i64 %88, 32
  %90 = zext i32 %87 to i64
  %91 = or i64 %89, %90
  br label %92

92:                                               ; preds = %8, %2, %79
  %93 = phi i64 [ %80, %79 ], [ 0, %8 ], [ 0, %2 ]
  %94 = phi i64 [ %91, %79 ], [ 0, %8 ], [ 0, %2 ]
  %95 = insertvalue { i64, i64 } undef, i64 %94, 0
  %96 = insertvalue { i64, i64 } %95, i64 %93, 1
  ret { i64, i64 } %96
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), %"class.blink::Length"* dereferenceable(8), i32, i32, %"class.blink::LayoutUnit"* readonly) local_unnamed_addr #2 {
  %8 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %126 [
    i8 6, label %10
    i8 1, label %52
    i8 2, label %52
    i8 8, label %52
    i8 3, label %137
    i8 4, label %137
    i8 5, label %137
    i8 7, label %137
  ]

10:                                               ; preds = %7
  %11 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = lshr i64 %12, 32
  %14 = trunc i64 %13 to i32
  %15 = icmp sgt i32 %5, -1
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %5) #13
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !2
  %21 = icmp sgt i32 %20, 0
  %22 = select i1 %21, i32 %20, i32 0
  %23 = tail call { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %1)
  %24 = extractvalue { i64, i64 } %23, 1
  %25 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  %30 = select i1 %29, i32 -2147483648, i32 2147483647
  %31 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %28) #13
  %32 = extractvalue { i32, i1 } %31, 1
  %33 = extractvalue { i32, i1 } %31, 0
  %34 = select i1 %32, i32 %30, i32 %33
  %35 = trunc i64 %24 to i32
  %36 = lshr i64 %24, 32
  %37 = trunc i64 %36 to i32
  %38 = icmp slt i32 %37, 0
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %35, i32 %37) #13
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !2
  %44 = icmp sgt i32 %43, -1
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %43) #13
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !2
  %50 = icmp slt i32 %34, %49
  %51 = select i1 %50, i32 %49, i32 %34
  br label %137

52:                                               ; preds = %7, %7, %7
  %53 = icmp eq %"class.blink::LayoutUnit"* %6, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %6, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br label %72

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 28
  %61 = and i32 %60, 3
  switch i32 %61, label %62 [
    i32 0, label %63
    i32 1, label %72
    i32 2, label %66
    i32 3, label %67
  ]

62:                                               ; preds = %57
  unreachable

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %65 = load i32, i32* %64, align 4
  br label %72

66:                                               ; preds = %57
  br label %72

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %69 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %68, align 8
  %70 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %69, i64 0, i32 0, i32 1, i32 0
  %71 = load i32, i32* %70, align 4
  br label %72

72:                                               ; preds = %67, %66, %63, %57, %54
  %73 = phi i32 [ %56, %54 ], [ %71, %67 ], [ -64, %66 ], [ %65, %63 ], [ 0, %57 ]
  %74 = icmp eq i8 %9, 2
  br i1 %74, label %75, label %96, !prof !3

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 3
  %77 = load i8, i8* %76, align 2, !range !4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %75
  %80 = bitcast %"class.blink::Length"* %3 to float*
  %81 = load float, float* %80, align 4
  br label %86

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = sitofp i32 %84 to float
  br label %86

86:                                               ; preds = %82, %79
  %87 = phi float [ %81, %79 ], [ %85, %82 ]
  %88 = fmul float %87, 6.400000e+01
  %89 = fcmp ult float %88, 0xC1E0000000000000
  %90 = fcmp ugt float %88, 0x41DFFFFFE0000000
  %91 = fcmp ogt float %88, 0xC1E0000000000000
  %92 = select i1 %91, float %88, float 0xC1E0000000000000
  %93 = fptosi float %92 to i32
  %94 = select i1 %89, i32 0, i32 2147483647
  %95 = select i1 %90, i32 %94, i32 %93
  br label %98

96:                                               ; preds = %72
  %97 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %3, i32 %73) #13
  br label %98

98:                                               ; preds = %86, %96
  %99 = phi i32 [ %95, %86 ], [ %97, %96 ]
  %100 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 5, i32 0, i32 0
  %101 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %101, i64 0, i32 11
  %103 = load i8, i8* %102, align 4
  %104 = and i8 %103, 2
  %105 = icmp eq i8 %104, 0
  %106 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp slt i32 %109, 0
  %111 = select i1 %110, i32 -2147483648, i32 2147483647
  %112 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %107, i32 %109) #13
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114
  br i1 %105, label %116, label %119

116:                                              ; preds = %98
  %117 = icmp slt i32 %115, %99
  %118 = select i1 %117, i32 %99, i32 %115
  br label %137

119:                                              ; preds = %98
  %120 = icmp slt i32 %115, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %99, i32 %115) #13
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !2
  br label %137

126:                                              ; preds = %7
  %127 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = icmp slt i32 %130, 0
  %132 = select i1 %131, i32 -2147483648, i32 2147483647
  %133 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %128, i32 %130) #13
  %134 = extractvalue { i32, i1 } %133, 1
  %135 = extractvalue { i32, i1 } %133, 0
  %136 = select i1 %134, i32 %132, i32 %135, !prof !2
  br label %137

137:                                              ; preds = %7, %7, %7, %7, %116, %119, %126, %10
  %138 = phi i32 [ %118, %116 ], [ %125, %119 ], [ %136, %126 ], [ %51, %10 ], [ %4, %7 ], [ %4, %7 ], [ %4, %7 ], [ %4, %7 ]
  ret i32 %138
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutEdNS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), double, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %4
  %7 = sitofp i32 %3 to double
  %8 = fmul double %7, 1.562500e-02
  %9 = fmul double %8, %1
  %10 = fmul double %9, 6.400000e+01
  %11 = tail call double @llvm.round.f64(double %10) #13
  %12 = fcmp ult double %11, 0xC1E0000000000000
  %13 = fcmp ugt double %11, 0x41DFFFFFFFC00000
  %14 = fcmp ogt double %11, 0xC1E0000000000000
  %15 = select i1 %14, double %11, double 0xC1E0000000000000
  %16 = fptosi double %15 to i32
  %17 = select i1 %12, i32 0, i32 2147483647
  %18 = select i1 %13, i32 %17, i32 %16
  br label %64

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 2, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 3, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, 0
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %23) #13
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !2
  %30 = icmp sgt i32 %29, -1
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %29) #13
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !2
  %36 = sitofp i32 %35 to double
  %37 = fmul double %36, 1.562500e-02
  %38 = fmul double %37, %1
  %39 = fmul double %38, 6.400000e+01
  %40 = tail call double @llvm.round.f64(double %39) #13
  %41 = fcmp ult double %40, 0xC1E0000000000000
  %42 = fcmp ugt double %40, 0x41DFFFFFFFC00000
  %43 = fcmp ogt double %40, 0xC1E0000000000000
  %44 = select i1 %43, double %40, double 0xC1E0000000000000
  %45 = fptosi double %44 to i32
  %46 = select i1 %41, i32 0, i32 2147483647
  %47 = select i1 %42, i32 %46, i32 %45
  %48 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 1, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %51) #13
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !2
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %57) #13
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !2
  br label %64

64:                                               ; preds = %19, %6
  %65 = phi i32 [ %18, %6 ], [ %63, %19 ]
  ret i32 %65
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), %"struct.blink::LogicalSize"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %1, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %1, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %3 to i64
  %12 = sext i32 %8 to i64
  %13 = mul nsw i64 %12, %11
  %14 = sext i32 %10 to i64
  %15 = sdiv i64 %13, %14
  %16 = tail call i1 @llvm.is.constant.i64(i64 %15) #13
  br i1 %16, label %24, label %17

17:                                               ; preds = %6
  %18 = icmp slt i64 %15, 0
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = add nsw i64 %15, 2147483648
  %21 = icmp ult i64 %20, 4294967296
  %22 = trunc i64 %15 to i32
  %23 = select i1 %21, i32 %22, i32 %19, !prof !3
  br label %88

24:                                               ; preds = %6
  %25 = icmp sgt i64 %15, 2147483647
  br i1 %25, label %88, label %26

26:                                               ; preds = %24
  %27 = icmp sgt i64 %15, -2147483648
  %28 = select i1 %27, i64 %15, i64 -2147483648
  %29 = trunc i64 %28 to i32
  br label %88

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 2, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 3, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %34) #13
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = icmp sgt i32 %40, -1
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %40) #13
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !2
  %47 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %1, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %1, i64 0, i32 1, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %46 to i64
  %52 = sext i32 %48 to i64
  %53 = mul nsw i64 %51, %52
  %54 = sext i32 %50 to i64
  %55 = sdiv i64 %53, %54
  %56 = tail call i1 @llvm.is.constant.i64(i64 %55) #13
  br i1 %56, label %64, label %57

57:                                               ; preds = %30
  %58 = icmp slt i64 %55, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = add nsw i64 %55, 2147483648
  %61 = icmp ult i64 %60, 4294967296
  %62 = trunc i64 %55 to i32
  %63 = select i1 %61, i32 %62, i32 %59, !prof !3
  br label %70

64:                                               ; preds = %30
  %65 = icmp sgt i64 %55, 2147483647
  br i1 %65, label %70, label %66

66:                                               ; preds = %64
  %67 = icmp sgt i64 %55, -2147483648
  %68 = select i1 %67, i64 %55, i64 -2147483648
  %69 = trunc i64 %68 to i32
  br label %70

70:                                               ; preds = %57, %64, %66
  %71 = phi i32 [ %63, %57 ], [ %69, %66 ], [ 2147483647, %64 ]
  %72 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 1, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, 0
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 %75) #13
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !2
  %82 = icmp slt i32 %81, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %71, i32 %81) #13
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !2
  br label %88

88:                                               ; preds = %26, %24, %17, %70
  %89 = phi i32 [ %87, %70 ], [ %23, %17 ], [ %29, %26 ], [ 2147483647, %24 ]
  ret i32 %89
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutEdNS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), double, i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %19

6:                                                ; preds = %4
  %7 = sitofp i32 %3 to double
  %8 = fmul double %7, 1.562500e-02
  %9 = fmul double %8, %1
  %10 = fmul double %9, 6.400000e+01
  %11 = tail call double @llvm.round.f64(double %10) #13
  %12 = fcmp ult double %11, 0xC1E0000000000000
  %13 = fcmp ugt double %11, 0x41DFFFFFFFC00000
  %14 = fcmp ogt double %11, 0xC1E0000000000000
  %15 = select i1 %14, double %11, double 0xC1E0000000000000
  %16 = fptosi double %15 to i32
  %17 = select i1 %12, i32 0, i32 2147483647
  %18 = select i1 %13, i32 %17, i32 %16
  br label %64

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, 0
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %23) #13
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !2
  %30 = icmp sgt i32 %29, -1
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %29) #13
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !2
  %36 = sitofp i32 %35 to double
  %37 = fmul double %36, 1.562500e-02
  %38 = fmul double %37, %1
  %39 = fmul double %38, 6.400000e+01
  %40 = tail call double @llvm.round.f64(double %39) #13
  %41 = fcmp ult double %40, 0xC1E0000000000000
  %42 = fcmp ugt double %40, 0x41DFFFFFFFC00000
  %43 = fcmp ogt double %40, 0xC1E0000000000000
  %44 = select i1 %43, double %40, double 0xC1E0000000000000
  %45 = fptosi double %44 to i32
  %46 = select i1 %41, i32 0, i32 2147483647
  %47 = select i1 %42, i32 %46, i32 %45
  %48 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 2, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 3, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, 0
  %53 = select i1 %52, i32 -2147483648, i32 2147483647
  %54 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %49, i32 %51) #13
  %55 = extractvalue { i32, i1 } %54, 1
  %56 = extractvalue { i32, i1 } %54, 0
  %57 = select i1 %55, i32 %53, i32 %56, !prof !2
  %58 = icmp slt i32 %57, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %47, i32 %57) #13
  %61 = extractvalue { i32, i1 } %60, 1
  %62 = extractvalue { i32, i1 } %60, 0
  %63 = select i1 %61, i32 %59, i32 %62, !prof !2
  br label %64

64:                                               ; preds = %19, %6
  %65 = phi i32 [ %18, %6 ], [ %63, %19 ]
  ret i32 %65
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), %"struct.blink::LogicalSize"* nocapture readonly dereferenceable(8), i32, i32) local_unnamed_addr #0 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %6, label %30

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %1, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %1, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = sext i32 %3 to i64
  %12 = sext i32 %8 to i64
  %13 = mul nsw i64 %12, %11
  %14 = sext i32 %10 to i64
  %15 = sdiv i64 %13, %14
  %16 = tail call i1 @llvm.is.constant.i64(i64 %15) #13
  br i1 %16, label %24, label %17

17:                                               ; preds = %6
  %18 = icmp slt i64 %15, 0
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = add nsw i64 %15, 2147483648
  %21 = icmp ult i64 %20, 4294967296
  %22 = trunc i64 %15 to i32
  %23 = select i1 %21, i32 %22, i32 %19, !prof !3
  br label %88

24:                                               ; preds = %6
  %25 = icmp sgt i64 %15, 2147483647
  br i1 %25, label %88, label %26

26:                                               ; preds = %24
  %27 = icmp sgt i64 %15, -2147483648
  %28 = select i1 %27, i64 %15, i64 -2147483648
  %29 = trunc i64 %28 to i32
  br label %88

30:                                               ; preds = %4
  %31 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %34) #13
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = icmp sgt i32 %40, -1
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %40) #13
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !2
  %47 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %1, i64 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %1, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sext i32 %46 to i64
  %52 = sext i32 %48 to i64
  %53 = mul nsw i64 %51, %52
  %54 = sext i32 %50 to i64
  %55 = sdiv i64 %53, %54
  %56 = tail call i1 @llvm.is.constant.i64(i64 %55) #13
  br i1 %56, label %64, label %57

57:                                               ; preds = %30
  %58 = icmp slt i64 %55, 0
  %59 = select i1 %58, i32 -2147483648, i32 2147483647
  %60 = add nsw i64 %55, 2147483648
  %61 = icmp ult i64 %60, 4294967296
  %62 = trunc i64 %55 to i32
  %63 = select i1 %61, i32 %62, i32 %59, !prof !3
  br label %70

64:                                               ; preds = %30
  %65 = icmp sgt i64 %55, 2147483647
  br i1 %65, label %70, label %66

66:                                               ; preds = %64
  %67 = icmp sgt i64 %55, -2147483648
  %68 = select i1 %67, i64 %55, i64 -2147483648
  %69 = trunc i64 %68 to i32
  br label %70

70:                                               ; preds = %57, %64, %66
  %71 = phi i32 [ %63, %57 ], [ %69, %66 ], [ 2147483647, %64 ]
  %72 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 2, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 3, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, 0
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 %75) #13
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !2
  %82 = icmp slt i32 %81, 0
  %83 = select i1 %82, i32 -2147483648, i32 2147483647
  %84 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %71, i32 %81) #13
  %85 = extractvalue { i32, i1 } %84, 1
  %86 = extractvalue { i32, i1 } %84, 0
  %87 = select i1 %85, i32 %83, i32 %86, !prof !2
  br label %88

88:                                               ; preds = %26, %24, %17, %70
  %89 = phi i32 [ %87, %70 ], [ %23, %17 ], [ %29, %26 ], [ 2147483647, %24 ]
  ret i32 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZN5blink35ComputeMinAndMaxContentContributionERKNS_13ComputedStyleERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), i64) local_unnamed_addr #2 {
  %5 = alloca %"class.absl::optional.1820", align 4
  %6 = alloca %"class.absl::optional.1820", align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.absl::optional.1820", align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 8
  %12 = alloca i32, align 4
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::LayoutObject"**
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %17 = bitcast %"class.blink::ComputedStyle"** %16 to %"class.blink::ComputedStyleBase"**
  %18 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8
  %22 = lshr i160 %21, 102
  %23 = trunc i160 %22 to i8
  %24 = and i8 %23, 3
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %18, i64 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = icmp ne i8 %24, 0
  %29 = and i160 %27, 15211807202738752817960438464512
  %30 = icmp eq i160 %29, 0
  %31 = xor i1 %30, %28
  %32 = bitcast %"class.blink::ComputedStyleBase"* %18 to %"class.blink::ComputedStyle"*
  br i1 %31, label %33, label %81

33:                                               ; preds = %4
  %34 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %1, i64 0, i32 0, i32 1
  %35 = load i8, i8* %34, align 8
  %36 = and i8 %35, 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %66

38:                                               ; preds = %33
  %39 = bitcast %"class.blink::LayoutObject"* %15 to i1 (%"class.blink::LayoutObject"*, i32)***
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, i64 92
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutObject"* %15, i32 44) #13
  br i1 %43, label %44, label %66

44:                                               ; preds = %38
  %45 = load i8, i8* %34, align 8
  %46 = and i8 %45, 1
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %62

48:                                               ; preds = %44
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %50 = bitcast %"class.blink::LayoutObject"* %49 to i1 (%"class.blink::LayoutObject"*, i32)***
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, i64 92
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* %49, i32 44) #13
  br i1 %54, label %55, label %62

55:                                               ; preds = %48
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %57 = bitcast %"class.blink::LayoutObject"* %56 to i1 (%"class.blink::LayoutObject"*, i32)***
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* %56, i32 30) #13
  br i1 %61, label %66, label %62

62:                                               ; preds = %44, %48, %55
  %63 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %24, i32 0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, i64 %3) #13
  %64 = extractvalue { i64, i8 } %63, 0
  %65 = extractvalue { i64, i8 } %63, 1
  br label %436

66:                                               ; preds = %33, %55, %38
  %67 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %68 = bitcast %"class.blink::LayoutObject"* %67 to i1 (%"class.blink::LayoutObject"*, i32)***
  %69 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %68, align 8
  %70 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %69, i64 92
  %71 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %70, align 8
  %72 = tail call zeroext i1 %71(%"class.blink::LayoutObject"* %67, i32 39) #13
  br i1 %72, label %77, label %73

73:                                               ; preds = %66
  %74 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %74, i64 0, i32 5, i32 0
  %76 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %75, align 8
  br label %81

77:                                               ; preds = %66
  %78 = tail call fastcc { i64, i8 } @_ZN5blink12_GLOBAL__N_146ComputeMinAndMaxContentContributionForReplacedERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceE(%"class.blink::NGBlockNode"* dereferenceable(16) %1, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2)
  %79 = extractvalue { i64, i8 } %78, 0
  %80 = extractvalue { i64, i8 } %78, 1
  br label %436

81:                                               ; preds = %73, %4
  %82 = phi %"class.blink::ComputedStyle"* [ %76, %73 ], [ %32, %4 ]
  %83 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83)
  %84 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84)
  %85 = bitcast { i64, i64 }* %13 to %"struct.blink::NGBoxStrut"*
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = lshr i160 %88, 102
  %90 = trunc i160 %89 to i8
  %91 = and i8 %90, 3
  %92 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #13
  %93 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %94 = tail call { i64, i64 } @_ZN5blink14ComputeBordersERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::NGBlockNode"* dereferenceable(16) %1) #13
  %95 = extractvalue { i64, i64 } %94, 0
  %96 = extractvalue { i64, i64 } %94, 1
  %97 = tail call { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %82) #13
  %98 = extractvalue { i64, i64 } %97, 0
  %99 = trunc i64 %98 to i32
  %100 = lshr i64 %98, 32
  %101 = trunc i64 %100 to i32
  %102 = extractvalue { i64, i64 } %97, 1
  %103 = trunc i64 %95 to i32
  %104 = lshr i64 %95, 32
  %105 = trunc i64 %104 to i32
  %106 = icmp slt i32 %99, 0
  %107 = select i1 %106, i32 -2147483648, i32 2147483647
  %108 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %103, i32 %99) #13
  %109 = extractvalue { i32, i1 } %108, 1
  %110 = extractvalue { i32, i1 } %108, 0
  %111 = select i1 %109, i32 %107, i32 %110, !prof !2
  %112 = icmp slt i32 %101, 0
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %101) #13
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !2
  %118 = trunc i64 %96 to i32
  %119 = trunc i64 %102 to i32
  %120 = icmp slt i32 %119, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %118, i32 %119) #13
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !2
  %126 = zext i32 %125 to i64
  %127 = lshr i64 %96, 32
  %128 = trunc i64 %127 to i32
  %129 = lshr i64 %102, 32
  %130 = trunc i64 %129 to i32
  %131 = icmp slt i32 %130, 0
  %132 = select i1 %131, i32 -2147483648, i32 2147483647
  %133 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %128, i32 %130) #13
  %134 = extractvalue { i32, i1 } %133, 1
  %135 = extractvalue { i32, i1 } %133, 0
  %136 = select i1 %134, i32 %132, i32 %135, !prof !2
  %137 = zext i32 %136 to i64
  %138 = shl nuw i64 %137, 32
  %139 = or i64 %138, %126
  %140 = zext i32 %117 to i64
  %141 = shl nuw i64 %140, 32
  %142 = zext i32 %111 to i64
  %143 = or i64 %141, %142
  %144 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  store i64 %143, i64* %144, align 8
  store i64 %139, i64* %93, align 8
  store i32 0, i32* %11, align 8
  store i32 0, i32* %12, align 4
  %145 = icmp eq i8 %24, 0
  %146 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 5, i32 0, i32 0
  %147 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %147, i64 0, i32 8
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %147, i64 0, i32 3
  %150 = select i1 %145, %"class.blink::Length"* %148, %"class.blink::Length"* %149
  %151 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %150, i64 0, i32 2
  %152 = load i8, i8* %151, align 1
  switch i8 %152, label %160 [
    i8 0, label %153
    i8 8, label %153
    i8 1, label %153
    i8 6, label %153
    i8 7, label %153
  ]

153:                                              ; preds = %81, %81, %81, %81, %81
  %154 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %24, i32 0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, i64 %3) #13
  %155 = extractvalue { i64, i8 } %154, 0
  %156 = extractvalue { i64, i8 } %154, 1
  %157 = trunc i64 %155 to i32
  store i32 %157, i32* %11, align 8
  %158 = lshr i64 %155, 32
  %159 = trunc i64 %158 to i32
  store i32 %159, i32* %12, align 4
  br label %213

160:                                              ; preds = %81
  %161 = icmp eq i8 %91, 0
  %162 = xor i1 %28, %161
  br i1 %162, label %163, label %176

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %164) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %164, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %164, align 4
  %165 = add i8 %152, -3
  %166 = icmp ult i8 %165, 3
  br i1 %166, label %167, label %174

167:                                              ; preds = %163
  %168 = icmp eq i8 %152, 5
  %169 = zext i1 %168 to i32
  %170 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %24, i32 %169, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, i64 %3) #13
  %171 = extractvalue { i64, i8 } %170, 0
  %172 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %173 = bitcast %union.anon.1824* %172 to i64*
  store i64 %171, i64* %173, align 4
  store i8 1, i8* %164, align 4
  br label %174

174:                                              ; preds = %167, %163
  %175 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %82, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %85, %"class.absl::optional.1820"* nonnull dereferenceable(12) %5, %"class.blink::Length"* dereferenceable(8) %150, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %164) #13
  store i32 %175, i32* %11, align 8
  store i32 %175, i32* %12, align 4
  br label %213

176:                                              ; preds = %160
  switch i8 %152, label %208 [
    i8 5, label %201
    i8 8, label %177
    i8 1, label %177
    i8 3, label %201
    i8 4, label %201
  ]

177:                                              ; preds = %176, %176
  %178 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = lshr i32 %179, 28
  %181 = and i32 %180, 3
  switch i32 %181, label %182 [
    i32 0, label %183
    i32 1, label %200
    i32 2, label %193
    i32 3, label %185
  ]

182:                                              ; preds = %177
  unreachable

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  br label %189

185:                                              ; preds = %177
  %186 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %187 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %186, align 8
  %188 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %187, i64 0, i32 0, i32 1, i32 0
  br label %189

189:                                              ; preds = %185, %183
  %190 = phi i32* [ %188, %185 ], [ %184, %183 ]
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %191, -64
  br i1 %192, label %193, label %200, !prof !2

193:                                              ; preds = %189, %177
  %194 = icmp eq i8 %152, 5
  %195 = zext i1 %194 to i32
  %196 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %24, i32 %195, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, i64 %3) #13
  %197 = extractvalue { i64, i8 } %196, 0
  %198 = lshr i64 %197, 32
  %199 = trunc i64 %198 to i32
  br label %211

200:                                              ; preds = %189, %177
  switch i8 %152, label %208 [
    i8 3, label %201
    i8 4, label %201
    i8 7, label %201
    i8 5, label %201
  ]

201:                                              ; preds = %200, %200, %200, %200, %176, %176, %176
  %202 = icmp eq i8 %152, 5
  %203 = zext i1 %202 to i32
  %204 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %24, i32 %203, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, i64 %3) #13
  %205 = extractvalue { i64, i8 } %204, 0
  %206 = lshr i64 %205, 32
  %207 = trunc i64 %206 to i32
  br label %208

208:                                              ; preds = %201, %200, %176
  %209 = phi i32 [ %207, %201 ], [ -64, %200 ], [ -64, %176 ]
  %210 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %82, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %85, %"class.blink::Length"* dereferenceable(8) %150, i32 %209, i32 0, %"class.blink::LayoutUnit"* null) #13
  br label %211

211:                                              ; preds = %208, %193
  %212 = phi i32 [ %199, %193 ], [ %210, %208 ]
  store i32 %212, i32* %11, align 8
  store i32 %212, i32* %12, align 4
  br label %213

213:                                              ; preds = %211, %174, %153
  %214 = phi i32 [ %159, %153 ], [ %175, %174 ], [ %212, %211 ]
  %215 = phi i32 [ %157, %153 ], [ %175, %174 ], [ %212, %211 ]
  %216 = phi i8 [ %156, %153 ], [ 0, %174 ], [ 0, %211 ]
  %217 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %146, align 8
  br i1 %145, label %218, label %221

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %217, i64 0, i32 5
  %220 = icmp eq i8 %91, 0
  br i1 %220, label %224, label %263

221:                                              ; preds = %213
  %222 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %217, i64 0, i32 4
  %223 = icmp eq i8 %91, 0
  br i1 %223, label %263, label %224

224:                                              ; preds = %221, %218
  %225 = phi %"class.blink::Length"* [ %219, %218 ], [ %222, %221 ]
  %226 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %225, i64 0, i32 2
  %227 = load i8, i8* %226, align 1
  switch i8 %227, label %251 [
    i8 12, label %290
    i8 8, label %228
    i8 1, label %228
    i8 6, label %244
  ], !prof !5

228:                                              ; preds = %224, %224
  %229 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %230 = load i32, i32* %229, align 8
  %231 = lshr i32 %230, 26
  %232 = and i32 %231, 3
  switch i32 %232, label %233 [
    i32 0, label %234
    i32 1, label %251
    i32 2, label %290
    i32 3, label %236
  ]

233:                                              ; preds = %228
  unreachable

234:                                              ; preds = %228
  %235 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 0, i32 0
  br label %240

236:                                              ; preds = %228
  %237 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %238 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %237 to i32**
  %239 = load i32*, i32** %238, align 8
  br label %240

240:                                              ; preds = %236, %234
  %241 = phi i32* [ %239, %236 ], [ %235, %234 ]
  %242 = load i32, i32* %241, align 8
  %243 = icmp eq i32 %242, -64
  br i1 %243, label %290, label %251, !prof !3

244:                                              ; preds = %224
  %245 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = trunc i64 %246 to i32
  %248 = icmp eq i32 %247, -64
  br i1 %248, label %290, label %249, !prof !3

249:                                              ; preds = %244
  %250 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %250) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %250, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %250, align 4
  br label %260

251:                                              ; preds = %240, %228, %224
  %252 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %252) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %252, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %252, align 4
  switch i8 %227, label %260 [
    i8 3, label %253
    i8 4, label %253
    i8 7, label %253
    i8 5, label %253
  ]

253:                                              ; preds = %251, %251, %251, %251
  %254 = icmp eq i8 %227, 5
  %255 = zext i1 %254 to i32
  %256 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %24, i32 %255, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, i64 %3) #13
  %257 = extractvalue { i64, i8 } %256, 0
  %258 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %259 = bitcast %union.anon.1824* %258 to i64*
  store i64 %257, i64* %259, align 4
  store i8 1, i8* %252, align 4
  br label %260

260:                                              ; preds = %253, %251, %249
  %261 = phi i8* [ %252, %253 ], [ %250, %249 ], [ %252, %251 ]
  %262 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %82, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %85, %"class.absl::optional.1820"* nonnull dereferenceable(12) %6, %"class.blink::Length"* dereferenceable(8) %225, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* %261) #13
  br label %290

263:                                              ; preds = %221, %218
  %264 = phi %"class.blink::Length"* [ %219, %218 ], [ %222, %221 ]
  %265 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %264, i64 0, i32 2
  %266 = load i8, i8* %265, align 1
  switch i8 %266, label %288 [
    i8 0, label %290
    i8 3, label %290
    i8 4, label %290
    i8 5, label %290
    i8 7, label %290
    i8 12, label %290
    i8 8, label %267
    i8 1, label %267
    i8 6, label %283
  ]

267:                                              ; preds = %263, %263
  %268 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %269 = load i32, i32* %268, align 8
  %270 = lshr i32 %269, 28
  %271 = and i32 %270, 3
  switch i32 %271, label %272 [
    i32 0, label %273
    i32 1, label %288
    i32 2, label %290
    i32 3, label %275
  ]

272:                                              ; preds = %267
  unreachable

273:                                              ; preds = %267
  %274 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  br label %279

275:                                              ; preds = %267
  %276 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %277 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %276, align 8
  %278 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %277, i64 0, i32 0, i32 1, i32 0
  br label %279

279:                                              ; preds = %275, %273
  %280 = phi i32* [ %278, %275 ], [ %274, %273 ]
  %281 = load i32, i32* %280, align 4
  %282 = icmp eq i32 %281, -64
  br i1 %282, label %290, label %288, !prof !3

283:                                              ; preds = %263
  %284 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = and i64 %285, -4294967296
  %287 = icmp eq i64 %286, -274877906944
  br i1 %287, label %290, label %288, !prof !3

288:                                              ; preds = %283, %279, %267, %263
  %289 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %82, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %85, %"class.blink::Length"* dereferenceable(8) %264, i32 -64, i32 0, %"class.blink::LayoutUnit"* null) #13
  br label %290

290:                                              ; preds = %288, %283, %279, %267, %263, %263, %263, %263, %263, %263, %260, %244, %240, %228, %224
  %291 = phi i1 [ true, %224 ], [ true, %228 ], [ true, %240 ], [ true, %244 ], [ true, %260 ], [ false, %263 ], [ false, %263 ], [ false, %263 ], [ false, %263 ], [ false, %263 ], [ false, %263 ], [ false, %267 ], [ false, %279 ], [ false, %283 ], [ false, %288 ]
  %292 = phi i32 [ 2147483647, %224 ], [ 2147483647, %228 ], [ 2147483647, %240 ], [ 2147483647, %244 ], [ %262, %260 ], [ 2147483647, %263 ], [ 2147483647, %263 ], [ 2147483647, %263 ], [ 2147483647, %263 ], [ 2147483647, %263 ], [ 2147483647, %263 ], [ 2147483647, %267 ], [ 2147483647, %279 ], [ 2147483647, %283 ], [ %289, %288 ]
  %293 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %293)
  store i32 %292, i32* %7, align 4
  %294 = icmp sgt i32 %215, %292
  %295 = bitcast i32* %11 to %"class.blink::LayoutUnit"*
  %296 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %297 = select i1 %294, %"class.blink::LayoutUnit"* %296, %"class.blink::LayoutUnit"* %295
  %298 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %297, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  store i32 %299, i32* %11, align 8
  %300 = icmp sgt i32 %214, %292
  %301 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %302 = select i1 %300, %"class.blink::LayoutUnit"* %296, %"class.blink::LayoutUnit"* %301
  %303 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %302, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  store i32 %304, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %293)
  %305 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %146, align 8
  %306 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %305, i64 0, i32 7
  %307 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %305, i64 0, i32 6
  %308 = select i1 %145, %"class.blink::Length"* %306, %"class.blink::Length"* %307
  %309 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %308, i64 0, i32 2
  %310 = load i8, i8* %309, align 1
  br i1 %291, label %311, label %354

311:                                              ; preds = %290
  switch i8 %310, label %342 [
    i8 0, label %335
    i8 8, label %312
    i8 1, label %312
    i8 6, label %328
  ], !prof !5

312:                                              ; preds = %311, %311
  %313 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %314 = load i32, i32* %313, align 8
  %315 = lshr i32 %314, 26
  %316 = and i32 %315, 3
  switch i32 %316, label %317 [
    i32 0, label %318
    i32 1, label %342
    i32 2, label %335
    i32 3, label %320
  ]

317:                                              ; preds = %312
  unreachable

318:                                              ; preds = %312
  %319 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 0, i32 0
  br label %324

320:                                              ; preds = %312
  %321 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %322 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %321 to i32**
  %323 = load i32*, i32** %322, align 8
  br label %324

324:                                              ; preds = %320, %318
  %325 = phi i32* [ %323, %320 ], [ %319, %318 ]
  %326 = load i32, i32* %325, align 8
  %327 = icmp eq i32 %326, -64
  br i1 %327, label %335, label %342, !prof !3

328:                                              ; preds = %311
  %329 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %330 = load i64, i64* %329, align 8
  %331 = trunc i64 %330 to i32
  %332 = icmp eq i32 %331, -64
  br i1 %332, label %335, label %333, !prof !3

333:                                              ; preds = %328
  %334 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %334) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %334, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %334, align 4
  br label %351

335:                                              ; preds = %328, %324, %312, %311
  %336 = icmp slt i32 %117, 0
  %337 = select i1 %336, i32 -2147483648, i32 2147483647
  %338 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %117) #13
  %339 = extractvalue { i32, i1 } %338, 1
  %340 = extractvalue { i32, i1 } %338, 0
  %341 = select i1 %339, i32 %337, i32 %340, !prof !2
  br label %385

342:                                              ; preds = %324, %312, %311
  %343 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %343) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %343, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %343, align 4
  switch i8 %310, label %351 [
    i8 3, label %344
    i8 4, label %344
    i8 7, label %344
    i8 5, label %344
  ]

344:                                              ; preds = %342, %342, %342, %342
  %345 = icmp eq i8 %310, 5
  %346 = zext i1 %345 to i32
  %347 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %24, i32 %346, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, i64 %3) #13
  %348 = extractvalue { i64, i8 } %347, 0
  %349 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %350 = bitcast %union.anon.1824* %349 to i64*
  store i64 %348, i64* %350, align 4
  store i8 1, i8* %343, align 4
  br label %351

351:                                              ; preds = %344, %342, %333
  %352 = phi i8* [ %343, %344 ], [ %334, %333 ], [ %343, %342 ]
  %353 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %82, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %85, %"class.absl::optional.1820"* nonnull dereferenceable(12) %8, %"class.blink::Length"* dereferenceable(8) %308, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* %352) #13
  br label %385

354:                                              ; preds = %290
  switch i8 %310, label %383 [
    i8 0, label %376
    i8 3, label %376
    i8 4, label %376
    i8 5, label %376
    i8 7, label %376
    i8 12, label %376
    i8 8, label %355
    i8 1, label %355
    i8 6, label %371
  ]

355:                                              ; preds = %354, %354
  %356 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %357 = load i32, i32* %356, align 8
  %358 = lshr i32 %357, 28
  %359 = and i32 %358, 3
  switch i32 %359, label %360 [
    i32 0, label %361
    i32 1, label %383
    i32 2, label %376
    i32 3, label %363
  ]

360:                                              ; preds = %355
  unreachable

361:                                              ; preds = %355
  %362 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  br label %367

363:                                              ; preds = %355
  %364 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %365 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %364, align 8
  %366 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %365, i64 0, i32 0, i32 1, i32 0
  br label %367

367:                                              ; preds = %363, %361
  %368 = phi i32* [ %366, %363 ], [ %362, %361 ]
  %369 = load i32, i32* %368, align 4
  %370 = icmp eq i32 %369, -64
  br i1 %370, label %376, label %383, !prof !3

371:                                              ; preds = %354
  %372 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = and i64 %373, -4294967296
  %375 = icmp eq i64 %374, -274877906944
  br i1 %375, label %376, label %383, !prof !3

376:                                              ; preds = %371, %367, %355, %354, %354, %354, %354, %354, %354
  %377 = icmp slt i32 %136, 0
  %378 = select i1 %377, i32 -2147483648, i32 2147483647
  %379 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %125, i32 %136) #13
  %380 = extractvalue { i32, i1 } %379, 1
  %381 = extractvalue { i32, i1 } %379, 0
  %382 = select i1 %380, i32 %378, i32 %381, !prof !2
  br label %385

383:                                              ; preds = %371, %367, %355, %354
  %384 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %82, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %85, %"class.blink::Length"* dereferenceable(8) %308, i32 -64, i32 0, %"class.blink::LayoutUnit"* null) #13
  br label %385

385:                                              ; preds = %383, %376, %351, %335
  %386 = phi i32 [ %341, %335 ], [ %353, %351 ], [ %382, %376 ], [ %384, %383 ]
  %387 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %387)
  store i32 %386, i32* %9, align 4
  %388 = icmp slt i32 %299, %386
  %389 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %390 = select i1 %388, %"class.blink::LayoutUnit"* %389, %"class.blink::LayoutUnit"* %295
  %391 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %390, i64 0, i32 0
  %392 = load i32, i32* %391, align 4
  store i32 %392, i32* %11, align 8
  %393 = icmp slt i32 %304, %386
  %394 = select i1 %393, %"class.blink::LayoutUnit"* %389, %"class.blink::LayoutUnit"* %301
  %395 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %394, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  store i32 %396, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %387)
  %397 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %1, i64 0, i32 0, i32 1
  %398 = load i8, i8* %397, align 8
  %399 = and i8 %398, 1
  %400 = icmp eq i8 %399, 0
  br i1 %400, label %401, label %429

401:                                              ; preds = %385
  %402 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %403 = bitcast %"class.blink::LayoutObject"* %402 to i1 (%"class.blink::LayoutObject"*, i32)***
  %404 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %403, align 8
  %405 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %404, i64 92
  %406 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %405, align 8
  %407 = tail call zeroext i1 %406(%"class.blink::LayoutObject"* %402, i32 44) #13
  br i1 %407, label %408, label %429

408:                                              ; preds = %401
  %409 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %410 = bitcast %"class.blink::LayoutObject"* %409 to i1 (%"class.blink::LayoutObject"*, i32)***
  %411 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %410, align 8
  %412 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %411, i64 92
  %413 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %412, align 8
  %414 = tail call zeroext i1 %413(%"class.blink::LayoutObject"* %409, i32 30) #13
  br i1 %414, label %415, label %429

415:                                              ; preds = %408
  %416 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %24, i32 1, %"class.blink::NGConstraintSpace"* dereferenceable(32) %2, i64 %3) #13
  %417 = extractvalue { i64, i8 } %416, 0
  %418 = trunc i64 %417 to i32
  %419 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %419)
  store i32 %418, i32* %10, align 4
  %420 = icmp slt i32 %392, %418
  %421 = bitcast i32* %10 to %"class.blink::LayoutUnit"*
  %422 = select i1 %420, %"class.blink::LayoutUnit"* %421, %"class.blink::LayoutUnit"* %295
  %423 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %422, i64 0, i32 0
  %424 = load i32, i32* %423, align 4
  store i32 %424, i32* %11, align 8
  %425 = icmp slt i32 %396, %418
  %426 = select i1 %425, %"class.blink::LayoutUnit"* %421, %"class.blink::LayoutUnit"* %301
  %427 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %426, i64 0, i32 0
  %428 = load i32, i32* %427, align 4
  store i32 %428, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %419)
  br label %429

429:                                              ; preds = %385, %401, %408, %415
  %430 = phi i32 [ %396, %385 ], [ %396, %401 ], [ %428, %415 ], [ %396, %408 ]
  %431 = phi i32 [ %392, %385 ], [ %392, %401 ], [ %424, %415 ], [ %392, %408 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #13
  %432 = zext i32 %430 to i64
  %433 = shl nuw i64 %432, 32
  %434 = zext i32 %431 to i64
  %435 = or i64 %433, %434
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84)
  br label %436

436:                                              ; preds = %429, %77, %62
  %437 = phi i64 [ %79, %77 ], [ %435, %429 ], [ %64, %62 ]
  %438 = phi i8 [ %80, %77 ], [ %216, %429 ], [ %65, %62 ]
  %439 = insertvalue { i64, i8 } undef, i64 %437, 0
  %440 = insertvalue { i64, i8 } %439, i8 %438, 1
  ret { i64, i8 } %440
}

declare { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"*, i8 zeroext, i32, %"class.blink::NGConstraintSpace"* dereferenceable(32), i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i8 } @_ZN5blink12_GLOBAL__N_146ComputeMinAndMaxContentContributionForReplacedERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32)) unnamed_addr #2 {
  %3 = alloca %"class.absl::optional.1820", align 4
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"struct.blink::NGBoxStrut"*
  %6 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %11 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %12 = or i8 %11, %10
  %13 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %14 = or i8 %12, %13
  %15 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %16 = or i8 %14, %15
  %17 = icmp ne i8 %16, 0
  %18 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_replaced_enabled_E, align 1
  %19 = icmp ne i8 %18, 0
  %20 = and i1 %19, %17
  %21 = bitcast %"class.blink::LayoutObject"* %7 to %"class.blink::LayoutBox"*
  br i1 %20, label %22, label %157

22:                                               ; preds = %2
  %23 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #13
  %24 = bitcast { i64, i64 }* %4 to i32*
  %25 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %5, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %27 = tail call { i64, i64 } @_ZN5blink14ComputeBordersERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::NGBlockNode"* dereferenceable(16) %0)
  %28 = extractvalue { i64, i64 } %27, 0
  %29 = extractvalue { i64, i64 } %27, 1
  %30 = tail call { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %9)
  %31 = extractvalue { i64, i64 } %30, 0
  %32 = trunc i64 %31 to i32
  %33 = lshr i64 %31, 32
  %34 = trunc i64 %33 to i32
  %35 = extractvalue { i64, i64 } %30, 1
  %36 = trunc i64 %28 to i32
  %37 = lshr i64 %28, 32
  %38 = trunc i64 %37 to i32
  %39 = icmp slt i32 %32, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %32) #13
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !2
  %45 = icmp slt i32 %34, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %34) #13
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !2
  %51 = trunc i64 %29 to i32
  %52 = trunc i64 %35 to i32
  %53 = icmp slt i32 %52, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %51, i32 %52) #13
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !2
  %59 = zext i32 %58 to i64
  %60 = lshr i64 %29, 32
  %61 = trunc i64 %60 to i32
  %62 = lshr i64 %35, 32
  %63 = trunc i64 %62 to i32
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %61, i32 %63) #13
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !2
  %70 = zext i32 %69 to i64
  %71 = shl nuw i64 %70, 32
  %72 = or i64 %71, %59
  %73 = zext i32 %50 to i64
  %74 = shl nuw i64 %73, 32
  %75 = zext i32 %44 to i64
  %76 = or i64 %74, %75
  %77 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  store i64 %76, i64* %77, align 8
  store i64 %72, i64* %26, align 8
  %78 = call i64 @_ZN5blink19ComputeReplacedSizeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutENS_16ReplacedSizeModeE(%"class.blink::NGBlockNode"* dereferenceable(16) %0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %5, i32 0)
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %80 = bitcast [20 x i8]* %79 to i160*
  %81 = load i160, i160* %80, align 8
  %82 = and i160 %81, 15211807202738752817960438464512
  %83 = icmp eq i160 %82, 0
  %84 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %85, i64 0, i32 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %85, i64 0, i32 3
  %88 = select i1 %83, %"class.blink::Length"* %86, %"class.blink::Length"* %87
  %89 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %88, i64 0, i32 2
  %90 = load i8, i8* %89, align 1
  switch i8 %90, label %91 [
    i8 8, label %98
    i8 1, label %98
  ]

91:                                               ; preds = %22
  %92 = trunc i64 %78 to i32
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %85, i64 0, i32 5
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %85, i64 0, i32 4
  %95 = select i1 %83, %"class.blink::Length"* %93, %"class.blink::Length"* %94
  %96 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %95, i64 0, i32 2
  %97 = load i8, i8* %96, align 1
  switch i8 %97, label %155 [
    i8 8, label %98
    i8 1, label %98
  ]

98:                                               ; preds = %91, %91, %22, %22
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %85, i64 0, i32 7
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %85, i64 0, i32 6
  %101 = select i1 %83, %"class.blink::Length"* %99, %"class.blink::Length"* %100
  %102 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %101, i64 0, i32 2
  %103 = load i8, i8* %102, align 1
  switch i8 %103, label %136 [
    i8 0, label %127
    i8 8, label %104
    i8 1, label %104
    i8 6, label %120
  ], !prof !5

104:                                              ; preds = %98, %98
  %105 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = lshr i32 %106, 26
  %108 = and i32 %107, 3
  switch i32 %108, label %109 [
    i32 0, label %110
    i32 1, label %136
    i32 2, label %127
    i32 3, label %112
  ]

109:                                              ; preds = %104
  unreachable

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 0, i32 0
  br label %116

112:                                              ; preds = %104
  %113 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %114 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %113 to i32**
  %115 = load i32*, i32** %114, align 8
  br label %116

116:                                              ; preds = %112, %110
  %117 = phi i32* [ %115, %112 ], [ %111, %110 ]
  %118 = load i32, i32* %117, align 8
  %119 = icmp eq i32 %118, -64
  br i1 %119, label %127, label %136, !prof !3

120:                                              ; preds = %98
  %121 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = trunc i64 %122 to i32
  %124 = icmp eq i32 %123, -64
  br i1 %124, label %127, label %125, !prof !3

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %126) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %126, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %126, align 4
  br label %152

127:                                              ; preds = %120, %116, %104, %98
  %128 = load i32, i32* %24, align 8
  %129 = load i32, i32* %25, align 4
  %130 = icmp slt i32 %129, 0
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %128, i32 %129) #13
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !2
  br label %155

136:                                              ; preds = %116, %104, %98
  %137 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %137) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %137, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %137, align 4
  switch i8 %103, label %152 [
    i8 3, label %138
    i8 4, label %138
    i8 7, label %138
    i8 5, label %138
  ]

138:                                              ; preds = %136, %136, %136, %136
  %139 = load i32, i32* %24, align 8
  %140 = load i32, i32* %25, align 4
  %141 = icmp slt i32 %140, 0
  %142 = select i1 %141, i32 -2147483648, i32 2147483647
  %143 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %139, i32 %140) #13
  %144 = extractvalue { i32, i1 } %143, 1
  %145 = extractvalue { i32, i1 } %143, 0
  %146 = select i1 %144, i32 %142, i32 %145, !prof !2
  %147 = zext i32 %146 to i64
  %148 = shl nuw i64 %147, 32
  %149 = or i64 %148, %147
  %150 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %151 = bitcast %union.anon.1824* %150 to i64*
  store i64 %149, i64* %151, align 4
  store i8 1, i8* %137, align 4
  br label %152

152:                                              ; preds = %138, %136, %125
  %153 = phi i8* [ %137, %138 ], [ %126, %125 ], [ %137, %136 ]
  %154 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %9, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %5, %"class.absl::optional.1820"* nonnull dereferenceable(12) %3, %"class.blink::Length"* dereferenceable(8) %101, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* %153) #13
  br label %155

155:                                              ; preds = %91, %152, %127
  %156 = phi i32 [ %92, %91 ], [ %135, %127 ], [ %154, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #13
  br label %190

157:                                              ; preds = %2
  %158 = tail call zeroext i1 @_ZNK5blink9LayoutBox46HasOverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"* %21) #13
  br i1 %158, label %182, label %159

159:                                              ; preds = %157
  %160 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %161 = load i32, i32* %160, align 8
  %162 = lshr i32 %161, 30
  switch i32 %162, label %172 [
    i32 0, label %163
    i32 1, label %173
    i32 2, label %166
    i32 3, label %167
  ]

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  %165 = load i32, i32* %164, align 4
  br label %173

166:                                              ; preds = %159
  br label %173

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %169 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %168, align 8
  %170 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %169, i64 0, i32 1, i32 0
  %171 = load i32, i32* %170, align 8
  br label %173

172:                                              ; preds = %159
  unreachable

173:                                              ; preds = %159, %163, %166, %167
  %174 = phi i32 [ %171, %167 ], [ -64, %166 ], [ %165, %163 ], [ 0, %159 ]
  tail call void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"* %21, i32 %174) #13
  %175 = bitcast %"class.blink::LayoutObject"* %7 to i64 (%"class.blink::LayoutBox"*)***
  %176 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %175, align 8
  %177 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %176, i64 69
  %178 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %177, align 8
  %179 = tail call i64 %178(%"class.blink::LayoutBox"* %21) #13
  %180 = trunc i64 %179 to i32
  %181 = lshr i64 %179, 32
  tail call void @_ZN5blink9LayoutBox39ClearOverrideContainingBlockContentSizeEv(%"class.blink::LayoutBox"* %21) #13
  br label %190

182:                                              ; preds = %157
  %183 = bitcast %"class.blink::LayoutObject"* %7 to i64 (%"class.blink::LayoutBox"*)***
  %184 = load i64 (%"class.blink::LayoutBox"*)**, i64 (%"class.blink::LayoutBox"*)*** %183, align 8
  %185 = getelementptr inbounds i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %184, i64 69
  %186 = load i64 (%"class.blink::LayoutBox"*)*, i64 (%"class.blink::LayoutBox"*)** %185, align 8
  %187 = tail call i64 %186(%"class.blink::LayoutBox"* %21) #13
  %188 = trunc i64 %187 to i32
  %189 = lshr i64 %187, 32
  br label %190

190:                                              ; preds = %173, %182, %155
  %191 = phi i32 [ %156, %155 ], [ %188, %182 ], [ %180, %173 ]
  %192 = phi i64 [ %78, %155 ], [ %189, %182 ], [ %181, %173 ]
  %193 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %194 = bitcast [20 x i8]* %193 to i160*
  %195 = load i160, i160* %194, align 8
  %196 = and i160 %195, 15211807202738752817960438464512
  %197 = icmp eq i160 %196, 0
  %198 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %199 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %198, align 8
  %200 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %199, i64 0, i32 3
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %199, i64 0, i32 8
  %202 = select i1 %197, %"class.blink::Length"* %200, %"class.blink::Length"* %201
  %203 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %202, i64 0, i32 2
  %204 = load i8, i8* %203, align 1
  switch i8 %204, label %205 [
    i8 8, label %225
    i8 1, label %225
  ]

205:                                              ; preds = %190
  %206 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %199, i64 0, i32 6
  %207 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %199, i64 0, i32 7
  %208 = select i1 %197, %"class.blink::Length"* %206, %"class.blink::Length"* %207
  %209 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %208, i64 0, i32 2
  %210 = load i8, i8* %209, align 1
  switch i8 %210, label %211 [
    i8 8, label %225
    i8 1, label %225
  ]

211:                                              ; preds = %205
  %212 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %199, i64 0, i32 4
  %213 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %199, i64 0, i32 5
  %214 = select i1 %197, %"class.blink::Length"* %212, %"class.blink::Length"* %213
  %215 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %214, i64 0, i32 2
  %216 = load i8, i8* %215, align 1
  switch i8 %216, label %217 [
    i8 8, label %225
    i8 1, label %225
  ]

217:                                              ; preds = %211
  %218 = icmp eq i8 %204, 0
  br i1 %218, label %219, label %225

219:                                              ; preds = %217
  %220 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %221 = load i32, i32* %220, align 8
  %222 = and i32 %221, 1572864
  %223 = icmp ne i32 %222, 0
  %224 = zext i1 %223 to i8
  br label %225

225:                                              ; preds = %211, %211, %205, %205, %190, %190, %217, %219
  %226 = phi i8 [ 1, %211 ], [ 1, %205 ], [ 1, %190 ], [ 0, %217 ], [ %224, %219 ], [ 1, %190 ], [ 1, %205 ], [ 1, %211 ]
  %227 = shl i64 %192, 32
  %228 = zext i32 %191 to i64
  %229 = or i64 %227, %228
  %230 = insertvalue { i64, i8 } undef, i64 %229, 0
  %231 = insertvalue { i64, i8 } %230, i8 %226, 1
  ret { i64, i8 } %231
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i8 } @_ZN5blink42ComputeMinAndMaxContentContributionForSelfERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32)) local_unnamed_addr #2 {
  %3 = alloca %"class.absl::optional.1820", align 4
  %4 = alloca %"class.absl::optional.1820", align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.absl::optional.1820", align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 8
  %10 = alloca i32, align 4
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 5, i32 0
  %15 = bitcast %"class.blink::ComputedStyle"** %14 to %"class.blink::ComputedStyleBase"**
  %16 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %16, i64 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = lshr i160 %19, 102
  %21 = trunc i160 %20 to i8
  %22 = and i8 %21, 3
  %23 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %0, i64 0, i32 0, i32 1
  %24 = load i8, i8* %23, align 8
  %25 = and i8 %24, 1
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %55

27:                                               ; preds = %2
  %28 = bitcast %"class.blink::LayoutObject"* %13 to i1 (%"class.blink::LayoutObject"*, i32)***
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %13, i32 44) #13
  br i1 %32, label %33, label %55

33:                                               ; preds = %27
  %34 = load i8, i8* %23, align 8
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %51

37:                                               ; preds = %33
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %39 = bitcast %"class.blink::LayoutObject"* %38 to i1 (%"class.blink::LayoutObject"*, i32)***
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, i64 92
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutObject"* %38, i32 44) #13
  br i1 %43, label %44, label %51

44:                                               ; preds = %37
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %46 = bitcast %"class.blink::LayoutObject"* %45 to i1 (%"class.blink::LayoutObject"*, i32)***
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %46, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* %45, i32 30) #13
  br i1 %50, label %55, label %51

51:                                               ; preds = %33, %37, %44
  %52 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %0, i8 zeroext %22, i32 0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, i64 0) #13
  %53 = extractvalue { i64, i8 } %52, 0
  %54 = extractvalue { i64, i8 } %52, 1
  br label %423

55:                                               ; preds = %2, %44, %27
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %57 = bitcast %"class.blink::LayoutObject"* %56 to i1 (%"class.blink::LayoutObject"*, i32)***
  %58 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %57, align 8
  %59 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, i64 92
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, align 8
  %61 = tail call zeroext i1 %60(%"class.blink::LayoutObject"* %56, i32 39) #13
  br i1 %61, label %62, label %66

62:                                               ; preds = %55
  %63 = tail call fastcc { i64, i8 } @_ZN5blink12_GLOBAL__N_146ComputeMinAndMaxContentContributionForReplacedERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceE(%"class.blink::NGBlockNode"* dereferenceable(16) %0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1)
  %64 = extractvalue { i64, i8 } %63, 0
  %65 = extractvalue { i64, i8 } %63, 1
  br label %423

66:                                               ; preds = %55
  %67 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %67)
  %68 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68)
  %69 = bitcast { i64, i64 }* %11 to %"struct.blink::NGBoxStrut"*
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %70, i64 0, i32 5, i32 0
  %72 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %72, i64 0, i32 0, i32 9
  %74 = bitcast [20 x i8]* %73 to i160*
  %75 = load i160, i160* %74, align 8
  %76 = lshr i160 %75, 102
  %77 = trunc i160 %76 to i8
  %78 = and i8 %77, 3
  %79 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %79) #13
  %80 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %81 = tail call { i64, i64 } @_ZN5blink14ComputeBordersERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::NGBlockNode"* dereferenceable(16) %0) #13
  %82 = extractvalue { i64, i64 } %81, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = tail call { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %72) #13
  %85 = extractvalue { i64, i64 } %84, 0
  %86 = trunc i64 %85 to i32
  %87 = lshr i64 %85, 32
  %88 = trunc i64 %87 to i32
  %89 = extractvalue { i64, i64 } %84, 1
  %90 = trunc i64 %82 to i32
  %91 = lshr i64 %82, 32
  %92 = trunc i64 %91 to i32
  %93 = icmp slt i32 %86, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %86) #13
  %96 = extractvalue { i32, i1 } %95, 1
  %97 = extractvalue { i32, i1 } %95, 0
  %98 = select i1 %96, i32 %94, i32 %97, !prof !2
  %99 = icmp slt i32 %88, 0
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %88) #13
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %100, i32 %103, !prof !2
  %105 = trunc i64 %83 to i32
  %106 = trunc i64 %89 to i32
  %107 = icmp slt i32 %106, 0
  %108 = select i1 %107, i32 -2147483648, i32 2147483647
  %109 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %106) #13
  %110 = extractvalue { i32, i1 } %109, 1
  %111 = extractvalue { i32, i1 } %109, 0
  %112 = select i1 %110, i32 %108, i32 %111, !prof !2
  %113 = zext i32 %112 to i64
  %114 = lshr i64 %83, 32
  %115 = trunc i64 %114 to i32
  %116 = lshr i64 %89, 32
  %117 = trunc i64 %116 to i32
  %118 = icmp slt i32 %117, 0
  %119 = select i1 %118, i32 -2147483648, i32 2147483647
  %120 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %115, i32 %117) #13
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !2
  %124 = zext i32 %123 to i64
  %125 = shl nuw i64 %124, 32
  %126 = or i64 %125, %113
  %127 = zext i32 %104 to i64
  %128 = shl nuw i64 %127, 32
  %129 = zext i32 %98 to i64
  %130 = or i64 %128, %129
  %131 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 %130, i64* %131, align 8
  store i64 %126, i64* %80, align 8
  store i32 0, i32* %9, align 8
  store i32 0, i32* %10, align 4
  %132 = icmp eq i8 %22, 0
  %133 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %72, i64 0, i32 0, i32 5, i32 0, i32 0
  %134 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %134, i64 0, i32 8
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %134, i64 0, i32 3
  %137 = select i1 %132, %"class.blink::Length"* %135, %"class.blink::Length"* %136
  %138 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %137, i64 0, i32 2
  %139 = load i8, i8* %138, align 1
  switch i8 %139, label %147 [
    i8 0, label %140
    i8 8, label %140
    i8 1, label %140
    i8 6, label %140
    i8 7, label %140
  ]

140:                                              ; preds = %66, %66, %66, %66, %66
  %141 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %0, i8 zeroext %22, i32 0, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, i64 0) #13
  %142 = extractvalue { i64, i8 } %141, 0
  %143 = extractvalue { i64, i8 } %141, 1
  %144 = trunc i64 %142 to i32
  store i32 %144, i32* %9, align 8
  %145 = lshr i64 %142, 32
  %146 = trunc i64 %145 to i32
  store i32 %146, i32* %10, align 4
  br label %201

147:                                              ; preds = %66
  %148 = icmp ne i8 %22, 0
  %149 = icmp eq i8 %78, 0
  %150 = xor i1 %148, %149
  br i1 %150, label %151, label %164

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %152) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %152, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %152, align 4
  %153 = add i8 %139, -3
  %154 = icmp ult i8 %153, 3
  br i1 %154, label %155, label %162

155:                                              ; preds = %151
  %156 = icmp eq i8 %139, 5
  %157 = zext i1 %156 to i32
  %158 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %0, i8 zeroext %22, i32 %157, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, i64 0) #13
  %159 = extractvalue { i64, i8 } %158, 0
  %160 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %161 = bitcast %union.anon.1824* %160 to i64*
  store i64 %159, i64* %161, align 4
  store i8 1, i8* %152, align 4
  br label %162

162:                                              ; preds = %155, %151
  %163 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %72, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %69, %"class.absl::optional.1820"* nonnull dereferenceable(12) %3, %"class.blink::Length"* dereferenceable(8) %137, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %152) #13
  store i32 %163, i32* %9, align 8
  store i32 %163, i32* %10, align 4
  br label %201

164:                                              ; preds = %147
  switch i8 %139, label %196 [
    i8 5, label %189
    i8 8, label %165
    i8 1, label %165
    i8 3, label %189
    i8 4, label %189
  ]

165:                                              ; preds = %164, %164
  %166 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = lshr i32 %167, 28
  %169 = and i32 %168, 3
  switch i32 %169, label %170 [
    i32 0, label %171
    i32 1, label %188
    i32 2, label %181
    i32 3, label %173
  ]

170:                                              ; preds = %165
  unreachable

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  br label %177

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %175 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %174, align 8
  %176 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %175, i64 0, i32 0, i32 1, i32 0
  br label %177

177:                                              ; preds = %173, %171
  %178 = phi i32* [ %176, %173 ], [ %172, %171 ]
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, -64
  br i1 %180, label %181, label %188, !prof !2

181:                                              ; preds = %177, %165
  %182 = icmp eq i8 %139, 5
  %183 = zext i1 %182 to i32
  %184 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %0, i8 zeroext %22, i32 %183, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, i64 0) #13
  %185 = extractvalue { i64, i8 } %184, 0
  %186 = lshr i64 %185, 32
  %187 = trunc i64 %186 to i32
  br label %199

188:                                              ; preds = %177, %165
  switch i8 %139, label %196 [
    i8 3, label %189
    i8 4, label %189
    i8 7, label %189
    i8 5, label %189
  ]

189:                                              ; preds = %188, %188, %188, %188, %164, %164, %164
  %190 = icmp eq i8 %139, 5
  %191 = zext i1 %190 to i32
  %192 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %0, i8 zeroext %22, i32 %191, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, i64 0) #13
  %193 = extractvalue { i64, i8 } %192, 0
  %194 = lshr i64 %193, 32
  %195 = trunc i64 %194 to i32
  br label %196

196:                                              ; preds = %189, %188, %164
  %197 = phi i32 [ %195, %189 ], [ -64, %188 ], [ -64, %164 ]
  %198 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %72, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %69, %"class.blink::Length"* dereferenceable(8) %137, i32 %197, i32 0, %"class.blink::LayoutUnit"* null) #13
  br label %199

199:                                              ; preds = %196, %181
  %200 = phi i32 [ %187, %181 ], [ %198, %196 ]
  store i32 %200, i32* %9, align 8
  store i32 %200, i32* %10, align 4
  br label %201

201:                                              ; preds = %199, %162, %140
  %202 = phi i32 [ %146, %140 ], [ %163, %162 ], [ %200, %199 ]
  %203 = phi i32 [ %144, %140 ], [ %163, %162 ], [ %200, %199 ]
  %204 = phi i8 [ %143, %140 ], [ 0, %162 ], [ 0, %199 ]
  %205 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %133, align 8
  br i1 %132, label %206, label %209

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %205, i64 0, i32 5
  %208 = icmp eq i8 %78, 0
  br i1 %208, label %212, label %251

209:                                              ; preds = %201
  %210 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %205, i64 0, i32 4
  %211 = icmp eq i8 %78, 0
  br i1 %211, label %251, label %212

212:                                              ; preds = %209, %206
  %213 = phi %"class.blink::Length"* [ %207, %206 ], [ %210, %209 ]
  %214 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %213, i64 0, i32 2
  %215 = load i8, i8* %214, align 1
  switch i8 %215, label %239 [
    i8 12, label %278
    i8 8, label %216
    i8 1, label %216
    i8 6, label %232
  ], !prof !5

216:                                              ; preds = %212, %212
  %217 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %218 = load i32, i32* %217, align 8
  %219 = lshr i32 %218, 26
  %220 = and i32 %219, 3
  switch i32 %220, label %221 [
    i32 0, label %222
    i32 1, label %239
    i32 2, label %278
    i32 3, label %224
  ]

221:                                              ; preds = %216
  unreachable

222:                                              ; preds = %216
  %223 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 0, i32 0
  br label %228

224:                                              ; preds = %216
  %225 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %226 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %225 to i32**
  %227 = load i32*, i32** %226, align 8
  br label %228

228:                                              ; preds = %224, %222
  %229 = phi i32* [ %227, %224 ], [ %223, %222 ]
  %230 = load i32, i32* %229, align 8
  %231 = icmp eq i32 %230, -64
  br i1 %231, label %278, label %239, !prof !3

232:                                              ; preds = %212
  %233 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = trunc i64 %234 to i32
  %236 = icmp eq i32 %235, -64
  br i1 %236, label %278, label %237, !prof !3

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %238) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %238, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %238, align 4
  br label %248

239:                                              ; preds = %228, %216, %212
  %240 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %240) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %240, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %240, align 4
  switch i8 %215, label %248 [
    i8 3, label %241
    i8 4, label %241
    i8 7, label %241
    i8 5, label %241
  ]

241:                                              ; preds = %239, %239, %239, %239
  %242 = icmp eq i8 %215, 5
  %243 = zext i1 %242 to i32
  %244 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %0, i8 zeroext %22, i32 %243, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, i64 0) #13
  %245 = extractvalue { i64, i8 } %244, 0
  %246 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %247 = bitcast %union.anon.1824* %246 to i64*
  store i64 %245, i64* %247, align 4
  store i8 1, i8* %240, align 4
  br label %248

248:                                              ; preds = %241, %239, %237
  %249 = phi i8* [ %240, %241 ], [ %238, %237 ], [ %240, %239 ]
  %250 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %72, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %69, %"class.absl::optional.1820"* nonnull dereferenceable(12) %4, %"class.blink::Length"* dereferenceable(8) %213, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* %249) #13
  br label %278

251:                                              ; preds = %209, %206
  %252 = phi %"class.blink::Length"* [ %207, %206 ], [ %210, %209 ]
  %253 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %252, i64 0, i32 2
  %254 = load i8, i8* %253, align 1
  switch i8 %254, label %276 [
    i8 0, label %278
    i8 3, label %278
    i8 4, label %278
    i8 5, label %278
    i8 7, label %278
    i8 12, label %278
    i8 8, label %255
    i8 1, label %255
    i8 6, label %271
  ]

255:                                              ; preds = %251, %251
  %256 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = lshr i32 %257, 28
  %259 = and i32 %258, 3
  switch i32 %259, label %260 [
    i32 0, label %261
    i32 1, label %276
    i32 2, label %278
    i32 3, label %263
  ]

260:                                              ; preds = %255
  unreachable

261:                                              ; preds = %255
  %262 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  br label %267

263:                                              ; preds = %255
  %264 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %265 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %264, align 8
  %266 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %265, i64 0, i32 0, i32 1, i32 0
  br label %267

267:                                              ; preds = %263, %261
  %268 = phi i32* [ %266, %263 ], [ %262, %261 ]
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, -64
  br i1 %270, label %278, label %276, !prof !3

271:                                              ; preds = %251
  %272 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = and i64 %273, -4294967296
  %275 = icmp eq i64 %274, -274877906944
  br i1 %275, label %278, label %276, !prof !3

276:                                              ; preds = %271, %267, %255, %251
  %277 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %72, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %69, %"class.blink::Length"* dereferenceable(8) %252, i32 -64, i32 0, %"class.blink::LayoutUnit"* null) #13
  br label %278

278:                                              ; preds = %276, %271, %267, %255, %251, %251, %251, %251, %251, %251, %248, %232, %228, %216, %212
  %279 = phi i1 [ true, %212 ], [ true, %216 ], [ true, %228 ], [ true, %232 ], [ true, %248 ], [ false, %251 ], [ false, %251 ], [ false, %251 ], [ false, %251 ], [ false, %251 ], [ false, %251 ], [ false, %255 ], [ false, %267 ], [ false, %271 ], [ false, %276 ]
  %280 = phi i32 [ 2147483647, %212 ], [ 2147483647, %216 ], [ 2147483647, %228 ], [ 2147483647, %232 ], [ %250, %248 ], [ 2147483647, %251 ], [ 2147483647, %251 ], [ 2147483647, %251 ], [ 2147483647, %251 ], [ 2147483647, %251 ], [ 2147483647, %251 ], [ 2147483647, %255 ], [ 2147483647, %267 ], [ 2147483647, %271 ], [ %277, %276 ]
  %281 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %281)
  store i32 %280, i32* %5, align 4
  %282 = icmp sgt i32 %203, %280
  %283 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %284 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %285 = select i1 %282, %"class.blink::LayoutUnit"* %284, %"class.blink::LayoutUnit"* %283
  %286 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %285, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  store i32 %287, i32* %9, align 8
  %288 = icmp sgt i32 %202, %280
  %289 = bitcast i32* %10 to %"class.blink::LayoutUnit"*
  %290 = select i1 %288, %"class.blink::LayoutUnit"* %284, %"class.blink::LayoutUnit"* %289
  %291 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %290, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  store i32 %292, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %281)
  %293 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %133, align 8
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %293, i64 0, i32 7
  %295 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %293, i64 0, i32 6
  %296 = select i1 %132, %"class.blink::Length"* %294, %"class.blink::Length"* %295
  %297 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %296, i64 0, i32 2
  %298 = load i8, i8* %297, align 1
  br i1 %279, label %299, label %342

299:                                              ; preds = %278
  switch i8 %298, label %330 [
    i8 0, label %323
    i8 8, label %300
    i8 1, label %300
    i8 6, label %316
  ], !prof !5

300:                                              ; preds = %299, %299
  %301 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %302 = load i32, i32* %301, align 8
  %303 = lshr i32 %302, 26
  %304 = and i32 %303, 3
  switch i32 %304, label %305 [
    i32 0, label %306
    i32 1, label %330
    i32 2, label %323
    i32 3, label %308
  ]

305:                                              ; preds = %300
  unreachable

306:                                              ; preds = %300
  %307 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 0, i32 0
  br label %312

308:                                              ; preds = %300
  %309 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %310 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %309 to i32**
  %311 = load i32*, i32** %310, align 8
  br label %312

312:                                              ; preds = %308, %306
  %313 = phi i32* [ %311, %308 ], [ %307, %306 ]
  %314 = load i32, i32* %313, align 8
  %315 = icmp eq i32 %314, -64
  br i1 %315, label %323, label %330, !prof !3

316:                                              ; preds = %299
  %317 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %318 = load i64, i64* %317, align 8
  %319 = trunc i64 %318 to i32
  %320 = icmp eq i32 %319, -64
  br i1 %320, label %323, label %321, !prof !3

321:                                              ; preds = %316
  %322 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %322) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %322, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %322, align 4
  br label %339

323:                                              ; preds = %316, %312, %300, %299
  %324 = icmp slt i32 %104, 0
  %325 = select i1 %324, i32 -2147483648, i32 2147483647
  %326 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %98, i32 %104) #13
  %327 = extractvalue { i32, i1 } %326, 1
  %328 = extractvalue { i32, i1 } %326, 0
  %329 = select i1 %327, i32 %325, i32 %328, !prof !2
  br label %373

330:                                              ; preds = %312, %300, %299
  %331 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %331) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %331, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %331, align 4
  switch i8 %298, label %339 [
    i8 3, label %332
    i8 4, label %332
    i8 7, label %332
    i8 5, label %332
  ]

332:                                              ; preds = %330, %330, %330, %330
  %333 = icmp eq i8 %298, 5
  %334 = zext i1 %333 to i32
  %335 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %0, i8 zeroext %22, i32 %334, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, i64 0) #13
  %336 = extractvalue { i64, i8 } %335, 0
  %337 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %338 = bitcast %union.anon.1824* %337 to i64*
  store i64 %336, i64* %338, align 4
  store i8 1, i8* %331, align 4
  br label %339

339:                                              ; preds = %332, %330, %321
  %340 = phi i8* [ %331, %332 ], [ %322, %321 ], [ %331, %330 ]
  %341 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %72, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %69, %"class.absl::optional.1820"* nonnull dereferenceable(12) %6, %"class.blink::Length"* dereferenceable(8) %296, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* %340) #13
  br label %373

342:                                              ; preds = %278
  switch i8 %298, label %371 [
    i8 0, label %364
    i8 3, label %364
    i8 4, label %364
    i8 5, label %364
    i8 7, label %364
    i8 12, label %364
    i8 8, label %343
    i8 1, label %343
    i8 6, label %359
  ]

343:                                              ; preds = %342, %342
  %344 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %345 = load i32, i32* %344, align 8
  %346 = lshr i32 %345, 28
  %347 = and i32 %346, 3
  switch i32 %347, label %348 [
    i32 0, label %349
    i32 1, label %371
    i32 2, label %364
    i32 3, label %351
  ]

348:                                              ; preds = %343
  unreachable

349:                                              ; preds = %343
  %350 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  br label %355

351:                                              ; preds = %343
  %352 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %353 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %352, align 8
  %354 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %353, i64 0, i32 0, i32 1, i32 0
  br label %355

355:                                              ; preds = %351, %349
  %356 = phi i32* [ %354, %351 ], [ %350, %349 ]
  %357 = load i32, i32* %356, align 4
  %358 = icmp eq i32 %357, -64
  br i1 %358, label %364, label %371, !prof !3

359:                                              ; preds = %342
  %360 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = and i64 %361, -4294967296
  %363 = icmp eq i64 %362, -274877906944
  br i1 %363, label %364, label %371, !prof !3

364:                                              ; preds = %359, %355, %343, %342, %342, %342, %342, %342, %342
  %365 = icmp slt i32 %123, 0
  %366 = select i1 %365, i32 -2147483648, i32 2147483647
  %367 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %123) #13
  %368 = extractvalue { i32, i1 } %367, 1
  %369 = extractvalue { i32, i1 } %367, 0
  %370 = select i1 %368, i32 %366, i32 %369, !prof !2
  br label %373

371:                                              ; preds = %359, %355, %343, %342
  %372 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %72, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %69, %"class.blink::Length"* dereferenceable(8) %296, i32 -64, i32 0, %"class.blink::LayoutUnit"* null) #13
  br label %373

373:                                              ; preds = %371, %364, %339, %323
  %374 = phi i32 [ %329, %323 ], [ %341, %339 ], [ %370, %364 ], [ %372, %371 ]
  %375 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %375)
  store i32 %374, i32* %7, align 4
  %376 = icmp slt i32 %287, %374
  %377 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %378 = select i1 %376, %"class.blink::LayoutUnit"* %377, %"class.blink::LayoutUnit"* %283
  %379 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %378, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  store i32 %380, i32* %9, align 8
  %381 = icmp slt i32 %292, %374
  %382 = select i1 %381, %"class.blink::LayoutUnit"* %377, %"class.blink::LayoutUnit"* %289
  %383 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %382, i64 0, i32 0
  %384 = load i32, i32* %383, align 4
  store i32 %384, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %375)
  %385 = load i8, i8* %23, align 8
  %386 = and i8 %385, 1
  %387 = icmp eq i8 %386, 0
  br i1 %387, label %388, label %416

388:                                              ; preds = %373
  %389 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %390 = bitcast %"class.blink::LayoutObject"* %389 to i1 (%"class.blink::LayoutObject"*, i32)***
  %391 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %390, align 8
  %392 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %391, i64 92
  %393 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %392, align 8
  %394 = tail call zeroext i1 %393(%"class.blink::LayoutObject"* %389, i32 44) #13
  br i1 %394, label %395, label %416

395:                                              ; preds = %388
  %396 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %397 = bitcast %"class.blink::LayoutObject"* %396 to i1 (%"class.blink::LayoutObject"*, i32)***
  %398 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %397, align 8
  %399 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %398, i64 92
  %400 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %399, align 8
  %401 = tail call zeroext i1 %400(%"class.blink::LayoutObject"* %396, i32 30) #13
  br i1 %401, label %402, label %416

402:                                              ; preds = %395
  %403 = tail call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %0, i8 zeroext %22, i32 1, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, i64 0) #13
  %404 = extractvalue { i64, i8 } %403, 0
  %405 = trunc i64 %404 to i32
  %406 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %406)
  store i32 %405, i32* %8, align 4
  %407 = icmp slt i32 %380, %405
  %408 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %409 = select i1 %407, %"class.blink::LayoutUnit"* %408, %"class.blink::LayoutUnit"* %283
  %410 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %409, i64 0, i32 0
  %411 = load i32, i32* %410, align 4
  store i32 %411, i32* %9, align 8
  %412 = icmp slt i32 %384, %405
  %413 = select i1 %412, %"class.blink::LayoutUnit"* %408, %"class.blink::LayoutUnit"* %289
  %414 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %413, i64 0, i32 0
  %415 = load i32, i32* %414, align 4
  store i32 %415, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %406)
  br label %416

416:                                              ; preds = %373, %388, %395, %402
  %417 = phi i32 [ %384, %373 ], [ %384, %388 ], [ %415, %402 ], [ %384, %395 ]
  %418 = phi i32 [ %380, %373 ], [ %380, %388 ], [ %411, %402 ], [ %380, %395 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %79) #13
  %419 = zext i32 %417 to i64
  %420 = shl nuw i64 %419, 32
  %421 = zext i32 %418 to i64
  %422 = or i64 %420, %421
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %67)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68)
  br label %423

423:                                              ; preds = %416, %62, %51
  %424 = phi i64 [ %64, %62 ], [ %422, %416 ], [ %53, %51 ]
  %425 = phi i8 [ %65, %62 ], [ %204, %416 ], [ %54, %51 ]
  %426 = insertvalue { i64, i8 } undef, i64 %424, 0
  %427 = insertvalue { i64, i8 } %426, i8 %425, 1
  ret { i64, i8 } %427
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink42ComputeMinAndMaxContentContributionForTestENS_11WritingModeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_11MinMaxSizesE(i8 zeroext, %"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::MinMaxSizes"* dereferenceable(8)) local_unnamed_addr #2 {
  %5 = alloca %"class.absl::optional.1820", align 4
  %6 = alloca %"class.absl::optional.1820", align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.absl::optional.1820", align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 8
  %12 = alloca i32, align 4
  %13 = alloca { i64, i64 }, align 8
  %14 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14)
  %15 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15)
  %16 = bitcast { i64, i64 }* %13 to %"struct.blink::NGBoxStrut"*
  %17 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::LayoutObject"**
  %18 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = lshr i160 %23, 102
  %25 = trunc i160 %24 to i8
  %26 = and i8 %25, 3
  %27 = bitcast { i64, i64 }* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #13
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 1
  %29 = tail call { i64, i64 } @_ZN5blink14ComputeBordersERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::NGBlockNode"* dereferenceable(16) %1) #13
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = extractvalue { i64, i64 } %29, 1
  %32 = tail call { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %20) #13
  %33 = extractvalue { i64, i64 } %32, 0
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = extractvalue { i64, i64 } %32, 1
  %38 = trunc i64 %30 to i32
  %39 = lshr i64 %30, 32
  %40 = trunc i64 %39 to i32
  %41 = icmp slt i32 %34, 0
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %34) #13
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !2
  %47 = icmp slt i32 %36, 0
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %40, i32 %36) #13
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !2
  %53 = trunc i64 %31 to i32
  %54 = trunc i64 %37 to i32
  %55 = icmp slt i32 %54, 0
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %54) #13
  %58 = extractvalue { i32, i1 } %57, 1
  %59 = extractvalue { i32, i1 } %57, 0
  %60 = select i1 %58, i32 %56, i32 %59, !prof !2
  %61 = zext i32 %60 to i64
  %62 = lshr i64 %31, 32
  %63 = trunc i64 %62 to i32
  %64 = lshr i64 %37, 32
  %65 = trunc i64 %64 to i32
  %66 = icmp slt i32 %65, 0
  %67 = select i1 %66, i32 -2147483648, i32 2147483647
  %68 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %63, i32 %65) #13
  %69 = extractvalue { i32, i1 } %68, 1
  %70 = extractvalue { i32, i1 } %68, 0
  %71 = select i1 %69, i32 %67, i32 %70, !prof !2
  %72 = zext i32 %71 to i64
  %73 = shl nuw i64 %72, 32
  %74 = or i64 %73, %61
  %75 = zext i32 %52 to i64
  %76 = shl nuw i64 %75, 32
  %77 = zext i32 %46 to i64
  %78 = or i64 %76, %77
  %79 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %13, i64 0, i32 0
  store i64 %78, i64* %79, align 8
  store i64 %74, i64* %28, align 8
  store i32 0, i32* %11, align 8
  store i32 0, i32* %12, align 4
  %80 = icmp eq i8 %0, 0
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 5, i32 0, i32 0
  %82 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %82, i64 0, i32 8
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %82, i64 0, i32 3
  %85 = select i1 %80, %"class.blink::Length"* %83, %"class.blink::Length"* %84
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %85, i64 0, i32 2
  %87 = load i8, i8* %86, align 1
  switch i8 %87, label %94 [
    i8 0, label %88
    i8 8, label %88
    i8 1, label %88
    i8 6, label %88
    i8 7, label %88
  ]

88:                                               ; preds = %4, %4, %4, %4, %4
  %89 = bitcast %"struct.blink::MinMaxSizes"* %3 to i64*
  %90 = load i64, i64* %89, align 4
  %91 = trunc i64 %90 to i32
  store i32 %91, i32* %11, align 8
  %92 = lshr i64 %90, 32
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %12, align 4
  br label %142

94:                                               ; preds = %4
  %95 = icmp ne i8 %0, 0
  %96 = icmp eq i8 %26, 0
  %97 = xor i1 %95, %96
  br i1 %97, label %98, label %109

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %99) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %99, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %99, align 4
  %100 = add i8 %87, -3
  %101 = icmp ult i8 %100, 3
  br i1 %101, label %102, label %107

102:                                              ; preds = %98
  %103 = bitcast %"struct.blink::MinMaxSizes"* %3 to i64*
  %104 = load i64, i64* %103, align 4
  %105 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %106 = bitcast %union.anon.1824* %105 to i64*
  store i64 %104, i64* %106, align 4
  store i8 1, i8* %99, align 4
  br label %107

107:                                              ; preds = %102, %98
  %108 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %20, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %16, %"class.absl::optional.1820"* nonnull dereferenceable(12) %5, %"class.blink::Length"* dereferenceable(8) %85, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %99) #13
  store i32 %108, i32* %11, align 8
  store i32 %108, i32* %12, align 4
  br label %142

109:                                              ; preds = %94
  switch i8 %87, label %137 [
    i8 5, label %132
    i8 8, label %110
    i8 1, label %110
    i8 3, label %132
    i8 4, label %132
  ]

110:                                              ; preds = %109, %109
  %111 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = lshr i32 %112, 28
  %114 = and i32 %113, 3
  switch i32 %114, label %115 [
    i32 0, label %116
    i32 1, label %131
    i32 2, label %126
    i32 3, label %118
  ]

115:                                              ; preds = %110
  unreachable

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  br label %122

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %120 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %119, align 8
  %121 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %120, i64 0, i32 0, i32 1, i32 0
  br label %122

122:                                              ; preds = %118, %116
  %123 = phi i32* [ %121, %118 ], [ %117, %116 ]
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, -64
  br i1 %125, label %126, label %131, !prof !2

126:                                              ; preds = %122, %110
  %127 = bitcast %"struct.blink::MinMaxSizes"* %3 to i64*
  %128 = load i64, i64* %127, align 4
  %129 = lshr i64 %128, 32
  %130 = trunc i64 %129 to i32
  br label %140

131:                                              ; preds = %122, %110
  switch i8 %87, label %137 [
    i8 3, label %132
    i8 4, label %132
    i8 7, label %132
    i8 5, label %132
  ]

132:                                              ; preds = %131, %131, %131, %131, %109, %109, %109
  %133 = bitcast %"struct.blink::MinMaxSizes"* %3 to i64*
  %134 = load i64, i64* %133, align 4
  %135 = lshr i64 %134, 32
  %136 = trunc i64 %135 to i32
  br label %137

137:                                              ; preds = %132, %131, %109
  %138 = phi i32 [ %136, %132 ], [ -64, %131 ], [ -64, %109 ]
  %139 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %20, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %16, %"class.blink::Length"* dereferenceable(8) %85, i32 %138, i32 0, %"class.blink::LayoutUnit"* null) #13
  br label %140

140:                                              ; preds = %137, %126
  %141 = phi i32 [ %130, %126 ], [ %139, %137 ]
  store i32 %141, i32* %11, align 8
  store i32 %141, i32* %12, align 4
  br label %142

142:                                              ; preds = %140, %107, %88
  %143 = phi i32 [ %108, %107 ], [ %141, %140 ], [ %93, %88 ]
  %144 = phi i32 [ %108, %107 ], [ %141, %140 ], [ %91, %88 ]
  %145 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %81, align 8
  br i1 %80, label %146, label %149

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %145, i64 0, i32 5
  %148 = icmp eq i8 %26, 0
  br i1 %148, label %152, label %189

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %145, i64 0, i32 4
  %151 = icmp eq i8 %26, 0
  br i1 %151, label %189, label %152

152:                                              ; preds = %149, %146
  %153 = phi %"class.blink::Length"* [ %147, %146 ], [ %150, %149 ]
  %154 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %153, i64 0, i32 2
  %155 = load i8, i8* %154, align 1
  switch i8 %155, label %179 [
    i8 12, label %216
    i8 8, label %156
    i8 1, label %156
    i8 6, label %172
  ], !prof !5

156:                                              ; preds = %152, %152
  %157 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %158 = load i32, i32* %157, align 8
  %159 = lshr i32 %158, 26
  %160 = and i32 %159, 3
  switch i32 %160, label %161 [
    i32 0, label %162
    i32 1, label %179
    i32 2, label %216
    i32 3, label %164
  ]

161:                                              ; preds = %156
  unreachable

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 0, i32 0
  br label %168

164:                                              ; preds = %156
  %165 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %166 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %165 to i32**
  %167 = load i32*, i32** %166, align 8
  br label %168

168:                                              ; preds = %164, %162
  %169 = phi i32* [ %167, %164 ], [ %163, %162 ]
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, -64
  br i1 %171, label %216, label %179, !prof !3

172:                                              ; preds = %152
  %173 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = trunc i64 %174 to i32
  %176 = icmp eq i32 %175, -64
  br i1 %176, label %216, label %177, !prof !3

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %178) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %178, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %178, align 4
  br label %186

179:                                              ; preds = %168, %156, %152
  %180 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %180) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %180, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %180, align 4
  switch i8 %155, label %186 [
    i8 3, label %181
    i8 4, label %181
    i8 7, label %181
    i8 5, label %181
  ]

181:                                              ; preds = %179, %179, %179, %179
  %182 = bitcast %"struct.blink::MinMaxSizes"* %3 to i64*
  %183 = load i64, i64* %182, align 4
  %184 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %6, i64 0, i32 0, i32 0, i32 0, i32 1
  %185 = bitcast %union.anon.1824* %184 to i64*
  store i64 %183, i64* %185, align 4
  store i8 1, i8* %180, align 4
  br label %186

186:                                              ; preds = %181, %179, %177
  %187 = phi i8* [ %180, %181 ], [ %178, %177 ], [ %180, %179 ]
  %188 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %20, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %16, %"class.absl::optional.1820"* nonnull dereferenceable(12) %6, %"class.blink::Length"* dereferenceable(8) %153, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* %187) #13
  br label %216

189:                                              ; preds = %149, %146
  %190 = phi %"class.blink::Length"* [ %147, %146 ], [ %150, %149 ]
  %191 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %190, i64 0, i32 2
  %192 = load i8, i8* %191, align 1
  switch i8 %192, label %214 [
    i8 0, label %216
    i8 3, label %216
    i8 4, label %216
    i8 5, label %216
    i8 7, label %216
    i8 12, label %216
    i8 8, label %193
    i8 1, label %193
    i8 6, label %209
  ]

193:                                              ; preds = %189, %189
  %194 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %195 = load i32, i32* %194, align 8
  %196 = lshr i32 %195, 28
  %197 = and i32 %196, 3
  switch i32 %197, label %198 [
    i32 0, label %199
    i32 1, label %214
    i32 2, label %216
    i32 3, label %201
  ]

198:                                              ; preds = %193
  unreachable

199:                                              ; preds = %193
  %200 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  br label %205

201:                                              ; preds = %193
  %202 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %203 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %202, align 8
  %204 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %203, i64 0, i32 0, i32 1, i32 0
  br label %205

205:                                              ; preds = %201, %199
  %206 = phi i32* [ %204, %201 ], [ %200, %199 ]
  %207 = load i32, i32* %206, align 4
  %208 = icmp eq i32 %207, -64
  br i1 %208, label %216, label %214, !prof !3

209:                                              ; preds = %189
  %210 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = and i64 %211, -4294967296
  %213 = icmp eq i64 %212, -274877906944
  br i1 %213, label %216, label %214, !prof !3

214:                                              ; preds = %209, %205, %193, %189
  %215 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %20, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %16, %"class.blink::Length"* dereferenceable(8) %190, i32 -64, i32 0, %"class.blink::LayoutUnit"* null) #13
  br label %216

216:                                              ; preds = %214, %209, %205, %193, %189, %189, %189, %189, %189, %189, %186, %172, %168, %156, %152
  %217 = phi i1 [ true, %152 ], [ true, %156 ], [ true, %168 ], [ true, %172 ], [ true, %186 ], [ false, %189 ], [ false, %189 ], [ false, %189 ], [ false, %189 ], [ false, %189 ], [ false, %189 ], [ false, %193 ], [ false, %205 ], [ false, %209 ], [ false, %214 ]
  %218 = phi i32 [ 2147483647, %152 ], [ 2147483647, %156 ], [ 2147483647, %168 ], [ 2147483647, %172 ], [ %188, %186 ], [ 2147483647, %189 ], [ 2147483647, %189 ], [ 2147483647, %189 ], [ 2147483647, %189 ], [ 2147483647, %189 ], [ 2147483647, %189 ], [ 2147483647, %193 ], [ 2147483647, %205 ], [ 2147483647, %209 ], [ %215, %214 ]
  %219 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %219)
  store i32 %218, i32* %7, align 4
  %220 = icmp sgt i32 %144, %218
  %221 = bitcast i32* %11 to %"class.blink::LayoutUnit"*
  %222 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %223 = select i1 %220, %"class.blink::LayoutUnit"* %222, %"class.blink::LayoutUnit"* %221
  %224 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %223, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  store i32 %225, i32* %11, align 8
  %226 = icmp sgt i32 %143, %218
  %227 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %228 = select i1 %226, %"class.blink::LayoutUnit"* %222, %"class.blink::LayoutUnit"* %227
  %229 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %228, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  store i32 %230, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %219)
  %231 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %81, align 8
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %231, i64 0, i32 7
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %231, i64 0, i32 6
  %234 = select i1 %80, %"class.blink::Length"* %232, %"class.blink::Length"* %233
  %235 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %234, i64 0, i32 2
  %236 = load i8, i8* %235, align 1
  br i1 %217, label %237, label %278

237:                                              ; preds = %216
  switch i8 %236, label %268 [
    i8 0, label %261
    i8 8, label %238
    i8 1, label %238
    i8 6, label %254
  ], !prof !5

238:                                              ; preds = %237, %237
  %239 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %240 = load i32, i32* %239, align 8
  %241 = lshr i32 %240, 26
  %242 = and i32 %241, 3
  switch i32 %242, label %243 [
    i32 0, label %244
    i32 1, label %268
    i32 2, label %261
    i32 3, label %246
  ]

243:                                              ; preds = %238
  unreachable

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 0, i32 0
  br label %250

246:                                              ; preds = %238
  %247 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %248 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %247 to i32**
  %249 = load i32*, i32** %248, align 8
  br label %250

250:                                              ; preds = %246, %244
  %251 = phi i32* [ %249, %246 ], [ %245, %244 ]
  %252 = load i32, i32* %251, align 8
  %253 = icmp eq i32 %252, -64
  br i1 %253, label %261, label %268, !prof !3

254:                                              ; preds = %237
  %255 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = trunc i64 %256 to i32
  %258 = icmp eq i32 %257, -64
  br i1 %258, label %261, label %259, !prof !3

259:                                              ; preds = %254
  %260 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %260) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %260, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %260, align 4
  br label %275

261:                                              ; preds = %254, %250, %238, %237
  %262 = icmp slt i32 %52, 0
  %263 = select i1 %262, i32 -2147483648, i32 2147483647
  %264 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %46, i32 %52) #13
  %265 = extractvalue { i32, i1 } %264, 1
  %266 = extractvalue { i32, i1 } %264, 0
  %267 = select i1 %265, i32 %263, i32 %266, !prof !2
  br label %309

268:                                              ; preds = %250, %238, %237
  %269 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %269) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %269, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %269, align 4
  switch i8 %236, label %275 [
    i8 3, label %270
    i8 4, label %270
    i8 7, label %270
    i8 5, label %270
  ]

270:                                              ; preds = %268, %268, %268, %268
  %271 = bitcast %"struct.blink::MinMaxSizes"* %3 to i64*
  %272 = load i64, i64* %271, align 4
  %273 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %274 = bitcast %union.anon.1824* %273 to i64*
  store i64 %272, i64* %274, align 4
  store i8 1, i8* %269, align 4
  br label %275

275:                                              ; preds = %270, %268, %259
  %276 = phi i8* [ %269, %270 ], [ %260, %259 ], [ %269, %268 ]
  %277 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %20, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %16, %"class.absl::optional.1820"* nonnull dereferenceable(12) %8, %"class.blink::Length"* dereferenceable(8) %234, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* %276) #13
  br label %309

278:                                              ; preds = %216
  switch i8 %236, label %307 [
    i8 0, label %300
    i8 3, label %300
    i8 4, label %300
    i8 5, label %300
    i8 7, label %300
    i8 12, label %300
    i8 8, label %279
    i8 1, label %279
    i8 6, label %295
  ]

279:                                              ; preds = %278, %278
  %280 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %281 = load i32, i32* %280, align 8
  %282 = lshr i32 %281, 28
  %283 = and i32 %282, 3
  switch i32 %283, label %284 [
    i32 0, label %285
    i32 1, label %307
    i32 2, label %300
    i32 3, label %287
  ]

284:                                              ; preds = %279
  unreachable

285:                                              ; preds = %279
  %286 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 0, i32 1, i32 0
  br label %291

287:                                              ; preds = %279
  %288 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 1, i32 0
  %289 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %288, align 8
  %290 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %289, i64 0, i32 0, i32 1, i32 0
  br label %291

291:                                              ; preds = %287, %285
  %292 = phi i32* [ %290, %287 ], [ %286, %285 ]
  %293 = load i32, i32* %292, align 4
  %294 = icmp eq i32 %293, -64
  br i1 %294, label %300, label %307, !prof !3

295:                                              ; preds = %278
  %296 = bitcast %"class.blink::NGConstraintSpace"* %2 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = and i64 %297, -4294967296
  %299 = icmp eq i64 %298, -274877906944
  br i1 %299, label %300, label %307, !prof !3

300:                                              ; preds = %295, %291, %279, %278, %278, %278, %278, %278, %278
  %301 = icmp slt i32 %71, 0
  %302 = select i1 %301, i32 -2147483648, i32 2147483647
  %303 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %60, i32 %71) #13
  %304 = extractvalue { i32, i1 } %303, 1
  %305 = extractvalue { i32, i1 } %303, 0
  %306 = select i1 %304, i32 %302, i32 %305, !prof !2
  br label %309

307:                                              ; preds = %295, %291, %279, %278
  %308 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %20, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %16, %"class.blink::Length"* dereferenceable(8) %234, i32 -64, i32 0, %"class.blink::LayoutUnit"* null) #13
  br label %309

309:                                              ; preds = %307, %300, %275, %261
  %310 = phi i32 [ %267, %261 ], [ %277, %275 ], [ %306, %300 ], [ %308, %307 ]
  %311 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %311)
  store i32 %310, i32* %9, align 4
  %312 = icmp slt i32 %225, %310
  %313 = bitcast i32* %9 to %"class.blink::LayoutUnit"*
  %314 = select i1 %312, %"class.blink::LayoutUnit"* %313, %"class.blink::LayoutUnit"* %221
  %315 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %314, i64 0, i32 0
  %316 = load i32, i32* %315, align 4
  store i32 %316, i32* %11, align 8
  %317 = icmp slt i32 %230, %310
  %318 = select i1 %317, %"class.blink::LayoutUnit"* %313, %"class.blink::LayoutUnit"* %227
  %319 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %318, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  store i32 %320, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %311)
  %321 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %1, i64 0, i32 0, i32 1
  %322 = load i8, i8* %321, align 8
  %323 = and i8 %322, 1
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %325, label %353

325:                                              ; preds = %309
  %326 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %327 = bitcast %"class.blink::LayoutObject"* %326 to i1 (%"class.blink::LayoutObject"*, i32)***
  %328 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %327, align 8
  %329 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %328, i64 92
  %330 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %329, align 8
  %331 = tail call zeroext i1 %330(%"class.blink::LayoutObject"* %326, i32 44) #13
  br i1 %331, label %332, label %353

332:                                              ; preds = %325
  %333 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %17, align 8
  %334 = bitcast %"class.blink::LayoutObject"* %333 to i1 (%"class.blink::LayoutObject"*, i32)***
  %335 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %334, align 8
  %336 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %335, i64 92
  %337 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %336, align 8
  %338 = tail call zeroext i1 %337(%"class.blink::LayoutObject"* %333, i32 30) #13
  br i1 %338, label %339, label %353

339:                                              ; preds = %332
  %340 = bitcast %"struct.blink::MinMaxSizes"* %3 to i64*
  %341 = load i64, i64* %340, align 4
  %342 = trunc i64 %341 to i32
  %343 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %343)
  store i32 %342, i32* %10, align 4
  %344 = icmp slt i32 %316, %342
  %345 = bitcast i32* %10 to %"class.blink::LayoutUnit"*
  %346 = select i1 %344, %"class.blink::LayoutUnit"* %345, %"class.blink::LayoutUnit"* %221
  %347 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %346, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  store i32 %348, i32* %11, align 8
  %349 = icmp slt i32 %320, %342
  %350 = select i1 %349, %"class.blink::LayoutUnit"* %345, %"class.blink::LayoutUnit"* %227
  %351 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %350, i64 0, i32 0
  %352 = load i32, i32* %351, align 4
  store i32 %352, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %343)
  br label %353

353:                                              ; preds = %309, %325, %332, %339
  %354 = phi i32 [ %320, %309 ], [ %320, %325 ], [ %352, %339 ], [ %320, %332 ]
  %355 = phi i32 [ %316, %309 ], [ %316, %325 ], [ %348, %339 ], [ %316, %332 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #13
  %356 = zext i32 %354 to i64
  %357 = shl nuw i64 %356, 32
  %358 = zext i32 %355 to i64
  %359 = or i64 %357, %358
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15)
  ret i64 %359
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink28ComputeInlineSizeForFragmentERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeERKNS_10NGBoxStrutEPKNS_11MinMaxSizesE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16), %"struct.blink::NGBoxStrut"* dereferenceable(16), %"struct.blink::MinMaxSizes"*) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 2097664
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  br label %38

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %1, i64 0, i32 0, i32 1
  %15 = load i8, i8* %14, align 8
  %16 = and i8 %15, 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %36

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::LayoutObject"**
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = bitcast %"class.blink::LayoutObject"* %20 to i1 (%"class.blink::LayoutObject"*, i32)***
  %22 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, i64 92
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::LayoutObject"* %20, i32 44) #13
  br i1 %25, label %26, label %36

26:                                               ; preds = %18
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %28 = bitcast %"class.blink::LayoutObject"* %27 to i1 (%"class.blink::LayoutObject"*, i32)***
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %28, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %27, i32 30) #13
  br i1 %32, label %33, label %36

33:                                               ; preds = %26
  %34 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::NGTableNode"*
  %35 = tail call i32 @_ZNK5blink11NGTableNode22ComputeTableInlineSizeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutE(%"class.blink::NGTableNode"* %34, %"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2) #13
  br label %38

36:                                               ; preds = %13, %18, %26
  %37 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_136ComputeInlineSizeForFragmentInternalERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeERKNS_10NGBoxStrutEPKNS_11MinMaxSizesE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::NGBlockNode"* dereferenceable(16) %1, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::MinMaxSizes"* %3)
  br label %38

38:                                               ; preds = %36, %33, %9
  %39 = phi i32 [ %12, %9 ], [ %35, %33 ], [ %37, %36 ]
  ret i32 %39
}

declare i32 @_ZNK5blink11NGTableNode22ComputeTableInlineSizeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutE(%"class.blink::NGTableNode"*, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGBoxStrut"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_136ComputeInlineSizeForFragmentInternalERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeERKNS_10NGBoxStrutEPKNS_11MinMaxSizesE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), %"struct.blink::MinMaxSizes"*) unnamed_addr #5 {
  %5 = alloca <2 x float>, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.absl::optional.1820", align 4
  %8 = alloca %"class.absl::optional.1820", align 4
  %9 = alloca %"class.absl::optional.1820", align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 8
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = bitcast i64* %15 to %"class.blink::Length"*
  %17 = alloca i64, align 8
  %18 = bitcast i64* %17 to %"class.blink::Length"*
  %19 = alloca i64, align 8
  %20 = bitcast i64* %19 to %"class.blink::Length"*
  %21 = alloca i64, align 8
  %22 = bitcast i64* %21 to %"class.blink::Length"*
  %23 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::LayoutObject"**
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 5, i32 0
  %26 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 5, i32 0, i32 0
  %28 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %28, i64 0, i32 1, i32 1, i32 0
  %30 = load float, float* %29, align 4
  %31 = fcmp oeq float %30, 0.000000e+00
  br i1 %31, label %45, label %32

32:                                               ; preds = %4
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %28, i64 0, i32 1, i32 1, i32 1
  %34 = load float, float* %33, align 4
  %35 = fcmp oeq float %34, 0.000000e+00
  %36 = fcmp olt float %30, 1.562500e-02
  %37 = or i1 %36, %35
  %38 = fcmp olt float %34, 1.562500e-02
  %39 = or i1 %38, %37
  br i1 %39, label %45, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %28, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 4
  %43 = and i8 %42, 3
  %44 = icmp eq i8 %43, 0
  br label %45

45:                                               ; preds = %4, %32, %40
  %46 = phi i1 [ %44, %40 ], [ true, %32 ], [ true, %4 ]
  %47 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  %48 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %49 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %26, i64 0, i32 0, i32 9
  %50 = bitcast [20 x i8]* %49 to i160*
  %51 = load i160, i160* %50, align 8
  %52 = and i160 %51, 15211807202738752817960438464512
  %53 = icmp eq i160 %52, 0
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %28, i64 0, i32 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %28, i64 0, i32 3
  %56 = select i1 %53, %"class.blink::Length"* %54, %"class.blink::Length"* %55
  %57 = bitcast %"class.blink::Length"* %56 to i64*
  %58 = load i64, i64* %57, align 4
  store i64 %58, i64* %15, align 8
  %59 = and i64 %58, 280375465082880
  %60 = icmp eq i64 %59, 8796093022208
  br i1 %60, label %61, label %65

61:                                               ; preds = %45
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %16) #13
  %62 = load i160, i160* %50, align 8
  %63 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %27, align 8
  %64 = and i160 %62, 15211807202738752817960438464512
  br label %65

65:                                               ; preds = %45, %61
  %66 = phi i160 [ %52, %45 ], [ %64, %61 ]
  %67 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %28, %45 ], [ %63, %61 ]
  %68 = bitcast i64* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #13
  %69 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %18, i64 0, i32 2
  %70 = icmp eq i160 %66, 0
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %67, i64 0, i32 7
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %67, i64 0, i32 6
  %73 = select i1 %70, %"class.blink::Length"* %71, %"class.blink::Length"* %72
  %74 = bitcast %"class.blink::Length"* %73 to i64*
  %75 = load i64, i64* %74, align 4
  store i64 %75, i64* %17, align 8
  %76 = and i64 %75, 280375465082880
  %77 = icmp eq i64 %76, 8796093022208
  br i1 %77, label %78, label %79

78:                                               ; preds = %65
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #13
  br label %79

79:                                               ; preds = %65, %78
  br i1 %46, label %176, label %80

80:                                               ; preds = %79
  %81 = load i8, i8* %48, align 1
  switch i8 %81, label %178 [
    i8 0, label %82
    i8 3, label %87
    i8 4, label %87
  ]

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %84 = load i32, i32* %83, align 8
  %85 = and i32 %84, 393216
  %86 = icmp eq i32 %85, 262144
  br i1 %86, label %176, label %87

87:                                               ; preds = %80, %80, %82
  %88 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %89 = load i32, i32* %88, align 8
  %90 = and i32 %89, 4194304
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %99, label %92

92:                                               ; preds = %87
  %93 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = lshr i64 %94, 32
  %96 = trunc i64 %95 to i32
  %97 = icmp sgt i32 %96, 0
  %98 = select i1 %97, i32 %96, i32 0
  br label %105

99:                                               ; preds = %87
  %100 = and i32 %89, 512
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %176

102:                                              ; preds = %99
  %103 = call fastcc i32 @_ZN5blink12_GLOBAL__N_135ComputeBlockSizeForFragmentInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalISA_EESA_PKSA_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %26, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, i32 -64, i64 0, i32 0) #13
  %104 = icmp eq i32 %103, -64
  br i1 %104, label %176, label %105

105:                                              ; preds = %102, %92
  %106 = phi i32 [ %103, %102 ], [ %98, %92 ]
  %107 = bitcast i64* %6 to %"struct.blink::LogicalSize"*
  %108 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #13
  %109 = bitcast <2 x float>* %5 to %"class.blink::FloatSize"*
  %110 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #13
  %111 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %27, align 8
  %112 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %111, i64 0, i32 1, i32 1
  %113 = bitcast %"class.blink::FloatSize"* %112 to i64*
  %114 = load i64, i64* %113, align 4
  %115 = bitcast <2 x float>* %5 to i64*
  store i64 %114, i64* %115, align 8
  %116 = load i160, i160* %50, align 8
  %117 = and i160 %116, 15211807202738752817960438464512
  %118 = icmp eq i160 %117, 0
  br i1 %118, label %127, label %119

119:                                              ; preds = %105
  %120 = trunc i64 %114 to i32
  %121 = bitcast i32 %120 to float
  %122 = lshr i64 %114, 32
  %123 = trunc i64 %122 to i32
  %124 = bitcast i32 %123 to float
  %125 = insertelement <2 x float> undef, float %124, i32 0
  %126 = insertelement <2 x float> %125, float %121, i32 1
  store <2 x float> %126, <2 x float>* %5, align 8
  br label %127

127:                                              ; preds = %119, %105
  %128 = call i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* nonnull dereferenceable(8) %109) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #13
  store i64 %128, i64* %6, align 8
  %129 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %27, align 8
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %129, i64 0, i32 1, i32 1, i32 0
  %131 = load float, float* %130, align 4
  %132 = fcmp oeq float %131, 0.000000e+00
  br i1 %132, label %152, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %129, i64 0, i32 1, i32 1, i32 1
  %135 = load float, float* %134, align 4
  %136 = fcmp oeq float %135, 0.000000e+00
  %137 = fcmp olt float %131, 1.562500e-02
  %138 = or i1 %137, %136
  %139 = fcmp olt float %135, 1.562500e-02
  %140 = or i1 %139, %138
  br i1 %140, label %152, label %141

141:                                              ; preds = %133
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %129, i64 0, i32 1, i32 0
  %143 = load i8, i8* %142, align 4
  %144 = and i8 %143, 3
  %145 = icmp eq i8 %144, 2
  br i1 %145, label %146, label %152

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %129, i64 0, i32 11
  %148 = load i8, i8* %147, align 4
  %149 = lshr i8 %148, 1
  %150 = and i8 %149, 1
  %151 = zext i8 %150 to i32
  br label %152

152:                                              ; preds = %127, %133, %141, %146
  %153 = phi i32 [ %151, %146 ], [ 1, %141 ], [ 1, %133 ], [ 1, %127 ]
  %154 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %107, i32 %153, i32 %106) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #13
  %155 = icmp eq i32 %154, -64
  br i1 %155, label %176, label %156

156:                                              ; preds = %152
  %157 = load i160, i160* %50, align 8
  %158 = and i160 %157, 15211807202738752817960438464512
  %159 = icmp eq i160 %158, 0
  %160 = select i1 %159, i160 74, i160 77
  %161 = lshr i160 %157, %160
  %162 = and i160 %161, 7
  %163 = icmp eq i160 %162, 2
  %164 = load i8, i8* %69, align 1
  %165 = icmp eq i8 %164, 0
  %166 = and i1 %165, %163
  br i1 %166, label %167, label %227

167:                                              ; preds = %156
  %168 = bitcast i64* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %168) #13
  %169 = bitcast i64* %19 to i32*
  store i32 0, i32* %169, align 8, !alias.scope !6
  %170 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %20, i64 0, i32 1
  store i8 0, i8* %170, align 4, !alias.scope !6
  %171 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %20, i64 0, i32 2
  store i8 5, i8* %171, align 1, !alias.scope !6
  %172 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %20, i64 0, i32 3
  store i8 0, i8* %172, align 2, !alias.scope !6
  %173 = load i64, i64* %19, align 8
  store i64 %173, i64* %17, align 8
  %174 = lshr i64 %173, 40
  %175 = trunc i64 %174 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %168) #13
  br label %227

176:                                              ; preds = %79, %102, %99, %82, %152
  %177 = load i8, i8* %48, align 1
  br label %178

178:                                              ; preds = %176, %80
  %179 = phi i8 [ %177, %176 ], [ %81, %80 ]
  %180 = icmp eq i8 %179, 0
  br i1 %180, label %181, label %202

181:                                              ; preds = %178
  %182 = bitcast i64* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #13
  %183 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %184 = load i32, i32* %183, align 8
  %185 = and i32 %184, 393216
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %192, label %187

187:                                              ; preds = %181
  %188 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %189 = load i64, i64* %188, align 8
  %190 = trunc i64 %189 to i32
  %191 = icmp eq i32 %190, -64
  br i1 %191, label %192, label %193

192:                                              ; preds = %187, %181
  br label %193

193:                                              ; preds = %187, %192
  %194 = phi i8 [ 7, %192 ], [ 6, %187 ]
  %195 = bitcast i64* %21 to i32*
  store i32 0, i32* %195, align 8, !alias.scope !9
  %196 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %22, i64 0, i32 1
  store i8 0, i8* %196, align 4, !alias.scope !9
  %197 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %22, i64 0, i32 2
  store i8 %194, i8* %197, align 1, !alias.scope !9
  %198 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %22, i64 0, i32 3
  store i8 0, i8* %198, align 2, !alias.scope !9
  %199 = load i64, i64* %21, align 8
  store i64 %199, i64* %15, align 8
  %200 = lshr i64 %199, 40
  %201 = trunc i64 %200 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #13
  br label %202

202:                                              ; preds = %193, %178
  %203 = phi i8 [ %201, %193 ], [ %179, %178 ]
  %204 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %204) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %204, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %204, align 4
  switch i8 %203, label %224 [
    i8 3, label %205
    i8 4, label %205
    i8 7, label %205
    i8 5, label %205
  ]

205:                                              ; preds = %202, %202, %202, %202
  %206 = icmp eq %"struct.blink::MinMaxSizes"* %3, null
  br i1 %206, label %210, label %207

207:                                              ; preds = %205
  %208 = bitcast %"struct.blink::MinMaxSizes"* %3 to i64*
  %209 = load i64, i64* %208, align 4
  br label %220

210:                                              ; preds = %205
  %211 = icmp eq i8 %203, 5
  %212 = zext i1 %211 to i32
  %213 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %214 = load i32, i32* %213, align 8
  %215 = lshr i32 %214, 4
  %216 = trunc i32 %215 to i8
  %217 = and i8 %216, 7
  %218 = call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %217, i32 %212, %"class.blink::NGConstraintSpace"* dereferenceable(32) %0, i64 0) #13
  %219 = extractvalue { i64, i8 } %218, 0
  br label %220

220:                                              ; preds = %210, %207
  %221 = phi i64 [ %219, %210 ], [ %209, %207 ]
  %222 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %223 = bitcast %union.anon.1824* %222 to i64*
  store i64 %221, i64* %223, align 4
  store i8 1, i8* %204, align 4
  br label %224

224:                                              ; preds = %202, %220
  %225 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %26, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.absl::optional.1820"* nonnull dereferenceable(12) %7, %"class.blink::Length"* nonnull dereferenceable(8) %16, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %204) #13
  %226 = load i8, i8* %69, align 1
  br label %227

227:                                              ; preds = %156, %167, %224
  %228 = phi i8 [ %226, %224 ], [ %175, %167 ], [ %164, %156 ]
  %229 = phi i32 [ %225, %224 ], [ %154, %167 ], [ %154, %156 ]
  %230 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %230)
  %231 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %231)
  %232 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %233 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %232, i64 0, i32 5, i32 0
  %234 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %233, align 8
  store i32 -1431655766, i32* %11, align 8
  store i32 -1431655766, i32* %12, align 4
  switch i8 %228, label %269 [
    i8 0, label %258
    i8 8, label %235
    i8 1, label %235
    i8 6, label %251
  ], !prof !5

235:                                              ; preds = %227, %227
  %236 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %237 = load i32, i32* %236, align 8
  %238 = lshr i32 %237, 26
  %239 = and i32 %238, 3
  switch i32 %239, label %240 [
    i32 0, label %241
    i32 1, label %269
    i32 2, label %258
    i32 3, label %243
  ]

240:                                              ; preds = %235
  unreachable

241:                                              ; preds = %235
  %242 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  br label %247

243:                                              ; preds = %235
  %244 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %245 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %244 to i32**
  %246 = load i32*, i32** %245, align 8
  br label %247

247:                                              ; preds = %243, %241
  %248 = phi i32* [ %246, %243 ], [ %242, %241 ]
  %249 = load i32, i32* %248, align 8
  %250 = icmp eq i32 %249, -64
  br i1 %250, label %258, label %269, !prof !3

251:                                              ; preds = %227
  %252 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = trunc i64 %253 to i32
  %255 = icmp eq i32 %254, -64
  br i1 %255, label %258, label %256, !prof !3

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %257) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %257, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %257, align 4
  br label %290

258:                                              ; preds = %251, %247, %235, %227
  %259 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 1, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = icmp slt i32 %262, 0
  %264 = select i1 %263, i32 -2147483648, i32 2147483647
  %265 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %260, i32 %262) #13
  %266 = extractvalue { i32, i1 } %265, 1
  %267 = extractvalue { i32, i1 } %265, 0
  %268 = select i1 %266, i32 %264, i32 %267, !prof !2
  br label %293

269:                                              ; preds = %247, %235, %227
  %270 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %270) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %270, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %270, align 4
  switch i8 %228, label %290 [
    i8 3, label %271
    i8 4, label %271
    i8 7, label %271
    i8 5, label %271
  ]

271:                                              ; preds = %269, %269, %269, %269
  %272 = icmp eq %"struct.blink::MinMaxSizes"* %3, null
  br i1 %272, label %276, label %273

273:                                              ; preds = %271
  %274 = bitcast %"struct.blink::MinMaxSizes"* %3 to i64*
  %275 = load i64, i64* %274, align 4
  br label %286

276:                                              ; preds = %271
  %277 = icmp eq i8 %228, 5
  %278 = zext i1 %277 to i32
  %279 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %280 = load i32, i32* %279, align 8
  %281 = lshr i32 %280, 4
  %282 = trunc i32 %281 to i8
  %283 = and i8 %282, 7
  %284 = call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %283, i32 %278, %"class.blink::NGConstraintSpace"* dereferenceable(32) %0, i64 0) #13
  %285 = extractvalue { i64, i8 } %284, 0
  br label %286

286:                                              ; preds = %276, %273
  %287 = phi i64 [ %285, %276 ], [ %275, %273 ]
  %288 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %289 = bitcast %union.anon.1824* %288 to i64*
  store i64 %287, i64* %289, align 4
  store i8 1, i8* %270, align 4
  br label %290

290:                                              ; preds = %286, %269, %256
  %291 = phi i8* [ %270, %286 ], [ %257, %256 ], [ %270, %269 ]
  %292 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %234, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.absl::optional.1820"* nonnull dereferenceable(12) %9, %"class.blink::Length"* nonnull dereferenceable(8) %18, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* %291) #13
  br label %293

293:                                              ; preds = %290, %258
  %294 = phi i32 [ %268, %258 ], [ %292, %290 ]
  store i32 %294, i32* %11, align 8
  %295 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %234, i64 0, i32 0, i32 9
  %296 = bitcast [20 x i8]* %295 to i160*
  %297 = load i160, i160* %296, align 8
  %298 = and i160 %297, 15211807202738752817960438464512
  %299 = icmp eq i160 %298, 0
  %300 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %234, i64 0, i32 0, i32 5, i32 0, i32 0
  %301 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %300, align 8
  %302 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %301, i64 0, i32 5
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %301, i64 0, i32 4
  %304 = select i1 %299, %"class.blink::Length"* %302, %"class.blink::Length"* %303
  %305 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %304, i64 0, i32 2
  %306 = load i8, i8* %305, align 1
  switch i8 %306, label %330 [
    i8 12, label %355
    i8 8, label %307
    i8 1, label %307
    i8 6, label %323
  ], !prof !5

307:                                              ; preds = %293, %293
  %308 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %309 = load i32, i32* %308, align 8
  %310 = lshr i32 %309, 26
  %311 = and i32 %310, 3
  switch i32 %311, label %312 [
    i32 0, label %313
    i32 1, label %330
    i32 2, label %355
    i32 3, label %315
  ]

312:                                              ; preds = %307
  unreachable

313:                                              ; preds = %307
  %314 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  br label %319

315:                                              ; preds = %307
  %316 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %317 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %316 to i32**
  %318 = load i32*, i32** %317, align 8
  br label %319

319:                                              ; preds = %315, %313
  %320 = phi i32* [ %318, %315 ], [ %314, %313 ]
  %321 = load i32, i32* %320, align 8
  %322 = icmp eq i32 %321, -64
  br i1 %322, label %355, label %330, !prof !3

323:                                              ; preds = %293
  %324 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = trunc i64 %325 to i32
  %327 = icmp eq i32 %326, -64
  br i1 %327, label %355, label %328, !prof !3

328:                                              ; preds = %323
  %329 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %329) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %329, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %329, align 4
  br label %351

330:                                              ; preds = %319, %307, %293
  %331 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %331) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %331, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %331, align 4
  switch i8 %306, label %351 [
    i8 3, label %332
    i8 4, label %332
    i8 7, label %332
    i8 5, label %332
  ]

332:                                              ; preds = %330, %330, %330, %330
  %333 = icmp eq %"struct.blink::MinMaxSizes"* %3, null
  br i1 %333, label %337, label %334

334:                                              ; preds = %332
  %335 = bitcast %"struct.blink::MinMaxSizes"* %3 to i64*
  %336 = load i64, i64* %335, align 4
  br label %347

337:                                              ; preds = %332
  %338 = icmp eq i8 %306, 5
  %339 = zext i1 %338 to i32
  %340 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %341 = load i32, i32* %340, align 8
  %342 = lshr i32 %341, 4
  %343 = trunc i32 %342 to i8
  %344 = and i8 %343, 7
  %345 = call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %344, i32 %339, %"class.blink::NGConstraintSpace"* dereferenceable(32) %0, i64 0) #13
  %346 = extractvalue { i64, i8 } %345, 0
  br label %347

347:                                              ; preds = %337, %334
  %348 = phi i64 [ %346, %337 ], [ %336, %334 ]
  %349 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %350 = bitcast %union.anon.1824* %349 to i64*
  store i64 %348, i64* %350, align 4
  store i8 1, i8* %331, align 4
  br label %351

351:                                              ; preds = %347, %330, %328
  %352 = phi i8* [ %331, %347 ], [ %329, %328 ], [ %331, %330 ]
  %353 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %234, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.absl::optional.1820"* nonnull dereferenceable(12) %8, %"class.blink::Length"* dereferenceable(8) %304, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* %352) #13
  %354 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %300, align 8
  br label %355

355:                                              ; preds = %351, %323, %319, %307, %293
  %356 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %354, %351 ], [ %301, %319 ], [ %301, %293 ], [ %301, %323 ], [ %301, %307 ]
  %357 = phi i32 [ %353, %351 ], [ 2147483647, %319 ], [ 2147483647, %293 ], [ 2147483647, %323 ], [ 2147483647, %307 ]
  store i32 %357, i32* %12, align 4
  %358 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %356, i64 0, i32 1, i32 1, i32 0
  %359 = load float, float* %358, align 4
  %360 = fcmp oeq float %359, 0.000000e+00
  br i1 %360, label %427, label %361

361:                                              ; preds = %355
  %362 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %356, i64 0, i32 1, i32 1, i32 1
  %363 = load float, float* %362, align 4
  %364 = fcmp oeq float %363, 0.000000e+00
  %365 = fcmp olt float %359, 1.562500e-02
  %366 = or i1 %365, %364
  %367 = fcmp olt float %363, 1.562500e-02
  %368 = or i1 %367, %366
  br i1 %368, label %427, label %369

369:                                              ; preds = %361
  %370 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %356, i64 0, i32 1, i32 0
  %371 = load i8, i8* %370, align 4
  %372 = and i8 %371, 3
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %427, label %374

374:                                              ; preds = %369
  %375 = load i160, i160* %296, align 8
  %376 = and i160 %375, 15211807202738752817960438464512
  %377 = icmp eq i160 %376, 0
  %378 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %356, i64 0, i32 3
  %379 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %356, i64 0, i32 8
  %380 = select i1 %377, %"class.blink::Length"* %378, %"class.blink::Length"* %379
  %381 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %380, i64 0, i32 2
  %382 = load i8, i8* %381, align 1
  switch i8 %382, label %427 [
    i8 0, label %404
    i8 3, label %404
    i8 4, label %404
    i8 5, label %404
    i8 7, label %404
    i8 12, label %404
    i8 8, label %383
    i8 1, label %383
    i8 6, label %399
  ]

383:                                              ; preds = %374, %374
  %384 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %385 = load i32, i32* %384, align 8
  %386 = lshr i32 %385, 28
  %387 = and i32 %386, 3
  switch i32 %387, label %388 [
    i32 0, label %389
    i32 1, label %427
    i32 2, label %404
    i32 3, label %391
  ]

388:                                              ; preds = %383
  unreachable

389:                                              ; preds = %383
  %390 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %395

391:                                              ; preds = %383
  %392 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %393 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %392, align 8
  %394 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %393, i64 0, i32 0, i32 1, i32 0
  br label %395

395:                                              ; preds = %391, %389
  %396 = phi i32* [ %394, %391 ], [ %390, %389 ]
  %397 = load i32, i32* %396, align 4
  %398 = icmp eq i32 %397, -64
  br i1 %398, label %404, label %427

399:                                              ; preds = %374
  %400 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = and i64 %401, -4294967296
  %403 = icmp eq i64 %402, -274877906944
  br i1 %403, label %404, label %427

404:                                              ; preds = %383, %395, %399, %374, %374, %374, %374, %374, %374
  %405 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %405)
  %406 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %406)
  %407 = call i64 @_ZN5blink39ComputeMinMaxInlineSizesFromAspectRatioERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %234, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2) #13
  %408 = trunc i64 %407 to i32
  store i32 %408, i32* %13, align 8
  %409 = lshr i64 %407, 32
  %410 = trunc i64 %409 to i32
  store i32 %410, i32* %14, align 4
  %411 = icmp slt i32 %357, %408
  %412 = bitcast i32* %13 to %"class.blink::LayoutUnit"*
  %413 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %414 = select i1 %411, %"class.blink::LayoutUnit"* %413, %"class.blink::LayoutUnit"* %412
  %415 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %414, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  %417 = icmp slt i32 %294, %416
  %418 = bitcast i32* %11 to %"class.blink::LayoutUnit"*
  %419 = select i1 %417, %"class.blink::LayoutUnit"* %414, %"class.blink::LayoutUnit"* %418
  %420 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %419, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  store i32 %421, i32* %11, align 8
  %422 = icmp sgt i32 %357, %410
  %423 = bitcast i32* %14 to %"class.blink::LayoutUnit"*
  %424 = select i1 %422, %"class.blink::LayoutUnit"* %423, %"class.blink::LayoutUnit"* %413
  %425 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %424, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  store i32 %426, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %405)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %406)
  br label %427

427:                                              ; preds = %383, %395, %399, %374, %404, %369, %361, %355
  %428 = phi i32 [ %357, %399 ], [ %357, %355 ], [ %357, %361 ], [ %357, %369 ], [ %426, %404 ], [ %357, %374 ], [ %357, %395 ], [ %357, %383 ]
  %429 = phi i32 [ %294, %399 ], [ %294, %355 ], [ %294, %361 ], [ %294, %369 ], [ %421, %404 ], [ %294, %374 ], [ %294, %395 ], [ %294, %383 ]
  %430 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %1, i64 0, i32 0, i32 1
  %431 = load i8, i8* %430, align 8
  %432 = and i8 %431, 1
  %433 = icmp eq i8 %432, 0
  br i1 %433, label %434, label %469

434:                                              ; preds = %427
  %435 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %436 = bitcast %"class.blink::LayoutObject"* %435 to i1 (%"class.blink::LayoutObject"*, i32)***
  %437 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %436, align 8
  %438 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %437, i64 92
  %439 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %438, align 8
  %440 = call zeroext i1 %439(%"class.blink::LayoutObject"* %435, i32 44) #13
  br i1 %440, label %441, label %469

441:                                              ; preds = %434
  %442 = icmp eq %"struct.blink::MinMaxSizes"* %3, null
  br i1 %442, label %446, label %443

443:                                              ; preds = %441
  %444 = bitcast %"struct.blink::MinMaxSizes"* %3 to i64*
  %445 = load i64, i64* %444, align 4
  br label %454

446:                                              ; preds = %441
  %447 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %448 = load i32, i32* %447, align 8
  %449 = lshr i32 %448, 4
  %450 = trunc i32 %449 to i8
  %451 = and i8 %450, 7
  %452 = call { i64, i8 } @_ZNK5blink11NGBlockNode18ComputeMinMaxSizesENS_11WritingModeENS_15MinMaxSizesTypeERKNS_17NGConstraintSpaceENS_21MinMaxSizesFloatInputE(%"class.blink::NGBlockNode"* %1, i8 zeroext %451, i32 1, %"class.blink::NGConstraintSpace"* dereferenceable(32) %0, i64 0) #13
  %453 = extractvalue { i64, i8 } %452, 0
  br label %454

454:                                              ; preds = %446, %443
  %455 = phi i64 [ %453, %446 ], [ %445, %443 ]
  %456 = trunc i64 %455 to i32
  %457 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %457)
  store i32 %456, i32* %10, align 4
  %458 = icmp slt i32 %429, %456
  %459 = bitcast i32* %11 to %"class.blink::LayoutUnit"*
  %460 = bitcast i32* %10 to %"class.blink::LayoutUnit"*
  %461 = select i1 %458, %"class.blink::LayoutUnit"* %460, %"class.blink::LayoutUnit"* %459
  %462 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %461, i64 0, i32 0
  %463 = load i32, i32* %462, align 4
  store i32 %463, i32* %11, align 8
  %464 = icmp slt i32 %428, %456
  %465 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %466 = select i1 %464, %"class.blink::LayoutUnit"* %460, %"class.blink::LayoutUnit"* %465
  %467 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %466, i64 0, i32 0
  %468 = load i32, i32* %467, align 4
  store i32 %468, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %457)
  br label %469

469:                                              ; preds = %427, %434, %454
  %470 = phi i32 [ %429, %427 ], [ %463, %454 ], [ %429, %434 ]
  %471 = phi i32 [ %428, %427 ], [ %468, %454 ], [ %428, %434 ]
  %472 = icmp slt i32 %471, %470
  %473 = select i1 %472, i32 %470, i32 %471
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %230)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %231)
  %474 = icmp slt i32 %473, %229
  %475 = select i1 %474, i32 %473, i32 %229
  %476 = icmp slt i32 %470, %475
  %477 = select i1 %476, i32 %475, i32 %470
  %478 = load i8, i8* %69, align 1
  %479 = icmp eq i8 %478, 8
  br i1 %479, label %480, label %481

480:                                              ; preds = %469
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %18) #13
  br label %481

481:                                              ; preds = %469, %480
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #13
  %482 = load i8, i8* %48, align 1
  %483 = icmp eq i8 %482, 8
  br i1 %483, label %484, label %485

484:                                              ; preds = %481
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %16) #13
  br label %485

485:                                              ; preds = %481, %484
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  ret i32 %477
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink37ComputeUsedInlineSizeForTableFragmentERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeERKNS_10NGBoxStrutERKNS_11MinMaxSizesE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), %"struct.blink::MinMaxSizes"* dereferenceable(8)) local_unnamed_addr #2 {
  %5 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_136ComputeInlineSizeForFragmentInternalERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeERKNS_10NGBoxStrutEPKNS_11MinMaxSizesE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::NGBlockNode"* dereferenceable(16) %1, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::MinMaxSizes"* %3)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink23ComputeMinMaxBlockSizesERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEPKS9_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), i32, %"class.blink::LayoutUnit"*) local_unnamed_addr #2 {
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 15211807202738752817960438464512
  %10 = icmp eq i160 %9, 0
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 5, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 6
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %12, i64 0, i32 7
  %15 = select i1 %10, %"class.blink::Length"* %13, %"class.blink::Length"* %14
  %16 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %15, i64 0, i32 2
  %17 = load i8, i8* %16, align 1
  switch i8 %17, label %54 [
    i8 0, label %43
    i8 3, label %43
    i8 4, label %43
    i8 5, label %43
    i8 7, label %43
    i8 12, label %43
    i8 8, label %18
    i8 1, label %18
    i8 6, label %38
  ]

18:                                               ; preds = %5, %5
  %19 = icmp eq %"class.blink::LayoutUnit"* %4, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  br label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = lshr i32 %24, 28
  %26 = and i32 %25, 3
  switch i32 %26, label %27 [
    i32 0, label %28
    i32 1, label %54
    i32 2, label %43
    i32 3, label %30
  ]

27:                                               ; preds = %22
  unreachable

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %34

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %32 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %31, align 8
  %33 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %32, i64 0, i32 0, i32 1, i32 0
  br label %34

34:                                               ; preds = %30, %28, %20
  %35 = phi i32* [ %21, %20 ], [ %33, %30 ], [ %29, %28 ]
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, -64
  br i1 %37, label %43, label %54, !prof !3

38:                                               ; preds = %5
  %39 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, -4294967296
  %42 = icmp eq i64 %41, -274877906944
  br i1 %42, label %43, label %54, !prof !3

43:                                               ; preds = %38, %34, %22, %5, %5, %5, %5, %5, %5
  %44 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp slt i32 %47, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %45, i32 %47) #13
  %51 = extractvalue { i32, i1 } %50, 1
  %52 = extractvalue { i32, i1 } %50, 0
  %53 = select i1 %51, i32 %49, i32 %52, !prof !2
  br label %59

54:                                               ; preds = %38, %34, %22, %5
  %55 = tail call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %1, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.blink::Length"* dereferenceable(8) %15, i32 -64, i32 %3, %"class.blink::LayoutUnit"* %4) #13
  %56 = load i160, i160* %7, align 8
  %57 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %11, align 8
  %58 = and i160 %56, 15211807202738752817960438464512
  br label %59

59:                                               ; preds = %43, %54
  %60 = phi i160 [ %9, %43 ], [ %58, %54 ]
  %61 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %12, %43 ], [ %57, %54 ]
  %62 = phi i32 [ %53, %43 ], [ %55, %54 ]
  %63 = icmp eq i160 %60, 0
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %61, i64 0, i32 4
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %61, i64 0, i32 5
  %66 = select i1 %63, %"class.blink::Length"* %64, %"class.blink::Length"* %65
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %66, i64 0, i32 2
  %68 = load i8, i8* %67, align 1
  switch i8 %68, label %94 [
    i8 0, label %96
    i8 3, label %96
    i8 4, label %96
    i8 5, label %96
    i8 7, label %96
    i8 12, label %96
    i8 8, label %69
    i8 1, label %69
    i8 6, label %89
  ]

69:                                               ; preds = %59, %59
  %70 = icmp eq %"class.blink::LayoutUnit"* %4, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %4, i64 0, i32 0
  br label %85

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = lshr i32 %75, 28
  %77 = and i32 %76, 3
  switch i32 %77, label %78 [
    i32 0, label %79
    i32 1, label %94
    i32 2, label %96
    i32 3, label %81
  ]

78:                                               ; preds = %73
  unreachable

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %85

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %83 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %82, align 8
  %84 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %83, i64 0, i32 0, i32 1, i32 0
  br label %85

85:                                               ; preds = %81, %79, %71
  %86 = phi i32* [ %72, %71 ], [ %84, %81 ], [ %80, %79 ]
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %87, -64
  br i1 %88, label %96, label %94, !prof !3

89:                                               ; preds = %59
  %90 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, -4294967296
  %93 = icmp eq i64 %92, -274877906944
  br i1 %93, label %96, label %94, !prof !3

94:                                               ; preds = %89, %85, %73, %59
  %95 = tail call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %1, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.blink::Length"* dereferenceable(8) %66, i32 -64, i32 %3, %"class.blink::LayoutUnit"* %4) #13
  br label %96

96:                                               ; preds = %59, %59, %59, %59, %59, %59, %73, %85, %89, %94
  %97 = phi i32 [ %95, %94 ], [ 2147483647, %85 ], [ 2147483647, %89 ], [ 2147483647, %59 ], [ 2147483647, %59 ], [ 2147483647, %59 ], [ 2147483647, %59 ], [ 2147483647, %59 ], [ 2147483647, %59 ], [ 2147483647, %73 ]
  %98 = icmp slt i32 %97, %62
  %99 = select i1 %98, i32 %62, i32 %97
  %100 = zext i32 %99 to i64
  %101 = shl nuw i64 %100, 32
  %102 = zext i32 %62 to i64
  %103 = or i64 %101, %102
  ret i64 %103
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink35ComputeTransferredMinMaxInlineSizesERKNS_11LogicalSizeERKNS_11MinMaxSizesERKNS_10NGBoxStrutENS_10EBoxSizingE(%"struct.blink::LogicalSize"* nocapture readonly dereferenceable(8), %"struct.blink::MinMaxSizes"* nocapture readonly dereferenceable(8), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %1, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = tail call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* dereferenceable(8) %0, i32 %3, i32 %6)
  br label %10

10:                                               ; preds = %8, %4
  %11 = phi i32 [ %9, %8 ], [ 0, %4 ]
  %12 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %1, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 2147483647
  br i1 %14, label %17, label %15

15:                                               ; preds = %10
  %16 = tail call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* dereferenceable(8) %0, i32 %3, i32 %13)
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i32 [ 2147483647, %10 ], [ %16, %15 ]
  %19 = icmp slt i32 %18, %11
  %20 = select i1 %19, i32 %11, i32 %18
  %21 = zext i32 %20 to i64
  %22 = shl nuw i64 %21, 32
  %23 = zext i32 %11 to i64
  %24 = or i64 %22, %23
  ret i64 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink39ComputeMinMaxInlineSizesFromAspectRatioERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 {
  %4 = alloca <2 x float>, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::LogicalSize"*
  %7 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = bitcast i64* %5 to i32*
  store i32 -1431655766, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %6, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %9, align 4
  %10 = bitcast <2 x float>* %4 to %"class.blink::FloatSize"*
  %11 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %13, i64 0, i32 1, i32 1
  %15 = bitcast %"class.blink::FloatSize"* %14 to i64*
  %16 = load i64, i64* %15, align 4
  %17 = bitcast <2 x float>* %4 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 0
  br i1 %22, label %31, label %23

23:                                               ; preds = %3
  %24 = trunc i64 %16 to i32
  %25 = bitcast i32 %24 to float
  %26 = lshr i64 %16, 32
  %27 = trunc i64 %26 to i32
  %28 = bitcast i32 %27 to float
  %29 = insertelement <2 x float> undef, float %28, i32 0
  %30 = insertelement <2 x float> %29, float %25, i32 1
  store <2 x float> %30, <2 x float>* %4, align 8
  br label %31

31:                                               ; preds = %3, %23
  %32 = call i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* nonnull dereferenceable(8) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  store i64 %32, i64* %5, align 8
  %33 = call i64 @_ZN5blink23ComputeMinMaxBlockSizesERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEPKS9_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %1, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, i32 0, %"class.blink::LayoutUnit"* null)
  %34 = trunc i64 %33 to i32
  %35 = lshr i64 %33, 32
  %36 = trunc i64 %35 to i32
  %37 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %12, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %37, i64 0, i32 1, i32 1, i32 0
  %39 = load float, float* %38, align 4
  %40 = fcmp oeq float %39, 0.000000e+00
  br i1 %40, label %60, label %41

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %37, i64 0, i32 1, i32 1, i32 1
  %43 = load float, float* %42, align 4
  %44 = fcmp oeq float %43, 0.000000e+00
  %45 = fcmp olt float %39, 1.562500e-02
  %46 = or i1 %45, %44
  %47 = fcmp olt float %43, 1.562500e-02
  %48 = or i1 %47, %46
  br i1 %48, label %60, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %37, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 4
  %52 = and i8 %51, 3
  %53 = icmp eq i8 %52, 2
  br i1 %53, label %54, label %60

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %37, i64 0, i32 11
  %56 = load i8, i8* %55, align 4
  %57 = lshr i8 %56, 1
  %58 = and i8 %57, 1
  %59 = zext i8 %58 to i32
  br label %60

60:                                               ; preds = %31, %41, %49, %54
  %61 = phi i32 [ %59, %54 ], [ 1, %49 ], [ 1, %41 ], [ 1, %31 ]
  %62 = icmp sgt i32 %34, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %60
  %64 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %6, i32 %61, i32 %34) #13
  br label %65

65:                                               ; preds = %63, %60
  %66 = phi i32 [ %64, %63 ], [ 0, %60 ]
  %67 = icmp eq i32 %36, 2147483647
  br i1 %67, label %70, label %68

68:                                               ; preds = %65
  %69 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %6, i32 %61, i32 %36) #13
  br label %70

70:                                               ; preds = %65, %68
  %71 = phi i32 [ 2147483647, %65 ], [ %69, %68 ]
  %72 = icmp slt i32 %71, %66
  %73 = select i1 %72, i32 %66, i32 %71
  %74 = zext i32 %73 to i64
  %75 = shl nuw i64 %74, 32
  %76 = zext i32 %66 to i64
  %77 = or i64 %75, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret i64 %77
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink27ComputeBlockSizeForFragmentERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalIS9_EES9_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), i32, i64, i32) local_unnamed_addr #2 {
  %7 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %20, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %13 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %13, i64 0, i32 6
  %15 = load i16, i16* %14, align 8
  %16 = and i16 %15, 16
  %17 = icmp ne i16 %16, 0
  %18 = icmp ne i32 %3, -64
  %19 = and i1 %18, %17
  br i1 %19, label %56, label %20

20:                                               ; preds = %6, %11
  %21 = and i32 %8, 4194304
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %36, label %23

23:                                               ; preds = %20
  %24 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %25, 32
  %27 = trunc i64 %26 to i32
  %28 = icmp sgt i32 %5, -1
  %29 = select i1 %28, i32 -2147483648, i32 2147483647
  %30 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %27, i32 %5) #13
  %31 = extractvalue { i32, i1 } %30, 1
  %32 = extractvalue { i32, i1 } %30, 0
  %33 = select i1 %31, i32 %29, i32 %32, !prof !2
  %34 = icmp sgt i32 %33, 0
  %35 = select i1 %34, i32 %33, i32 0
  br label %56

36:                                               ; preds = %20
  %37 = and i32 %8, 256
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %36
  br i1 %10, label %49, label %40

40:                                               ; preds = %39
  %41 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %42 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %41, align 8
  %43 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %42, i64 0, i32 6
  %44 = load i16, i16* %43, align 8
  %45 = and i16 %44, 16
  %46 = icmp eq i16 %45, 0
  %47 = icmp ne i32 %3, -64
  %48 = and i1 %47, %46
  br i1 %48, label %56, label %51

49:                                               ; preds = %39
  %50 = icmp eq i32 %3, -64
  br i1 %50, label %51, label %56

51:                                               ; preds = %49, %36, %40
  %52 = and i32 %8, 512
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %51
  %55 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_135ComputeBlockSizeForFragmentInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalISA_EESA_PKSA_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %1, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, i32 %3, i64 %4, i32 %5)
  br label %56

56:                                               ; preds = %49, %51, %40, %11, %54, %23
  %57 = phi i32 [ %35, %23 ], [ %55, %54 ], [ %3, %51 ], [ %3, %49 ], [ %3, %11 ], [ %3, %40 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_135ComputeBlockSizeForFragmentInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalISA_EESA_PKSA_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), i32, i64, i32) unnamed_addr #5 {
  %7 = alloca <2 x float>, align 8
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.blink::Length"*
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"struct.blink::LogicalSize"*
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.blink::Length"*
  %14 = trunc i64 %4 to i8
  %15 = lshr i64 %4, 32
  %16 = trunc i64 %15 to i32
  %17 = tail call i64 @_ZN5blink23ComputeMinMaxBlockSizesERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEPKS9_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %1, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, i32 %5, %"class.blink::LayoutUnit"* null)
  %18 = trunc i64 %17 to i32
  %19 = lshr i64 %17, 32
  %20 = trunc i64 %19 to i32
  %21 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 33554432
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %237

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 5, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %27, i64 0, i32 1, i32 1, i32 0
  %29 = load float, float* %28, align 4
  %30 = fcmp oeq float %29, 0.000000e+00
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %27, i64 0, i32 1, i32 1, i32 1
  %33 = load float, float* %32, align 4
  %34 = fcmp oeq float %33, 0.000000e+00
  %35 = fcmp olt float %29, 1.562500e-02
  %36 = or i1 %35, %34
  %37 = fcmp olt float %33, 1.562500e-02
  %38 = or i1 %37, %36
  br i1 %38, label %44, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %27, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 4
  %42 = and i8 %41, 3
  %43 = icmp eq i8 %42, 0
  br label %44

44:                                               ; preds = %25, %31, %39
  %45 = phi i1 [ %43, %39 ], [ true, %31 ], [ true, %25 ]
  %46 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %9, i64 0, i32 2
  %48 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %49 = bitcast [20 x i8]* %48 to i160*
  %50 = load i160, i160* %49, align 8
  %51 = and i160 %50, 15211807202738752817960438464512
  %52 = icmp eq i160 %51, 0
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %27, i64 0, i32 3
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %27, i64 0, i32 8
  %55 = select i1 %52, %"class.blink::Length"* %53, %"class.blink::Length"* %54
  %56 = bitcast %"class.blink::Length"* %55 to i64*
  %57 = load i64, i64* %56, align 4
  store i64 %57, i64* %8, align 8
  %58 = and i64 %57, 280375465082880
  %59 = icmp eq i64 %58, 8796093022208
  br i1 %59, label %60, label %61

60:                                               ; preds = %44
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %9) #13
  br label %61

61:                                               ; preds = %44, %60
  %62 = xor i1 %45, true
  %63 = icmp ne i8 %14, 0
  %64 = and i1 %63, %62
  br i1 %64, label %65, label %170

65:                                               ; preds = %61
  %66 = load i8, i8* %47, align 1
  switch i8 %66, label %173 [
    i8 0, label %67
    i8 6, label %93
    i8 3, label %98
    i8 4, label %98
    i8 5, label %98
    i8 7, label %98
    i8 12, label %98
    i8 8, label %76
    i8 1, label %76
  ]

67:                                               ; preds = %65
  %68 = load i32, i32* %21, align 8
  %69 = and i32 %68, 1572864
  %70 = icmp eq i32 %69, 1048576
  br i1 %70, label %71, label %98

71:                                               ; preds = %67
  %72 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, -4294967296
  %75 = icmp ne i64 %74, -274877906944
  br label %98

76:                                               ; preds = %65, %65
  %77 = load i32, i32* %21, align 8
  %78 = lshr i32 %77, 28
  %79 = and i32 %78, 3
  switch i32 %79, label %80 [
    i32 0, label %81
    i32 1, label %90
    i32 2, label %84
    i32 3, label %85
  ]

80:                                               ; preds = %76
  unreachable

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %83 = load i32, i32* %82, align 4
  br label %90

84:                                               ; preds = %76
  br label %90

85:                                               ; preds = %76
  %86 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %87 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %86, align 8
  %88 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %87, i64 0, i32 0, i32 1, i32 0
  %89 = load i32, i32* %88, align 4
  br label %90

90:                                               ; preds = %85, %84, %81, %76
  %91 = phi i32 [ %89, %85 ], [ -64, %84 ], [ %83, %81 ], [ 0, %76 ]
  %92 = icmp eq i32 %91, -64
  br label %98

93:                                               ; preds = %65
  %94 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, -4294967296
  %97 = icmp eq i64 %96, -274877906944
  br label %98

98:                                               ; preds = %65, %65, %65, %65, %65, %67, %71, %90, %93
  %99 = phi i1 [ false, %90 ], [ false, %93 ], [ %75, %71 ], [ false, %67 ], [ false, %65 ], [ false, %65 ], [ false, %65 ], [ false, %65 ], [ false, %65 ]
  %100 = phi i1 [ %92, %90 ], [ %97, %93 ], [ true, %71 ], [ true, %67 ], [ true, %65 ], [ true, %65 ], [ true, %65 ], [ true, %65 ], [ true, %65 ]
  %101 = xor i1 %100, true
  %102 = or i1 %99, %101
  br i1 %102, label %170, label %103

103:                                              ; preds = %98
  %104 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #13
  %105 = bitcast <2 x float>* %7 to %"class.blink::FloatSize"*
  %106 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #13
  %107 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %26, align 8
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %107, i64 0, i32 1, i32 1
  %109 = bitcast %"class.blink::FloatSize"* %108 to i64*
  %110 = load i64, i64* %109, align 4
  %111 = bitcast <2 x float>* %7 to i64*
  store i64 %110, i64* %111, align 8
  %112 = load i160, i160* %49, align 8
  %113 = and i160 %112, 15211807202738752817960438464512
  %114 = icmp eq i160 %113, 0
  br i1 %114, label %123, label %115

115:                                              ; preds = %103
  %116 = trunc i64 %110 to i32
  %117 = bitcast i32 %116 to float
  %118 = lshr i64 %110, 32
  %119 = trunc i64 %118 to i32
  %120 = bitcast i32 %119 to float
  %121 = insertelement <2 x float> undef, float %120, i32 0
  %122 = insertelement <2 x float> %121, float %117, i32 1
  store <2 x float> %122, <2 x float>* %7, align 8
  br label %123

123:                                              ; preds = %103, %115
  %124 = call i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* nonnull dereferenceable(8) %105) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #13
  store i64 %124, i64* %10, align 8
  %125 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %26, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %125, i64 0, i32 1, i32 1, i32 0
  %127 = load float, float* %126, align 4
  %128 = fcmp oeq float %127, 0.000000e+00
  br i1 %128, label %148, label %129

129:                                              ; preds = %123
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %125, i64 0, i32 1, i32 1, i32 1
  %131 = load float, float* %130, align 4
  %132 = fcmp oeq float %131, 0.000000e+00
  %133 = fcmp olt float %127, 1.562500e-02
  %134 = or i1 %133, %132
  %135 = fcmp olt float %131, 1.562500e-02
  %136 = or i1 %135, %134
  br i1 %136, label %148, label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %125, i64 0, i32 1, i32 0
  %139 = load i8, i8* %138, align 4
  %140 = and i8 %139, 3
  %141 = icmp eq i8 %140, 2
  br i1 %141, label %142, label %148

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %125, i64 0, i32 11
  %144 = load i8, i8* %143, align 4
  %145 = lshr i8 %144, 1
  %146 = and i8 %145, 1
  %147 = zext i8 %146 to i32
  br label %148

148:                                              ; preds = %142, %137, %129, %123
  %149 = phi i32 [ %147, %142 ], [ 1, %137 ], [ 1, %129 ], [ 1, %123 ]
  %150 = call i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %11, i32 %149, i32 %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #13
  %151 = load i160, i160* %49, align 8
  %152 = and i160 %151, 15211807202738752817960438464512
  %153 = icmp eq i160 %152, 0
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %125, i64 0, i32 6
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %125, i64 0, i32 7
  %156 = select i1 %153, %"class.blink::Length"* %154, %"class.blink::Length"* %155
  %157 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %156, i64 0, i32 2
  %158 = load i8, i8* %157, align 1
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %167

160:                                              ; preds = %148
  %161 = select i1 %153, i160 77, i160 74
  %162 = lshr i160 %151, %161
  %163 = and i160 %162, 7
  %164 = icmp eq i160 %163, 2
  br i1 %164, label %165, label %167

165:                                              ; preds = %160
  switch i32 %3, label %166 [
    i32 -64, label %167
    i32 2147483647, label %167
  ]

166:                                              ; preds = %165
  br label %167

167:                                              ; preds = %165, %165, %160, %148, %166
  %168 = phi i32 [ %18, %165 ], [ %18, %165 ], [ %18, %160 ], [ %18, %148 ], [ %3, %166 ]
  %169 = icmp eq i32 %150, -64
  br i1 %169, label %170, label %224

170:                                              ; preds = %61, %167, %98
  %171 = phi i32 [ %18, %61 ], [ %168, %167 ], [ %18, %98 ]
  %172 = load i8, i8* %47, align 1
  br label %173

173:                                              ; preds = %65, %170
  %174 = phi i32 [ %171, %170 ], [ %18, %65 ]
  %175 = phi i8 [ %172, %170 ], [ %66, %65 ]
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %177, label %197

177:                                              ; preds = %173
  %178 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #13
  %179 = load i32, i32* %21, align 8
  %180 = and i32 %179, 1572864
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %187, label %182

182:                                              ; preds = %177
  %183 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = and i64 %184, -4294967296
  %186 = icmp eq i64 %185, -274877906944
  br i1 %186, label %187, label %188

187:                                              ; preds = %182, %177
  br label %188

188:                                              ; preds = %182, %187
  %189 = phi i8 [ 7, %187 ], [ 6, %182 ]
  %190 = bitcast i64* %12 to i32*
  store i32 0, i32* %190, align 8, !alias.scope !14
  %191 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 1
  store i8 0, i8* %191, align 4, !alias.scope !14
  %192 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 2
  store i8 %189, i8* %192, align 1, !alias.scope !14
  %193 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 3
  store i8 0, i8* %193, align 2, !alias.scope !14
  %194 = load i64, i64* %12, align 8
  store i64 %194, i64* %8, align 8
  %195 = lshr i64 %194, 40
  %196 = trunc i64 %195 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #13
  br label %197

197:                                              ; preds = %188, %173
  %198 = phi i8 [ %196, %188 ], [ %175, %173 ]
  switch i8 %198, label %219 [
    i8 6, label %214
    i8 8, label %199
    i8 1, label %199
  ]

199:                                              ; preds = %197, %197
  %200 = load i32, i32* %21, align 8
  %201 = lshr i32 %200, 28
  %202 = and i32 %201, 3
  switch i32 %202, label %203 [
    i32 0, label %204
    i32 1, label %219
    i32 2, label %221
    i32 3, label %206
  ]

203:                                              ; preds = %199
  unreachable

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %210

206:                                              ; preds = %199
  %207 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %208 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %207, align 8
  %209 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %208, i64 0, i32 0, i32 1, i32 0
  br label %210

210:                                              ; preds = %206, %204
  %211 = phi i32* [ %209, %206 ], [ %205, %204 ]
  %212 = load i32, i32* %211, align 4
  %213 = icmp eq i32 %212, -64
  br i1 %213, label %221, label %219, !prof !2

214:                                              ; preds = %197
  %215 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = and i64 %216, -4294967296
  %218 = icmp eq i64 %217, -274877906944
  br i1 %218, label %221, label %219, !prof !2

219:                                              ; preds = %214, %210, %199, %197
  %220 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %1, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.blink::Length"* nonnull dereferenceable(8) %9, i32 %3, i32 %5, %"class.blink::LayoutUnit"* null) #13
  br label %221

221:                                              ; preds = %219, %214, %210, %199
  %222 = phi i32 [ %220, %219 ], [ %3, %214 ], [ %3, %210 ], [ %3, %199 ]
  %223 = icmp eq i32 %222, -64
  br i1 %223, label %231, label %224

224:                                              ; preds = %167, %221
  %225 = phi i32 [ %174, %221 ], [ %168, %167 ]
  %226 = phi i32 [ %222, %221 ], [ %150, %167 ]
  %227 = icmp sgt i32 %226, %20
  %228 = select i1 %227, i32 %20, i32 %226
  %229 = icmp slt i32 %225, %228
  %230 = select i1 %229, i32 %228, i32 %225
  br label %231

231:                                              ; preds = %221, %224
  %232 = phi i32 [ %230, %224 ], [ -64, %221 ]
  %233 = load i8, i8* %47, align 1
  %234 = icmp eq i8 %233, 8
  br i1 %234, label %235, label %236

235:                                              ; preds = %231
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %9) #13
  br label %236

236:                                              ; preds = %231, %235
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br label %237

237:                                              ; preds = %6, %236
  %238 = phi i32 [ %232, %236 ], [ %18, %6 ]
  ret i32 %238
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink34ComputeInitialBlockSizeForFragmentERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalIS9_EES9_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::ComputedStyle"* dereferenceable(104), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), i32, i64, i32) local_unnamed_addr #2 {
  %7 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 8388608
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %59

11:                                               ; preds = %6
  %12 = and i32 %8, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %11
  %15 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %16 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %15, align 8
  %17 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %16, i64 0, i32 6
  %18 = load i16, i16* %17, align 8
  %19 = and i16 %18, 16
  %20 = icmp ne i16 %19, 0
  %21 = icmp ne i32 %3, -64
  %22 = and i1 %21, %20
  br i1 %22, label %59, label %23

23:                                               ; preds = %14, %11
  %24 = and i32 %8, 4194304
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %39, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = lshr i64 %28, 32
  %30 = trunc i64 %29 to i32
  %31 = icmp sgt i32 %5, -1
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %30, i32 %5) #13
  %34 = extractvalue { i32, i1 } %33, 1
  %35 = extractvalue { i32, i1 } %33, 0
  %36 = select i1 %34, i32 %32, i32 %35, !prof !2
  %37 = icmp sgt i32 %36, 0
  %38 = select i1 %37, i32 %36, i32 0
  br label %59

39:                                               ; preds = %23
  %40 = and i32 %8, 256
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %54, label %42

42:                                               ; preds = %39
  br i1 %13, label %52, label %43

43:                                               ; preds = %42
  %44 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %45 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %44, align 8
  %46 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %45, i64 0, i32 6
  %47 = load i16, i16* %46, align 8
  %48 = and i16 %47, 16
  %49 = icmp eq i16 %48, 0
  %50 = icmp ne i32 %3, -64
  %51 = and i1 %50, %49
  br i1 %51, label %59, label %54

52:                                               ; preds = %42
  %53 = icmp eq i32 %3, -64
  br i1 %53, label %54, label %59

54:                                               ; preds = %52, %43, %39
  %55 = and i32 %8, 512
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %54
  %58 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_135ComputeBlockSizeForFragmentInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalISA_EESA_PKSA_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %1, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, i32 %3, i64 %4, i32 %5) #13
  br label %59

59:                                               ; preds = %6, %57, %54, %52, %43, %26, %14
  %60 = phi i32 [ %3, %6 ], [ %38, %26 ], [ %58, %57 ], [ %3, %54 ], [ %3, %52 ], [ %3, %14 ], [ %3, %43 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink19ComputeReplacedSizeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutENS_16ReplacedSizeModeE(%"class.blink::NGBlockNode"* dereferenceable(16), %"class.blink::NGConstraintSpace"* dereferenceable(32), %"struct.blink::NGBoxStrut"* dereferenceable(16), i32) local_unnamed_addr #2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.absl::optional_internal::optional_data_dtor_base.1830", align 8
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.absl::optional.1820", align 4
  %18 = alloca %"class.absl::optional.1820", align 4
  %19 = alloca %"class.absl::optional.1820", align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i64, align 8
  %27 = bitcast i64* %26 to %"struct.blink::MinMaxSizes"*
  %28 = alloca %"class.blink::LayoutUnit", align 4
  %29 = alloca i64, align 8
  %30 = bitcast i64* %29 to %"class.blink::Length"*
  %31 = alloca i64, align 8
  %32 = bitcast i64* %31 to %"class.blink::Length"*
  %33 = alloca %"class.blink::LayoutUnit", align 4
  %34 = alloca %"class.blink::LayoutUnit", align 4
  %35 = alloca i64, align 8
  %36 = bitcast i64* %35 to %"struct.blink::LogicalSize"*
  %37 = alloca %"class.absl::optional_internal::optional_data_dtor_base.1830", align 8
  %38 = alloca %class.anon.1832, align 8
  %39 = alloca i32, align 8
  %40 = alloca i32, align 4
  %41 = alloca i64, align 8
  %42 = bitcast i64* %41 to %"class.blink::Length"*
  %43 = alloca i64, align 8
  %44 = bitcast i64* %43 to %"class.blink::Length"*
  %45 = alloca %"struct.blink::LogicalSize", align 4
  %46 = alloca %"struct.blink::LogicalSize", align 4
  %47 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::NGLayoutInputNode"*
  %48 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %49 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %50 = bitcast %"class.blink::LayoutObject"* %49 to i1 (%"class.blink::LayoutObject"*, i32)***
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, i64 92
  %53 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::LayoutObject"* %49, i32 8) #13
  br i1 %54, label %1163, label %55

55:                                               ; preds = %4
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %56, i64 0, i32 5, i32 0
  %58 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %57, align 8
  %59 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %59) #13
  store i32 -1431655766, i32* %25, align 4
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 5, i32 0, i32 0
  %61 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %61, i64 0, i32 1, i32 1, i32 0
  %63 = load float, float* %62, align 4
  %64 = fcmp oeq float %63, 0.000000e+00
  br i1 %64, label %84, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %61, i64 0, i32 1, i32 1, i32 1
  %67 = load float, float* %66, align 4
  %68 = fcmp oeq float %67, 0.000000e+00
  %69 = fcmp olt float %63, 1.562500e-02
  %70 = or i1 %69, %68
  %71 = fcmp olt float %67, 1.562500e-02
  %72 = or i1 %71, %70
  br i1 %72, label %84, label %73

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %61, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 4
  %76 = and i8 %75, 3
  %77 = icmp eq i8 %76, 2
  br i1 %77, label %78, label %84

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %61, i64 0, i32 11
  %80 = load i8, i8* %79, align 4
  %81 = lshr i8 %80, 1
  %82 = and i8 %81, 1
  %83 = zext i8 %82 to i32
  br label %84

84:                                               ; preds = %55, %65, %73, %78
  %85 = phi i32 [ %83, %78 ], [ 1, %73 ], [ 1, %65 ], [ 1, %55 ]
  store i32 %85, i32* %25, align 4
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = and i160 %88, 15211807202738752817960438464512
  %90 = icmp eq i160 %89, 0
  %91 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %61, i64 0, i32 3
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %61, i64 0, i32 8
  %93 = select i1 %90, %"class.blink::Length"* %91, %"class.blink::Length"* %92
  %94 = bitcast i64* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #13
  %95 = bitcast i64* %26 to i32*
  %96 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %27, i64 0, i32 1, i32 0
  store i32 0, i32* %95, align 8
  store i32 0, i32* %96, align 4
  %97 = icmp eq i32 %3, 2
  br i1 %97, label %98, label %99

98:                                               ; preds = %84
  store i64 9223372032559808512, i64* %26, align 8
  br label %302

99:                                               ; preds = %84
  %100 = bitcast %"class.blink::LayoutUnit"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100) #13
  %101 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %28, i64 0, i32 0
  store i32 -1431655766, i32* %101, align 4
  %102 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %56, i64 0, i32 6, i32 0, i32 0
  %103 = load %"class.blink::Node"*, %"class.blink::Node"** %102, align 8
  %104 = icmp eq %"class.blink::Node"* %103, null
  br i1 %104, label %105, label %112

105:                                              ; preds = %99, %105
  %106 = phi %"class.blink::LayoutObject"* [ %108, %105 ], [ %56, %99 ]
  %107 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %106, i64 0, i32 7
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 6, i32 0, i32 0
  %110 = load %"class.blink::Node"*, %"class.blink::Node"** %109, align 8
  %111 = icmp eq %"class.blink::Node"* %110, null
  br i1 %111, label %105, label %112

112:                                              ; preds = %105, %99
  %113 = phi %"class.blink::Node"* [ %103, %99 ], [ %110, %105 ]
  %114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %113, i64 0, i32 3, i32 0, i32 0
  %115 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %115, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::Document"*, %"class.blink::Document"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %117, i64 0, i32 33
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %126

121:                                              ; preds = %112
  %122 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = lshr i64 %123, 32
  %125 = trunc i64 %124 to i32
  br label %141

126:                                              ; preds = %112
  %127 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = lshr i32 %128, 28
  %130 = and i32 %129, 3
  switch i32 %130, label %131 [
    i32 0, label %132
    i32 1, label %141
    i32 2, label %135
    i32 3, label %136
  ]

131:                                              ; preds = %126
  unreachable

132:                                              ; preds = %126
  %133 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  %134 = load i32, i32* %133, align 4
  br label %141

135:                                              ; preds = %126
  br label %141

136:                                              ; preds = %126
  %137 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %138 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %137, align 8
  %139 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %138, i64 0, i32 0, i32 1, i32 0
  %140 = load i32, i32* %139, align 4
  br label %141

141:                                              ; preds = %136, %135, %132, %126, %121
  %142 = phi i32 [ %125, %121 ], [ %140, %136 ], [ -64, %135 ], [ %134, %132 ], [ 0, %126 ]
  store i32 %142, i32* %101, align 4
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %61, i64 0, i32 6
  %144 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %61, i64 0, i32 7
  %145 = select i1 %90, %"class.blink::Length"* %143, %"class.blink::Length"* %144
  %146 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %145, i64 0, i32 2
  %147 = load i8, i8* %146, align 1
  switch i8 %147, label %166 [
    i8 0, label %155
    i8 3, label %155
    i8 4, label %155
    i8 5, label %155
    i8 7, label %155
    i8 12, label %155
    i8 8, label %148
    i8 1, label %148
    i8 6, label %150
  ]

148:                                              ; preds = %141, %141
  %149 = icmp eq i32 %142, -64
  br i1 %149, label %155, label %166, !prof !3

150:                                              ; preds = %141
  %151 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = and i64 %152, -4294967296
  %154 = icmp eq i64 %153, -274877906944
  br i1 %154, label %155, label %166, !prof !3

155:                                              ; preds = %150, %148, %141, %141, %141, %141, %141, %141
  %156 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %159 = load i32, i32* %158, align 4
  %160 = icmp slt i32 %159, 0
  %161 = select i1 %160, i32 -2147483648, i32 2147483647
  %162 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %157, i32 %159) #13
  %163 = extractvalue { i32, i1 } %162, 1
  %164 = extractvalue { i32, i1 } %162, 0
  %165 = select i1 %163, i32 %161, i32 %164, !prof !2
  br label %171

166:                                              ; preds = %150, %148, %141
  %167 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %58, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.blink::Length"* dereferenceable(8) %145, i32 -64, i32 0, %"class.blink::LayoutUnit"* nonnull %28) #13
  %168 = load i160, i160* %87, align 8
  %169 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %60, align 8
  %170 = and i160 %168, 15211807202738752817960438464512
  br label %171

171:                                              ; preds = %155, %166
  %172 = phi i160 [ %89, %155 ], [ %170, %166 ]
  %173 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %61, %155 ], [ %169, %166 ]
  %174 = phi i32 [ %165, %155 ], [ %167, %166 ]
  %175 = icmp eq i160 %172, 0
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %173, i64 0, i32 4
  %177 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %173, i64 0, i32 5
  %178 = select i1 %175, %"class.blink::Length"* %176, %"class.blink::Length"* %177
  %179 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %178, i64 0, i32 2
  %180 = load i8, i8* %179, align 1
  switch i8 %180, label %189 [
    i8 0, label %191
    i8 3, label %191
    i8 4, label %191
    i8 5, label %191
    i8 7, label %191
    i8 12, label %191
    i8 8, label %181
    i8 1, label %181
    i8 6, label %184
  ]

181:                                              ; preds = %171, %171
  %182 = load i32, i32* %101, align 4
  %183 = icmp eq i32 %182, -64
  br i1 %183, label %191, label %189, !prof !3

184:                                              ; preds = %171
  %185 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = and i64 %186, -4294967296
  %188 = icmp eq i64 %187, -274877906944
  br i1 %188, label %191, label %189, !prof !3

189:                                              ; preds = %184, %181, %171
  %190 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %58, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.blink::Length"* dereferenceable(8) %178, i32 -64, i32 0, %"class.blink::LayoutUnit"* nonnull %28) #13
  br label %191

191:                                              ; preds = %171, %171, %171, %171, %171, %171, %181, %184, %189
  %192 = phi i32 [ %190, %189 ], [ 2147483647, %181 ], [ 2147483647, %184 ], [ 2147483647, %171 ], [ 2147483647, %171 ], [ 2147483647, %171 ], [ 2147483647, %171 ], [ 2147483647, %171 ], [ 2147483647, %171 ]
  store i32 %174, i32* %95, align 8
  store i32 %192, i32* %96, align 4
  %193 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %194 = load i32, i32* %193, align 8
  %195 = and i32 %194, 4194304
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %202, label %197

197:                                              ; preds = %191
  %198 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = lshr i64 %199, 32
  %201 = trunc i64 %200 to i32
  br label %299

202:                                              ; preds = %191
  %203 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %93, i64 0, i32 2
  %204 = load i8, i8* %203, align 1
  switch i8 %204, label %213 [
    i8 0, label %205
    i8 3, label %205
    i8 4, label %205
    i8 7, label %205
    i8 5, label %205
  ]

205:                                              ; preds = %202, %202, %202, %202, %202
  %206 = and i32 %194, 1572864
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %299, label %208

208:                                              ; preds = %205
  %209 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = and i64 %210, -4294967296
  %212 = icmp eq i64 %211, -274877906944
  br i1 %212, label %299, label %213

213:                                              ; preds = %208, %202
  %214 = bitcast i64* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #13
  %215 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %30, i64 0, i32 2
  %216 = bitcast %"class.blink::Length"* %93 to i64*
  %217 = load i64, i64* %216, align 4
  store i64 %217, i64* %29, align 8
  %218 = and i64 %217, 280375465082880
  %219 = icmp eq i64 %218, 8796093022208
  %220 = lshr i64 %217, 40
  %221 = trunc i64 %220 to i8
  br i1 %219, label %222, label %224

222:                                              ; preds = %213
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %30) #13
  %223 = load i8, i8* %215, align 1
  br label %224

224:                                              ; preds = %213, %222
  %225 = phi i8 [ %221, %213 ], [ %223, %222 ]
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %227, label %234

227:                                              ; preds = %224
  %228 = bitcast i64* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #13
  %229 = bitcast i64* %31 to i32*
  store i32 0, i32* %229, align 8, !alias.scope !19
  %230 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %32, i64 0, i32 1
  store i8 0, i8* %230, align 4, !alias.scope !19
  %231 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %32, i64 0, i32 2
  store i8 6, i8* %231, align 1, !alias.scope !19
  %232 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %32, i64 0, i32 3
  store i8 0, i8* %232, align 2, !alias.scope !19
  %233 = load i64, i64* %31, align 8
  store i64 %233, i64* %29, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #13
  br label %234

234:                                              ; preds = %227, %224
  %235 = bitcast %"class.blink::LayoutUnit"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %235) #13
  %236 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %33, i64 0, i32 0
  store i32 -1431655766, i32* %236, align 4
  %237 = load i32, i32* %193, align 8
  %238 = lshr i32 %237, 30
  switch i32 %238, label %248 [
    i32 0, label %239
    i32 1, label %249
    i32 2, label %242
    i32 3, label %243
  ]

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 1, i32 0
  %241 = load i32, i32* %240, align 4
  br label %249

242:                                              ; preds = %234
  br label %249

243:                                              ; preds = %234
  %244 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %245 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %244, align 8
  %246 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %245, i64 0, i32 1, i32 0
  %247 = load i32, i32* %246, align 8
  br label %249

248:                                              ; preds = %234
  unreachable

249:                                              ; preds = %234, %239, %242, %243
  %250 = phi i32 [ %247, %243 ], [ -64, %242 ], [ %241, %239 ], [ 0, %234 ]
  store i32 %250, i32* %236, align 4
  %251 = load i8, i8* %215, align 1
  switch i8 %251, label %269 [
    i8 0, label %290
    i8 3, label %290
    i8 4, label %290
    i8 5, label %290
    i8 7, label %290
    i8 12, label %290
    i8 8, label %252
    i8 1, label %252
    i8 6, label %254
  ]

252:                                              ; preds = %249, %249
  %253 = icmp eq i32 %250, -64
  br i1 %253, label %290, label %260

254:                                              ; preds = %249
  %255 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = and i64 %256, -4294967296
  %258 = icmp eq i64 %257, -274877906944
  br i1 %258, label %259, label %266

259:                                              ; preds = %254
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %235) #13
  br label %296

260:                                              ; preds = %252
  %261 = icmp eq i8 %251, 6
  br i1 %261, label %262, label %269

262:                                              ; preds = %260
  %263 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = and i64 %264, -4294967296
  br label %266

266:                                              ; preds = %262, %254
  %267 = phi i64 [ %265, %262 ], [ %257, %254 ]
  %268 = icmp eq i64 %267, -274877906944
  br i1 %268, label %272, label %269, !prof !2

269:                                              ; preds = %260, %249, %266
  %270 = call i32 @_ZN5blink26ResolveBlockLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKNS_6LengthENS_10LayoutUnitESC_PKSC_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %58, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.blink::Length"* nonnull dereferenceable(8) %30, i32 -64, i32 0, %"class.blink::LayoutUnit"* nonnull %33) #13
  %271 = load i8, i8* %215, align 1
  br label %272

272:                                              ; preds = %266, %269
  %273 = phi i8 [ %271, %269 ], [ 6, %266 ]
  %274 = phi i32 [ %270, %269 ], [ -64, %266 ]
  %275 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %275)
  store i32 %274, i32* %5, align 4
  %276 = bitcast i64* %26 to %"class.blink::LayoutUnit"*
  %277 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %27, i64 0, i32 1
  %278 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %277, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  %280 = icmp slt i32 %279, %274
  %281 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %282 = select i1 %280, %"class.blink::LayoutUnit"* %277, %"class.blink::LayoutUnit"* %281
  %283 = load i32, i32* %95, align 8
  %284 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %282, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  %286 = icmp slt i32 %283, %285
  %287 = select i1 %286, %"class.blink::LayoutUnit"* %282, %"class.blink::LayoutUnit"* %276
  %288 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %287, i64 0, i32 0
  %289 = load i32, i32* %288, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %275)
  br label %290

290:                                              ; preds = %252, %272, %249, %249, %249, %249, %249, %249
  %291 = phi i8 [ %251, %249 ], [ %251, %249 ], [ %251, %249 ], [ %251, %249 ], [ %251, %249 ], [ %251, %249 ], [ %251, %252 ], [ %273, %272 ]
  %292 = phi i8 [ 0, %249 ], [ 0, %249 ], [ 0, %249 ], [ 0, %249 ], [ 0, %249 ], [ 0, %249 ], [ 0, %252 ], [ 1, %272 ]
  %293 = phi i32 [ -1431655766, %249 ], [ -1431655766, %249 ], [ -1431655766, %249 ], [ -1431655766, %249 ], [ -1431655766, %249 ], [ -1431655766, %249 ], [ -1431655766, %252 ], [ %289, %272 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %235) #13
  %294 = icmp eq i8 %291, 8
  br i1 %294, label %295, label %296

295:                                              ; preds = %290
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %30) #13
  br label %296

296:                                              ; preds = %259, %290, %295
  %297 = phi i32 [ -1431655766, %259 ], [ %293, %290 ], [ %293, %295 ]
  %298 = phi i8 [ 0, %259 ], [ %292, %290 ], [ %292, %295 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #13
  br label %299

299:                                              ; preds = %208, %205, %296, %197
  %300 = phi i8 [ 1, %197 ], [ %298, %296 ], [ 0, %208 ], [ 0, %205 ]
  %301 = phi i32 [ %201, %197 ], [ %297, %296 ], [ -1431655766, %208 ], [ -1431655766, %205 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #13
  br label %302

302:                                              ; preds = %299, %98
  %303 = phi i8 [ 0, %98 ], [ %300, %299 ]
  %304 = phi i32 [ -1431655766, %98 ], [ %301, %299 ]
  %305 = bitcast %"class.blink::LayoutUnit"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %305) #13
  %306 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %34, i64 0, i32 0
  store i32 0, i32* %306, align 4
  %307 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %0, i64 0, i32 0, i32 1
  %308 = load i8, i8* %307, align 8
  %309 = and i8 %308, 1
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %424

311:                                              ; preds = %302
  %312 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %313 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %312, i64 0, i32 4
  %314 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %313 to i96*
  %315 = load i96, i96* %314, align 4
  %316 = and i96 %315, 113336795588871485128704
  %317 = icmp eq i96 %316, 75557863725914323419136
  br i1 %317, label %318, label %424

318:                                              ; preds = %311
  %319 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %320 = load i64, i64* %319, align 8
  %321 = trunc i64 %320 to i32
  %322 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %322)
  %323 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %323)
  %324 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %324)
  %325 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %325)
  %326 = load i160, i160* %87, align 8, !noalias !22
  %327 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 7, i32 0, i32 0
  %328 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %327, align 8, !noalias !22
  %329 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 18
  %330 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 17
  %331 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 7
  %332 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %328, i64 0, i32 8
  store %"class.blink::Length"* %329, %"class.blink::Length"** %6, align 8, !alias.scope !22
  store %"class.blink::Length"* %330, %"class.blink::Length"** %7, align 8, !alias.scope !22
  store %"class.blink::Length"* %331, %"class.blink::Length"** %8, align 8, !alias.scope !22
  store %"class.blink::Length"* %332, %"class.blink::Length"** %9, align 8, !alias.scope !22
  %333 = and i160 %326, 15211807202738752817960438464512
  %334 = icmp eq i160 %333, 0
  %335 = and i160 %326, 41538374868278621028243970633760768
  %336 = icmp eq i160 %335, 0
  %337 = select i1 %336, %"class.blink::Length"** %9, %"class.blink::Length"** %7
  %338 = select i1 %336, %"class.blink::Length"** %6, %"class.blink::Length"** %8
  %339 = select i1 %334, %"class.blink::Length"** %337, %"class.blink::Length"** %338
  %340 = load %"class.blink::Length"*, %"class.blink::Length"** %339, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %322)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %323)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %324)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %325)
  %341 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %340, i64 0, i32 2
  %342 = load i8, i8* %341, align 1
  %343 = icmp eq i8 %342, 2
  br i1 %343, label %344, label %365, !prof !3

344:                                              ; preds = %318
  %345 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %340, i64 0, i32 3
  %346 = load i8, i8* %345, align 2, !range !4
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %351, label %348

348:                                              ; preds = %344
  %349 = bitcast %"class.blink::Length"* %340 to float*
  %350 = load float, float* %349, align 4
  br label %355

351:                                              ; preds = %344
  %352 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %340, i64 0, i32 0, i32 0
  %353 = load i32, i32* %352, align 4
  %354 = sitofp i32 %353 to float
  br label %355

355:                                              ; preds = %351, %348
  %356 = phi float [ %350, %348 ], [ %354, %351 ]
  %357 = fmul float %356, 6.400000e+01
  %358 = fcmp ult float %357, 0xC1E0000000000000
  %359 = fcmp ugt float %357, 0x41DFFFFFE0000000
  %360 = fcmp ogt float %357, 0xC1E0000000000000
  %361 = select i1 %360, float %357, float 0xC1E0000000000000
  %362 = fptosi float %361 to i32
  %363 = select i1 %358, i32 0, i32 2147483647
  %364 = select i1 %359, i32 %363, i32 %362
  br label %371

365:                                              ; preds = %318
  %366 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %340, i32 %321) #13
  %367 = load i160, i160* %87, align 8, !noalias !25
  %368 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %327, align 8, !noalias !25
  %369 = and i160 %367, 15211807202738752817960438464512
  %370 = and i160 %367, 41538374868278621028243970633760768
  br label %371

371:                                              ; preds = %355, %365
  %372 = phi i160 [ %335, %355 ], [ %370, %365 ]
  %373 = phi i160 [ %333, %355 ], [ %369, %365 ]
  %374 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %328, %355 ], [ %368, %365 ]
  %375 = phi i32 [ %364, %355 ], [ %366, %365 ]
  %376 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %376)
  %377 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %377)
  %378 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378)
  %379 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %379)
  %380 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %374, i64 0, i32 18
  %381 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %374, i64 0, i32 17
  %382 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %374, i64 0, i32 7
  %383 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %374, i64 0, i32 8
  store %"class.blink::Length"* %380, %"class.blink::Length"** %10, align 8, !alias.scope !25
  store %"class.blink::Length"* %381, %"class.blink::Length"** %11, align 8, !alias.scope !25
  store %"class.blink::Length"* %382, %"class.blink::Length"** %12, align 8, !alias.scope !25
  store %"class.blink::Length"* %383, %"class.blink::Length"** %13, align 8, !alias.scope !25
  %384 = icmp eq i160 %373, 0
  %385 = icmp eq i160 %372, 0
  %386 = select i1 %385, %"class.blink::Length"** %11, %"class.blink::Length"** %13
  %387 = select i1 %385, %"class.blink::Length"** %12, %"class.blink::Length"** %10
  %388 = select i1 %384, %"class.blink::Length"** %386, %"class.blink::Length"** %387
  %389 = load %"class.blink::Length"*, %"class.blink::Length"** %388, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %376)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %377)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %379)
  %390 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %389, i64 0, i32 2
  %391 = load i8, i8* %390, align 1
  %392 = icmp eq i8 %391, 2
  br i1 %392, label %393, label %414, !prof !3

393:                                              ; preds = %371
  %394 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %389, i64 0, i32 3
  %395 = load i8, i8* %394, align 2, !range !4
  %396 = icmp eq i8 %395, 0
  br i1 %396, label %400, label %397

397:                                              ; preds = %393
  %398 = bitcast %"class.blink::Length"* %389 to float*
  %399 = load float, float* %398, align 4
  br label %404

400:                                              ; preds = %393
  %401 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %389, i64 0, i32 0, i32 0
  %402 = load i32, i32* %401, align 4
  %403 = sitofp i32 %402 to float
  br label %404

404:                                              ; preds = %400, %397
  %405 = phi float [ %399, %397 ], [ %403, %400 ]
  %406 = fmul float %405, 6.400000e+01
  %407 = fcmp ult float %406, 0xC1E0000000000000
  %408 = fcmp ugt float %406, 0x41DFFFFFE0000000
  %409 = fcmp ogt float %406, 0xC1E0000000000000
  %410 = select i1 %409, float %406, float 0xC1E0000000000000
  %411 = fptosi float %410 to i32
  %412 = select i1 %407, i32 0, i32 2147483647
  %413 = select i1 %408, i32 %412, i32 %411
  br label %416

414:                                              ; preds = %371
  %415 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %389, i32 %321) #13
  br label %416

416:                                              ; preds = %404, %414
  %417 = phi i32 [ %413, %404 ], [ %415, %414 ]
  %418 = icmp slt i32 %417, 0
  %419 = select i1 %418, i32 -2147483648, i32 2147483647
  %420 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %375, i32 %417) #13
  %421 = extractvalue { i32, i1 } %420, 1
  %422 = extractvalue { i32, i1 } %420, 0
  %423 = select i1 %421, i32 %419, i32 %422, !prof !2
  store i32 %423, i32* %306, align 4
  br label %424

424:                                              ; preds = %302, %416, %311
  %425 = bitcast i64* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %425) #13
  %426 = bitcast i64* %35 to i32*
  store i32 -1431655766, i32* %426, align 8
  %427 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %36, i64 0, i32 1, i32 0
  store i32 -1431655766, i32* %427, align 4
  %428 = call i64 @_ZNK5blink11NGBlockNode14GetAspectRatioEv(%"class.blink::NGBlockNode"* %0) #13
  store i64 %428, i64* %35, align 8
  %429 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.1830", %"class.absl::optional_internal::optional_data_dtor_base.1830"* %37, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %429)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %429, i8 -86, i64 12, i1 false)
  %430 = load i32, i32* %25, align 4
  %431 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.1830", %"class.absl::optional_internal::optional_data_dtor_base.1830"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %431)
  %432 = bitcast i64* %15 to %"class.absl::optional.1633"*
  %433 = bitcast i64* %16 to %"class.absl::optional.1633"*
  %434 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %434) #13
  store i64 -6148914691236517376, i64* %15, align 8
  %435 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %435) #13
  store i64 -6148914691236517376, i64* %16, align 8
  call void @_ZNK5blink17NGLayoutInputNode13IntrinsicSizeEPN4absl8optionalINS_10LayoutUnitEEES5_(%"class.blink::NGLayoutInputNode"* %47, %"class.absl::optional.1633"* nonnull %432, %"class.absl::optional.1633"* nonnull %433) #13
  %436 = load i8, i8* %434, align 8, !range !4
  %437 = icmp eq i8 %436, 0
  br i1 %437, label %457, label %438

438:                                              ; preds = %424
  %439 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 0, i32 0
  %440 = load i32, i32* %439, align 4
  %441 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 1, i32 0
  %442 = load i32, i32* %441, align 4
  %443 = icmp slt i32 %442, 0
  %444 = select i1 %443, i32 -2147483648, i32 2147483647
  %445 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %440, i32 %442) #13
  %446 = extractvalue { i32, i1 } %445, 1
  %447 = extractvalue { i32, i1 } %445, 0
  %448 = select i1 %446, i32 %444, i32 %447, !prof !2
  %449 = getelementptr inbounds %"class.absl::optional.1633", %"class.absl::optional.1633"* %432, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %450 = load i32, i32* %449, align 4
  %451 = icmp slt i32 %448, 0
  %452 = select i1 %451, i32 -2147483648, i32 2147483647
  %453 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %450, i32 %448) #13
  %454 = extractvalue { i32, i1 } %453, 1
  %455 = extractvalue { i32, i1 } %453, 0
  %456 = select i1 %454, i32 %452, i32 %455, !prof !2
  store i32 %456, i32* %449, align 4
  br label %515

457:                                              ; preds = %424
  %458 = load i32, i32* %426, align 8
  %459 = icmp eq i32 %458, 0
  %460 = load i32, i32* %427, align 4
  %461 = icmp eq i32 %460, 0
  %462 = or i1 %459, %461
  br i1 %462, label %463, label %515

463:                                              ; preds = %457
  %464 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %465 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %464, i64 0, i32 5, i32 0
  %466 = bitcast %"class.blink::ComputedStyle"** %465 to %"class.blink::ComputedStyleBase"**
  %467 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %466, align 8
  %468 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %467, i64 0, i32 1, i32 0, i32 0
  %469 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %468, align 8
  %470 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %469, i64 0, i32 2, i32 0, i32 0
  %471 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %470, align 8
  %472 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %471, i64 0, i32 6
  %473 = load float, float* %472, align 8
  %474 = fmul float %473, 3.000000e+02
  %475 = fmul float %474, 6.400000e+01
  %476 = fcmp ult float %475, 0xC1E0000000000000
  %477 = fcmp ugt float %475, 0x41DFFFFFE0000000
  %478 = fcmp ogt float %475, 0xC1E0000000000000
  %479 = select i1 %478, float %475, float 0xC1E0000000000000
  %480 = fptosi float %479 to i32
  %481 = select i1 %476, i32 0, i32 2147483647
  %482 = select i1 %477, i32 %481, i32 %480
  %483 = fmul float %473, 1.500000e+02
  %484 = fmul float %483, 6.400000e+01
  %485 = fcmp ult float %484, 0xC1E0000000000000
  %486 = fcmp ugt float %484, 0x41DFFFFFE0000000
  %487 = fcmp ogt float %484, 0xC1E0000000000000
  %488 = select i1 %487, float %484, float 0xC1E0000000000000
  %489 = fptosi float %488 to i32
  %490 = select i1 %485, i32 0, i32 2147483647
  %491 = select i1 %486, i32 %490, i32 %489
  %492 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %467, i64 0, i32 9
  %493 = bitcast [20 x i8]* %492 to i160*
  %494 = load i160, i160* %493, align 8
  %495 = and i160 %494, 15211807202738752817960438464512
  %496 = icmp eq i160 %495, 0
  %497 = select i1 %496, i32 %482, i32 %491
  %498 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 0, i32 0
  %499 = load i32, i32* %498, align 4
  %500 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 1, i32 0
  %501 = load i32, i32* %500, align 4
  %502 = icmp slt i32 %501, 0
  %503 = select i1 %502, i32 -2147483648, i32 2147483647
  %504 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %499, i32 %501) #13
  %505 = extractvalue { i32, i1 } %504, 1
  %506 = extractvalue { i32, i1 } %504, 0
  %507 = select i1 %505, i32 %503, i32 %506, !prof !2
  %508 = icmp slt i32 %507, 0
  %509 = select i1 %508, i32 -2147483648, i32 2147483647
  %510 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %497, i32 %507) #13
  %511 = extractvalue { i32, i1 } %510, 1
  %512 = extractvalue { i32, i1 } %510, 0
  %513 = select i1 %511, i32 %509, i32 %512, !prof !2
  %514 = getelementptr inbounds %"class.absl::optional.1633", %"class.absl::optional.1633"* %432, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %513, i32* %514, align 4
  store i8 1, i8* %434, align 8
  br label %515

515:                                              ; preds = %457, %463, %438
  %516 = phi i8 [ 1, %463 ], [ 1, %438 ], [ 0, %457 ]
  %517 = load i8, i8* %435, align 8, !range !4
  %518 = icmp eq i8 %517, 0
  br i1 %518, label %538, label %519

519:                                              ; preds = %515
  %520 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %521 = load i32, i32* %520, align 4
  %522 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %523 = load i32, i32* %522, align 4
  %524 = icmp slt i32 %523, 0
  %525 = select i1 %524, i32 -2147483648, i32 2147483647
  %526 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %521, i32 %523) #13
  %527 = extractvalue { i32, i1 } %526, 1
  %528 = extractvalue { i32, i1 } %526, 0
  %529 = select i1 %527, i32 %525, i32 %528, !prof !2
  %530 = getelementptr inbounds %"class.absl::optional.1633", %"class.absl::optional.1633"* %433, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %531 = load i32, i32* %530, align 4
  %532 = icmp slt i32 %529, 0
  %533 = select i1 %532, i32 -2147483648, i32 2147483647
  %534 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %531, i32 %529) #13
  %535 = extractvalue { i32, i1 } %534, 1
  %536 = extractvalue { i32, i1 } %534, 0
  %537 = select i1 %535, i32 %533, i32 %536, !prof !2
  store i32 %537, i32* %530, align 4
  br label %596

538:                                              ; preds = %515
  %539 = load i32, i32* %426, align 8
  %540 = icmp eq i32 %539, 0
  %541 = load i32, i32* %427, align 4
  %542 = icmp eq i32 %541, 0
  %543 = or i1 %540, %542
  br i1 %543, label %544, label %596

544:                                              ; preds = %538
  %545 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %48, align 8
  %546 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %545, i64 0, i32 5, i32 0
  %547 = bitcast %"class.blink::ComputedStyle"** %546 to %"class.blink::ComputedStyleBase"**
  %548 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %547, align 8
  %549 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %548, i64 0, i32 1, i32 0, i32 0
  %550 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %549, align 8
  %551 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %550, i64 0, i32 2, i32 0, i32 0
  %552 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %551, align 8
  %553 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %552, i64 0, i32 6
  %554 = load float, float* %553, align 8
  %555 = fmul float %554, 3.000000e+02
  %556 = fmul float %555, 6.400000e+01
  %557 = fcmp ult float %556, 0xC1E0000000000000
  %558 = fcmp ugt float %556, 0x41DFFFFFE0000000
  %559 = fcmp ogt float %556, 0xC1E0000000000000
  %560 = select i1 %559, float %556, float 0xC1E0000000000000
  %561 = fptosi float %560 to i32
  %562 = select i1 %557, i32 0, i32 2147483647
  %563 = select i1 %558, i32 %562, i32 %561
  %564 = fmul float %554, 1.500000e+02
  %565 = fmul float %564, 6.400000e+01
  %566 = fcmp ult float %565, 0xC1E0000000000000
  %567 = fcmp ugt float %565, 0x41DFFFFFE0000000
  %568 = fcmp ogt float %565, 0xC1E0000000000000
  %569 = select i1 %568, float %565, float 0xC1E0000000000000
  %570 = fptosi float %569 to i32
  %571 = select i1 %566, i32 0, i32 2147483647
  %572 = select i1 %567, i32 %571, i32 %570
  %573 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %548, i64 0, i32 9
  %574 = bitcast [20 x i8]* %573 to i160*
  %575 = load i160, i160* %574, align 8
  %576 = and i160 %575, 15211807202738752817960438464512
  %577 = icmp eq i160 %576, 0
  %578 = select i1 %577, i32 %572, i32 %563
  %579 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %580 = load i32, i32* %579, align 4
  %581 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %582 = load i32, i32* %581, align 4
  %583 = icmp slt i32 %582, 0
  %584 = select i1 %583, i32 -2147483648, i32 2147483647
  %585 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %580, i32 %582) #13
  %586 = extractvalue { i32, i1 } %585, 1
  %587 = extractvalue { i32, i1 } %585, 0
  %588 = select i1 %586, i32 %584, i32 %587, !prof !2
  %589 = icmp slt i32 %588, 0
  %590 = select i1 %589, i32 -2147483648, i32 2147483647
  %591 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %578, i32 %588) #13
  %592 = extractvalue { i32, i1 } %591, 1
  %593 = extractvalue { i32, i1 } %591, 0
  %594 = select i1 %592, i32 %590, i32 %593, !prof !2
  %595 = getelementptr inbounds %"class.absl::optional.1633", %"class.absl::optional.1633"* %433, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %594, i32* %595, align 4
  store i8 1, i8* %435, align 8
  br label %596

596:                                              ; preds = %538, %544, %519
  %597 = phi i1 [ false, %544 ], [ false, %519 ], [ true, %538 ]
  %598 = icmp eq i8 %516, 0
  br i1 %598, label %599, label %605

599:                                              ; preds = %596
  br i1 %597, label %623, label %600

600:                                              ; preds = %599
  %601 = getelementptr inbounds %"class.absl::optional.1633", %"class.absl::optional.1633"* %433, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %602 = load i32, i32* %601, align 4
  %603 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %36, i32 %430, i32 %602) #13
  %604 = getelementptr inbounds %"class.absl::optional.1633", %"class.absl::optional.1633"* %432, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %603, i32* %604, align 4
  store i8 1, i8* %434, align 8
  br label %614

605:                                              ; preds = %596
  %606 = getelementptr inbounds %"class.absl::optional.1633", %"class.absl::optional.1633"* %432, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %607 = load i32, i32* %606, align 4
  br i1 %597, label %611, label %608

608:                                              ; preds = %605
  %609 = getelementptr inbounds %"class.absl::optional.1633", %"class.absl::optional.1633"* %433, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %610 = load i32, i32* %609, align 4
  br label %614

611:                                              ; preds = %605
  %612 = call i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %36, i32 %430, i32 %607) #13
  %613 = getelementptr inbounds %"class.absl::optional.1633", %"class.absl::optional.1633"* %433, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %612, i32* %613, align 4
  store i8 1, i8* %435, align 8
  br label %614

614:                                              ; preds = %600, %608, %611
  %615 = phi i32 [ %612, %611 ], [ %610, %608 ], [ %602, %600 ]
  %616 = phi i32 [ %607, %611 ], [ %607, %608 ], [ %603, %600 ]
  store i8 1, i8* %431, align 8
  %617 = zext i32 %615 to i64
  %618 = shl nuw i64 %617, 32
  %619 = zext i32 %616 to i64
  %620 = or i64 %618, %619
  %621 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.1830", %"class.absl::optional_internal::optional_data_dtor_base.1830"* %14, i64 0, i32 1
  %622 = bitcast %union.anon.1831* %621 to i64*
  store i64 %620, i64* %622, align 4
  br label %624

623:                                              ; preds = %599
  store i8 0, i8* %431, align 8
  br label %624

624:                                              ; preds = %614, %623
  %625 = phi i32 [ undef, %623 ], [ %615, %614 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %435) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %434) #13
  %626 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.1830"* %14 to i64*
  %627 = load i64, i64* %626, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %431)
  %628 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.1830"* %37 to i64*
  store i64 %627, i64* %628, align 8
  %629 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.1830", %"class.absl::optional_internal::optional_data_dtor_base.1830"* %37, i64 0, i32 1, i32 0, i32 1, i32 0
  store i32 %625, i32* %629, align 8
  %630 = bitcast %class.anon.1832* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %630) #13
  %631 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %38, i64 0, i32 0
  store %"class.blink::NGConstraintSpace"* %1, %"class.blink::NGConstraintSpace"** %631, align 8
  %632 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %38, i64 0, i32 1
  store %"struct.blink::NGBoxStrut"* %2, %"struct.blink::NGBoxStrut"** %632, align 8
  %633 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %38, i64 0, i32 2
  store %"class.blink::ComputedStyle"* %58, %"class.blink::ComputedStyle"** %633, align 8
  %634 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %38, i64 0, i32 3
  store %"class.blink::LayoutUnit"* %34, %"class.blink::LayoutUnit"** %634, align 8
  %635 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %38, i64 0, i32 4
  %636 = bitcast %"struct.blink::LogicalSize"** %635 to i64**
  store i64* %35, i64** %636, align 8
  %637 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %38, i64 0, i32 5
  %638 = bitcast %"struct.blink::MinMaxSizes"** %637 to i64**
  store i64* %26, i64** %638, align 8
  %639 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %38, i64 0, i32 6
  store i32* %25, i32** %639, align 8
  %640 = load i160, i160* %87, align 8
  %641 = and i160 %640, 15211807202738752817960438464512
  %642 = icmp eq i160 %641, 0
  %643 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %60, align 8
  %644 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %643, i64 0, i32 8
  %645 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %643, i64 0, i32 3
  %646 = select i1 %642, %"class.blink::Length"* %644, %"class.blink::Length"* %645
  %647 = bitcast i32* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %647)
  %648 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %648)
  store i32 0, i32* %39, align 8
  store i32 0, i32* %40, align 4
  %649 = icmp eq i32 %3, 1
  %650 = trunc i64 %627 to i8
  %651 = lshr i64 %627, 32
  %652 = trunc i64 %651 to i32
  br i1 %649, label %653, label %654

653:                                              ; preds = %624
  store i32 0, i32* %39, align 8
  store i32 2147483647, i32* %40, align 4
  br label %911

654:                                              ; preds = %624
  %655 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %643, i64 0, i32 7
  %656 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %643, i64 0, i32 6
  %657 = select i1 %642, %"class.blink::Length"* %655, %"class.blink::Length"* %656
  %658 = load i32, i32* %306, align 4
  %659 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %657, i64 0, i32 2
  %660 = load i8, i8* %659, align 1
  switch i8 %660, label %695 [
    i8 0, label %684
    i8 8, label %661
    i8 1, label %661
    i8 6, label %677
  ], !prof !5

661:                                              ; preds = %654, %654
  %662 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %663 = load i32, i32* %662, align 8
  %664 = lshr i32 %663, 26
  %665 = and i32 %664, 3
  switch i32 %665, label %666 [
    i32 0, label %667
    i32 1, label %695
    i32 2, label %684
    i32 3, label %669
  ]

666:                                              ; preds = %661
  unreachable

667:                                              ; preds = %661
  %668 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 0, i32 0
  br label %673

669:                                              ; preds = %661
  %670 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %671 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %670 to i32**
  %672 = load i32*, i32** %671, align 8
  br label %673

673:                                              ; preds = %669, %667
  %674 = phi i32* [ %672, %669 ], [ %668, %667 ]
  %675 = load i32, i32* %674, align 8
  %676 = icmp eq i32 %675, -64
  br i1 %676, label %684, label %695, !prof !3

677:                                              ; preds = %654
  %678 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %679 = load i64, i64* %678, align 8
  %680 = trunc i64 %679 to i32
  %681 = icmp eq i32 %680, -64
  br i1 %681, label %684, label %682, !prof !3

682:                                              ; preds = %677
  %683 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %683) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %683, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %683, align 4
  br label %722

684:                                              ; preds = %677, %673, %661, %654
  %685 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 0, i32 0
  %686 = load i32, i32* %685, align 4
  %687 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 1, i32 0
  %688 = load i32, i32* %687, align 4
  %689 = icmp slt i32 %688, 0
  %690 = select i1 %689, i32 -2147483648, i32 2147483647
  %691 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %686, i32 %688) #13
  %692 = extractvalue { i32, i1 } %691, 1
  %693 = extractvalue { i32, i1 } %691, 0
  %694 = select i1 %692, i32 %690, i32 %693, !prof !2
  br label %729

695:                                              ; preds = %673, %661, %654
  %696 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %696) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %696, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %696, align 4
  switch i8 %660, label %722 [
    i8 3, label %697
    i8 4, label %697
    i8 7, label %697
    i8 5, label %697
  ]

697:                                              ; preds = %695, %695, %695, %695
  %698 = load i32, i32* %426, align 8
  %699 = icmp eq i32 %698, 0
  %700 = load i32, i32* %427, align 4
  %701 = icmp eq i32 %700, 0
  %702 = or i1 %699, %701
  br i1 %702, label %703, label %706

703:                                              ; preds = %697
  %704 = icmp eq i8 %650, 0
  br i1 %704, label %705, label %715, !prof !2

705:                                              ; preds = %703
  call void @llvm.trap() #13
  unreachable

706:                                              ; preds = %697
  %707 = icmp eq i8 %303, 0
  br i1 %707, label %711, label %708

708:                                              ; preds = %706
  %709 = load i32, i32* %25, align 4
  %710 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %36, i32 %709, i32 %304) #13
  br label %715

711:                                              ; preds = %706
  %712 = icmp eq i8 %650, 0
  br i1 %712, label %713, label %715

713:                                              ; preds = %711
  %714 = call fastcc i32 @"_ZZN5blink19ComputeReplacedSizeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutENS_16ReplacedSizeModeEENK3$_4clEv"(%class.anon.1832* nonnull %38) #13
  br label %715

715:                                              ; preds = %711, %703, %713, %708
  %716 = phi i32 [ %710, %708 ], [ %714, %713 ], [ %652, %703 ], [ %652, %711 ]
  %717 = zext i32 %716 to i64
  %718 = shl nuw i64 %717, 32
  %719 = or i64 %718, %717
  %720 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %17, i64 0, i32 0, i32 0, i32 0, i32 1
  %721 = bitcast %union.anon.1824* %720 to i64*
  store i64 %719, i64* %721, align 4
  store i8 1, i8* %696, align 4
  br label %722

722:                                              ; preds = %715, %695, %682
  %723 = phi i8* [ %696, %715 ], [ %683, %682 ], [ %696, %695 ]
  %724 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %58, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.absl::optional.1820"* nonnull dereferenceable(12) %17, %"class.blink::Length"* dereferenceable(8) %657, i32 %658) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* %723) #13
  %725 = load i160, i160* %87, align 8
  %726 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %60, align 8
  %727 = load i32, i32* %306, align 4
  %728 = and i160 %725, 15211807202738752817960438464512
  br label %729

729:                                              ; preds = %684, %722
  %730 = phi i160 [ %641, %684 ], [ %728, %722 ]
  %731 = phi i32 [ %658, %684 ], [ %727, %722 ]
  %732 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %643, %684 ], [ %726, %722 ]
  %733 = phi i32 [ %694, %684 ], [ %724, %722 ]
  %734 = icmp eq i160 %730, 0
  %735 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %732, i64 0, i32 5
  %736 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %732, i64 0, i32 4
  %737 = select i1 %734, %"class.blink::Length"* %735, %"class.blink::Length"* %736
  %738 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %737, i64 0, i32 2
  %739 = load i8, i8* %738, align 1
  switch i8 %739, label %763 [
    i8 12, label %793
    i8 8, label %740
    i8 1, label %740
    i8 6, label %756
  ], !prof !5

740:                                              ; preds = %729, %729
  %741 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %742 = load i32, i32* %741, align 8
  %743 = lshr i32 %742, 26
  %744 = and i32 %743, 3
  switch i32 %744, label %745 [
    i32 0, label %746
    i32 1, label %763
    i32 2, label %793
    i32 3, label %748
  ]

745:                                              ; preds = %740
  unreachable

746:                                              ; preds = %740
  %747 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 0, i32 0
  br label %752

748:                                              ; preds = %740
  %749 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %750 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %749 to i32**
  %751 = load i32*, i32** %750, align 8
  br label %752

752:                                              ; preds = %748, %746
  %753 = phi i32* [ %751, %748 ], [ %747, %746 ]
  %754 = load i32, i32* %753, align 8
  %755 = icmp eq i32 %754, -64
  br i1 %755, label %793, label %763, !prof !3

756:                                              ; preds = %729
  %757 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %758 = load i64, i64* %757, align 8
  %759 = trunc i64 %758 to i32
  %760 = icmp eq i32 %759, -64
  br i1 %760, label %793, label %761, !prof !3

761:                                              ; preds = %756
  %762 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %762) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %762, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %762, align 4
  br label %790

763:                                              ; preds = %752, %740, %729
  %764 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %764) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %764, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %764, align 4
  switch i8 %739, label %790 [
    i8 3, label %765
    i8 4, label %765
    i8 7, label %765
    i8 5, label %765
  ]

765:                                              ; preds = %763, %763, %763, %763
  %766 = load i32, i32* %426, align 8
  %767 = icmp eq i32 %766, 0
  %768 = load i32, i32* %427, align 4
  %769 = icmp eq i32 %768, 0
  %770 = or i1 %767, %769
  br i1 %770, label %771, label %774

771:                                              ; preds = %765
  %772 = icmp eq i8 %650, 0
  br i1 %772, label %773, label %783, !prof !2

773:                                              ; preds = %771
  call void @llvm.trap() #13
  unreachable

774:                                              ; preds = %765
  %775 = icmp eq i8 %303, 0
  br i1 %775, label %779, label %776

776:                                              ; preds = %774
  %777 = load i32, i32* %25, align 4
  %778 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %36, i32 %777, i32 %304) #13
  br label %783

779:                                              ; preds = %774
  %780 = icmp eq i8 %650, 0
  br i1 %780, label %781, label %783

781:                                              ; preds = %779
  %782 = call fastcc i32 @"_ZZN5blink19ComputeReplacedSizeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutENS_16ReplacedSizeModeEENK3$_4clEv"(%class.anon.1832* nonnull %38) #13
  br label %783

783:                                              ; preds = %779, %771, %781, %776
  %784 = phi i32 [ %778, %776 ], [ %782, %781 ], [ %652, %771 ], [ %652, %779 ]
  %785 = zext i32 %784 to i64
  %786 = shl nuw i64 %785, 32
  %787 = or i64 %786, %785
  %788 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %18, i64 0, i32 0, i32 0, i32 0, i32 1
  %789 = bitcast %union.anon.1824* %788 to i64*
  store i64 %787, i64* %789, align 4
  store i8 1, i8* %764, align 4
  br label %790

790:                                              ; preds = %783, %763, %761
  %791 = phi i8* [ %764, %783 ], [ %762, %761 ], [ %764, %763 ]
  %792 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %58, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.absl::optional.1820"* nonnull dereferenceable(12) %18, %"class.blink::Length"* dereferenceable(8) %737, i32 %731) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* %791) #13
  br label %793

793:                                              ; preds = %729, %740, %752, %756, %790
  %794 = phi i32 [ %792, %790 ], [ 2147483647, %752 ], [ 2147483647, %729 ], [ 2147483647, %756 ], [ 2147483647, %740 ]
  store i32 %733, i32* %39, align 8
  store i32 %794, i32* %40, align 4
  %795 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %796 = load i32, i32* %795, align 8
  %797 = and i32 %796, 2097152
  %798 = icmp eq i32 %797, 0
  br i1 %798, label %803, label %799

799:                                              ; preds = %793
  %800 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %801 = load i64, i64* %800, align 8
  %802 = trunc i64 %801 to i32
  br label %908

803:                                              ; preds = %793
  %804 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %646, i64 0, i32 2
  %805 = load i8, i8* %804, align 1
  %806 = icmp eq i8 %805, 0
  br i1 %806, label %807, label %815

807:                                              ; preds = %803
  %808 = and i32 %796, 393216
  %809 = icmp eq i32 %808, 0
  br i1 %809, label %911, label %810

810:                                              ; preds = %807
  %811 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %812 = load i64, i64* %811, align 8
  %813 = trunc i64 %812 to i32
  %814 = icmp eq i32 %813, -64
  br i1 %814, label %911, label %815

815:                                              ; preds = %810, %803
  %816 = bitcast i64* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %816) #13
  %817 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %42, i64 0, i32 2
  %818 = bitcast %"class.blink::Length"* %646 to i64*
  %819 = load i64, i64* %818, align 4
  store i64 %819, i64* %41, align 8
  %820 = and i64 %819, 280375465082880
  %821 = icmp eq i64 %820, 8796093022208
  %822 = lshr i64 %819, 40
  %823 = trunc i64 %822 to i8
  br i1 %821, label %824, label %826

824:                                              ; preds = %815
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %42) #13
  %825 = load i8, i8* %817, align 1
  br label %826

826:                                              ; preds = %815, %824
  %827 = phi i8 [ %823, %815 ], [ %825, %824 ]
  %828 = icmp eq i8 %827, 0
  br i1 %828, label %829, label %838

829:                                              ; preds = %826
  %830 = bitcast i64* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %830) #13
  %831 = bitcast i64* %43 to i32*
  store i32 0, i32* %831, align 8, !alias.scope !28
  %832 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %44, i64 0, i32 1
  store i8 0, i8* %832, align 4, !alias.scope !28
  %833 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %44, i64 0, i32 2
  store i8 6, i8* %833, align 1, !alias.scope !28
  %834 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %44, i64 0, i32 3
  store i8 0, i8* %834, align 2, !alias.scope !28
  %835 = load i64, i64* %43, align 8
  store i64 %835, i64* %41, align 8
  %836 = lshr i64 %835, 40
  %837 = trunc i64 %836 to i8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %830) #13
  br label %838

838:                                              ; preds = %829, %826
  %839 = phi i8 [ %837, %829 ], [ %827, %826 ]
  switch i8 %839, label %863 [
    i8 8, label %840
    i8 1, label %840
    i8 6, label %855
  ]

840:                                              ; preds = %838, %838
  %841 = load i32, i32* %795, align 8
  %842 = lshr i32 %841, 26
  %843 = and i32 %842, 3
  switch i32 %843, label %844 [
    i32 0, label %845
    i32 1, label %863
    i32 2, label %900
    i32 3, label %847
  ]

844:                                              ; preds = %840
  unreachable

845:                                              ; preds = %840
  %846 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 0, i32 0, i32 0
  br label %851

847:                                              ; preds = %840
  %848 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %849 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %848 to i32**
  %850 = load i32*, i32** %849, align 8
  br label %851

851:                                              ; preds = %847, %845
  %852 = phi i32* [ %850, %847 ], [ %846, %845 ]
  %853 = load i32, i32* %852, align 8
  %854 = icmp eq i32 %853, -64
  br i1 %854, label %900, label %863

855:                                              ; preds = %838
  %856 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %857 = load i64, i64* %856, align 8
  %858 = trunc i64 %857 to i32
  %859 = icmp eq i32 %858, -64
  br i1 %859, label %900, label %860

860:                                              ; preds = %855
  %861 = load i32, i32* %306, align 4
  %862 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %862) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %862, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %862, align 4
  br label %891

863:                                              ; preds = %840, %838, %851
  %864 = load i32, i32* %306, align 4
  %865 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %865) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %865, i8 -86, i64 12, i1 false) #13
  store i8 0, i8* %865, align 4
  switch i8 %839, label %891 [
    i8 3, label %866
    i8 4, label %866
    i8 7, label %866
    i8 5, label %866
  ]

866:                                              ; preds = %863, %863, %863, %863
  %867 = load i32, i32* %426, align 8
  %868 = icmp eq i32 %867, 0
  %869 = load i32, i32* %427, align 4
  %870 = icmp eq i32 %869, 0
  %871 = or i1 %868, %870
  br i1 %871, label %872, label %875

872:                                              ; preds = %866
  %873 = icmp eq i8 %650, 0
  br i1 %873, label %874, label %884, !prof !2

874:                                              ; preds = %872
  call void @llvm.trap() #13
  unreachable

875:                                              ; preds = %866
  %876 = icmp eq i8 %303, 0
  br i1 %876, label %880, label %877

877:                                              ; preds = %875
  %878 = load i32, i32* %25, align 4
  %879 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %36, i32 %878, i32 %304) #13
  br label %884

880:                                              ; preds = %875
  %881 = icmp eq i8 %650, 0
  br i1 %881, label %882, label %884

882:                                              ; preds = %880
  %883 = call fastcc i32 @"_ZZN5blink19ComputeReplacedSizeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutENS_16ReplacedSizeModeEENK3$_4clEv"(%class.anon.1832* nonnull %38) #13
  br label %884

884:                                              ; preds = %880, %872, %882, %877
  %885 = phi i32 [ %879, %877 ], [ %883, %882 ], [ %652, %872 ], [ %652, %880 ]
  %886 = zext i32 %885 to i64
  %887 = shl nuw i64 %886, 32
  %888 = or i64 %887, %886
  %889 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %19, i64 0, i32 0, i32 0, i32 0, i32 1
  %890 = bitcast %union.anon.1824* %889 to i64*
  store i64 %888, i64* %890, align 4
  store i8 1, i8* %865, align 4
  br label %891

891:                                              ; preds = %860, %863, %884
  %892 = phi i8* [ %862, %860 ], [ %865, %863 ], [ %865, %884 ]
  %893 = phi i32 [ %861, %860 ], [ %864, %863 ], [ %864, %884 ]
  %894 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %58, %"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"class.absl::optional.1820"* nonnull dereferenceable(12) %19, %"class.blink::Length"* nonnull dereferenceable(8) %42, i32 %893) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %892) #13
  %895 = icmp slt i32 %794, %894
  %896 = select i1 %895, i32 %794, i32 %894
  %897 = icmp slt i32 %733, %896
  %898 = select i1 %897, i32 %896, i32 %733
  %899 = load i8, i8* %817, align 1
  br label %900

900:                                              ; preds = %840, %851, %891, %855
  %901 = phi i8 [ %839, %855 ], [ %899, %891 ], [ %839, %851 ], [ %839, %840 ]
  %902 = phi i32 [ -1431655766, %855 ], [ %898, %891 ], [ -1431655766, %851 ], [ -1431655766, %840 ]
  %903 = phi i8 [ 0, %855 ], [ 1, %891 ], [ 0, %851 ], [ 0, %840 ]
  %904 = icmp eq i8 %901, 8
  br i1 %904, label %905, label %906

905:                                              ; preds = %900
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %42) #13
  br label %906

906:                                              ; preds = %905, %900
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %816) #13
  %907 = icmp eq i8 %903, 0
  br i1 %907, label %911, label %908

908:                                              ; preds = %906, %799
  %909 = phi i32 [ %802, %799 ], [ %902, %906 ]
  %910 = icmp eq i8 %303, 0
  br i1 %910, label %922, label %1160

911:                                              ; preds = %810, %807, %906, %653
  %912 = phi i32 [ %733, %906 ], [ 0, %653 ], [ %733, %810 ], [ %733, %807 ]
  %913 = phi i32 [ %794, %906 ], [ 2147483647, %653 ], [ %794, %810 ], [ %794, %807 ]
  %914 = or i8 %303, %650
  %915 = icmp eq i8 %914, 0
  br i1 %915, label %916, label %959

916:                                              ; preds = %911
  %917 = call fastcc i32 @"_ZZN5blink19ComputeReplacedSizeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutENS_16ReplacedSizeModeEENK3$_4clEv"(%class.anon.1832* nonnull %38)
  %918 = icmp slt i32 %913, %917
  %919 = select i1 %918, i32 %913, i32 %917
  %920 = icmp slt i32 %912, %919
  %921 = select i1 %920, i32 %919, i32 %912
  br label %922

922:                                              ; preds = %908, %916
  %923 = phi i32 [ %921, %916 ], [ %909, %908 ]
  %924 = bitcast %"struct.blink::LogicalSize"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %924)
  %925 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %45, i64 0, i32 0, i32 0
  store i32 -64, i32* %925, align 4
  %926 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %45, i64 0, i32 1, i32 0
  store i32 -64, i32* %926, align 4
  %927 = icmp eq i8 %650, 0
  %928 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.1830", %"class.absl::optional_internal::optional_data_dtor_base.1830"* %37, i64 0, i32 1, i32 0
  %929 = select i1 %927, %"struct.blink::LogicalSize"* %45, %"struct.blink::LogicalSize"* %928
  %930 = bitcast %"struct.blink::LogicalSize"* %929 to i64*
  %931 = load i64, i64* %930, align 4
  %932 = lshr i64 %931, 32
  %933 = trunc i64 %932 to i32
  %934 = load i32, i32* %426, align 8
  %935 = icmp eq i32 %934, 0
  %936 = load i32, i32* %427, align 4
  %937 = icmp eq i32 %936, 0
  %938 = or i1 %935, %937
  br i1 %938, label %942, label %939

939:                                              ; preds = %922
  %940 = load i32, i32* %25, align 4
  %941 = call i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %36, i32 %940, i32 %923) #13
  br label %942

942:                                              ; preds = %922, %939
  %943 = phi i32 [ %941, %939 ], [ %933, %922 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %924)
  %944 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %944)
  store i32 %943, i32* %20, align 4
  %945 = bitcast i64* %26 to %"class.blink::LayoutUnit"*
  %946 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %27, i64 0, i32 1
  %947 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %946, i64 0, i32 0
  %948 = load i32, i32* %947, align 4
  %949 = icmp slt i32 %948, %943
  %950 = bitcast i32* %20 to %"class.blink::LayoutUnit"*
  %951 = select i1 %949, %"class.blink::LayoutUnit"* %946, %"class.blink::LayoutUnit"* %950
  %952 = load i32, i32* %95, align 8
  %953 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %951, i64 0, i32 0
  %954 = load i32, i32* %953, align 4
  %955 = icmp slt i32 %952, %954
  %956 = select i1 %955, %"class.blink::LayoutUnit"* %951, %"class.blink::LayoutUnit"* %945
  %957 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %956, i64 0, i32 0
  %958 = load i32, i32* %957, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %944)
  br label %1160

959:                                              ; preds = %911
  %960 = icmp eq i8 %303, 0
  br i1 %960, label %985, label %961

961:                                              ; preds = %959
  %962 = bitcast %"struct.blink::LogicalSize"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %962)
  %963 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %46, i64 0, i32 0, i32 0
  store i32 -64, i32* %963, align 4
  %964 = getelementptr inbounds %"struct.blink::LogicalSize", %"struct.blink::LogicalSize"* %46, i64 0, i32 1, i32 0
  store i32 -64, i32* %964, align 4
  %965 = icmp eq i8 %650, 0
  %966 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.1830", %"class.absl::optional_internal::optional_data_dtor_base.1830"* %37, i64 0, i32 1, i32 0
  %967 = select i1 %965, %"struct.blink::LogicalSize"* %46, %"struct.blink::LogicalSize"* %966
  %968 = bitcast %"struct.blink::LogicalSize"* %967 to i64*
  %969 = load i64, i64* %968, align 4
  %970 = trunc i64 %969 to i32
  %971 = load i32, i32* %426, align 8
  %972 = icmp eq i32 %971, 0
  %973 = load i32, i32* %427, align 4
  %974 = icmp eq i32 %973, 0
  %975 = or i1 %972, %974
  br i1 %975, label %979, label %976

976:                                              ; preds = %961
  %977 = load i32, i32* %25, align 4
  %978 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %36, i32 %977, i32 %304) #13
  br label %979

979:                                              ; preds = %961, %976
  %980 = phi i32 [ %978, %976 ], [ %970, %961 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %962)
  %981 = icmp slt i32 %913, %980
  %982 = select i1 %981, i32 %913, i32 %980
  %983 = icmp slt i32 %912, %982
  %984 = select i1 %983, i32 %982, i32 %912
  br label %1160

985:                                              ; preds = %959
  %986 = icmp eq i8 %650, 0
  br i1 %986, label %987, label %988, !prof !2

987:                                              ; preds = %985
  call void @llvm.trap() #13
  unreachable

988:                                              ; preds = %985
  %989 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %989)
  store i32 %652, i32* %21, align 4
  %990 = icmp slt i32 %913, %652
  %991 = bitcast i32* %40 to %"class.blink::LayoutUnit"*
  %992 = bitcast i32* %21 to %"class.blink::LayoutUnit"*
  %993 = select i1 %990, %"class.blink::LayoutUnit"* %991, %"class.blink::LayoutUnit"* %992
  %994 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %993, i64 0, i32 0
  %995 = load i32, i32* %994, align 4
  %996 = icmp slt i32 %912, %995
  %997 = bitcast i32* %39 to %"class.blink::LayoutUnit"*
  %998 = select i1 %996, %"class.blink::LayoutUnit"* %993, %"class.blink::LayoutUnit"* %997
  %999 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %998, i64 0, i32 0
  %1000 = load i32, i32* %999, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %989)
  %1001 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1001)
  store i32 %625, i32* %22, align 4
  %1002 = bitcast i64* %26 to %"class.blink::LayoutUnit"*
  %1003 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %27, i64 0, i32 1
  %1004 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1003, i64 0, i32 0
  %1005 = load i32, i32* %1004, align 4
  %1006 = icmp slt i32 %1005, %625
  %1007 = bitcast i32* %22 to %"class.blink::LayoutUnit"*
  %1008 = select i1 %1006, %"class.blink::LayoutUnit"* %1003, %"class.blink::LayoutUnit"* %1007
  %1009 = load i32, i32* %95, align 8
  %1010 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1008, i64 0, i32 0
  %1011 = load i32, i32* %1010, align 4
  %1012 = icmp slt i32 %1009, %1011
  %1013 = select i1 %1012, %"class.blink::LayoutUnit"* %1008, %"class.blink::LayoutUnit"* %1002
  %1014 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1013, i64 0, i32 0
  %1015 = load i32, i32* %1014, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1001)
  %1016 = icmp eq i32 %1000, %652
  %1017 = icmp eq i32 %1015, %625
  %1018 = and i1 %1016, %1017
  br i1 %1018, label %1160, label %1019

1019:                                             ; preds = %988
  %1020 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 0, i32 0
  %1021 = load i32, i32* %1020, align 4
  %1022 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 1, i32 0
  %1023 = load i32, i32* %1022, align 4
  %1024 = icmp slt i32 %1023, 0
  %1025 = select i1 %1024, i32 -2147483648, i32 2147483647
  %1026 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1021, i32 %1023) #13
  %1027 = extractvalue { i32, i1 } %1026, 1
  %1028 = extractvalue { i32, i1 } %1026, 0
  %1029 = select i1 %1027, i32 %1025, i32 %1028, !prof !2
  %1030 = icmp sgt i32 %1029, -1
  %1031 = select i1 %1030, i32 -2147483648, i32 2147483647
  %1032 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %652, i32 %1029) #13
  %1033 = extractvalue { i32, i1 } %1032, 1
  %1034 = extractvalue { i32, i1 } %1032, 0
  %1035 = select i1 %1033, i32 %1031, i32 %1034, !prof !2
  %1036 = icmp eq i32 %1035, 0
  br i1 %1036, label %1060, label %1037

1037:                                             ; preds = %1019
  %1038 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1000, i32 %1029) #13
  %1039 = extractvalue { i32, i1 } %1038, 1
  %1040 = extractvalue { i32, i1 } %1038, 0
  %1041 = select i1 %1039, i32 %1031, i32 %1040, !prof !2
  %1042 = sext i32 %1041 to i64
  %1043 = shl nsw i64 %1042, 6
  %1044 = sext i32 %1035 to i64
  %1045 = sdiv i64 %1043, %1044
  %1046 = call i1 @llvm.is.constant.i64(i64 %1045) #13
  br i1 %1046, label %1054, label %1047

1047:                                             ; preds = %1037
  %1048 = icmp slt i64 %1045, 0
  %1049 = select i1 %1048, i32 -2147483648, i32 2147483647
  %1050 = add i64 %1045, 2147483648
  %1051 = icmp ult i64 %1050, 4294967296
  %1052 = trunc i64 %1045 to i32
  %1053 = select i1 %1051, i32 %1052, i32 %1049, !prof !3
  br label %1060

1054:                                             ; preds = %1037
  %1055 = icmp sgt i64 %1045, 2147483647
  br i1 %1055, label %1060, label %1056

1056:                                             ; preds = %1054
  %1057 = icmp sgt i64 %1045, -2147483648
  %1058 = select i1 %1057, i64 %1045, i64 -2147483648
  %1059 = trunc i64 %1058 to i32
  br label %1060

1060:                                             ; preds = %1019, %1047, %1054, %1056
  %1061 = phi i32 [ 2147483647, %1019 ], [ %1053, %1047 ], [ %1059, %1056 ], [ 2147483647, %1054 ]
  %1062 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %1063 = load i32, i32* %1062, align 4
  %1064 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %1065 = load i32, i32* %1064, align 4
  %1066 = icmp slt i32 %1065, 0
  %1067 = select i1 %1066, i32 -2147483648, i32 2147483647
  %1068 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1063, i32 %1065) #13
  %1069 = extractvalue { i32, i1 } %1068, 1
  %1070 = extractvalue { i32, i1 } %1068, 0
  %1071 = select i1 %1069, i32 %1067, i32 %1070, !prof !2
  %1072 = icmp sgt i32 %1071, -1
  %1073 = select i1 %1072, i32 -2147483648, i32 2147483647
  %1074 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %625, i32 %1071) #13
  %1075 = extractvalue { i32, i1 } %1074, 1
  %1076 = extractvalue { i32, i1 } %1074, 0
  %1077 = select i1 %1075, i32 %1073, i32 %1076, !prof !2
  %1078 = icmp eq i32 %1077, 0
  br i1 %1078, label %1102, label %1079

1079:                                             ; preds = %1060
  %1080 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1015, i32 %1071) #13
  %1081 = extractvalue { i32, i1 } %1080, 1
  %1082 = extractvalue { i32, i1 } %1080, 0
  %1083 = select i1 %1081, i32 %1073, i32 %1082, !prof !2
  %1084 = sext i32 %1083 to i64
  %1085 = shl nsw i64 %1084, 6
  %1086 = sext i32 %1077 to i64
  %1087 = sdiv i64 %1085, %1086
  %1088 = call i1 @llvm.is.constant.i64(i64 %1087) #13
  br i1 %1088, label %1096, label %1089

1089:                                             ; preds = %1079
  %1090 = icmp slt i64 %1087, 0
  %1091 = select i1 %1090, i32 -2147483648, i32 2147483647
  %1092 = add i64 %1087, 2147483648
  %1093 = icmp ult i64 %1092, 4294967296
  %1094 = trunc i64 %1087 to i32
  %1095 = select i1 %1093, i32 %1094, i32 %1091, !prof !3
  br label %1102

1096:                                             ; preds = %1079
  %1097 = icmp sgt i64 %1087, 2147483647
  br i1 %1097, label %1102, label %1098

1098:                                             ; preds = %1096
  %1099 = icmp sgt i64 %1087, -2147483648
  %1100 = select i1 %1099, i64 %1087, i64 -2147483648
  %1101 = trunc i64 %1100 to i32
  br label %1102

1102:                                             ; preds = %1098, %1096, %1089, %1060
  %1103 = phi i32 [ 2147483647, %1060 ], [ %1095, %1089 ], [ %1101, %1098 ], [ 2147483647, %1096 ]
  %1104 = icmp eq i32 %1061, 64
  br i1 %1104, label %1105, label %1107

1105:                                             ; preds = %1102
  %1106 = icmp eq i32 %1103, 64
  br i1 %1106, label %1160, label %1113

1107:                                             ; preds = %1102
  %1108 = icmp slt i32 %1061, 64
  br i1 %1108, label %1109, label %1111

1109:                                             ; preds = %1107
  %1110 = icmp sgt i32 %1103, 64
  br i1 %1110, label %1160, label %1113

1111:                                             ; preds = %1107
  %1112 = icmp slt i32 %1103, 64
  br i1 %1112, label %1160, label %1113

1113:                                             ; preds = %1105, %1109, %1111
  %1114 = phi i1 [ true, %1111 ], [ false, %1105 ], [ false, %1109 ]
  %1115 = phi i1 [ false, %1111 ], [ false, %1105 ], [ true, %1109 ]
  %1116 = icmp eq i32 %1103, 64
  %1117 = icmp sle i32 %1061, %1103
  %1118 = and i1 %1117, %1115
  %1119 = or i1 %1116, %1118
  %1120 = icmp sge i32 %1061, %1103
  %1121 = and i1 %1120, %1114
  %1122 = or i1 %1121, %1119
  %1123 = load i32, i32* %426, align 8
  %1124 = icmp eq i32 %1123, 0
  %1125 = load i32, i32* %427, align 4
  %1126 = icmp eq i32 %1125, 0
  %1127 = or i1 %1124, %1126
  br i1 %1122, label %1128, label %1144

1128:                                             ; preds = %1113
  br i1 %1127, label %1132, label %1129

1129:                                             ; preds = %1128
  %1130 = load i32, i32* %25, align 4
  %1131 = call i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %36, i32 %1130, i32 %1000) #13
  br label %1132

1132:                                             ; preds = %1129, %1128
  %1133 = phi i32 [ %1131, %1129 ], [ %1015, %1128 ]
  %1134 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1134)
  store i32 %1133, i32* %23, align 4
  %1135 = icmp slt i32 %1005, %1133
  %1136 = bitcast i32* %23 to %"class.blink::LayoutUnit"*
  %1137 = select i1 %1135, %"class.blink::LayoutUnit"* %1003, %"class.blink::LayoutUnit"* %1136
  %1138 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1137, i64 0, i32 0
  %1139 = load i32, i32* %1138, align 4
  %1140 = icmp slt i32 %1009, %1139
  %1141 = select i1 %1140, %"class.blink::LayoutUnit"* %1137, %"class.blink::LayoutUnit"* %1002
  %1142 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1141, i64 0, i32 0
  %1143 = load i32, i32* %1142, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1134)
  br label %1160

1144:                                             ; preds = %1113
  br i1 %1127, label %1148, label %1145

1145:                                             ; preds = %1144
  %1146 = load i32, i32* %25, align 4
  %1147 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %2, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %36, i32 %1146, i32 %1015) #13
  br label %1148

1148:                                             ; preds = %1145, %1144
  %1149 = phi i32 [ %1147, %1145 ], [ %1000, %1144 ]
  %1150 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1150)
  store i32 %1149, i32* %24, align 4
  %1151 = icmp slt i32 %913, %1149
  %1152 = bitcast i32* %24 to %"class.blink::LayoutUnit"*
  %1153 = select i1 %1151, %"class.blink::LayoutUnit"* %991, %"class.blink::LayoutUnit"* %1152
  %1154 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1153, i64 0, i32 0
  %1155 = load i32, i32* %1154, align 4
  %1156 = icmp slt i32 %912, %1155
  %1157 = select i1 %1156, %"class.blink::LayoutUnit"* %1153, %"class.blink::LayoutUnit"* %997
  %1158 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1157, i64 0, i32 0
  %1159 = load i32, i32* %1158, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1150)
  br label %1160

1160:                                             ; preds = %908, %1105, %988, %942, %979, %1132, %1148, %1111, %1109
  %1161 = phi i32 [ %909, %908 ], [ %923, %942 ], [ %984, %979 ], [ %1000, %1132 ], [ %1159, %1148 ], [ %652, %1105 ], [ %1000, %1111 ], [ %1000, %1109 ], [ %652, %988 ]
  %1162 = phi i32 [ %304, %908 ], [ %958, %942 ], [ %304, %979 ], [ %1143, %1132 ], [ %1015, %1148 ], [ %625, %1105 ], [ %1015, %1111 ], [ %1015, %1109 ], [ %625, %988 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %647)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %648)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %630) #13
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %429)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %425) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %305) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %59) #13
  br label %1163

1163:                                             ; preds = %4, %1160
  %1164 = phi i32 [ %1161, %1160 ], [ 0, %4 ]
  %1165 = phi i32 [ %1162, %1160 ], [ 0, %4 ]
  %1166 = zext i32 %1165 to i64
  %1167 = shl nuw i64 %1166, 32
  %1168 = zext i32 %1164 to i64
  %1169 = or i64 %1167, %1168
  ret i64 %1169
}

declare i64 @_ZNK5blink11NGBlockNode14GetAspectRatioEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc i32 @"_ZZN5blink19ComputeReplacedSizeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutENS_16ReplacedSizeModeEENK3$_4clEv"(%class.anon.1832* nocapture readonly) unnamed_addr #3 align 2 {
  %2 = alloca %"class.absl::optional.1820", align 4
  %3 = alloca %"class.blink::Length", align 4
  %4 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %0, i64 0, i32 0
  %5 = load %"class.blink::NGConstraintSpace"*, %"class.blink::NGConstraintSpace"** %4, align 8
  %6 = bitcast %"class.blink::NGConstraintSpace"* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = trunc i64 %7 to i32
  %9 = icmp eq i32 %8, -64
  %10 = getelementptr inbounds %"class.absl::optional.1820", %"class.absl::optional.1820"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %10) #13
  br i1 %9, label %11, label %24

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %0, i64 0, i32 1
  %13 = load %"struct.blink::NGBoxStrut"*, %"struct.blink::NGBoxStrut"** %12, align 8
  %14 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %13, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %13, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %17) #13
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !2
  br label %44

24:                                               ; preds = %1
  %25 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %0, i64 0, i32 2
  %26 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %25, align 8
  %27 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %0, i64 0, i32 1
  %28 = load %"struct.blink::NGBoxStrut"*, %"struct.blink::NGBoxStrut"** %27, align 8
  store i8 0, i8* %10, align 4
  %29 = bitcast %"class.blink::Length"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #13
  %30 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %30, align 4, !alias.scope !31
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 1
  store i8 0, i8* %31, align 4, !alias.scope !31
  %32 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  store i8 6, i8* %32, align 1, !alias.scope !31
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 3
  store i8 0, i8* %33, align 2, !alias.scope !31
  %34 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %0, i64 0, i32 3
  %35 = load %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = call i32 @_ZN5blink27ResolveInlineLengthInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutERKN4absl8optionalINS_11MinMaxSizesEEERKNS_6LengthENS_10LayoutUnitE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %5, %"class.blink::ComputedStyle"* dereferenceable(104) %26, %"struct.blink::NGBoxStrut"* dereferenceable(16) %28, %"class.absl::optional.1820"* nonnull dereferenceable(12) %2, %"class.blink::Length"* nonnull dereferenceable(8) %3, i32 %37) #13
  %39 = load i8, i8* %32, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %42

41:                                               ; preds = %24
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #13
  br label %42

42:                                               ; preds = %24, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #13
  %43 = load %"struct.blink::NGBoxStrut"*, %"struct.blink::NGBoxStrut"** %27, align 8
  br label %44

44:                                               ; preds = %11, %42
  %45 = phi %"struct.blink::NGBoxStrut"* [ %13, %11 ], [ %43, %42 ]
  %46 = phi i32 [ %23, %11 ], [ %38, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %10) #13
  %47 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %0, i64 0, i32 4
  %48 = load %"struct.blink::LogicalSize"*, %"struct.blink::LogicalSize"** %47, align 8
  %49 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %0, i64 0, i32 5
  %50 = load %"struct.blink::MinMaxSizes"*, %"struct.blink::MinMaxSizes"** %49, align 8
  %51 = getelementptr inbounds %class.anon.1832, %class.anon.1832* %0, i64 0, i32 6
  %52 = load i32*, i32** %51, align 8
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %50, i64 0, i32 0, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %44
  %58 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %45, %"struct.blink::LogicalSize"* dereferenceable(8) %48, i32 %53, i32 %55) #13
  br label %59

59:                                               ; preds = %57, %44
  %60 = phi i32 [ %58, %57 ], [ 0, %44 ]
  %61 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %50, i64 0, i32 1, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 2147483647
  br i1 %63, label %66, label %64

64:                                               ; preds = %59
  %65 = call i32 @_ZN5blink25InlineSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16) %45, %"struct.blink::LogicalSize"* dereferenceable(8) %48, i32 %53, i32 %62) #13
  br label %66

66:                                               ; preds = %59, %64
  %67 = phi i32 [ 2147483647, %59 ], [ %65, %64 ]
  %68 = icmp slt i32 %67, %60
  %69 = select i1 %68, i32 %60, i32 %67
  %70 = icmp slt i32 %69, %46
  %71 = select i1 %70, i32 %69, i32 %46
  %72 = icmp slt i32 %60, %71
  %73 = select i1 %72, i32 %71, i32 %60
  ret i32 %73
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink22ResolveUsedColumnCountEiNS_10LayoutUnitES0_S0_(i32, i32, i32, i32) local_unnamed_addr #6 {
  %5 = icmp eq i32 %1, -64
  br i1 %5, label %46, label %6

6:                                                ; preds = %4
  %7 = icmp slt i32 %2, 0
  %8 = select i1 %7, i32 -2147483648, i32 2147483647
  %9 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 %2) #13
  %10 = extractvalue { i32, i1 } %9, 1
  %11 = extractvalue { i32, i1 } %9, 0
  %12 = select i1 %10, i32 %8, i32 %11, !prof !2
  %13 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #13
  %14 = extractvalue { i32, i1 } %13, 1
  %15 = extractvalue { i32, i1 } %13, 0
  %16 = select i1 %14, i32 %8, i32 %15, !prof !2
  %17 = sext i32 %12 to i64
  %18 = shl nsw i64 %17, 6
  %19 = sext i32 %16 to i64
  %20 = sdiv i64 %18, %19
  %21 = tail call i1 @llvm.is.constant.i64(i64 %20) #13
  br i1 %21, label %29, label %22

22:                                               ; preds = %6
  %23 = icmp slt i64 %20, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = add i64 %20, 2147483648
  %26 = icmp ult i64 %25, 4294967296
  %27 = trunc i64 %20 to i32
  %28 = select i1 %26, i32 %27, i32 %24, !prof !3
  br label %35

29:                                               ; preds = %6
  %30 = icmp sgt i64 %20, 2147483647
  br i1 %30, label %35, label %31

31:                                               ; preds = %29
  %32 = icmp sgt i64 %20, -2147483648
  %33 = select i1 %32, i64 %20, i64 -2147483648
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %22, %29, %31
  %36 = phi i32 [ %28, %22 ], [ %34, %31 ], [ 2147483647, %29 ]
  %37 = sdiv i32 %36, 64
  %38 = icmp sgt i32 %37, 1
  %39 = select i1 %38, i32 %37, i32 1
  %40 = icmp eq i32 %0, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %35
  %42 = icmp slt i32 %39, %0
  %43 = select i1 %42, i32 %39, i32 %0
  %44 = icmp sgt i32 %43, 1
  %45 = select i1 %44, i32 %43, i32 1
  br label %46

46:                                               ; preds = %41, %35, %4
  %47 = phi i32 [ %0, %4 ], [ %45, %41 ], [ %39, %35 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink22ResolveUsedColumnCountENS_10LayoutUnitERKNS_13ComputedStyleE(i32, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %6, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %8, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = and i8 %10, 2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %14, i64 0, i32 2, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %15, align 8
  br i1 %12, label %17, label %30

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %16, i64 0, i32 31
  %19 = load float, float* %18, align 8
  %20 = fmul float %19, 6.400000e+01
  %21 = fcmp ult float %20, 0xC1E0000000000000
  %22 = fcmp ugt float %20, 0x41DFFFFFE0000000
  %23 = fcmp ogt float %20, 0xC1E0000000000000
  %24 = select i1 %23, float %20, float 0xC1E0000000000000
  %25 = fptosi float %24 to i32
  %26 = select i1 %21, i32 0, i32 2147483647
  %27 = select i1 %22, i32 %26, i32 %25
  %28 = icmp sgt i32 %27, 64
  %29 = select i1 %28, i32 %27, i32 64
  br label %30

30:                                               ; preds = %2, %17
  %31 = phi i32 [ %29, %17 ], [ -64, %2 ]
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %16, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %33 = load i8, i8* %32, align 4, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %16, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  %37 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %36, i32 %0) #13
  %38 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %38, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %40, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %42, i64 0, i32 2
  %44 = load i8, i8* %43, align 4
  br label %59

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %47, i64 0, i32 1, i32 0, i32 0
  %49 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %49, i64 0, i32 1, i32 0, i32 5
  %51 = load float, float* %50, align 4
  %52 = fadd float %51, 5.000000e-01
  %53 = fptosi float %52 to i32
  %54 = icmp sgt i32 %53, 33554431
  br i1 %54, label %59, label %55

55:                                               ; preds = %45
  %56 = icmp slt i32 %53, -33554432
  %57 = shl i32 %53, 6
  %58 = select i1 %56, i32 -2147483648, i32 %57
  br label %59

59:                                               ; preds = %35, %45, %55
  %60 = phi i8 [ %10, %55 ], [ %44, %35 ], [ %10, %45 ]
  %61 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* [ %4, %55 ], [ %38, %35 ], [ %4, %45 ]
  %62 = phi i32 [ %58, %55 ], [ %37, %35 ], [ 2147483647, %45 ]
  %63 = and i8 %60, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %73

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %61, i64 0, i32 2, i32 0, i32 0
  %67 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %67, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %69, i64 0, i32 41
  %71 = load i16, i16* %70, align 8
  %72 = zext i16 %71 to i32
  br label %73

73:                                               ; preds = %59, %65
  %74 = phi i32 [ %72, %65 ], [ 0, %59 ]
  %75 = icmp eq i32 %31, -64
  br i1 %75, label %116, label %76

76:                                               ; preds = %73
  %77 = icmp slt i32 %62, 0
  %78 = select i1 %77, i32 -2147483648, i32 2147483647
  %79 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %0, i32 %62) #13
  %80 = extractvalue { i32, i1 } %79, 1
  %81 = extractvalue { i32, i1 } %79, 0
  %82 = select i1 %80, i32 %78, i32 %81, !prof !2
  %83 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %31, i32 %62) #13
  %84 = extractvalue { i32, i1 } %83, 1
  %85 = extractvalue { i32, i1 } %83, 0
  %86 = select i1 %84, i32 %78, i32 %85, !prof !2
  %87 = sext i32 %82 to i64
  %88 = shl nsw i64 %87, 6
  %89 = sext i32 %86 to i64
  %90 = sdiv i64 %88, %89
  %91 = tail call i1 @llvm.is.constant.i64(i64 %90) #13
  br i1 %91, label %99, label %92

92:                                               ; preds = %76
  %93 = icmp slt i64 %90, 0
  %94 = select i1 %93, i32 -2147483648, i32 2147483647
  %95 = add i64 %90, 2147483648
  %96 = icmp ult i64 %95, 4294967296
  %97 = trunc i64 %90 to i32
  %98 = select i1 %96, i32 %97, i32 %94, !prof !3
  br label %105

99:                                               ; preds = %76
  %100 = icmp sgt i64 %90, 2147483647
  br i1 %100, label %105, label %101

101:                                              ; preds = %99
  %102 = icmp sgt i64 %90, -2147483648
  %103 = select i1 %102, i64 %90, i64 -2147483648
  %104 = trunc i64 %103 to i32
  br label %105

105:                                              ; preds = %101, %99, %92
  %106 = phi i32 [ %98, %92 ], [ %104, %101 ], [ 2147483647, %99 ]
  %107 = sdiv i32 %106, 64
  %108 = icmp sgt i32 %107, 1
  %109 = select i1 %108, i32 %107, i32 1
  %110 = icmp eq i32 %74, 0
  br i1 %110, label %116, label %111

111:                                              ; preds = %105
  %112 = icmp slt i32 %109, %74
  %113 = select i1 %112, i32 %109, i32 %74
  %114 = icmp sgt i32 %113, 1
  %115 = select i1 %114, i32 %113, i32 1
  br label %116

116:                                              ; preds = %73, %105, %111
  %117 = phi i32 [ %74, %73 ], [ %115, %111 ], [ %109, %105 ]
  ret i32 %117
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink20ResolveUsedColumnGapENS_10LayoutUnitERKNS_13ComputedStyleE(i32, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !4
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %8, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  %14 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %13, i32 %0) #13
  br label %29

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %17, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %19, i64 0, i32 1, i32 0, i32 5
  %21 = load float, float* %20, align 4
  %22 = fadd float %21, 5.000000e-01
  %23 = fptosi float %22 to i32
  %24 = icmp sgt i32 %23, 33554431
  br i1 %24, label %29, label %25

25:                                               ; preds = %15
  %26 = icmp slt i32 %23, -33554432
  %27 = shl i32 %23, 6
  %28 = select i1 %26, i32 -2147483648, i32 %27
  ret i32 %28

29:                                               ; preds = %15, %12
  %30 = phi i32 [ %14, %12 ], [ 2147483647, %15 ]
  ret i32 %30
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink27ResolveUsedColumnInlineSizeEiNS_10LayoutUnitES0_S0_(i32, i32, i32, i32) local_unnamed_addr #6 {
  %5 = icmp eq i32 %1, -64
  br i1 %5, label %51, label %6

6:                                                ; preds = %4
  %7 = icmp slt i32 %2, 0
  %8 = select i1 %7, i32 -2147483648, i32 2147483647
  %9 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 %2) #13
  %10 = extractvalue { i32, i1 } %9, 1
  %11 = extractvalue { i32, i1 } %9, 0
  %12 = select i1 %10, i32 %8, i32 %11, !prof !2
  %13 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #13
  %14 = extractvalue { i32, i1 } %13, 1
  %15 = extractvalue { i32, i1 } %13, 0
  %16 = select i1 %14, i32 %8, i32 %15, !prof !2
  %17 = sext i32 %12 to i64
  %18 = shl nsw i64 %17, 6
  %19 = sext i32 %16 to i64
  %20 = sdiv i64 %18, %19
  %21 = tail call i1 @llvm.is.constant.i64(i64 %20) #13
  br i1 %21, label %29, label %22

22:                                               ; preds = %6
  %23 = icmp slt i64 %20, 0
  %24 = select i1 %23, i32 -2147483648, i32 2147483647
  %25 = add i64 %20, 2147483648
  %26 = icmp ult i64 %25, 4294967296
  %27 = trunc i64 %20 to i32
  %28 = select i1 %26, i32 %27, i32 %24, !prof !3
  br label %35

29:                                               ; preds = %6
  %30 = icmp sgt i64 %20, 2147483647
  br i1 %30, label %35, label %31

31:                                               ; preds = %29
  %32 = icmp sgt i64 %20, -2147483648
  %33 = select i1 %32, i64 %20, i64 -2147483648
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %31, %29, %22
  %36 = phi i32 [ %28, %22 ], [ %34, %31 ], [ 2147483647, %29 ]
  %37 = sdiv i32 %36, 64
  %38 = icmp sgt i32 %37, 1
  %39 = select i1 %38, i32 %37, i32 1
  %40 = icmp eq i32 %0, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %35
  %42 = icmp slt i32 %39, %0
  %43 = select i1 %42, i32 %39, i32 %0
  %44 = icmp sgt i32 %43, 1
  %45 = select i1 %44, i32 %43, i32 1
  br label %46

46:                                               ; preds = %35, %41
  %47 = phi i32 [ %45, %41 ], [ %39, %35 ]
  %48 = icmp slt i32 %2, 0
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = select i1 %10, i32 %49, i32 %11, !prof !2
  br label %59

51:                                               ; preds = %4
  %52 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 %2) #13
  %53 = extractvalue { i32, i1 } %52, 1
  %54 = extractvalue { i32, i1 } %52, 0
  %55 = icmp slt i32 %2, 0
  %56 = select i1 %55, i32 -2147483648, i32 2147483647
  %57 = select i1 %53, i32 %56, i32 %54, !prof !2
  %58 = icmp sgt i32 %0, 33554431
  br i1 %58, label %66, label %59

59:                                               ; preds = %46, %51
  %60 = phi i32 [ %50, %46 ], [ %57, %51 ]
  %61 = phi i32 [ %47, %46 ], [ %0, %51 ]
  %62 = icmp slt i32 %61, -33554432
  %63 = shl i32 %61, 6
  %64 = select i1 %62, i32 -2147483648, i32 %63
  %65 = sext i32 %64 to i64
  br label %66

66:                                               ; preds = %59, %51
  %67 = phi i32 [ %57, %51 ], [ %60, %59 ]
  %68 = phi i64 [ 2147483647, %51 ], [ %65, %59 ]
  %69 = sext i32 %67 to i64
  %70 = shl nsw i64 %69, 6
  %71 = sdiv i64 %70, %68
  %72 = tail call i1 @llvm.is.constant.i64(i64 %71) #13
  br i1 %72, label %80, label %73

73:                                               ; preds = %66
  %74 = icmp slt i64 %71, 0
  %75 = select i1 %74, i32 -2147483648, i32 2147483647
  %76 = add i64 %71, 2147483648
  %77 = icmp ult i64 %76, 4294967296
  %78 = trunc i64 %71 to i32
  %79 = select i1 %77, i32 %78, i32 %75, !prof !3
  br label %86

80:                                               ; preds = %66
  %81 = icmp sgt i64 %71, 2147483647
  br i1 %81, label %86, label %82

82:                                               ; preds = %80
  %83 = icmp sgt i64 %71, -2147483648
  %84 = select i1 %83, i64 %71, i64 -2147483648
  %85 = trunc i64 %84 to i32
  br label %86

86:                                               ; preds = %73, %80, %82
  %87 = phi i32 [ %79, %73 ], [ %85, %82 ], [ 2147483647, %80 ]
  %88 = icmp sgt i32 %2, -1
  %89 = select i1 %88, i32 -2147483648, i32 2147483647
  %90 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %87, i32 %2) #13
  %91 = extractvalue { i32, i1 } %90, 1
  %92 = extractvalue { i32, i1 } %90, 0
  %93 = select i1 %91, i32 %89, i32 %92, !prof !2
  %94 = icmp sgt i32 %93, 0
  %95 = select i1 %94, i32 %93, i32 0
  ret i32 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink27ResolveUsedColumnInlineSizeENS_10LayoutUnitERKNS_13ComputedStyleE(i32, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %6, i64 0, i32 1, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %8, i64 0, i32 2
  %10 = load i8, i8* %9, align 4
  %11 = and i8 %10, 2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %30

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %17, i64 0, i32 31
  %19 = load float, float* %18, align 8
  %20 = fmul float %19, 6.400000e+01
  %21 = fcmp ult float %20, 0xC1E0000000000000
  %22 = fcmp ugt float %20, 0x41DFFFFFE0000000
  %23 = fcmp ogt float %20, 0xC1E0000000000000
  %24 = select i1 %23, float %20, float 0xC1E0000000000000
  %25 = fptosi float %24 to i32
  %26 = select i1 %21, i32 0, i32 2147483647
  %27 = select i1 %22, i32 %26, i32 %25
  %28 = icmp sgt i32 %27, 64
  %29 = select i1 %28, i32 %27, i32 64
  br label %30

30:                                               ; preds = %2, %13
  %31 = phi i32 [ %29, %13 ], [ -64, %2 ]
  %32 = and i8 %10, 1
  %33 = icmp eq i8 %32, 0
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %4, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %36, align 8
  br i1 %33, label %38, label %42

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %37, i64 0, i32 41
  %40 = load i16, i16* %39, align 8
  %41 = zext i16 %40 to i32
  br label %42

42:                                               ; preds = %30, %38
  %43 = phi i32 [ %41, %38 ], [ 0, %30 ]
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %37, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 4, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %37, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  %49 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %48, i32 %0) #13
  br label %64

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %52, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %54, i64 0, i32 1, i32 0, i32 5
  %56 = load float, float* %55, align 4
  %57 = fadd float %56, 5.000000e-01
  %58 = fptosi float %57 to i32
  %59 = icmp sgt i32 %58, 33554431
  br i1 %59, label %64, label %60

60:                                               ; preds = %50
  %61 = icmp slt i32 %58, -33554432
  %62 = shl i32 %58, 6
  %63 = select i1 %61, i32 -2147483648, i32 %62
  br label %64

64:                                               ; preds = %47, %50, %60
  %65 = phi i32 [ %63, %60 ], [ %49, %47 ], [ 2147483647, %50 ]
  %66 = tail call i32 @_ZN5blink27ResolveUsedColumnInlineSizeEiNS_10LayoutUnitES0_S0_(i32 %43, i32 %31, i32 %65, i32 %0)
  ret i32 %66
}

declare i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink23ColumnInlineProgressionENS_10LayoutUnitERKNS_13ComputedStyleE(i32, %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #2 {
  %3 = tail call i32 @_ZN5blink27ResolveUsedColumnInlineSizeENS_10LayoutUnitERKNS_13ComputedStyleE(i32 %0, %"class.blink::ComputedStyle"* dereferenceable(104) %1)
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %9, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 4, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %9, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  %15 = tail call i32 @_ZN5blink14ValueForLengthERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %14, i32 %0) #13
  br label %29

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %20, i64 0, i32 1, i32 0, i32 5
  %22 = load float, float* %21, align 4
  %23 = fadd float %22, 5.000000e-01
  %24 = fptosi float %23 to i32
  %25 = icmp sgt i32 %24, 33554431
  br i1 %25, label %34, label %26

26:                                               ; preds = %16
  %27 = icmp slt i32 %24, -33554432
  %28 = shl i32 %24, 6
  br i1 %27, label %32, label %29

29:                                               ; preds = %26, %13
  %30 = phi i32 [ %28, %26 ], [ %15, %13 ]
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %26, %29
  %33 = phi i32 [ %30, %29 ], [ -2147483648, %26 ]
  br label %34

34:                                               ; preds = %16, %29, %32
  %35 = phi i32 [ %33, %32 ], [ %30, %29 ], [ 2147483647, %16 ]
  %36 = phi i32 [ -2147483648, %32 ], [ 2147483647, %29 ], [ 2147483647, %16 ]
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 %35) #13
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i32) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %4 = bitcast [20 x i8]* %3 to i160*
  %5 = load i160, i160* %4, align 8
  %6 = and i160 %5, 44601490397061246283071436545296723011960832
  %7 = icmp eq i160 %6, 0
  br i1 %7, label %139, label %8

8:                                                ; preds = %2
  %9 = icmp eq i32 %1, -64
  %10 = select i1 %9, i32 0, i32 %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 12
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 12, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 2
  br i1 %16, label %17, label %38, !prof !3

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 12, i32 3
  %19 = load i8, i8* %18, align 2, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::Length"* %13 to float*
  %23 = load float, float* %22, align 4
  br label %28

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = sitofp i32 %26 to float
  br label %28

28:                                               ; preds = %24, %21
  %29 = phi float [ %23, %21 ], [ %27, %24 ]
  %30 = fmul float %29, 6.400000e+01
  %31 = fcmp ult float %30, 0xC1E0000000000000
  %32 = fcmp ugt float %30, 0x41DFFFFFE0000000
  %33 = fcmp ogt float %30, 0xC1E0000000000000
  %34 = select i1 %33, float %30, float 0xC1E0000000000000
  %35 = fptosi float %34 to i32
  %36 = select i1 %31, i32 0, i32 2147483647
  %37 = select i1 %32, i32 %36, i32 %35
  br label %41

38:                                               ; preds = %8
  %39 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %13, i32 %10) #13
  %40 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %11, align 8
  br label %41

41:                                               ; preds = %28, %38
  %42 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %12, %28 ], [ %40, %38 ]
  %43 = phi i32 [ %37, %28 ], [ %39, %38 ]
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %42, i64 0, i32 11
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %42, i64 0, i32 11, i32 2
  %46 = load i8, i8* %45, align 1
  %47 = icmp eq i8 %46, 2
  br i1 %47, label %48, label %69, !prof !3

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %42, i64 0, i32 11, i32 3
  %50 = load i8, i8* %49, align 2, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.blink::Length"* %44 to float*
  %54 = load float, float* %53, align 4
  br label %59

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %44, i64 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = sitofp i32 %57 to float
  br label %59

59:                                               ; preds = %55, %52
  %60 = phi float [ %54, %52 ], [ %58, %55 ]
  %61 = fmul float %60, 6.400000e+01
  %62 = fcmp ult float %61, 0xC1E0000000000000
  %63 = fcmp ugt float %61, 0x41DFFFFFE0000000
  %64 = fcmp ogt float %61, 0xC1E0000000000000
  %65 = select i1 %64, float %61, float 0xC1E0000000000000
  %66 = fptosi float %65 to i32
  %67 = select i1 %62, i32 0, i32 2147483647
  %68 = select i1 %63, i32 %67, i32 %66
  br label %72

69:                                               ; preds = %41
  %70 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %44, i32 %10) #13
  %71 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %11, align 8
  br label %72

72:                                               ; preds = %59, %69
  %73 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %42, %59 ], [ %71, %69 ]
  %74 = phi i32 [ %68, %59 ], [ %70, %69 ]
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %73, i64 0, i32 9
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %73, i64 0, i32 9, i32 2
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 2
  br i1 %78, label %79, label %100, !prof !3

79:                                               ; preds = %72
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %73, i64 0, i32 9, i32 3
  %81 = load i8, i8* %80, align 2, !range !4
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %79
  %84 = bitcast %"class.blink::Length"* %75 to float*
  %85 = load float, float* %84, align 4
  br label %90

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %75, i64 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = sitofp i32 %88 to float
  br label %90

90:                                               ; preds = %86, %83
  %91 = phi float [ %85, %83 ], [ %89, %86 ]
  %92 = fmul float %91, 6.400000e+01
  %93 = fcmp ult float %92, 0xC1E0000000000000
  %94 = fcmp ugt float %92, 0x41DFFFFFE0000000
  %95 = fcmp ogt float %92, 0xC1E0000000000000
  %96 = select i1 %95, float %92, float 0xC1E0000000000000
  %97 = fptosi float %96 to i32
  %98 = select i1 %93, i32 0, i32 2147483647
  %99 = select i1 %94, i32 %98, i32 %97
  br label %103

100:                                              ; preds = %72
  %101 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %75, i32 %10) #13
  %102 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %11, align 8
  br label %103

103:                                              ; preds = %90, %100
  %104 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %73, %90 ], [ %102, %100 ]
  %105 = phi i32 [ %99, %90 ], [ %101, %100 ]
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %104, i64 0, i32 10
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %104, i64 0, i32 10, i32 2
  %108 = load i8, i8* %107, align 1
  %109 = icmp eq i8 %108, 2
  br i1 %109, label %110, label %131, !prof !3

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %104, i64 0, i32 10, i32 3
  %112 = load i8, i8* %111, align 2, !range !4
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %117, label %114

114:                                              ; preds = %110
  %115 = bitcast %"class.blink::Length"* %106 to float*
  %116 = load float, float* %115, align 4
  br label %121

117:                                              ; preds = %110
  %118 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %106, i64 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = sitofp i32 %119 to float
  br label %121

121:                                              ; preds = %117, %114
  %122 = phi float [ %116, %114 ], [ %120, %117 ]
  %123 = fmul float %122, 6.400000e+01
  %124 = fcmp ult float %123, 0xC1E0000000000000
  %125 = fcmp ugt float %123, 0x41DFFFFFE0000000
  %126 = fcmp ogt float %123, 0xC1E0000000000000
  %127 = select i1 %126, float %123, float 0xC1E0000000000000
  %128 = fptosi float %127 to i32
  %129 = select i1 %124, i32 0, i32 2147483647
  %130 = select i1 %125, i32 %129, i32 %128
  br label %133

131:                                              ; preds = %103
  %132 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %106, i32 %10) #13
  br label %133

133:                                              ; preds = %121, %131
  %134 = phi i32 [ %130, %121 ], [ %132, %131 ]
  %135 = zext i32 %105 to i64
  %136 = zext i32 %134 to i64
  %137 = shl nuw i64 %136, 32
  %138 = or i64 %137, %135
  br label %139

139:                                              ; preds = %2, %133
  %140 = phi i32 [ %43, %133 ], [ 0, %2 ]
  %141 = phi i32 [ %74, %133 ], [ 0, %2 ]
  %142 = phi i64 [ %138, %133 ], [ 0, %2 ]
  %143 = zext i32 %141 to i64
  %144 = shl nuw i64 %143, 32
  %145 = zext i32 %140 to i64
  %146 = or i64 %144, %145
  %147 = insertvalue { i64, i64 } undef, i64 %146, 0
  %148 = insertvalue { i64, i64 } %147, i64 %142, 1
  ret { i64, i64 } %148
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink17ComputeMarginsForERKNS_17NGConstraintSpaceERKNS_13ComputedStyleES2_(%"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32)) local_unnamed_addr #2 {
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 44601490397061246283071436545296723011960832
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %100, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 512
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %100

14:                                               ; preds = %9
  %15 = and i32 %11, 2048
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %30

17:                                               ; preds = %14
  %18 = lshr i32 %11, 26
  %19 = and i32 %18, 3
  switch i32 %19, label %20 [
    i32 0, label %21
    i32 1, label %55
    i32 2, label %24
    i32 3, label %25
  ]

20:                                               ; preds = %17
  unreachable

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  br label %55

24:                                               ; preds = %17
  br label %55

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %27 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %26 to i32**
  %28 = load i32*, i32** %27, align 8
  %29 = load i32, i32* %28, align 8
  br label %55

30:                                               ; preds = %14
  %31 = lshr i32 %11, 28
  %32 = and i32 %31, 3
  switch i32 %32, label %33 [
    i32 0, label %34
    i32 1, label %55
    i32 2, label %55
    i32 3, label %36
  ]

33:                                               ; preds = %30
  unreachable

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %40

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %38 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %37, align 8
  %39 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %38, i64 0, i32 0, i32 1, i32 0
  br label %40

40:                                               ; preds = %36, %34
  %41 = phi i32* [ %39, %36 ], [ %35, %34 ]
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, -64
  br i1 %43, label %55, label %44

44:                                               ; preds = %40
  switch i32 %32, label %45 [
    i32 0, label %46
    i32 1, label %55
    i32 2, label %49
    i32 3, label %50
  ]

45:                                               ; preds = %44
  unreachable

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %48 = load i32, i32* %47, align 4
  br label %55

49:                                               ; preds = %44
  br label %55

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %52 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %51, align 8
  %53 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %52, i64 0, i32 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %17, %21, %24, %25, %30, %30, %40, %44, %46, %49, %50
  %56 = phi i32 [ %29, %25 ], [ -64, %24 ], [ %23, %21 ], [ 0, %17 ], [ %54, %50 ], [ -64, %49 ], [ %48, %46 ], [ 0, %44 ], [ 0, %40 ], [ 0, %30 ], [ 0, %30 ]
  %57 = tail call { i64, i64 } @_ZN5blink22ComputePhysicalMarginsERKNS_13ComputedStyleENS_10LayoutUnitE(%"class.blink::ComputedStyle"* dereferenceable(104) %1, i32 %56)
  %58 = extractvalue { i64, i64 } %57, 0
  %59 = trunc i64 %58 to i32
  %60 = lshr i64 %58, 32
  %61 = extractvalue { i64, i64 } %57, 1
  %62 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %2, i64 0, i32 3, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = lshr i32 %63, 4
  %65 = trunc i32 %64 to i8
  %66 = and i8 %65, 7
  switch i8 %66, label %88 [
    i8 0, label %67
    i8 1, label %74
    i8 3, label %74
    i8 2, label %78
    i8 4, label %83
  ]

67:                                               ; preds = %55
  %68 = trunc i64 %60 to i32
  %69 = lshr i64 %61, 32
  %70 = trunc i64 %69 to i32
  %71 = and i64 %58, 4294967295
  %72 = shl i64 %61, 32
  %73 = or i64 %72, %71
  br label %88

74:                                               ; preds = %55, %55
  %75 = trunc i64 %61 to i32
  %76 = and i64 %61, -4294967296
  %77 = or i64 %76, %60
  br label %88

78:                                               ; preds = %55
  %79 = trunc i64 %61 to i32
  %80 = lshr i64 %61, 32
  %81 = and i64 %58, -4294967296
  %82 = or i64 %81, %80
  br label %88

83:                                               ; preds = %55
  %84 = trunc i64 %61 to i32
  %85 = lshr i64 %61, 32
  %86 = and i64 %58, -4294967296
  %87 = or i64 %86, %85
  br label %88

88:                                               ; preds = %55, %67, %74, %78, %83
  %89 = phi i64 [ 0, %55 ], [ %87, %83 ], [ %82, %78 ], [ %77, %74 ], [ %73, %67 ]
  %90 = phi i32 [ 0, %55 ], [ %59, %83 ], [ %79, %78 ], [ %75, %74 ], [ %68, %67 ]
  %91 = phi i32 [ 0, %55 ], [ %84, %83 ], [ %59, %78 ], [ %59, %74 ], [ %70, %67 ]
  %92 = trunc i32 %63 to i8
  %93 = icmp slt i8 %92, 0
  %94 = select i1 %93, i32 %91, i32 %90
  %95 = select i1 %93, i32 %90, i32 %91
  %96 = zext i32 %94 to i64
  %97 = shl nuw i64 %96, 32
  %98 = zext i32 %95 to i64
  %99 = or i64 %97, %98
  br label %100

100:                                              ; preds = %9, %3, %88
  %101 = phi i64 [ %89, %88 ], [ 0, %9 ], [ 0, %3 ]
  %102 = phi i64 [ %99, %88 ], [ 0, %9 ], [ 0, %3 ]
  %103 = insertvalue { i64, i64 } undef, i64 %102, 0
  %104 = insertvalue { i64, i64 } %103, i64 %101, 1
  ret { i64, i64 } %104
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN5blink20ComputeMinMaxMarginsERKNS_13ComputedStyleENS_17NGLayoutInputNodeE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::LayoutBox"*, i64) local_unnamed_addr #0 {
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = and i64 %2, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %104

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %16 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 44601490397061246283071436545296723011960832
  %21 = icmp eq i160 %20, 0
  br i1 %21, label %104, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25)
  %26 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %28 = bitcast [20 x i8]* %27 to i160*
  %29 = load i160, i160* %28, align 8, !noalias !34
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %16, i64 0, i32 0, i32 7, i32 0, i32 0
  %31 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %30, align 8, !noalias !34
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 12
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 11
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 9
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %31, i64 0, i32 10
  store %"class.blink::Length"* %32, %"class.blink::Length"** %4, align 8, !alias.scope !34
  store %"class.blink::Length"* %33, %"class.blink::Length"** %5, align 8, !alias.scope !34
  store %"class.blink::Length"* %34, %"class.blink::Length"** %6, align 8, !alias.scope !34
  store %"class.blink::Length"* %35, %"class.blink::Length"** %7, align 8, !alias.scope !34
  %36 = and i160 %29, 15211807202738752817960438464512
  %37 = icmp eq i160 %36, 0
  %38 = and i160 %29, 41538374868278621028243970633760768
  %39 = icmp eq i160 %38, 0
  %40 = select i1 %39, %"class.blink::Length"** %7, %"class.blink::Length"** %5
  %41 = select i1 %39, %"class.blink::Length"** %4, %"class.blink::Length"** %6
  %42 = select i1 %37, %"class.blink::Length"** %40, %"class.blink::Length"** %41
  %43 = load %"class.blink::Length"*, %"class.blink::Length"** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  %44 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46)
  %47 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47)
  store %"class.blink::Length"* %32, %"class.blink::Length"** %8, align 8, !alias.scope !37
  store %"class.blink::Length"* %33, %"class.blink::Length"** %9, align 8, !alias.scope !37
  store %"class.blink::Length"* %34, %"class.blink::Length"** %10, align 8, !alias.scope !37
  store %"class.blink::Length"* %35, %"class.blink::Length"** %11, align 8, !alias.scope !37
  %48 = select i1 %39, %"class.blink::Length"** %9, %"class.blink::Length"** %11
  %49 = select i1 %39, %"class.blink::Length"** %10, %"class.blink::Length"** %8
  %50 = select i1 %37, %"class.blink::Length"** %48, %"class.blink::Length"** %49
  %51 = load %"class.blink::Length"*, %"class.blink::Length"** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47)
  %52 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 2
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 2
  br i1 %54, label %55, label %76

55:                                               ; preds = %22
  %56 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 3
  %57 = load i8, i8* %56, align 2, !range !4
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.blink::Length"* %43 to float*
  %61 = load float, float* %60, align 4
  br label %66

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = sitofp i32 %64 to float
  br label %66

66:                                               ; preds = %59, %62
  %67 = phi float [ %61, %59 ], [ %65, %62 ]
  %68 = fmul float %67, 6.400000e+01
  %69 = fcmp ult float %68, 0xC1E0000000000000
  %70 = fcmp ugt float %68, 0x41DFFFFFE0000000
  %71 = fcmp ogt float %68, 0xC1E0000000000000
  %72 = select i1 %71, float %68, float 0xC1E0000000000000
  %73 = fptosi float %72 to i32
  %74 = select i1 %69, i32 0, i32 2147483647
  %75 = select i1 %70, i32 %74, i32 %73
  br label %76

76:                                               ; preds = %66, %22
  %77 = phi i32 [ %75, %66 ], [ 0, %22 ]
  %78 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %51, i64 0, i32 2
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 2
  br i1 %80, label %81, label %104

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %51, i64 0, i32 3
  %83 = load i8, i8* %82, align 2, !range !4
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.blink::Length"* %51 to float*
  %87 = load float, float* %86, align 4
  br label %92

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %51, i64 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = sitofp i32 %90 to float
  br label %92

92:                                               ; preds = %85, %88
  %93 = phi float [ %87, %85 ], [ %91, %88 ]
  %94 = fmul float %93, 6.400000e+01
  %95 = fcmp ult float %94, 0xC1E0000000000000
  %96 = fcmp ugt float %94, 0x41DFFFFFE0000000
  %97 = fcmp ogt float %94, 0xC1E0000000000000
  %98 = select i1 %97, float %94, float 0xC1E0000000000000
  %99 = fptosi float %98 to i32
  %100 = select i1 %95, i32 0, i32 2147483647
  %101 = select i1 %96, i32 %100, i32 %99
  %102 = zext i32 %101 to i64
  %103 = shl nuw i64 %102, 32
  br label %104

104:                                              ; preds = %14, %3, %76, %92
  %105 = phi i64 [ 0, %14 ], [ 0, %3 ], [ %103, %92 ], [ 0, %76 ]
  %106 = phi i32 [ 0, %14 ], [ 0, %3 ], [ %77, %92 ], [ %77, %76 ]
  %107 = zext i32 %106 to i64
  %108 = or i64 %105, %107
  %109 = insertvalue { i64, i64 } undef, i64 %108, 0
  %110 = insertvalue { i64, i64 } %109, i64 0, 1
  ret { i64, i64 } %110
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink14ComputeBordersERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16)) local_unnamed_addr #2 {
  %3 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 512
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %110

7:                                                ; preds = %2
  %8 = and i32 %4, 256
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %7
  %11 = and i32 %4, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %110, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %15 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %15, i64 0, i32 6
  %17 = load i16, i16* %16, align 8
  %18 = and i16 %17, 7
  %19 = icmp eq i16 %18, 2
  br i1 %19, label %20, label %110

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %15, i64 0, i32 7
  %22 = bitcast %union.anon.1632* %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %15, i64 0, i32 7, i32 1
  %25 = bitcast [40 x i8]* %24 to i64*
  %26 = load i64, i64* %25, align 8
  br label %110

27:                                               ; preds = %7
  %28 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %1, i64 0, i32 0, i32 1
  %29 = load i8, i8* %28, align 8
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  %32 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::LayoutObject"**
  br i1 %31, label %33, label %103

33:                                               ; preds = %27
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %35 = bitcast %"class.blink::LayoutObject"* %34 to i1 (%"class.blink::LayoutObject"*, i32)***
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, i64 92
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::LayoutObject"* %34, i32 44) #13
  br i1 %39, label %40, label %103

40:                                               ; preds = %33
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %42 = bitcast %"class.blink::LayoutObject"* %41 to i1 (%"class.blink::LayoutObject"*, i32)***
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* %41, i32 30) #13
  br i1 %46, label %47, label %103

47:                                               ; preds = %40
  %48 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::NGTableNode"*
  %49 = tail call %"class.blink::NGTableBorders"* @_ZNK5blink11NGTableNode15GetTableBordersEv(%"class.blink::NGTableNode"* %48) #13
  %50 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %49, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 4, !range !4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %47
  tail call void @llvm.trap() #13
  unreachable

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %49, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %union.anon.1853* %55 to i64*
  %57 = load i64, i64* %56, align 4
  %58 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %49, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %59 = bitcast %"class.blink::LayoutUnit"* %58 to i64*
  %60 = load i64, i64* %59, align 4
  %61 = icmp eq %"class.blink::NGTableBorders"* %49, null
  br i1 %61, label %110, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %49, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #13
  %64 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %49, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %110

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"struct.blink::NGTableBorders::Section"*, %"struct.blink::NGTableBorders::Section"** %68, align 8
  %70 = icmp eq %"struct.blink::NGTableBorders::Section"* %69, null
  %71 = bitcast %"struct.blink::NGTableBorders::Section"* %69 to i8*
  br i1 %70, label %78, label %72, !prof !3

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %49, i64 0, i32 3, i32 0, i32 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76, !prof !2

76:                                               ; preds = %72
  store i32 0, i32* %73, align 4
  br label %77

77:                                               ; preds = %76, %72
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #13
  store %"struct.blink::NGTableBorders::Section"* null, %"struct.blink::NGTableBorders::Section"** %68, align 8
  br label %78

78:                                               ; preds = %77, %67
  %79 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %49, i64 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::Vector.1839", %"class.WTF::Vector.1839"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"struct.blink::NGTableBorders::Edge"*, %"struct.blink::NGTableBorders::Edge"** %80, align 8
  %82 = icmp eq %"struct.blink::NGTableBorders::Edge"* %81, null
  br i1 %82, label %101, label %83, !prof !3

83:                                               ; preds = %78
  %84 = bitcast %"struct.blink::NGTableBorders::Edge"* %81 to i8*
  %85 = getelementptr inbounds %"class.blink::NGTableBorders", %"class.blink::NGTableBorders"* %49, i64 0, i32 2, i32 0, i32 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %99, label %88, !prof !2

88:                                               ; preds = %83
  %89 = zext i32 %86 to i64
  %90 = getelementptr inbounds %"struct.blink::NGTableBorders::Edge", %"struct.blink::NGTableBorders::Edge"* %81, i64 %89
  br label %91

91:                                               ; preds = %91, %88
  %92 = phi %"struct.blink::NGTableBorders::Edge"* [ %94, %91 ], [ %81, %88 ]
  %93 = getelementptr inbounds %"struct.blink::NGTableBorders::Edge", %"struct.blink::NGTableBorders::Edge"* %92, i64 0, i32 0
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr* %93) #13
  %94 = getelementptr inbounds %"struct.blink::NGTableBorders::Edge", %"struct.blink::NGTableBorders::Edge"* %92, i64 1
  %95 = icmp eq %"struct.blink::NGTableBorders::Edge"* %94, %90
  br i1 %95, label %96, label %91

96:                                               ; preds = %91
  store i32 0, i32* %85, align 4
  %97 = bitcast %"class.WTF::Vector.1839"* %79 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %83
  %100 = phi i8* [ %98, %96 ], [ %84, %83 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #13
  br label %101

101:                                              ; preds = %78, %99
  %102 = bitcast %"class.blink::NGTableBorders"* %49 to i8*
  tail call void @free(i8* %102) #13
  br label %110

103:                                              ; preds = %27, %33, %40
  %104 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %105 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 5, i32 0
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %105, align 8
  %107 = tail call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_122ComputeBordersInternalERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %106)
  %108 = extractvalue { i64, i64 } %107, 0
  %109 = extractvalue { i64, i64 } %107, 1
  br label %110

110:                                              ; preds = %20, %13, %10, %2, %101, %62, %54, %103
  %111 = phi i64 [ %109, %103 ], [ 0, %2 ], [ %60, %54 ], [ %60, %62 ], [ %60, %101 ], [ 0, %10 ], [ %26, %20 ], [ 0, %13 ]
  %112 = phi i64 [ %108, %103 ], [ 0, %2 ], [ %57, %54 ], [ %57, %62 ], [ %57, %101 ], [ 0, %10 ], [ %23, %20 ], [ 0, %13 ]
  %113 = insertvalue { i64, i64 } undef, i64 %112, 0
  %114 = insertvalue { i64, i64 } %113, i64 %111, 1
  ret { i64, i64 } %114
}

declare %"class.blink::NGTableBorders"* @_ZNK5blink11NGTableNode15GetTableBordersEv(%"class.blink::NGTableNode"*) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define internal fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_122ComputeBordersInternalERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %18 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18)
  %19 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19)
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %21 = bitcast [20 x i8]* %20 to i160*
  %22 = load i160, i160* %21, align 8, !noalias !40
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %23, align 8, !noalias !40
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 27
  %26 = load i16, i16* %25, align 8, !noalias !40
  %27 = icmp ult i16 %26, 8192
  br i1 %27, label %31, label %28

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 26, i32 0
  %30 = load i32, i32* %29, align 4, !noalias !40
  br label %31

31:                                               ; preds = %28, %1
  %32 = phi i32 [ %30, %28 ], [ 0, %1 ]
  %33 = and i16 %26, 3584
  %34 = icmp eq i16 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 25, i32 0
  %37 = load i32, i32* %36, align 4, !noalias !40
  br label %38

38:                                               ; preds = %35, %31
  %39 = phi i32 [ %37, %35 ], [ 0, %31 ]
  %40 = and i16 %26, 14
  %41 = icmp eq i16 %40, 0
  br i1 %41, label %45, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 23, i32 0
  %44 = load i32, i32* %43, align 4, !noalias !40
  br label %45

45:                                               ; preds = %42, %38
  %46 = phi i32 [ %44, %42 ], [ 0, %38 ]
  %47 = and i16 %26, 224
  %48 = icmp eq i16 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 24, i32 0
  %51 = load i32, i32* %50, align 4, !noalias !40
  br label %52

52:                                               ; preds = %45, %49
  %53 = phi i32 [ %51, %49 ], [ 0, %45 ]
  store i32 %32, i32* %2, align 4, !alias.scope !40
  store i32 %39, i32* %3, align 4, !alias.scope !40
  store i32 %46, i32* %4, align 4, !alias.scope !40
  store i32 %53, i32* %5, align 4, !alias.scope !40
  %54 = and i160 %22, 15211807202738752817960438464512
  %55 = icmp eq i160 %54, 0
  %56 = and i160 %22, 41538374868278621028243970633760768
  %57 = icmp eq i160 %56, 0
  %58 = select i1 %57, i32* %5, i32* %3
  %59 = select i1 %57, i32* %2, i32* %4
  %60 = select i1 %55, i32* %58, i32* %59
  %61 = load i32, i32* %60, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19)
  %62 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62)
  %63 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63)
  %64 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64)
  %65 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %65)
  br i1 %27, label %69, label %66

66:                                               ; preds = %52
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 26, i32 0
  %68 = load i32, i32* %67, align 4, !noalias !43
  br label %69

69:                                               ; preds = %66, %52
  %70 = phi i32 [ %68, %66 ], [ 0, %52 ]
  br i1 %34, label %74, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 25, i32 0
  %73 = load i32, i32* %72, align 4, !noalias !43
  br label %74

74:                                               ; preds = %71, %69
  %75 = phi i32 [ %73, %71 ], [ 0, %69 ]
  br i1 %41, label %79, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 23, i32 0
  %78 = load i32, i32* %77, align 4, !noalias !43
  br label %79

79:                                               ; preds = %76, %74
  %80 = phi i32 [ %78, %76 ], [ 0, %74 ]
  br i1 %48, label %84, label %81

81:                                               ; preds = %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 24, i32 0
  %83 = load i32, i32* %82, align 4, !noalias !43
  br label %84

84:                                               ; preds = %79, %81
  %85 = phi i32 [ %83, %81 ], [ 0, %79 ]
  store i32 %70, i32* %6, align 4, !alias.scope !43
  store i32 %75, i32* %7, align 4, !alias.scope !43
  store i32 %80, i32* %8, align 4, !alias.scope !43
  store i32 %85, i32* %9, align 4, !alias.scope !43
  %86 = select i1 %57, i32* %7, i32* %9
  %87 = select i1 %57, i32* %8, i32* %6
  %88 = select i1 %55, i32* %86, i32* %87
  %89 = load i32, i32* %88, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %65)
  %90 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90)
  %91 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91)
  %92 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92)
  %93 = lshr i160 %22, 102
  %94 = trunc i160 %93 to i8
  %95 = and i8 %94, 3
  br i1 %27, label %99, label %96

96:                                               ; preds = %84
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 26, i32 0
  %98 = load i32, i32* %97, align 4, !noalias !46
  br label %99

99:                                               ; preds = %96, %84
  %100 = phi i32 [ %98, %96 ], [ 0, %84 ]
  br i1 %34, label %104, label %101

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 25, i32 0
  %103 = load i32, i32* %102, align 4, !noalias !46
  br label %104

104:                                              ; preds = %101, %99
  %105 = phi i32 [ %103, %101 ], [ 0, %99 ]
  br i1 %48, label %109, label %106

106:                                              ; preds = %104
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 24, i32 0
  %108 = load i32, i32* %107, align 4, !noalias !46
  br label %109

109:                                              ; preds = %104, %106
  %110 = phi i32 [ %108, %106 ], [ 0, %104 ]
  store i32 %100, i32* %10, align 4, !alias.scope !46
  store i32 %105, i32* %11, align 4, !alias.scope !46
  store i32 %110, i32* %12, align 4, !alias.scope !46
  %111 = icmp eq i8 %95, 0
  %112 = icmp eq i8 %95, 1
  %113 = select i1 %112, i32* %11, i32* %12
  %114 = select i1 %111, i32* %10, i32* %113
  %115 = load i32, i32* %114, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92)
  %116 = zext i32 %115 to i64
  %117 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117)
  %118 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %118)
  %119 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119)
  br i1 %34, label %123, label %120

120:                                              ; preds = %109
  %121 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 25, i32 0
  %122 = load i32, i32* %121, align 4, !noalias !49
  br label %123

123:                                              ; preds = %120, %109
  %124 = phi i32 [ %122, %120 ], [ 0, %109 ]
  br i1 %41, label %128, label %125

125:                                              ; preds = %123
  %126 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 23, i32 0
  %127 = load i32, i32* %126, align 4, !noalias !49
  br label %128

128:                                              ; preds = %125, %123
  %129 = phi i32 [ %127, %125 ], [ 0, %123 ]
  br i1 %48, label %133, label %130

130:                                              ; preds = %128
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 24, i32 0
  %132 = load i32, i32* %131, align 4, !noalias !49
  br label %133

133:                                              ; preds = %128, %130
  %134 = phi i32 [ %132, %130 ], [ 0, %128 ]
  store i32 %124, i32* %13, align 4, !alias.scope !49
  store i32 %129, i32* %14, align 4, !alias.scope !49
  store i32 %134, i32* %15, align 4, !alias.scope !49
  %135 = select i1 %112, i32* %15, i32* %13
  %136 = select i1 %111, i32* %14, i32* %135
  %137 = load i32, i32* %136, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %118)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119)
  %138 = zext i32 %137 to i64
  %139 = shl nuw i64 %138, 32
  %140 = or i64 %139, %116
  %141 = zext i32 %89 to i64
  %142 = shl nuw i64 %141, 32
  %143 = zext i32 %61 to i64
  %144 = or i64 %142, %143
  %145 = insertvalue { i64, i64 } undef, i64 %144, 0
  %146 = insertvalue { i64, i64 } %145, i64 %140, 1
  ret { i64, i64 } %146
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN5blink23ComputeBordersForInlineERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 {
  %2 = tail call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_122ComputeBordersInternalERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %0)
  ret { i64, i64 } %2
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN5blink21ComputeBordersForTestERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 {
  %2 = tail call fastcc { i64, i64 } @_ZN5blink12_GLOBAL__N_122ComputeBordersInternalERKNS_13ComputedStyleE(%"class.blink::ComputedStyle"* dereferenceable(104) %0)
  ret { i64, i64 } %2
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZN5blink23ComputeIntrinsicPaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutE(%"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %26, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %10 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %9, align 8
  %11 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %10, i64 0, i32 6
  %12 = load i16, i16* %11, align 8
  %13 = and i16 %12, 7
  %14 = icmp eq i16 %13, 2
  br i1 %14, label %15, label %26

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %10, i64 0, i32 7, i32 1, i64 8
  %17 = bitcast i8* %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %10, i64 0, i32 7, i32 1, i64 12
  %20 = bitcast i8* %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = zext i32 %18 to i64
  %23 = zext i32 %21 to i64
  %24 = shl nuw i64 %23, 32
  %25 = or i64 %24, %22
  br label %26

26:                                               ; preds = %3, %8, %15
  %27 = phi i64 [ 0, %3 ], [ %25, %15 ], [ 0, %8 ]
  %28 = trunc i64 %27 to i32
  %29 = lshr i64 %27, 32
  %30 = trunc i64 %29 to i32
  %31 = and i32 %5, 4194304
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %80, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = and i160 %36, 276701161105643274240
  %38 = icmp eq i160 %37, 18446744073709551616
  %39 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %73

41:                                               ; preds = %33
  %42 = sdiv i32 %40, 2
  %43 = sext i32 %42 to i64
  %44 = tail call i1 @llvm.is.constant.i64(i64 %43) #13
  br i1 %44, label %51, label %45

45:                                               ; preds = %41
  %46 = icmp slt i32 %40, -1
  %47 = select i1 %46, i32 -2147483648, i32 2147483647
  %48 = add nsw i64 %43, 2147483648
  %49 = icmp ult i64 %48, 4294967296
  %50 = select i1 %49, i32 %42, i32 %47, !prof !3
  br label %51

51:                                               ; preds = %41, %45
  %52 = phi i32 [ %50, %45 ], [ %42, %41 ]
  %53 = icmp sgt i32 %52, -1
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %28, i32 %52) #13
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !2
  br i1 %44, label %65, label %59

59:                                               ; preds = %51
  %60 = icmp slt i32 %40, -1
  %61 = select i1 %60, i32 -2147483648, i32 2147483647
  %62 = add nsw i64 %43, 2147483648
  %63 = icmp ult i64 %62, 4294967296
  %64 = select i1 %63, i32 %42, i32 %61, !prof !3
  br label %65

65:                                               ; preds = %51, %59
  %66 = phi i32 [ %64, %59 ], [ %42, %51 ]
  %67 = icmp sgt i32 %66, -1
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %30, i32 %66) #13
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !2
  br label %80

73:                                               ; preds = %33
  %74 = icmp sgt i32 %40, -1
  %75 = select i1 %74, i32 -2147483648, i32 2147483647
  %76 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %30, i32 %40) #13
  %77 = extractvalue { i32, i1 } %76, 1
  %78 = extractvalue { i32, i1 } %76, 0
  %79 = select i1 %77, i32 %75, i32 %78, !prof !2
  br label %80

80:                                               ; preds = %26, %65, %73
  %81 = phi i32 [ %58, %65 ], [ %28, %73 ], [ %28, %26 ]
  %82 = phi i32 [ %72, %65 ], [ %79, %73 ], [ %30, %26 ]
  %83 = zext i32 %82 to i64
  %84 = shl nuw i64 %83, 32
  %85 = zext i32 %81 to i64
  %86 = or i64 %84, %85
  %87 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %86, 1
  ret { i64, i64 } %87
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %18 = bitcast [20 x i8]* %17 to i160*
  %19 = load i160, i160* %18, align 8
  %20 = and i160 %19, 89202980794122492566142873090593446023921664
  %21 = icmp eq i160 %20, 0
  br i1 %21, label %299, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = and i32 %24, 512
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %299

27:                                               ; preds = %22
  %28 = lshr i160 %19, 32
  %29 = trunc i160 %28 to i32
  %30 = and i32 %29, 30
  %31 = or i32 %30, 1
  %32 = icmp eq i32 %31, 5
  %33 = and i160 %19, 81129638414606681695789005144064
  %34 = icmp eq i160 %33, 0
  %35 = and i1 %34, %32
  br i1 %35, label %299, label %36

36:                                               ; preds = %27
  %37 = and i32 %24, 2048
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %49

39:                                               ; preds = %36
  %40 = lshr i32 %24, 26
  %41 = and i32 %40, 3
  switch i32 %41, label %42 [
    i32 0, label %43
    i32 1, label %76
    i32 2, label %75
    i32 3, label %45
  ]

42:                                               ; preds = %39
  unreachable

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  br label %71

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %47 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %46 to i32**
  %48 = load i32*, i32** %47, align 8
  br label %71

49:                                               ; preds = %36
  %50 = lshr i32 %24, 28
  %51 = and i32 %50, 3
  switch i32 %51, label %52 [
    i32 0, label %53
    i32 1, label %76
    i32 2, label %76
    i32 3, label %55
  ]

52:                                               ; preds = %49
  unreachable

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %59

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %57 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %56, align 8
  %58 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %57, i64 0, i32 0, i32 1, i32 0
  br label %59

59:                                               ; preds = %55, %53
  %60 = phi i32* [ %58, %55 ], [ %54, %53 ]
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, -64
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  switch i32 %51, label %64 [
    i32 0, label %65
    i32 1, label %76
    i32 2, label %75
    i32 3, label %67
  ]

64:                                               ; preds = %63
  unreachable

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  br label %71

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %69 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %68, align 8
  %70 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %69, i64 0, i32 0, i32 1, i32 0
  br label %71

71:                                               ; preds = %43, %45, %65, %67
  %72 = phi i32* [ %48, %45 ], [ %44, %43 ], [ %70, %67 ], [ %66, %65 ]
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, -64
  br i1 %74, label %75, label %76

75:                                               ; preds = %63, %39, %71
  br label %76

76:                                               ; preds = %49, %49, %59, %63, %39, %71, %75
  %77 = phi i32 [ 0, %75 ], [ %73, %71 ], [ 0, %39 ], [ 0, %63 ], [ 0, %59 ], [ 0, %49 ], [ 0, %49 ]
  %78 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79)
  %80 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80)
  %81 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81)
  %82 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 7, i32 0, i32 0
  %83 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %82, align 8, !noalias !52
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %83, i64 0, i32 16
  %85 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %83, i64 0, i32 15
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %83, i64 0, i32 13
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %83, i64 0, i32 14
  store %"class.blink::Length"* %84, %"class.blink::Length"** %3, align 8, !alias.scope !52
  store %"class.blink::Length"* %85, %"class.blink::Length"** %4, align 8, !alias.scope !52
  store %"class.blink::Length"* %86, %"class.blink::Length"** %5, align 8, !alias.scope !52
  store %"class.blink::Length"* %87, %"class.blink::Length"** %6, align 8, !alias.scope !52
  %88 = and i160 %19, 15211807202738752817960438464512
  %89 = icmp eq i160 %88, 0
  %90 = and i160 %19, 41538374868278621028243970633760768
  %91 = icmp eq i160 %90, 0
  %92 = select i1 %91, %"class.blink::Length"** %6, %"class.blink::Length"** %4
  %93 = select i1 %91, %"class.blink::Length"** %3, %"class.blink::Length"** %5
  %94 = select i1 %89, %"class.blink::Length"** %92, %"class.blink::Length"** %93
  %95 = load %"class.blink::Length"*, %"class.blink::Length"** %94, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81)
  %96 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %95, i64 0, i32 2
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 2
  br i1 %98, label %99, label %122, !prof !3

99:                                               ; preds = %76
  %100 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %95, i64 0, i32 3
  %101 = load i8, i8* %100, align 2, !range !4
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.blink::Length"* %95 to float*
  %105 = load float, float* %104, align 4
  br label %110

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %95, i64 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = sitofp i32 %108 to float
  br label %110

110:                                              ; preds = %106, %103
  %111 = phi float [ %105, %103 ], [ %109, %106 ]
  %112 = fmul float %111, 6.400000e+01
  %113 = fcmp ult float %112, 0xC1E0000000000000
  %114 = fcmp ugt float %112, 0x41DFFFFFE0000000
  %115 = fcmp ogt float %112, 0xC1E0000000000000
  %116 = select i1 %115, float %112, float 0xC1E0000000000000
  %117 = fptosi float %116 to i32
  %118 = select i1 %113, i32 0, i32 2147483647
  %119 = select i1 %114, i32 %118, i32 %117
  %120 = lshr i160 %19, 102
  %121 = trunc i160 %120 to i8
  br label %130

122:                                              ; preds = %76
  %123 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %95, i32 %77) #13
  %124 = load i160, i160* %18, align 8, !noalias !55
  %125 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %82, align 8, !noalias !55
  %126 = and i160 %124, 15211807202738752817960438464512
  %127 = and i160 %124, 41538374868278621028243970633760768
  %128 = lshr i160 %124, 102
  %129 = trunc i160 %128 to i8
  br label %130

130:                                              ; preds = %110, %122
  %131 = phi i8 [ %121, %110 ], [ %129, %122 ]
  %132 = phi i160 [ %90, %110 ], [ %127, %122 ]
  %133 = phi i160 [ %88, %110 ], [ %126, %122 ]
  %134 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %83, %110 ], [ %125, %122 ]
  %135 = phi i32 [ %119, %110 ], [ %123, %122 ]
  %136 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136)
  %137 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137)
  %138 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138)
  %139 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %139)
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %134, i64 0, i32 16
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %134, i64 0, i32 15
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %134, i64 0, i32 13
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %134, i64 0, i32 14
  store %"class.blink::Length"* %140, %"class.blink::Length"** %7, align 8, !alias.scope !55
  store %"class.blink::Length"* %141, %"class.blink::Length"** %8, align 8, !alias.scope !55
  store %"class.blink::Length"* %142, %"class.blink::Length"** %9, align 8, !alias.scope !55
  store %"class.blink::Length"* %143, %"class.blink::Length"** %10, align 8, !alias.scope !55
  %144 = icmp eq i160 %133, 0
  %145 = icmp eq i160 %132, 0
  %146 = select i1 %145, %"class.blink::Length"** %8, %"class.blink::Length"** %10
  %147 = select i1 %145, %"class.blink::Length"** %9, %"class.blink::Length"** %7
  %148 = select i1 %144, %"class.blink::Length"** %146, %"class.blink::Length"** %147
  %149 = load %"class.blink::Length"*, %"class.blink::Length"** %148, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %137)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %139)
  %150 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %149, i64 0, i32 2
  %151 = load i8, i8* %150, align 1
  %152 = icmp eq i8 %151, 2
  br i1 %152, label %153, label %174, !prof !3

153:                                              ; preds = %130
  %154 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %149, i64 0, i32 3
  %155 = load i8, i8* %154, align 2, !range !4
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %160, label %157

157:                                              ; preds = %153
  %158 = bitcast %"class.blink::Length"* %149 to float*
  %159 = load float, float* %158, align 4
  br label %164

160:                                              ; preds = %153
  %161 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %149, i64 0, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = sitofp i32 %162 to float
  br label %164

164:                                              ; preds = %160, %157
  %165 = phi float [ %159, %157 ], [ %163, %160 ]
  %166 = fmul float %165, 6.400000e+01
  %167 = fcmp ult float %166, 0xC1E0000000000000
  %168 = fcmp ugt float %166, 0x41DFFFFFE0000000
  %169 = fcmp ogt float %166, 0xC1E0000000000000
  %170 = select i1 %169, float %166, float 0xC1E0000000000000
  %171 = fptosi float %170 to i32
  %172 = select i1 %167, i32 0, i32 2147483647
  %173 = select i1 %168, i32 %172, i32 %171
  br label %180

174:                                              ; preds = %130
  %175 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %149, i32 %77) #13
  %176 = load i160, i160* %18, align 8, !noalias !58
  %177 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %82, align 8, !noalias !58
  %178 = lshr i160 %176, 102
  %179 = trunc i160 %178 to i8
  br label %180

180:                                              ; preds = %164, %174
  %181 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %134, %164 ], [ %177, %174 ]
  %182 = phi i8 [ %131, %164 ], [ %179, %174 ]
  %183 = phi i32 [ %173, %164 ], [ %175, %174 ]
  %184 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184)
  %185 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185)
  %186 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186)
  %187 = and i8 %182, 3
  %188 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %181, i64 0, i32 16
  %189 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %181, i64 0, i32 15
  %190 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %181, i64 0, i32 14
  store %"class.blink::Length"* %188, %"class.blink::Length"** %11, align 8, !alias.scope !58
  store %"class.blink::Length"* %189, %"class.blink::Length"** %12, align 8, !alias.scope !58
  store %"class.blink::Length"* %190, %"class.blink::Length"** %13, align 8, !alias.scope !58
  %191 = icmp eq i8 %187, 0
  %192 = icmp eq i8 %187, 1
  %193 = select i1 %192, %"class.blink::Length"** %12, %"class.blink::Length"** %13
  %194 = select i1 %191, %"class.blink::Length"** %11, %"class.blink::Length"** %193
  %195 = load %"class.blink::Length"*, %"class.blink::Length"** %194, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186)
  %196 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %195, i64 0, i32 2
  %197 = load i8, i8* %196, align 1
  %198 = icmp eq i8 %197, 2
  br i1 %198, label %199, label %220, !prof !3

199:                                              ; preds = %180
  %200 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %195, i64 0, i32 3
  %201 = load i8, i8* %200, align 2, !range !4
  %202 = icmp eq i8 %201, 0
  br i1 %202, label %206, label %203

203:                                              ; preds = %199
  %204 = bitcast %"class.blink::Length"* %195 to float*
  %205 = load float, float* %204, align 4
  br label %210

206:                                              ; preds = %199
  %207 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %195, i64 0, i32 0, i32 0
  %208 = load i32, i32* %207, align 4
  %209 = sitofp i32 %208 to float
  br label %210

210:                                              ; preds = %206, %203
  %211 = phi float [ %205, %203 ], [ %209, %206 ]
  %212 = fmul float %211, 6.400000e+01
  %213 = fcmp ult float %212, 0xC1E0000000000000
  %214 = fcmp ugt float %212, 0x41DFFFFFE0000000
  %215 = fcmp ogt float %212, 0xC1E0000000000000
  %216 = select i1 %215, float %212, float 0xC1E0000000000000
  %217 = fptosi float %216 to i32
  %218 = select i1 %213, i32 0, i32 2147483647
  %219 = select i1 %214, i32 %218, i32 %217
  br label %227

220:                                              ; preds = %180
  %221 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %195, i32 %77) #13
  %222 = load i160, i160* %18, align 8, !noalias !61
  %223 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %82, align 8, !noalias !61
  %224 = lshr i160 %222, 102
  %225 = trunc i160 %224 to i8
  %226 = and i8 %225, 3
  br label %227

227:                                              ; preds = %210, %220
  %228 = phi i8 [ %187, %210 ], [ %226, %220 ]
  %229 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %181, %210 ], [ %223, %220 ]
  %230 = phi i32 [ %219, %210 ], [ %221, %220 ]
  %231 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231)
  %232 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232)
  %233 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233)
  %234 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %229, i64 0, i32 15
  %235 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %229, i64 0, i32 13
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %229, i64 0, i32 14
  store %"class.blink::Length"* %234, %"class.blink::Length"** %14, align 8, !alias.scope !61
  store %"class.blink::Length"* %235, %"class.blink::Length"** %15, align 8, !alias.scope !61
  store %"class.blink::Length"* %236, %"class.blink::Length"** %16, align 8, !alias.scope !61
  %237 = icmp eq i8 %228, 0
  %238 = icmp eq i8 %228, 1
  %239 = select i1 %238, %"class.blink::Length"** %16, %"class.blink::Length"** %14
  %240 = select i1 %237, %"class.blink::Length"** %15, %"class.blink::Length"** %239
  %241 = load %"class.blink::Length"*, %"class.blink::Length"** %240, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233)
  %242 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %241, i64 0, i32 2
  %243 = load i8, i8* %242, align 1
  %244 = icmp eq i8 %243, 2
  br i1 %244, label %245, label %266, !prof !3

245:                                              ; preds = %227
  %246 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %241, i64 0, i32 3
  %247 = load i8, i8* %246, align 2, !range !4
  %248 = icmp eq i8 %247, 0
  br i1 %248, label %252, label %249

249:                                              ; preds = %245
  %250 = bitcast %"class.blink::Length"* %241 to float*
  %251 = load float, float* %250, align 4
  br label %256

252:                                              ; preds = %245
  %253 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %241, i64 0, i32 0, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = sitofp i32 %254 to float
  br label %256

256:                                              ; preds = %252, %249
  %257 = phi float [ %251, %249 ], [ %255, %252 ]
  %258 = fmul float %257, 6.400000e+01
  %259 = fcmp ult float %258, 0xC1E0000000000000
  %260 = fcmp ugt float %258, 0x41DFFFFFE0000000
  %261 = fcmp ogt float %258, 0xC1E0000000000000
  %262 = select i1 %261, float %258, float 0xC1E0000000000000
  %263 = fptosi float %262 to i32
  %264 = select i1 %259, i32 0, i32 2147483647
  %265 = select i1 %260, i32 %264, i32 %263
  br label %268

266:                                              ; preds = %227
  %267 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %241, i32 %77) #13
  br label %268

268:                                              ; preds = %256, %266
  %269 = phi i32 [ %265, %256 ], [ %267, %266 ]
  %270 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %271 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %272 = or i8 %271, %270
  %273 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %274 = or i8 %272, %273
  %275 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %276 = or i8 %274, %275
  %277 = icmp ne i8 %276, 0
  %278 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase27is_layout_ng_table_enabled_E, align 1
  %279 = icmp ne i8 %278, 0
  %280 = and i1 %279, %277
  br i1 %280, label %292, label %281

281:                                              ; preds = %268
  %282 = load i160, i160* %18, align 8
  %283 = and i160 %282, 133143986176
  %284 = icmp eq i160 %283, 51539607552
  br i1 %284, label %285, label %292

285:                                              ; preds = %281
  %286 = icmp slt i32 %230, -2147483584
  %287 = and i32 %230, -64
  %288 = select i1 %286, i32 -2147483648, i32 %287, !prof !2
  %289 = icmp slt i32 %269, -2147483584
  %290 = and i32 %269, -64
  %291 = select i1 %289, i32 -2147483648, i32 %290, !prof !2
  br label %292

292:                                              ; preds = %285, %281, %268
  %293 = phi i32 [ %269, %268 ], [ %291, %285 ], [ %269, %281 ]
  %294 = phi i32 [ %230, %268 ], [ %288, %285 ], [ %230, %281 ]
  %295 = zext i32 %294 to i64
  %296 = zext i32 %293 to i64
  %297 = shl nuw i64 %296, 32
  %298 = or i64 %297, %295
  br label %299

299:                                              ; preds = %27, %22, %2, %292
  %300 = phi i32 [ %183, %292 ], [ 0, %22 ], [ 0, %2 ], [ 0, %27 ]
  %301 = phi i64 [ %298, %292 ], [ 0, %22 ], [ 0, %2 ], [ 0, %27 ]
  %302 = phi i32 [ %135, %292 ], [ 0, %22 ], [ 0, %2 ], [ 0, %27 ]
  %303 = zext i32 %300 to i64
  %304 = shl nuw i64 %303, 32
  %305 = zext i32 %302 to i64
  %306 = or i64 %304, %305
  %307 = insertvalue { i64, i64 } undef, i64 %306, 0
  %308 = insertvalue { i64, i64 } %307, i64 %301, 1
  ret { i64, i64 } %308
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink32ComputeScrollbarsForNonAnonymousERKNS_11NGBlockNodeE(%"class.blink::NGBlockNode"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 {
  %2 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = lshr i160 %8, 74
  %10 = trunc i160 %9 to i32
  %11 = and i32 %10, 7
  %12 = bitcast %"class.blink::LayoutObject"* %3 to %"class.blink::LayoutBox"*
  switch i32 %11, label %16 [
    i32 5, label %13
    i32 2, label %13
  ]

13:                                               ; preds = %1, %1
  %14 = and i160 %8, 270215977642229760
  %15 = icmp eq i160 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %1, %13
  %17 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %12)
  %18 = extractvalue { i64, i64 } %17, 0
  %19 = extractvalue { i64, i64 } %17, 1
  br label %20

20:                                               ; preds = %13, %16
  %21 = phi i64 [ %18, %16 ], [ 0, %13 ]
  %22 = phi i64 [ %19, %16 ], [ 0, %13 ]
  %23 = insertvalue { i64, i64 } undef, i64 %21, 0
  %24 = insertvalue { i64, i64 } %23, i64 %22, 1
  ret { i64, i64 } %24
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #13
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #13
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #13
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %86, label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 0, i32 0, i32 1) #13
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = extractvalue { i64, i64 } %47, 1
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = lshr i160 %55, 102
  %57 = trunc i160 %56 to i8
  %58 = and i8 %57, 3
  switch i8 %58, label %72 [
    i8 0, label %59
    i8 1, label %65
    i8 3, label %65
    i8 2, label %68
  ]

59:                                               ; preds = %46
  %60 = lshr i64 %51, 32
  %61 = trunc i64 %60 to i32
  %62 = and i64 %48, 4294967295
  %63 = shl i64 %51, 32
  %64 = or i64 %63, %62
  br label %73

65:                                               ; preds = %46, %46
  %66 = and i64 %51, -4294967296
  %67 = or i64 %66, %50
  br label %73

68:                                               ; preds = %46
  %69 = lshr i64 %51, 32
  %70 = and i64 %48, -4294967296
  %71 = or i64 %70, %69
  br label %73

72:                                               ; preds = %46
  unreachable

73:                                               ; preds = %59, %65, %68
  %74 = phi i64 [ %71, %68 ], [ %67, %65 ], [ %64, %59 ]
  %75 = phi i64 [ %51, %68 ], [ %51, %65 ], [ %50, %59 ]
  %76 = phi i32 [ %49, %68 ], [ %49, %65 ], [ %61, %59 ]
  %77 = trunc i64 %75 to i32
  %78 = and i160 %55, 41538374868278621028243970633760768
  %79 = icmp ne i160 %78, 0
  %80 = select i1 %79, i32 %76, i32 %77
  %81 = select i1 %79, i32 %77, i32 %76
  %82 = zext i32 %80 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %81 to i64
  %85 = or i64 %83, %84
  br label %86

86:                                               ; preds = %39, %73
  %87 = phi i64 [ %74, %73 ], [ 0, %39 ]
  %88 = phi i64 [ %85, %73 ], [ 0, %39 ]
  %89 = insertvalue { i64, i64 } undef, i64 %88, 0
  %90 = insertvalue { i64, i64 } %89, i64 %87, 1
  ret { i64, i64 } %90
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink32NeedsInlineSizeToResolveLineLeftERKNS_13ComputedStyleES2_(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %4 = bitcast [20 x i8]* %3 to i160*
  %5 = load i160, i160* %4, align 8
  %6 = and i160 %5, 41538374868278621028243970633760768
  %7 = icmp eq i160 %6, 0
  br i1 %7, label %8, label %56

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 44601490397061246283071436545296723011960832
  %13 = icmp eq i160 %12, 0
  br i1 %13, label %14, label %19

14:                                               ; preds = %8
  %15 = lshr i160 %5, 58
  %16 = trunc i160 %15 to i32
  %17 = lshr i160 %5, 114
  %18 = trunc i160 %17 to i32
  br label %43

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %20, align 8, !noalias !64
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 12
  %23 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 11
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 9
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %21, i64 0, i32 10
  %26 = and i160 %5, 15211807202738752817960438464512
  %27 = icmp eq i160 %26, 0
  %28 = select i1 %27, %"class.blink::Length"* %25, %"class.blink::Length"* %22
  %29 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %28, i64 0, i32 2
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  %32 = select i1 %27, %"class.blink::Length"* %23, %"class.blink::Length"* %24
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %32, i64 0, i32 2
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 0
  %36 = or i1 %31, %35
  %37 = select i1 %35, i32 1, i32 2
  %38 = select i1 %31, i32 %37, i32 0
  %39 = lshr i160 %5, 58
  %40 = trunc i160 %39 to i32
  %41 = lshr i160 %5, 114
  %42 = trunc i160 %41 to i32
  br i1 %36, label %53, label %43

43:                                               ; preds = %19, %14
  %44 = phi i32 [ %16, %14 ], [ %40, %19 ]
  %45 = phi i32 [ %18, %14 ], [ %42, %19 ]
  %46 = and i32 %44, 15
  switch i32 %46, label %52 [
    i32 4, label %47
    i32 5, label %49
    i32 6, label %53
  ]

47:                                               ; preds = %43
  %48 = and i32 %45, 2
  br label %53

49:                                               ; preds = %43
  %50 = and i32 %45, 2
  %51 = xor i32 %50, 2
  br label %53

52:                                               ; preds = %43
  br label %53

53:                                               ; preds = %19, %43, %47, %49, %52
  %54 = phi i32 [ 0, %52 ], [ %38, %19 ], [ %48, %47 ], [ %51, %49 ], [ 1, %43 ]
  %55 = icmp ne i32 %54, 0
  br label %56

56:                                               ; preds = %2, %53
  %57 = phi i1 [ %55, %53 ], [ true, %2 ]
  ret i1 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20ResolveInlineMarginsERKNS_13ComputedStyleES2_NS_10LayoutUnitES3_PNS_10NGBoxStrutE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i32, i32, %"struct.blink::NGBoxStrut"* nocapture) local_unnamed_addr #2 {
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %4, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %4, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %17, 0
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %17) #13
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !2
  %24 = icmp slt i32 %23, 0
  %25 = select i1 %24, i32 -2147483648, i32 2147483647
  %26 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %3, i32 %23) #13
  %27 = extractvalue { i32, i1 } %26, 1
  %28 = extractvalue { i32, i1 } %26, 0
  %29 = select i1 %27, i32 %25, i32 %28, !prof !2
  %30 = icmp sgt i32 %29, -1
  %31 = select i1 %30, i32 -2147483648, i32 2147483647
  %32 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 %29) #13
  %33 = extractvalue { i32, i1 } %32, 1
  %34 = extractvalue { i32, i1 } %32, 0
  %35 = select i1 %33, i32 %31, i32 %34, !prof !2
  %36 = icmp sgt i32 %35, 0
  br i1 %36, label %37, label %116

37:                                               ; preds = %5
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = and i160 %40, 44601490397061246283071436545296723011960832
  %42 = icmp eq i160 %41, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = lshr i160 %46, 58
  %48 = trunc i160 %47 to i32
  %49 = lshr i160 %46, 114
  %50 = trunc i160 %49 to i32
  br label %94

51:                                               ; preds = %37
  %52 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52)
  %53 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %54 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55)
  %56 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %57 = bitcast [20 x i8]* %56 to i160*
  %58 = load i160, i160* %57, align 8, !noalias !67
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %59, align 8, !noalias !67
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 12
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 11
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 9
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 10
  store %"class.blink::Length"* %61, %"class.blink::Length"** %6, align 8, !alias.scope !67
  store %"class.blink::Length"* %62, %"class.blink::Length"** %7, align 8, !alias.scope !67
  store %"class.blink::Length"* %63, %"class.blink::Length"** %8, align 8, !alias.scope !67
  store %"class.blink::Length"* %64, %"class.blink::Length"** %9, align 8, !alias.scope !67
  %65 = and i160 %58, 15211807202738752817960438464512
  %66 = icmp eq i160 %65, 0
  %67 = and i160 %58, 41538374868278621028243970633760768
  %68 = icmp eq i160 %67, 0
  %69 = select i1 %68, %"class.blink::Length"** %9, %"class.blink::Length"** %7
  %70 = select i1 %68, %"class.blink::Length"** %6, %"class.blink::Length"** %8
  %71 = select i1 %66, %"class.blink::Length"** %69, %"class.blink::Length"** %70
  %72 = load %"class.blink::Length"*, %"class.blink::Length"** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  %73 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %72, i64 0, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 0
  %76 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76)
  %77 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77)
  %78 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79)
  store %"class.blink::Length"* %61, %"class.blink::Length"** %10, align 8, !alias.scope !70
  store %"class.blink::Length"* %62, %"class.blink::Length"** %11, align 8, !alias.scope !70
  store %"class.blink::Length"* %63, %"class.blink::Length"** %12, align 8, !alias.scope !70
  store %"class.blink::Length"* %64, %"class.blink::Length"** %13, align 8, !alias.scope !70
  %80 = select i1 %68, %"class.blink::Length"** %11, %"class.blink::Length"** %13
  %81 = select i1 %68, %"class.blink::Length"** %12, %"class.blink::Length"** %10
  %82 = select i1 %66, %"class.blink::Length"** %80, %"class.blink::Length"** %81
  %83 = load %"class.blink::Length"*, %"class.blink::Length"** %82, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79)
  %84 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %83, i64 0, i32 2
  %85 = load i8, i8* %84, align 1
  %86 = icmp eq i8 %85, 0
  %87 = or i1 %75, %86
  %88 = select i1 %86, i32 1, i32 2
  %89 = select i1 %75, i32 %88, i32 0
  %90 = lshr i160 %58, 58
  %91 = trunc i160 %90 to i32
  %92 = lshr i160 %58, 114
  %93 = trunc i160 %92 to i32
  br i1 %87, label %103, label %94

94:                                               ; preds = %51, %43
  %95 = phi i32 [ %48, %43 ], [ %91, %51 ]
  %96 = phi i32 [ %50, %43 ], [ %93, %51 ]
  %97 = and i32 %95, 15
  switch i32 %97, label %116 [
    i32 4, label %98
    i32 5, label %100
    i32 6, label %105
  ]

98:                                               ; preds = %94
  %99 = and i32 %96, 2
  br label %103

100:                                              ; preds = %94
  %101 = and i32 %96, 2
  %102 = xor i32 %101, 2
  br label %103

103:                                              ; preds = %51, %98, %100
  %104 = phi i32 [ %89, %51 ], [ %99, %98 ], [ %102, %100 ]
  switch i32 %104, label %116 [
    i32 1, label %105
    i32 2, label %111
  ]

105:                                              ; preds = %94, %103
  %106 = lshr i32 %35, 1
  %107 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %106) #13
  %108 = extractvalue { i32, i1 } %107, 1
  %109 = extractvalue { i32, i1 } %107, 0
  %110 = select i1 %108, i32 2147483647, i32 %109, !prof !2
  store i32 %110, i32* %14, align 4
  br label %116

111:                                              ; preds = %103
  %112 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %15, i32 %35) #13
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 2147483647, i32 %114, !prof !2
  store i32 %115, i32* %14, align 4
  br label %116

116:                                              ; preds = %94, %105, %111, %103, %5
  %117 = phi i32 [ %15, %94 ], [ %110, %105 ], [ %115, %111 ], [ %15, %103 ], [ %15, %5 ]
  %118 = icmp sgt i32 %3, -1
  %119 = select i1 %118, i32 -2147483648, i32 2147483647
  %120 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %2, i32 %3) #13
  %121 = extractvalue { i32, i1 } %120, 1
  %122 = extractvalue { i32, i1 } %120, 0
  %123 = select i1 %121, i32 %119, i32 %122, !prof !2
  %124 = icmp sgt i32 %117, -1
  %125 = select i1 %124, i32 -2147483648, i32 2147483647
  %126 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %123, i32 %117) #13
  %127 = extractvalue { i32, i1 } %126, 1
  %128 = extractvalue { i32, i1 } %126, 0
  %129 = select i1 %127, i32 %125, i32 %128, !prof !2
  store i32 %129, i32* %16, align 4
  ret void
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink22LineOffsetForTextAlignENS_10ETextAlignENS_13TextDirectionENS_10LayoutUnitE(i32, i8 zeroext, i32) local_unnamed_addr #6 {
  %4 = icmp eq i8 %1, 0
  %5 = or i32 %0, 4
  %6 = icmp eq i32 %5, 7
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = xor i1 %4, true
  %9 = zext i1 %8 to i32
  br label %14

10:                                               ; preds = %3
  %11 = icmp eq i32 %0, 8
  %12 = zext i1 %4 to i32
  %13 = select i1 %11, i32 %12, i32 %0
  br label %14

14:                                               ; preds = %10, %7
  %15 = phi i32 [ %9, %7 ], [ %13, %10 ]
  switch i32 %15, label %44 [
    i32 0, label %16
    i32 4, label %16
    i32 1, label %20
    i32 5, label %20
    i32 2, label %25
    i32 6, label %25
  ]

16:                                               ; preds = %14, %14
  br i1 %4, label %44, label %17

17:                                               ; preds = %16
  %18 = icmp slt i32 %2, 0
  %19 = select i1 %18, i32 %2, i32 0
  br label %44

20:                                               ; preds = %14, %14
  %21 = xor i1 %4, true
  %22 = icmp sgt i32 %2, 0
  %23 = or i1 %22, %21
  %24 = select i1 %23, i32 %2, i32 0, !prof !73
  ret i32 %24

25:                                               ; preds = %14, %14
  br i1 %4, label %26, label %40

26:                                               ; preds = %25
  %27 = sdiv i32 %2, 2
  %28 = sext i32 %27 to i64
  %29 = tail call i1 @llvm.is.constant.i64(i64 %28) #13
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = icmp slt i32 %2, -1
  %32 = select i1 %31, i32 -2147483648, i32 2147483647
  %33 = add nsw i64 %28, 2147483648
  %34 = icmp ult i64 %33, 4294967296
  %35 = select i1 %34, i32 %27, i32 %32, !prof !3
  br label %36

36:                                               ; preds = %26, %30
  %37 = phi i32 [ %35, %30 ], [ %27, %26 ]
  %38 = icmp sgt i32 %37, 0
  %39 = select i1 %38, i32 %37, i32 0
  ret i32 %39

40:                                               ; preds = %25
  %41 = icmp sgt i32 %2, 0
  %42 = zext i1 %41 to i32
  %43 = lshr i32 %2, %42
  ret i32 %43

44:                                               ; preds = %14, %16, %17
  %45 = phi i32 [ %19, %17 ], [ 0, %16 ], [ 0, %14 ]
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink25CalculateDefaultBlockSizeERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeERKNS_10NGBoxStrutE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 {
  %4 = tail call zeroext i1 @_ZNK5blink11NGBlockNode24IsQuirkyAndFillsViewportEv(%"class.blink::NGBlockNode"* %1)
  br i1 %4, label %5, label %45

5:                                                ; preds = %3
  %6 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = trunc i64 %8 to i32
  %10 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::LayoutObject"**
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = tail call { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %13)
  %15 = extractvalue { i64, i64 } %14, 1
  %16 = trunc i64 %15 to i32
  %17 = lshr i64 %15, 32
  %18 = trunc i64 %17 to i32
  %19 = icmp slt i32 %18, 0
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %18) #13
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23, !prof !2
  %25 = icmp sgt i32 %24, -1
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %9, i32 %24) #13
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !2
  %31 = icmp sgt i32 %30, 0
  %32 = select i1 %31, i32 %30, i32 0
  %33 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %36) #13
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !2
  %43 = icmp slt i32 %32, %42
  %44 = select i1 %43, i32 %42, i32 %32
  br label %45

45:                                               ; preds = %3, %5
  %46 = phi i32 [ %44, %5 ], [ -64, %3 ]
  ret i32 %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11NGBlockNode24IsQuirkyAndFillsViewportEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %1, %7
  %8 = phi %"class.blink::LayoutObject"* [ %10, %7 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %8, i64 0, i32 7
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %7, label %14

14:                                               ; preds = %7, %1
  %15 = phi %"class.blink::Node"* [ %5, %1 ], [ %12, %7 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::Document"*, %"class.blink::Document"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %19, i64 0, i32 33
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %89

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %0, i64 0, i32 0, i32 1
  %25 = load i8, i8* %24, align 8
  %26 = and i8 %25, 1
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %37

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 113336795588871485128704
  %33 = icmp ne i96 %32, 75557863725914323419136
  %34 = and i96 %31, 8388608
  %35 = icmp eq i96 %34, 0
  %36 = and i1 %33, %35
  br i1 %36, label %37, label %89

37:                                               ; preds = %28, %23
  %38 = tail call zeroext i1 @_ZNK5blink11NGBlockNode19IsAtomicInlineLevelEv(%"class.blink::NGBlockNode"* %0) #13
  br i1 %38, label %89, label %39

39:                                               ; preds = %37
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 6, i32 0, i32 0
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %44, label %51

44:                                               ; preds = %39, %44
  %45 = phi %"class.blink::LayoutObject"* [ %47, %44 ], [ %40, %39 ]
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 7
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 6, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %44, label %51

51:                                               ; preds = %44, %39
  %52 = phi %"class.blink::Node"* [ %42, %39 ], [ %49, %44 ]
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 0, i32 3, i32 0, i32 0
  %54 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %54, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %56, i64 0, i32 47, i32 0, i32 0
  %58 = load %"class.blink::Element"*, %"class.blink::Element"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %58, i64 0, i32 0, i32 0
  %60 = icmp eq %"class.blink::Node"* %59, %42
  br i1 %60, label %89, label %61

61:                                               ; preds = %51
  %62 = load i8, i8* %24, align 8
  %63 = and i8 %62, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %89

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 4
  %67 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %66 to i96*
  %68 = load i96, i96* %67, align 4
  %69 = and i96 %68, 16777216
  %70 = icmp ne i96 %69, 0
  %71 = or i1 %43, %70
  br i1 %71, label %89, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, 48
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names8kBodyTagE, align 8
  %79 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 1, i32 2
  %82 = bitcast %"class.blink::Member.318"* %81 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %83 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %83, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %80, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %85, %87
  br label %89

89:                                               ; preds = %28, %65, %77, %72, %61, %51, %37, %14
  %90 = phi i1 [ false, %14 ], [ false, %28 ], [ false, %37 ], [ true, %51 ], [ false, %61 ], [ %88, %77 ], [ false, %72 ], [ false, %65 ]
  ret i1 %90
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32CalculateInitialFragmentGeometryERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeEb(%"struct.blink::NGFragmentGeometry"* noalias nocapture sret, %"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16), i1 zeroext) local_unnamed_addr #2 {
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca { i64, i64 }, align 8
  %12 = bitcast { i64, i64 }* %11 to %"struct.blink::NGBoxStrut"*
  %13 = alloca %"class.blink::Length", align 4
  %14 = bitcast %"class.blink::NGBlockNode"* %2 to %"class.blink::LayoutObject"**
  %15 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = tail call { i64, i64 } @_ZN5blink14ComputeBordersERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::NGBlockNode"* dereferenceable(16) %2)
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  %21 = tail call { i64, i64 } @_ZN5blink14ComputePaddingERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %17)
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = extractvalue { i64, i64 } %21, 1
  %27 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 3, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 512
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %49

31:                                               ; preds = %4
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 5, i32 0
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8
  %38 = lshr i160 %37, 74
  %39 = trunc i160 %38 to i32
  %40 = and i32 %39, 7
  %41 = bitcast %"class.blink::LayoutObject"* %32 to %"class.blink::LayoutBox"*
  switch i32 %40, label %45 [
    i32 5, label %42
    i32 2, label %42
  ]

42:                                               ; preds = %31, %31
  %43 = and i160 %37, 270215977642229760
  %44 = icmp eq i160 %43, 0
  br i1 %44, label %49, label %45

45:                                               ; preds = %42, %31
  %46 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %41) #13
  %47 = extractvalue { i64, i64 } %46, 0
  %48 = extractvalue { i64, i64 } %46, 1
  br label %49

49:                                               ; preds = %4, %42, %45
  %50 = phi i64 [ 0, %4 ], [ %47, %45 ], [ 0, %42 ]
  %51 = phi i64 [ 0, %4 ], [ %48, %45 ], [ 0, %42 ]
  %52 = trunc i64 %50 to i32
  %53 = lshr i64 %50, 32
  %54 = trunc i64 %53 to i32
  %55 = bitcast { i64, i64 }* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #13
  %56 = bitcast { i64, i64 }* %11 to i32*
  %57 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %12, i64 0, i32 1, i32 0
  %58 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 1
  %59 = trunc i64 %19 to i32
  %60 = lshr i64 %19, 32
  %61 = trunc i64 %60 to i32
  %62 = icmp slt i32 %23, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %23) #13
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !2
  %68 = icmp slt i32 %25, 0
  %69 = select i1 %68, i32 -2147483648, i32 2147483647
  %70 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %61, i32 %25) #13
  %71 = extractvalue { i32, i1 } %70, 1
  %72 = extractvalue { i32, i1 } %70, 0
  %73 = select i1 %71, i32 %69, i32 %72, !prof !2
  %74 = trunc i64 %20 to i32
  %75 = trunc i64 %26 to i32
  %76 = icmp slt i32 %75, 0
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %74, i32 %75) #13
  %79 = extractvalue { i32, i1 } %78, 1
  %80 = extractvalue { i32, i1 } %78, 0
  %81 = select i1 %79, i32 %77, i32 %80, !prof !2
  %82 = zext i32 %81 to i64
  %83 = lshr i64 %20, 32
  %84 = trunc i64 %83 to i32
  %85 = lshr i64 %26, 32
  %86 = trunc i64 %85 to i32
  %87 = icmp slt i32 %86, 0
  %88 = select i1 %87, i32 -2147483648, i32 2147483647
  %89 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %84, i32 %86) #13
  %90 = extractvalue { i32, i1 } %89, 1
  %91 = extractvalue { i32, i1 } %89, 0
  %92 = select i1 %90, i32 %88, i32 %91, !prof !2
  %93 = zext i32 %92 to i64
  %94 = shl nuw i64 %93, 32
  %95 = or i64 %94, %82
  %96 = zext i32 %73 to i64
  %97 = shl nuw i64 %96, 32
  %98 = zext i32 %67 to i64
  %99 = or i64 %97, %98
  %100 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %11, i64 0, i32 0
  store i64 %99, i64* %100, align 8
  store i64 %95, i64* %58, align 8
  %101 = icmp slt i32 %52, 0
  %102 = select i1 %101, i32 -2147483648, i32 2147483647
  %103 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %67, i32 %52) #13
  %104 = extractvalue { i32, i1 } %103, 1
  %105 = extractvalue { i32, i1 } %103, 0
  %106 = select i1 %104, i32 %102, i32 %105, !prof !2
  %107 = icmp slt i32 %54, 0
  %108 = select i1 %107, i32 -2147483648, i32 2147483647
  %109 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %73, i32 %54) #13
  %110 = extractvalue { i32, i1 } %109, 1
  %111 = extractvalue { i32, i1 } %109, 0
  %112 = select i1 %110, i32 %108, i32 %111, !prof !2
  %113 = trunc i64 %51 to i32
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %113) #13
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !2
  %120 = lshr i64 %51, 32
  %121 = trunc i64 %120 to i32
  %122 = icmp slt i32 %121, 0
  %123 = select i1 %122, i32 -2147483648, i32 2147483647
  %124 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %92, i32 %121) #13
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 %123, i32 %126, !prof !2
  %128 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %129 = bitcast [20 x i8]* %128 to i160*
  %130 = load i160, i160* %129, align 8
  %131 = and i160 %130, 15211807202738752817960438464512
  %132 = icmp eq i160 %131, 0
  %133 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 5, i32 0, i32 0
  %134 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %133, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %134, i64 0, i32 3
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %134, i64 0, i32 8
  %137 = select i1 %132, %"class.blink::Length"* %135, %"class.blink::Length"* %136
  %138 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %137, i64 0, i32 2
  %139 = load i8, i8* %138, align 1
  switch i8 %139, label %140 [
    i8 8, label %214
    i8 1, label %214
  ]

140:                                              ; preds = %49
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %134, i64 0, i32 6
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %134, i64 0, i32 7
  %143 = select i1 %132, %"class.blink::Length"* %141, %"class.blink::Length"* %142
  %144 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %143, i64 0, i32 2
  %145 = load i8, i8* %144, align 1
  switch i8 %145, label %146 [
    i8 8, label %214
    i8 1, label %214
  ]

146:                                              ; preds = %140
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %134, i64 0, i32 4
  %148 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %134, i64 0, i32 5
  %149 = select i1 %132, %"class.blink::Length"* %147, %"class.blink::Length"* %148
  %150 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %149, i64 0, i32 2
  %151 = load i8, i8* %150, align 1
  switch i8 %151, label %152 [
    i8 8, label %214
    i8 1, label %214
  ]

152:                                              ; preds = %146
  %153 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153)
  %154 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154)
  %155 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155)
  %156 = lshr i160 %130, 102
  %157 = trunc i160 %156 to i8
  %158 = and i8 %157, 3
  %159 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 7, i32 0, i32 0
  %160 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %159, align 8, !noalias !74
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %160, i64 0, i32 18
  %162 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %160, i64 0, i32 17
  %163 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %160, i64 0, i32 8
  store %"class.blink::Length"* %161, %"class.blink::Length"** %8, align 8, !alias.scope !74
  store %"class.blink::Length"* %162, %"class.blink::Length"** %9, align 8, !alias.scope !74
  store %"class.blink::Length"* %163, %"class.blink::Length"** %10, align 8, !alias.scope !74
  %164 = icmp eq i8 %158, 0
  %165 = icmp eq i8 %158, 1
  %166 = select i1 %165, %"class.blink::Length"** %9, %"class.blink::Length"** %10
  %167 = select i1 %164, %"class.blink::Length"** %8, %"class.blink::Length"** %166
  %168 = load %"class.blink::Length"*, %"class.blink::Length"** %167, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155)
  %169 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %168, i64 0, i32 2
  %170 = load i8, i8* %169, align 1
  switch i8 %170, label %171 [
    i8 8, label %214
    i8 1, label %214
  ]

171:                                              ; preds = %152
  %172 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172)
  %173 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173)
  %174 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174)
  %175 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %160, i64 0, i32 7
  store %"class.blink::Length"* %162, %"class.blink::Length"** %5, align 8, !alias.scope !77
  store %"class.blink::Length"* %175, %"class.blink::Length"** %6, align 8, !alias.scope !77
  store %"class.blink::Length"* %163, %"class.blink::Length"** %7, align 8, !alias.scope !77
  %176 = select i1 %165, %"class.blink::Length"** %7, %"class.blink::Length"** %5
  %177 = select i1 %164, %"class.blink::Length"** %6, %"class.blink::Length"** %176
  %178 = load %"class.blink::Length"*, %"class.blink::Length"** %177, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174)
  %179 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %178, i64 0, i32 2
  %180 = load i8, i8* %179, align 1
  switch i8 %180, label %181 [
    i8 8, label %214
    i8 1, label %214
  ]

181:                                              ; preds = %171
  %182 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %2, i64 0, i32 0, i32 1
  %183 = load i8, i8* %182, align 8
  %184 = and i8 %183, 1
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %186, label %227

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %2, i64 0, i32 0, i32 0
  %188 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %188, i64 0, i32 0, i32 0, i32 4
  %190 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %189 to i96*
  %191 = load i96, i96* %190, align 4
  %192 = and i96 %191, 134217728
  %193 = icmp ne i96 %192, 0
  %194 = and i96 %191, 113336795588871485128704
  %195 = icmp eq i96 %194, 75557863725914323419136
  %196 = or i1 %193, %195
  br i1 %196, label %227, label %197

197:                                              ; preds = %186
  %198 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %188, i64 0, i32 0, i32 0, i32 7
  %199 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %198, align 8
  %200 = icmp eq %"class.blink::LayoutObject"* %199, null
  br i1 %200, label %227, label %201

201:                                              ; preds = %197
  %202 = bitcast %"class.blink::LayoutObject"* %199 to i1 (%"class.blink::LayoutObject"*)***
  %203 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %202, align 8
  %204 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %203, i64 80
  %205 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %204, align 8
  %206 = tail call zeroext i1 %205(%"class.blink::LayoutObject"* nonnull %199) #13
  br i1 %206, label %207, label %227

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 3, i32 0, i32 0
  %209 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %209, i64 0, i32 2, i32 0, i32 0
  %211 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %210, align 8
  %212 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %211, i64 0, i32 4, i32 2
  %213 = load i8, i8* %212, align 1
  switch i8 %213, label %227 [
    i8 8, label %214
    i8 1, label %214
  ]

214:                                              ; preds = %207, %207, %171, %171, %152, %152, %146, %146, %140, %140, %49, %49
  %215 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %2, i64 0, i32 0, i32 0
  %216 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %215, align 8
  %217 = bitcast %"class.blink::Length"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217) #13
  %218 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 0, i32 0
  store i32 0, i32* %218, align 4, !alias.scope !80
  %219 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 1
  store i8 0, i8* %219, align 4, !alias.scope !80
  %220 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 2
  store i8 1, i8* %220, align 1, !alias.scope !80
  %221 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %13, i64 0, i32 3
  store i8 0, i8* %221, align 2, !alias.scope !80
  %222 = call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %216, %"class.blink::Length"* nonnull dereferenceable(8) %13) #13
  %223 = load i8, i8* %220, align 1
  %224 = icmp eq i8 %223, 8
  br i1 %224, label %225, label %226

225:                                              ; preds = %214
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %13) #13
  br label %226

226:                                              ; preds = %214, %225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217) #13
  br label %227

227:                                              ; preds = %207, %186, %197, %181, %226, %201
  %228 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %229 = bitcast %"class.blink::LayoutObject"* %228 to i1 (%"class.blink::LayoutObject"*, i32)***
  %230 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %229, align 8
  %231 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %230, i64 92
  %232 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %231, align 8
  %233 = call zeroext i1 %232(%"class.blink::LayoutObject"* %228, i32 39) #13
  br i1 %233, label %234, label %247

234:                                              ; preds = %227
  %235 = call i64 @_ZN5blink19ComputeReplacedSizeERKNS_11NGBlockNodeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutENS_16ReplacedSizeModeE(%"class.blink::NGBlockNode"* dereferenceable(16) %2, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %12, i32 0)
  %236 = trunc i64 %235 to i32
  %237 = lshr i64 %235, 32
  %238 = trunc i64 %237 to i32
  %239 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 %236, i32* %239, align 4
  %240 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %238, i32* %240, align 4
  %241 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 1
  %242 = bitcast %"struct.blink::NGBoxStrut"* %241 to i64*
  store i64 %19, i64* %242, align 4
  %243 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 1, i32 2
  %244 = bitcast %"class.blink::LayoutUnit"* %243 to i64*
  store i64 %20, i64* %244, align 4
  %245 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 2
  %246 = bitcast %"struct.blink::NGBoxStrut"* %245 to i64*
  store i64 %50, i64* %246, align 4
  br label %428

247:                                              ; preds = %227
  %248 = call zeroext i1 @_ZNK5blink11NGBlockNode24IsQuirkyAndFillsViewportEv(%"class.blink::NGBlockNode"* %2) #13
  br i1 %248, label %249, label %284

249:                                              ; preds = %247
  %250 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = lshr i64 %251, 32
  %253 = trunc i64 %252 to i32
  %254 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %255 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %254, i64 0, i32 5, i32 0
  %256 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %255, align 8
  %257 = call { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %256) #13
  %258 = extractvalue { i64, i64 } %257, 1
  %259 = trunc i64 %258 to i32
  %260 = lshr i64 %258, 32
  %261 = trunc i64 %260 to i32
  %262 = icmp slt i32 %261, 0
  %263 = select i1 %262, i32 -2147483648, i32 2147483647
  %264 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %259, i32 %261) #13
  %265 = extractvalue { i32, i1 } %264, 1
  %266 = extractvalue { i32, i1 } %264, 0
  %267 = select i1 %265, i32 %263, i32 %266, !prof !2
  %268 = icmp sgt i32 %267, -1
  %269 = select i1 %268, i32 -2147483648, i32 2147483647
  %270 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %253, i32 %267) #13
  %271 = extractvalue { i32, i1 } %270, 1
  %272 = extractvalue { i32, i1 } %270, 0
  %273 = select i1 %271, i32 %269, i32 %272, !prof !2
  %274 = icmp sgt i32 %273, 0
  %275 = select i1 %274, i32 %273, i32 0
  %276 = icmp slt i32 %127, 0
  %277 = select i1 %276, i32 -2147483648, i32 2147483647
  %278 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %127) #13
  %279 = extractvalue { i32, i1 } %278, 1
  %280 = extractvalue { i32, i1 } %278, 0
  %281 = select i1 %279, i32 %277, i32 %280, !prof !2
  %282 = icmp slt i32 %275, %281
  %283 = select i1 %282, i32 %281, i32 %275
  br label %284

284:                                              ; preds = %247, %249
  %285 = phi i32 [ %283, %249 ], [ -64, %247 ]
  br i1 %3, label %357, label %286

286:                                              ; preds = %284
  %287 = load i32, i32* %27, align 8
  %288 = and i32 %287, 2097664
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %294, label %290

290:                                              ; preds = %286
  %291 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = trunc i64 %292 to i32
  br label %318

294:                                              ; preds = %286
  %295 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %2, i64 0, i32 0, i32 1
  %296 = load i8, i8* %295, align 8
  %297 = and i8 %296, 1
  %298 = icmp eq i8 %297, 0
  br i1 %298, label %299, label %316

299:                                              ; preds = %294
  %300 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %301 = bitcast %"class.blink::LayoutObject"* %300 to i1 (%"class.blink::LayoutObject"*, i32)***
  %302 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %301, align 8
  %303 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %302, i64 92
  %304 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %303, align 8
  %305 = call zeroext i1 %304(%"class.blink::LayoutObject"* %300, i32 44) #13
  br i1 %305, label %306, label %316

306:                                              ; preds = %299
  %307 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %14, align 8
  %308 = bitcast %"class.blink::LayoutObject"* %307 to i1 (%"class.blink::LayoutObject"*, i32)***
  %309 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %308, align 8
  %310 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %309, i64 92
  %311 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %310, align 8
  %312 = call zeroext i1 %311(%"class.blink::LayoutObject"* %307, i32 30) #13
  br i1 %312, label %313, label %316

313:                                              ; preds = %306
  %314 = bitcast %"class.blink::NGBlockNode"* %2 to %"class.blink::NGTableNode"*
  %315 = call i32 @_ZNK5blink11NGTableNode22ComputeTableInlineSizeERKNS_17NGConstraintSpaceERKNS_10NGBoxStrutE(%"class.blink::NGTableNode"* %314, %"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %12) #13
  br label %318

316:                                              ; preds = %306, %299, %294
  %317 = call fastcc i32 @_ZN5blink12_GLOBAL__N_136ComputeInlineSizeForFragmentInternalERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeERKNS_10NGBoxStrutEPKNS_11MinMaxSizesE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::NGBlockNode"* dereferenceable(16) %2, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %12, %"struct.blink::MinMaxSizes"* null) #13
  br label %318

318:                                              ; preds = %316, %313, %290
  %319 = phi i32 [ %293, %290 ], [ %315, %313 ], [ %317, %316 ]
  %320 = icmp slt i32 %112, 0
  %321 = select i1 %320, i32 -2147483648, i32 2147483647
  %322 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %106, i32 %112) #13
  %323 = extractvalue { i32, i1 } %322, 1
  %324 = extractvalue { i32, i1 } %322, 0
  %325 = select i1 %323, i32 %321, i32 %324, !prof !2
  %326 = icmp slt i32 %319, %325
  br i1 %326, label %327, label %357

327:                                              ; preds = %318
  %328 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %54) #13
  %329 = extractvalue { i32, i1 } %328, 1
  %330 = extractvalue { i32, i1 } %328, 0
  %331 = select i1 %329, i32 %108, i32 %330, !prof !2
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %357, label %333

333:                                              ; preds = %327
  %334 = load i32, i32* %27, align 8
  %335 = and i32 %334, 512
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %357, !prof !2

337:                                              ; preds = %333
  %338 = load i32, i32* %56, align 8
  %339 = load i32, i32* %57, align 4
  %340 = icmp slt i32 %339, 0
  %341 = select i1 %340, i32 -2147483648, i32 2147483647
  %342 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %338, i32 %339) #13
  %343 = extractvalue { i32, i1 } %342, 1
  %344 = extractvalue { i32, i1 } %342, 0
  %345 = select i1 %343, i32 %341, i32 %344, !prof !2
  %346 = icmp sgt i32 %345, -1
  %347 = select i1 %346, i32 -2147483648, i32 2147483647
  %348 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %319, i32 %345) #13
  %349 = extractvalue { i32, i1 } %348, 1
  %350 = extractvalue { i32, i1 } %348, 0
  %351 = select i1 %349, i32 %347, i32 %350, !prof !2
  %352 = icmp sgt i32 %331, %351
  br i1 %352, label %353, label %357

353:                                              ; preds = %337
  %354 = icmp eq i32 %54, 0
  %355 = select i1 %354, i32 0, i32 %351
  %356 = select i1 %354, i32 %351, i32 %52
  br label %357

357:                                              ; preds = %327, %353, %318, %337, %333, %284
  %358 = phi i32 [ -1431655766, %284 ], [ %319, %333 ], [ %319, %337 ], [ %319, %327 ], [ %319, %318 ], [ %319, %353 ]
  %359 = phi i32 [ %54, %284 ], [ %54, %333 ], [ %54, %337 ], [ %54, %327 ], [ %54, %318 ], [ %355, %353 ]
  %360 = phi i32 [ %52, %284 ], [ %52, %333 ], [ %52, %337 ], [ %52, %327 ], [ %52, %318 ], [ %356, %353 ]
  %361 = phi i8 [ 0, %284 ], [ 1, %333 ], [ 1, %337 ], [ 1, %327 ], [ 1, %318 ], [ 1, %353 ]
  %362 = zext i32 %358 to i64
  %363 = shl nuw i64 %362, 32
  %364 = zext i8 %361 to i64
  %365 = or i64 %363, %364
  %366 = or i64 %365, 2863311360
  %367 = load i32, i32* %27, align 8
  %368 = and i32 %367, 8388608
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %412

370:                                              ; preds = %357
  %371 = and i32 %367, 1
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %382, label %373

373:                                              ; preds = %370
  %374 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %375 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %374, align 8
  %376 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %375, i64 0, i32 6
  %377 = load i16, i16* %376, align 8
  %378 = and i16 %377, 16
  %379 = icmp ne i16 %378, 0
  %380 = icmp ne i32 %285, -64
  %381 = and i1 %380, %379
  br i1 %381, label %412, label %382

382:                                              ; preds = %373, %370
  %383 = and i32 %367, 4194304
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %392, label %385

385:                                              ; preds = %382
  %386 = bitcast %"class.blink::NGConstraintSpace"* %1 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = lshr i64 %387, 32
  %389 = trunc i64 %388 to i32
  %390 = icmp sgt i32 %389, 0
  %391 = select i1 %390, i32 %389, i32 0
  br label %412

392:                                              ; preds = %382
  %393 = and i32 %367, 256
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %407, label %395

395:                                              ; preds = %392
  br i1 %372, label %405, label %396

396:                                              ; preds = %395
  %397 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %1, i64 0, i32 1, i32 0
  %398 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %397, align 8
  %399 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %398, i64 0, i32 6
  %400 = load i16, i16* %399, align 8
  %401 = and i16 %400, 16
  %402 = icmp eq i16 %401, 0
  %403 = icmp ne i32 %285, -64
  %404 = and i1 %403, %402
  br i1 %404, label %412, label %407

405:                                              ; preds = %395
  %406 = icmp eq i32 %285, -64
  br i1 %406, label %407, label %412

407:                                              ; preds = %405, %396, %392
  %408 = and i32 %367, 512
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %412

410:                                              ; preds = %407
  %411 = call fastcc i32 @_ZN5blink12_GLOBAL__N_135ComputeBlockSizeForFragmentInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalISA_EESA_PKSA_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %1, %"class.blink::ComputedStyle"* dereferenceable(104) %17, %"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %12, i32 %285, i64 %366, i32 0) #13
  br label %412

412:                                              ; preds = %357, %373, %385, %396, %405, %407, %410
  %413 = phi i32 [ %285, %357 ], [ %391, %385 ], [ %411, %410 ], [ %285, %407 ], [ %285, %405 ], [ %285, %373 ], [ %285, %396 ]
  %414 = icmp eq i8 %361, 0
  %415 = select i1 %414, i32 -64, i32 %358
  %416 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 %415, i32* %416, align 4
  %417 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 %413, i32* %417, align 4
  %418 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 1
  %419 = bitcast %"struct.blink::NGBoxStrut"* %418 to i64*
  store i64 %19, i64* %419, align 4
  %420 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 1, i32 2
  %421 = bitcast %"class.blink::LayoutUnit"* %420 to i64*
  store i64 %20, i64* %421, align 4
  %422 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 2
  %423 = bitcast %"struct.blink::NGBoxStrut"* %422 to i64*
  %424 = zext i32 %359 to i64
  %425 = shl nuw i64 %424, 32
  %426 = zext i32 %360 to i64
  %427 = or i64 %425, %426
  store i64 %427, i64* %423, align 4
  br label %428

428:                                              ; preds = %412, %234
  %429 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 2, i32 2
  %430 = bitcast %"class.blink::LayoutUnit"* %429 to i64*
  store i64 %51, i64* %430, align 4
  %431 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 3
  %432 = bitcast %"struct.blink::NGBoxStrut"* %431 to i64*
  store i64 %22, i64* %432, align 4
  %433 = getelementptr inbounds %"struct.blink::NGFragmentGeometry", %"struct.blink::NGFragmentGeometry"* %0, i64 0, i32 3, i32 2
  %434 = bitcast %"class.blink::LayoutUnit"* %433 to i64*
  store i64 %26, i64* %434, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #13
  ret void
}

declare i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZN5blink17ShrinkLogicalSizeENS_11LogicalSizeERKNS_10NGBoxStrutE(i64, %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = trunc i64 %0 to i32
  %4 = lshr i64 %0, 32
  %5 = trunc i64 %4 to i32
  %6 = icmp eq i32 %3, -64
  br i1 %6, label %27, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, i32 -2147483648, i32 2147483647
  %14 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %11) #13
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = extractvalue { i32, i1 } %14, 0
  %17 = select i1 %15, i32 %13, i32 %16, !prof !2
  %18 = icmp sgt i32 %17, -1
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %3, i32 %17) #13
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !2
  %24 = icmp sgt i32 %23, 0
  %25 = select i1 %24, i32 %23, i32 0
  %26 = zext i32 %25 to i64
  br label %27

27:                                               ; preds = %2, %7
  %28 = phi i64 [ %26, %7 ], [ 4294967232, %2 ]
  %29 = icmp eq i32 %5, -64
  br i1 %29, label %51, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 2, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 3, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp slt i32 %34, 0
  %36 = select i1 %35, i32 -2147483648, i32 2147483647
  %37 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %34) #13
  %38 = extractvalue { i32, i1 } %37, 1
  %39 = extractvalue { i32, i1 } %37, 0
  %40 = select i1 %38, i32 %36, i32 %39, !prof !2
  %41 = icmp sgt i32 %40, -1
  %42 = select i1 %41, i32 -2147483648, i32 2147483647
  %43 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %5, i32 %40) #13
  %44 = extractvalue { i32, i1 } %43, 1
  %45 = extractvalue { i32, i1 } %43, 0
  %46 = select i1 %44, i32 %42, i32 %45, !prof !2
  %47 = icmp sgt i32 %46, 0
  %48 = select i1 %47, i32 %46, i32 0
  %49 = zext i32 %48 to i64
  %50 = shl nuw nsw i64 %49, 32
  br label %51

51:                                               ; preds = %27, %30
  %52 = phi i64 [ %50, %30 ], [ -274877906944, %27 ]
  %53 = or i64 %52, %28
  ret i64 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink27CalculateChildAvailableSizeERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeENS_11LogicalSizeERKNS_10NGBoxStrutE(%"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::NGBlockNode"* nocapture readonly dereferenceable(16), i64, %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 {
  %5 = trunc i64 %2 to i32
  %6 = lshr i64 %2, 32
  %7 = trunc i64 %6 to i32
  %8 = icmp eq i32 %5, -64
  br i1 %8, label %29, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %3, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %3, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp slt i32 %13, 0
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %13) #13
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !2
  %20 = icmp sgt i32 %19, -1
  %21 = select i1 %20, i32 -2147483648, i32 2147483647
  %22 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %5, i32 %19) #13
  %23 = extractvalue { i32, i1 } %22, 1
  %24 = extractvalue { i32, i1 } %22, 0
  %25 = select i1 %23, i32 %21, i32 %24, !prof !2
  %26 = icmp sgt i32 %25, 0
  %27 = select i1 %26, i32 %25, i32 0
  %28 = zext i32 %27 to i64
  br label %29

29:                                               ; preds = %9, %4
  %30 = phi i64 [ %28, %9 ], [ 4294967232, %4 ]
  %31 = icmp eq i32 %7, -64
  br i1 %31, label %53, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %3, i64 0, i32 2, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %3, i64 0, i32 3, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, 0
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %34, i32 %36) #13
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !2
  %43 = icmp sgt i32 %42, -1
  %44 = select i1 %43, i32 -2147483648, i32 2147483647
  %45 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %7, i32 %42) #13
  %46 = extractvalue { i32, i1 } %45, 1
  %47 = extractvalue { i32, i1 } %45, 0
  %48 = select i1 %46, i32 %44, i32 %47, !prof !2
  %49 = icmp sgt i32 %48, 0
  %50 = select i1 %49, i32 %48, i32 0
  %51 = zext i32 %50 to i64
  %52 = shl nuw nsw i64 %51, 32
  br label %53

53:                                               ; preds = %29, %32
  %54 = phi i64 [ %52, %32 ], [ -274877906944, %29 ]
  %55 = or i64 %54, %30
  %56 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 512
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %97

60:                                               ; preds = %53
  %61 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::LayoutObject"**
  %62 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %62, i64 0, i32 4
  %64 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %63 to i96*
  %65 = load i96, i96* %64, align 4
  %66 = and i96 %65, 16777216
  %67 = icmp eq i96 %66, 0
  br i1 %67, label %100, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %62, i64 0, i32 5, i32 0
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8
  %74 = lshr i160 %73, 32
  %75 = trunc i160 %74 to i32
  %76 = and i32 %75, 31
  switch i32 %76, label %100 [
    i32 1, label %77
    i32 14, label %77
  ]

77:                                               ; preds = %68, %68
  %78 = and i160 %73, 2113929216
  %79 = icmp eq i160 %78, 0
  br i1 %79, label %80, label %100

80:                                               ; preds = %77
  %81 = bitcast %"class.blink::LayoutObject"* %62 to i1 (%"class.blink::LayoutObject"*)***
  %82 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %81, align 8
  %83 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %82, i64 23
  %84 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %83, align 8
  %85 = tail call zeroext i1 %84(%"class.blink::LayoutObject"* %62) #13
  br i1 %85, label %86, label %100

86:                                               ; preds = %80
  %87 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %81, align 8
  %88 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %87, i64 25
  %89 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %88, align 8
  %90 = tail call zeroext i1 %89(%"class.blink::LayoutObject"* %62) #13
  br i1 %90, label %100, label %91

91:                                               ; preds = %86
  %92 = bitcast %"class.blink::LayoutObject"* %62 to i1 (%"class.blink::LayoutObject"*, i32)***
  %93 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %92, align 8
  %94 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %93, i64 92
  %95 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %94, align 8
  %96 = tail call zeroext i1 %95(%"class.blink::LayoutObject"* %62, i32 20) #13
  br i1 %96, label %100, label %97

97:                                               ; preds = %91, %53
  %98 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %99 = load i64, i64* %98, align 8
  br label %100

100:                                              ; preds = %91, %68, %60, %77, %80, %86, %97
  %101 = phi i64 [ %99, %97 ], [ %55, %91 ], [ %55, %86 ], [ %55, %80 ], [ %55, %77 ], [ %55, %60 ], [ %55, %68 ]
  %102 = and i64 %101, -4294967296
  %103 = or i64 %102, %30
  ret i64 %103
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink28CalculateChildPercentageSizeERKNS_17NGConstraintSpaceENS_11NGBlockNodeENS_11LogicalSizeE(%"class.blink::NGConstraintSpace"* nocapture readonly dereferenceable(32), %"class.blink::LayoutBox"*, i64, i64) local_unnamed_addr #2 {
  %5 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 512
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %47

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 16777216
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %81, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8
  %22 = lshr i160 %21, 32
  %23 = trunc i160 %22 to i32
  %24 = and i32 %23, 31
  switch i32 %24, label %81 [
    i32 1, label %25
    i32 14, label %25
  ]

25:                                               ; preds = %16, %16
  %26 = and i160 %21, 2113929216
  %27 = icmp eq i160 %26, 0
  br i1 %27, label %28, label %81

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %30 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, i64 23
  %32 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::LayoutObject"* %10) #13
  br i1 %33, label %34, label %81

34:                                               ; preds = %28
  %35 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %29, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %35, i64 25
  %37 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %36, align 8
  %38 = tail call zeroext i1 %37(%"class.blink::LayoutObject"* %10) #13
  br i1 %38, label %81, label %39

39:                                               ; preds = %34
  %40 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, i64 92
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::LayoutObject"* %10, i32 20) #13
  br i1 %44, label %81, label %45

45:                                               ; preds = %39
  %46 = load i32, i32* %5, align 8
  br label %47

47:                                               ; preds = %45, %4
  %48 = phi i32 [ %46, %45 ], [ %6, %4 ]
  %49 = lshr i32 %48, 26
  %50 = and i32 %49, 3
  switch i32 %50, label %51 [
    i32 0, label %52
    i32 1, label %61
    i32 2, label %55
    i32 3, label %56
  ]

51:                                               ; preds = %47
  unreachable

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  br label %61

55:                                               ; preds = %47
  br label %61

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %58 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %57 to i32**
  %59 = load i32*, i32** %58, align 8
  %60 = load i32, i32* %59, align 8
  br label %61

61:                                               ; preds = %56, %55, %52, %47
  %62 = phi i32 [ %60, %56 ], [ -64, %55 ], [ %54, %52 ], [ 0, %47 ]
  %63 = lshr i32 %48, 28
  %64 = and i32 %63, 3
  switch i32 %64, label %65 [
    i32 0, label %66
    i32 1, label %75
    i32 2, label %69
    i32 3, label %70
  ]

65:                                               ; preds = %61
  unreachable

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %68 = load i32, i32* %67, align 4
  br label %75

69:                                               ; preds = %61
  br label %75

70:                                               ; preds = %61
  %71 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %72 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %71, align 8
  %73 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %72, i64 0, i32 0, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  br label %75

75:                                               ; preds = %61, %66, %69, %70
  %76 = phi i32 [ %74, %70 ], [ -64, %69 ], [ %68, %66 ], [ 0, %61 ]
  %77 = zext i32 %76 to i64
  %78 = shl nuw i64 %77, 32
  %79 = zext i32 %62 to i64
  %80 = or i64 %78, %79
  br label %134

81:                                               ; preds = %39, %16, %9, %25, %28, %34
  %82 = load i32, i32* %5, align 8
  %83 = and i32 %82, 16777216
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %134

85:                                               ; preds = %81
  %86 = lshr i32 %82, 28
  %87 = and i32 %86, 3
  switch i32 %87, label %88 [
    i32 0, label %89
    i32 1, label %98
    i32 2, label %92
    i32 3, label %93
  ]

88:                                               ; preds = %85
  unreachable

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  br label %98

92:                                               ; preds = %85
  br label %98

93:                                               ; preds = %85
  %94 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %95 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %94, align 8
  %96 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %95, i64 0, i32 0, i32 1, i32 0
  %97 = load i32, i32* %96, align 4
  br label %98

98:                                               ; preds = %85, %89, %92, %93
  %99 = phi i32 [ %97, %93 ], [ -64, %92 ], [ %91, %89 ], [ 0, %85 ]
  %100 = lshr i64 %3, 32
  %101 = trunc i64 %100 to i32
  %102 = and i32 %82, 8388608
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %128

104:                                              ; preds = %98
  %105 = and i32 %82, 4194560
  %106 = icmp eq i32 %105, 256
  br i1 %106, label %107, label %111

107:                                              ; preds = %104
  %108 = and i32 %82, 2048
  %109 = icmp eq i32 %108, 0
  %110 = select i1 %109, i32 -64, i32 0
  br label %128

111:                                              ; preds = %104
  %112 = icmp eq i32 %101, -64
  br i1 %112, label %113, label %128

113:                                              ; preds = %111
  %114 = icmp eq %"class.blink::LayoutBox"* %1, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %113
  %116 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %117 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %116, align 8
  %118 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %117, i64 23
  %119 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %118, align 8
  %120 = tail call zeroext i1 %119(%"class.blink::LayoutObject"* %10) #13
  %121 = and i64 %2, 1
  %122 = icmp eq i64 %121, 0
  %123 = and i1 %122, %120
  br i1 %123, label %124, label %128

124:                                              ; preds = %115
  %125 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlock"*
  %126 = tail call zeroext i1 @_ZN5blink14LayoutBoxUtils46SkipContainingBlockForPercentHeightCalculationEPKNS_11LayoutBlockE(%"class.blink::LayoutBlock"* nonnull %125) #13
  %127 = select i1 %126, i32 %99, i32 -64
  br label %128

128:                                              ; preds = %98, %107, %111, %113, %115, %124
  %129 = phi i32 [ -64, %98 ], [ %101, %111 ], [ -64, %115 ], [ -64, %113 ], [ %110, %107 ], [ %127, %124 ]
  %130 = zext i32 %129 to i64
  %131 = shl nuw i64 %130, 32
  %132 = and i64 %3, 4294967295
  %133 = or i64 %131, %132
  br label %134

134:                                              ; preds = %81, %128, %75
  %135 = phi i64 [ %80, %75 ], [ %133, %128 ], [ %3, %81 ]
  ret i64 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink36CalculateReplacedChildPercentageSizeERKNS_17NGConstraintSpaceENS_11NGBlockNodeENS_11LogicalSizeERKNS_10NGBoxStrutES7_(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::LayoutBox"*, i64, i64, %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 {
  %7 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 512
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %49

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 16777216
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %79, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = lshr i160 %23, 32
  %25 = trunc i160 %24 to i32
  %26 = and i32 %25, 31
  switch i32 %26, label %79 [
    i32 1, label %27
    i32 14, label %27
  ]

27:                                               ; preds = %18, %18
  %28 = and i160 %23, 2113929216
  %29 = icmp eq i160 %28, 0
  br i1 %29, label %30, label %79

30:                                               ; preds = %27
  %31 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %32 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, i64 23
  %34 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* %12) #13
  br i1 %35, label %36, label %79

36:                                               ; preds = %30
  %37 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %31, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %37, i64 25
  %39 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* %12) #13
  br i1 %40, label %79, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* %12, i32 20) #13
  br i1 %46, label %79, label %47

47:                                               ; preds = %41
  %48 = load i32, i32* %7, align 8
  br label %49

49:                                               ; preds = %47, %6
  %50 = phi i32 [ %48, %47 ], [ %8, %6 ]
  %51 = lshr i32 %50, 26
  %52 = and i32 %51, 3
  switch i32 %52, label %53 [
    i32 0, label %54
    i32 1, label %63
    i32 2, label %57
    i32 3, label %58
  ]

53:                                               ; preds = %49
  unreachable

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  br label %63

57:                                               ; preds = %49
  br label %63

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %60 = bitcast %"struct.blink::NGConstraintSpace::RareData"** %59 to i32**
  %61 = load i32*, i32** %60, align 8
  %62 = load i32, i32* %61, align 8
  br label %63

63:                                               ; preds = %58, %57, %54, %49
  %64 = phi i32 [ %62, %58 ], [ -64, %57 ], [ %56, %54 ], [ 0, %49 ]
  %65 = lshr i32 %50, 30
  switch i32 %65, label %75 [
    i32 0, label %66
    i32 1, label %76
    i32 2, label %69
    i32 3, label %70
  ]

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %68 = load i32, i32* %67, align 4
  br label %76

69:                                               ; preds = %63
  br label %76

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %72 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %71, align 8
  %73 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %72, i64 0, i32 1, i32 0
  %74 = load i32, i32* %73, align 8
  br label %76

75:                                               ; preds = %63
  unreachable

76:                                               ; preds = %63, %66, %69, %70
  %77 = phi i32 [ %74, %70 ], [ -64, %69 ], [ %68, %66 ], [ 0, %63 ]
  %78 = zext i32 %64 to i64
  br label %161

79:                                               ; preds = %41, %18, %11, %27, %30, %36
  %80 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %81 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %80, align 8
  %82 = load i32, i32* %7, align 8
  %83 = and i32 %82, 256
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %119, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %81, i64 0, i32 0, i32 9
  %87 = bitcast [20 x i8]* %86 to i160*
  %88 = load i160, i160* %87, align 8
  %89 = and i160 %88, 15211807202738752817960438464512
  %90 = icmp eq i160 %89, 0
  %91 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %81, i64 0, i32 0, i32 5, i32 0, i32 0
  %92 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %92, i64 0, i32 3
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %92, i64 0, i32 8
  %95 = select i1 %90, %"class.blink::Length"* %93, %"class.blink::Length"* %94
  %96 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %95, i64 0, i32 2
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 2
  br i1 %98, label %99, label %119

99:                                               ; preds = %85
  %100 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_135ComputeBlockSizeForFragmentInternalERKNS_17NGConstraintSpaceERKNS_13ComputedStyleERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalISA_EESA_PKSA_(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %81, %"struct.blink::NGBoxStrut"* dereferenceable(16) %5, i32 -64, i64 0, i32 0)
  %101 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %4, i64 0, i32 2, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %4, i64 0, i32 3, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp slt i32 %104, 0
  %106 = select i1 %105, i32 -2147483648, i32 2147483647
  %107 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %102, i32 %104) #13
  %108 = extractvalue { i32, i1 } %107, 1
  %109 = extractvalue { i32, i1 } %107, 0
  %110 = select i1 %108, i32 %106, i32 %109, !prof !2
  %111 = icmp sgt i32 %110, -1
  %112 = select i1 %111, i32 -2147483648, i32 2147483647
  %113 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %100, i32 %110) #13
  %114 = extractvalue { i32, i1 } %113, 1
  %115 = extractvalue { i32, i1 } %113, 0
  %116 = select i1 %114, i32 %112, i32 %115, !prof !2
  %117 = icmp sgt i32 %116, 0
  %118 = select i1 %117, i32 %116, i32 0
  br label %161

119:                                              ; preds = %79, %85
  %120 = lshr i32 %82, 30
  switch i32 %120, label %130 [
    i32 0, label %121
    i32 1, label %131
    i32 2, label %124
    i32 3, label %125
  ]

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 0, i32 1, i32 0
  %123 = load i32, i32* %122, align 4
  br label %131

124:                                              ; preds = %119
  br label %131

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 1, i32 0
  %127 = load %"struct.blink::NGConstraintSpace::RareData"*, %"struct.blink::NGConstraintSpace::RareData"** %126, align 8
  %128 = getelementptr inbounds %"struct.blink::NGConstraintSpace::RareData", %"struct.blink::NGConstraintSpace::RareData"* %127, i64 0, i32 1, i32 0
  %129 = load i32, i32* %128, align 8
  br label %131

130:                                              ; preds = %119
  unreachable

131:                                              ; preds = %119, %121, %124, %125
  %132 = phi i32 [ %129, %125 ], [ -64, %124 ], [ %123, %121 ], [ 0, %119 ]
  %133 = lshr i64 %3, 32
  %134 = trunc i64 %133 to i32
  %135 = and i32 %82, 8388608
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %161

137:                                              ; preds = %131
  %138 = and i32 %82, 4194560
  %139 = icmp eq i32 %138, 256
  br i1 %139, label %140, label %144

140:                                              ; preds = %137
  %141 = and i32 %82, 2048
  %142 = icmp eq i32 %141, 0
  %143 = select i1 %142, i32 -64, i32 0
  br label %161

144:                                              ; preds = %137
  %145 = icmp eq i32 %134, -64
  br i1 %145, label %146, label %161

146:                                              ; preds = %144
  %147 = icmp eq %"class.blink::LayoutBox"* %1, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %146
  %149 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %150 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %149, align 8
  %151 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %150, i64 23
  %152 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %151, align 8
  %153 = tail call zeroext i1 %152(%"class.blink::LayoutObject"* %12) #13
  %154 = and i64 %2, 1
  %155 = icmp eq i64 %154, 0
  %156 = and i1 %155, %153
  br i1 %156, label %157, label %161

157:                                              ; preds = %148
  %158 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlock"*
  %159 = tail call zeroext i1 @_ZN5blink14LayoutBoxUtils46SkipContainingBlockForPercentHeightCalculationEPKNS_11LayoutBlockE(%"class.blink::LayoutBlock"* nonnull %158) #13
  %160 = select i1 %159, i32 %132, i32 -64
  br label %161

161:                                              ; preds = %157, %148, %146, %144, %140, %131, %99, %76
  %162 = phi i64 [ %78, %76 ], [ %3, %99 ], [ %3, %131 ], [ %3, %140 ], [ %3, %144 ], [ %3, %146 ], [ %3, %148 ], [ %3, %157 ]
  %163 = phi i32 [ %77, %76 ], [ %118, %99 ], [ -64, %131 ], [ %143, %140 ], [ %134, %144 ], [ -64, %146 ], [ -64, %148 ], [ %160, %157 ]
  %164 = zext i32 %163 to i64
  %165 = shl nuw i64 %164, 32
  %166 = and i64 %162, 4294967295
  %167 = or i64 %165, %166
  ret i64 %167
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink23ClampIntrinsicBlockSizeERKNS_17NGConstraintSpaceERKNS_11NGBlockNodeERKNS_10NGBoxStrutENS_10LayoutUnitEN4absl8optionalIS9_EE(%"class.blink::NGConstraintSpace"* dereferenceable(32), %"class.blink::NGBlockNode"* dereferenceable(16), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), i32, i64) local_unnamed_addr #2 {
  %6 = trunc i64 %4 to i8
  %7 = lshr i64 %4, 32
  %8 = trunc i64 %7 to i32
  %9 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::NGLayoutInputNode"*
  %10 = bitcast %"class.blink::NGBlockNode"* %1 to %"class.blink::LayoutObject"**
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = bitcast %"class.blink::NGConstraintSpace"* %0 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = tail call zeroext i1 @_ZNK5blink11NGBlockNode24IsQuirkyAndFillsViewportEv(%"class.blink::NGBlockNode"* %1)
  br i1 %16, label %17, label %61

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 0
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %24, i64 0, i32 3
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %24, i64 0, i32 8
  %27 = select i1 %22, %"class.blink::Length"* %25, %"class.blink::Length"* %26
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 0
  %31 = and i64 %15, -4294967296
  %32 = icmp ne i64 %31, -274877906944
  %33 = and i1 %32, %30
  br i1 %33, label %34, label %61

34:                                               ; preds = %17
  %35 = tail call { i64, i64 } @_ZN5blink21ComputeMarginsForSelfERKNS_17NGConstraintSpaceERKNS_13ComputedStyleE(%"class.blink::NGConstraintSpace"* dereferenceable(32) %0, %"class.blink::ComputedStyle"* dereferenceable(104) %13)
  %36 = extractvalue { i64, i64 } %35, 1
  %37 = trunc i64 %36 to i32
  %38 = lshr i64 %36, 32
  %39 = trunc i64 %38 to i32
  %40 = icmp slt i32 %39, 0
  %41 = select i1 %40, i32 -2147483648, i32 2147483647
  %42 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %37, i32 %39) #13
  %43 = extractvalue { i32, i1 } %42, 1
  %44 = extractvalue { i32, i1 } %42, 0
  %45 = select i1 %43, i32 %41, i32 %44, !prof !2
  %46 = icmp eq i8 %6, 0
  %47 = select i1 %46, i32 %45, i32 %8
  %48 = load i64, i64* %14, align 8
  %49 = lshr i64 %48, 32
  %50 = trunc i64 %49 to i32
  %51 = icmp sgt i32 %47, -1
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %50, i32 %47) #13
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !2
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  %59 = icmp sgt i32 %58, %3
  %60 = select i1 %59, i32 %58, i32 %3
  br label %61

61:                                               ; preds = %5, %17, %34
  %62 = phi i32 [ %3, %5 ], [ %3, %17 ], [ %60, %34 ]
  %63 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %1, i64 0, i32 0, i32 0
  %64 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %64, i64 0, i32 0, i32 0, i32 5, i32 0
  %66 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %66, i64 0, i32 0, i32 9
  %68 = bitcast [20 x i8]* %67 to i160*
  %69 = load i160, i160* %68, align 8
  %70 = and i160 %69, 15211807202738752817960438464512
  %71 = icmp eq i160 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %61
  %73 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %64) #13
  br i1 %73, label %76, label %109

74:                                               ; preds = %61
  %75 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %64) #13
  br i1 %75, label %76, label %109

76:                                               ; preds = %74, %72
  %77 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %63, align 8
  %78 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %77, i64 0, i32 0, i32 0, i32 5, i32 0
  %79 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %79, i64 0, i32 0, i32 9
  %81 = bitcast [20 x i8]* %80 to i160*
  %82 = load i160, i160* %81, align 8
  %83 = and i160 %82, 15211807202738752817960438464512
  %84 = icmp eq i160 %83, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %76
  %86 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %77) #13
  br label %89

87:                                               ; preds = %76
  %88 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %77) #13
  br label %89

89:                                               ; preds = %85, %87
  %90 = phi i32 [ %86, %85 ], [ %88, %87 ]
  %91 = icmp eq i32 %90, -64
  br i1 %91, label %109, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = icmp slt i32 %96, 0
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %94, i32 %96) #13
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !2
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %90, i32 %102) #13
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  br label %210

109:                                              ; preds = %89, %74, %72
  %110 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %63, align 8
  %111 = tail call i32 @_ZNK5blink9LayoutBox32DefaultIntrinsicContentBlockSizeEv(%"class.blink::LayoutBox"* %110) #13
  %112 = icmp eq i32 %111, -64
  br i1 %112, label %197, label %113

113:                                              ; preds = %109
  %114 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %115 = bitcast %"class.blink::LayoutObject"* %114 to i1 (%"class.blink::LayoutObject"*, i32)***
  %116 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %115, align 8
  %117 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %116, i64 92
  %118 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, align 8
  %119 = tail call zeroext i1 %118(%"class.blink::LayoutObject"* %114, i32 52) #13
  br i1 %119, label %125, label %120

120:                                              ; preds = %113
  %121 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %115, align 8
  %122 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %121, i64 92
  %123 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %122, align 8
  %124 = tail call zeroext i1 %123(%"class.blink::LayoutObject"* %114, i32 34) #13
  br i1 %124, label %125, label %180

125:                                              ; preds = %113, %120
  %126 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = icmp slt i32 %129, 0
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %127, i32 %129) #13
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !2
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %135) #13
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !2
  %142 = getelementptr inbounds %"class.blink::NGConstraintSpace", %"class.blink::NGConstraintSpace"* %0, i64 0, i32 3, i32 0
  %143 = load i32, i32* %142, align 8
  %144 = and i32 %143, 512
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %163

146:                                              ; preds = %125
  %147 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %148 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %147, i64 0, i32 5, i32 0
  %149 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %149, i64 0, i32 0, i32 9
  %151 = bitcast [20 x i8]* %150 to i160*
  %152 = load i160, i160* %151, align 8
  %153 = lshr i160 %152, 74
  %154 = trunc i160 %153 to i32
  %155 = and i32 %154, 7
  %156 = bitcast %"class.blink::LayoutObject"* %147 to %"class.blink::LayoutBox"*
  switch i32 %155, label %160 [
    i32 5, label %157
    i32 2, label %157
  ]

157:                                              ; preds = %146, %146
  %158 = and i160 %152, 270215977642229760
  %159 = icmp eq i160 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %157, %146
  %161 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %156) #13
  %162 = extractvalue { i64, i64 } %161, 1
  br label %163

163:                                              ; preds = %125, %157, %160
  %164 = phi i64 [ 0, %125 ], [ %162, %160 ], [ 0, %157 ]
  %165 = trunc i64 %164 to i32
  %166 = lshr i64 %164, 32
  %167 = trunc i64 %166 to i32
  %168 = icmp slt i32 %167, 0
  %169 = select i1 %168, i32 -2147483648, i32 2147483647
  %170 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %165, i32 %167) #13
  %171 = extractvalue { i32, i1 } %170, 1
  %172 = extractvalue { i32, i1 } %170, 0
  %173 = select i1 %171, i32 %169, i32 %172, !prof !2
  %174 = icmp sgt i32 %173, -1
  %175 = select i1 %174, i32 -2147483648, i32 2147483647
  %176 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %141, i32 %173) #13
  %177 = extractvalue { i32, i1 } %176, 1
  %178 = extractvalue { i32, i1 } %176, 0
  %179 = select i1 %177, i32 %175, i32 %178, !prof !2
  br label %210

180:                                              ; preds = %120
  %181 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = icmp slt i32 %184, 0
  %186 = select i1 %185, i32 -2147483648, i32 2147483647
  %187 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %182, i32 %184) #13
  %188 = extractvalue { i32, i1 } %187, 1
  %189 = extractvalue { i32, i1 } %187, 0
  %190 = select i1 %188, i32 %186, i32 %189, !prof !2
  %191 = icmp slt i32 %190, 0
  %192 = select i1 %191, i32 -2147483648, i32 2147483647
  %193 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %190) #13
  %194 = extractvalue { i32, i1 } %193, 1
  %195 = extractvalue { i32, i1 } %193, 0
  %196 = select i1 %194, i32 %192, i32 %195, !prof !2
  br label %210

197:                                              ; preds = %109
  %198 = tail call zeroext i1 @_ZNK5blink17NGLayoutInputNode31ShouldApplyBlockSizeContainmentEv(%"class.blink::NGLayoutInputNode"* %9)
  br i1 %198, label %199, label %210

199:                                              ; preds = %197
  %200 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 2, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %2, i64 0, i32 3, i32 0
  %203 = load i32, i32* %202, align 4
  %204 = icmp slt i32 %203, 0
  %205 = select i1 %204, i32 -2147483648, i32 2147483647
  %206 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %201, i32 %203) #13
  %207 = extractvalue { i32, i1 } %206, 1
  %208 = extractvalue { i32, i1 } %206, 0
  %209 = select i1 %207, i32 %205, i32 %208, !prof !2
  br label %210

210:                                              ; preds = %197, %180, %163, %199, %92
  %211 = phi i32 [ %108, %92 ], [ %209, %199 ], [ %196, %180 ], [ %179, %163 ], [ %62, %197 ]
  ret i32 %211
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17NGLayoutInputNode31ShouldApplyBlockSizeContainmentEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.blink::NGLayoutInputNode"* %0 to %"class.blink::LayoutObject"**
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 45
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %64, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 1207959552
  %21 = icmp eq i96 %20, 134217728
  br i1 %21, label %64, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*, i32)***
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, i64 92
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::LayoutObject"* %3, i32 43) #13
  br i1 %27, label %64, label %28

28:                                               ; preds = %22
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %3, i32 46) #13
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* %3, i32 48) #13
  br i1 %37, label %53, label %38

38:                                               ; preds = %33
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, i64 92
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %3, i32 45) #13
  br i1 %42, label %53, label %43

43:                                               ; preds = %38
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, i64 92
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::LayoutObject"* %3, i32 49) #13
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, i64 92
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::LayoutObject"* %3, i32 50) #13
  br i1 %52, label %53, label %58

53:                                               ; preds = %48, %43, %38, %33, %28
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, i64 92
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::LayoutObject"* %3, i32 45) #13
  br i1 %57, label %58, label %64

58:                                               ; preds = %53, %48
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, i64 92
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::LayoutObject"* %3, i32 44) #13
  %63 = xor i1 %62, true
  br label %64

64:                                               ; preds = %1, %16, %22, %53, %58
  %65 = phi i1 [ false, %53 ], [ false, %22 ], [ %63, %58 ], [ false, %16 ], [ false, %1 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink36CalculateMinMaxSizesIgnoringChildrenERKNS_11NGBlockNodeERKNS_10NGBoxStrutE(%"class.blink::NGBlockNode"* dereferenceable(16), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 {
  %3 = alloca { i64, i64 }, align 8
  %4 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 1, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 0
  %9 = select i1 %8, i32 -2147483648, i32 2147483647
  %10 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %5, i32 %7) #13
  %11 = extractvalue { i32, i1 } %10, 1
  %12 = extractvalue { i32, i1 } %10, 0
  %13 = select i1 %11, i32 %9, i32 %12, !prof !2
  %14 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::NGLayoutInputNode"*
  %15 = getelementptr inbounds %"class.blink::NGBlockNode", %"class.blink::NGBlockNode"* %0, i64 0, i32 0, i32 0
  %16 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %16, i64 0, i32 0, i32 0, i32 5, i32 0
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8
  %22 = and i160 %21, 15211807202738752817960438464512
  %23 = icmp eq i160 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %2
  %25 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %16) #13
  br i1 %25, label %28, label %58

26:                                               ; preds = %2
  %27 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %16) #13
  br i1 %27, label %28, label %58

28:                                               ; preds = %26, %24
  %29 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %15, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %29, i64 0, i32 0, i32 0, i32 5, i32 0
  %31 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %31, i64 0, i32 0, i32 9
  %33 = bitcast [20 x i8]* %32 to i160*
  %34 = load i160, i160* %33, align 8
  %35 = and i160 %34, 15211807202738752817960438464512
  %36 = icmp eq i160 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %28
  %38 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %29) #13
  br label %41

39:                                               ; preds = %28
  %40 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %29) #13
  br label %41

41:                                               ; preds = %37, %39
  %42 = phi i32 [ %38, %37 ], [ %40, %39 ]
  %43 = icmp eq i32 %42, -64
  br i1 %43, label %58, label %44

44:                                               ; preds = %41
  %45 = icmp slt i32 %42, 0
  %46 = select i1 %45, i32 -2147483648, i32 2147483647
  %47 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %42) #13
  %48 = extractvalue { i32, i1 } %47, 1
  %49 = extractvalue { i32, i1 } %47, 0
  %50 = select i1 %48, i32 %46, i32 %49, !prof !2
  %51 = zext i32 %50 to i64
  %52 = shl nuw i64 %51, 32
  %53 = or i64 %52, %51
  %54 = bitcast { i64, i64 }* %3 to i8*
  store i8 1, i8* %54, align 8
  %55 = getelementptr inbounds i8, i8* %54, i64 4
  %56 = bitcast i8* %55 to i64*
  store i64 %53, i64* %56, align 4
  %57 = getelementptr inbounds i8, i8* %54, i64 12
  store i8 0, i8* %57, align 4
  br label %140

58:                                               ; preds = %41, %26, %24
  %59 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %15, align 8
  %60 = tail call i32 @_ZNK5blink9LayoutBox33DefaultIntrinsicContentInlineSizeEv(%"class.blink::LayoutBox"* %59) #13
  %61 = icmp eq i32 %60, -64
  br i1 %61, label %124, label %62

62:                                               ; preds = %58
  %63 = icmp slt i32 %60, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %60) #13
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !2
  %69 = bitcast %"class.blink::NGBlockNode"* %0 to %"class.blink::LayoutObject"**
  %70 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %71 = bitcast %"class.blink::LayoutObject"* %70 to i1 (%"class.blink::LayoutObject"*, i32)***
  %72 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %71, align 8
  %73 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %72, i64 92
  %74 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %73, align 8
  %75 = tail call zeroext i1 %74(%"class.blink::LayoutObject"* %70, i32 52) #13
  br i1 %75, label %81, label %76

76:                                               ; preds = %62
  %77 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %71, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %77, i64 92
  %79 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %78, align 8
  %80 = tail call zeroext i1 %79(%"class.blink::LayoutObject"* %70, i32 34) #13
  br i1 %80, label %81, label %115

81:                                               ; preds = %62, %76
  %82 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %69, align 8
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %82, i64 0, i32 5, i32 0
  %84 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %84, i64 0, i32 0, i32 9
  %86 = bitcast [20 x i8]* %85 to i160*
  %87 = load i160, i160* %86, align 8
  %88 = lshr i160 %87, 74
  %89 = trunc i160 %88 to i32
  %90 = and i32 %89, 7
  %91 = bitcast %"class.blink::LayoutObject"* %82 to %"class.blink::LayoutBox"*
  switch i32 %90, label %95 [
    i32 5, label %92
    i32 2, label %92
  ]

92:                                               ; preds = %81, %81
  %93 = and i160 %87, 270215977642229760
  %94 = icmp eq i160 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %92, %81
  %96 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %91) #13
  %97 = extractvalue { i64, i64 } %96, 0
  br label %98

98:                                               ; preds = %92, %95
  %99 = phi i64 [ %97, %95 ], [ 0, %92 ]
  %100 = trunc i64 %99 to i32
  %101 = lshr i64 %99, 32
  %102 = trunc i64 %101 to i32
  %103 = icmp slt i32 %102, 0
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %100, i32 %102) #13
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !2
  %109 = icmp sgt i32 %108, -1
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %68, i32 %108) #13
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113, !prof !2
  br label %115

115:                                              ; preds = %98, %76
  %116 = phi i32 [ %114, %98 ], [ %68, %76 ]
  %117 = zext i32 %116 to i64
  %118 = shl nuw i64 %117, 32
  %119 = or i64 %118, %117
  %120 = bitcast { i64, i64 }* %3 to i8*
  store i8 1, i8* %120, align 8
  %121 = getelementptr inbounds i8, i8* %120, i64 4
  %122 = bitcast i8* %121 to i64*
  store i64 %119, i64* %122, align 4
  %123 = getelementptr inbounds i8, i8* %120, i64 12
  store i8 0, i8* %123, align 4
  br label %140

124:                                              ; preds = %58
  %125 = tail call zeroext i1 @_ZNK5blink17NGLayoutInputNode32ShouldApplyInlineSizeContainmentEv(%"class.blink::NGLayoutInputNode"* %14)
  br i1 %125, label %130, label %126

126:                                              ; preds = %124
  %127 = tail call { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"* %0) #13
  %128 = extractvalue { %"class.blink::LayoutBox"*, i64 } %127, 0
  %129 = icmp eq %"class.blink::LayoutBox"* %128, null
  br i1 %129, label %130, label %138

130:                                              ; preds = %126, %124
  %131 = zext i32 %13 to i64
  %132 = shl nuw i64 %131, 32
  %133 = or i64 %132, %131
  %134 = bitcast { i64, i64 }* %3 to i8*
  store i8 1, i8* %134, align 8
  %135 = getelementptr inbounds i8, i8* %134, i64 4
  %136 = bitcast i8* %135 to i64*
  store i64 %133, i64* %136, align 4
  %137 = getelementptr inbounds i8, i8* %134, i64 12
  store i8 0, i8* %137, align 4
  br label %140

138:                                              ; preds = %126
  %139 = bitcast { i64, i64 }* %3 to i8*
  store i8 0, i8* %139, align 8
  br label %140

140:                                              ; preds = %115, %138, %130, %44
  %141 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 0
  %142 = load i64, i64* %141, align 8
  %143 = insertvalue { i64, i64 } undef, i64 %142, 0
  %144 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i64 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = insertvalue { i64, i64 } %143, i64 %145, 1
  ret { i64, i64 } %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink17NGLayoutInputNode32ShouldApplyInlineSizeContainmentEv(%"class.blink::NGLayoutInputNode"*) local_unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.blink::NGLayoutInputNode"* %0 to %"class.blink::LayoutObject"**
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %7, i64 0, i32 2, i32 0, i32 0
  %9 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %11, i64 0, i32 45
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 16
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %64, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 1207959552
  %21 = icmp eq i96 %20, 134217728
  br i1 %21, label %64, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*, i32)***
  %24 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, i64 92
  %26 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.blink::LayoutObject"* %3, i32 43) #13
  br i1 %27, label %64, label %28

28:                                               ; preds = %22
  %29 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %30 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, i64 92
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, align 8
  %32 = tail call zeroext i1 %31(%"class.blink::LayoutObject"* %3, i32 46) #13
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* %3, i32 48) #13
  br i1 %37, label %53, label %38

38:                                               ; preds = %33
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, i64 92
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* %3, i32 45) #13
  br i1 %42, label %53, label %43

43:                                               ; preds = %38
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, i64 92
  %46 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, align 8
  %47 = tail call zeroext i1 %46(%"class.blink::LayoutObject"* %3, i32 49) #13
  br i1 %47, label %53, label %48

48:                                               ; preds = %43
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, i64 92
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::LayoutObject"* %3, i32 50) #13
  br i1 %52, label %53, label %58

53:                                               ; preds = %48, %43, %38, %33, %28
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %54, i64 92
  %56 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::LayoutObject"* %3, i32 45) #13
  br i1 %57, label %58, label %64

58:                                               ; preds = %53, %48
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %23, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, i64 92
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, align 8
  %62 = tail call zeroext i1 %61(%"class.blink::LayoutObject"* %3, i32 44) #13
  %63 = xor i1 %62, true
  br label %64

64:                                               ; preds = %1, %16, %22, %53, %58
  %65 = phi i1 [ false, %53 ], [ false, %22 ], [ %63, %58 ], [ false, %16 ], [ false, %1 ]
  ret i1 %65
}

declare { %"class.blink::LayoutBox"*, i64 } @_ZNK5blink11NGBlockNode10FirstChildEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AddScrollbarFreezeERKNS_10NGBoxStrutES2_NS_20WritingDirectionModeEPbS4_(%"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), %"struct.blink::NGBoxStrut"* nocapture readonly dereferenceable(16), i16, i8* nocapture, i8* nocapture) local_unnamed_addr #2 {
  %6 = trunc i16 %2 to i8
  %7 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp ugt i16 %2, 255
  %12 = select i1 %11, i32 %10, i32 %8
  %13 = select i1 %11, i32 %8, i32 %10
  switch i8 %6, label %72 [
    i8 0, label %14
    i8 1, label %33
    i8 3, label %33
    i8 2, label %42
    i8 4, label %57
  ]

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 2, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 3, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = zext i32 %12 to i64
  %21 = shl nuw i64 %20, 32
  %22 = or i64 %21, %19
  %23 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 1, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = select i1 %11, i32 %26, i32 %24
  %28 = select i1 %11, i32 %24, i32 %26
  %29 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 2, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 3, i32 0
  %32 = load i32, i32* %31, align 4
  br label %107

33:                                               ; preds = %5, %5
  %34 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 2, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 3, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %13 to i64
  %39 = zext i32 %37 to i64
  %40 = shl nuw i64 %39, 32
  %41 = or i64 %40, %38
  br label %72

42:                                               ; preds = %5
  %43 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 3, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 2, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %13 to i64
  %48 = zext i32 %46 to i64
  %49 = shl nuw i64 %48, 32
  %50 = or i64 %49, %47
  %51 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 1, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = select i1 %11, i32 %54, i32 %52
  %56 = select i1 %11, i32 %52, i32 %54
  br label %87

57:                                               ; preds = %5
  %58 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 3, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %0, i64 0, i32 2, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %12 to i64
  %63 = zext i32 %61 to i64
  %64 = shl nuw i64 %63, 32
  %65 = or i64 %64, %62
  %66 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 1, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = select i1 %11, i32 %69, i32 %67
  %71 = select i1 %11, i32 %67, i32 %69
  br label %97

72:                                               ; preds = %5, %33
  %73 = phi i64 [ %41, %33 ], [ 0, %5 ]
  %74 = phi i32 [ %35, %33 ], [ 0, %5 ]
  %75 = phi i32 [ %12, %33 ], [ 0, %5 ]
  %76 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 1, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = select i1 %11, i32 %79, i32 %77
  %81 = select i1 %11, i32 %77, i32 %79
  switch i8 %6, label %122 [
    i8 4, label %97
    i8 1, label %82
    i8 3, label %82
    i8 2, label %87
  ]

82:                                               ; preds = %72, %72
  %83 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 2, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 3, i32 0
  %86 = load i32, i32* %85, align 4
  br label %107

87:                                               ; preds = %42, %72
  %88 = phi i32 [ %56, %42 ], [ %81, %72 ]
  %89 = phi i32 [ %55, %42 ], [ %80, %72 ]
  %90 = phi i32 [ %12, %42 ], [ %75, %72 ]
  %91 = phi i32 [ %44, %42 ], [ %74, %72 ]
  %92 = phi i64 [ %50, %42 ], [ %73, %72 ]
  %93 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 3, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 2, i32 0
  %96 = load i32, i32* %95, align 4
  br label %107

97:                                               ; preds = %72, %57
  %98 = phi i32 [ %71, %57 ], [ %81, %72 ]
  %99 = phi i32 [ %70, %57 ], [ %80, %72 ]
  %100 = phi i32 [ %13, %57 ], [ %75, %72 ]
  %101 = phi i32 [ %59, %57 ], [ %74, %72 ]
  %102 = phi i64 [ %65, %57 ], [ %73, %72 ]
  %103 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 3, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %1, i64 0, i32 2, i32 0
  %106 = load i32, i32* %105, align 4
  br label %107

107:                                              ; preds = %14, %82, %87, %97
  %108 = phi i32 [ %32, %14 ], [ %81, %82 ], [ %88, %87 ], [ %99, %97 ]
  %109 = phi i32 [ %27, %14 ], [ %86, %82 ], [ %96, %87 ], [ %106, %97 ]
  %110 = phi i32 [ %16, %14 ], [ %75, %82 ], [ %90, %87 ], [ %100, %97 ]
  %111 = phi i32 [ %13, %14 ], [ %74, %82 ], [ %91, %87 ], [ %101, %97 ]
  %112 = phi i64 [ %22, %14 ], [ %73, %82 ], [ %92, %87 ], [ %102, %97 ]
  %113 = phi i32 [ %28, %14 ], [ %84, %82 ], [ %94, %87 ], [ %104, %97 ]
  %114 = phi i32 [ %30, %14 ], [ %80, %82 ], [ %89, %87 ], [ %98, %97 ]
  %115 = zext i32 %108 to i64
  %116 = zext i32 %109 to i64
  %117 = shl nuw i64 %116, 32
  %118 = or i64 %117, %115
  %119 = icmp eq i32 %110, 0
  %120 = icmp ne i32 %114, 0
  %121 = and i1 %119, %120
  br i1 %121, label %133, label %122

122:                                              ; preds = %72, %107
  %123 = phi i32 [ %113, %107 ], [ 0, %72 ]
  %124 = phi i64 [ %118, %107 ], [ 0, %72 ]
  %125 = phi i64 [ %112, %107 ], [ %73, %72 ]
  %126 = phi i32 [ %111, %107 ], [ %74, %72 ]
  %127 = trunc i64 %125 to i32
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %133

129:                                              ; preds = %122
  %130 = trunc i64 %124 to i32
  %131 = icmp ne i32 %130, 0
  %132 = zext i1 %131 to i8
  br label %133

133:                                              ; preds = %122, %107, %129
  %134 = phi i32 [ %123, %122 ], [ %123, %129 ], [ %113, %107 ]
  %135 = phi i64 [ %124, %122 ], [ %124, %129 ], [ %118, %107 ]
  %136 = phi i32 [ %126, %122 ], [ %126, %129 ], [ %111, %107 ]
  %137 = phi i64 [ %125, %122 ], [ %125, %129 ], [ %112, %107 ]
  %138 = phi i8 [ 0, %122 ], [ %132, %129 ], [ 1, %107 ]
  %139 = load i8, i8* %3, align 1, !range !4
  %140 = or i8 %139, %138
  store i8 %140, i8* %3, align 1
  %141 = icmp ult i64 %137, 4294967296
  %142 = icmp ugt i64 %135, 4294967295
  %143 = and i1 %141, %142
  br i1 %143, label %149, label %144

144:                                              ; preds = %133
  %145 = icmp eq i32 %136, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %144
  %147 = icmp ne i32 %134, 0
  %148 = zext i1 %147 to i8
  br label %149

149:                                              ; preds = %133, %144, %146
  %150 = phi i8 [ 0, %144 ], [ %148, %146 ], [ 1, %133 ]
  %151 = load i8, i8* %4, align 1, !range !4
  %152 = or i8 %151, %150
  store i8 %152, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind readnone speculatable
declare double @llvm.round.f64(double) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #9

declare zeroext i1 @_ZNK5blink9LayoutBox46HasOverrideContainingBlockContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4

declare void @_ZN5blink9LayoutBox46SetOverrideContainingBlockContentLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #4

declare void @_ZN5blink9LayoutBox39ClearOverrideContainingBlockContentSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4

declare i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #4

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #4

declare void @_ZNK5blink17NGLayoutInputNode13IntrinsicSizeEPN4absl8optionalINS_10LayoutUnitEEES5_(%"class.blink::NGLayoutInputNode"*, %"class.absl::optional.1633"*, %"class.absl::optional.1633"*) local_unnamed_addr #4

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #4

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink11NGBlockNode19IsAtomicInlineLevelEv(%"class.blink::NGBlockNode"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink14LayoutBoxUtils46SkipContainingBlockForPercentHeightCalculationEPKNS_11LayoutBlockE(%"class.blink::LayoutBlock"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4

declare i32 @_ZNK5blink9LayoutBox32DefaultIntrinsicContentBlockSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4

declare i32 @_ZNK5blink9LayoutBox33DefaultIntrinsicContentInlineSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEED2Ev(%class.scoped_refptr*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %0, i64 0, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyle"* %3, null
  br i1 %4, label %28, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %28

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 -23
  %13 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %6, i64 1
  %14 = bitcast %"class.base::RefCounted.732"* %13 to %"class.blink::StyleCachedData"**
  %15 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %14, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %14, align 8
  %16 = icmp eq %"class.blink::StyleCachedData"* %15, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %18, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %18, align 8
  %20 = icmp eq %"class.WTF::Vector.739"* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %19) #13
  %22 = bitcast %"class.WTF::Vector.739"* %19 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %22) #13
  br label %23

23:                                               ; preds = %21, %17
  %24 = bitcast %"class.blink::StyleCachedData"* %15 to i8*
  tail call void @_ZdlPv(i8* %24) #14
  br label %25

25:                                               ; preds = %23, %11
  %26 = bitcast %"class.base::RefCounted.732"* %12 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %26) #13
  %27 = bitcast %"class.base::RefCounted.732"* %12 to i8*
  tail call void @free(i8* %27) #13
  br label %28

28:                                               ; preds = %25, %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.729", %"class.base::RefCounted.729"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.729"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #13
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #13
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #13
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #13
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #13
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #13
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #13
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #13
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.721"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #13
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #13
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #13
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #13
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #13
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #13
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #13
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #13
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #13
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #13
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #13
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #13
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #13
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #13
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #13
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #13
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #13
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #13
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #13
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #13
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #13
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #13
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #13
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.4"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #13
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #13
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #13
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"*) local_unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %42, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.scoped_refptr*, %class.scoped_refptr** %6, align 8
  %8 = zext i32 %3 to i64
  %9 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %7, i64 %8
  br label %10

10:                                               ; preds = %5, %38
  %11 = phi %class.scoped_refptr* [ %39, %38 ], [ %7, %5 ]
  %12 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 0, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = icmp eq %"class.blink::ComputedStyle"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #13
  %18 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %38

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 -23
  %23 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %16, i64 1
  %24 = bitcast %"class.base::RefCounted.732"* %23 to %"class.blink::StyleCachedData"**
  %25 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %24, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %24, align 8
  %26 = icmp eq %"class.blink::StyleCachedData"* %25, null
  br i1 %26, label %35, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %25, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %28, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %28, align 8
  %30 = icmp eq %"class.WTF::Vector.739"* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  tail call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE8FinalizeEv(%"class.WTF::Vector.739"* nonnull %29) #13
  %32 = bitcast %"class.WTF::Vector.739"* %29 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %32) #13
  br label %33

33:                                               ; preds = %31, %27
  %34 = bitcast %"class.blink::StyleCachedData"* %25 to i8*
  tail call void @_ZdlPv(i8* %34) #14
  br label %35

35:                                               ; preds = %33, %21
  %36 = bitcast %"class.base::RefCounted.732"* %22 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %36) #13
  %37 = bitcast %"class.base::RefCounted.732"* %22 to i8*
  tail call void @free(i8* %37) #13
  br label %38

38:                                               ; preds = %15, %35, %10
  %39 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %11, i64 1
  %40 = icmp eq %class.scoped_refptr* %39, %9
  br i1 %40, label %41, label %10

41:                                               ; preds = %38
  store i32 0, i32* %2, align 4
  br label %42

42:                                               ; preds = %1, %41
  %43 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 0, i32 0
  %44 = load %class.scoped_refptr*, %class.scoped_refptr** %43, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = bitcast i8* %45 to %class.scoped_refptr*
  %47 = icmp eq %class.scoped_refptr* %44, %46
  br i1 %47, label %50, label %48, !prof !3

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.1896"* %49, %class.scoped_refptr* %44) #13
  br label %50

50:                                               ; preds = %42, %48
  store %class.scoped_refptr* null, %class.scoped_refptr** %43, align 8
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.1896"*, %class.scoped_refptr*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #13
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #13
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %73, label %28, !prof !3

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #13
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #13
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #13
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #13
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #13
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #13
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !3

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #13
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !3

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !2

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #13
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.630"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #13
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #13
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #13
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #13
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #13
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #13
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #13
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #13
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #13
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #13
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #13
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #13
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !2

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #13
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %2) #13
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #13
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #13
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #13
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.709"* %24 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %25) #13
  %26 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.709"* %26 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %27) #13
  %28 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.709"* %28 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %29) #13
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #13
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #13
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #13
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #13
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #13
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.679"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #13
  %55 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.679"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #13
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #13
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #13
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #13
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #13
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #13
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.654", %"class.base::RefCounted.654"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.654"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #13
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #13
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.680, %class.scoped_refptr.680* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #13
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #13
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #13
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !2

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #13
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #13
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #13
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #13
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.699"*, %"class.base::RefCountedData.699"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.699"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !3

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !2

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #13
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #13
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.699"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #14
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #12

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #13
  %50 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.480"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.480"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #13
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #13
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !2

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #13
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #13
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !2

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.300"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.300"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !3

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.300"* %47 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %59, %"class.blink::ShadowData"* %54) #13
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #13
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %64, align 8
  %66 = icmp eq %class.scoped_refptr.638* %65, null
  br i1 %66, label %101, label %67, !prof !3

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.638* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !2

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.638* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #13
  %83 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.483"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.483"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #13
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.638* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #13
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #13
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #13
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #13
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #13
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #13
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #13
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"*, %"class.blink::ShadowData"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #13
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #13
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #13
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #13
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !3

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !2

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #13
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.630"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #13
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #13
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"* %108, %"class.blink::PaintImages"* null) #13
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.605", %"class.WTF::Vector.605"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !3

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !2

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #13
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.605"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #13
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #13
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #13
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #13
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #13
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.560"*, %"struct.WTF::KeyValuePair.560"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.560"* %166, null
  br i1 %167, label %200, label %168, !prof !3

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.560", %"struct.WTF::KeyValuePair.560"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.560"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #13
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.560"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #13
  store %"struct.WTF::KeyValuePair.560"* null, %"struct.WTF::KeyValuePair.560"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #13
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #13
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #13
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #13
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #13
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #13
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #13
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #13
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.528"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !3

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !2

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #13
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #13
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #13
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #13
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"*, %"class.blink::PaintImages"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.613"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.306"*, %"class.blink::Persistent.306"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.306"* %8, null
  br i1 %9, label %50, label %10, !prof !3

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.306"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !2

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.306"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #13
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #13
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.306"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #13
  store %"class.blink::Persistent.306"* null, %"class.blink::Persistent.306"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #13
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.572", %"class.WTF::Vector.572"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.575*, %class.scoped_refptr.575** %3, align 8
  %5 = icmp eq %class.scoped_refptr.575* %4, null
  br i1 %5, label %39, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.575* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.575* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #13
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.575* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.572"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #13
  store %class.scoped_refptr.575* null, %class.scoped_refptr.575** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !3

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !2

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #13
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !3

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !2

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #13
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !2

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #13
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !3

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !2

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #13
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !3

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #13
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !3

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !2

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #13
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.579", %"class.WTF::Vector.579"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !3

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !2

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #13
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.579"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #13
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !3

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !2

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #13
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.284"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #13
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #13
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #13
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #13
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.459"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !3

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !2

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.459"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.552"* %83, null
  br i1 %84, label %117, label %85, !prof !3

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.552"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #13
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #13
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.547"* %119, null
  br i1 %120, label %124, label %121, !prof !3

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %119, i32 %123) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.547"* %126, null
  br i1 %127, label %131, label %128, !prof !3

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %126, i32 %130) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.547"* %133, null
  br i1 %134, label %138, label %135, !prof !3

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %133, i32 %137) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.547"* %140, null
  br i1 %141, label %145, label %142, !prof !3

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %140, i32 %144) #13
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.542"* %147, null
  br i1 %148, label %196, label %149, !prof !3

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.542"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !3

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !2

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #13
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #13
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.542"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.542"* %198, null
  br i1 %199, label %247, label %200, !prof !3

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.542"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !3

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !2

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #13
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #13
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.542"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.542"* %249, null
  br i1 %250, label %298, label %251, !prof !3

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.542"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !3

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !2

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #13
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #13
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.542"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.542"* %300, null
  br i1 %301, label %349, label %302, !prof !3

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.542"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !3

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !2

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #13
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #13
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.542"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.542"* %351, null
  br i1 %352, label %400, label %353, !prof !3

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.542"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !3

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !2

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #13
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #13
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.542"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.542"* %402, null
  br i1 %403, label %451, label %404, !prof !3

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.542"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !3

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !2

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #13
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #13
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.542"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #13
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"*, i32) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.547"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #13
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !3

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !2

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.630"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #13
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #13
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !2

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #13
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #13
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #13
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #13
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #13
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #13
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #13
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #13
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #13
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #13
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #13
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #13
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #13
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #13
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #13
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !4
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #13
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !4
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #13
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #13
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !2

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #13
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #13
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !2

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #13
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #13
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #13
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #13
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #13
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #13
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #13
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #13
  %188 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.483"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.483"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #13
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #13
  %205 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.483"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.483"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #13
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #13
  %222 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.483"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.483"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #13
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #13
  %239 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.480"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.480"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #13
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #13
  %256 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.477"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.477"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #13
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #13
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #13
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #13
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #13
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #13
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.464"* %353 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #13
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !3

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !2

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #13
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #13
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #13
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.464"* %400 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #13
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !3

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !2

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #13
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #13
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #13
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.464"* %447 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #13
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !3

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !2

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #13
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #13
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #13
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.464"* %494 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #13
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !3

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !2

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #13
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #13
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #13
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !3

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !2

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #13
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #13
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #13
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.459"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #13
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !3

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !2

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #13
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #13
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #13
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #13
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !2

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #13
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #13
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !2

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #13
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #13
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !2

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.300"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.300"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !3

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.300"* %76 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %88, %"class.blink::ShadowData"* %83) #13
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #13
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #13
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.292", %"class.WTF::Vector.292"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.295"* %103, null
  br i1 %104, label %156, label %105, !prof !3

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.295"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !2

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.295"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #13
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #13
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.295"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.292"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #13
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #13
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #13
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #13
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !3

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !2

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #13
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.284"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #13
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #13
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #13
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #13
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #13
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #13
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #13
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #13
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #13
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.261", %"class.base::RefCounted.261"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.261"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #13
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #13
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.253"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !2

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #13
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #13
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #13
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #14
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #12

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind readnone }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 536602, i32 -2146410, i32 536602, i32 536602, i32 536602}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink6Length12MinIntrinsicEv: argument 0"}
!8 = distinct !{!8, !"_ZN5blink6Length12MinIntrinsicEv"}
!9 = !{!10, !12}
!10 = distinct !{!10, !11, !"_ZN5blink6Length13FillAvailableEv: argument 0"}
!11 = distinct !{!11, !"_ZN5blink6Length13FillAvailableEv"}
!12 = distinct !{!12, !13, !"_ZN5blink6Length10FitContentEv: argument 0"}
!13 = distinct !{!13, !"_ZN5blink6Length10FitContentEv"}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN5blink6Length13FillAvailableEv: argument 0"}
!16 = distinct !{!16, !"_ZN5blink6Length13FillAvailableEv"}
!17 = distinct !{!17, !18, !"_ZN5blink6Length10FitContentEv: argument 0"}
!18 = distinct !{!18, !"_ZN5blink6Length10FitContentEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN5blink6Length13FillAvailableEv: argument 0"}
!21 = distinct !{!21, !"_ZN5blink6Length13FillAvailableEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN5blink6Length13FillAvailableEv: argument 0"}
!30 = distinct !{!30, !"_ZN5blink6Length13FillAvailableEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN5blink6Length13FillAvailableEv: argument 0"}
!33 = distinct !{!33, !"_ZN5blink6Length13FillAvailableEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!36 = distinct !{!36, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!39 = distinct !{!39, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!42 = distinct !{!42, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!45 = distinct !{!45, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!48 = distinct !{!48, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv: argument 0"}
!51 = distinct !{!51, !"_ZNK5blink13ComputedStyle28PhysicalBorderWidthToLogicalEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!54 = distinct !{!54, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!57 = distinct !{!57, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!60 = distinct !{!60, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!63 = distinct !{!63, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!66 = distinct !{!66, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!69 = distinct !{!69, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!72 = distinct !{!72, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!73 = !{!"branch_weights", i32 2002, i32 2000}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!76 = distinct !{!76, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!79 = distinct !{!79, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN5blink6Length7PercentIiEES0_T_: argument 0"}
!82 = distinct !{!82, !"_ZN5blink6Length7PercentIiEES0_T_"}
