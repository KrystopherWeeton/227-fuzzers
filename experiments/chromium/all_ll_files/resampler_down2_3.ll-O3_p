; ModuleID = '../../third_party/opus/src/silk/resampler_down2_3.c'
source_filename = "../../third_party/opus/src/silk/resampler_down2_3.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@silk_Resampler_2_3_COEFS_LQ = external constant [6 x i16], align 2

; Function Attrs: nounwind ssp uwtable
define hidden void @silk_resampler_down2_3(i32*, i16* nocapture, i16*, i32) local_unnamed_addr #0 {
  %5 = alloca [1936 x i8], align 16
  %6 = getelementptr inbounds [1936 x i8], [1936 x i8]* %5, i64 0, i64 0
  %7 = bitcast [1936 x i8]* %5 to i32*
  %8 = bitcast i32* %0 to i8*
  %9 = getelementptr inbounds [1936 x i8], [1936 x i8]* %5, i64 0, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 16 %9, i8 -86, i64 1920, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 4 %8, i64 16, i1 false)
  %10 = getelementptr inbounds i32, i32* %0, i64 4
  %11 = getelementptr inbounds [1936 x i8], [1936 x i8]* %5, i64 0, i64 16
  %12 = bitcast i8* %11 to i32*
  %13 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @silk_Resampler_2_3_COEFS_LQ, i64 0, i64 2), align 2
  %14 = sext i16 %13 to i64
  %15 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @silk_Resampler_2_3_COEFS_LQ, i64 0, i64 3), align 2
  %16 = sext i16 %15 to i64
  %17 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @silk_Resampler_2_3_COEFS_LQ, i64 0, i64 5), align 2
  %18 = sext i16 %17 to i64
  %19 = load i16, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @silk_Resampler_2_3_COEFS_LQ, i64 0, i64 4), align 2
  %20 = sext i16 %19 to i64
  br label %21

21:                                               ; preds = %101, %4
  %22 = phi i16* [ %1, %4 ], [ %97, %101 ]
  %23 = phi i16* [ %2, %4 ], [ %102, %101 ]
  %24 = phi i32 [ %3, %4 ], [ %99, %101 ]
  %25 = icmp slt i32 %24, 480
  %26 = select i1 %25, i32 %24, i32 480
  call void @silk_resampler_private_AR2(i32* %10, i32* %12, i16* %23, i16* getelementptr inbounds ([6 x i16], [6 x i16]* @silk_Resampler_2_3_COEFS_LQ, i64 0, i64 0), i32 %26) #3
  %27 = icmp sgt i32 %26, 2
  br i1 %27, label %28, label %96

28:                                               ; preds = %21, %28
  %29 = phi i32* [ %48, %28 ], [ %7, %21 ]
  %30 = phi i32 [ %94, %28 ], [ %26, %21 ]
  %31 = phi i16* [ %93, %28 ], [ %22, %21 ]
  %32 = load i32, i32* %29, align 4
  %33 = sext i32 %32 to i64
  %34 = mul nsw i64 %14, %33
  %35 = lshr i64 %34, 16
  %36 = getelementptr inbounds i32, i32* %29, i64 1
  %37 = load i32, i32* %36, align 4
  %38 = sext i32 %37 to i64
  %39 = mul nsw i64 %16, %38
  %40 = lshr i64 %39, 16
  %41 = add nuw nsw i64 %40, %35
  %42 = getelementptr inbounds i32, i32* %29, i64 2
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = mul nsw i64 %18, %44
  %46 = lshr i64 %45, 16
  %47 = add nuw nsw i64 %41, %46
  %48 = getelementptr inbounds i32, i32* %29, i64 3
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = mul nsw i64 %20, %50
  %52 = lshr i64 %51, 16
  %53 = add nuw nsw i64 %47, %52
  %54 = trunc i64 %53 to i32
  %55 = ashr i32 %54, 5
  %56 = add nsw i32 %55, 1
  %57 = lshr i32 %56, 1
  %58 = icmp sgt i32 %54, 2097119
  %59 = icmp slt i32 %56, -65536
  %60 = select i1 %59, i32 32768, i32 %57
  %61 = select i1 %58, i32 32767, i32 %60
  %62 = trunc i32 %61 to i16
  %63 = getelementptr inbounds i16, i16* %31, i64 1
  store i16 %62, i16* %31, align 2
  %64 = load i32, i32* %36, align 4
  %65 = sext i32 %64 to i64
  %66 = mul nsw i64 %65, %20
  %67 = lshr i64 %66, 16
  %68 = load i32, i32* %42, align 4
  %69 = sext i32 %68 to i64
  %70 = mul nsw i64 %69, %18
  %71 = lshr i64 %70, 16
  %72 = add nuw nsw i64 %71, %67
  %73 = load i32, i32* %48, align 4
  %74 = sext i32 %73 to i64
  %75 = mul nsw i64 %74, %16
  %76 = lshr i64 %75, 16
  %77 = add nuw nsw i64 %72, %76
  %78 = getelementptr inbounds i32, i32* %29, i64 4
  %79 = load i32, i32* %78, align 4
  %80 = sext i32 %79 to i64
  %81 = mul nsw i64 %80, %14
  %82 = lshr i64 %81, 16
  %83 = add nuw nsw i64 %77, %82
  %84 = trunc i64 %83 to i32
  %85 = ashr i32 %84, 5
  %86 = add nsw i32 %85, 1
  %87 = lshr i32 %86, 1
  %88 = icmp sgt i32 %84, 2097119
  %89 = icmp slt i32 %86, -65536
  %90 = select i1 %89, i32 32768, i32 %87
  %91 = select i1 %88, i32 32767, i32 %90
  %92 = trunc i32 %91 to i16
  %93 = getelementptr inbounds i16, i16* %31, i64 2
  store i16 %92, i16* %63, align 2
  %94 = add nsw i32 %30, -3
  %95 = icmp sgt i32 %94, 2
  br i1 %95, label %28, label %96

96:                                               ; preds = %28, %21
  %97 = phi i16* [ %22, %21 ], [ %93, %28 ]
  %98 = sext i32 %26 to i64
  %99 = sub nsw i32 %24, %26
  %100 = icmp sgt i32 %99, 0
  br i1 %100, label %101, label %105

101:                                              ; preds = %96
  %102 = getelementptr inbounds i16, i16* %23, i64 %98
  %103 = getelementptr inbounds i32, i32* %7, i64 %98
  %104 = bitcast i32* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %6, i8* align 4 %104, i64 16, i1 false)
  br label %21

105:                                              ; preds = %96
  %106 = getelementptr inbounds i32, i32* %7, i64 %98
  %107 = bitcast i32* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 %107, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @silk_resampler_private_AR2(i32*, i32*, i16*, i16*, i32) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
