; ModuleID = '../../third_party/skia/src/gpu/glsl/GrGLSLProgramDataManager.cpp'
source_filename = "../../third_party/skia/src/gpu/glsl/GrGLSLProgramDataManager.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLSLProgramDataManager = type { i32 (...)** }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkM44 = type { [16 x float] }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24GrGLSLProgramDataManager11setSkMatrixE16GrResourceHandleINS_17UniformHandleKindEERK8SkMatrix(%class.GrGLSLProgramDataManager*, i32, %class.SkMatrix* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = alloca [9 x float], align 16
  %5 = bitcast [9 x float]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %5) #2
  %6 = getelementptr inbounds [9 x float], [9 x float]* %4, i64 0, i64 0
  %7 = bitcast %class.SkMatrix* %2 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = bitcast [9 x float]* %4 to i32*
  store i32 %8, i32* %9, align 16
  %10 = getelementptr inbounds [9 x float], [9 x float]* %4, i64 0, i64 1
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %12 = bitcast float* %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = bitcast float* %10 to i32*
  store i32 %13, i32* %14, align 4
  %15 = getelementptr inbounds [9 x float], [9 x float]* %4, i64 0, i64 2
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 6
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = bitcast float* %15 to i32*
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds [9 x float], [9 x float]* %4, i64 0, i64 3
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 1
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 4
  %24 = bitcast float* %20 to i32*
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds [9 x float], [9 x float]* %4, i64 0, i64 4
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 4
  %27 = bitcast float* %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = bitcast float* %25 to i32*
  store i32 %28, i32* %29, align 16
  %30 = getelementptr inbounds [9 x float], [9 x float]* %4, i64 0, i64 5
  %31 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 7
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = bitcast float* %30 to i32*
  store i32 %33, i32* %34, align 4
  %35 = getelementptr inbounds [9 x float], [9 x float]* %4, i64 0, i64 6
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 2
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  %39 = bitcast float* %35 to i32*
  store i32 %38, i32* %39, align 8
  %40 = getelementptr inbounds [9 x float], [9 x float]* %4, i64 0, i64 7
  %41 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 5
  %42 = bitcast float* %41 to i32*
  %43 = load i32, i32* %42, align 4
  %44 = bitcast float* %40 to i32*
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds [9 x float], [9 x float]* %4, i64 0, i64 8
  %46 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 8
  %47 = bitcast float* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = bitcast float* %45 to i32*
  store i32 %48, i32* %49, align 16
  %50 = bitcast %class.GrGLSLProgramDataManager* %0 to void (%class.GrGLSLProgramDataManager*, i32, float*)***
  %51 = load void (%class.GrGLSLProgramDataManager*, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, float*)*** %50, align 8
  %52 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, float*)** %51, i64 19
  %53 = load void (%class.GrGLSLProgramDataManager*, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, float*)** %52, align 8
  call void %53(%class.GrGLSLProgramDataManager* %0, i32 %1, float* nonnull %6) #2
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %5) #2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24GrGLSLProgramDataManager8setSkM44E16GrResourceHandleINS_17UniformHandleKindEERK5SkM44(%class.GrGLSLProgramDataManager*, i32, %class.SkM44* dereferenceable(64)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkM44, %class.SkM44* %2, i64 0, i32 0, i64 0
  %5 = bitcast %class.GrGLSLProgramDataManager* %0 to void (%class.GrGLSLProgramDataManager*, i32, float*)***
  %6 = load void (%class.GrGLSLProgramDataManager*, i32, float*)**, void (%class.GrGLSLProgramDataManager*, i32, float*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, float*)** %6, i64 20
  %8 = load void (%class.GrGLSLProgramDataManager*, i32, float*)*, void (%class.GrGLSLProgramDataManager*, i32, float*)** %7, align 8
  tail call void %8(%class.GrGLSLProgramDataManager* %0, i32 %1, float* %4) #2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
