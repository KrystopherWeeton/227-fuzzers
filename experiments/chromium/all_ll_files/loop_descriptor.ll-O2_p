; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_descriptor.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/loop_descriptor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.spvtools::opt::Loop" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Loop"*, %"class.std::__1::vector.910", %"class.std::__1::unordered_set.917", i8, [7 x i8] }>
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::unordered_set.917" = type { %"class.std::__1::__hash_table.918" }
%"class.std::__1::__hash_table.918" = type <{ %"class.std::__1::unique_ptr.919", %"class.std::__1::__compressed_pair.929", %"class.std::__1::__compressed_pair.934", %"class.std::__1::__compressed_pair.936", [4 x i8] }>
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921", %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"struct.std::__1::__hash_node_base.922"** }
%"struct.std::__1::__hash_node_base.922" = type { %"struct.std::__1::__hash_node_base.922"* }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"class.std::__1::__bucket_list_deallocator.924" }
%"class.std::__1::__bucket_list_deallocator.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.930" }
%"struct.std::__1::__compressed_pair_elem.930" = type { %"struct.std::__1::__hash_node_base.922" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.936" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.89", %"class.std::__1::unordered_map.110", %"class.std::__1::unordered_map.138", i32, [4 x i8], %"class.std::__1::unordered_map.162", %"class.std::__1::unordered_map.186", %"class.std::__1::unique_ptr.210", %"class.std::__1::map", %"class.std::__1::map.225", %"class.std::__1::unordered_map.234", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.347", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.490", %"class.std::__1::unique_ptr.505", %"class.std::__1::unique_ptr.561", %"class.std::__1::unique_ptr.591", %"class.std::__1::unique_ptr.621", %"class.std::__1::unique_ptr.740", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.824", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.897", %"class.std::__1::vector.789", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector.777", %"class.std::__1::vector.789", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector.777" = type { %"class.std::__1::__vector_base.778" }
%"class.std::__1::__vector_base.778" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.784" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.779" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.std::__1::vector.324"* }
%"class.std::__1::vector.324" = type { %"class.std::__1::__vector_base.325" }
%"class.std::__1::__vector_base.325" = type { i32*, i32*, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { i32* }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.897" = type { %"class.std::__1::__vector_base.898" }
%"class.std::__1::__vector_base.898" = type { %"class.std::__1::unique_ptr.899"*, %"class.std::__1::unique_ptr.899"*, %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.824", %"class.std::__1::vector.829", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.836", %"class.std::__1::unique_ptr.824", %"class.std::__1::vector.829" }
%"class.std::__1::vector.836" = type { %"class.std::__1::__vector_base.837" }
%"class.std::__1::__vector_base.837" = type { %"class.std::__1::unique_ptr.838"*, %"class.std::__1::unique_ptr.838"*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { %"class.std::__1::unique_ptr.838"* }
%"class.std::__1::vector.829" = type { %"class.std::__1::__vector_base.830" }
%"class.std::__1::__vector_base.830" = type { %"class.std::__1::unique_ptr.824"*, %"class.std::__1::unique_ptr.824"*, %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.std::__1::unique_ptr.824"* }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.std::__1::unique_ptr.899"* }
%"class.std::__1::vector.789" = type { %"class.std::__1::__vector_base.790" }
%"class.std::__1::__vector_base.790" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.28" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.18", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.21", %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unordered_map.28" = type { %"class.std::__1::__hash_table.29" }
%"class.std::__1::__hash_table.29" = type <{ %"class.std::__1::unique_ptr.30", %"class.std::__1::__compressed_pair.40", %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50", [4 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32", %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::__hash_node_base.33"** }
%"struct.std::__1::__hash_node_base.33" = type { %"struct.std::__1::__hash_node_base.33"* }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__bucket_list_deallocator.35" }
%"class.std::__1::__bucket_list_deallocator.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::__hash_node_base.33" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.62", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.62" = type { %"class.std::__1::__hash_table.63" }
%"class.std::__1::__hash_table.63" = type <{ %"class.std::__1::unique_ptr.64", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.82", [4 x i8] }>
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.std::__1::__hash_node_base.67"** }
%"struct.std::__1::__hash_node_base.67" = type { %"struct.std::__1::__hash_node_base.67"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator.69" }
%"class.std::__1::__bucket_list_deallocator.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base.67" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.106", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::set.95"* }
%"class.std::__1::set.95" = type { %"class.std::__1::__tree.96" }
%"class.std::__1::__tree.96" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.spvtools::EnumSet.106" = type { i64, %"class.std::__1::unique_ptr.92" }
%"class.std::__1::unordered_map.110" = type { %"class.std::__1::__hash_table.111" }
%"class.std::__1::__hash_table.111" = type <{ %"class.std::__1::unique_ptr.112", %"class.std::__1::__compressed_pair.122", %"class.std::__1::__compressed_pair.127", %"class.std::__1::__compressed_pair.132", [4 x i8] }>
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"struct.std::__1::__hash_node_base.115"** }
%"struct.std::__1::__hash_node_base.115" = type { %"struct.std::__1::__hash_node_base.115"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator.117" }
%"class.std::__1::__bucket_list_deallocator.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"struct.std::__1::__hash_node_base.115" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.138" = type { %"class.std::__1::__hash_table.139" }
%"class.std::__1::__hash_table.139" = type <{ %"class.std::__1::unique_ptr.140", %"class.std::__1::__compressed_pair.150", %"class.std::__1::__compressed_pair.155", %"class.std::__1::__compressed_pair.158", [4 x i8] }>
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142", %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"struct.std::__1::__hash_node_base.143"** }
%"struct.std::__1::__hash_node_base.143" = type { %"struct.std::__1::__hash_node_base.143"* }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.std::__1::__bucket_list_deallocator.145" }
%"class.std::__1::__bucket_list_deallocator.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"struct.std::__1::__hash_node_base.143" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.162" = type { %"class.std::__1::__hash_table.163" }
%"class.std::__1::__hash_table.163" = type <{ %"class.std::__1::unique_ptr.164", %"class.std::__1::__compressed_pair.174", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.182", [4 x i8] }>
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166", %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.std::__1::__hash_node_base.167"** }
%"struct.std::__1::__hash_node_base.167" = type { %"struct.std::__1::__hash_node_base.167"* }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.std::__1::__bucket_list_deallocator.169" }
%"class.std::__1::__bucket_list_deallocator.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"struct.std::__1::__hash_node_base.167" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.186" = type { %"class.std::__1::__hash_table.187" }
%"class.std::__1::__hash_table.187" = type <{ %"class.std::__1::unique_ptr.188", %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.206", [4 x i8] }>
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190", %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.std::__1::__hash_node_base.191"** }
%"struct.std::__1::__hash_node_base.191" = type { %"struct.std::__1::__hash_node_base.191"* }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.std::__1::__bucket_list_deallocator.193" }
%"class.std::__1::__bucket_list_deallocator.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::__hash_node_base.191" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.796", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.849", %"class.std::__1::unordered_map.873" }
%"class.std::__1::unordered_map.796" = type { %"class.std::__1::__hash_table.797" }
%"class.std::__1::__hash_table.797" = type <{ %"class.std::__1::unique_ptr.798", %"class.std::__1::__compressed_pair.808", %"class.std::__1::__compressed_pair.813", %"class.std::__1::__compressed_pair.818", [4 x i8] }>
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800", %"struct.std::__1::__compressed_pair_elem.802" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.std::__1::__hash_node_base.801"** }
%"struct.std::__1::__hash_node_base.801" = type { %"struct.std::__1::__hash_node_base.801"* }
%"struct.std::__1::__compressed_pair_elem.802" = type { %"class.std::__1::__bucket_list_deallocator.803" }
%"class.std::__1::__bucket_list_deallocator.803" = type { %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.808" = type { %"struct.std::__1::__compressed_pair_elem.809" }
%"struct.std::__1::__compressed_pair_elem.809" = type { %"struct.std::__1::__hash_node_base.801" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.824", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.873" = type { %"class.std::__1::__hash_table.874" }
%"class.std::__1::__hash_table.874" = type <{ %"class.std::__1::unique_ptr.875", %"class.std::__1::__compressed_pair.885", %"class.std::__1::__compressed_pair.890", %"class.std::__1::__compressed_pair.893", [4 x i8] }>
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877", %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"struct.std::__1::__hash_node_base.878"** }
%"struct.std::__1::__hash_node_base.878" = type { %"struct.std::__1::__hash_node_base.878"* }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.std::__1::__bucket_list_deallocator.880" }
%"class.std::__1::__bucket_list_deallocator.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.885" = type { %"struct.std::__1::__compressed_pair_elem.886" }
%"struct.std::__1::__compressed_pair_elem.886" = type { %"struct.std::__1::__hash_node_base.878" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.216" }
%"class.std::__1::__tree.216" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.217", %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::map.225" = type { %"class.std::__1::__tree.226" }
%"class.std::__1::__tree.226" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.227", %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unordered_map.234" = type { %"class.std::__1::__hash_table.235" }
%"class.std::__1::__hash_table.235" = type <{ %"class.std::__1::unique_ptr.236", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.251", %"class.std::__1::__compressed_pair.256", [4 x i8] }>
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238", %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.239"** }
%"struct.std::__1::__hash_node_base.239" = type { %"struct.std::__1::__hash_node_base.239"* }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.std::__1::__bucket_list_deallocator.241" }
%"class.std::__1::__bucket_list_deallocator.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"struct.std::__1::__hash_node_base.239" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.264", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector" }
%"class.std::__1::unordered_map.264" = type { %"class.std::__1::__hash_table.265" }
%"class.std::__1::__hash_table.265" = type <{ %"class.std::__1::unique_ptr.266", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.281", %"class.std::__1::__compressed_pair.284", [4 x i8] }>
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268", %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.std::__1::__hash_node_base.269"** }
%"struct.std::__1::__hash_node_base.269" = type { %"struct.std::__1::__hash_node_base.269"* }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.std::__1::__bucket_list_deallocator.271" }
%"class.std::__1::__bucket_list_deallocator.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"struct.std::__1::__hash_node_base.269" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.288" }
%"class.std::__1::__tree.288" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.298" }
%"class.std::__1::__hash_table.298" = type <{ %"class.std::__1::unique_ptr.299", %"class.std::__1::__compressed_pair.309", %"class.std::__1::__compressed_pair.314", %"class.std::__1::__compressed_pair.316", [4 x i8] }>
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301", %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.std::__1::__hash_node_base.302"** }
%"struct.std::__1::__hash_node_base.302" = type { %"struct.std::__1::__hash_node_base.302"* }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.std::__1::__bucket_list_deallocator.304" }
%"class.std::__1::__bucket_list_deallocator.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"struct.std::__1::__hash_node_base.302" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.319"*, %"class.std::__1::unique_ptr.319"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.322", i32, [4 x i8] }>
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"*, %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.std::__1::unique_ptr.319"* }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.350", %"class.std::__1::unordered_map.374", %"class.std::__1::unordered_set.398", %"class.std::__1::vector.420", %"class.std::__1::unordered_map.350", %"class.std::__1::unordered_map.433" }
%"class.std::__1::unordered_map.374" = type { %"class.std::__1::__hash_table.375" }
%"class.std::__1::__hash_table.375" = type <{ %"class.std::__1::unique_ptr.376", %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.394", [4 x i8] }>
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378", %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.379"** }
%"struct.std::__1::__hash_node_base.379" = type { %"struct.std::__1::__hash_node_base.379"* }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.std::__1::__bucket_list_deallocator.381" }
%"class.std::__1::__bucket_list_deallocator.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.std::__1::__hash_node_base.379" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_set.398" = type { %"class.std::__1::__hash_table.399" }
%"class.std::__1::__hash_table.399" = type <{ %"class.std::__1::unique_ptr.400", %"class.std::__1::__compressed_pair.410", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.417", [4 x i8] }>
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402", %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"struct.std::__1::__hash_node_base.403"** }
%"struct.std::__1::__hash_node_base.403" = type { %"struct.std::__1::__hash_node_base.403"* }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.std::__1::__bucket_list_deallocator.405" }
%"class.std::__1::__bucket_list_deallocator.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.411" }
%"struct.std::__1::__compressed_pair_elem.411" = type { %"struct.std::__1::__hash_node_base.403" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.417" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.420" = type { %"class.std::__1::__vector_base.421" }
%"class.std::__1::__vector_base.421" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.428" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.422" }
%"class.std::__1::unique_ptr.422" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.350" = type { %"class.std::__1::__hash_table.351" }
%"class.std::__1::__hash_table.351" = type <{ %"class.std::__1::unique_ptr.352", %"class.std::__1::__compressed_pair.362", %"class.std::__1::__compressed_pair.367", %"class.std::__1::__compressed_pair.370", [4 x i8] }>
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354", %"struct.std::__1::__compressed_pair_elem.356" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"struct.std::__1::__hash_node_base.355"** }
%"struct.std::__1::__hash_node_base.355" = type { %"struct.std::__1::__hash_node_base.355"* }
%"struct.std::__1::__compressed_pair_elem.356" = type { %"class.std::__1::__bucket_list_deallocator.357" }
%"class.std::__1::__bucket_list_deallocator.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.std::__1::__hash_node_base.355" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.433" = type { %"class.std::__1::__hash_table.434" }
%"class.std::__1::__hash_table.434" = type <{ %"class.std::__1::unique_ptr.435", %"class.std::__1::__compressed_pair.445", %"class.std::__1::__compressed_pair.450", %"class.std::__1::__compressed_pair.453", [4 x i8] }>
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437", %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"struct.std::__1::__hash_node_base.438"** }
%"struct.std::__1::__hash_node_base.438" = type { %"struct.std::__1::__hash_node_base.438"* }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.std::__1::__bucket_list_deallocator.440" }
%"class.std::__1::__bucket_list_deallocator.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"struct.std::__1::__hash_node_base.438" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.463", %"class.std::__1::unordered_map.463", %"class.std::__1::unordered_map.463", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.463" = type { %"class.std::__1::__hash_table.464" }
%"class.std::__1::__hash_table.464" = type <{ %"class.std::__1::unique_ptr.465", %"class.std::__1::__compressed_pair.475", %"class.std::__1::__compressed_pair.480", %"class.std::__1::__compressed_pair.483", [4 x i8] }>
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467", %"struct.std::__1::__compressed_pair_elem.469" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.std::__1::__hash_node_base.468"** }
%"struct.std::__1::__hash_node_base.468" = type { %"struct.std::__1::__hash_node_base.468"* }
%"struct.std::__1::__compressed_pair_elem.469" = type { %"class.std::__1::__bucket_list_deallocator.470" }
%"class.std::__1::__bucket_list_deallocator.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"struct.std::__1::__hash_node_base.468" }
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.std::__1::multimap.493"* }
%"class.std::__1::multimap.493" = type { %"class.std::__1::__tree.494" }
%"class.std::__1::__tree.494" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.499" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.499" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.508", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.525", %"class.std::__1::map.547" }
%"class.std::__1::map.508" = type { %"class.std::__1::__tree.509" }
%"class.std::__1::__tree.509" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.510", %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.518", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.518" = type { %"class.std::__1::__vector_base.519" }
%"class.std::__1::__vector_base.519" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.525" = type { %"class.std::__1::__hash_table.526" }
%"class.std::__1::__hash_table.526" = type <{ %"class.std::__1::unique_ptr.527", %"class.std::__1::__compressed_pair.537", %"class.std::__1::__compressed_pair.542", %"class.std::__1::__compressed_pair.544", [4 x i8] }>
%"class.std::__1::unique_ptr.527" = type { %"class.std::__1::__compressed_pair.528" }
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529", %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"struct.std::__1::__hash_node_base.530"** }
%"struct.std::__1::__hash_node_base.530" = type { %"struct.std::__1::__hash_node_base.530"* }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.std::__1::__bucket_list_deallocator.532" }
%"class.std::__1::__bucket_list_deallocator.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"struct.std::__1::__hash_node_base.530" }
%"class.std::__1::__compressed_pair.542" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.547" = type { %"class.std::__1::__tree.548" }
%"class.std::__1::__tree.548" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.549", %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.564" }
%"class.std::__1::unordered_map.564" = type { %"class.std::__1::__hash_table.565" }
%"class.std::__1::__hash_table.565" = type <{ %"class.std::__1::unique_ptr.566", %"class.std::__1::__compressed_pair.576", %"class.std::__1::__compressed_pair.581", %"class.std::__1::__compressed_pair.584", [4 x i8] }>
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568", %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.569"** }
%"struct.std::__1::__hash_node_base.569" = type { %"struct.std::__1::__hash_node_base.569"* }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.std::__1::__bucket_list_deallocator.571" }
%"class.std::__1::__bucket_list_deallocator.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"struct.std::__1::__hash_node_base.569" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.591" = type { %"class.std::__1::__compressed_pair.592" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.594", %"class.std::__1::unordered_map.186", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.594" = type { %"class.std::__1::__hash_table.595" }
%"class.std::__1::__hash_table.595" = type <{ %"class.std::__1::unique_ptr.596", %"class.std::__1::__compressed_pair.606", %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.614", [4 x i8] }>
%"class.std::__1::unique_ptr.596" = type { %"class.std::__1::__compressed_pair.597" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.598", %"struct.std::__1::__compressed_pair_elem.600" }
%"struct.std::__1::__compressed_pair_elem.598" = type { %"struct.std::__1::__hash_node_base.599"** }
%"struct.std::__1::__hash_node_base.599" = type { %"struct.std::__1::__hash_node_base.599"* }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"class.std::__1::__bucket_list_deallocator.601" }
%"class.std::__1::__bucket_list_deallocator.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.606" = type { %"struct.std::__1::__compressed_pair_elem.607" }
%"struct.std::__1::__compressed_pair_elem.607" = type { %"struct.std::__1::__hash_node_base.599" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.623" }
%"struct.std::__1::__compressed_pair_elem.623" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.624", %"class.std::__1::unique_ptr.684" }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.627", %"class.std::__1::map.651", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.662" }
%"class.std::__1::unordered_map.627" = type { %"class.std::__1::__hash_table.628" }
%"class.std::__1::__hash_table.628" = type <{ %"class.std::__1::unique_ptr.629", %"class.std::__1::__compressed_pair.639", %"class.std::__1::__compressed_pair.644", %"class.std::__1::__compressed_pair.647", [4 x i8] }>
%"class.std::__1::unique_ptr.629" = type { %"class.std::__1::__compressed_pair.630" }
%"class.std::__1::__compressed_pair.630" = type { %"struct.std::__1::__compressed_pair_elem.631", %"struct.std::__1::__compressed_pair_elem.633" }
%"struct.std::__1::__compressed_pair_elem.631" = type { %"struct.std::__1::__hash_node_base.632"** }
%"struct.std::__1::__hash_node_base.632" = type { %"struct.std::__1::__hash_node_base.632"* }
%"struct.std::__1::__compressed_pair_elem.633" = type { %"class.std::__1::__bucket_list_deallocator.634" }
%"class.std::__1::__bucket_list_deallocator.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"struct.std::__1::__hash_node_base.632" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.651" = type { %"class.std::__1::__tree.652" }
%"class.std::__1::__tree.652" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.653", %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::vector.662" = type { %"class.std::__1::__vector_base.663" }
%"class.std::__1::__vector_base.663" = type { %"class.std::__1::function.664"*, %"class.std::__1::function.664"*, %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::function.664" = type { %"class.std::__1::__function::__policy_func.667" }
%"class.std::__1::__function::__policy_func.667" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.668", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.668" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.669"*)* }
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.std::__1::function.664"* }
%"class.std::__1::unique_ptr.684" = type { %"class.std::__1::__compressed_pair.685" }
%"class.std::__1::__compressed_pair.685" = type { %"struct.std::__1::__compressed_pair_elem.686" }
%"struct.std::__1::__compressed_pair_elem.686" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.687", %"class.std::__1::map.711", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.722" }
%"class.std::__1::unordered_map.687" = type { %"class.std::__1::__hash_table.688" }
%"class.std::__1::__hash_table.688" = type <{ %"class.std::__1::unique_ptr.689", %"class.std::__1::__compressed_pair.699", %"class.std::__1::__compressed_pair.704", %"class.std::__1::__compressed_pair.707", [4 x i8] }>
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691", %"struct.std::__1::__compressed_pair_elem.693" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"struct.std::__1::__hash_node_base.692"** }
%"struct.std::__1::__hash_node_base.692" = type { %"struct.std::__1::__hash_node_base.692"* }
%"struct.std::__1::__compressed_pair_elem.693" = type { %"class.std::__1::__bucket_list_deallocator.694" }
%"class.std::__1::__bucket_list_deallocator.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"struct.std::__1::__hash_node_base.692" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::map.711" = type { %"class.std::__1::__tree.712" }
%"class.std::__1::__tree.712" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.713", %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::vector.722" = type { %"class.std::__1::__vector_base.723" }
%"class.std::__1::__vector_base.723" = type { %"class.std::__1::function.724"*, %"class.std::__1::function.724"*, %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::function.724" = type { %"class.std::__1::__function::__policy_func.727" }
%"class.std::__1::__function::__policy_func.727" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.728", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.728" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.669"*)* }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.std::__1::function.724"* }
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.743", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.743" = type { %"class.std::__1::__hash_table.744" }
%"class.std::__1::__hash_table.744" = type <{ %"class.std::__1::unique_ptr.745", %"class.std::__1::__compressed_pair.755", %"class.std::__1::__compressed_pair.760", %"class.std::__1::__compressed_pair.763", [4 x i8] }>
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747", %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"struct.std::__1::__hash_node_base.748"** }
%"struct.std::__1::__hash_node_base.748" = type { %"struct.std::__1::__hash_node_base.748"* }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.std::__1::__bucket_list_deallocator.750" }
%"class.std::__1::__bucket_list_deallocator.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"struct.std::__1::__hash_node_base.748" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.767" }
%"class.std::__1::vector.767" = type { %"class.std::__1::__vector_base.768" }
%"class.std::__1::__vector_base.768" = type { i64*, i64*, %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { i64* }
%"class.spvtools::opt::DominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.spvtools::opt::DominatorAnalysisBase" = type { %"class.spvtools::opt::DominatorTree" }
%"class.spvtools::opt::DominatorTree" = type <{ %"class.std::__1::vector.939", %"class.std::__1::map.946", i8, [7 x i8] }>
%"class.std::__1::vector.939" = type { %"class.std::__1::__vector_base.940" }
%"class.std::__1::__vector_base.940" = type { %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"**, %"class.std::__1::__compressed_pair.941" }
%"struct.spvtools::opt::DominatorTreeNode" = type { %"class.spvtools::opt::BasicBlock"*, %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::vector.939", i32, i32 }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::map.946" = type { %"class.std::__1::__tree.947" }
%"class.std::__1::__tree.947" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.948", %"class.std::__1::__compressed_pair.952" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.spvtools::opt::LoopDescriptor" = type { %"class.std::__1::vector.910", %"class.spvtools::opt::Loop", %"class.std::__1::unordered_map.1004", %"class.std::__1::vector.1028" }
%"class.std::__1::unordered_map.1004" = type { %"class.std::__1::__hash_table.1005" }
%"class.std::__1::__hash_table.1005" = type <{ %"class.std::__1::unique_ptr.1006", %"class.std::__1::__compressed_pair.1016", %"class.std::__1::__compressed_pair.1021", %"class.std::__1::__compressed_pair.1024", [4 x i8] }>
%"class.std::__1::unique_ptr.1006" = type { %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008", %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { %"struct.std::__1::__hash_node_base.1009"** }
%"struct.std::__1::__hash_node_base.1009" = type { %"struct.std::__1::__hash_node_base.1009"* }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"class.std::__1::__bucket_list_deallocator.1011" }
%"class.std::__1::__bucket_list_deallocator.1011" = type { %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"struct.std::__1::__hash_node_base.1009" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.1028" = type { %"class.std::__1::__vector_base.1029" }
%"class.std::__1::__vector_base.1029" = type { %"struct.std::__1::pair.1030"*, %"struct.std::__1::pair.1030"*, %"class.std::__1::__compressed_pair.1037" }
%"struct.std::__1::pair.1030" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::unique_ptr.1031" }
%"class.std::__1::unique_ptr.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.1033" }
%"struct.std::__1::__compressed_pair_elem.1033" = type { %"class.spvtools::opt::Loop"* }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.1038" }
%"struct.std::__1::__compressed_pair_elem.1038" = type { %"struct.std::__1::pair.1030"* }
%"struct.std::__1::default_delete.57" = type { i8 }
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.322", i32 }>
%"class.std::__1::function.955" = type { %"class.std::__1::__function::__policy_func.959" }
%"class.std::__1::__function::__policy_func.959" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.960", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.960" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::__tree_node.1117" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1118" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.1118" = type { %"struct.std::__1::pair.1116" }
%"struct.std::__1::pair.1116" = type { i32, %"struct.spvtools::opt::DominatorTreeNode" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__hash_node.1195" = type <{ %"struct.std::__1::__hash_node_base.922", i64, i32, [4 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.968" }
%"struct.std::__1::__split_buffer" = type { %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.std::__1::__compressed_pair.963" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.964" }
%"struct.std::__1::__compressed_pair_elem.964" = type { %"class.spvtools::opt::BasicBlock"*** }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"class.std::__1::function.972" = type { %"class.std::__1::__function::__policy_func.976" }
%"class.std::__1::__function::__policy_func.976" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.977", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.977" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::function.1168" = type { %"class.std::__1::__function::__policy_func.1172" }
%"class.std::__1::__function::__policy_func.1172" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1173", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1173" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::function.979" = type { %"class.std::__1::__function::__policy_func.983" }
%"class.std::__1::__function::__policy_func.983" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.984", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.984" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::vector.986" = type { %"class.std::__1::__vector_base.987" }
%"class.std::__1::__vector_base.987" = type { %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"**, %"class.std::__1::__compressed_pair.988" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.989" }
%"struct.std::__1::__compressed_pair_elem.989" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::function.993" = type { %"class.std::__1::__function::__policy_func.997" }
%"class.std::__1::__function::__policy_func.997" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.998", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.998" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1000" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__tree_node.1178" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::PostOrderTreeDFIterator" = type { %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::stack.1042" }
%"class.std::__1::stack.1042" = type { %"class.std::__1::deque.1043" }
%"class.std::__1::deque.1043" = type { %"class.std::__1::__deque_base.1044" }
%"class.std::__1::__deque_base.1044" = type { %"struct.std::__1::__split_buffer.1045", i64, %"class.std::__1::__compressed_pair.1052" }
%"struct.std::__1::__split_buffer.1045" = type { %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"**, %"class.std::__1::__compressed_pair.1047" }
%"struct.std::__1::pair.1046" = type { %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::__wrap_iter.1089" }
%"class.std::__1::__wrap_iter.1089" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"struct.std::__1::pair.1046"** }
%"class.std::__1::__compressed_pair.1052" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.spvtools::opt::TreeDFIterator" = type { %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::stack.1042" }
%"struct.std::__1::pair.1060" = type { i32, %"class.spvtools::opt::Loop"* }
%"class.spvtools::opt::analysis::IntConstant" = type { %"class.spvtools::opt::analysis::ScalarConstant" }
%"class.spvtools::opt::analysis::ScalarConstant" = type { %"class.spvtools::opt::analysis::Constant", %"class.std::__1::vector.324" }
%"class.std::__1::vector.1063" = type { %"class.std::__1::__vector_base.1064" }
%"class.std::__1::__vector_base.1064" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.1065" }
%"class.std::__1::__compressed_pair.1065" = type { %"struct.std::__1::__compressed_pair_elem.1066" }
%"struct.std::__1::__compressed_pair_elem.1066" = type { %"class.spvtools::opt::Instruction"** }
%"class.spvtools::opt::PostOrderTreeDFIterator.1070" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::stack.1071" }
%"class.std::__1::stack.1071" = type { %"class.std::__1::deque.1072" }
%"class.std::__1::deque.1072" = type { %"class.std::__1::__deque_base.1073" }
%"class.std::__1::__deque_base.1073" = type { %"struct.std::__1::__split_buffer.1074", i64, %"class.std::__1::__compressed_pair.1081" }
%"struct.std::__1::__split_buffer.1074" = type { %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"**, %"class.std::__1::__compressed_pair.1076" }
%"struct.std::__1::pair.1075" = type { %"class.spvtools::opt::Loop"*, %"class.std::__1::__wrap_iter.1056" }
%"class.std::__1::__wrap_iter.1056" = type { %"class.spvtools::opt::Loop"** }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"struct.std::__1::pair.1075"** }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::tuple.1164" = type { %"struct.std::__1::__tuple_impl.1165" }
%"struct.std::__1::__tuple_impl.1165" = type { %"class.std::__1::__tuple_leaf.1166" }
%"class.std::__1::__tuple_leaf.1166" = type { i32* }
%"class.std::__1::tuple.1138" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1091" }
%"struct.std::__1::pair.1091" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__tree_node.1106" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1107" }
%"struct.std::__1::pair.1107" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::function.1124" = type { %"class.std::__1::__function::__policy_func.1128" }
%"class.std::__1::__function::__policy_func.1128" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1129", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1129" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::tuple.1151" = type { %"struct.std::__1::__tuple_impl.1152" }
%"struct.std::__1::__tuple_impl.1152" = type { %"class.std::__1::__tuple_leaf.1153" }
%"class.std::__1::__tuple_leaf.1153" = type { i32* }
%"struct.std::__1::__split_buffer.1182" = type { %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"**, %"class.std::__1::__compressed_pair.1183" }
%"class.std::__1::__compressed_pair.1183" = type { %"struct.std::__1::__compressed_pair_elem.1048", %"struct.std::__1::__compressed_pair_elem.1184" }
%"struct.std::__1::__compressed_pair_elem.1184" = type { %"class.std::__1::allocator.1050"* }
%"class.std::__1::allocator.1050" = type { i8 }
%"class.std::__1::unique_ptr.1209" = type { %"class.std::__1::__compressed_pair.1210" }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211", %"struct.std::__1::__compressed_pair_elem.1212" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"struct.std::__1::__hash_node.1206"* }
%"struct.std::__1::__hash_node.1206" = type { %"struct.std::__1::__hash_node_base.1009", i64, %"struct.std::__1::__hash_value_type.1205" }
%"struct.std::__1::__hash_value_type.1205" = type { %"struct.std::__1::pair.1204" }
%"struct.std::__1::pair.1204" = type { i32, %"class.spvtools::opt::Loop"* }
%"struct.std::__1::__compressed_pair_elem.1212" = type { %"class.std::__1::__hash_node_destructor.1213" }
%"class.std::__1::__hash_node_destructor.1213" = type <{ %"class.std::__1::allocator.1019"*, i8, [7 x i8] }>
%"class.std::__1::allocator.1019" = type { i8 }
%"class.std::__1::unique_ptr.1196" = type { %"class.std::__1::__compressed_pair.1197" }
%"class.std::__1::__compressed_pair.1197" = type { %"struct.std::__1::__compressed_pair_elem.1198", %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1198" = type { %"struct.std::__1::__hash_node.1195"* }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"class.std::__1::__hash_node_destructor.1200" }
%"class.std::__1::__hash_node_destructor.1200" = type <{ %"class.std::__1::allocator.932"*, i8, [7 x i8] }>
%"class.std::__1::allocator.932" = type { i8 }
%"struct.std::__1::__split_buffer.1218" = type { %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"**, %"class.std::__1::__compressed_pair.1219" }
%"class.std::__1::__compressed_pair.1219" = type { %"struct.std::__1::__compressed_pair_elem.1077", %"struct.std::__1::__compressed_pair_elem.1220" }
%"struct.std::__1::__compressed_pair_elem.1220" = type { %"class.std::__1::allocator.1079"* }
%"class.std::__1::allocator.1079" = type { i8 }
%"struct.std::__1::__split_buffer.1231" = type { %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"***, %"class.std::__1::__compressed_pair.1232" }
%"class.std::__1::__compressed_pair.1232" = type { %"struct.std::__1::__compressed_pair_elem.964", %"struct.std::__1::__compressed_pair_elem.1233" }
%"struct.std::__1::__compressed_pair_elem.1233" = type { %"class.std::__1::allocator.966"* }
%"class.std::__1::allocator.966" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.1244" = type { %class.anon.978 }
%class.anon.978 = type { %"class.std::__1::unordered_set.917"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Loop"* }
%"class.std::__1::__function::__default_alloc_func.1246" = type { %class.anon.985 }
%class.anon.985 = type { %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::analysis::DefUseManager"**, i8* }

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZNSt3__16vectorIPN8spvtools3opt4LoopENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE = comdat any

$_ZN8spvtools3opt14TreeDFIteratorINS0_17DominatorTreeNodeEE14MoveToNextNodeEv = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE = comdat any

$_ZNSt3__113__vector_baseINS_4pairIPN8spvtools3opt4LoopENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_9allocatorISA_EEE5clearEv = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_ = comdat any

$_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_ = comdat any

$_ZNSt3__15dequeIPKN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPPKN8spvtools3opt10BasicBlockENS_9allocatorIS6_EEE9push_backEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPKN8spvtools3opt10BasicBlockENS_9allocatorIS6_EEE10push_frontEOS6_ = comdat any

$_ZNSt3__114__split_bufferIPPKN8spvtools3opt10BasicBlockERNS_9allocatorIS6_EEE10push_frontERKS6_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm = comdat any

$_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_17DominatorTreeNodeEE14MoveToNextNodeEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJNS_4pairIjS5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE = comdat any

$_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt4Loop17FindLoopPreheaderEPNS5_17DominatorAnalysisEE3$_0FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop13GetExitBlocksEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop7IsLCSSAEvE3$_2FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop7IsLCSSAEvE3$_2FbPNS5_11InstructionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop7IsLCSSAEvE3$_2FbPNS5_11InstructionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS5_9IRContextEPNS5_11InstructionEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS5_9IRContextEPNS5_11InstructionEE3$_3FvPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS5_9IRContextEPNS5_11InstructionEE3$_3FvPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNS_6vectorIPNS5_10BasicBlockENS_9allocatorIS9_EEEEbbE3$_4FvS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

@_ZN8spvtools3opt4LoopC1EPNS0_9IRContextEPNS0_17DominatorAnalysisEPNS0_10BasicBlockES7_S7_ = hidden unnamed_addr alias void (%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::DominatorAnalysis"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*), void (%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::DominatorAnalysis"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*)* @_ZN8spvtools3opt4LoopC2EPNS0_9IRContextEPNS0_17DominatorAnalysisEPNS0_10BasicBlockES7_S7_
@_ZN8spvtools3opt14LoopDescriptorC1EPNS0_9IRContextEPKNS0_8FunctionE = hidden unnamed_addr alias void (%"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*), void (%"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*)* @_ZN8spvtools3opt14LoopDescriptorC2EPNS0_9IRContextEPKNS0_8FunctionE
@_ZN8spvtools3opt14LoopDescriptorD1Ev = hidden unnamed_addr alias void (%"class.spvtools::opt::LoopDescriptor"*), void (%"class.spvtools::opt::LoopDescriptor"*)* @_ZN8spvtools3opt14LoopDescriptorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop25GetInductionStepOperationEPKNS0_11InstructionE(%"class.spvtools::opt::Loop"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 11
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %10, align 8
  %12 = tail call i8* @_Znwm(i64 104) #12
  %13 = bitcast i8* %12 to %"class.spvtools::opt::analysis::DefUseManager"*
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = getelementptr inbounds i8, i8* %12, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #13
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %12, i64 64
  %20 = getelementptr inbounds i8, i8* %12, i64 96
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %21, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %13, %"class.spvtools::opt::Module"* %11) #13
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6
  %23 = ptrtoint i8* %12 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %22, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr.1"* %22 to i64*
  store i64 %23, i64* %26, align 8
  %27 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %25, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %9
  %29 = bitcast %"class.std::__1::unique_ptr.1"* %22 to %"struct.std::__1::default_delete.57"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.57"* %29, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %25) #13
  br label %30

30:                                               ; preds = %28, %9
  %31 = load i32, i32* %5, align 8
  %32 = or i32 %31, 1
  store i32 %32, i32* %5, align 8
  br label %33

33:                                               ; preds = %2, %30
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %4, i64 0, i32 6, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %38 = bitcast %"struct.spvtools::opt::Operand"** %37 to i64*
  %39 = bitcast %"class.std::__1::vector.777"* %36 to i64*
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %42 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %44

44:                                               ; preds = %217, %33
  %45 = phi i32 [ 1, %33 ], [ %218, %217 ]
  %46 = load i64, i64* %38, align 8
  %47 = load i64, i64* %39, align 8
  %48 = sub i64 %46, %47
  %49 = sdiv exact i64 %48, 48
  %50 = load i8, i8* %40, align 4, !range !2
  %51 = icmp eq i8 %50, 0
  %52 = load i8, i8* %41, align 1, !range !2
  %53 = icmp eq i8 %52, 0
  %54 = select i1 %53, i32 1, i32 2
  %55 = xor i1 %53, true
  %56 = zext i1 %55 to i32
  %57 = select i1 %51, i32 %56, i32 %54
  %58 = trunc i64 %49 to i32
  %59 = sub i32 %58, %57
  %60 = icmp ult i32 %45, %59
  br i1 %60, label %61, label %288

61:                                               ; preds = %44
  %62 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 11
  %64 = load i32, i32* %63, align 8
  %65 = and i32 %64, 16
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %85

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %68, align 8
  %70 = tail call i8* @_Znwm(i64 400) #12
  %71 = bitcast i8* %70 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %71, %"class.spvtools::opt::Module"* %69) #13
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 15
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.210"* %73 to i64*
  store i64 %72, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::CFG"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %67
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %75) #13
  %79 = bitcast %"class.spvtools::opt::CFG"* %75 to i8*
  tail call void @_ZdlPv(i8* %79) #12
  br label %80

80:                                               ; preds = %78, %67
  %81 = load i32, i32* %63, align 8
  %82 = or i32 %81, 16
  store i32 %82, i32* %63, align 8
  %83 = load i8, i8* %40, align 4, !range !2
  %84 = load i8, i8* %41, align 1, !range !2
  br label %85

85:                                               ; preds = %61, %80
  %86 = phi i8 [ %52, %61 ], [ %84, %80 ]
  %87 = phi i8 [ %50, %61 ], [ %83, %80 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %62, i64 0, i32 15, i32 0, i32 0, i32 0
  %89 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %88, align 8
  %90 = icmp eq i8 %87, 0
  %91 = icmp eq i8 %86, 0
  %92 = select i1 %91, i32 1, i32 2
  %93 = xor i1 %91, true
  %94 = zext i1 %93 to i32
  %95 = select i1 %90, i32 %94, i32 %92
  %96 = add i32 %95, %45
  %97 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %96) #13
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %89, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %150, label %102

102:                                              ; preds = %85
  %103 = tail call i64 @llvm.ctpop.i64(i64 %100) #13, !range !3
  %104 = icmp ugt i64 %103, 1
  br i1 %104, label %108, label %105

105:                                              ; preds = %102
  %106 = add i64 %100, 4294967295
  %107 = and i64 %106, %98
  br label %112

108:                                              ; preds = %102
  %109 = icmp ugt i64 %100, %98
  br i1 %109, label %112, label %110

110:                                              ; preds = %108
  %111 = urem i64 %98, %100
  br label %112

112:                                              ; preds = %110, %108, %105
  %113 = phi i64 [ %107, %105 ], [ %111, %110 ], [ %98, %108 ]
  %114 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %89, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %114, align 8
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %115, i64 %113
  %117 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base.878"* %117, null
  br i1 %118, label %150, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %117, i64 0, i32 0
  %121 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.878"* %121, null
  br i1 %122, label %150, label %123

123:                                              ; preds = %119
  %124 = add i64 %100, -1
  br label %125

125:                                              ; preds = %146, %123
  %126 = phi %"struct.std::__1::__hash_node_base.878"* [ %121, %123 ], [ %148, %146 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %126, i64 1
  %128 = bitcast %"struct.std::__1::__hash_node_base.878"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, %98
  br i1 %130, label %141, label %131

131:                                              ; preds = %125
  br i1 %104, label %134, label %132

132:                                              ; preds = %131
  %133 = and i64 %129, %124
  br label %138

134:                                              ; preds = %131
  %135 = icmp ult i64 %129, %100
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %129, %100
  br label %138

138:                                              ; preds = %136, %134, %132
  %139 = phi i64 [ %133, %132 ], [ %137, %136 ], [ %129, %134 ]
  %140 = icmp eq i64 %139, %113
  br i1 %140, label %146, label %150

141:                                              ; preds = %125
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %126, i64 2
  %143 = bitcast %"struct.std::__1::__hash_node_base.878"* %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, %97
  br i1 %145, label %151, label %146

146:                                              ; preds = %141, %138
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %126, i64 0, i32 0
  %148 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %147, align 8
  %149 = icmp eq %"struct.std::__1::__hash_node_base.878"* %148, null
  br i1 %149, label %150, label %125

150:                                              ; preds = %119, %112, %85, %146, %138
  tail call void @abort() #14
  unreachable

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %126, i64 3
  %153 = bitcast %"struct.std::__1::__hash_node_base.878"* %152 to %"class.spvtools::opt::BasicBlock"**
  %154 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %153, align 8
  %155 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %154, i64 0, i32 1, i32 0, i32 0, i32 0
  %156 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %155, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 4
  %158 = load i8, i8* %157, align 1, !range !2
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %165, label %160

160:                                              ; preds = %151
  %161 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 3
  %162 = load i8, i8* %161, align 4, !range !2
  %163 = zext i8 %162 to i32
  %164 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %156, i32 %163) #13
  br label %165

165:                                              ; preds = %160, %151
  %166 = phi i32 [ %164, %160 ], [ 0, %151 ]
  %167 = zext i32 %166 to i64
  %168 = load i64, i64* %42, align 8
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %217, label %170

170:                                              ; preds = %165
  %171 = tail call i64 @llvm.ctpop.i64(i64 %168) #13, !range !3
  %172 = icmp ugt i64 %171, 1
  br i1 %172, label %176, label %173

173:                                              ; preds = %170
  %174 = add i64 %168, 4294967295
  %175 = and i64 %174, %167
  br label %180

176:                                              ; preds = %170
  %177 = icmp ugt i64 %168, %167
  br i1 %177, label %180, label %178

178:                                              ; preds = %176
  %179 = urem i64 %167, %168
  br label %180

180:                                              ; preds = %178, %176, %173
  %181 = phi i64 [ %175, %173 ], [ %179, %178 ], [ %167, %176 ]
  %182 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %43, align 8
  %183 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %182, i64 %181
  %184 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %183, align 8
  %185 = icmp eq %"struct.std::__1::__hash_node_base.922"* %184, null
  br i1 %185, label %217, label %186

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %184, i64 0, i32 0
  %188 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %187, align 8
  %189 = icmp eq %"struct.std::__1::__hash_node_base.922"* %188, null
  br i1 %189, label %217, label %190

190:                                              ; preds = %186
  %191 = add i64 %168, -1
  br label %192

192:                                              ; preds = %213, %190
  %193 = phi %"struct.std::__1::__hash_node_base.922"* [ %188, %190 ], [ %215, %213 ]
  %194 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %193, i64 1
  %195 = bitcast %"struct.std::__1::__hash_node_base.922"* %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = icmp eq i64 %196, %167
  br i1 %197, label %208, label %198

198:                                              ; preds = %192
  br i1 %172, label %201, label %199

199:                                              ; preds = %198
  %200 = and i64 %196, %191
  br label %205

201:                                              ; preds = %198
  %202 = icmp ult i64 %196, %168
  br i1 %202, label %205, label %203

203:                                              ; preds = %201
  %204 = urem i64 %196, %168
  br label %205

205:                                              ; preds = %203, %201, %199
  %206 = phi i64 [ %200, %199 ], [ %204, %203 ], [ %196, %201 ]
  %207 = icmp eq i64 %206, %181
  br i1 %207, label %213, label %217

208:                                              ; preds = %192
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %193, i64 2
  %210 = bitcast %"struct.std::__1::__hash_node_base.922"* %209 to i32*
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %211, %166
  br i1 %212, label %219, label %213

213:                                              ; preds = %208, %205
  %214 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %193, i64 0, i32 0
  %215 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %214, align 8
  %216 = icmp eq %"struct.std::__1::__hash_node_base.922"* %215, null
  br i1 %216, label %217, label %192

217:                                              ; preds = %213, %205, %180, %165, %186
  %218 = add i32 %45, 2
  br label %44

219:                                              ; preds = %208
  %220 = add i32 %45, -1
  %221 = load i8, i8* %40, align 4, !range !2
  %222 = icmp eq i8 %221, 0
  %223 = load i8, i8* %41, align 1, !range !2
  %224 = icmp eq i8 %223, 0
  %225 = select i1 %224, i32 1, i32 2
  %226 = xor i1 %224, true
  %227 = zext i1 %226 to i32
  %228 = select i1 %222, i32 %227, i32 %225
  %229 = add i32 %220, %228
  %230 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %229) #13
  %231 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %35, i32 %230) #13
  %232 = icmp eq %"class.spvtools::opt::Instruction"* %231, null
  br i1 %232, label %288, label %233

233:                                              ; preds = %219
  %234 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %231, i64 0, i32 2
  %235 = load i32, i32* %234, align 8
  switch i32 %235, label %288 [
    i32 130, label %236
    i32 128, label %236
  ]

236:                                              ; preds = %233, %233
  %237 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %231, i64 0, i32 3
  %238 = load i8, i8* %237, align 4, !range !2
  %239 = icmp eq i8 %238, 0
  %240 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %231, i64 0, i32 4
  %241 = load i8, i8* %240, align 1, !range !2
  %242 = icmp eq i8 %241, 0
  %243 = select i1 %242, i32 1, i32 2
  %244 = xor i1 %242, true
  %245 = zext i1 %244 to i32
  %246 = select i1 %239, i32 %245, i32 %243
  %247 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %231, i32 %246) #13
  %248 = load i8, i8* %237, align 4, !range !2
  %249 = icmp eq i8 %248, 0
  %250 = load i8, i8* %240, align 1, !range !2
  %251 = icmp eq i8 %250, 0
  %252 = select i1 %251, i32 1, i32 2
  %253 = xor i1 %251, true
  %254 = zext i1 %253 to i32
  %255 = select i1 %249, i32 %254, i32 %252
  %256 = add nuw nsw i32 %255, 1
  %257 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %231, i32 %256) #13
  %258 = load i8, i8* %41, align 1, !range !2
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %264, label %260

260:                                              ; preds = %236
  %261 = load i8, i8* %40, align 4, !range !2
  %262 = zext i8 %261 to i32
  %263 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %262) #13
  br label %264

264:                                              ; preds = %236, %260
  %265 = phi i32 [ %263, %260 ], [ 0, %236 ]
  %266 = icmp eq i32 %247, %265
  br i1 %266, label %277, label %267

267:                                              ; preds = %264
  %268 = load i8, i8* %41, align 1, !range !2
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %274, label %270

270:                                              ; preds = %267
  %271 = load i8, i8* %40, align 4, !range !2
  %272 = zext i8 %271 to i32
  %273 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %272) #13
  br label %274

274:                                              ; preds = %267, %270
  %275 = phi i32 [ %273, %270 ], [ 0, %267 ]
  %276 = icmp eq i32 %257, %275
  br i1 %276, label %277, label %288

277:                                              ; preds = %274, %264
  %278 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %35, i32 %247) #13
  %279 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %278, i64 0, i32 2
  %280 = load i32, i32* %279, align 8
  %281 = icmp eq i32 %280, 43
  br i1 %281, label %287, label %282

282:                                              ; preds = %277
  %283 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %35, i32 %257) #13
  %284 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %283, i64 0, i32 2
  %285 = load i32, i32* %284, align 8
  %286 = icmp eq i32 %285, 43
  br i1 %286, label %287, label %288

287:                                              ; preds = %282, %277
  br label %288

288:                                              ; preds = %44, %233, %287, %274, %282, %219
  %289 = phi %"class.spvtools::opt::Instruction"* [ null, %219 ], [ %231, %287 ], [ null, %274 ], [ null, %282 ], [ null, %233 ], [ null, %44 ]
  ret %"class.spvtools::opt::Instruction"* %289
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt4Loop17IsSupportedStepOpE6SpvOp_(%"class.spvtools::opt::Loop"* nocapture readnone, i32) local_unnamed_addr #3 align 2 {
  switch i32 %1, label %3 [
    i32 130, label %4
    i32 128, label %4
  ]

3:                                                ; preds = %2
  br label %4

4:                                                ; preds = %2, %2, %3
  %5 = phi i1 [ false, %3 ], [ true, %2 ], [ true, %2 ]
  ret i1 %5
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt4Loop20IsSupportedConditionE6SpvOp_(%"class.spvtools::opt::Loop"* nocapture readnone, i32) local_unnamed_addr #3 align 2 {
  %3 = add i32 %1, -172
  %4 = icmp ult i32 %3, 8
  ret i1 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZN8spvtools3opt4Loop25GetResidualConditionValueE6SpvOp_llmm(i32, i64, i64, i64, i64) local_unnamed_addr #3 align 2 {
  %6 = urem i64 %3, %4
  %7 = mul i64 %6, %2
  %8 = add i64 %7, %1
  switch i32 %0, label %13 [
    i32 175, label %9
    i32 174, label %9
    i32 179, label %11
    i32 178, label %11
  ]

9:                                                ; preds = %5, %5
  %10 = add nsw i64 %8, -1
  br label %13

11:                                               ; preds = %5, %5
  %12 = add nsw i64 %8, 1
  br label %13

13:                                               ; preds = %5, %11, %9
  %14 = phi i64 [ %8, %5 ], [ %12, %11 ], [ %10, %9 ]
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop16GetConditionInstEv(%"class.spvtools::opt::Loop"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* %0)
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %2, null
  br i1 %3, label %63, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %6 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %5, align 8, !noalias !4
  %7 = icmp eq %"class.spvtools::opt::Instruction"* %6, null
  br i1 %7, label %63, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 250
  br i1 %11, label %12, label %63

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 11
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %43

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %20, align 8
  %22 = tail call i8* @_Znwm(i64 104) #12
  %23 = bitcast i8* %22 to %"class.spvtools::opt::analysis::DefUseManager"*
  %24 = getelementptr inbounds i8, i8* %22, i64 32
  %25 = bitcast i8* %24 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %25, align 4
  %26 = getelementptr inbounds i8, i8* %22, i64 48
  %27 = getelementptr inbounds i8, i8* %22, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %28 = bitcast i8* %27 to i8**
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %22, i64 64
  %30 = getelementptr inbounds i8, i8* %22, i64 96
  %31 = bitcast i8* %30 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %31, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %23, %"class.spvtools::opt::Module"* %21) #13
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 6
  %33 = ptrtoint i8* %22 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %34, align 8
  %36 = bitcast %"class.std::__1::unique_ptr.1"* %32 to i64*
  store i64 %33, i64* %36, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %35, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %19
  %39 = bitcast %"class.std::__1::unique_ptr.1"* %32 to %"struct.std::__1::default_delete.57"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.57"* %39, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %35) #13
  br label %40

40:                                               ; preds = %38, %19
  %41 = load i32, i32* %15, align 8
  %42 = or i32 %41, 1
  store i32 %42, i32* %15, align 8
  br label %43

43:                                               ; preds = %12, %40
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %14, i64 0, i32 6, i32 0, i32 0, i32 0
  %45 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %44, align 8
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 3
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp eq i8 %47, 0
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 4
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  %52 = select i1 %51, i32 1, i32 2
  %53 = xor i1 %51, true
  %54 = zext i1 %53 to i32
  %55 = select i1 %48, i32 %54, i32 %52
  %56 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %6, i32 %55) #13
  %57 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %45, i32 %56) #13
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %57, i64 0, i32 2
  %59 = load i32, i32* %58, align 8
  %60 = add i32 %59, -172
  %61 = icmp ult i32 %60, 8
  %62 = select i1 %61, %"class.spvtools::opt::Instruction"* %57, %"class.spvtools::opt::Instruction"* null
  br label %63

63:                                               ; preds = %43, %8, %4, %1
  %64 = phi %"class.spvtools::opt::Instruction"* [ null, %1 ], [ %62, %43 ], [ null, %8 ], [ null, %4 ]
  ret %"class.spvtools::opt::Instruction"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt4Loop18FindConditionBlockEv(%"class.spvtools::opt::Loop"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 3
  %3 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2, align 8
  %4 = icmp eq %"class.spvtools::opt::BasicBlock"* %3, null
  br i1 %4, label %312, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %29

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 400) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %16, %"class.spvtools::opt::Module"* %14) #13
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 15
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.210"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::CFG"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %12
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %20) #13
  %24 = bitcast %"class.spvtools::opt::CFG"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %12
  %26 = load i32, i32* %8, align 8
  %27 = or i32 %26, 16
  store i32 %27, i32* %8, align 8
  %28 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2, align 8
  br label %29

29:                                               ; preds = %5, %25
  %30 = phi %"class.spvtools::opt::BasicBlock"* [ %3, %5 ], [ %28, %25 ]
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 15, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %30, i64 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 4
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 3
  %40 = load i8, i8* %39, align 4, !range !2
  %41 = zext i8 %40 to i32
  %42 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %34, i32 %41) #13
  br label %43

43:                                               ; preds = %29, %38
  %44 = phi i32 [ %42, %38 ], [ 0, %29 ]
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %32, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %97, label %49

49:                                               ; preds = %43
  %50 = tail call i64 @llvm.ctpop.i64(i64 %47) #13, !range !3
  %51 = icmp ugt i64 %50, 1
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  %53 = add i64 %47, 4294967295
  %54 = and i64 %53, %45
  br label %59

55:                                               ; preds = %49
  %56 = icmp ugt i64 %47, %45
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %45, %47
  br label %59

59:                                               ; preds = %57, %55, %52
  %60 = phi i64 [ %54, %52 ], [ %58, %57 ], [ %45, %55 ]
  %61 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %32, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base.854"**, %"struct.std::__1::__hash_node_base.854"*** %61, align 8
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %62, i64 %60
  %64 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.854"* %64, null
  br i1 %65, label %97, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %64, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.854"* %68, null
  br i1 %69, label %97, label %70

70:                                               ; preds = %66
  %71 = add i64 %47, -1
  br label %72

72:                                               ; preds = %93, %70
  %73 = phi %"struct.std::__1::__hash_node_base.854"* [ %68, %70 ], [ %95, %93 ]
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %73, i64 1
  %75 = bitcast %"struct.std::__1::__hash_node_base.854"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = icmp eq i64 %76, %45
  br i1 %77, label %88, label %78

78:                                               ; preds = %72
  br i1 %51, label %81, label %79

79:                                               ; preds = %78
  %80 = and i64 %76, %71
  br label %85

81:                                               ; preds = %78
  %82 = icmp ult i64 %76, %47
  br i1 %82, label %85, label %83

83:                                               ; preds = %81
  %84 = urem i64 %76, %47
  br label %85

85:                                               ; preds = %83, %81, %79
  %86 = phi i64 [ %80, %79 ], [ %84, %83 ], [ %76, %81 ]
  %87 = icmp eq i64 %86, %60
  br i1 %87, label %93, label %97

88:                                               ; preds = %72
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %73, i64 2
  %90 = bitcast %"struct.std::__1::__hash_node_base.854"* %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %91, %44
  br i1 %92, label %98, label %93

93:                                               ; preds = %88, %85
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %73, i64 0, i32 0
  %95 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.854"* %95, null
  br i1 %96, label %97, label %72

97:                                               ; preds = %93, %85, %66, %59, %43
  tail call void @abort() #14
  unreachable

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %73, i64 3
  %100 = bitcast %"struct.std::__1::__hash_node_base.854"* %99 to i32**
  %101 = load i32*, i32** %100, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %73, i64 4
  %103 = bitcast %"struct.std::__1::__hash_node_base.854"* %102 to i32**
  %104 = load i32*, i32** %103, align 8
  %105 = icmp eq i32* %101, %104
  br i1 %105, label %312, label %106

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  %110 = tail call i64 @llvm.ctpop.i64(i64 %108) #13, !range !3
  %111 = icmp ugt i64 %110, 1
  %112 = add i64 %108, 4294967295
  %113 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = add i64 %108, -1
  br label %115

115:                                              ; preds = %106, %164
  %116 = phi i32 [ 0, %106 ], [ %165, %164 ]
  %117 = phi i32* [ %101, %106 ], [ %166, %164 ]
  %118 = load i32, i32* %117, align 4
  %119 = zext i32 %118 to i64
  br i1 %109, label %164, label %120

120:                                              ; preds = %115
  br i1 %111, label %123, label %121

121:                                              ; preds = %120
  %122 = and i64 %112, %119
  br label %127

123:                                              ; preds = %120
  %124 = icmp ugt i64 %108, %119
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = urem i64 %119, %108
  br label %127

127:                                              ; preds = %125, %123, %121
  %128 = phi i64 [ %122, %121 ], [ %126, %125 ], [ %119, %123 ]
  %129 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %113, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %129, i64 %128
  %131 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.922"* %131, null
  br i1 %132, label %164, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %131, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.922"* %135, null
  br i1 %136, label %164, label %137

137:                                              ; preds = %133, %158
  %138 = phi %"struct.std::__1::__hash_node_base.922"* [ %160, %158 ], [ %135, %133 ]
  %139 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %138, i64 1
  %140 = bitcast %"struct.std::__1::__hash_node_base.922"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = icmp eq i64 %141, %119
  br i1 %142, label %153, label %143

143:                                              ; preds = %137
  br i1 %111, label %146, label %144

144:                                              ; preds = %143
  %145 = and i64 %141, %114
  br label %150

146:                                              ; preds = %143
  %147 = icmp ult i64 %141, %108
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = urem i64 %141, %108
  br label %150

150:                                              ; preds = %148, %146, %144
  %151 = phi i64 [ %145, %144 ], [ %149, %148 ], [ %141, %146 ]
  %152 = icmp eq i64 %151, %128
  br i1 %152, label %158, label %164

153:                                              ; preds = %137
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %138, i64 2
  %155 = bitcast %"struct.std::__1::__hash_node_base.922"* %154 to i32*
  %156 = load i32, i32* %155, align 4
  %157 = icmp eq i32 %156, %118
  br i1 %157, label %162, label %158

158:                                              ; preds = %153, %150
  %159 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %138, i64 0, i32 0
  %160 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %159, align 8
  %161 = icmp eq %"struct.std::__1::__hash_node_base.922"* %160, null
  br i1 %161, label %164, label %137

162:                                              ; preds = %153
  %163 = icmp eq i32 %116, 0
  br i1 %163, label %164, label %312

164:                                              ; preds = %158, %150, %133, %115, %127, %162
  %165 = phi i32 [ %118, %162 ], [ %116, %127 ], [ %116, %115 ], [ %116, %133 ], [ %116, %150 ], [ %116, %158 ]
  %166 = getelementptr inbounds i32, i32* %117, i64 1
  %167 = icmp eq i32* %166, %104
  br i1 %167, label %168, label %115

168:                                              ; preds = %164
  %169 = icmp eq i32 %165, 0
  br i1 %169, label %312, label %170

170:                                              ; preds = %168
  %171 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %172 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 11
  %173 = load i32, i32* %172, align 8
  %174 = and i32 %173, 16
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %192

176:                                              ; preds = %170
  %177 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 4, i32 0, i32 0, i32 0
  %178 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %177, align 8
  %179 = tail call i8* @_Znwm(i64 400) #12
  %180 = bitcast i8* %179 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %180, %"class.spvtools::opt::Module"* %178) #13
  %181 = ptrtoint i8* %179 to i64
  %182 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 15
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %182, i64 0, i32 0, i32 0, i32 0
  %184 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %183, align 8
  %185 = bitcast %"class.std::__1::unique_ptr.210"* %182 to i64*
  store i64 %181, i64* %185, align 8
  %186 = icmp eq %"class.spvtools::opt::CFG"* %184, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %176
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %184) #13
  %188 = bitcast %"class.spvtools::opt::CFG"* %184 to i8*
  tail call void @_ZdlPv(i8* %188) #12
  br label %189

189:                                              ; preds = %187, %176
  %190 = load i32, i32* %172, align 8
  %191 = or i32 %190, 16
  store i32 %191, i32* %172, align 8
  br label %192

192:                                              ; preds = %170, %189
  %193 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %171, i64 0, i32 15, i32 0, i32 0, i32 0
  %194 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %193, align 8
  %195 = zext i32 %165 to i64
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %194, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %197 = load i64, i64* %196, align 8
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %247, label %199

199:                                              ; preds = %192
  %200 = tail call i64 @llvm.ctpop.i64(i64 %197) #13, !range !3
  %201 = icmp ugt i64 %200, 1
  br i1 %201, label %205, label %202

202:                                              ; preds = %199
  %203 = add i64 %197, 4294967295
  %204 = and i64 %203, %195
  br label %209

205:                                              ; preds = %199
  %206 = icmp ugt i64 %197, %195
  br i1 %206, label %209, label %207

207:                                              ; preds = %205
  %208 = urem i64 %195, %197
  br label %209

209:                                              ; preds = %207, %205, %202
  %210 = phi i64 [ %204, %202 ], [ %208, %207 ], [ %195, %205 ]
  %211 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %194, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %211, align 8
  %213 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %212, i64 %210
  %214 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %213, align 8
  %215 = icmp eq %"struct.std::__1::__hash_node_base.878"* %214, null
  br i1 %215, label %247, label %216

216:                                              ; preds = %209
  %217 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %214, i64 0, i32 0
  %218 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %217, align 8
  %219 = icmp eq %"struct.std::__1::__hash_node_base.878"* %218, null
  br i1 %219, label %247, label %220

220:                                              ; preds = %216
  %221 = add i64 %197, -1
  br label %222

222:                                              ; preds = %243, %220
  %223 = phi %"struct.std::__1::__hash_node_base.878"* [ %218, %220 ], [ %245, %243 ]
  %224 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %223, i64 1
  %225 = bitcast %"struct.std::__1::__hash_node_base.878"* %224 to i64*
  %226 = load i64, i64* %225, align 8
  %227 = icmp eq i64 %226, %195
  br i1 %227, label %238, label %228

228:                                              ; preds = %222
  br i1 %201, label %231, label %229

229:                                              ; preds = %228
  %230 = and i64 %226, %221
  br label %235

231:                                              ; preds = %228
  %232 = icmp ult i64 %226, %197
  br i1 %232, label %235, label %233

233:                                              ; preds = %231
  %234 = urem i64 %226, %197
  br label %235

235:                                              ; preds = %233, %231, %229
  %236 = phi i64 [ %230, %229 ], [ %234, %233 ], [ %226, %231 ]
  %237 = icmp eq i64 %236, %210
  br i1 %237, label %243, label %247

238:                                              ; preds = %222
  %239 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %223, i64 2
  %240 = bitcast %"struct.std::__1::__hash_node_base.878"* %239 to i32*
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %241, %165
  br i1 %242, label %248, label %243

243:                                              ; preds = %238, %235
  %244 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %223, i64 0, i32 0
  %245 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %244, align 8
  %246 = icmp eq %"struct.std::__1::__hash_node_base.878"* %245, null
  br i1 %246, label %247, label %222

247:                                              ; preds = %243, %235, %216, %209, %192
  tail call void @abort() #14
  unreachable

248:                                              ; preds = %238
  %249 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %223, i64 3
  %250 = bitcast %"struct.std::__1::__hash_node_base.878"* %249 to %"class.spvtools::opt::BasicBlock"**
  %251 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %250, align 8
  %252 = icmp eq %"class.spvtools::opt::BasicBlock"* %251, null
  br i1 %252, label %312, label %253

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %251, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %255 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %254, align 8, !noalias !7
  %256 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %255, i64 0, i32 2
  %257 = load i32, i32* %256, align 8
  %258 = icmp eq i32 %257, 250
  br i1 %258, label %259, label %312

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %255, i64 0, i32 3
  %261 = load i8, i8* %260, align 4, !range !2
  %262 = icmp eq i8 %261, 0
  %263 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %255, i64 0, i32 4
  %264 = load i8, i8* %263, align 1, !range !2
  %265 = icmp eq i8 %264, 0
  %266 = select i1 %265, i32 1, i32 2
  %267 = xor i1 %265, true
  %268 = zext i1 %267 to i32
  %269 = select i1 %262, i32 %268, i32 %266
  %270 = add nuw nsw i32 %269, 1
  %271 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %255, i32 %270) #13
  %272 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2, align 8
  %273 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %272, i64 0, i32 1, i32 0, i32 0, i32 0
  %274 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %273, align 8
  %275 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %274, i64 0, i32 4
  %276 = load i8, i8* %275, align 1, !range !2
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %283, label %278

278:                                              ; preds = %259
  %279 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %274, i64 0, i32 3
  %280 = load i8, i8* %279, align 4, !range !2
  %281 = zext i8 %280 to i32
  %282 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %274, i32 %281) #13
  br label %283

283:                                              ; preds = %259, %278
  %284 = phi i32 [ %282, %278 ], [ 0, %259 ]
  %285 = icmp eq i32 %271, %284
  br i1 %285, label %311, label %286

286:                                              ; preds = %283
  %287 = load i8, i8* %260, align 4, !range !2
  %288 = icmp eq i8 %287, 0
  %289 = load i8, i8* %263, align 1, !range !2
  %290 = icmp eq i8 %289, 0
  %291 = select i1 %290, i32 1, i32 2
  %292 = xor i1 %290, true
  %293 = zext i1 %292 to i32
  %294 = select i1 %288, i32 %293, i32 %291
  %295 = add nuw nsw i32 %294, 2
  %296 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %255, i32 %295) #13
  %297 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2, align 8
  %298 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %297, i64 0, i32 1, i32 0, i32 0, i32 0
  %299 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %298, align 8
  %300 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %299, i64 0, i32 4
  %301 = load i8, i8* %300, align 1, !range !2
  %302 = icmp eq i8 %301, 0
  br i1 %302, label %308, label %303

303:                                              ; preds = %286
  %304 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %299, i64 0, i32 3
  %305 = load i8, i8* %304, align 4, !range !2
  %306 = zext i8 %305 to i32
  %307 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %299, i32 %306) #13
  br label %308

308:                                              ; preds = %286, %303
  %309 = phi i32 [ %307, %303 ], [ 0, %286 ]
  %310 = icmp eq i32 %296, %309
  br i1 %310, label %311, label %312

311:                                              ; preds = %308, %283
  br label %312

312:                                              ; preds = %162, %98, %168, %253, %311, %308, %248, %1
  %313 = phi %"class.spvtools::opt::BasicBlock"* [ null, %1 ], [ null, %168 ], [ null, %248 ], [ null, %253 ], [ %251, %311 ], [ null, %308 ], [ null, %98 ], [ null, %162 ]
  ret %"class.spvtools::opt::BasicBlock"* %313
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt4Loop21GetInductionInitValueEPKNS0_11InstructionEPl(%"class.spvtools::opt::Loop"* nocapture readonly, %"class.spvtools::opt::Instruction"*, i64*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %34

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 104) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::analysis::DefUseManager"*
  %15 = getelementptr inbounds i8, i8* %13, i64 32
  %16 = bitcast i8* %15 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %16, align 4
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = getelementptr inbounds i8, i8* %13, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #13
  %19 = bitcast i8* %18 to i8**
  store i8* %17, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 64
  %21 = getelementptr inbounds i8, i8* %13, i64 96
  %22 = bitcast i8* %21 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %22, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %14, %"class.spvtools::opt::Module"* %12) #13
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6
  %24 = ptrtoint i8* %13 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %23, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr.1"* %23 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %26, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %10
  %30 = bitcast %"class.std::__1::unique_ptr.1"* %23 to %"struct.std::__1::default_delete.57"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.57"* %30, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %26) #13
  br label %31

31:                                               ; preds = %29, %10
  %32 = load i32, i32* %6, align 8
  %33 = or i32 %32, 1
  store i32 %33, i32* %6, align 8
  br label %34

34:                                               ; preds = %3, %31
  %35 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 6, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %39 = bitcast %"struct.spvtools::opt::Operand"** %38 to i64*
  %40 = bitcast %"class.std::__1::vector.777"* %37 to i64*
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %43 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %45

45:                                               ; preds = %234, %34
  %46 = phi %"class.spvtools::opt::Instruction"* [ null, %34 ], [ %235, %234 ]
  %47 = phi i32 [ 0, %34 ], [ %236, %234 ]
  %48 = load i64, i64* %39, align 8
  %49 = load i64, i64* %40, align 8
  %50 = sub i64 %48, %49
  %51 = sdiv exact i64 %50, 48
  %52 = load i8, i8* %41, align 4, !range !2
  %53 = icmp eq i8 %52, 0
  %54 = load i8, i8* %42, align 1, !range !2
  %55 = icmp eq i8 %54, 0
  %56 = select i1 %55, i32 1, i32 2
  %57 = xor i1 %55, true
  %58 = zext i1 %57 to i32
  %59 = select i1 %53, i32 %58, i32 %56
  %60 = trunc i64 %51 to i32
  %61 = sub i32 %60, %59
  %62 = icmp ult i32 %47, %61
  br i1 %62, label %65, label %63

63:                                               ; preds = %45
  %64 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  br i1 %64, label %348, label %237

65:                                               ; preds = %45
  %66 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %66, i64 0, i32 11
  %68 = load i32, i32* %67, align 8
  %69 = and i32 %68, 16
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %89

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %66, i64 0, i32 4, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %72, align 8
  %74 = tail call i8* @_Znwm(i64 400) #12
  %75 = bitcast i8* %74 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %75, %"class.spvtools::opt::Module"* %73) #13
  %76 = ptrtoint i8* %74 to i64
  %77 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %66, i64 0, i32 15
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %78, align 8
  %80 = bitcast %"class.std::__1::unique_ptr.210"* %77 to i64*
  store i64 %76, i64* %80, align 8
  %81 = icmp eq %"class.spvtools::opt::CFG"* %79, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %71
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %79) #13
  %83 = bitcast %"class.spvtools::opt::CFG"* %79 to i8*
  tail call void @_ZdlPv(i8* %83) #12
  br label %84

84:                                               ; preds = %82, %71
  %85 = load i32, i32* %67, align 8
  %86 = or i32 %85, 16
  store i32 %86, i32* %67, align 8
  %87 = load i8, i8* %41, align 4, !range !2
  %88 = load i8, i8* %42, align 1, !range !2
  br label %89

89:                                               ; preds = %65, %84
  %90 = phi i8 [ %54, %65 ], [ %88, %84 ]
  %91 = phi i8 [ %52, %65 ], [ %87, %84 ]
  %92 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %66, i64 0, i32 15, i32 0, i32 0, i32 0
  %93 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %92, align 8
  %94 = or i32 %47, 1
  %95 = icmp eq i8 %91, 0
  %96 = icmp eq i8 %90, 0
  %97 = select i1 %96, i32 1, i32 2
  %98 = xor i1 %96, true
  %99 = zext i1 %98 to i32
  %100 = select i1 %95, i32 %99, i32 %97
  %101 = add i32 %100, %94
  %102 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %101) #13
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %93, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %155, label %107

107:                                              ; preds = %89
  %108 = tail call i64 @llvm.ctpop.i64(i64 %105) #13, !range !3
  %109 = icmp ugt i64 %108, 1
  br i1 %109, label %113, label %110

110:                                              ; preds = %107
  %111 = add i64 %105, 4294967295
  %112 = and i64 %111, %103
  br label %117

113:                                              ; preds = %107
  %114 = icmp ugt i64 %105, %103
  br i1 %114, label %117, label %115

115:                                              ; preds = %113
  %116 = urem i64 %103, %105
  br label %117

117:                                              ; preds = %115, %113, %110
  %118 = phi i64 [ %112, %110 ], [ %116, %115 ], [ %103, %113 ]
  %119 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %93, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %119, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %120, i64 %118
  %122 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %121, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base.878"* %122, null
  br i1 %123, label %155, label %124

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %122, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.878"* %126, null
  br i1 %127, label %155, label %128

128:                                              ; preds = %124
  %129 = add i64 %105, -1
  br label %130

130:                                              ; preds = %151, %128
  %131 = phi %"struct.std::__1::__hash_node_base.878"* [ %126, %128 ], [ %153, %151 ]
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %131, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.878"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, %103
  br i1 %135, label %146, label %136

136:                                              ; preds = %130
  br i1 %109, label %139, label %137

137:                                              ; preds = %136
  %138 = and i64 %134, %129
  br label %143

139:                                              ; preds = %136
  %140 = icmp ult i64 %134, %105
  br i1 %140, label %143, label %141

141:                                              ; preds = %139
  %142 = urem i64 %134, %105
  br label %143

143:                                              ; preds = %141, %139, %137
  %144 = phi i64 [ %138, %137 ], [ %142, %141 ], [ %134, %139 ]
  %145 = icmp eq i64 %144, %118
  br i1 %145, label %151, label %155

146:                                              ; preds = %130
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %131, i64 2
  %148 = bitcast %"struct.std::__1::__hash_node_base.878"* %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = icmp eq i32 %149, %102
  br i1 %150, label %156, label %151

151:                                              ; preds = %146, %143
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %131, i64 0, i32 0
  %153 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %152, align 8
  %154 = icmp eq %"struct.std::__1::__hash_node_base.878"* %153, null
  br i1 %154, label %155, label %130

155:                                              ; preds = %124, %117, %89, %151, %143
  tail call void @abort() #14
  unreachable

156:                                              ; preds = %146
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %131, i64 3
  %158 = bitcast %"struct.std::__1::__hash_node_base.878"* %157 to %"class.spvtools::opt::BasicBlock"**
  %159 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %158, align 8
  %160 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %159, i64 0, i32 1, i32 0, i32 0, i32 0
  %161 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %160, align 8
  %162 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %161, i64 0, i32 4
  %163 = load i8, i8* %162, align 1, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %170, label %165

165:                                              ; preds = %156
  %166 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %161, i64 0, i32 3
  %167 = load i8, i8* %166, align 4, !range !2
  %168 = zext i8 %167 to i32
  %169 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %161, i32 %168) #13
  br label %170

170:                                              ; preds = %165, %156
  %171 = phi i32 [ %169, %165 ], [ 0, %156 ]
  %172 = zext i32 %171 to i64
  %173 = load i64, i64* %43, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %222, label %175

175:                                              ; preds = %170
  %176 = tail call i64 @llvm.ctpop.i64(i64 %173) #13, !range !3
  %177 = icmp ugt i64 %176, 1
  br i1 %177, label %181, label %178

178:                                              ; preds = %175
  %179 = add i64 %173, 4294967295
  %180 = and i64 %179, %172
  br label %185

181:                                              ; preds = %175
  %182 = icmp ugt i64 %173, %172
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = urem i64 %172, %173
  br label %185

185:                                              ; preds = %183, %181, %178
  %186 = phi i64 [ %180, %178 ], [ %184, %183 ], [ %172, %181 ]
  %187 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %44, align 8
  %188 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %187, i64 %186
  %189 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %188, align 8
  %190 = icmp eq %"struct.std::__1::__hash_node_base.922"* %189, null
  br i1 %190, label %222, label %191

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %189, i64 0, i32 0
  %193 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %192, align 8
  %194 = icmp eq %"struct.std::__1::__hash_node_base.922"* %193, null
  br i1 %194, label %222, label %195

195:                                              ; preds = %191
  %196 = add i64 %173, -1
  br label %197

197:                                              ; preds = %218, %195
  %198 = phi %"struct.std::__1::__hash_node_base.922"* [ %193, %195 ], [ %220, %218 ]
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %198, i64 1
  %200 = bitcast %"struct.std::__1::__hash_node_base.922"* %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = icmp eq i64 %201, %172
  br i1 %202, label %213, label %203

203:                                              ; preds = %197
  br i1 %177, label %206, label %204

204:                                              ; preds = %203
  %205 = and i64 %201, %196
  br label %210

206:                                              ; preds = %203
  %207 = icmp ult i64 %201, %173
  br i1 %207, label %210, label %208

208:                                              ; preds = %206
  %209 = urem i64 %201, %173
  br label %210

210:                                              ; preds = %208, %206, %204
  %211 = phi i64 [ %205, %204 ], [ %209, %208 ], [ %201, %206 ]
  %212 = icmp eq i64 %211, %186
  br i1 %212, label %218, label %222

213:                                              ; preds = %197
  %214 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %198, i64 2
  %215 = bitcast %"struct.std::__1::__hash_node_base.922"* %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = icmp eq i32 %216, %171
  br i1 %217, label %234, label %218

218:                                              ; preds = %213, %210
  %219 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %198, i64 0, i32 0
  %220 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %219, align 8
  %221 = icmp eq %"struct.std::__1::__hash_node_base.922"* %220, null
  br i1 %221, label %222, label %197

222:                                              ; preds = %218, %210, %185, %170, %191
  %223 = load i8, i8* %41, align 4, !range !2
  %224 = icmp eq i8 %223, 0
  %225 = load i8, i8* %42, align 1, !range !2
  %226 = icmp eq i8 %225, 0
  %227 = select i1 %226, i32 1, i32 2
  %228 = xor i1 %226, true
  %229 = zext i1 %228 to i32
  %230 = select i1 %224, i32 %229, i32 %227
  %231 = add i32 %230, %47
  %232 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %231) #13
  %233 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %36, i32 %232) #13
  br label %234

234:                                              ; preds = %213, %222
  %235 = phi %"class.spvtools::opt::Instruction"* [ %233, %222 ], [ %46, %213 ]
  %236 = add i32 %47, 2
  br label %45

237:                                              ; preds = %63
  %238 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %239 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %238, i64 0, i32 11
  %240 = load i32, i32* %239, align 8
  %241 = and i32 %240, 16384
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %257

243:                                              ; preds = %237
  %244 = tail call i8* @_Znwm(i64 136) #12
  %245 = bitcast i8* %244 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %245, %"class.spvtools::opt::IRContext"* %238) #13
  %246 = ptrtoint i8* %244 to i64
  %247 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %238, i64 0, i32 19
  %248 = getelementptr inbounds %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.261"* %247, i64 0, i32 0, i32 0, i32 0
  %249 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %248, align 8
  %250 = bitcast %"class.std::__1::unique_ptr.261"* %247 to i64*
  store i64 %246, i64* %250, align 8
  %251 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %249, null
  br i1 %251, label %254, label %252

252:                                              ; preds = %243
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %249) #13
  %253 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %249 to i8*
  tail call void @_ZdlPv(i8* %253) #12
  br label %254

254:                                              ; preds = %252, %243
  %255 = load i32, i32* %239, align 8
  %256 = or i32 %255, 16384
  store i32 %256, i32* %239, align 8
  br label %257

257:                                              ; preds = %237, %254
  %258 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %238, i64 0, i32 19, i32 0, i32 0, i32 0
  %259 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %258, align 8
  %260 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 4
  %261 = load i8, i8* %260, align 1, !range !2
  %262 = icmp eq i8 %261, 0
  br i1 %262, label %268, label %263

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 3
  %265 = load i8, i8* %264, align 4, !range !2
  %266 = zext i8 %265 to i32
  %267 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %46, i32 %266) #13
  br label %268

268:                                              ; preds = %257, %263
  %269 = phi i32 [ %267, %263 ], [ 0, %257 ]
  %270 = zext i32 %269 to i64
  %271 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %259, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %272 = load i64, i64* %271, align 8
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %348, label %274

274:                                              ; preds = %268
  %275 = tail call i64 @llvm.ctpop.i64(i64 %272) #13, !range !3
  %276 = icmp ugt i64 %275, 1
  br i1 %276, label %280, label %277

277:                                              ; preds = %274
  %278 = add i64 %272, 4294967295
  %279 = and i64 %278, %270
  br label %284

280:                                              ; preds = %274
  %281 = icmp ugt i64 %272, %270
  br i1 %281, label %284, label %282

282:                                              ; preds = %280
  %283 = urem i64 %270, %272
  br label %284

284:                                              ; preds = %282, %280, %277
  %285 = phi i64 [ %279, %277 ], [ %283, %282 ], [ %270, %280 ]
  %286 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %259, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load %"struct.std::__1::__hash_node_base.269"**, %"struct.std::__1::__hash_node_base.269"*** %286, align 8
  %288 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %287, i64 %285
  %289 = load %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %288, align 8
  %290 = icmp eq %"struct.std::__1::__hash_node_base.269"* %289, null
  br i1 %290, label %348, label %291

291:                                              ; preds = %284
  %292 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %289, i64 0, i32 0
  %293 = load %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %292, align 8
  %294 = icmp eq %"struct.std::__1::__hash_node_base.269"* %293, null
  br i1 %294, label %348, label %295

295:                                              ; preds = %291
  %296 = add i64 %272, -1
  br label %297

297:                                              ; preds = %318, %295
  %298 = phi %"struct.std::__1::__hash_node_base.269"* [ %293, %295 ], [ %320, %318 ]
  %299 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %298, i64 1
  %300 = bitcast %"struct.std::__1::__hash_node_base.269"* %299 to i64*
  %301 = load i64, i64* %300, align 8
  %302 = icmp eq i64 %301, %270
  br i1 %302, label %313, label %303

303:                                              ; preds = %297
  br i1 %276, label %306, label %304

304:                                              ; preds = %303
  %305 = and i64 %301, %296
  br label %310

306:                                              ; preds = %303
  %307 = icmp ult i64 %301, %272
  br i1 %307, label %310, label %308

308:                                              ; preds = %306
  %309 = urem i64 %301, %272
  br label %310

310:                                              ; preds = %308, %306, %304
  %311 = phi i64 [ %305, %304 ], [ %309, %308 ], [ %301, %306 ]
  %312 = icmp eq i64 %311, %285
  br i1 %312, label %318, label %348

313:                                              ; preds = %297
  %314 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %298, i64 2
  %315 = bitcast %"struct.std::__1::__hash_node_base.269"* %314 to i32*
  %316 = load i32, i32* %315, align 4
  %317 = icmp eq i32 %316, %269
  br i1 %317, label %322, label %318

318:                                              ; preds = %313, %310
  %319 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %298, i64 0, i32 0
  %320 = load %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %319, align 8
  %321 = icmp eq %"struct.std::__1::__hash_node_base.269"* %320, null
  br i1 %321, label %348, label %297

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %298, i64 3
  %324 = bitcast %"struct.std::__1::__hash_node_base.269"* %323 to %"class.spvtools::opt::analysis::Constant"**
  %325 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %324, align 8
  %326 = icmp eq %"class.spvtools::opt::analysis::Constant"* %325, null
  br i1 %326, label %348, label %327

327:                                              ; preds = %322
  %328 = icmp eq i64* %2, null
  br i1 %328, label %348, label %329

329:                                              ; preds = %327
  %330 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %325, i64 0, i32 1
  %331 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %330, align 8
  %332 = bitcast %"class.spvtools::opt::analysis::Type"* %331 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %333 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %332, align 8
  %334 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %333, i64 11
  %335 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %334, align 8
  %336 = tail call %"class.spvtools::opt::analysis::Integer"* %335(%"class.spvtools::opt::analysis::Type"* %331) #13
  %337 = icmp eq %"class.spvtools::opt::analysis::Integer"* %336, null
  br i1 %337, label %348, label %338

338:                                              ; preds = %329
  %339 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %336, i64 0, i32 2
  %340 = load i8, i8* %339, align 8, !range !2
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %344, label %342

342:                                              ; preds = %338
  %343 = tail call i64 @_ZNK8spvtools3opt8analysis8Constant20GetSignExtendedValueEv(%"class.spvtools::opt::analysis::Constant"* nonnull %325) #13
  br label %346

344:                                              ; preds = %338
  %345 = tail call i64 @_ZNK8spvtools3opt8analysis8Constant20GetZeroExtendedValueEv(%"class.spvtools::opt::analysis::Constant"* nonnull %325) #13
  br label %346

346:                                              ; preds = %344, %342
  %347 = phi i64 [ %343, %342 ], [ %345, %344 ]
  store i64 %347, i64* %2, align 8
  br label %348

348:                                              ; preds = %318, %310, %291, %268, %284, %322, %329, %346, %327, %63
  %349 = phi i1 [ false, %63 ], [ false, %322 ], [ false, %329 ], [ true, %346 ], [ true, %327 ], [ false, %284 ], [ false, %268 ], [ false, %291 ], [ false, %310 ], [ false, %318 ]
  ret i1 %349
}

declare i64 @_ZNK8spvtools3opt8analysis8Constant20GetSignExtendedValueEv(%"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #2

declare i64 @_ZNK8spvtools3opt8analysis8Constant20GetZeroExtendedValueEv(%"class.spvtools::opt::analysis::Constant"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt4LoopC2EPNS0_9IRContextEPNS0_17DominatorAnalysisEPNS0_10BasicBlockES7_S7_(%"class.spvtools::opt::Loop"* nocapture, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::DominatorAnalysis"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  store %"class.spvtools::opt::IRContext"* %1, %"class.spvtools::opt::IRContext"** %7, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 1
  store %"class.spvtools::opt::BasicBlock"* %3, %"class.spvtools::opt::BasicBlock"** %8, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 2
  store %"class.spvtools::opt::BasicBlock"* %4, %"class.spvtools::opt::BasicBlock"** %9, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 3
  store %"class.spvtools::opt::BasicBlock"* %5, %"class.spvtools::opt::BasicBlock"** %10, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 4
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %11, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 3
  %14 = bitcast %"class.std::__1::__compressed_pair.936"* %13 to i32*
  %15 = bitcast %"class.spvtools::opt::Loop"** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 64, i1 false)
  store i32 1065353216, i32* %14, align 4
  %16 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 9
  store i8 0, i8* %16, align 8
  %17 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop17FindLoopPreheaderEPNS0_17DominatorAnalysisE(%"class.spvtools::opt::Loop"* %0, %"class.spvtools::opt::DominatorAnalysis"* %2)
  store %"class.spvtools::opt::BasicBlock"* %17, %"class.spvtools::opt::BasicBlock"** %11, align 8
  %18 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop14FindLatchBlockEv(%"class.spvtools::opt::Loop"* %0)
  %19 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 5
  store %"class.spvtools::opt::BasicBlock"* %18, %"class.spvtools::opt::BasicBlock"** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop17FindLoopPreheaderEPNS0_17DominatorAnalysisE(%"class.spvtools::opt::Loop"* nocapture readonly, %"class.spvtools::opt::DominatorAnalysis"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.324", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::function.955", align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 400) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %16, %"class.spvtools::opt::Module"* %14) #13
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 15
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.210"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::CFG"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %12
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %20) #13
  %24 = bitcast %"class.spvtools::opt::CFG"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %12
  %26 = load i32, i32* %8, align 8
  %27 = or i32 %26, 16
  store i32 %27, i32* %8, align 8
  br label %28

28:                                               ; preds = %2, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 15, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %1, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 1
  %33 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %35, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %28
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %35, i64 0, i32 3
  %41 = load i8, i8* %40, align 4, !range !2
  %42 = zext i8 %41 to i32
  %43 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %35, i32 %42) #13
  br label %44

44:                                               ; preds = %39, %28
  %45 = phi i32 [ %43, %39 ], [ 0, %28 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %47 = bitcast %"class.std::__1::__tree_end_node"* %46 to %"class.std::__1::__tree_node.1117"**
  %48 = load %"class.std::__1::__tree_node.1117"*, %"class.std::__1::__tree_node.1117"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node.1117"* %48, null
  br i1 %49, label %74, label %50

50:                                               ; preds = %44, %50
  %51 = phi %"class.std::__1::__tree_end_node"* [ %61, %50 ], [ %46, %44 ]
  %52 = phi %"class.std::__1::__tree_node.1117"* [ %62, %50 ], [ %48, %44 ]
  %53 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %52, i64 0, i32 1, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp ult i32 %54, %45
  %56 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %52, i64 0, i32 0, i32 1
  %57 = bitcast %"class.std::__1::__tree_node_base"** %56 to %"class.std::__1::__tree_node.1117"**
  %58 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %52, i64 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::__tree_node.1117"* %52 to %"class.std::__1::__tree_node.1117"**
  %60 = select i1 %55, %"class.std::__1::__tree_node.1117"** %57, %"class.std::__1::__tree_node.1117"** %59
  %61 = select i1 %55, %"class.std::__1::__tree_end_node"* %51, %"class.std::__1::__tree_end_node"* %58
  %62 = load %"class.std::__1::__tree_node.1117"*, %"class.std::__1::__tree_node.1117"** %60, align 8
  %63 = icmp eq %"class.std::__1::__tree_node.1117"* %62, null
  br i1 %63, label %64, label %50

64:                                               ; preds = %50
  %65 = icmp eq %"class.std::__1::__tree_end_node"* %61, %46
  br i1 %65, label %74, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 4
  %68 = bitcast %"class.std::__1::__tree_end_node"* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = icmp ugt i32 %69, %45
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 5
  %73 = bitcast %"class.std::__1::__tree_end_node"* %72 to %"struct.spvtools::opt::DominatorTreeNode"*
  br label %74

74:                                               ; preds = %44, %64, %66, %71
  %75 = phi %"struct.spvtools::opt::DominatorTreeNode"* [ %73, %71 ], [ null, %44 ], [ null, %64 ], [ null, %66 ]
  %76 = bitcast %"class.std::__1::vector.324"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %76) #13
  %77 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %3, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %3, i64 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %80 = bitcast %"class.std::__1::vector.324"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 24, i1 false)
  %81 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %32, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %81, i64 0, i32 1, i32 0, i32 0, i32 0
  %83 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %82, align 8
  %84 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 4
  %85 = load i8, i8* %84, align 1, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %74
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %83, i64 0, i32 3
  %89 = load i8, i8* %88, align 4, !range !2
  %90 = zext i8 %89 to i32
  %91 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %83, i32 %90) #13
  br label %92

92:                                               ; preds = %74, %87
  %93 = phi i32 [ %91, %87 ], [ 0, %74 ]
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %30, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %96 = load i64, i64* %95, align 8
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %146, label %98

98:                                               ; preds = %92
  %99 = tail call i64 @llvm.ctpop.i64(i64 %96) #13, !range !3
  %100 = icmp ugt i64 %99, 1
  br i1 %100, label %104, label %101

101:                                              ; preds = %98
  %102 = add i64 %96, 4294967295
  %103 = and i64 %102, %94
  br label %108

104:                                              ; preds = %98
  %105 = icmp ugt i64 %96, %94
  br i1 %105, label %108, label %106

106:                                              ; preds = %104
  %107 = urem i64 %94, %96
  br label %108

108:                                              ; preds = %106, %104, %101
  %109 = phi i64 [ %103, %101 ], [ %107, %106 ], [ %94, %104 ]
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %30, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %"struct.std::__1::__hash_node_base.854"**, %"struct.std::__1::__hash_node_base.854"*** %110, align 8
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %111, i64 %109
  %113 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %112, align 8
  %114 = icmp eq %"struct.std::__1::__hash_node_base.854"* %113, null
  br i1 %114, label %146, label %115

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %113, i64 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %116, align 8
  %118 = icmp eq %"struct.std::__1::__hash_node_base.854"* %117, null
  br i1 %118, label %146, label %119

119:                                              ; preds = %115
  %120 = add i64 %96, -1
  br label %121

121:                                              ; preds = %142, %119
  %122 = phi %"struct.std::__1::__hash_node_base.854"* [ %117, %119 ], [ %144, %142 ]
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %122, i64 1
  %124 = bitcast %"struct.std::__1::__hash_node_base.854"* %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = icmp eq i64 %125, %94
  br i1 %126, label %137, label %127

127:                                              ; preds = %121
  br i1 %100, label %130, label %128

128:                                              ; preds = %127
  %129 = and i64 %125, %120
  br label %134

130:                                              ; preds = %127
  %131 = icmp ult i64 %125, %96
  br i1 %131, label %134, label %132

132:                                              ; preds = %130
  %133 = urem i64 %125, %96
  br label %134

134:                                              ; preds = %132, %130, %128
  %135 = phi i64 [ %129, %128 ], [ %133, %132 ], [ %125, %130 ]
  %136 = icmp eq i64 %135, %109
  br i1 %136, label %142, label %146

137:                                              ; preds = %121
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %122, i64 2
  %139 = bitcast %"struct.std::__1::__hash_node_base.854"* %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, %93
  br i1 %141, label %147, label %142

142:                                              ; preds = %137, %134
  %143 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %122, i64 0, i32 0
  %144 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %143, align 8
  %145 = icmp eq %"struct.std::__1::__hash_node_base.854"* %144, null
  br i1 %145, label %146, label %121

146:                                              ; preds = %142, %134, %115, %108, %92
  tail call void @abort() #14
  unreachable

147:                                              ; preds = %137
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %122, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 24, i1 false) #13
  %149 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %122, i64 4
  %150 = bitcast %"struct.std::__1::__hash_node_base.854"* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::__hash_node_base.854"* %148 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %151, %153
  %155 = ashr exact i64 %154, 2
  %156 = icmp eq i64 %154, 0
  br i1 %156, label %227, label %157

157:                                              ; preds = %147
  %158 = icmp ugt i64 %155, 4611686018427387903
  br i1 %158, label %159, label %161

159:                                              ; preds = %157
  %160 = bitcast %"class.std::__1::vector.324"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %160) #14
  unreachable

161:                                              ; preds = %157
  %162 = tail call i8* @_Znwm(i64 %154) #12
  %163 = bitcast i8* %162 to i32*
  %164 = bitcast i32** %78 to i8**
  store i8* %162, i8** %164, align 8
  %165 = bitcast %"class.std::__1::vector.324"* %3 to i8**
  store i8* %162, i8** %165, align 8
  %166 = getelementptr inbounds i32, i32* %163, i64 %155
  store i32* %166, i32** %79, align 8
  %167 = bitcast %"struct.std::__1::__hash_node_base.854"* %148 to i32**
  %168 = load i32*, i32** %167, align 8
  %169 = load i64, i64* %150, align 8
  %170 = bitcast i32** %78 to i64*
  %171 = ptrtoint i8* %162 to i64
  %172 = ptrtoint i32* %168 to i64
  %173 = sub i64 %169, %172
  %174 = icmp sgt i64 %173, 0
  br i1 %174, label %175, label %180

175:                                              ; preds = %161
  %176 = lshr exact i64 %173, 2
  %177 = bitcast i32* %168 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %162, i8* align 4 %177, i64 %173, i1 false) #13
  %178 = getelementptr inbounds i32, i32* %163, i64 %176
  %179 = ptrtoint i32* %178 to i64
  br label %180

180:                                              ; preds = %161, %175
  %181 = phi i64 [ %179, %175 ], [ %171, %161 ]
  store i64 %181, i64* %170, align 8
  %182 = inttoptr i64 %181 to i32*
  %183 = icmp eq i32* %163, %182
  br i1 %183, label %227, label %184

184:                                              ; preds = %180, %223
  %185 = phi %"class.spvtools::opt::BasicBlock"* [ %224, %223 ], [ null, %180 ]
  %186 = phi i32* [ %225, %223 ], [ %163, %180 ]
  %187 = load i32, i32* %186, align 4
  %188 = load %"class.std::__1::__tree_node.1117"*, %"class.std::__1::__tree_node.1117"** %47, align 8
  %189 = icmp eq %"class.std::__1::__tree_node.1117"* %188, null
  br i1 %189, label %223, label %190

190:                                              ; preds = %184, %190
  %191 = phi %"class.std::__1::__tree_end_node"* [ %201, %190 ], [ %46, %184 ]
  %192 = phi %"class.std::__1::__tree_node.1117"* [ %202, %190 ], [ %188, %184 ]
  %193 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %192, i64 0, i32 1, i32 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = icmp ult i32 %194, %187
  %196 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %192, i64 0, i32 0, i32 1
  %197 = bitcast %"class.std::__1::__tree_node_base"** %196 to %"class.std::__1::__tree_node.1117"**
  %198 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %192, i64 0, i32 0, i32 0
  %199 = bitcast %"class.std::__1::__tree_node.1117"* %192 to %"class.std::__1::__tree_node.1117"**
  %200 = select i1 %195, %"class.std::__1::__tree_node.1117"** %197, %"class.std::__1::__tree_node.1117"** %199
  %201 = select i1 %195, %"class.std::__1::__tree_end_node"* %191, %"class.std::__1::__tree_end_node"* %198
  %202 = load %"class.std::__1::__tree_node.1117"*, %"class.std::__1::__tree_node.1117"** %200, align 8
  %203 = icmp eq %"class.std::__1::__tree_node.1117"* %202, null
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = icmp eq %"class.std::__1::__tree_end_node"* %201, %46
  br i1 %205, label %223, label %206

206:                                              ; preds = %204
  %207 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %201, i64 4
  %208 = bitcast %"class.std::__1::__tree_end_node"* %207 to i32*
  %209 = load i32, i32* %208, align 4
  %210 = icmp ugt i32 %209, %187
  br i1 %210, label %223, label %211

211:                                              ; preds = %206
  %212 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %201, i64 5
  %213 = icmp eq %"class.std::__1::__tree_end_node"* %212, null
  br i1 %213, label %223, label %214

214:                                              ; preds = %211
  %215 = bitcast %"class.std::__1::__tree_end_node"* %212 to %"struct.spvtools::opt::DominatorTreeNode"*
  %216 = tail call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEPKNS0_17DominatorTreeNodeES4_(%"class.spvtools::opt::DominatorTree"* %31, %"struct.spvtools::opt::DominatorTreeNode"* %75, %"struct.spvtools::opt::DominatorTreeNode"* nonnull %215) #13
  br i1 %216, label %223, label %217

217:                                              ; preds = %214
  %218 = icmp eq %"class.spvtools::opt::BasicBlock"* %185, null
  %219 = bitcast %"class.std::__1::__tree_end_node"* %212 to %"class.spvtools::opt::BasicBlock"**
  %220 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %219, align 8
  br i1 %218, label %223, label %221

221:                                              ; preds = %217
  %222 = icmp eq %"class.spvtools::opt::BasicBlock"* %220, %185
  br i1 %222, label %223, label %261

223:                                              ; preds = %217, %221, %206, %204, %184, %211, %214
  %224 = phi %"class.spvtools::opt::BasicBlock"* [ %185, %211 ], [ %185, %214 ], [ %185, %184 ], [ %185, %204 ], [ %185, %206 ], [ %185, %221 ], [ %220, %217 ]
  %225 = getelementptr inbounds i32, i32* %186, i64 1
  %226 = icmp eq i32* %225, %182
  br i1 %226, label %227, label %184

227:                                              ; preds = %223, %147, %180
  %228 = phi %"class.spvtools::opt::BasicBlock"* [ null, %180 ], [ null, %147 ], [ %224, %223 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #13
  store i8 1, i8* %4, align 1
  %229 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %32, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %229, i64 0, i32 1, i32 0, i32 0, i32 0
  %231 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %230, align 8
  %232 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %231, i64 0, i32 4
  %233 = load i8, i8* %232, align 1, !range !2
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %240, label %235

235:                                              ; preds = %227
  %236 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %231, i64 0, i32 3
  %237 = load i8, i8* %236, align 4, !range !2
  %238 = zext i8 %237 to i32
  %239 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %231, i32 %238) #13
  br label %240

240:                                              ; preds = %227, %235
  %241 = phi i32 [ %239, %235 ], [ 0, %227 ]
  %242 = bitcast %"class.std::__1::function.955"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %242) #13
  %243 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %5, i64 0, i32 0, i32 1, i32 0
  %244 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt4Loop17FindLoopPreheaderEPNS7_17DominatorAnalysisEE3$_0S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %243, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt4Loop17FindLoopPreheaderEPNS5_17DominatorAnalysisEE3$_0FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %244, align 8
  %245 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %5, i64 0, i32 0, i32 0, i32 0
  store i8* %4, i8** %245, align 8
  %246 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %5, i64 0, i32 0, i32 0, i32 1
  %247 = bitcast [8 x i8]* %246 to i32*
  store i32 %241, i32* %247, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %228, %"class.std::__1::function.955"* nonnull dereferenceable(32) %5) #13
  %248 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %244, align 8
  %249 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %248, i64 0, i32 1
  %250 = load void (i8*)*, void (i8*)** %249, align 8
  %251 = icmp eq void (i8*)* %250, null
  br i1 %251, label %254, label %252

252:                                              ; preds = %240
  %253 = load i8*, i8** %245, align 8
  call void %250(i8* %253) #13
  br label %254

254:                                              ; preds = %252, %240
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %242) #13
  %255 = load i8, i8* %4, align 1, !range !2
  %256 = icmp eq i8 %255, 0
  %257 = select i1 %256, %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"* %228
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #13
  %258 = load i32*, i32** %77, align 8
  %259 = bitcast i32* %258 to i8*
  %260 = icmp eq i32* %258, null
  br i1 %260, label %267, label %261

261:                                              ; preds = %221, %254
  %262 = phi %"class.spvtools::opt::BasicBlock"* [ %257, %254 ], [ null, %221 ]
  %263 = phi i32* [ %258, %254 ], [ %163, %221 ]
  %264 = phi i8* [ %259, %254 ], [ %162, %221 ]
  %265 = ptrtoint i32* %263 to i64
  %266 = bitcast i32** %78 to i64*
  store i64 %265, i64* %266, align 8
  call void @_ZdlPv(i8* %264) #12
  br label %267

267:                                              ; preds = %254, %261
  %268 = phi %"class.spvtools::opt::BasicBlock"* [ %257, %254 ], [ %262, %261 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %76) #13
  ret %"class.spvtools::opt::BasicBlock"* %268
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop14FindLatchBlockEv(%"class.spvtools::opt::Loop"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %3 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 16
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %9, align 8
  %11 = tail call i8* @_Znwm(i64 400) #12
  %12 = bitcast i8* %11 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %12, %"class.spvtools::opt::Module"* %10) #13
  %13 = ptrtoint i8* %11 to i64
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 15
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.210"* %14 to i64*
  store i64 %13, i64* %17, align 8
  %18 = icmp eq %"class.spvtools::opt::CFG"* %16, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %8
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %16) #13
  %20 = bitcast %"class.spvtools::opt::CFG"* %16 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %19, %8
  %22 = load i32, i32* %4, align 8
  %23 = or i32 %22, 16
  store i32 %23, i32* %4, align 8
  %24 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %2, align 8
  br label %25

25:                                               ; preds = %1, %21
  %26 = phi %"class.spvtools::opt::IRContext"* [ %3, %1 ], [ %24, %21 ]
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %3, i64 0, i32 15, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %27, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 1
  %30 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %30, i64 0, i32 0
  %32 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %31, align 8
  %33 = tail call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %26, %"class.spvtools::opt::Function"* %32) #13
  %34 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %29, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %34, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 4
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %36, i64 0, i32 3
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = zext i8 %42 to i32
  %44 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %36, i32 %43) #13
  br label %45

45:                                               ; preds = %25, %40
  %46 = phi i32 [ %44, %40 ], [ 0, %25 ]
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %28, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %99, label %51

51:                                               ; preds = %45
  %52 = tail call i64 @llvm.ctpop.i64(i64 %49) #13, !range !3
  %53 = icmp ugt i64 %52, 1
  br i1 %53, label %57, label %54

54:                                               ; preds = %51
  %55 = add i64 %49, 4294967295
  %56 = and i64 %55, %47
  br label %61

57:                                               ; preds = %51
  %58 = icmp ugt i64 %49, %47
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %47, %49
  br label %61

61:                                               ; preds = %59, %57, %54
  %62 = phi i64 [ %56, %54 ], [ %60, %59 ], [ %47, %57 ]
  %63 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %28, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.854"**, %"struct.std::__1::__hash_node_base.854"*** %63, align 8
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %64, i64 %62
  %66 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.854"* %66, null
  br i1 %67, label %99, label %68

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %66, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.854"* %70, null
  br i1 %71, label %99, label %72

72:                                               ; preds = %68
  %73 = add i64 %49, -1
  br label %74

74:                                               ; preds = %95, %72
  %75 = phi %"struct.std::__1::__hash_node_base.854"* [ %70, %72 ], [ %97, %95 ]
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %75, i64 1
  %77 = bitcast %"struct.std::__1::__hash_node_base.854"* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, %47
  br i1 %79, label %90, label %80

80:                                               ; preds = %74
  br i1 %53, label %83, label %81

81:                                               ; preds = %80
  %82 = and i64 %78, %73
  br label %87

83:                                               ; preds = %80
  %84 = icmp ult i64 %78, %49
  br i1 %84, label %87, label %85

85:                                               ; preds = %83
  %86 = urem i64 %78, %49
  br label %87

87:                                               ; preds = %85, %83, %81
  %88 = phi i64 [ %82, %81 ], [ %86, %85 ], [ %78, %83 ]
  %89 = icmp eq i64 %88, %62
  br i1 %89, label %95, label %99

90:                                               ; preds = %74
  %91 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %75, i64 2
  %92 = bitcast %"struct.std::__1::__hash_node_base.854"* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, %46
  br i1 %94, label %100, label %95

95:                                               ; preds = %90, %87
  %96 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %75, i64 0, i32 0
  %97 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %96, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node_base.854"* %97, null
  br i1 %98, label %99, label %74

99:                                               ; preds = %95, %87, %68, %61, %45
  tail call void @abort() #14
  unreachable

100:                                              ; preds = %90
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %75, i64 3
  %102 = bitcast %"struct.std::__1::__hash_node_base.854"* %101 to i32**
  %103 = load i32*, i32** %102, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %75, i64 4
  %105 = bitcast %"struct.std::__1::__hash_node_base.854"* %104 to i32**
  %106 = load i32*, i32** %105, align 8
  %107 = icmp eq i32* %103, %106
  br i1 %107, label %189, label %108

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 2
  %110 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %33, i64 0, i32 0, i32 0
  br label %113

111:                                              ; preds = %127
  %112 = icmp eq i32* %130, %106
  br i1 %112, label %189, label %113

113:                                              ; preds = %108, %111
  %114 = phi i32* [ %103, %108 ], [ %130, %111 ]
  %115 = load i32, i32* %114, align 4
  %116 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %109, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %116, i64 0, i32 1, i32 0, i32 0, i32 0
  %118 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %118, i64 0, i32 4
  %120 = load i8, i8* %119, align 1, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %127, label %122

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %118, i64 0, i32 3
  %124 = load i8, i8* %123, align 4, !range !2
  %125 = zext i8 %124 to i32
  %126 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %118, i32 %125) #13
  br label %127

127:                                              ; preds = %113, %122
  %128 = phi i32 [ %126, %122 ], [ 0, %113 ]
  %129 = tail call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"* %110, i32 %128, i32 %115) #13
  %130 = getelementptr inbounds i32, i32* %114, i64 1
  br i1 %129, label %131, label %111

131:                                              ; preds = %127
  %132 = zext i32 %115 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %28, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %134 = load i64, i64* %133, align 8
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %184, label %136

136:                                              ; preds = %131
  %137 = tail call i64 @llvm.ctpop.i64(i64 %134) #13, !range !3
  %138 = icmp ugt i64 %137, 1
  br i1 %138, label %142, label %139

139:                                              ; preds = %136
  %140 = add i64 %134, 4294967295
  %141 = and i64 %140, %132
  br label %146

142:                                              ; preds = %136
  %143 = icmp ugt i64 %134, %132
  br i1 %143, label %146, label %144

144:                                              ; preds = %142
  %145 = urem i64 %132, %134
  br label %146

146:                                              ; preds = %144, %142, %139
  %147 = phi i64 [ %141, %139 ], [ %145, %144 ], [ %132, %142 ]
  %148 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %28, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %148, align 8
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %149, i64 %147
  %151 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.878"* %151, null
  br i1 %152, label %184, label %153

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %151, i64 0, i32 0
  %155 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %154, align 8
  %156 = icmp eq %"struct.std::__1::__hash_node_base.878"* %155, null
  br i1 %156, label %184, label %157

157:                                              ; preds = %153
  %158 = add i64 %134, -1
  br label %159

159:                                              ; preds = %180, %157
  %160 = phi %"struct.std::__1::__hash_node_base.878"* [ %155, %157 ], [ %182, %180 ]
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %160, i64 1
  %162 = bitcast %"struct.std::__1::__hash_node_base.878"* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = icmp eq i64 %163, %132
  br i1 %164, label %175, label %165

165:                                              ; preds = %159
  br i1 %138, label %168, label %166

166:                                              ; preds = %165
  %167 = and i64 %163, %158
  br label %172

168:                                              ; preds = %165
  %169 = icmp ult i64 %163, %134
  br i1 %169, label %172, label %170

170:                                              ; preds = %168
  %171 = urem i64 %163, %134
  br label %172

172:                                              ; preds = %170, %168, %166
  %173 = phi i64 [ %167, %166 ], [ %171, %170 ], [ %163, %168 ]
  %174 = icmp eq i64 %173, %147
  br i1 %174, label %180, label %184

175:                                              ; preds = %159
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %160, i64 2
  %177 = bitcast %"struct.std::__1::__hash_node_base.878"* %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = icmp eq i32 %178, %115
  br i1 %179, label %185, label %180

180:                                              ; preds = %175, %172
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %160, i64 0, i32 0
  %182 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %181, align 8
  %183 = icmp eq %"struct.std::__1::__hash_node_base.878"* %182, null
  br i1 %183, label %184, label %159

184:                                              ; preds = %180, %172, %153, %146, %131
  tail call void @abort() #14
  unreachable

185:                                              ; preds = %175
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %160, i64 3
  %187 = bitcast %"struct.std::__1::__hash_node_base.878"* %186 to %"class.spvtools::opt::BasicBlock"**
  %188 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %187, align 8
  br label %189

189:                                              ; preds = %111, %100, %185
  %190 = phi %"class.spvtools::opt::BasicBlock"* [ %188, %185 ], [ null, %100 ], [ null, %111 ]
  ret %"class.spvtools::opt::BasicBlock"* %190
}

declare zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEPKNS0_17DominatorTreeNodeES4_(%"class.spvtools::opt::DominatorTree"*, %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"*) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.955"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"* nocapture readonly, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %4, %"class.spvtools::opt::Instruction"* %1)
  %6 = icmp eq %"class.spvtools::opt::BasicBlock"* %5, null
  br i1 %6, label %75, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = zext i8 %15 to i32
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %9, i32 %16) #13
  br label %18

18:                                               ; preds = %13, %7
  %19 = phi i32 [ %17, %13 ], [ 0, %7 ]
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %72, label %24

24:                                               ; preds = %18
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !3
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, 4294967295
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ugt i64 %22, %20
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.922"* %39, null
  br i1 %40, label %72, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.922"* %43, null
  br i1 %44, label %72, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base.922"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.922"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %72

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.922"* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %19
  br i1 %67, label %72, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.922"* %70, null
  br i1 %71, label %72, label %47

72:                                               ; preds = %60, %63, %68, %18, %34, %41
  %73 = phi %"struct.std::__1::__hash_node_base.922"* [ null, %34 ], [ null, %18 ], [ null, %41 ], [ null, %60 ], [ null, %68 ], [ %48, %63 ]
  %74 = icmp ne %"struct.std::__1::__hash_node_base.922"* %73, null
  br label %75

75:                                               ; preds = %2, %72
  %76 = phi i1 [ %74, %72 ], [ false, %2 ]
  ret i1 %76
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #13, !range !3
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.115"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.115"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.115"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.115"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.115"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.115"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.115"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt4Loop22IsBasicBlockInLoopSlowEPKNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* nocapture readonly, %"class.spvtools::opt::BasicBlock"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %4 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 0
  %6 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %5, align 8
  %7 = tail call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %4, %"class.spvtools::opt::Function"* %6) #13
  %8 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %8, label %77, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 3
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = zext i8 %17 to i32
  %19 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %11, i32 %18) #13
  br label %20

20:                                               ; preds = %15, %9
  %21 = phi i32 [ %19, %15 ], [ 0, %9 ]
  %22 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node.1117"**
  %24 = load %"class.std::__1::__tree_node.1117"*, %"class.std::__1::__tree_node.1117"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node.1117"* %24, null
  br i1 %25, label %77, label %26

26:                                               ; preds = %20, %26
  %27 = phi %"class.std::__1::__tree_end_node"* [ %37, %26 ], [ %22, %20 ]
  %28 = phi %"class.std::__1::__tree_node.1117"* [ %38, %26 ], [ %24, %20 ]
  %29 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp ult i32 %30, %21
  %32 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %28, i64 0, i32 0, i32 1
  %33 = bitcast %"class.std::__1::__tree_node_base"** %32 to %"class.std::__1::__tree_node.1117"**
  %34 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %28, i64 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::__tree_node.1117"* %28 to %"class.std::__1::__tree_node.1117"**
  %36 = select i1 %31, %"class.std::__1::__tree_node.1117"** %33, %"class.std::__1::__tree_node.1117"** %35
  %37 = select i1 %31, %"class.std::__1::__tree_end_node"* %27, %"class.std::__1::__tree_end_node"* %34
  %38 = load %"class.std::__1::__tree_node.1117"*, %"class.std::__1::__tree_node.1117"** %36, align 8
  %39 = icmp eq %"class.std::__1::__tree_node.1117"* %38, null
  br i1 %39, label %40, label %26

40:                                               ; preds = %26
  %41 = icmp eq %"class.std::__1::__tree_end_node"* %37, %22
  br i1 %41, label %77, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %37, i64 4
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = icmp ugt i32 %45, %21
  br i1 %46, label %77, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 1
  %49 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %48, align 8
  %50 = icmp eq %"class.spvtools::opt::BasicBlock"* %49, null
  br i1 %50, label %78, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %49, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %52, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 4
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 3
  %59 = load i8, i8* %58, align 4, !range !2
  %60 = zext i8 %59 to i32
  %61 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %53, i32 %60) #13
  br label %62

62:                                               ; preds = %57, %51
  %63 = phi i32 [ %61, %57 ], [ 0, %51 ]
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 4
  %66 = load i8, i8* %65, align 1, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 3
  %70 = load i8, i8* %69, align 4, !range !2
  %71 = zext i8 %70 to i32
  %72 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %64, i32 %71) #13
  br label %73

73:                                               ; preds = %62, %68
  %74 = phi i32 [ %72, %68 ], [ 0, %62 ]
  %75 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %7, i64 0, i32 0, i32 0
  %76 = tail call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"* %75, i32 %63, i32 %74) #13
  br i1 %76, label %77, label %78

77:                                               ; preds = %42, %2, %20, %40, %73
  br label %78

78:                                               ; preds = %47, %73, %77
  %79 = phi i1 [ true, %77 ], [ false, %73 ], [ false, %47 ]
  ret i1 %79
}

declare %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 4
  %3 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2, align 8
  %4 = icmp eq %"class.spvtools::opt::BasicBlock"* %3, null
  br i1 %4, label %5, label %35

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 11
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %13, align 8
  %15 = tail call i8* @_Znwm(i64 400) #12
  %16 = bitcast i8* %15 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %16, %"class.spvtools::opt::Module"* %14) #13
  %17 = ptrtoint i8* %15 to i64
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 15
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.210"* %18 to i64*
  store i64 %17, i64* %21, align 8
  %22 = icmp eq %"class.spvtools::opt::CFG"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %12
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %20) #13
  %24 = bitcast %"class.spvtools::opt::CFG"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %23, %12
  %26 = load i32, i32* %8, align 8
  %27 = or i32 %26, 16
  store i32 %27, i32* %8, align 8
  br label %28

28:                                               ; preds = %5, %25
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %7, i64 0, i32 15, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %29, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 1
  %32 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %31, align 8
  %33 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt3CFG15SplitLoopHeaderEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %30, %"class.spvtools::opt::BasicBlock"* %32) #13
  store %"class.spvtools::opt::BasicBlock"* %33, %"class.spvtools::opt::BasicBlock"** %31, align 8
  %34 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %2, align 8
  br label %35

35:                                               ; preds = %1, %28
  %36 = phi %"class.spvtools::opt::BasicBlock"* [ %34, %28 ], [ %3, %1 ]
  ret %"class.spvtools::opt::BasicBlock"* %36
}

declare %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt3CFG15SplitLoopHeaderEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8spvtools3opt4Loop16SetContinueBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* nocapture, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 2
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8spvtools3opt4Loop13SetLatchBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* nocapture, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 5
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt4Loop13SetMergeBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* nocapture, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::utils::SmallVector", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 3
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %4, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 1
  %6 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %7 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %6) #13
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  br i1 %8, label %63, label %9

9:                                                ; preds = %2
  %10 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %11 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %10) #13
  %12 = bitcast %"class.spvtools::utils::SmallVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #13
  %13 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %4, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %15, i64 0, i32 4
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %24, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %15, i64 0, i32 3
  %21 = load i8, i8* %20, align 4, !range !2
  %22 = zext i8 %21 to i32
  %23 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %15, i32 %22) #13
  br label %24

24:                                               ; preds = %19, %9
  %25 = phi i32 [ %23, %19 ], [ 0, %9 ]
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 1
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 2
  %29 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 3, i64 0
  %30 = bitcast i32** %28 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %29, %"struct.std::__1::aligned_storage<4, 4>::type"** %30, align 8
  %31 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4
  %32 = bitcast %"class.std::__1::unique_ptr.779"* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %29 to i32*
  store i64 1, i64* %27, align 8
  store i32 %25, i32* %33, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 3
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 4
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  %40 = select i1 %39, i64 1, i64 2
  %41 = xor i1 %39, true
  %42 = zext i1 %41 to i64
  %43 = select i1 %36, i64 %42, i64 %40
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 6, i32 0, i32 0
  %45 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %44, align 8
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %45, i64 %43, i32 1
  %47 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %46, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %3) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %48, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %48, align 8
  %50 = icmp eq %"class.std::__1::vector.324"* %49, null
  br i1 %50, label %62, label %51

51:                                               ; preds = %24
  %52 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %49, i64 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = icmp eq i32* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = ptrtoint i32* %53 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %49, i64 0, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast i32* %53 to i8*
  call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %55, %51
  %61 = bitcast %"class.std::__1::vector.324"* %49 to i8*
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %24, %60
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #13
  br label %63

63:                                               ; preds = %2, %62
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8spvtools3opt4Loop17SetPreHeaderBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* nocapture, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 4
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools3opt4Loop13GetExitBlocksEPNSt3__113unordered_setIjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorIjEEEE(%"class.spvtools::opt::Loop"*, %"class.std::__1::unordered_set.917"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::function.955", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 16
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %26

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 400) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %14, %"class.spvtools::opt::Module"* %12) #13
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 15
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.210"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %"class.spvtools::opt::CFG"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %10
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %18) #13
  %22 = bitcast %"class.spvtools::opt::CFG"* %18 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %10
  %24 = load i32, i32* %6, align 8
  %25 = or i32 %24, 16
  store i32 %25, i32* %6, align 8
  br label %26

26:                                               ; preds = %2, %23
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 15, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %82, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %33, align 8
  %35 = icmp eq %"struct.std::__1::__hash_node_base.922"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32, %36
  %37 = phi %"struct.std::__1::__hash_node_base.922"* [ %39, %36 ], [ %34, %32 ]
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %37, i64 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %38, align 8
  %40 = bitcast %"struct.std::__1::__hash_node_base.922"* %37 to i8*
  tail call void @_ZdlPv(i8* %40) #12
  %41 = icmp eq %"struct.std::__1::__hash_node_base.922"* %39, null
  br i1 %41, label %42, label %36

42:                                               ; preds = %36, %32
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %33, align 8
  %43 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %64, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = add i64 %44, -1
  %49 = and i64 %44, 3
  %50 = icmp ult i64 %48, 3
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  %52 = sub i64 %44, %49
  br label %65

53:                                               ; preds = %65, %46
  %54 = phi i64 [ 0, %46 ], [ %79, %65 ]
  %55 = icmp eq i64 %49, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %53, %56
  %57 = phi i64 [ %61, %56 ], [ %54, %53 ]
  %58 = phi i64 [ %62, %56 ], [ %49, %53 ]
  %59 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %47, align 8
  %60 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %59, i64 %57
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %60, align 8
  %61 = add nuw i64 %57, 1
  %62 = add i64 %58, -1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %56, !llvm.loop !10

64:                                               ; preds = %53, %56, %42
  store i64 0, i64* %29, align 8
  br label %82

65:                                               ; preds = %65, %51
  %66 = phi i64 [ 0, %51 ], [ %79, %65 ]
  %67 = phi i64 [ %52, %51 ], [ %80, %65 ]
  %68 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %47, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %68, i64 %66
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %69, align 8
  %70 = or i64 %66, 1
  %71 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %47, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %71, i64 %70
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %72, align 8
  %73 = or i64 %66, 2
  %74 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %47, align 8
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %74, i64 %73
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %75, align 8
  %76 = or i64 %66, 3
  %77 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %47, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %77, i64 %76
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %78, align 8
  %79 = add nuw i64 %66, 4
  %80 = add i64 %67, -4
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %53, label %65

82:                                               ; preds = %26, %64
  %83 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %84 = bitcast %"struct.std::__1::__hash_node_base.922"** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %28, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %89 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %28, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.std::__1::function.955"* %3 to i8*
  %91 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %3, i64 0, i32 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %3, i64 0, i32 0, i32 2
  %93 = bitcast %"class.std::__1::function.955"* %3 to %"class.std::__1::unordered_set.917"**
  %94 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %3, i64 0, i32 0, i32 0, i32 1
  %95 = bitcast [8 x i8]* %94 to %"class.spvtools::opt::Loop"**
  %96 = getelementptr inbounds %"class.std::__1::function.955", %"class.std::__1::function.955"* %3, i64 0, i32 0, i32 0, i32 0
  br label %98

97:                                               ; preds = %164, %82
  ret void

98:                                               ; preds = %87, %164
  %99 = phi i64 [ %85, %87 ], [ %166, %164 ]
  %100 = inttoptr i64 %99 to %"struct.std::__1::__hash_node.1195"*
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node.1195", %"struct.std::__1::__hash_node.1195"* %100, i64 0, i32 2
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  %104 = load i64, i64* %88, align 8
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %153, label %106

106:                                              ; preds = %98
  %107 = call i64 @llvm.ctpop.i64(i64 %104) #13, !range !3
  %108 = icmp ugt i64 %107, 1
  br i1 %108, label %112, label %109

109:                                              ; preds = %106
  %110 = add i64 %104, 4294967295
  %111 = and i64 %110, %103
  br label %116

112:                                              ; preds = %106
  %113 = icmp ugt i64 %104, %103
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = urem i64 %103, %104
  br label %116

116:                                              ; preds = %114, %112, %109
  %117 = phi i64 [ %111, %109 ], [ %115, %114 ], [ %103, %112 ]
  %118 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %89, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %118, i64 %117
  %120 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %119, align 8
  %121 = icmp eq %"struct.std::__1::__hash_node_base.878"* %120, null
  br i1 %121, label %153, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %120, i64 0, i32 0
  %124 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %123, align 8
  %125 = icmp eq %"struct.std::__1::__hash_node_base.878"* %124, null
  br i1 %125, label %153, label %126

126:                                              ; preds = %122
  %127 = add i64 %104, -1
  br label %128

128:                                              ; preds = %149, %126
  %129 = phi %"struct.std::__1::__hash_node_base.878"* [ %124, %126 ], [ %151, %149 ]
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %129, i64 1
  %131 = bitcast %"struct.std::__1::__hash_node_base.878"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = icmp eq i64 %132, %103
  br i1 %133, label %144, label %134

134:                                              ; preds = %128
  br i1 %108, label %137, label %135

135:                                              ; preds = %134
  %136 = and i64 %132, %127
  br label %141

137:                                              ; preds = %134
  %138 = icmp ult i64 %132, %104
  br i1 %138, label %141, label %139

139:                                              ; preds = %137
  %140 = urem i64 %132, %104
  br label %141

141:                                              ; preds = %139, %137, %135
  %142 = phi i64 [ %136, %135 ], [ %140, %139 ], [ %132, %137 ]
  %143 = icmp eq i64 %142, %117
  br i1 %143, label %149, label %153

144:                                              ; preds = %128
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %129, i64 2
  %146 = bitcast %"struct.std::__1::__hash_node_base.878"* %145 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, %102
  br i1 %148, label %154, label %149

149:                                              ; preds = %144, %141
  %150 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %129, i64 0, i32 0
  %151 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %150, align 8
  %152 = icmp eq %"struct.std::__1::__hash_node_base.878"* %151, null
  br i1 %152, label %153, label %128

153:                                              ; preds = %122, %116, %98, %149, %141
  call void @abort() #14
  unreachable

154:                                              ; preds = %144
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %129, i64 3
  %156 = bitcast %"struct.std::__1::__hash_node_base.878"* %155 to %"class.spvtools::opt::BasicBlock"**
  %157 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %156, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %90) #13
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop13GetExitBlocksEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %91, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop13GetExitBlocksEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %92, align 8
  store %"class.std::__1::unordered_set.917"* %1, %"class.std::__1::unordered_set.917"** %93, align 8
  store %"class.spvtools::opt::Loop"* %0, %"class.spvtools::opt::Loop"** %95, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %157, %"class.std::__1::function.955"* nonnull dereferenceable(32) %3) #13
  %158 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %92, align 8
  %159 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %158, i64 0, i32 1
  %160 = load void (i8*)*, void (i8*)** %159, align 8
  %161 = icmp eq void (i8*)* %160, null
  br i1 %161, label %164, label %162

162:                                              ; preds = %154
  %163 = load i8*, i8** %96, align 8
  call void %160(i8* %163) #13
  br label %164

164:                                              ; preds = %154, %162
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %90) #13
  %165 = inttoptr i64 %99 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %97, label %98
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools3opt4Loop16GetMergingBlocksEPNSt3__113unordered_setIjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorIjEEEE(%"class.spvtools::opt::Loop"* nocapture readonly, %"class.std::__1::unordered_set.917"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::stack", align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 11
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 16
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %27

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i8* @_Znwm(i64 400) #12
  %15 = bitcast i8* %14 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %15, %"class.spvtools::opt::Module"* %13) #13
  %16 = ptrtoint i8* %14 to i64
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 15
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %18, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.210"* %17 to i64*
  store i64 %16, i64* %20, align 8
  %21 = icmp eq %"class.spvtools::opt::CFG"* %19, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %11
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %19) #13
  %23 = bitcast %"class.spvtools::opt::CFG"* %19 to i8*
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %22, %11
  %25 = load i32, i32* %7, align 8
  %26 = or i32 %25, 16
  store i32 %26, i32* %7, align 8
  br label %27

27:                                               ; preds = %2, %24
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 15, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %83, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.922"* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %33, %37
  %38 = phi %"struct.std::__1::__hash_node_base.922"* [ %40, %37 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %39, align 8
  %41 = bitcast %"struct.std::__1::__hash_node_base.922"* %38 to i8*
  tail call void @_ZdlPv(i8* %41) #12
  %42 = icmp eq %"struct.std::__1::__hash_node_base.922"* %40, null
  br i1 %42, label %43, label %37

43:                                               ; preds = %37, %33
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %34, align 8
  %44 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %65, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = add i64 %45, -1
  %50 = and i64 %45, 3
  %51 = icmp ult i64 %49, 3
  br i1 %51, label %54, label %52

52:                                               ; preds = %47
  %53 = sub i64 %45, %50
  br label %66

54:                                               ; preds = %66, %47
  %55 = phi i64 [ 0, %47 ], [ %80, %66 ]
  %56 = icmp eq i64 %50, 0
  br i1 %56, label %65, label %57

57:                                               ; preds = %54, %57
  %58 = phi i64 [ %62, %57 ], [ %55, %54 ]
  %59 = phi i64 [ %63, %57 ], [ %50, %54 ]
  %60 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %48, align 8
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %60, i64 %58
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %61, align 8
  %62 = add nuw i64 %58, 1
  %63 = add i64 %59, -1
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %57, !llvm.loop !12

65:                                               ; preds = %54, %57, %43
  store i64 0, i64* %30, align 8
  br label %83

66:                                               ; preds = %66, %52
  %67 = phi i64 [ 0, %52 ], [ %80, %66 ]
  %68 = phi i64 [ %53, %52 ], [ %81, %66 ]
  %69 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %48, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %69, i64 %67
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %70, align 8
  %71 = or i64 %67, 1
  %72 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %48, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %73, align 8
  %74 = or i64 %67, 2
  %75 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %48, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %75, i64 %74
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %76, align 8
  %77 = or i64 %67, 3
  %78 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %48, align 8
  %79 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %78, i64 %77
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %79, align 8
  %80 = add nuw i64 %67, 4
  %81 = add i64 %68, -4
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %54, label %66

83:                                               ; preds = %27, %65
  %84 = bitcast %"class.std::__1::stack"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %84) #13
  %85 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %87 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %88 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 1
  %89 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 48, i1 false) #13
  %90 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 3
  %91 = bitcast %"class.spvtools::opt::BasicBlock"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.spvtools::opt::BasicBlock"**** %87 to i64*
  %94 = bitcast %"class.spvtools::opt::BasicBlock"**** %86 to i64*
  %95 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0
  call void @_ZNSt3__15dequeIPKN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %95) #13
  %96 = load i64, i64* %89, align 8
  %97 = load i64, i64* %88, align 8
  %98 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %86, align 8
  %99 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %87, align 8
  %100 = add i64 %97, %96
  %101 = icmp eq %"class.spvtools::opt::BasicBlock"*** %99, %98
  br i1 %101, label %109, label %102

102:                                              ; preds = %83
  %103 = lshr i64 %100, 9
  %104 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %98, i64 %103
  %105 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %104, align 8
  %106 = and i64 %100, 511
  %107 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %105, i64 %106
  %108 = bitcast %"class.spvtools::opt::BasicBlock"** %107 to i64*
  br label %109

109:                                              ; preds = %83, %102
  %110 = phi i64* [ %108, %102 ], [ null, %83 ]
  store i64 %92, i64* %110, align 8
  %111 = load i64, i64* %89, align 8
  %112 = add i64 %111, 1
  store i64 %112, i64* %89, align 8
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %439, label %114

114:                                              ; preds = %109
  %115 = bitcast i32* %4 to i8*
  %116 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %1, i64 0, i32 0
  %117 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %29, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %29, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %122 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %29, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %29, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = getelementptr inbounds %"class.std::__1::stack", %"class.std::__1::stack"* %3, i64 0, i32 0
  br label %126

126:                                              ; preds = %114, %240
  %127 = phi i64 [ %112, %114 ], [ %241, %240 ]
  %128 = load i64, i64* %88, align 8
  %129 = add i64 %127, -1
  %130 = add i64 %128, %129
  %131 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %86, align 8
  %132 = lshr i64 %130, 9
  %133 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %131, i64 %132
  %134 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %133, align 8
  %135 = and i64 %130, 511
  %136 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %134, i64 %135
  %137 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %136, align 8
  store i64 %129, i64* %89, align 8
  %138 = load i64, i64* %93, align 8
  %139 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %131 to i64
  %140 = sub i64 %138, %139
  %141 = icmp eq i64 %140, 0
  %142 = shl i64 %140, 6
  %143 = add i64 %142, -1
  %144 = select i1 %141, i64 0, i64 %143
  %145 = sub i64 1, %127
  %146 = sub i64 %145, %128
  %147 = add i64 %146, %144
  %148 = icmp ult i64 %147, 1024
  br i1 %148, label %156, label %149

149:                                              ; preds = %126
  %150 = inttoptr i64 %138 to %"class.spvtools::opt::BasicBlock"***
  %151 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %150, i64 -1
  %152 = bitcast %"class.spvtools::opt::BasicBlock"*** %151 to i8**
  %153 = load i8*, i8** %152, align 8
  call void @_ZdlPv(i8* %153) #12
  %154 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %87, align 8
  %155 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %154, i64 -1
  store %"class.spvtools::opt::BasicBlock"*** %155, %"class.spvtools::opt::BasicBlock"**** %87, align 8
  br label %156

156:                                              ; preds = %126, %149
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %115) #13
  %157 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %137, i64 0, i32 1, i32 0, i32 0, i32 0
  %158 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %157, align 8
  %159 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 4
  %160 = load i8, i8* %159, align 1, !range !2
  %161 = icmp eq i8 %160, 0
  br i1 %161, label %167, label %162

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 3
  %164 = load i8, i8* %163, align 4, !range !2
  %165 = zext i8 %164 to i32
  %166 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %158, i32 %165) #13
  br label %167

167:                                              ; preds = %156, %162
  %168 = phi i32 [ %166, %162 ], [ 0, %156 ]
  store i32 %168, i32* %4, align 4
  %169 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %116, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %115) #13
  %170 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %157, align 8
  %171 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %170, i64 0, i32 4
  %172 = load i8, i8* %171, align 1, !range !2
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %179, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %170, i64 0, i32 3
  %176 = load i8, i8* %175, align 4, !range !2
  %177 = zext i8 %176 to i32
  %178 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %170, i32 %177) #13
  br label %179

179:                                              ; preds = %167, %174
  %180 = phi i32 [ %178, %174 ], [ 0, %167 ]
  %181 = zext i32 %180 to i64
  %182 = load i64, i64* %117, align 8
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %231, label %184

184:                                              ; preds = %179
  %185 = call i64 @llvm.ctpop.i64(i64 %182) #13, !range !3
  %186 = icmp ugt i64 %185, 1
  br i1 %186, label %190, label %187

187:                                              ; preds = %184
  %188 = add i64 %182, 4294967295
  %189 = and i64 %188, %181
  br label %194

190:                                              ; preds = %184
  %191 = icmp ugt i64 %182, %181
  br i1 %191, label %194, label %192

192:                                              ; preds = %190
  %193 = urem i64 %181, %182
  br label %194

194:                                              ; preds = %192, %190, %187
  %195 = phi i64 [ %189, %187 ], [ %193, %192 ], [ %181, %190 ]
  %196 = load %"struct.std::__1::__hash_node_base.854"**, %"struct.std::__1::__hash_node_base.854"*** %118, align 8
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %196, i64 %195
  %198 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %197, align 8
  %199 = icmp eq %"struct.std::__1::__hash_node_base.854"* %198, null
  br i1 %199, label %231, label %200

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %198, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %201, align 8
  %203 = icmp eq %"struct.std::__1::__hash_node_base.854"* %202, null
  br i1 %203, label %231, label %204

204:                                              ; preds = %200
  %205 = add i64 %182, -1
  br label %206

206:                                              ; preds = %227, %204
  %207 = phi %"struct.std::__1::__hash_node_base.854"* [ %202, %204 ], [ %229, %227 ]
  %208 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %207, i64 1
  %209 = bitcast %"struct.std::__1::__hash_node_base.854"* %208 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = icmp eq i64 %210, %181
  br i1 %211, label %222, label %212

212:                                              ; preds = %206
  br i1 %186, label %215, label %213

213:                                              ; preds = %212
  %214 = and i64 %210, %205
  br label %219

215:                                              ; preds = %212
  %216 = icmp ult i64 %210, %182
  br i1 %216, label %219, label %217

217:                                              ; preds = %215
  %218 = urem i64 %210, %182
  br label %219

219:                                              ; preds = %217, %215, %213
  %220 = phi i64 [ %214, %213 ], [ %218, %217 ], [ %210, %215 ]
  %221 = icmp eq i64 %220, %195
  br i1 %221, label %227, label %231

222:                                              ; preds = %206
  %223 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %207, i64 2
  %224 = bitcast %"struct.std::__1::__hash_node_base.854"* %223 to i32*
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, %180
  br i1 %226, label %232, label %227

227:                                              ; preds = %222, %219
  %228 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %207, i64 0, i32 0
  %229 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %228, align 8
  %230 = icmp eq %"struct.std::__1::__hash_node_base.854"* %229, null
  br i1 %230, label %231, label %206

231:                                              ; preds = %200, %194, %179, %227, %219
  call void @abort() #14
  unreachable

232:                                              ; preds = %222
  %233 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %207, i64 3
  %234 = bitcast %"struct.std::__1::__hash_node_base.854"* %233 to i32**
  %235 = load i32*, i32** %234, align 8
  %236 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %207, i64 4
  %237 = bitcast %"struct.std::__1::__hash_node_base.854"* %236 to i32**
  %238 = load i32*, i32** %237, align 8
  %239 = icmp eq i32* %235, %238
  br i1 %239, label %240, label %243

240:                                              ; preds = %436, %232
  %241 = load i64, i64* %89, align 8
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %439, label %126

243:                                              ; preds = %232, %436
  %244 = phi i32* [ %437, %436 ], [ %235, %232 ]
  %245 = load i32, i32* %244, align 4
  %246 = zext i32 %245 to i64
  %247 = load i64, i64* %119, align 8
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %296, label %249

249:                                              ; preds = %243
  %250 = call i64 @llvm.ctpop.i64(i64 %247) #13, !range !3
  %251 = icmp ugt i64 %250, 1
  br i1 %251, label %255, label %252

252:                                              ; preds = %249
  %253 = add i64 %247, 4294967295
  %254 = and i64 %253, %246
  br label %259

255:                                              ; preds = %249
  %256 = icmp ugt i64 %247, %246
  br i1 %256, label %259, label %257

257:                                              ; preds = %255
  %258 = urem i64 %246, %247
  br label %259

259:                                              ; preds = %257, %255, %252
  %260 = phi i64 [ %254, %252 ], [ %258, %257 ], [ %246, %255 ]
  %261 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %120, align 8
  %262 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %261, i64 %260
  %263 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %262, align 8
  %264 = icmp eq %"struct.std::__1::__hash_node_base.922"* %263, null
  br i1 %264, label %296, label %265

265:                                              ; preds = %259
  %266 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %263, i64 0, i32 0
  %267 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %266, align 8
  %268 = icmp eq %"struct.std::__1::__hash_node_base.922"* %267, null
  br i1 %268, label %296, label %269

269:                                              ; preds = %265
  %270 = add i64 %247, -1
  br label %271

271:                                              ; preds = %292, %269
  %272 = phi %"struct.std::__1::__hash_node_base.922"* [ %267, %269 ], [ %294, %292 ]
  %273 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %272, i64 1
  %274 = bitcast %"struct.std::__1::__hash_node_base.922"* %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = icmp eq i64 %275, %246
  br i1 %276, label %287, label %277

277:                                              ; preds = %271
  br i1 %251, label %280, label %278

278:                                              ; preds = %277
  %279 = and i64 %275, %270
  br label %284

280:                                              ; preds = %277
  %281 = icmp ult i64 %275, %247
  br i1 %281, label %284, label %282

282:                                              ; preds = %280
  %283 = urem i64 %275, %247
  br label %284

284:                                              ; preds = %282, %280, %278
  %285 = phi i64 [ %279, %278 ], [ %283, %282 ], [ %275, %280 ]
  %286 = icmp eq i64 %285, %260
  br i1 %286, label %292, label %296

287:                                              ; preds = %271
  %288 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %272, i64 2
  %289 = bitcast %"struct.std::__1::__hash_node_base.922"* %288 to i32*
  %290 = load i32, i32* %289, align 4
  %291 = icmp eq i32 %290, %245
  br i1 %291, label %436, label %292

292:                                              ; preds = %287, %284
  %293 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %272, i64 0, i32 0
  %294 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %293, align 8
  %295 = icmp eq %"struct.std::__1::__hash_node_base.922"* %294, null
  br i1 %295, label %296, label %271

296:                                              ; preds = %284, %292, %259, %243, %265
  %297 = load i64, i64* %121, align 8
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %346, label %299

299:                                              ; preds = %296
  %300 = call i64 @llvm.ctpop.i64(i64 %297) #13, !range !3
  %301 = icmp ugt i64 %300, 1
  br i1 %301, label %305, label %302

302:                                              ; preds = %299
  %303 = add i64 %297, 4294967295
  %304 = and i64 %303, %246
  br label %309

305:                                              ; preds = %299
  %306 = icmp ugt i64 %297, %246
  br i1 %306, label %309, label %307

307:                                              ; preds = %305
  %308 = urem i64 %246, %297
  br label %309

309:                                              ; preds = %307, %305, %302
  %310 = phi i64 [ %304, %302 ], [ %308, %307 ], [ %246, %305 ]
  %311 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %122, align 8
  %312 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %311, i64 %310
  %313 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %312, align 8
  %314 = icmp eq %"struct.std::__1::__hash_node_base.922"* %313, null
  br i1 %314, label %346, label %315

315:                                              ; preds = %309
  %316 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %313, i64 0, i32 0
  %317 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %316, align 8
  %318 = icmp eq %"struct.std::__1::__hash_node_base.922"* %317, null
  br i1 %318, label %346, label %319

319:                                              ; preds = %315
  %320 = add i64 %297, -1
  br label %321

321:                                              ; preds = %342, %319
  %322 = phi %"struct.std::__1::__hash_node_base.922"* [ %317, %319 ], [ %344, %342 ]
  %323 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %322, i64 1
  %324 = bitcast %"struct.std::__1::__hash_node_base.922"* %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = icmp eq i64 %325, %246
  br i1 %326, label %337, label %327

327:                                              ; preds = %321
  br i1 %301, label %330, label %328

328:                                              ; preds = %327
  %329 = and i64 %325, %320
  br label %334

330:                                              ; preds = %327
  %331 = icmp ult i64 %325, %297
  br i1 %331, label %334, label %332

332:                                              ; preds = %330
  %333 = urem i64 %325, %297
  br label %334

334:                                              ; preds = %332, %330, %328
  %335 = phi i64 [ %329, %328 ], [ %333, %332 ], [ %325, %330 ]
  %336 = icmp eq i64 %335, %310
  br i1 %336, label %342, label %346

337:                                              ; preds = %321
  %338 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %322, i64 2
  %339 = bitcast %"struct.std::__1::__hash_node_base.922"* %338 to i32*
  %340 = load i32, i32* %339, align 4
  %341 = icmp eq i32 %340, %245
  br i1 %341, label %436, label %342

342:                                              ; preds = %337, %334
  %343 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %322, i64 0, i32 0
  %344 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %343, align 8
  %345 = icmp eq %"struct.std::__1::__hash_node_base.922"* %344, null
  br i1 %345, label %346, label %321

346:                                              ; preds = %342, %334, %309, %296, %315
  %347 = load i64, i64* %123, align 8
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %396, label %349

349:                                              ; preds = %346
  %350 = call i64 @llvm.ctpop.i64(i64 %347) #13, !range !3
  %351 = icmp ugt i64 %350, 1
  br i1 %351, label %355, label %352

352:                                              ; preds = %349
  %353 = add i64 %347, 4294967295
  %354 = and i64 %353, %246
  br label %359

355:                                              ; preds = %349
  %356 = icmp ugt i64 %347, %246
  br i1 %356, label %359, label %357

357:                                              ; preds = %355
  %358 = urem i64 %246, %347
  br label %359

359:                                              ; preds = %357, %355, %352
  %360 = phi i64 [ %354, %352 ], [ %358, %357 ], [ %246, %355 ]
  %361 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %124, align 8
  %362 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %361, i64 %360
  %363 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %362, align 8
  %364 = icmp eq %"struct.std::__1::__hash_node_base.878"* %363, null
  br i1 %364, label %396, label %365

365:                                              ; preds = %359
  %366 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %363, i64 0, i32 0
  %367 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %366, align 8
  %368 = icmp eq %"struct.std::__1::__hash_node_base.878"* %367, null
  br i1 %368, label %396, label %369

369:                                              ; preds = %365
  %370 = add i64 %347, -1
  br label %371

371:                                              ; preds = %392, %369
  %372 = phi %"struct.std::__1::__hash_node_base.878"* [ %367, %369 ], [ %394, %392 ]
  %373 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %372, i64 1
  %374 = bitcast %"struct.std::__1::__hash_node_base.878"* %373 to i64*
  %375 = load i64, i64* %374, align 8
  %376 = icmp eq i64 %375, %246
  br i1 %376, label %387, label %377

377:                                              ; preds = %371
  br i1 %351, label %380, label %378

378:                                              ; preds = %377
  %379 = and i64 %375, %370
  br label %384

380:                                              ; preds = %377
  %381 = icmp ult i64 %375, %347
  br i1 %381, label %384, label %382

382:                                              ; preds = %380
  %383 = urem i64 %375, %347
  br label %384

384:                                              ; preds = %382, %380, %378
  %385 = phi i64 [ %379, %378 ], [ %383, %382 ], [ %375, %380 ]
  %386 = icmp eq i64 %385, %360
  br i1 %386, label %392, label %396

387:                                              ; preds = %371
  %388 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %372, i64 2
  %389 = bitcast %"struct.std::__1::__hash_node_base.878"* %388 to i32*
  %390 = load i32, i32* %389, align 4
  %391 = icmp eq i32 %390, %245
  br i1 %391, label %397, label %392

392:                                              ; preds = %387, %384
  %393 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %372, i64 0, i32 0
  %394 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %393, align 8
  %395 = icmp eq %"struct.std::__1::__hash_node_base.878"* %394, null
  br i1 %395, label %396, label %371

396:                                              ; preds = %365, %359, %346, %392, %384
  call void @abort() #14
  unreachable

397:                                              ; preds = %387
  %398 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %372, i64 3
  %399 = bitcast %"struct.std::__1::__hash_node_base.878"* %398 to i64*
  %400 = load i64, i64* %399, align 8
  %401 = load i64, i64* %93, align 8
  %402 = load i64, i64* %94, align 8
  %403 = sub i64 %401, %402
  %404 = icmp eq i64 %403, 0
  %405 = shl i64 %403, 6
  %406 = add i64 %405, -1
  %407 = select i1 %404, i64 0, i64 %406
  %408 = load i64, i64* %88, align 8
  %409 = load i64, i64* %89, align 8
  %410 = add i64 %409, %408
  %411 = icmp eq i64 %407, %410
  %412 = inttoptr i64 %402 to %"class.spvtools::opt::BasicBlock"***
  %413 = inttoptr i64 %401 to %"class.spvtools::opt::BasicBlock"***
  br i1 %411, label %414, label %420

414:                                              ; preds = %397
  call void @_ZNSt3__15dequeIPKN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"* nonnull %125) #13
  %415 = load i64, i64* %89, align 8
  %416 = load i64, i64* %88, align 8
  %417 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %86, align 8
  %418 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %87, align 8
  %419 = add i64 %416, %415
  br label %420

420:                                              ; preds = %414, %397
  %421 = phi i64 [ %419, %414 ], [ %410, %397 ]
  %422 = phi %"class.spvtools::opt::BasicBlock"*** [ %418, %414 ], [ %413, %397 ]
  %423 = phi %"class.spvtools::opt::BasicBlock"*** [ %417, %414 ], [ %412, %397 ]
  %424 = icmp eq %"class.spvtools::opt::BasicBlock"*** %422, %423
  br i1 %424, label %432, label %425

425:                                              ; preds = %420
  %426 = lshr i64 %421, 9
  %427 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %423, i64 %426
  %428 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %427, align 8
  %429 = and i64 %421, 511
  %430 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %428, i64 %429
  %431 = bitcast %"class.spvtools::opt::BasicBlock"** %430 to i64*
  br label %432

432:                                              ; preds = %420, %425
  %433 = phi i64* [ %431, %425 ], [ null, %420 ]
  store i64 %400, i64* %433, align 8
  %434 = load i64, i64* %89, align 8
  %435 = add i64 %434, 1
  store i64 %435, i64* %89, align 8
  br label %436

436:                                              ; preds = %287, %337, %432
  %437 = getelementptr inbounds i32, i32* %244, i64 1
  %438 = icmp eq i32* %437, %238
  br i1 %438, label %240, label %243

439:                                              ; preds = %240, %109
  %440 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %86, align 8
  %441 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %87, align 8
  %442 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %441 to i64
  %443 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %440 to i64
  store i64 0, i64* %89, align 8
  %444 = sub i64 %442, %443
  %445 = ashr exact i64 %444, 3
  %446 = icmp ugt i64 %445, 2
  br i1 %446, label %447, label %460

447:                                              ; preds = %439, %447
  %448 = phi %"class.spvtools::opt::BasicBlock"*** [ %452, %447 ], [ %440, %439 ]
  %449 = bitcast %"class.spvtools::opt::BasicBlock"*** %448 to i8**
  %450 = load i8*, i8** %449, align 8
  call void @_ZdlPv(i8* %450) #12
  %451 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %86, align 8
  %452 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %451, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %452, %"class.spvtools::opt::BasicBlock"**** %86, align 8
  %453 = load i64, i64* %93, align 8
  %454 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %452 to i64
  %455 = sub i64 %453, %454
  %456 = ashr exact i64 %455, 3
  %457 = icmp ugt i64 %456, 2
  br i1 %457, label %447, label %458

458:                                              ; preds = %447
  %459 = inttoptr i64 %453 to %"class.spvtools::opt::BasicBlock"***
  br label %460

460:                                              ; preds = %458, %439
  %461 = phi %"class.spvtools::opt::BasicBlock"*** [ %441, %439 ], [ %459, %458 ]
  %462 = phi %"class.spvtools::opt::BasicBlock"*** [ %440, %439 ], [ %452, %458 ]
  %463 = phi i64 [ %445, %439 ], [ %456, %458 ]
  switch i64 %463, label %467 [
    i64 1, label %465
    i64 2, label %464
  ]

464:                                              ; preds = %460
  br label %465

465:                                              ; preds = %460, %464
  %466 = phi i64 [ 512, %464 ], [ 256, %460 ]
  store i64 %466, i64* %88, align 8
  br label %467

467:                                              ; preds = %465, %460
  %468 = icmp eq %"class.spvtools::opt::BasicBlock"*** %462, %461
  br i1 %468, label %487, label %469

469:                                              ; preds = %467, %469
  %470 = phi %"class.spvtools::opt::BasicBlock"*** [ %473, %469 ], [ %462, %467 ]
  %471 = bitcast %"class.spvtools::opt::BasicBlock"*** %470 to i8**
  %472 = load i8*, i8** %471, align 8
  call void @_ZdlPv(i8* %472) #12
  %473 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %470, i64 1
  %474 = icmp eq %"class.spvtools::opt::BasicBlock"*** %473, %461
  br i1 %474, label %475, label %469

475:                                              ; preds = %469
  %476 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %86, align 8
  %477 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %87, align 8
  %478 = icmp eq %"class.spvtools::opt::BasicBlock"*** %477, %476
  br i1 %478, label %487, label %479

479:                                              ; preds = %475
  %480 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %476 to i64
  %481 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %477, i64 -1
  %482 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %481 to i64
  %483 = sub i64 %482, %480
  %484 = lshr i64 %483, 3
  %485 = xor i64 %484, -1
  %486 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %477, i64 %485
  store %"class.spvtools::opt::BasicBlock"*** %486, %"class.spvtools::opt::BasicBlock"**** %87, align 8
  br label %487

487:                                              ; preds = %479, %475, %467
  %488 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %85, align 8
  %489 = icmp eq %"class.spvtools::opt::BasicBlock"*** %488, null
  br i1 %489, label %492, label %490

490:                                              ; preds = %487
  %491 = bitcast %"class.spvtools::opt::BasicBlock"*** %488 to i8*
  call void @_ZdlPv(i8* %491) #12
  br label %492

492:                                              ; preds = %487, %490
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %84) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt4Loop13IsSafeToCloneEv(%"class.spvtools::opt::Loop"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unordered_set.917", align 8
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 16
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %26

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 400) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %14, %"class.spvtools::opt::Module"* %12) #13
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 15
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.210"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %"class.spvtools::opt::CFG"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %10
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %18) #13
  %22 = bitcast %"class.spvtools::opt::CFG"* %18 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %10
  %24 = load i32, i32* %6, align 8
  %25 = or i32 %24, 16
  store i32 %25, i32* %6, align 8
  br label %26

26:                                               ; preds = %1, %23
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 15, i32 0, i32 0, i32 0
  %28 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %27, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = bitcast %"struct.std::__1::__hash_node_base.922"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %122, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %28, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %28, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %36

36:                                               ; preds = %33, %118
  %37 = phi i64 [ %31, %33 ], [ %120, %118 ]
  %38 = inttoptr i64 %37 to %"struct.std::__1::__hash_node.1195"*
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node.1195", %"struct.std::__1::__hash_node.1195"* %38, i64 0, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i64
  %42 = load i64, i64* %34, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %91, label %44

44:                                               ; preds = %36
  %45 = tail call i64 @llvm.ctpop.i64(i64 %42) #13, !range !3
  %46 = icmp ugt i64 %45, 1
  br i1 %46, label %50, label %47

47:                                               ; preds = %44
  %48 = add i64 %42, 4294967295
  %49 = and i64 %48, %41
  br label %54

50:                                               ; preds = %44
  %51 = icmp ugt i64 %42, %41
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = urem i64 %41, %42
  br label %54

54:                                               ; preds = %52, %50, %47
  %55 = phi i64 [ %49, %47 ], [ %53, %52 ], [ %41, %50 ]
  %56 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %35, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %56, i64 %55
  %58 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.878"* %58, null
  br i1 %59, label %91, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %58, i64 0, i32 0
  %62 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %61, align 8
  %63 = icmp eq %"struct.std::__1::__hash_node_base.878"* %62, null
  br i1 %63, label %91, label %64

64:                                               ; preds = %60
  %65 = add i64 %42, -1
  br label %66

66:                                               ; preds = %87, %64
  %67 = phi %"struct.std::__1::__hash_node_base.878"* [ %62, %64 ], [ %89, %87 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %67, i64 1
  %69 = bitcast %"struct.std::__1::__hash_node_base.878"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, %41
  br i1 %71, label %82, label %72

72:                                               ; preds = %66
  br i1 %46, label %75, label %73

73:                                               ; preds = %72
  %74 = and i64 %70, %65
  br label %79

75:                                               ; preds = %72
  %76 = icmp ult i64 %70, %42
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = urem i64 %70, %42
  br label %79

79:                                               ; preds = %77, %75, %73
  %80 = phi i64 [ %74, %73 ], [ %78, %77 ], [ %70, %75 ]
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %87, label %91

82:                                               ; preds = %66
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %67, i64 2
  %84 = bitcast %"struct.std::__1::__hash_node_base.878"* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, %40
  br i1 %86, label %92, label %87

87:                                               ; preds = %82, %79
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %67, i64 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.878"* %89, null
  br i1 %90, label %91, label %66

91:                                               ; preds = %60, %54, %36, %87, %79
  tail call void @abort() #14
  unreachable

92:                                               ; preds = %82
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %67, i64 3
  %94 = bitcast %"struct.std::__1::__hash_node_base.878"* %93 to %"class.spvtools::opt::BasicBlock"**
  %95 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %94, align 8
  %96 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %95, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %98 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %95, i64 0, i32 2, i32 0, i32 1
  %99 = bitcast %"class.spvtools::opt::Instruction"** %97 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = inttoptr i64 %100 to %"class.spvtools::opt::Instruction"*
  %102 = icmp eq %"class.spvtools::opt::Instruction"* %98, %101
  br i1 %102, label %118, label %103

103:                                              ; preds = %92, %111
  %104 = phi %"class.spvtools::opt::Instruction"* [ %116, %111 ], [ %101, %92 ]
  %105 = phi i64 [ %115, %111 ], [ %100, %92 ]
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %104, i64 0, i32 2
  %107 = load i32, i32* %106, align 8
  %108 = tail call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %107) #13
  br i1 %108, label %111, label %109

109:                                              ; preds = %103
  %110 = tail call zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %96, %"class.spvtools::opt::Instruction"* %104) #13
  br i1 %110, label %111, label %266

111:                                              ; preds = %109, %103
  %112 = inttoptr i64 %105 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %113 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %112, i64 0, i32 1
  %114 = bitcast %"class.spvtools::opt::Instruction"** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = inttoptr i64 %115 to %"class.spvtools::opt::Instruction"*
  %117 = icmp eq %"class.spvtools::opt::Instruction"* %98, %116
  br i1 %117, label %118, label %103

118:                                              ; preds = %111, %92
  %119 = inttoptr i64 %37 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %36

122:                                              ; preds = %118, %26
  %123 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 1
  %124 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %123, align 8
  %125 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %124) #13
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %125, null
  br i1 %126, label %265, label %127

127:                                              ; preds = %122
  %128 = bitcast %"class.std::__1::unordered_set.917"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %128) #13
  %129 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %2, i64 0, i32 0, i32 4, i64 0
  %132 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %2, i64 0, i32 0, i32 3
  %133 = bitcast %"class.std::__1::__compressed_pair.936"* %132 to i32*
  %134 = bitcast i8* %131 to i32*
  store i32 -1431655766, i32* %134, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %128, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %133, align 8
  call void @_ZNK8spvtools3opt4Loop16GetMergingBlocksEPNSt3__113unordered_setIjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorIjEEEE(%"class.spvtools::opt::Loop"* %0, %"class.std::__1::unordered_set.917"* nonnull %2)
  %135 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %135) #13
  %136 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 3
  %137 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %136, align 8
  %138 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %137, i64 0, i32 1, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %138, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %139, i64 0, i32 4
  %141 = load i8, i8* %140, align 1, !range !2
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %148, label %143

143:                                              ; preds = %127
  %144 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %139, i64 0, i32 3
  %145 = load i8, i8* %144, align 4, !range !2
  %146 = zext i8 %145 to i32
  %147 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %139, i32 %146) #13
  br label %148

148:                                              ; preds = %127, %143
  %149 = phi i32 [ %147, %143 ], [ 0, %127 ]
  store i32 %149, i32* %3, align 4
  %150 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %2, i64 0, i32 0
  %151 = call i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.918"* nonnull %150, i32* nonnull dereferenceable(4) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135) #13
  %152 = bitcast %"struct.std::__1::__hash_node_base.922"** %130 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = icmp eq i64 %153, 0
  %155 = inttoptr i64 %153 to %"struct.std::__1::__hash_node_base.922"*
  br i1 %154, label %248, label %156

156:                                              ; preds = %148
  %157 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %28, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %158 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %28, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %159

159:                                              ; preds = %156, %241
  %160 = phi i64 [ %153, %156 ], [ %243, %241 ]
  %161 = inttoptr i64 %160 to %"struct.std::__1::__hash_node.1195"*
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node.1195", %"struct.std::__1::__hash_node.1195"* %161, i64 0, i32 2
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i64
  %165 = load i64, i64* %157, align 8
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %214, label %167

167:                                              ; preds = %159
  %168 = call i64 @llvm.ctpop.i64(i64 %165) #13, !range !3
  %169 = icmp ugt i64 %168, 1
  br i1 %169, label %173, label %170

170:                                              ; preds = %167
  %171 = add i64 %165, 4294967295
  %172 = and i64 %171, %164
  br label %177

173:                                              ; preds = %167
  %174 = icmp ugt i64 %165, %164
  br i1 %174, label %177, label %175

175:                                              ; preds = %173
  %176 = urem i64 %164, %165
  br label %177

177:                                              ; preds = %175, %173, %170
  %178 = phi i64 [ %172, %170 ], [ %176, %175 ], [ %164, %173 ]
  %179 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %158, align 8
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %179, i64 %178
  %181 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.878"* %181, null
  br i1 %182, label %214, label %183

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %181, i64 0, i32 0
  %185 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %184, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base.878"* %185, null
  br i1 %186, label %214, label %187

187:                                              ; preds = %183
  %188 = add i64 %165, -1
  br label %189

189:                                              ; preds = %210, %187
  %190 = phi %"struct.std::__1::__hash_node_base.878"* [ %185, %187 ], [ %212, %210 ]
  %191 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %190, i64 1
  %192 = bitcast %"struct.std::__1::__hash_node_base.878"* %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = icmp eq i64 %193, %164
  br i1 %194, label %205, label %195

195:                                              ; preds = %189
  br i1 %169, label %198, label %196

196:                                              ; preds = %195
  %197 = and i64 %193, %188
  br label %202

198:                                              ; preds = %195
  %199 = icmp ult i64 %193, %165
  br i1 %199, label %202, label %200

200:                                              ; preds = %198
  %201 = urem i64 %193, %165
  br label %202

202:                                              ; preds = %200, %198, %196
  %203 = phi i64 [ %197, %196 ], [ %201, %200 ], [ %193, %198 ]
  %204 = icmp eq i64 %203, %178
  br i1 %204, label %210, label %214

205:                                              ; preds = %189
  %206 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %190, i64 2
  %207 = bitcast %"struct.std::__1::__hash_node_base.878"* %206 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, %163
  br i1 %209, label %215, label %210

210:                                              ; preds = %205, %202
  %211 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %190, i64 0, i32 0
  %212 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %211, align 8
  %213 = icmp eq %"struct.std::__1::__hash_node_base.878"* %212, null
  br i1 %213, label %214, label %189

214:                                              ; preds = %183, %177, %159, %210, %202
  call void @abort() #14
  unreachable

215:                                              ; preds = %205
  %216 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %190, i64 3
  %217 = bitcast %"struct.std::__1::__hash_node_base.878"* %216 to %"class.spvtools::opt::BasicBlock"**
  %218 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %217, align 8
  %219 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %220 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %218, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %221 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %218, i64 0, i32 2, i32 0, i32 1
  %222 = bitcast %"class.spvtools::opt::Instruction"** %220 to i64*
  %223 = load i64, i64* %222, align 8
  %224 = inttoptr i64 %223 to %"class.spvtools::opt::Instruction"*
  %225 = icmp eq %"class.spvtools::opt::Instruction"* %221, %224
  br i1 %225, label %241, label %226

226:                                              ; preds = %215, %234
  %227 = phi %"class.spvtools::opt::Instruction"* [ %239, %234 ], [ %224, %215 ]
  %228 = phi i64 [ %238, %234 ], [ %223, %215 ]
  %229 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %227, i64 0, i32 2
  %230 = load i32, i32* %229, align 8
  %231 = call zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32 %230) #13
  br i1 %231, label %234, label %232

232:                                              ; preds = %226
  %233 = call zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %219, %"class.spvtools::opt::Instruction"* %227) #13
  br i1 %233, label %234, label %245

234:                                              ; preds = %232, %226
  %235 = inttoptr i64 %228 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %236 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %235, i64 0, i32 1
  %237 = bitcast %"class.spvtools::opt::Instruction"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = inttoptr i64 %238 to %"class.spvtools::opt::Instruction"*
  %240 = icmp eq %"class.spvtools::opt::Instruction"* %221, %239
  br i1 %240, label %241, label %226

241:                                              ; preds = %234, %215
  %242 = inttoptr i64 %160 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %159

245:                                              ; preds = %241, %232
  %246 = phi i32 [ 1, %232 ], [ 0, %241 ]
  %247 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %130, align 8
  br label %248

248:                                              ; preds = %245, %148
  %249 = phi %"struct.std::__1::__hash_node_base.922"* [ %247, %245 ], [ %155, %148 ]
  %250 = phi i32 [ %246, %245 ], [ 0, %148 ]
  %251 = icmp eq %"struct.std::__1::__hash_node_base.922"* %249, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %248, %252
  %253 = phi %"struct.std::__1::__hash_node_base.922"* [ %255, %252 ], [ %249, %248 ]
  %254 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %253, i64 0, i32 0
  %255 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %254, align 8
  %256 = bitcast %"struct.std::__1::__hash_node_base.922"* %253 to i8*
  call void @_ZdlPv(i8* %256) #12
  %257 = icmp eq %"struct.std::__1::__hash_node_base.922"* %255, null
  br i1 %257, label %258, label %252

258:                                              ; preds = %252, %248
  %259 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %129, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %129, align 8
  %260 = icmp eq %"struct.std::__1::__hash_node_base.922"** %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %258
  %262 = bitcast %"struct.std::__1::__hash_node_base.922"** %259 to i8*
  call void @_ZdlPv(i8* %262) #12
  br label %263

263:                                              ; preds = %258, %261
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %128) #13
  %264 = icmp eq i32 %250, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %122, %263
  br label %266

266:                                              ; preds = %109, %263, %265
  %267 = phi i1 [ true, %265 ], [ false, %263 ], [ false, %109 ]
  ret i1 %267
}

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt4Loop7IsLCSSAEv(%"class.spvtools::opt::Loop"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unordered_set.917", align 8
  %3 = alloca %"class.std::__1::function.972", align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %5 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 11
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 16
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %29

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %11, align 8
  %13 = tail call i8* @_Znwm(i64 400) #12
  %14 = bitcast i8* %13 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %14, %"class.spvtools::opt::Module"* %12) #13
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 15
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %17, align 8
  %19 = bitcast %"class.std::__1::unique_ptr.210"* %16 to i64*
  store i64 %15, i64* %19, align 8
  %20 = icmp eq %"class.spvtools::opt::CFG"* %18, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %10
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %18) #13
  %22 = bitcast %"class.spvtools::opt::CFG"* %18 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  br label %23

23:                                               ; preds = %21, %10
  %24 = load i32, i32* %6, align 8
  %25 = or i32 %24, 16
  store i32 %25, i32* %6, align 8
  %26 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %4, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 11
  %28 = load i32, i32* %27, align 8
  br label %29

29:                                               ; preds = %1, %23
  %30 = phi i32 [ %7, %1 ], [ %28, %23 ]
  %31 = phi %"class.spvtools::opt::IRContext"* [ %5, %1 ], [ %26, %23 ]
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %5, i64 0, i32 15, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 11
  %35 = and i32 %30, 1
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %61

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %38, align 8
  %40 = tail call i8* @_Znwm(i64 104) #12
  %41 = bitcast i8* %40 to %"class.spvtools::opt::analysis::DefUseManager"*
  %42 = getelementptr inbounds i8, i8* %40, i64 32
  %43 = bitcast i8* %42 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %43, align 4
  %44 = getelementptr inbounds i8, i8* %40, i64 48
  %45 = getelementptr inbounds i8, i8* %40, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #13
  %46 = bitcast i8* %45 to i8**
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds i8, i8* %40, i64 64
  %48 = getelementptr inbounds i8, i8* %40, i64 96
  %49 = bitcast i8* %48 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %49, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %41, %"class.spvtools::opt::Module"* %39) #13
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 6
  %51 = ptrtoint i8* %40 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %50, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %52, align 8
  %54 = bitcast %"class.std::__1::unique_ptr.1"* %50 to i64*
  store i64 %51, i64* %54, align 8
  %55 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %53, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %37
  %57 = bitcast %"class.std::__1::unique_ptr.1"* %50 to %"struct.std::__1::default_delete.57"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.57"* %57, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %53) #13
  br label %58

58:                                               ; preds = %56, %37
  %59 = load i32, i32* %34, align 8
  %60 = or i32 %59, 1
  store i32 %60, i32* %34, align 8
  br label %61

61:                                               ; preds = %29, %58
  %62 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %31, i64 0, i32 6, i32 0, i32 0, i32 0
  %63 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %62, align 8
  %64 = bitcast %"class.std::__1::unordered_set.917"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #13
  %65 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %2, i64 0, i32 0, i32 4, i64 0
  %68 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %2, i64 0, i32 0, i32 3
  %69 = bitcast %"class.std::__1::__compressed_pair.936"* %68 to i32*
  %70 = bitcast i8* %67 to i32*
  store i32 -1431655766, i32* %70, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %69, align 8
  call void @_ZNK8spvtools3opt4Loop13GetExitBlocksEPNSt3__113unordered_setIjNS2_4hashIjEENS2_8equal_toIjEENS2_9allocatorIjEEEE(%"class.spvtools::opt::Loop"* %0, %"class.std::__1::unordered_set.917"* nonnull %2)
  %71 = bitcast %"class.spvtools::opt::Loop"* %0 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %74 = bitcast %"struct.std::__1::__hash_node_base.922"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %178, label %77

77:                                               ; preds = %61
  %78 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %33, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %33, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = bitcast %"class.std::__1::function.972"* %3 to i8*
  %81 = getelementptr inbounds %"class.std::__1::function.972", %"class.std::__1::function.972"* %3, i64 0, i32 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.972", %"class.std::__1::function.972"* %3, i64 0, i32 0, i32 2
  %83 = getelementptr inbounds %"class.std::__1::function.972", %"class.std::__1::function.972"* %3, i64 0, i32 0, i32 0, i32 0
  br label %84

84:                                               ; preds = %77, %174
  %85 = phi i64 [ %75, %77 ], [ %176, %174 ]
  %86 = inttoptr i64 %85 to %"struct.std::__1::__hash_node.1195"*
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node.1195", %"struct.std::__1::__hash_node.1195"* %86, i64 0, i32 2
  %88 = load i32, i32* %87, align 4
  %89 = zext i32 %88 to i64
  %90 = load i64, i64* %78, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %139, label %92

92:                                               ; preds = %84
  %93 = call i64 @llvm.ctpop.i64(i64 %90) #13, !range !3
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %92
  %96 = add i64 %90, 4294967295
  %97 = and i64 %96, %89
  br label %102

98:                                               ; preds = %92
  %99 = icmp ugt i64 %90, %89
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %89, %90
  br label %102

102:                                              ; preds = %100, %98, %95
  %103 = phi i64 [ %97, %95 ], [ %101, %100 ], [ %89, %98 ]
  %104 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %79, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %104, i64 %103
  %106 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.878"* %106, null
  br i1 %107, label %139, label %108

108:                                              ; preds = %102
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %106, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %109, align 8
  %111 = icmp eq %"struct.std::__1::__hash_node_base.878"* %110, null
  br i1 %111, label %139, label %112

112:                                              ; preds = %108
  %113 = add i64 %90, -1
  br label %114

114:                                              ; preds = %135, %112
  %115 = phi %"struct.std::__1::__hash_node_base.878"* [ %110, %112 ], [ %137, %135 ]
  %116 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %115, i64 1
  %117 = bitcast %"struct.std::__1::__hash_node_base.878"* %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = icmp eq i64 %118, %89
  br i1 %119, label %130, label %120

120:                                              ; preds = %114
  br i1 %94, label %123, label %121

121:                                              ; preds = %120
  %122 = and i64 %118, %113
  br label %127

123:                                              ; preds = %120
  %124 = icmp ult i64 %118, %90
  br i1 %124, label %127, label %125

125:                                              ; preds = %123
  %126 = urem i64 %118, %90
  br label %127

127:                                              ; preds = %125, %123, %121
  %128 = phi i64 [ %122, %121 ], [ %126, %125 ], [ %118, %123 ]
  %129 = icmp eq i64 %128, %103
  br i1 %129, label %135, label %139

130:                                              ; preds = %114
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %115, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base.878"* %131 to i32*
  %133 = load i32, i32* %132, align 4
  %134 = icmp eq i32 %133, %88
  br i1 %134, label %140, label %135

135:                                              ; preds = %130, %127
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %115, i64 0, i32 0
  %137 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %136, align 8
  %138 = icmp eq %"struct.std::__1::__hash_node_base.878"* %137, null
  br i1 %138, label %139, label %114

139:                                              ; preds = %108, %102, %84, %135, %127
  call void @abort() #14
  unreachable

140:                                              ; preds = %130
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %115, i64 3
  %142 = bitcast %"struct.std::__1::__hash_node_base.878"* %141 to %"class.spvtools::opt::BasicBlock"**
  %143 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %142, align 8
  %144 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %143, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %145 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %143, i64 0, i32 2, i32 0, i32 1
  %146 = bitcast %"class.spvtools::opt::Instruction"** %144 to i64*
  %147 = load i64, i64* %146, align 8
  %148 = inttoptr i64 %147 to %"class.spvtools::opt::Instruction"*
  %149 = icmp eq %"class.spvtools::opt::Instruction"* %145, %148
  br i1 %149, label %174, label %150

150:                                              ; preds = %140, %167
  %151 = phi %"class.spvtools::opt::Instruction"* [ %172, %167 ], [ %148, %140 ]
  %152 = phi i64 [ %171, %167 ], [ %147, %140 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %80) #13
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_4Loop7IsLCSSAEvE3$_2S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %81, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop7IsLCSSAEvE3$_2FbPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %82, align 8
  %153 = call i8* @_Znwm(i64 24) #12, !noalias !13
  %154 = bitcast i8* %153 to %"class.std::__1::unordered_set.917"**
  store %"class.std::__1::unordered_set.917"* %2, %"class.std::__1::unordered_set.917"** %154, align 8
  %155 = getelementptr inbounds i8, i8* %153, i64 8
  %156 = bitcast i8* %155 to i64*
  store i64 %72, i64* %156, align 8
  %157 = getelementptr inbounds i8, i8* %153, i64 16
  %158 = bitcast i8* %157 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %0, %"class.spvtools::opt::Loop"** %158, align 8
  store i8* %153, i8** %83, align 8
  %159 = call zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %63, %"class.spvtools::opt::Instruction"* %151, %"class.std::__1::function.972"* nonnull dereferenceable(32) %3) #13
  %160 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %82, align 8
  %161 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %160, i64 0, i32 1
  %162 = load void (i8*)*, void (i8*)** %161, align 8
  %163 = icmp eq void (i8*)* %162, null
  br i1 %163, label %166, label %164

164:                                              ; preds = %150
  %165 = load i8*, i8** %83, align 8
  call void %162(i8* %165) #13
  br label %166

166:                                              ; preds = %150, %164
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %80) #13
  br i1 %159, label %167, label %178

167:                                              ; preds = %166
  %168 = inttoptr i64 %152 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %169 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %168, i64 0, i32 1
  %170 = bitcast %"class.spvtools::opt::Instruction"** %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = inttoptr i64 %171 to %"class.spvtools::opt::Instruction"*
  %173 = icmp eq %"class.spvtools::opt::Instruction"* %145, %172
  br i1 %173, label %174, label %150

174:                                              ; preds = %167, %140
  %175 = inttoptr i64 %85 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = icmp eq i64 %176, 0
  br i1 %177, label %178, label %84

178:                                              ; preds = %174, %166, %61
  %179 = phi i1 [ true, %61 ], [ false, %166 ], [ true, %174 ]
  %180 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %66, align 8
  %181 = icmp eq %"struct.std::__1::__hash_node_base.922"* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %178, %182
  %183 = phi %"struct.std::__1::__hash_node_base.922"* [ %185, %182 ], [ %180, %178 ]
  %184 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %183, i64 0, i32 0
  %185 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %184, align 8
  %186 = bitcast %"struct.std::__1::__hash_node_base.922"* %183 to i8*
  call void @_ZdlPv(i8* %186) #12
  %187 = icmp eq %"struct.std::__1::__hash_node_base.922"* %185, null
  br i1 %187, label %188, label %182

188:                                              ; preds = %182, %178
  %189 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %65, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %65, align 8
  %190 = icmp eq %"struct.std::__1::__hash_node_base.922"** %189, null
  br i1 %190, label %193, label %191

191:                                              ; preds = %188
  %192 = bitcast %"struct.std::__1::__hash_node_base.922"** %189 to i8*
  call void @_ZdlPv(i8* %192) #12
  br label %193

193:                                              ; preds = %188, %191
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #13
  ret i1 %179
}

declare zeroext i1 @_ZNK8spvtools3opt8analysis13DefUseManager13WhileEachUserEPKNS0_11InstructionERKNSt3__18functionIFbPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.972"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt4Loop22ShouldHoistInstructionEPNS0_9IRContextEPNS0_11InstructionE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS0_9IRContextEPNS0_11InstructionE(%"class.spvtools::opt::Loop"* %0, %"class.spvtools::opt::IRContext"* %1, %"class.spvtools::opt::Instruction"* %2)
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = tail call zeroext i1 @_ZNK8spvtools3opt11Instruction22IsOpcodeCodeMotionSafeEv(%"class.spvtools::opt::Instruction"* %2) #13
  br label %7

7:                                                ; preds = %5, %3
  %8 = phi i1 [ false, %3 ], [ %6, %5 ]
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS0_9IRContextEPNS0_11InstructionE(%"class.spvtools::opt::Loop"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.1168", align 8
  %5 = alloca %"class.spvtools::opt::analysis::DefUseManager"*, align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::function.979", align 8
  %8 = bitcast %"class.spvtools::opt::analysis::DefUseManager"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #13
  store %"class.spvtools::opt::analysis::DefUseManager"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::analysis::DefUseManager"*), %"class.spvtools::opt::analysis::DefUseManager"** %5, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %37

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 104) #12
  %17 = bitcast i8* %16 to %"class.spvtools::opt::analysis::DefUseManager"*
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = getelementptr inbounds i8, i8* %16, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #13
  %22 = bitcast i8* %21 to i8**
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %16, i64 64
  %24 = getelementptr inbounds i8, i8* %16, i64 96
  %25 = bitcast i8* %24 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %25, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %17, %"class.spvtools::opt::Module"* %15) #13
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1, i64 0, i32 6
  %27 = ptrtoint i8* %16 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %26, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %28, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.1"* %26 to i64*
  store i64 %27, i64* %30, align 8
  %31 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %29, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %13
  %33 = bitcast %"class.std::__1::unique_ptr.1"* %26 to %"struct.std::__1::default_delete.57"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.57"* %33, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %29) #13
  br label %34

34:                                               ; preds = %32, %13
  %35 = load i32, i32* %9, align 8
  %36 = or i32 %35, 1
  store i32 %36, i32* %9, align 8
  br label %37

37:                                               ; preds = %3, %34
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1, i64 0, i32 6, i32 0, i32 0, i32 0
  %39 = bitcast %"class.spvtools::opt::analysis::DefUseManager"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.spvtools::opt::analysis::DefUseManager"** %5 to i64*
  store i64 %40, i64* %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #13
  store i8 1, i8* %6, align 1
  %42 = bitcast %"class.std::__1::function.979"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #13
  %43 = getelementptr inbounds %"class.std::__1::function.979", %"class.std::__1::function.979"* %7, i64 0, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::function.979", %"class.std::__1::function.979"* %7, i64 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.std::__1::function.979", %"class.std::__1::function.979"* %7, i64 0, i32 0, i32 2
  %46 = getelementptr inbounds %"class.std::__1::function.979", %"class.std::__1::function.979"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %47 = bitcast i8* %46 to i64*
  store i64 -6148914691236517206, i64* %47, align 8
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS8_9IRContextEPNS8_11InstructionEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %44, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS5_9IRContextEPNS5_11InstructionEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %45, align 8
  %48 = tail call i8* @_Znwm(i64 24) #12, !noalias !18
  %49 = bitcast i8* %48 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %0, %"class.spvtools::opt::Loop"** %49, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 8
  %51 = bitcast i8* %50 to %"class.spvtools::opt::analysis::DefUseManager"***
  store %"class.spvtools::opt::analysis::DefUseManager"** %5, %"class.spvtools::opt::analysis::DefUseManager"*** %51, align 8
  %52 = getelementptr inbounds i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to i8**
  store i8* %6, i8** %53, align 8
  store i8* %48, i8** %43, align 8
  %54 = bitcast %"class.std::__1::function.1168"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #13
  %55 = ptrtoint %"class.std::__1::function.979"* %7 to i64
  %56 = getelementptr inbounds %"class.std::__1::function.1168", %"class.std::__1::function.1168"* %4, i64 0, i32 0, i32 1, i32 0
  %57 = getelementptr inbounds %"class.std::__1::function.1168", %"class.std::__1::function.1168"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %56, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %57, align 8
  %58 = bitcast %"class.std::__1::function.1168"* %4 to i64*
  store i64 %55, i64* %58, align 8
  %59 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 6, i32 0, i32 0
  %60 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 6, i32 0, i32 1
  %62 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %61, align 8
  %63 = icmp eq %"struct.spvtools::opt::Operand"* %60, %62
  br i1 %63, label %86, label %64

64:                                               ; preds = %37
  %65 = getelementptr inbounds %"class.std::__1::function.1168", %"class.std::__1::function.1168"* %4, i64 0, i32 0, i32 0
  br label %66

66:                                               ; preds = %81, %64
  %67 = phi %"struct.spvtools::opt::Operand"* [ %60, %64 ], [ %82, %81 ]
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %67, i64 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %69) #13
  br i1 %70, label %71, label %81

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %67, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %73 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %72, align 8
  %74 = icmp eq %"class.std::__1::vector.324"* %73, null
  %75 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %73, i64 0, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %67, i64 0, i32 1, i32 2
  %77 = select i1 %74, i32** %76, i32** %75
  %78 = load i32*, i32** %77, align 8
  %79 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %56, align 8
  %80 = call zeroext i1 %79(%"union.std::__1::__function::__policy_storage"* nonnull %65, i32* %78) #13
  br i1 %80, label %81, label %84

81:                                               ; preds = %71, %66
  %82 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %67, i64 1
  %83 = icmp eq %"struct.spvtools::opt::Operand"* %82, %62
  br i1 %83, label %84, label %66

84:                                               ; preds = %81, %71
  %85 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %57, align 8
  br label %86

86:                                               ; preds = %84, %37
  %87 = phi %"struct.std::__1::__function::__policy"* [ %85, %84 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %37 ]
  %88 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %87, i64 0, i32 1
  %89 = load void (i8*)*, void (i8*)** %88, align 8
  %90 = icmp eq void (i8*)* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.std::__1::function.1168", %"class.std::__1::function.1168"* %4, i64 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  call void %89(i8* %93) #13
  br label %94

94:                                               ; preds = %86, %91
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #13
  %95 = load i8, i8* %6, align 1, !range !2
  %96 = icmp ne i8 %95, 0
  %97 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %45, align 8
  %98 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %97, i64 0, i32 1
  %99 = load void (i8*)*, void (i8*)** %98, align 8
  %100 = icmp eq void (i8*)* %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %94
  %102 = load i8*, i8** %43, align 8
  call void %99(i8* %102) #13
  br label %103

103:                                              ; preds = %94, %101
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #13
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #13
  ret i1 %96
}

declare zeroext i1 @_ZNK8spvtools3opt11Instruction22IsOpcodeCodeMotionSafeEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNSt3__16vectorIPNS0_10BasicBlockENS2_9allocatorIS5_EEEEbb(%"class.spvtools::opt::Loop"*, %"class.std::__1::vector.986"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::function.993", align 8
  %6 = alloca %"class.std::__1::list", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 16
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 400) #12
  %17 = bitcast i8* %16 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %17, %"class.spvtools::opt::Module"* %15) #13
  %18 = ptrtoint i8* %16 to i64
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 15
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.210"* %19 to i64*
  store i64 %18, i64* %22, align 8
  %23 = icmp eq %"class.spvtools::opt::CFG"* %21, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %13
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %21) #13
  %25 = bitcast %"class.spvtools::opt::CFG"* %21 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %24, %13
  %27 = load i32, i32* %9, align 8
  %28 = or i32 %27, 16
  store i32 %28, i32* %9, align 8
  br label %29

29:                                               ; preds = %4, %26
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 15, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %30, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = zext i1 %2 to i64
  %35 = zext i1 %3 to i64
  %36 = add nuw nsw i64 %35, %34
  %37 = add i64 %36, %33
  %38 = getelementptr inbounds %"class.std::__1::vector.986", %"class.std::__1::vector.986"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"class.spvtools::opt::BasicBlock"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector.986"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, %37
  br i1 %45, label %46, label %70

46:                                               ; preds = %29
  %47 = getelementptr inbounds %"class.std::__1::vector.986", %"class.std::__1::vector.986"* %1, i64 0, i32 0, i32 1
  %48 = bitcast %"class.spvtools::opt::BasicBlock"*** %47 to i64*
  %49 = icmp ugt i64 %37, 2305843009213693951
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  tail call void @abort() #14
  unreachable

51:                                               ; preds = %46
  %52 = load i64, i64* %48, align 8
  %53 = sub i64 %52, %42
  %54 = ashr exact i64 %53, 3
  %55 = shl i64 %37, 3
  %56 = tail call i8* @_Znwm(i64 %55) #12
  %57 = bitcast i8* %56 to %"class.spvtools::opt::BasicBlock"**
  %58 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %57, i64 %54
  %59 = ptrtoint %"class.spvtools::opt::BasicBlock"** %58 to i64
  %60 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %57, i64 %37
  %61 = ptrtoint %"class.spvtools::opt::BasicBlock"** %60 to i64
  %62 = ptrtoint i8* %56 to i64
  %63 = icmp sgt i64 %53, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %51
  %65 = inttoptr i64 %42 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 %65, i64 %53, i1 false) #13
  br label %66

66:                                               ; preds = %64, %51
  store i64 %62, i64* %41, align 8
  store i64 %59, i64* %48, align 8
  store i64 %61, i64* %39, align 8
  %67 = icmp eq i64 %42, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = inttoptr i64 %42 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %29, %66, %68
  br i1 %2, label %71, label %142

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 4
  %73 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::BasicBlock"* %73, null
  %75 = ptrtoint %"class.spvtools::opt::BasicBlock"* %73 to i64
  br i1 %74, label %142, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.std::__1::vector.986", %"class.std::__1::vector.986"* %1, i64 0, i32 0, i32 1
  %78 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %77, align 8
  %79 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %38, align 8
  %80 = icmp eq %"class.spvtools::opt::BasicBlock"** %78, %79
  %81 = ptrtoint %"class.spvtools::opt::BasicBlock"** %79 to i64
  br i1 %80, label %87, label %82

82:                                               ; preds = %76
  %83 = bitcast %"class.spvtools::opt::BasicBlock"** %78 to i64*
  store i64 %75, i64* %83, align 8
  %84 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %78, i64 1
  %85 = ptrtoint %"class.spvtools::opt::BasicBlock"** %84 to i64
  %86 = bitcast %"class.spvtools::opt::BasicBlock"*** %77 to i64*
  store i64 %85, i64* %86, align 8
  br label %142

87:                                               ; preds = %76
  %88 = ptrtoint %"class.spvtools::opt::BasicBlock"** %78 to i64
  %89 = bitcast %"class.spvtools::opt::BasicBlock"*** %77 to i64*
  %90 = load i64, i64* %41, align 8
  %91 = sub i64 %88, %90
  %92 = ashr exact i64 %91, 3
  %93 = add nsw i64 %92, 1
  %94 = icmp ugt i64 %93, 2305843009213693951
  br i1 %94, label %95, label %97

95:                                               ; preds = %87
  %96 = bitcast %"class.std::__1::vector.986"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %96) #14
  unreachable

97:                                               ; preds = %87
  %98 = sub i64 %81, %90
  %99 = ashr exact i64 %98, 3
  %100 = icmp ult i64 %99, 1152921504606846975
  br i1 %100, label %101, label %109

101:                                              ; preds = %97
  %102 = ashr exact i64 %98, 2
  %103 = icmp ult i64 %102, %93
  %104 = select i1 %103, i64 %93, i64 %102
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %101
  %107 = icmp ugt i64 %104, 2305843009213693951
  br i1 %107, label %108, label %109

108:                                              ; preds = %106
  tail call void @abort() #14
  unreachable

109:                                              ; preds = %106, %97
  %110 = phi i64 [ %104, %106 ], [ 2305843009213693951, %97 ]
  %111 = shl i64 %110, 3
  %112 = tail call i8* @_Znwm(i64 %111) #12
  %113 = bitcast i8* %112 to %"class.spvtools::opt::BasicBlock"**
  br label %114

114:                                              ; preds = %109, %101
  %115 = phi i64 [ %110, %109 ], [ 0, %101 ]
  %116 = phi %"class.spvtools::opt::BasicBlock"** [ %113, %109 ], [ null, %101 ]
  %117 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %116, i64 %92
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %116, i64 %115
  %119 = ptrtoint %"class.spvtools::opt::BasicBlock"** %118 to i64
  %120 = bitcast %"class.spvtools::opt::BasicBlock"** %117 to i64*
  store i64 %75, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %117, i64 1
  %122 = ptrtoint %"class.spvtools::opt::BasicBlock"** %121 to i64
  %123 = getelementptr inbounds %"class.std::__1::vector.986", %"class.std::__1::vector.986"* %1, i64 0, i32 0, i32 0
  %124 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %123, align 8
  %125 = load i64, i64* %89, align 8
  %126 = ptrtoint %"class.spvtools::opt::BasicBlock"** %124 to i64
  %127 = sub i64 %125, %126
  %128 = ashr exact i64 %127, 3
  %129 = sub nsw i64 0, %128
  %130 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %117, i64 %129
  %131 = ptrtoint %"class.spvtools::opt::BasicBlock"** %130 to i64
  %132 = icmp sgt i64 %127, 0
  br i1 %132, label %133, label %137

133:                                              ; preds = %114
  %134 = bitcast %"class.spvtools::opt::BasicBlock"** %130 to i8*
  %135 = bitcast %"class.spvtools::opt::BasicBlock"** %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 %127, i1 false) #13
  %136 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %123, align 8
  br label %137

137:                                              ; preds = %133, %114
  %138 = phi %"class.spvtools::opt::BasicBlock"** [ %124, %114 ], [ %136, %133 ]
  store i64 %131, i64* %41, align 8
  store i64 %122, i64* %89, align 8
  store i64 %119, i64* %39, align 8
  %139 = icmp eq %"class.spvtools::opt::BasicBlock"** %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = bitcast %"class.spvtools::opt::BasicBlock"** %138 to i8*
  tail call void @_ZdlPv(i8* %141) #12
  br label %142

142:                                              ; preds = %140, %137, %82, %71, %70
  %143 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %144 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %143, i64 0, i32 8
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89"* %144, i64 0, i32 0, i32 0, i32 0
  %146 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %145, align 8
  %147 = icmp eq %"class.spvtools::opt::FeatureManager"* %146, null
  br i1 %147, label %148, label %186

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %143, i64 0, i32 1
  %150 = tail call i8* @_Znwm(i64 48) #12
  %151 = bitcast i8* %150 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %149, %"class.spvtools::AssemblyGrammar"** %151, align 8
  %152 = getelementptr inbounds i8, i8* %150, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 40, i1 false) #13
  %153 = ptrtoint i8* %150 to i64
  %154 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %145, align 8
  %155 = bitcast %"class.std::__1::unique_ptr.89"* %144 to i64*
  store i64 %153, i64* %155, align 8
  %156 = icmp eq %"class.spvtools::opt::FeatureManager"* %154, null
  %157 = bitcast i8* %150 to %"class.spvtools::opt::FeatureManager"*
  br i1 %156, label %181, label %158

158:                                              ; preds = %148
  %159 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %154, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %160 = load %"class.std::__1::set.95"*, %"class.std::__1::set.95"** %159, align 8
  store %"class.std::__1::set.95"* null, %"class.std::__1::set.95"** %159, align 8
  %161 = icmp eq %"class.std::__1::set.95"* %160, null
  br i1 %161, label %168, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.std::__1::set.95", %"class.std::__1::set.95"* %160, i64 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::set.95", %"class.std::__1::set.95"* %160, i64 0, i32 0, i32 1, i32 0, i32 0
  %165 = bitcast %"class.std::__1::__tree_end_node"* %164 to %"class.std::__1::__tree_node.1178"**
  %166 = load %"class.std::__1::__tree_node.1178"*, %"class.std::__1::__tree_node.1178"** %165, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.96"* %163, %"class.std::__1::__tree_node.1178"* %166) #13
  %167 = bitcast %"class.std::__1::set.95"* %160 to i8*
  tail call void @_ZdlPv(i8* %167) #12
  br label %168

168:                                              ; preds = %162, %158
  %169 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %154, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %170 = load %"class.std::__1::set.95"*, %"class.std::__1::set.95"** %169, align 8
  store %"class.std::__1::set.95"* null, %"class.std::__1::set.95"** %169, align 8
  %171 = icmp eq %"class.std::__1::set.95"* %170, null
  br i1 %171, label %178, label %172

172:                                              ; preds = %168
  %173 = getelementptr inbounds %"class.std::__1::set.95", %"class.std::__1::set.95"* %170, i64 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::set.95", %"class.std::__1::set.95"* %170, i64 0, i32 0, i32 1, i32 0, i32 0
  %175 = bitcast %"class.std::__1::__tree_end_node"* %174 to %"class.std::__1::__tree_node.1178"**
  %176 = load %"class.std::__1::__tree_node.1178"*, %"class.std::__1::__tree_node.1178"** %175, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.96"* %173, %"class.std::__1::__tree_node.1178"* %176) #13
  %177 = bitcast %"class.std::__1::set.95"* %170 to i8*
  tail call void @_ZdlPv(i8* %177) #12
  br label %178

178:                                              ; preds = %172, %168
  %179 = bitcast %"class.spvtools::opt::FeatureManager"* %154 to i8*
  tail call void @_ZdlPv(i8* %179) #12
  %180 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %145, align 8
  br label %181

181:                                              ; preds = %178, %148
  %182 = phi %"class.spvtools::opt::FeatureManager"* [ %180, %178 ], [ %157, %148 ]
  %183 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %143, i64 0, i32 4, i32 0, i32 0, i32 0
  %184 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %183, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* %182, %"class.spvtools::opt::Module"* %184) #13
  %185 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %145, align 8
  br label %186

186:                                              ; preds = %142, %181
  %187 = phi %"class.spvtools::opt::FeatureManager"* [ %146, %142 ], [ %185, %181 ]
  %188 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %187, i64 0, i32 2, i32 0
  %189 = load i64, i64* %188, align 8
  %190 = and i64 %189, 2
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %192, label %209

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 1
  %194 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %193, align 8
  %195 = bitcast %"class.std::__1::function.993"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %195) #13
  %196 = getelementptr inbounds %"class.std::__1::function.993", %"class.std::__1::function.993"* %5, i64 0, i32 0, i32 1, i32 0
  %197 = getelementptr inbounds %"class.std::__1::function.993", %"class.std::__1::function.993"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNKS3_4Loop26ComputeLoopStructuredOrderEPNS_6vectorIS5_NS_9allocatorIS5_EEEEbbE3$_4S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %196, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop26ComputeLoopStructuredOrderEPNS_6vectorIPNS5_10BasicBlockENS_9allocatorIS9_EEEEbbE3$_4FvS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %197, align 8
  %198 = bitcast %"class.std::__1::function.993"* %5 to %"class.std::__1::vector.986"**
  store %"class.std::__1::vector.986"* %1, %"class.std::__1::vector.986"** %198, align 8
  %199 = getelementptr inbounds %"class.std::__1::function.993", %"class.std::__1::function.993"* %5, i64 0, i32 0, i32 0, i32 1
  %200 = bitcast [8 x i8]* %199 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %0, %"class.spvtools::opt::Loop"** %200, align 8
  call void @_ZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"* %31, %"class.spvtools::opt::BasicBlock"* %194, %"class.std::__1::function.993"* nonnull dereferenceable(32) %5) #13
  %201 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %197, align 8
  %202 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %201, i64 0, i32 1
  %203 = load void (i8*)*, void (i8*)** %202, align 8
  %204 = icmp eq void (i8*)* %203, null
  br i1 %204, label %208, label %205

205:                                              ; preds = %192
  %206 = getelementptr inbounds %"class.std::__1::function.993", %"class.std::__1::function.993"* %5, i64 0, i32 0, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  call void %203(i8* %207) #13
  br label %208

208:                                              ; preds = %192, %205
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %195) #13
  br label %330

209:                                              ; preds = %186
  %210 = bitcast %"class.std::__1::list"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %210) #13
  %211 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0, i32 0
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0, i32 1
  %213 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  %214 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %6, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %214, %"struct.std::__1::__list_node_base"** %211, align 8
  store %"struct.std::__1::__list_node_base"* %214, %"struct.std::__1::__list_node_base"** %212, align 8
  store i64 0, i64* %213, align 8
  %215 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 1
  %216 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %215, align 8
  %217 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %216, i64 0, i32 0
  %218 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %217, align 8
  call void @_ZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__14listIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::CFG"* %31, %"class.spvtools::opt::Function"* %218, %"class.spvtools::opt::BasicBlock"* %216, %"class.std::__1::list"* nonnull %6) #13
  %219 = bitcast %"struct.std::__1::__list_node_base"** %212 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = inttoptr i64 %220 to %"struct.std::__1::__list_node_base"*
  %222 = icmp eq %"struct.std::__1::__list_node_base"* %214, %221
  br i1 %222, label %305, label %223

223:                                              ; preds = %209
  %224 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 3
  %225 = getelementptr inbounds %"class.std::__1::vector.986", %"class.std::__1::vector.986"* %1, i64 0, i32 0, i32 1
  %226 = bitcast %"class.spvtools::opt::BasicBlock"*** %225 to i64*
  %227 = getelementptr inbounds %"class.std::__1::vector.986", %"class.std::__1::vector.986"* %1, i64 0, i32 0, i32 0
  br label %228

228:                                              ; preds = %223, %299
  %229 = phi %"struct.std::__1::__list_node_base"* [ %221, %223 ], [ %303, %299 ]
  %230 = phi i64 [ %220, %223 ], [ %302, %299 ]
  %231 = inttoptr i64 %230 to %"struct.std::__1::__list_node"*
  %232 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %231, i64 0, i32 1
  %233 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %232, align 8
  %234 = ptrtoint %"class.spvtools::opt::BasicBlock"* %233 to i64
  %235 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %224, align 8
  %236 = icmp eq %"class.spvtools::opt::BasicBlock"* %233, %235
  br i1 %236, label %305, label %237

237:                                              ; preds = %228
  %238 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %225, align 8
  %239 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %38, align 8
  %240 = icmp eq %"class.spvtools::opt::BasicBlock"** %238, %239
  %241 = ptrtoint %"class.spvtools::opt::BasicBlock"** %239 to i64
  br i1 %240, label %246, label %242

242:                                              ; preds = %237
  %243 = bitcast %"class.spvtools::opt::BasicBlock"** %238 to i64*
  store i64 %234, i64* %243, align 8
  %244 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %238, i64 1
  %245 = ptrtoint %"class.spvtools::opt::BasicBlock"** %244 to i64
  store i64 %245, i64* %226, align 8
  br label %299

246:                                              ; preds = %237
  %247 = ptrtoint %"class.spvtools::opt::BasicBlock"** %238 to i64
  %248 = load i64, i64* %41, align 8
  %249 = sub i64 %247, %248
  %250 = ashr exact i64 %249, 3
  %251 = add nsw i64 %250, 1
  %252 = icmp ugt i64 %251, 2305843009213693951
  br i1 %252, label %253, label %255

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::vector.986"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %254) #14
  unreachable

255:                                              ; preds = %246
  %256 = sub i64 %241, %248
  %257 = ashr exact i64 %256, 3
  %258 = icmp ult i64 %257, 1152921504606846975
  br i1 %258, label %259, label %267

259:                                              ; preds = %255
  %260 = ashr exact i64 %256, 2
  %261 = icmp ult i64 %260, %251
  %262 = select i1 %261, i64 %251, i64 %260
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %272, label %264

264:                                              ; preds = %259
  %265 = icmp ugt i64 %262, 2305843009213693951
  br i1 %265, label %266, label %267

266:                                              ; preds = %264
  call void @abort() #14
  unreachable

267:                                              ; preds = %264, %255
  %268 = phi i64 [ %262, %264 ], [ 2305843009213693951, %255 ]
  %269 = shl i64 %268, 3
  %270 = call i8* @_Znwm(i64 %269) #12
  %271 = bitcast i8* %270 to %"class.spvtools::opt::BasicBlock"**
  br label %272

272:                                              ; preds = %267, %259
  %273 = phi i64 [ %268, %267 ], [ 0, %259 ]
  %274 = phi %"class.spvtools::opt::BasicBlock"** [ %271, %267 ], [ null, %259 ]
  %275 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %274, i64 %250
  %276 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %274, i64 %273
  %277 = ptrtoint %"class.spvtools::opt::BasicBlock"** %276 to i64
  %278 = bitcast %"class.spvtools::opt::BasicBlock"** %275 to i64*
  store i64 %234, i64* %278, align 8
  %279 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %275, i64 1
  %280 = ptrtoint %"class.spvtools::opt::BasicBlock"** %279 to i64
  %281 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %227, align 8
  %282 = load i64, i64* %226, align 8
  %283 = ptrtoint %"class.spvtools::opt::BasicBlock"** %281 to i64
  %284 = sub i64 %282, %283
  %285 = ashr exact i64 %284, 3
  %286 = sub nsw i64 0, %285
  %287 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %275, i64 %286
  %288 = ptrtoint %"class.spvtools::opt::BasicBlock"** %287 to i64
  %289 = icmp sgt i64 %284, 0
  br i1 %289, label %290, label %294

290:                                              ; preds = %272
  %291 = bitcast %"class.spvtools::opt::BasicBlock"** %287 to i8*
  %292 = bitcast %"class.spvtools::opt::BasicBlock"** %281 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %291, i8* align 8 %292, i64 %284, i1 false) #13
  %293 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %227, align 8
  br label %294

294:                                              ; preds = %290, %272
  %295 = phi %"class.spvtools::opt::BasicBlock"** [ %281, %272 ], [ %293, %290 ]
  store i64 %288, i64* %41, align 8
  store i64 %280, i64* %226, align 8
  store i64 %277, i64* %39, align 8
  %296 = icmp eq %"class.spvtools::opt::BasicBlock"** %295, null
  br i1 %296, label %299, label %297

297:                                              ; preds = %294
  %298 = bitcast %"class.spvtools::opt::BasicBlock"** %295 to i8*
  call void @_ZdlPv(i8* %298) #12
  br label %299

299:                                              ; preds = %242, %294, %297
  %300 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %229, i64 0, i32 1
  %301 = bitcast %"struct.std::__1::__list_node_base"** %300 to i64*
  %302 = load i64, i64* %301, align 8
  %303 = inttoptr i64 %302 to %"struct.std::__1::__list_node_base"*
  %304 = icmp eq %"struct.std::__1::__list_node_base"* %214, %303
  br i1 %304, label %305, label %228

305:                                              ; preds = %228, %299, %209
  %306 = load i64, i64* %213, align 8
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %329, label %308

308:                                              ; preds = %305
  %309 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  %310 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %211, align 8
  %311 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %310, i64 0, i32 1
  %312 = bitcast %"struct.std::__1::__list_node_base"** %311 to i64*
  %313 = load i64, i64* %312, align 8
  %314 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %309, i64 0, i32 0
  %315 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %314, align 8
  %316 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %315, i64 0, i32 1
  %317 = bitcast %"struct.std::__1::__list_node_base"** %316 to i64*
  store i64 %313, i64* %317, align 8
  %318 = bitcast %"struct.std::__1::__list_node_base"* %309 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = bitcast %"struct.std::__1::__list_node_base"** %311 to i64**
  %321 = load i64*, i64** %320, align 8
  store i64 %319, i64* %321, align 8
  store i64 0, i64* %213, align 8
  %322 = icmp eq %"struct.std::__1::__list_node_base"* %309, %214
  br i1 %322, label %329, label %323

323:                                              ; preds = %308, %323
  %324 = phi %"struct.std::__1::__list_node_base"* [ %326, %323 ], [ %309, %308 ]
  %325 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %324, i64 0, i32 1
  %326 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %325, align 8
  %327 = bitcast %"struct.std::__1::__list_node_base"* %324 to i8*
  call void @_ZdlPv(i8* %327) #12
  %328 = icmp eq %"struct.std::__1::__list_node_base"* %326, %214
  br i1 %328, label %329, label %323

329:                                              ; preds = %323, %305, %308
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %210) #13
  br label %330

330:                                              ; preds = %329, %208
  br i1 %3, label %331, label %402

331:                                              ; preds = %330
  %332 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 3
  %333 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %332, align 8
  %334 = icmp eq %"class.spvtools::opt::BasicBlock"* %333, null
  %335 = ptrtoint %"class.spvtools::opt::BasicBlock"* %333 to i64
  br i1 %334, label %402, label %336

336:                                              ; preds = %331
  %337 = getelementptr inbounds %"class.std::__1::vector.986", %"class.std::__1::vector.986"* %1, i64 0, i32 0, i32 1
  %338 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %337, align 8
  %339 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %38, align 8
  %340 = icmp eq %"class.spvtools::opt::BasicBlock"** %338, %339
  %341 = ptrtoint %"class.spvtools::opt::BasicBlock"** %339 to i64
  br i1 %340, label %347, label %342

342:                                              ; preds = %336
  %343 = bitcast %"class.spvtools::opt::BasicBlock"** %338 to i64*
  store i64 %335, i64* %343, align 8
  %344 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %338, i64 1
  %345 = ptrtoint %"class.spvtools::opt::BasicBlock"** %344 to i64
  %346 = bitcast %"class.spvtools::opt::BasicBlock"*** %337 to i64*
  store i64 %345, i64* %346, align 8
  br label %402

347:                                              ; preds = %336
  %348 = ptrtoint %"class.spvtools::opt::BasicBlock"** %338 to i64
  %349 = bitcast %"class.spvtools::opt::BasicBlock"*** %337 to i64*
  %350 = load i64, i64* %41, align 8
  %351 = sub i64 %348, %350
  %352 = ashr exact i64 %351, 3
  %353 = add nsw i64 %352, 1
  %354 = icmp ugt i64 %353, 2305843009213693951
  br i1 %354, label %355, label %357

355:                                              ; preds = %347
  %356 = bitcast %"class.std::__1::vector.986"* %1 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %356) #14
  unreachable

357:                                              ; preds = %347
  %358 = sub i64 %341, %350
  %359 = ashr exact i64 %358, 3
  %360 = icmp ult i64 %359, 1152921504606846975
  br i1 %360, label %361, label %369

361:                                              ; preds = %357
  %362 = ashr exact i64 %358, 2
  %363 = icmp ult i64 %362, %353
  %364 = select i1 %363, i64 %353, i64 %362
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %374, label %366

366:                                              ; preds = %361
  %367 = icmp ugt i64 %364, 2305843009213693951
  br i1 %367, label %368, label %369

368:                                              ; preds = %366
  call void @abort() #14
  unreachable

369:                                              ; preds = %366, %357
  %370 = phi i64 [ %364, %366 ], [ 2305843009213693951, %357 ]
  %371 = shl i64 %370, 3
  %372 = call i8* @_Znwm(i64 %371) #12
  %373 = bitcast i8* %372 to %"class.spvtools::opt::BasicBlock"**
  br label %374

374:                                              ; preds = %369, %361
  %375 = phi i64 [ %370, %369 ], [ 0, %361 ]
  %376 = phi %"class.spvtools::opt::BasicBlock"** [ %373, %369 ], [ null, %361 ]
  %377 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %376, i64 %352
  %378 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %376, i64 %375
  %379 = ptrtoint %"class.spvtools::opt::BasicBlock"** %378 to i64
  %380 = bitcast %"class.spvtools::opt::BasicBlock"** %377 to i64*
  store i64 %335, i64* %380, align 8
  %381 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %377, i64 1
  %382 = ptrtoint %"class.spvtools::opt::BasicBlock"** %381 to i64
  %383 = getelementptr inbounds %"class.std::__1::vector.986", %"class.std::__1::vector.986"* %1, i64 0, i32 0, i32 0
  %384 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %383, align 8
  %385 = load i64, i64* %349, align 8
  %386 = ptrtoint %"class.spvtools::opt::BasicBlock"** %384 to i64
  %387 = sub i64 %385, %386
  %388 = ashr exact i64 %387, 3
  %389 = sub nsw i64 0, %388
  %390 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %377, i64 %389
  %391 = ptrtoint %"class.spvtools::opt::BasicBlock"** %390 to i64
  %392 = icmp sgt i64 %387, 0
  br i1 %392, label %393, label %397

393:                                              ; preds = %374
  %394 = bitcast %"class.spvtools::opt::BasicBlock"** %390 to i8*
  %395 = bitcast %"class.spvtools::opt::BasicBlock"** %384 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %394, i8* align 8 %395, i64 %387, i1 false) #13
  %396 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %383, align 8
  br label %397

397:                                              ; preds = %393, %374
  %398 = phi %"class.spvtools::opt::BasicBlock"** [ %384, %374 ], [ %396, %393 ]
  store i64 %391, i64* %41, align 8
  store i64 %382, i64* %349, align 8
  store i64 %379, i64* %39, align 8
  %399 = icmp eq %"class.spvtools::opt::BasicBlock"** %398, null
  br i1 %399, label %402, label %400

400:                                              ; preds = %397
  %401 = bitcast %"class.spvtools::opt::BasicBlock"** %398 to i8*
  call void @_ZdlPv(i8* %401) #12
  br label %402

402:                                              ; preds = %400, %397, %342, %331, %330
  ret void
}

declare void @_ZN8spvtools3opt3CFG30ForEachBlockInReversePostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.993"* dereferenceable(32)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__14listIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Function"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::list"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14LoopDescriptorC2EPNS0_9IRContextEPKNS0_8FunctionE(%"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 8, i32 0, i32 3
  %5 = bitcast %"class.std::__1::__compressed_pair.936"* %4 to i32*
  %6 = bitcast %"class.spvtools::opt::LoopDescriptor"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 136, i1 false)
  store i32 1065353216, i32* %5, align 4
  %7 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 9
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 2, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.1024"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_map.1004"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %10, align 4
  %12 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 3
  %13 = bitcast %"class.std::__1::vector.1028"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #13
  tail call void @_ZN8spvtools3opt14LoopDescriptor12PopulateListEPNS0_9IRContextEPKNS0_8FunctionE(%"class.spvtools::opt::LoopDescriptor"* %0, %"class.spvtools::opt::IRContext"* %1, %"class.spvtools::opt::Function"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14LoopDescriptor12PopulateListEPNS0_9IRContextEPKNS0_8FunctionE(%"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.spvtools::opt::PostOrderTreeDFIterator", align 8
  %6 = alloca %"class.spvtools::opt::PostOrderTreeDFIterator", align 8
  %7 = alloca %"class.spvtools::opt::PostOrderTreeDFIterator", align 8
  %8 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %9 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %10 = alloca %"class.spvtools::opt::TreeDFIterator", align 8
  %11 = alloca %"struct.std::__1::pair.1060", align 8
  %12 = tail call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %1, %"class.spvtools::opt::Function"* %2) #13
  tail call void @_ZN8spvtools3opt14LoopDescriptor10ClearLoopsEv(%"class.spvtools::opt::LoopDescriptor"* %0)
  %13 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %12, i64 0, i32 0, i32 0
  %14 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %15, align 8, !noalias !23
  %17 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %16, align 8, !noalias !23
  %18 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %5, i64 0, i32 0
  store %"struct.spvtools::opt::DominatorTreeNode"* %17, %"struct.spvtools::opt::DominatorTreeNode"** %18, align 8, !alias.scope !26
  %19 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %5, i64 0, i32 1
  %20 = bitcast %"class.std::__1::stack.1042"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 48, i1 false) #13, !alias.scope !26
  %21 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %17, null
  %22 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"* %17 to i64
  br i1 %21, label %102, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %17, i64 0, i32 2, i32 0, i32 0
  %25 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %24, align 8, !noalias !26
  %26 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %17, i64 0, i32 2, i32 0, i32 1
  %27 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %26, align 8, !noalias !26
  %28 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %25, %27
  br i1 %28, label %102, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %31 = bitcast %"struct.std::__1::pair.1046"*** %30 to i64*
  %32 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %33 = bitcast %"struct.std::__1::pair.1046"*** %32 to i64*
  %34 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %5, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %36 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %5, i64 0, i32 1, i32 0
  %37 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %5 to i64*
  br label %38

38:                                               ; preds = %91, %29
  %39 = phi i64 [ 0, %29 ], [ %94, %91 ]
  %40 = phi i64 [ 0, %29 ], [ %93, %91 ]
  %41 = phi i64 [ 0, %29 ], [ %92, %91 ]
  %42 = phi i64 [ 0, %29 ], [ %79, %91 ]
  %43 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %25, %29 ], [ %87, %91 ]
  %44 = phi %"struct.spvtools::opt::DominatorTreeNode"* [ %17, %29 ], [ %85, %91 ]
  %45 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %43, i64 1
  %46 = sub i64 %41, %40
  %47 = icmp eq i64 %46, 0
  %48 = shl i64 %46, 5
  %49 = add i64 %48, -1
  %50 = select i1 %47, i64 0, i64 %49
  %51 = add i64 %42, %39
  %52 = icmp eq i64 %50, %51
  %53 = inttoptr i64 %40 to %"struct.std::__1::pair.1046"**
  %54 = inttoptr i64 %41 to %"struct.std::__1::pair.1046"**
  br i1 %52, label %55, label %61

55:                                               ; preds = %38
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque.1043"* %36) #13
  %56 = load i64, i64* %35, align 8, !alias.scope !26
  %57 = load i64, i64* %34, align 8, !alias.scope !26
  %58 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %32, align 8, !alias.scope !26
  %59 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %30, align 8, !alias.scope !26
  %60 = add i64 %57, %56
  br label %61

61:                                               ; preds = %55, %38
  %62 = phi i64 [ %60, %55 ], [ %51, %38 ]
  %63 = phi %"struct.std::__1::pair.1046"** [ %59, %55 ], [ %54, %38 ]
  %64 = phi %"struct.std::__1::pair.1046"** [ %58, %55 ], [ %53, %38 ]
  %65 = icmp eq %"struct.std::__1::pair.1046"** %63, %64
  br i1 %65, label %73, label %66

66:                                               ; preds = %61
  %67 = lshr i64 %62, 8
  %68 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %64, i64 %67
  %69 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %68, align 8
  %70 = and i64 %62, 255
  %71 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %69, i64 %70
  %72 = bitcast %"struct.std::__1::pair.1046"* %71 to i8*
  br label %73

73:                                               ; preds = %66, %61
  %74 = phi i8* [ %72, %66 ], [ null, %61 ]
  %75 = bitcast i8* %74 to %"struct.spvtools::opt::DominatorTreeNode"**
  store %"struct.spvtools::opt::DominatorTreeNode"* %44, %"struct.spvtools::opt::DominatorTreeNode"** %75, align 8
  %76 = getelementptr inbounds i8, i8* %74, i64 8
  %77 = bitcast i8* %76 to %"struct.spvtools::opt::DominatorTreeNode"***
  store %"struct.spvtools::opt::DominatorTreeNode"** %45, %"struct.spvtools::opt::DominatorTreeNode"*** %77, align 8
  %78 = load i64, i64* %35, align 8, !alias.scope !26
  %79 = add i64 %78, 1
  store i64 %79, i64* %35, align 8, !alias.scope !26
  %80 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %18, align 8, !alias.scope !26
  %81 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %81 to i64**
  %83 = load i64*, i64** %82, align 8
  %84 = load i64, i64* %83, align 8
  store i64 %84, i64* %37, align 8, !alias.scope !26
  %85 = inttoptr i64 %84 to %"struct.spvtools::opt::DominatorTreeNode"*
  %86 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %85, i64 0, i32 2, i32 0, i32 0
  %87 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %86, align 8
  %88 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %85, i64 0, i32 2, i32 0, i32 1
  %89 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %88, align 8
  %90 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %87, %89
  br i1 %90, label %95, label %91

91:                                               ; preds = %73
  %92 = load i64, i64* %31, align 8, !alias.scope !26
  %93 = load i64, i64* %33, align 8, !alias.scope !26
  %94 = load i64, i64* %34, align 8, !alias.scope !26
  br label %38

95:                                               ; preds = %73
  %96 = getelementptr inbounds %"class.std::__1::stack.1042", %"class.std::__1::stack.1042"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %96, align 8, !noalias !29
  %98 = bitcast %"struct.std::__1::pair.1046"** %97 to i8*
  %99 = load i64, i64* %33, align 8, !noalias !29
  %100 = load i64, i64* %31, align 8, !noalias !29
  %101 = load i64, i64* %34, align 8, !noalias !29
  br label %102

102:                                              ; preds = %3, %23, %95
  %103 = phi i64 [ %79, %95 ], [ 0, %23 ], [ 0, %3 ]
  %104 = phi i64 [ %101, %95 ], [ 0, %23 ], [ 0, %3 ]
  %105 = phi i64 [ %100, %95 ], [ 0, %23 ], [ 0, %3 ]
  %106 = phi i64 [ %99, %95 ], [ 0, %23 ], [ 0, %3 ]
  %107 = phi i8* [ %98, %95 ], [ null, %23 ], [ null, %3 ]
  %108 = phi %"struct.std::__1::pair.1046"** [ %97, %95 ], [ null, %23 ], [ null, %3 ]
  %109 = phi i64 [ %84, %95 ], [ %22, %23 ], [ %22, %3 ]
  %110 = bitcast %"class.spvtools::opt::DominatorAnalysis"* %12 to i64**
  %111 = load i64*, i64** %110, align 8, !noalias !32
  %112 = load i64, i64* %111, align 8, !noalias !32
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #13
  %113 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %113) #13
  %114 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %6 to i64*
  store i64 %109, i64* %114, align 8, !alias.scope !35
  %115 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1
  %116 = getelementptr inbounds %"class.std::__1::stack.1042", %"class.std::__1::stack.1042"* %115, i64 0, i32 0
  %117 = bitcast %"class.std::__1::stack.1042"* %115 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 48, i1 false) #13, !alias.scope !35
  %118 = inttoptr i64 %106 to %"struct.std::__1::pair.1046"**
  %119 = lshr i64 %104, 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %118, i64 %119
  %121 = inttoptr i64 %105 to %"struct.std::__1::pair.1046"**
  %122 = icmp eq %"struct.std::__1::pair.1046"** %121, %118
  br i1 %122, label %123, label %127

123:                                              ; preds = %102
  %124 = add i64 %103, %104
  %125 = lshr i64 %124, 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %118, i64 %125
  br label %137

127:                                              ; preds = %102
  %128 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %120, align 8
  %129 = and i64 %104, 255
  %130 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %128, i64 %129
  %131 = add i64 %103, %104
  %132 = lshr i64 %131, 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %118, i64 %132
  %134 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %133, align 8
  %135 = and i64 %131, 255
  %136 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %134, i64 %135
  br label %137

137:                                              ; preds = %123, %127
  %138 = phi %"struct.std::__1::pair.1046"** [ %133, %127 ], [ %126, %123 ]
  %139 = phi %"struct.std::__1::pair.1046"* [ %130, %127 ], [ null, %123 ]
  %140 = phi %"struct.std::__1::pair.1046"* [ %136, %127 ], [ null, %123 ]
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque.1043"* %116, %"struct.std::__1::pair.1046"** %120, %"struct.std::__1::pair.1046"* %139, %"struct.std::__1::pair.1046"** %138, %"struct.std::__1::pair.1046"* %140, i8* null) #13
  %141 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %141) #13
  %142 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %7 to i64*
  store i64 %112, i64* %142, align 8, !alias.scope !38
  %143 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %7, i64 0, i32 1
  %144 = getelementptr inbounds %"class.std::__1::stack.1042", %"class.std::__1::stack.1042"* %143, i64 0, i32 0
  %145 = bitcast %"class.std::__1::stack.1042"* %143 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 48, i1 false) #13, !alias.scope !38
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque.1043"* %144, %"struct.std::__1::pair.1046"** null, %"struct.std::__1::pair.1046"* null, %"struct.std::__1::pair.1046"** null, %"struct.std::__1::pair.1046"* null, i8* null) #13
  %146 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 0
  %147 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %146, align 8
  %148 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %7, i64 0, i32 0
  %149 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %148, align 8
  %150 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %147, %149
  br i1 %150, label %208, label %151

151:                                              ; preds = %137
  %152 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1, i64 0, i32 11
  %153 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %154 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1, i64 0, i32 15
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.210"* %154, i64 0, i32 0, i32 0, i32 0
  %156 = bitcast %"class.std::__1::unique_ptr.210"* %154 to i64*
  %157 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %1, i64 0, i32 15, i32 0, i32 0, i32 0
  %158 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %159 = bitcast %"class.std::__1::__tree_end_node"* %158 to %"class.std::__1::__tree_node.1117"**
  %160 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 1
  %161 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %162 = bitcast %"class.spvtools::opt::Loop"*** %160 to i64*
  %163 = bitcast %"class.spvtools::opt::LoopDescriptor"* %0 to i64*
  %164 = bitcast %"class.spvtools::opt::Loop"*** %161 to i64*
  %165 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.spvtools::opt::TreeDFIterator"* %8 to i8*
  %167 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %8, i64 0, i32 0
  %168 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %8, i64 0, i32 1
  %169 = bitcast %"class.std::__1::stack.1042"* %168 to i8*
  %170 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %8, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %171 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %8, i64 0, i32 1, i32 0, i32 0, i32 1
  %172 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %173 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %174 = getelementptr inbounds %"class.std::__1::stack.1042", %"class.std::__1::stack.1042"* %168, i64 0, i32 0
  %175 = bitcast %"class.spvtools::opt::TreeDFIterator"* %8 to i64*
  %176 = getelementptr inbounds %"class.std::__1::stack.1042", %"class.std::__1::stack.1042"* %168, i64 0, i32 0, i32 0, i32 0, i32 0
  %177 = bitcast %"struct.std::__1::pair.1046"*** %172 to i64*
  %178 = bitcast %"struct.std::__1::pair.1046"*** %173 to i64*
  %179 = bitcast %"class.spvtools::opt::TreeDFIterator"* %9 to i8*
  %180 = bitcast %"class.spvtools::opt::TreeDFIterator"* %9 to i64*
  %181 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %9, i64 0, i32 1
  %182 = getelementptr inbounds %"class.std::__1::stack.1042", %"class.std::__1::stack.1042"* %181, i64 0, i32 0
  %183 = bitcast %"class.std::__1::stack.1042"* %181 to i8*
  %184 = bitcast %"class.spvtools::opt::TreeDFIterator"* %10 to i8*
  %185 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %10, i64 0, i32 1
  %186 = getelementptr inbounds %"class.std::__1::stack.1042", %"class.std::__1::stack.1042"* %185, i64 0, i32 0
  %187 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %9, i64 0, i32 0
  %188 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %10, i64 0, i32 0
  %189 = bitcast i32* %4 to i8*
  %190 = bitcast %"struct.std::__1::pair.1060"* %11 to i8*
  %191 = getelementptr inbounds %"struct.std::__1::pair.1060", %"struct.std::__1::pair.1060"* %11, i64 0, i32 0
  %192 = getelementptr inbounds %"struct.std::__1::pair.1060", %"struct.std::__1::pair.1060"* %11, i64 0, i32 1
  %193 = bitcast %"class.spvtools::opt::Loop"** %192 to i8**
  %194 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 2, i32 0
  %195 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %196 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %10, i64 0, i32 1, i32 0, i32 0, i32 1
  %197 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %198 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %10, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %199 = bitcast %"struct.std::__1::pair.1046"*** %197 to i64*
  %200 = getelementptr inbounds %"class.std::__1::stack.1042", %"class.std::__1::stack.1042"* %185, i64 0, i32 0, i32 0, i32 0, i32 0
  %201 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %202 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %9, i64 0, i32 1, i32 0, i32 0, i32 1
  %203 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %9, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %204 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %9, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %205 = bitcast %"struct.std::__1::pair.1046"*** %203 to i64*
  %206 = getelementptr inbounds %"class.std::__1::stack.1042", %"class.std::__1::stack.1042"* %181, i64 0, i32 0, i32 0, i32 0, i32 0
  %207 = bitcast %"class.spvtools::opt::TreeDFIterator"* %10 to i8*
  br label %471

208:                                              ; preds = %1379, %137
  %209 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %210 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %209, align 8
  %211 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %7, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = load i64, i64* %211, align 8
  %213 = lshr i64 %212, 8
  %214 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %210, i64 %213
  %215 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %216 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %215, align 8
  %217 = icmp eq %"struct.std::__1::pair.1046"** %216, %210
  %218 = ptrtoint %"struct.std::__1::pair.1046"** %216 to i64
  %219 = ptrtoint %"struct.std::__1::pair.1046"** %210 to i64
  br i1 %217, label %220, label %222

220:                                              ; preds = %208
  %221 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %7, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %235

222:                                              ; preds = %208
  %223 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %214, align 8
  %224 = and i64 %212, 255
  %225 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %223, i64 %224
  %226 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %7, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %227 = load i64, i64* %226, align 8
  %228 = add i64 %227, %212
  %229 = lshr i64 %228, 8
  %230 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %210, i64 %229
  %231 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %230, align 8
  %232 = and i64 %228, 255
  %233 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %231, i64 %232
  %234 = icmp eq %"struct.std::__1::pair.1046"* %233, %225
  br i1 %234, label %235, label %241

235:                                              ; preds = %254, %222, %220
  %236 = phi i64* [ %221, %220 ], [ %226, %222 ], [ %226, %254 ]
  store i64 0, i64* %236, align 8
  %237 = bitcast %"struct.std::__1::pair.1046"*** %215 to i64*
  %238 = sub i64 %218, %219
  %239 = ashr exact i64 %238, 3
  %240 = icmp ugt i64 %239, 2
  br i1 %240, label %259, label %272

241:                                              ; preds = %222, %254
  %242 = phi %"struct.std::__1::pair.1046"* [ %257, %254 ], [ %225, %222 ]
  %243 = phi %"struct.std::__1::pair.1046"** [ %256, %254 ], [ %214, %222 ]
  %244 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %242, i64 1
  %245 = ptrtoint %"struct.std::__1::pair.1046"* %244 to i64
  %246 = bitcast %"struct.std::__1::pair.1046"** %243 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = sub i64 %245, %247
  %249 = icmp eq i64 %248, 4096
  br i1 %249, label %250, label %254

250:                                              ; preds = %241
  %251 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %243, i64 1
  %252 = bitcast %"struct.std::__1::pair.1046"** %251 to i64*
  %253 = load i64, i64* %252, align 8
  br label %254

254:                                              ; preds = %250, %241
  %255 = phi i64 [ %253, %250 ], [ %245, %241 ]
  %256 = phi %"struct.std::__1::pair.1046"** [ %251, %250 ], [ %243, %241 ]
  %257 = inttoptr i64 %255 to %"struct.std::__1::pair.1046"*
  %258 = icmp eq %"struct.std::__1::pair.1046"* %233, %257
  br i1 %258, label %235, label %241

259:                                              ; preds = %235, %259
  %260 = phi %"struct.std::__1::pair.1046"** [ %264, %259 ], [ %210, %235 ]
  %261 = bitcast %"struct.std::__1::pair.1046"** %260 to i8**
  %262 = load i8*, i8** %261, align 8
  call void @_ZdlPv(i8* %262) #12
  %263 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %209, align 8
  %264 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %263, i64 1
  store %"struct.std::__1::pair.1046"** %264, %"struct.std::__1::pair.1046"*** %209, align 8
  %265 = load i64, i64* %237, align 8
  %266 = ptrtoint %"struct.std::__1::pair.1046"** %264 to i64
  %267 = sub i64 %265, %266
  %268 = ashr exact i64 %267, 3
  %269 = icmp ugt i64 %268, 2
  br i1 %269, label %259, label %270

270:                                              ; preds = %259
  %271 = inttoptr i64 %265 to %"struct.std::__1::pair.1046"**
  br label %272

272:                                              ; preds = %270, %235
  %273 = phi %"struct.std::__1::pair.1046"** [ %216, %235 ], [ %271, %270 ]
  %274 = phi %"struct.std::__1::pair.1046"** [ %210, %235 ], [ %264, %270 ]
  %275 = phi i64 [ %239, %235 ], [ %268, %270 ]
  switch i64 %275, label %279 [
    i64 1, label %277
    i64 2, label %276
  ]

276:                                              ; preds = %272
  br label %277

277:                                              ; preds = %272, %276
  %278 = phi i64 [ 256, %276 ], [ 128, %272 ]
  store i64 %278, i64* %211, align 8
  br label %279

279:                                              ; preds = %277, %272
  %280 = icmp eq %"struct.std::__1::pair.1046"** %274, %273
  br i1 %280, label %299, label %281

281:                                              ; preds = %279, %281
  %282 = phi %"struct.std::__1::pair.1046"** [ %285, %281 ], [ %274, %279 ]
  %283 = bitcast %"struct.std::__1::pair.1046"** %282 to i8**
  %284 = load i8*, i8** %283, align 8
  call void @_ZdlPv(i8* %284) #12
  %285 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %282, i64 1
  %286 = icmp eq %"struct.std::__1::pair.1046"** %285, %273
  br i1 %286, label %287, label %281

287:                                              ; preds = %281
  %288 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %209, align 8
  %289 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %215, align 8
  %290 = icmp eq %"struct.std::__1::pair.1046"** %289, %288
  br i1 %290, label %299, label %291

291:                                              ; preds = %287
  %292 = ptrtoint %"struct.std::__1::pair.1046"** %288 to i64
  %293 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %289, i64 -1
  %294 = ptrtoint %"struct.std::__1::pair.1046"** %293 to i64
  %295 = sub i64 %294, %292
  %296 = lshr i64 %295, 3
  %297 = xor i64 %296, -1
  %298 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %289, i64 %297
  store %"struct.std::__1::pair.1046"** %298, %"struct.std::__1::pair.1046"*** %215, align 8
  br label %299

299:                                              ; preds = %291, %287, %279
  %300 = getelementptr inbounds %"class.std::__1::stack.1042", %"class.std::__1::stack.1042"* %143, i64 0, i32 0, i32 0, i32 0, i32 0
  %301 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %300, align 8
  %302 = icmp eq %"struct.std::__1::pair.1046"** %301, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %299
  %304 = bitcast %"struct.std::__1::pair.1046"** %301 to i8*
  call void @_ZdlPv(i8* %304) #12
  br label %305

305:                                              ; preds = %299, %303
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %141) #13
  %306 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %307 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %306, align 8
  %308 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 1
  %309 = load i64, i64* %308, align 8
  %310 = lshr i64 %309, 8
  %311 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %307, i64 %310
  %312 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %313 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %312, align 8
  %314 = icmp eq %"struct.std::__1::pair.1046"** %313, %307
  %315 = ptrtoint %"struct.std::__1::pair.1046"** %313 to i64
  %316 = ptrtoint %"struct.std::__1::pair.1046"** %307 to i64
  br i1 %314, label %317, label %319

317:                                              ; preds = %305
  %318 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %332

319:                                              ; preds = %305
  %320 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %311, align 8
  %321 = and i64 %309, 255
  %322 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %320, i64 %321
  %323 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %6, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %324 = load i64, i64* %323, align 8
  %325 = add i64 %324, %309
  %326 = lshr i64 %325, 8
  %327 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %307, i64 %326
  %328 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %327, align 8
  %329 = and i64 %325, 255
  %330 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %328, i64 %329
  %331 = icmp eq %"struct.std::__1::pair.1046"* %330, %322
  br i1 %331, label %332, label %338

332:                                              ; preds = %351, %319, %317
  %333 = phi i64* [ %318, %317 ], [ %323, %319 ], [ %323, %351 ]
  store i64 0, i64* %333, align 8
  %334 = bitcast %"struct.std::__1::pair.1046"*** %312 to i64*
  %335 = sub i64 %315, %316
  %336 = ashr exact i64 %335, 3
  %337 = icmp ugt i64 %336, 2
  br i1 %337, label %356, label %369

338:                                              ; preds = %319, %351
  %339 = phi %"struct.std::__1::pair.1046"* [ %354, %351 ], [ %322, %319 ]
  %340 = phi %"struct.std::__1::pair.1046"** [ %353, %351 ], [ %311, %319 ]
  %341 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %339, i64 1
  %342 = ptrtoint %"struct.std::__1::pair.1046"* %341 to i64
  %343 = bitcast %"struct.std::__1::pair.1046"** %340 to i64*
  %344 = load i64, i64* %343, align 8
  %345 = sub i64 %342, %344
  %346 = icmp eq i64 %345, 4096
  br i1 %346, label %347, label %351

347:                                              ; preds = %338
  %348 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %340, i64 1
  %349 = bitcast %"struct.std::__1::pair.1046"** %348 to i64*
  %350 = load i64, i64* %349, align 8
  br label %351

351:                                              ; preds = %347, %338
  %352 = phi i64 [ %350, %347 ], [ %342, %338 ]
  %353 = phi %"struct.std::__1::pair.1046"** [ %348, %347 ], [ %340, %338 ]
  %354 = inttoptr i64 %352 to %"struct.std::__1::pair.1046"*
  %355 = icmp eq %"struct.std::__1::pair.1046"* %330, %354
  br i1 %355, label %332, label %338

356:                                              ; preds = %332, %356
  %357 = phi %"struct.std::__1::pair.1046"** [ %361, %356 ], [ %307, %332 ]
  %358 = bitcast %"struct.std::__1::pair.1046"** %357 to i8**
  %359 = load i8*, i8** %358, align 8
  call void @_ZdlPv(i8* %359) #12
  %360 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %306, align 8
  %361 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %360, i64 1
  store %"struct.std::__1::pair.1046"** %361, %"struct.std::__1::pair.1046"*** %306, align 8
  %362 = load i64, i64* %334, align 8
  %363 = ptrtoint %"struct.std::__1::pair.1046"** %361 to i64
  %364 = sub i64 %362, %363
  %365 = ashr exact i64 %364, 3
  %366 = icmp ugt i64 %365, 2
  br i1 %366, label %356, label %367

367:                                              ; preds = %356
  %368 = inttoptr i64 %362 to %"struct.std::__1::pair.1046"**
  br label %369

369:                                              ; preds = %367, %332
  %370 = phi %"struct.std::__1::pair.1046"** [ %313, %332 ], [ %368, %367 ]
  %371 = phi %"struct.std::__1::pair.1046"** [ %307, %332 ], [ %361, %367 ]
  %372 = phi i64 [ %336, %332 ], [ %365, %367 ]
  switch i64 %372, label %376 [
    i64 1, label %374
    i64 2, label %373
  ]

373:                                              ; preds = %369
  br label %374

374:                                              ; preds = %369, %373
  %375 = phi i64 [ 256, %373 ], [ 128, %369 ]
  store i64 %375, i64* %308, align 8
  br label %376

376:                                              ; preds = %374, %369
  %377 = icmp eq %"struct.std::__1::pair.1046"** %371, %370
  br i1 %377, label %396, label %378

378:                                              ; preds = %376, %378
  %379 = phi %"struct.std::__1::pair.1046"** [ %382, %378 ], [ %371, %376 ]
  %380 = bitcast %"struct.std::__1::pair.1046"** %379 to i8**
  %381 = load i8*, i8** %380, align 8
  call void @_ZdlPv(i8* %381) #12
  %382 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %379, i64 1
  %383 = icmp eq %"struct.std::__1::pair.1046"** %382, %370
  br i1 %383, label %384, label %378

384:                                              ; preds = %378
  %385 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %306, align 8
  %386 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %312, align 8
  %387 = icmp eq %"struct.std::__1::pair.1046"** %386, %385
  br i1 %387, label %396, label %388

388:                                              ; preds = %384
  %389 = ptrtoint %"struct.std::__1::pair.1046"** %385 to i64
  %390 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %386, i64 -1
  %391 = ptrtoint %"struct.std::__1::pair.1046"** %390 to i64
  %392 = sub i64 %391, %389
  %393 = lshr i64 %392, 3
  %394 = xor i64 %393, -1
  %395 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %386, i64 %394
  store %"struct.std::__1::pair.1046"** %395, %"struct.std::__1::pair.1046"*** %312, align 8
  br label %396

396:                                              ; preds = %388, %384, %376
  %397 = getelementptr inbounds %"class.std::__1::stack.1042", %"class.std::__1::stack.1042"* %115, i64 0, i32 0, i32 0, i32 0, i32 0
  %398 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %397, align 8
  %399 = icmp eq %"struct.std::__1::pair.1046"** %398, null
  br i1 %399, label %402, label %400

400:                                              ; preds = %396
  %401 = bitcast %"struct.std::__1::pair.1046"** %398 to i8*
  call void @_ZdlPv(i8* %401) #12
  br label %402

402:                                              ; preds = %400, %396
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %113) #13
  br i1 %122, label %414, label %403

403:                                              ; preds = %402
  %404 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %120, align 8
  %405 = and i64 %104, 255
  %406 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %404, i64 %405
  %407 = add i64 %103, %104
  %408 = lshr i64 %407, 8
  %409 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %118, i64 %408
  %410 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %409, align 8
  %411 = and i64 %407, 255
  %412 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %410, i64 %411
  %413 = icmp eq %"struct.std::__1::pair.1046"* %412, %406
  br i1 %413, label %414, label %418

414:                                              ; preds = %431, %402, %403
  %415 = sub i64 %105, %106
  %416 = ashr exact i64 %415, 3
  %417 = icmp ugt i64 %416, 2
  br i1 %417, label %436, label %445

418:                                              ; preds = %403, %431
  %419 = phi %"struct.std::__1::pair.1046"* [ %434, %431 ], [ %406, %403 ]
  %420 = phi %"struct.std::__1::pair.1046"** [ %433, %431 ], [ %120, %403 ]
  %421 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %419, i64 1
  %422 = ptrtoint %"struct.std::__1::pair.1046"* %421 to i64
  %423 = bitcast %"struct.std::__1::pair.1046"** %420 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = sub i64 %422, %424
  %426 = icmp eq i64 %425, 4096
  br i1 %426, label %427, label %431

427:                                              ; preds = %418
  %428 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %420, i64 1
  %429 = bitcast %"struct.std::__1::pair.1046"** %428 to i64*
  %430 = load i64, i64* %429, align 8
  br label %431

431:                                              ; preds = %427, %418
  %432 = phi i64 [ %430, %427 ], [ %422, %418 ]
  %433 = phi %"struct.std::__1::pair.1046"** [ %428, %427 ], [ %420, %418 ]
  %434 = inttoptr i64 %432 to %"struct.std::__1::pair.1046"*
  %435 = icmp eq %"struct.std::__1::pair.1046"* %412, %434
  br i1 %435, label %414, label %418

436:                                              ; preds = %414, %436
  %437 = phi %"struct.std::__1::pair.1046"** [ %440, %436 ], [ %118, %414 ]
  %438 = bitcast %"struct.std::__1::pair.1046"** %437 to i8**
  %439 = load i8*, i8** %438, align 8
  call void @_ZdlPv(i8* %439) #12
  %440 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %437, i64 1
  %441 = ptrtoint %"struct.std::__1::pair.1046"** %440 to i64
  %442 = sub i64 %105, %441
  %443 = ashr exact i64 %442, 3
  %444 = icmp ugt i64 %443, 2
  br i1 %444, label %436, label %445

445:                                              ; preds = %436, %414
  %446 = phi %"struct.std::__1::pair.1046"** [ %118, %414 ], [ %440, %436 ]
  %447 = icmp eq %"struct.std::__1::pair.1046"** %446, %121
  br i1 %447, label %454, label %448

448:                                              ; preds = %445, %448
  %449 = phi %"struct.std::__1::pair.1046"** [ %452, %448 ], [ %446, %445 ]
  %450 = bitcast %"struct.std::__1::pair.1046"** %449 to i8**
  %451 = load i8*, i8** %450, align 8
  call void @_ZdlPv(i8* %451) #12
  %452 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %449, i64 1
  %453 = icmp eq %"struct.std::__1::pair.1046"** %452, %121
  br i1 %453, label %454, label %448

454:                                              ; preds = %448, %445
  %455 = icmp eq %"struct.std::__1::pair.1046"** %108, null
  br i1 %455, label %457, label %456

456:                                              ; preds = %454
  call void @_ZdlPv(i8* %107) #12
  br label %457

457:                                              ; preds = %454, %456
  %458 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %459 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %458, align 8
  %460 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 1
  %461 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %460, align 8
  %462 = icmp eq %"class.spvtools::opt::Loop"** %459, %461
  br i1 %462, label %1383, label %463

463:                                              ; preds = %457
  %464 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 7
  %465 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 7, i32 0, i32 1
  %466 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 7, i32 0, i32 2, i32 0, i32 0
  %467 = bitcast %"class.spvtools::opt::Loop"*** %465 to i64*
  %468 = bitcast %"class.std::__1::vector.910"* %464 to i64*
  %469 = bitcast %"class.spvtools::opt::Loop"*** %466 to i64*
  %470 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %464, i64 0, i32 0, i32 0
  br label %1384

471:                                              ; preds = %151, %1379
  %472 = phi %"struct.spvtools::opt::DominatorTreeNode"* [ %147, %151 ], [ %1380, %1379 ]
  %473 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %472, i64 0, i32 0
  %474 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %473, align 8
  %475 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %474) #13
  %476 = icmp eq %"class.spvtools::opt::Instruction"* %475, null
  br i1 %476, label %1379, label %477

477:                                              ; preds = %471
  %478 = load i32, i32* %152, align 8
  %479 = and i32 %478, 16
  %480 = icmp eq i32 %479, 0
  br i1 %480, label %481, label %493

481:                                              ; preds = %477
  %482 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %153, align 8
  %483 = call i8* @_Znwm(i64 400) #12
  %484 = bitcast i8* %483 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %484, %"class.spvtools::opt::Module"* %482) #13
  %485 = ptrtoint i8* %483 to i64
  %486 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %155, align 8
  store i64 %485, i64* %156, align 8
  %487 = icmp eq %"class.spvtools::opt::CFG"* %486, null
  br i1 %487, label %490, label %488

488:                                              ; preds = %481
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %486) #13
  %489 = bitcast %"class.spvtools::opt::CFG"* %486 to i8*
  call void @_ZdlPv(i8* %489) #12
  br label %490

490:                                              ; preds = %488, %481
  %491 = load i32, i32* %152, align 8
  %492 = or i32 %491, 16
  store i32 %492, i32* %152, align 8
  br label %493

493:                                              ; preds = %477, %490
  %494 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %157, align 8
  %495 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %473, align 8
  %496 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %495, i64 0, i32 1, i32 0, i32 0, i32 0
  %497 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %496, align 8
  %498 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %497, i64 0, i32 4
  %499 = load i8, i8* %498, align 1, !range !2
  %500 = icmp eq i8 %499, 0
  br i1 %500, label %506, label %501

501:                                              ; preds = %493
  %502 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %497, i64 0, i32 3
  %503 = load i8, i8* %502, align 4, !range !2
  %504 = zext i8 %503 to i32
  %505 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %497, i32 %504) #13
  br label %506

506:                                              ; preds = %493, %501
  %507 = phi i32 [ %505, %501 ], [ 0, %493 ]
  %508 = zext i32 %507 to i64
  %509 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %494, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %510 = load i64, i64* %509, align 8
  %511 = icmp eq i64 %510, 0
  br i1 %511, label %560, label %512

512:                                              ; preds = %506
  %513 = call i64 @llvm.ctpop.i64(i64 %510) #13, !range !3
  %514 = icmp ugt i64 %513, 1
  br i1 %514, label %518, label %515

515:                                              ; preds = %512
  %516 = add i64 %510, 4294967295
  %517 = and i64 %516, %508
  br label %522

518:                                              ; preds = %512
  %519 = icmp ugt i64 %510, %508
  br i1 %519, label %522, label %520

520:                                              ; preds = %518
  %521 = urem i64 %508, %510
  br label %522

522:                                              ; preds = %520, %518, %515
  %523 = phi i64 [ %517, %515 ], [ %521, %520 ], [ %508, %518 ]
  %524 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %494, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %525 = load %"struct.std::__1::__hash_node_base.854"**, %"struct.std::__1::__hash_node_base.854"*** %524, align 8
  %526 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %525, i64 %523
  %527 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %526, align 8
  %528 = icmp eq %"struct.std::__1::__hash_node_base.854"* %527, null
  br i1 %528, label %560, label %529

529:                                              ; preds = %522
  %530 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %527, i64 0, i32 0
  %531 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %530, align 8
  %532 = icmp eq %"struct.std::__1::__hash_node_base.854"* %531, null
  br i1 %532, label %560, label %533

533:                                              ; preds = %529
  %534 = add i64 %510, -1
  br label %535

535:                                              ; preds = %556, %533
  %536 = phi %"struct.std::__1::__hash_node_base.854"* [ %531, %533 ], [ %558, %556 ]
  %537 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %536, i64 1
  %538 = bitcast %"struct.std::__1::__hash_node_base.854"* %537 to i64*
  %539 = load i64, i64* %538, align 8
  %540 = icmp eq i64 %539, %508
  br i1 %540, label %551, label %541

541:                                              ; preds = %535
  br i1 %514, label %544, label %542

542:                                              ; preds = %541
  %543 = and i64 %539, %534
  br label %548

544:                                              ; preds = %541
  %545 = icmp ult i64 %539, %510
  br i1 %545, label %548, label %546

546:                                              ; preds = %544
  %547 = urem i64 %539, %510
  br label %548

548:                                              ; preds = %546, %544, %542
  %549 = phi i64 [ %543, %542 ], [ %547, %546 ], [ %539, %544 ]
  %550 = icmp eq i64 %549, %523
  br i1 %550, label %556, label %560

551:                                              ; preds = %535
  %552 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %536, i64 2
  %553 = bitcast %"struct.std::__1::__hash_node_base.854"* %552 to i32*
  %554 = load i32, i32* %553, align 4
  %555 = icmp eq i32 %554, %507
  br i1 %555, label %561, label %556

556:                                              ; preds = %551, %548
  %557 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %536, i64 0, i32 0
  %558 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %557, align 8
  %559 = icmp eq %"struct.std::__1::__hash_node_base.854"* %558, null
  br i1 %559, label %560, label %535

560:                                              ; preds = %529, %522, %506, %556, %548
  call void @abort() #14
  unreachable

561:                                              ; preds = %551
  %562 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %536, i64 3
  %563 = bitcast %"struct.std::__1::__hash_node_base.854"* %562 to i32**
  %564 = load i32*, i32** %563, align 8
  %565 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %536, i64 4
  %566 = bitcast %"struct.std::__1::__hash_node_base.854"* %565 to i32**
  %567 = load i32*, i32** %566, align 8
  %568 = icmp eq i32* %564, %567
  br i1 %568, label %1379, label %569

569:                                              ; preds = %561, %610
  %570 = phi i32* [ %611, %610 ], [ %564, %561 ]
  %571 = load i32, i32* %570, align 4
  %572 = load %"class.std::__1::__tree_node.1117"*, %"class.std::__1::__tree_node.1117"** %159, align 8
  %573 = icmp eq %"class.std::__1::__tree_node.1117"* %572, null
  br i1 %573, label %610, label %574

574:                                              ; preds = %569, %574
  %575 = phi %"class.std::__1::__tree_end_node"* [ %585, %574 ], [ %158, %569 ]
  %576 = phi %"class.std::__1::__tree_node.1117"* [ %586, %574 ], [ %572, %569 ]
  %577 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %576, i64 0, i32 1, i32 0, i32 0
  %578 = load i32, i32* %577, align 4
  %579 = icmp ult i32 %578, %571
  %580 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %576, i64 0, i32 0, i32 1
  %581 = bitcast %"class.std::__1::__tree_node_base"** %580 to %"class.std::__1::__tree_node.1117"**
  %582 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %576, i64 0, i32 0, i32 0
  %583 = bitcast %"class.std::__1::__tree_node.1117"* %576 to %"class.std::__1::__tree_node.1117"**
  %584 = select i1 %579, %"class.std::__1::__tree_node.1117"** %581, %"class.std::__1::__tree_node.1117"** %583
  %585 = select i1 %579, %"class.std::__1::__tree_end_node"* %575, %"class.std::__1::__tree_end_node"* %582
  %586 = load %"class.std::__1::__tree_node.1117"*, %"class.std::__1::__tree_node.1117"** %584, align 8
  %587 = icmp eq %"class.std::__1::__tree_node.1117"* %586, null
  br i1 %587, label %588, label %574

588:                                              ; preds = %574
  %589 = icmp eq %"class.std::__1::__tree_end_node"* %585, %158
  br i1 %589, label %610, label %590

590:                                              ; preds = %588
  %591 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %585, i64 4
  %592 = bitcast %"class.std::__1::__tree_end_node"* %591 to i32*
  %593 = load i32, i32* %592, align 4
  %594 = icmp ugt i32 %593, %571
  br i1 %594, label %610, label %595

595:                                              ; preds = %590
  %596 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %473, align 8
  %597 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %596, i64 0, i32 1, i32 0, i32 0, i32 0
  %598 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %597, align 8
  %599 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %598, i64 0, i32 4
  %600 = load i8, i8* %599, align 1, !range !2
  %601 = icmp eq i8 %600, 0
  br i1 %601, label %607, label %602

602:                                              ; preds = %595
  %603 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %598, i64 0, i32 3
  %604 = load i8, i8* %603, align 4, !range !2
  %605 = zext i8 %604 to i32
  %606 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %598, i32 %605) #13
  br label %607

607:                                              ; preds = %595, %602
  %608 = phi i32 [ %606, %602 ], [ 0, %595 ]
  %609 = call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"* %13, i32 %608, i32 %571) #13
  br i1 %609, label %613, label %610

610:                                              ; preds = %590, %569, %588, %607
  %611 = getelementptr inbounds i32, i32* %570, i64 1
  %612 = icmp eq i32* %611, %567
  br i1 %612, label %1379, label %569

613:                                              ; preds = %607
  %614 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %475, i32 0) #13
  %615 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %475, i32 1) #13
  %616 = load i32, i32* %152, align 8
  %617 = and i32 %616, 16
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %631

619:                                              ; preds = %613
  %620 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %153, align 8
  %621 = call i8* @_Znwm(i64 400) #12
  %622 = bitcast i8* %621 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %622, %"class.spvtools::opt::Module"* %620) #13
  %623 = ptrtoint i8* %621 to i64
  %624 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %155, align 8
  store i64 %623, i64* %156, align 8
  %625 = icmp eq %"class.spvtools::opt::CFG"* %624, null
  br i1 %625, label %628, label %626

626:                                              ; preds = %619
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %624) #13
  %627 = bitcast %"class.spvtools::opt::CFG"* %624 to i8*
  call void @_ZdlPv(i8* %627) #12
  br label %628

628:                                              ; preds = %626, %619
  %629 = load i32, i32* %152, align 8
  %630 = or i32 %629, 16
  store i32 %630, i32* %152, align 8
  br label %631

631:                                              ; preds = %613, %628
  %632 = phi i32 [ %616, %613 ], [ %630, %628 ]
  %633 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %157, align 8
  %634 = zext i32 %614 to i64
  %635 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %633, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %636 = load i64, i64* %635, align 8
  %637 = icmp eq i64 %636, 0
  br i1 %637, label %686, label %638

638:                                              ; preds = %631
  %639 = call i64 @llvm.ctpop.i64(i64 %636) #13, !range !3
  %640 = icmp ugt i64 %639, 1
  br i1 %640, label %644, label %641

641:                                              ; preds = %638
  %642 = add i64 %636, 4294967295
  %643 = and i64 %642, %634
  br label %648

644:                                              ; preds = %638
  %645 = icmp ugt i64 %636, %634
  br i1 %645, label %648, label %646

646:                                              ; preds = %644
  %647 = urem i64 %634, %636
  br label %648

648:                                              ; preds = %646, %644, %641
  %649 = phi i64 [ %643, %641 ], [ %647, %646 ], [ %634, %644 ]
  %650 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %633, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %651 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %650, align 8
  %652 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %651, i64 %649
  %653 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %652, align 8
  %654 = icmp eq %"struct.std::__1::__hash_node_base.878"* %653, null
  br i1 %654, label %686, label %655

655:                                              ; preds = %648
  %656 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %653, i64 0, i32 0
  %657 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %656, align 8
  %658 = icmp eq %"struct.std::__1::__hash_node_base.878"* %657, null
  br i1 %658, label %686, label %659

659:                                              ; preds = %655
  %660 = add i64 %636, -1
  br label %661

661:                                              ; preds = %682, %659
  %662 = phi %"struct.std::__1::__hash_node_base.878"* [ %657, %659 ], [ %684, %682 ]
  %663 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %662, i64 1
  %664 = bitcast %"struct.std::__1::__hash_node_base.878"* %663 to i64*
  %665 = load i64, i64* %664, align 8
  %666 = icmp eq i64 %665, %634
  br i1 %666, label %677, label %667

667:                                              ; preds = %661
  br i1 %640, label %670, label %668

668:                                              ; preds = %667
  %669 = and i64 %665, %660
  br label %674

670:                                              ; preds = %667
  %671 = icmp ult i64 %665, %636
  br i1 %671, label %674, label %672

672:                                              ; preds = %670
  %673 = urem i64 %665, %636
  br label %674

674:                                              ; preds = %672, %670, %668
  %675 = phi i64 [ %669, %668 ], [ %673, %672 ], [ %665, %670 ]
  %676 = icmp eq i64 %675, %649
  br i1 %676, label %682, label %686

677:                                              ; preds = %661
  %678 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %662, i64 2
  %679 = bitcast %"struct.std::__1::__hash_node_base.878"* %678 to i32*
  %680 = load i32, i32* %679, align 4
  %681 = icmp eq i32 %680, %614
  br i1 %681, label %687, label %682

682:                                              ; preds = %677, %674
  %683 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %662, i64 0, i32 0
  %684 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %683, align 8
  %685 = icmp eq %"struct.std::__1::__hash_node_base.878"* %684, null
  br i1 %685, label %686, label %661

686:                                              ; preds = %655, %648, %631, %682, %674
  call void @abort() #14
  unreachable

687:                                              ; preds = %677
  %688 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %662, i64 3
  %689 = bitcast %"struct.std::__1::__hash_node_base.878"* %688 to %"class.spvtools::opt::BasicBlock"**
  %690 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %689, align 8
  %691 = and i32 %632, 16
  %692 = icmp eq i32 %691, 0
  br i1 %692, label %693, label %710

693:                                              ; preds = %687
  %694 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %153, align 8
  %695 = call i8* @_Znwm(i64 400) #12
  %696 = bitcast i8* %695 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %696, %"class.spvtools::opt::Module"* %694) #13
  %697 = ptrtoint i8* %695 to i64
  %698 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %155, align 8
  store i64 %697, i64* %156, align 8
  %699 = icmp eq %"class.spvtools::opt::CFG"* %698, null
  %700 = bitcast i8* %695 to %"class.spvtools::opt::CFG"*
  br i1 %699, label %704, label %701

701:                                              ; preds = %693
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %698) #13
  %702 = bitcast %"class.spvtools::opt::CFG"* %698 to i8*
  call void @_ZdlPv(i8* %702) #12
  %703 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %157, align 8
  br label %704

704:                                              ; preds = %701, %693
  %705 = phi %"class.spvtools::opt::CFG"* [ %703, %701 ], [ %700, %693 ]
  %706 = load i32, i32* %152, align 8
  %707 = or i32 %706, 16
  store i32 %707, i32* %152, align 8
  %708 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %705, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %709 = load i64, i64* %708, align 8
  br label %710

710:                                              ; preds = %687, %704
  %711 = phi i64 [ %636, %687 ], [ %709, %704 ]
  %712 = phi %"class.spvtools::opt::CFG"* [ %633, %687 ], [ %705, %704 ]
  %713 = zext i32 %615 to i64
  %714 = icmp eq i64 %711, 0
  br i1 %714, label %763, label %715

715:                                              ; preds = %710
  %716 = call i64 @llvm.ctpop.i64(i64 %711) #13, !range !3
  %717 = icmp ugt i64 %716, 1
  br i1 %717, label %721, label %718

718:                                              ; preds = %715
  %719 = add i64 %711, 4294967295
  %720 = and i64 %719, %713
  br label %725

721:                                              ; preds = %715
  %722 = icmp ugt i64 %711, %713
  br i1 %722, label %725, label %723

723:                                              ; preds = %721
  %724 = urem i64 %713, %711
  br label %725

725:                                              ; preds = %723, %721, %718
  %726 = phi i64 [ %720, %718 ], [ %724, %723 ], [ %713, %721 ]
  %727 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %712, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %728 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %727, align 8
  %729 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %728, i64 %726
  %730 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %729, align 8
  %731 = icmp eq %"struct.std::__1::__hash_node_base.878"* %730, null
  br i1 %731, label %763, label %732

732:                                              ; preds = %725
  %733 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %730, i64 0, i32 0
  %734 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %733, align 8
  %735 = icmp eq %"struct.std::__1::__hash_node_base.878"* %734, null
  br i1 %735, label %763, label %736

736:                                              ; preds = %732
  %737 = add i64 %711, -1
  br label %738

738:                                              ; preds = %759, %736
  %739 = phi %"struct.std::__1::__hash_node_base.878"* [ %734, %736 ], [ %761, %759 ]
  %740 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %739, i64 1
  %741 = bitcast %"struct.std::__1::__hash_node_base.878"* %740 to i64*
  %742 = load i64, i64* %741, align 8
  %743 = icmp eq i64 %742, %713
  br i1 %743, label %754, label %744

744:                                              ; preds = %738
  br i1 %717, label %747, label %745

745:                                              ; preds = %744
  %746 = and i64 %742, %737
  br label %751

747:                                              ; preds = %744
  %748 = icmp ult i64 %742, %711
  br i1 %748, label %751, label %749

749:                                              ; preds = %747
  %750 = urem i64 %742, %711
  br label %751

751:                                              ; preds = %749, %747, %745
  %752 = phi i64 [ %746, %745 ], [ %750, %749 ], [ %742, %747 ]
  %753 = icmp eq i64 %752, %726
  br i1 %753, label %759, label %763

754:                                              ; preds = %738
  %755 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %739, i64 2
  %756 = bitcast %"struct.std::__1::__hash_node_base.878"* %755 to i32*
  %757 = load i32, i32* %756, align 4
  %758 = icmp eq i32 %757, %615
  br i1 %758, label %764, label %759

759:                                              ; preds = %754, %751
  %760 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %739, i64 0, i32 0
  %761 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %760, align 8
  %762 = icmp eq %"struct.std::__1::__hash_node_base.878"* %761, null
  br i1 %762, label %763, label %738

763:                                              ; preds = %732, %725, %710, %759, %751
  call void @abort() #14
  unreachable

764:                                              ; preds = %754
  %765 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %739, i64 3
  %766 = bitcast %"struct.std::__1::__hash_node_base.878"* %765 to i64*
  %767 = load i64, i64* %766, align 8
  %768 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %1, %"class.spvtools::opt::Instruction"* nonnull %475)
  %769 = call i8* @_Znwm(i64 128) #12
  %770 = bitcast i8* %769 to %"class.spvtools::opt::Loop"*
  %771 = bitcast i8* %769 to %"class.spvtools::opt::IRContext"**
  store %"class.spvtools::opt::IRContext"* %1, %"class.spvtools::opt::IRContext"** %771, align 8
  %772 = getelementptr inbounds i8, i8* %769, i64 8
  %773 = bitcast i8* %772 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %768, %"class.spvtools::opt::BasicBlock"** %773, align 8
  %774 = getelementptr inbounds i8, i8* %769, i64 16
  %775 = bitcast i8* %774 to i64*
  store i64 %767, i64* %775, align 8
  %776 = getelementptr inbounds i8, i8* %769, i64 24
  %777 = bitcast i8* %776 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %690, %"class.spvtools::opt::BasicBlock"** %777, align 8
  %778 = getelementptr inbounds i8, i8* %769, i64 32
  %779 = bitcast i8* %778 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %779, align 8
  %780 = getelementptr inbounds i8, i8* %769, i64 48
  %781 = getelementptr inbounds i8, i8* %769, i64 112
  %782 = bitcast i8* %781 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %780, i8 0, i64 64, i1 false) #13
  store i32 1065353216, i32* %782, align 4
  %783 = getelementptr inbounds i8, i8* %769, i64 120
  store i8 0, i8* %783, align 8
  %784 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop17FindLoopPreheaderEPNS0_17DominatorAnalysisE(%"class.spvtools::opt::Loop"* nonnull %770, %"class.spvtools::opt::DominatorAnalysis"* %12) #13
  store %"class.spvtools::opt::BasicBlock"* %784, %"class.spvtools::opt::BasicBlock"** %779, align 8
  %785 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop14FindLatchBlockEv(%"class.spvtools::opt::Loop"* nonnull %770) #13
  %786 = getelementptr inbounds i8, i8* %769, i64 40
  %787 = bitcast i8* %786 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %785, %"class.spvtools::opt::BasicBlock"** %787, align 8
  %788 = ptrtoint i8* %769 to i64
  %789 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %160, align 8
  %790 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %161, align 8
  %791 = icmp eq %"class.spvtools::opt::Loop"** %789, %790
  %792 = ptrtoint %"class.spvtools::opt::Loop"** %790 to i64
  br i1 %791, label %797, label %793

793:                                              ; preds = %764
  %794 = bitcast %"class.spvtools::opt::Loop"** %789 to i64*
  store i64 %788, i64* %794, align 8
  %795 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %789, i64 1
  %796 = ptrtoint %"class.spvtools::opt::Loop"** %795 to i64
  store i64 %796, i64* %162, align 8
  br label %851

797:                                              ; preds = %764
  %798 = ptrtoint %"class.spvtools::opt::Loop"** %789 to i64
  %799 = load i64, i64* %163, align 8
  %800 = sub i64 %798, %799
  %801 = ashr exact i64 %800, 3
  %802 = add nsw i64 %801, 1
  %803 = icmp ugt i64 %802, 2305843009213693951
  br i1 %803, label %804, label %806

804:                                              ; preds = %797
  %805 = bitcast %"class.spvtools::opt::LoopDescriptor"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %805) #14
  unreachable

806:                                              ; preds = %797
  %807 = sub i64 %792, %799
  %808 = ashr exact i64 %807, 3
  %809 = icmp ult i64 %808, 1152921504606846975
  br i1 %809, label %810, label %818

810:                                              ; preds = %806
  %811 = ashr exact i64 %807, 2
  %812 = icmp ult i64 %811, %802
  %813 = select i1 %812, i64 %802, i64 %811
  %814 = icmp eq i64 %813, 0
  br i1 %814, label %823, label %815

815:                                              ; preds = %810
  %816 = icmp ugt i64 %813, 2305843009213693951
  br i1 %816, label %817, label %818

817:                                              ; preds = %815
  call void @abort() #14
  unreachable

818:                                              ; preds = %815, %806
  %819 = phi i64 [ %813, %815 ], [ 2305843009213693951, %806 ]
  %820 = shl i64 %819, 3
  %821 = call i8* @_Znwm(i64 %820) #12
  %822 = bitcast i8* %821 to %"class.spvtools::opt::Loop"**
  br label %823

823:                                              ; preds = %818, %810
  %824 = phi i64 [ %819, %818 ], [ 0, %810 ]
  %825 = phi %"class.spvtools::opt::Loop"** [ %822, %818 ], [ null, %810 ]
  %826 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %825, i64 %801
  %827 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %825, i64 %824
  %828 = ptrtoint %"class.spvtools::opt::Loop"** %827 to i64
  %829 = bitcast %"class.spvtools::opt::Loop"** %826 to i64*
  store i64 %788, i64* %829, align 8
  %830 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %826, i64 1
  %831 = ptrtoint %"class.spvtools::opt::Loop"** %830 to i64
  %832 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %165, align 8
  %833 = load i64, i64* %162, align 8
  %834 = ptrtoint %"class.spvtools::opt::Loop"** %832 to i64
  %835 = sub i64 %833, %834
  %836 = ashr exact i64 %835, 3
  %837 = sub nsw i64 0, %836
  %838 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %826, i64 %837
  %839 = ptrtoint %"class.spvtools::opt::Loop"** %838 to i64
  %840 = icmp sgt i64 %835, 0
  br i1 %840, label %841, label %845

841:                                              ; preds = %823
  %842 = bitcast %"class.spvtools::opt::Loop"** %838 to i8*
  %843 = bitcast %"class.spvtools::opt::Loop"** %832 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %842, i8* align 8 %843, i64 %835, i1 false) #13
  %844 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %165, align 8
  br label %845

845:                                              ; preds = %841, %823
  %846 = phi %"class.spvtools::opt::Loop"** [ %832, %823 ], [ %844, %841 ]
  store i64 %839, i64* %163, align 8
  store i64 %831, i64* %162, align 8
  store i64 %828, i64* %164, align 8
  %847 = icmp eq %"class.spvtools::opt::Loop"** %846, null
  br i1 %847, label %851, label %848

848:                                              ; preds = %845
  %849 = bitcast %"class.spvtools::opt::Loop"** %846 to i8*
  call void @_ZdlPv(i8* %849) #12
  %850 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %160, align 8
  br label %851

851:                                              ; preds = %793, %845, %848
  %852 = phi %"class.spvtools::opt::Loop"** [ %795, %793 ], [ %830, %845 ], [ %850, %848 ]
  %853 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %852, i64 -1
  %854 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %165, align 8
  %855 = icmp eq %"class.spvtools::opt::Loop"** %853, %854
  br i1 %855, label %869, label %856

856:                                              ; preds = %851
  %857 = icmp ne %"class.spvtools::opt::BasicBlock"* %768, null
  %858 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %768, i64 0, i32 1, i32 0, i32 0, i32 0
  %859 = icmp ne %"class.spvtools::opt::BasicBlock"* %690, null
  %860 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %690, i64 0, i32 1, i32 0, i32 0, i32 0
  %861 = getelementptr inbounds i8, i8* %769, i64 56
  %862 = getelementptr inbounds i8, i8* %769, i64 64
  %863 = bitcast i8* %862 to %"class.spvtools::opt::Loop"***
  %864 = getelementptr inbounds i8, i8* %769, i64 72
  %865 = bitcast i8* %864 to %"class.spvtools::opt::Loop"***
  %866 = bitcast i8* %862 to i64*
  %867 = bitcast i8* %861 to i64*
  %868 = bitcast i8* %864 to i64*
  br label %979

869:                                              ; preds = %1101, %851
  %870 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %690, i64 0, i32 1, i32 0, i32 0, i32 0
  %871 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %870, align 8
  %872 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %871, i64 0, i32 4
  %873 = load i8, i8* %872, align 1, !range !2
  %874 = icmp eq i8 %873, 0
  br i1 %874, label %880, label %875

875:                                              ; preds = %869
  %876 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %871, i64 0, i32 3
  %877 = load i8, i8* %876, align 4, !range !2
  %878 = zext i8 %877 to i32
  %879 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %871, i32 %878) #13
  br label %880

880:                                              ; preds = %875, %869
  %881 = phi i32 [ %879, %875 ], [ 0, %869 ]
  %882 = load %"class.std::__1::__tree_node.1117"*, %"class.std::__1::__tree_node.1117"** %159, align 8
  %883 = icmp eq %"class.std::__1::__tree_node.1117"* %882, null
  br i1 %883, label %908, label %884

884:                                              ; preds = %880, %884
  %885 = phi %"class.std::__1::__tree_end_node"* [ %895, %884 ], [ %158, %880 ]
  %886 = phi %"class.std::__1::__tree_node.1117"* [ %896, %884 ], [ %882, %880 ]
  %887 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %886, i64 0, i32 1, i32 0, i32 0
  %888 = load i32, i32* %887, align 4
  %889 = icmp ult i32 %888, %881
  %890 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %886, i64 0, i32 0, i32 1
  %891 = bitcast %"class.std::__1::__tree_node_base"** %890 to %"class.std::__1::__tree_node.1117"**
  %892 = getelementptr inbounds %"class.std::__1::__tree_node.1117", %"class.std::__1::__tree_node.1117"* %886, i64 0, i32 0, i32 0
  %893 = bitcast %"class.std::__1::__tree_node.1117"* %886 to %"class.std::__1::__tree_node.1117"**
  %894 = select i1 %889, %"class.std::__1::__tree_node.1117"** %891, %"class.std::__1::__tree_node.1117"** %893
  %895 = select i1 %889, %"class.std::__1::__tree_end_node"* %885, %"class.std::__1::__tree_end_node"* %892
  %896 = load %"class.std::__1::__tree_node.1117"*, %"class.std::__1::__tree_node.1117"** %894, align 8
  %897 = icmp eq %"class.std::__1::__tree_node.1117"* %896, null
  br i1 %897, label %898, label %884

898:                                              ; preds = %884
  %899 = icmp eq %"class.std::__1::__tree_end_node"* %895, %158
  br i1 %899, label %908, label %900

900:                                              ; preds = %898
  %901 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %895, i64 4
  %902 = bitcast %"class.std::__1::__tree_end_node"* %901 to i32*
  %903 = load i32, i32* %902, align 4
  %904 = icmp ugt i32 %903, %881
  br i1 %904, label %908, label %905

905:                                              ; preds = %900
  %906 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %895, i64 5
  %907 = bitcast %"class.std::__1::__tree_end_node"* %906 to %"struct.spvtools::opt::DominatorTreeNode"*
  br label %908

908:                                              ; preds = %880, %898, %900, %905
  %909 = phi %"struct.spvtools::opt::DominatorTreeNode"* [ %907, %905 ], [ null, %880 ], [ null, %898 ], [ null, %900 ]
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %166) #13
  store %"struct.spvtools::opt::DominatorTreeNode"* %472, %"struct.spvtools::opt::DominatorTreeNode"** %167, align 8, !alias.scope !41
  call void @llvm.memset.p0i8.i64(i8* align 8 %169, i8 0, i64 48, i1 false) #13, !alias.scope !41
  %910 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %472, null
  %911 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"* %472 to i64
  br i1 %910, label %945, label %912

912:                                              ; preds = %908
  %913 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %472, i64 0, i32 2, i32 0, i32 0
  %914 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %913, align 8, !noalias !41
  %915 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %472, i64 0, i32 2, i32 0, i32 1
  %916 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %915, align 8, !noalias !41
  %917 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %914, %916
  br i1 %917, label %945, label %918

918:                                              ; preds = %912
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque.1043"* %174) #13
  %919 = load i64, i64* %170, align 8, !alias.scope !41
  %920 = load i64, i64* %171, align 8, !alias.scope !41
  %921 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %172, align 8, !alias.scope !41
  %922 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %173, align 8, !alias.scope !41
  %923 = add i64 %920, %919
  %924 = icmp eq %"struct.std::__1::pair.1046"** %922, %921
  br i1 %924, label %932, label %925

925:                                              ; preds = %918
  %926 = lshr i64 %923, 8
  %927 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %921, i64 %926
  %928 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %927, align 8
  %929 = and i64 %923, 255
  %930 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %928, i64 %929
  %931 = bitcast %"struct.std::__1::pair.1046"* %930 to i8*
  br label %932

932:                                              ; preds = %925, %918
  %933 = phi i8* [ %931, %925 ], [ null, %918 ]
  %934 = bitcast i8* %933 to %"struct.spvtools::opt::DominatorTreeNode"**
  store %"struct.spvtools::opt::DominatorTreeNode"* %472, %"struct.spvtools::opt::DominatorTreeNode"** %934, align 8
  %935 = getelementptr inbounds i8, i8* %933, i64 8
  %936 = bitcast i8* %935 to %"struct.spvtools::opt::DominatorTreeNode"***
  store %"struct.spvtools::opt::DominatorTreeNode"** %914, %"struct.spvtools::opt::DominatorTreeNode"*** %936, align 8
  %937 = load i64, i64* %170, align 8, !alias.scope !41
  %938 = add i64 %937, 1
  store i64 %938, i64* %170, align 8, !alias.scope !41
  %939 = load i64, i64* %175, align 8, !noalias !44
  %940 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %176, align 8, !noalias !44
  %941 = bitcast %"struct.std::__1::pair.1046"** %940 to i8*
  %942 = load i64, i64* %177, align 8, !noalias !44
  %943 = load i64, i64* %178, align 8, !noalias !44
  %944 = load i64, i64* %171, align 8, !noalias !44
  br label %945

945:                                              ; preds = %932, %912, %908
  %946 = phi i64 [ %938, %932 ], [ 0, %912 ], [ 0, %908 ]
  %947 = phi i64 [ %944, %932 ], [ 0, %912 ], [ 0, %908 ]
  %948 = phi i64 [ %943, %932 ], [ 0, %912 ], [ 0, %908 ]
  %949 = phi i64 [ %942, %932 ], [ 0, %912 ], [ 0, %908 ]
  %950 = phi i8* [ %941, %932 ], [ null, %912 ], [ null, %908 ]
  %951 = phi %"struct.std::__1::pair.1046"** [ %940, %932 ], [ null, %912 ], [ null, %908 ]
  %952 = phi i64 [ %939, %932 ], [ %911, %912 ], [ %911, %908 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %166) #13
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %179) #13
  store i64 %952, i64* %180, align 8, !alias.scope !47
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 48, i1 false) #13, !alias.scope !47
  %953 = inttoptr i64 %949 to %"struct.std::__1::pair.1046"**
  %954 = lshr i64 %947, 8
  %955 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %953, i64 %954
  %956 = inttoptr i64 %948 to %"struct.std::__1::pair.1046"**
  %957 = icmp eq %"struct.std::__1::pair.1046"** %956, %953
  br i1 %957, label %958, label %962

958:                                              ; preds = %945
  %959 = add i64 %946, %947
  %960 = lshr i64 %959, 8
  %961 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %953, i64 %960
  br label %972

962:                                              ; preds = %945
  %963 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %955, align 8
  %964 = and i64 %947, 255
  %965 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %963, i64 %964
  %966 = add i64 %946, %947
  %967 = lshr i64 %966, 8
  %968 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %953, i64 %967
  %969 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %968, align 8
  %970 = and i64 %966, 255
  %971 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %969, i64 %970
  br label %972

972:                                              ; preds = %958, %962
  %973 = phi %"struct.std::__1::pair.1046"** [ %968, %962 ], [ %961, %958 ]
  %974 = phi %"struct.std::__1::pair.1046"* [ %965, %962 ], [ null, %958 ]
  %975 = phi %"struct.std::__1::pair.1046"* [ %971, %962 ], [ null, %958 ]
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque.1043"* %182, %"struct.std::__1::pair.1046"** %955, %"struct.std::__1::pair.1046"* %974, %"struct.std::__1::pair.1046"** %973, %"struct.std::__1::pair.1046"* %975, i8* null) #13
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %184) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %207, i8 0, i64 56, i1 false)
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque.1043"* %186, %"struct.std::__1::pair.1046"** null, %"struct.std::__1::pair.1046"* null, %"struct.std::__1::pair.1046"** null, %"struct.std::__1::pair.1046"* null, i8* null) #13
  %976 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %187, align 8
  %977 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %188, align 8
  %978 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %976, %977
  br i1 %978, label %1104, label %1335

979:                                              ; preds = %856, %1101
  %980 = phi %"class.spvtools::opt::Loop"** [ %853, %856 ], [ %981, %1101 ]
  %981 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %980, i64 -1
  %982 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %981, align 8
  %983 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %982, i64 0, i32 6
  %984 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %983, align 8
  %985 = icmp eq %"class.spvtools::opt::Loop"* %984, null
  br i1 %985, label %986, label %1101

986:                                              ; preds = %979
  %987 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %982, i64 0, i32 1
  %988 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %987, align 8
  %989 = icmp ne %"class.spvtools::opt::BasicBlock"* %988, null
  %990 = and i1 %857, %989
  br i1 %990, label %991, label %1101

991:                                              ; preds = %986
  %992 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %858, align 8
  %993 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %992, i64 0, i32 4
  %994 = load i8, i8* %993, align 1, !range !2
  %995 = icmp eq i8 %994, 0
  br i1 %995, label %1001, label %996

996:                                              ; preds = %991
  %997 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %992, i64 0, i32 3
  %998 = load i8, i8* %997, align 4, !range !2
  %999 = zext i8 %998 to i32
  %1000 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %992, i32 %999) #13
  br label %1001

1001:                                             ; preds = %996, %991
  %1002 = phi i32 [ %1000, %996 ], [ 0, %991 ]
  %1003 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %988, i64 0, i32 1, i32 0, i32 0, i32 0
  %1004 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1003, align 8
  %1005 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1004, i64 0, i32 4
  %1006 = load i8, i8* %1005, align 1, !range !2
  %1007 = icmp eq i8 %1006, 0
  br i1 %1007, label %1013, label %1008

1008:                                             ; preds = %1001
  %1009 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1004, i64 0, i32 3
  %1010 = load i8, i8* %1009, align 4, !range !2
  %1011 = zext i8 %1010 to i32
  %1012 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1004, i32 %1011) #13
  br label %1013

1013:                                             ; preds = %1001, %1008
  %1014 = phi i32 [ %1012, %1008 ], [ 0, %1001 ]
  %1015 = call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"* %13, i32 %1002, i32 %1014) #13
  br i1 %1015, label %1016, label %1101

1016:                                             ; preds = %1013
  %1017 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %987, align 8
  %1018 = icmp ne %"class.spvtools::opt::BasicBlock"* %1017, null
  %1019 = and i1 %859, %1018
  br i1 %1019, label %1020, label %1045

1020:                                             ; preds = %1016
  %1021 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %860, align 8
  %1022 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1021, i64 0, i32 4
  %1023 = load i8, i8* %1022, align 1, !range !2
  %1024 = icmp eq i8 %1023, 0
  br i1 %1024, label %1030, label %1025

1025:                                             ; preds = %1020
  %1026 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1021, i64 0, i32 3
  %1027 = load i8, i8* %1026, align 4, !range !2
  %1028 = zext i8 %1027 to i32
  %1029 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1021, i32 %1028) #13
  br label %1030

1030:                                             ; preds = %1025, %1020
  %1031 = phi i32 [ %1029, %1025 ], [ 0, %1020 ]
  %1032 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1017, i64 0, i32 1, i32 0, i32 0, i32 0
  %1033 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1032, align 8
  %1034 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1033, i64 0, i32 4
  %1035 = load i8, i8* %1034, align 1, !range !2
  %1036 = icmp eq i8 %1035, 0
  br i1 %1036, label %1042, label %1037

1037:                                             ; preds = %1030
  %1038 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1033, i64 0, i32 3
  %1039 = load i8, i8* %1038, align 4, !range !2
  %1040 = zext i8 %1039 to i32
  %1041 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1033, i32 %1040) #13
  br label %1042

1042:                                             ; preds = %1030, %1037
  %1043 = phi i32 [ %1041, %1037 ], [ 0, %1030 ]
  %1044 = call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"* %13, i32 %1031, i32 %1043) #13
  br i1 %1044, label %1101, label %1045

1045:                                             ; preds = %1016, %1042
  %1046 = ptrtoint %"class.spvtools::opt::Loop"* %982 to i64
  %1047 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %863, align 8
  %1048 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %865, align 8
  %1049 = icmp eq %"class.spvtools::opt::Loop"** %1047, %1048
  %1050 = ptrtoint %"class.spvtools::opt::Loop"** %1048 to i64
  br i1 %1049, label %1055, label %1051

1051:                                             ; preds = %1045
  %1052 = bitcast %"class.spvtools::opt::Loop"** %1047 to i64*
  store i64 %1046, i64* %1052, align 8
  %1053 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1047, i64 1
  %1054 = ptrtoint %"class.spvtools::opt::Loop"** %1053 to i64
  store i64 %1054, i64* %866, align 8
  br label %1099

1055:                                             ; preds = %1045
  %1056 = ptrtoint %"class.spvtools::opt::Loop"** %1047 to i64
  %1057 = load i64, i64* %867, align 8
  %1058 = sub i64 %1056, %1057
  %1059 = ashr exact i64 %1058, 3
  %1060 = add nsw i64 %1059, 1
  %1061 = icmp ugt i64 %1060, 2305843009213693951
  br i1 %1061, label %1062, label %1064

1062:                                             ; preds = %1055
  %1063 = bitcast i8* %861 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1063) #14
  unreachable

1064:                                             ; preds = %1055
  %1065 = sub i64 %1050, %1057
  %1066 = ashr exact i64 %1065, 3
  %1067 = icmp ult i64 %1066, 1152921504606846975
  br i1 %1067, label %1068, label %1076

1068:                                             ; preds = %1064
  %1069 = ashr exact i64 %1065, 2
  %1070 = icmp ult i64 %1069, %1060
  %1071 = select i1 %1070, i64 %1060, i64 %1069
  %1072 = icmp eq i64 %1071, 0
  br i1 %1072, label %1081, label %1073

1073:                                             ; preds = %1068
  %1074 = icmp ugt i64 %1071, 2305843009213693951
  br i1 %1074, label %1075, label %1076

1075:                                             ; preds = %1073
  call void @abort() #14
  unreachable

1076:                                             ; preds = %1073, %1064
  %1077 = phi i64 [ %1071, %1073 ], [ 2305843009213693951, %1064 ]
  %1078 = shl i64 %1077, 3
  %1079 = call i8* @_Znwm(i64 %1078) #12
  %1080 = bitcast i8* %1079 to %"class.spvtools::opt::Loop"**
  br label %1081

1081:                                             ; preds = %1076, %1068
  %1082 = phi i64 [ %1077, %1076 ], [ 0, %1068 ]
  %1083 = phi i8* [ %1079, %1076 ], [ null, %1068 ]
  %1084 = phi %"class.spvtools::opt::Loop"** [ %1080, %1076 ], [ null, %1068 ]
  %1085 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1084, i64 %1059
  %1086 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1084, i64 %1082
  %1087 = ptrtoint %"class.spvtools::opt::Loop"** %1086 to i64
  %1088 = bitcast %"class.spvtools::opt::Loop"** %1085 to i64*
  store i64 %1046, i64* %1088, align 8
  %1089 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1085, i64 1
  %1090 = ptrtoint %"class.spvtools::opt::Loop"** %1089 to i64
  %1091 = ptrtoint %"class.spvtools::opt::Loop"** %1084 to i64
  %1092 = icmp sgt i64 %1058, 0
  br i1 %1092, label %1093, label %1095

1093:                                             ; preds = %1081
  %1094 = inttoptr i64 %1057 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1083, i8* align 8 %1094, i64 %1058, i1 false) #13
  br label %1095

1095:                                             ; preds = %1093, %1081
  store i64 %1091, i64* %867, align 8
  store i64 %1090, i64* %866, align 8
  store i64 %1087, i64* %868, align 8
  %1096 = icmp eq i64 %1057, 0
  br i1 %1096, label %1099, label %1097

1097:                                             ; preds = %1095
  %1098 = inttoptr i64 %1057 to i8*
  call void @_ZdlPv(i8* %1098) #12
  br label %1099

1099:                                             ; preds = %1051, %1095, %1097
  %1100 = bitcast %"class.spvtools::opt::Loop"** %983 to i8**
  store i8* %769, i8** %1100, align 8
  br label %1101

1101:                                             ; preds = %979, %986, %1042, %1013, %1099
  %1102 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %165, align 8
  %1103 = icmp eq %"class.spvtools::opt::Loop"** %981, %1102
  br i1 %1103, label %869, label %979

1104:                                             ; preds = %1375, %972
  %1105 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %195, align 8
  %1106 = load i64, i64* %196, align 8
  %1107 = lshr i64 %1106, 8
  %1108 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1105, i64 %1107
  %1109 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %197, align 8
  %1110 = icmp eq %"struct.std::__1::pair.1046"** %1109, %1105
  %1111 = ptrtoint %"struct.std::__1::pair.1046"** %1109 to i64
  %1112 = ptrtoint %"struct.std::__1::pair.1046"** %1105 to i64
  br i1 %1110, label %1125, label %1113

1113:                                             ; preds = %1104
  %1114 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1108, align 8
  %1115 = and i64 %1106, 255
  %1116 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %1114, i64 %1115
  %1117 = load i64, i64* %198, align 8
  %1118 = add i64 %1117, %1106
  %1119 = lshr i64 %1118, 8
  %1120 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1105, i64 %1119
  %1121 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1120, align 8
  %1122 = and i64 %1118, 255
  %1123 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %1121, i64 %1122
  %1124 = icmp eq %"struct.std::__1::pair.1046"* %1123, %1116
  br i1 %1124, label %1125, label %1129

1125:                                             ; preds = %1142, %1104, %1113
  store i64 0, i64* %198, align 8
  %1126 = sub i64 %1111, %1112
  %1127 = ashr exact i64 %1126, 3
  %1128 = icmp ugt i64 %1127, 2
  br i1 %1128, label %1147, label %1160

1129:                                             ; preds = %1113, %1142
  %1130 = phi %"struct.std::__1::pair.1046"* [ %1145, %1142 ], [ %1116, %1113 ]
  %1131 = phi %"struct.std::__1::pair.1046"** [ %1144, %1142 ], [ %1108, %1113 ]
  %1132 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %1130, i64 1
  %1133 = ptrtoint %"struct.std::__1::pair.1046"* %1132 to i64
  %1134 = bitcast %"struct.std::__1::pair.1046"** %1131 to i64*
  %1135 = load i64, i64* %1134, align 8
  %1136 = sub i64 %1133, %1135
  %1137 = icmp eq i64 %1136, 4096
  br i1 %1137, label %1138, label %1142

1138:                                             ; preds = %1129
  %1139 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1131, i64 1
  %1140 = bitcast %"struct.std::__1::pair.1046"** %1139 to i64*
  %1141 = load i64, i64* %1140, align 8
  br label %1142

1142:                                             ; preds = %1138, %1129
  %1143 = phi i64 [ %1141, %1138 ], [ %1133, %1129 ]
  %1144 = phi %"struct.std::__1::pair.1046"** [ %1139, %1138 ], [ %1131, %1129 ]
  %1145 = inttoptr i64 %1143 to %"struct.std::__1::pair.1046"*
  %1146 = icmp eq %"struct.std::__1::pair.1046"* %1123, %1145
  br i1 %1146, label %1125, label %1129

1147:                                             ; preds = %1125, %1147
  %1148 = phi %"struct.std::__1::pair.1046"** [ %1152, %1147 ], [ %1105, %1125 ]
  %1149 = bitcast %"struct.std::__1::pair.1046"** %1148 to i8**
  %1150 = load i8*, i8** %1149, align 8
  call void @_ZdlPv(i8* %1150) #12
  %1151 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %195, align 8
  %1152 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1151, i64 1
  store %"struct.std::__1::pair.1046"** %1152, %"struct.std::__1::pair.1046"*** %195, align 8
  %1153 = load i64, i64* %199, align 8
  %1154 = ptrtoint %"struct.std::__1::pair.1046"** %1152 to i64
  %1155 = sub i64 %1153, %1154
  %1156 = ashr exact i64 %1155, 3
  %1157 = icmp ugt i64 %1156, 2
  br i1 %1157, label %1147, label %1158

1158:                                             ; preds = %1147
  %1159 = inttoptr i64 %1153 to %"struct.std::__1::pair.1046"**
  br label %1160

1160:                                             ; preds = %1158, %1125
  %1161 = phi %"struct.std::__1::pair.1046"** [ %1109, %1125 ], [ %1159, %1158 ]
  %1162 = phi %"struct.std::__1::pair.1046"** [ %1105, %1125 ], [ %1152, %1158 ]
  %1163 = phi i64 [ %1127, %1125 ], [ %1156, %1158 ]
  switch i64 %1163, label %1167 [
    i64 1, label %1165
    i64 2, label %1164
  ]

1164:                                             ; preds = %1160
  br label %1165

1165:                                             ; preds = %1160, %1164
  %1166 = phi i64 [ 256, %1164 ], [ 128, %1160 ]
  store i64 %1166, i64* %196, align 8
  br label %1167

1167:                                             ; preds = %1165, %1160
  %1168 = icmp eq %"struct.std::__1::pair.1046"** %1162, %1161
  br i1 %1168, label %1187, label %1169

1169:                                             ; preds = %1167, %1169
  %1170 = phi %"struct.std::__1::pair.1046"** [ %1173, %1169 ], [ %1162, %1167 ]
  %1171 = bitcast %"struct.std::__1::pair.1046"** %1170 to i8**
  %1172 = load i8*, i8** %1171, align 8
  call void @_ZdlPv(i8* %1172) #12
  %1173 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1170, i64 1
  %1174 = icmp eq %"struct.std::__1::pair.1046"** %1173, %1161
  br i1 %1174, label %1175, label %1169

1175:                                             ; preds = %1169
  %1176 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %195, align 8
  %1177 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %197, align 8
  %1178 = icmp eq %"struct.std::__1::pair.1046"** %1177, %1176
  br i1 %1178, label %1187, label %1179

1179:                                             ; preds = %1175
  %1180 = ptrtoint %"struct.std::__1::pair.1046"** %1176 to i64
  %1181 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1177, i64 -1
  %1182 = ptrtoint %"struct.std::__1::pair.1046"** %1181 to i64
  %1183 = sub i64 %1182, %1180
  %1184 = lshr i64 %1183, 3
  %1185 = xor i64 %1184, -1
  %1186 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1177, i64 %1185
  store %"struct.std::__1::pair.1046"** %1186, %"struct.std::__1::pair.1046"*** %197, align 8
  br label %1187

1187:                                             ; preds = %1179, %1175, %1167
  %1188 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %200, align 8
  %1189 = icmp eq %"struct.std::__1::pair.1046"** %1188, null
  br i1 %1189, label %1192, label %1190

1190:                                             ; preds = %1187
  %1191 = bitcast %"struct.std::__1::pair.1046"** %1188 to i8*
  call void @_ZdlPv(i8* %1191) #12
  br label %1192

1192:                                             ; preds = %1187, %1190
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %184) #13
  %1193 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %201, align 8
  %1194 = load i64, i64* %202, align 8
  %1195 = lshr i64 %1194, 8
  %1196 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1193, i64 %1195
  %1197 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %203, align 8
  %1198 = icmp eq %"struct.std::__1::pair.1046"** %1197, %1193
  %1199 = ptrtoint %"struct.std::__1::pair.1046"** %1197 to i64
  %1200 = ptrtoint %"struct.std::__1::pair.1046"** %1193 to i64
  br i1 %1198, label %1213, label %1201

1201:                                             ; preds = %1192
  %1202 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1196, align 8
  %1203 = and i64 %1194, 255
  %1204 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %1202, i64 %1203
  %1205 = load i64, i64* %204, align 8
  %1206 = add i64 %1205, %1194
  %1207 = lshr i64 %1206, 8
  %1208 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1193, i64 %1207
  %1209 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1208, align 8
  %1210 = and i64 %1206, 255
  %1211 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %1209, i64 %1210
  %1212 = icmp eq %"struct.std::__1::pair.1046"* %1211, %1204
  br i1 %1212, label %1213, label %1217

1213:                                             ; preds = %1230, %1192, %1201
  store i64 0, i64* %204, align 8
  %1214 = sub i64 %1199, %1200
  %1215 = ashr exact i64 %1214, 3
  %1216 = icmp ugt i64 %1215, 2
  br i1 %1216, label %1235, label %1248

1217:                                             ; preds = %1201, %1230
  %1218 = phi %"struct.std::__1::pair.1046"* [ %1233, %1230 ], [ %1204, %1201 ]
  %1219 = phi %"struct.std::__1::pair.1046"** [ %1232, %1230 ], [ %1196, %1201 ]
  %1220 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %1218, i64 1
  %1221 = ptrtoint %"struct.std::__1::pair.1046"* %1220 to i64
  %1222 = bitcast %"struct.std::__1::pair.1046"** %1219 to i64*
  %1223 = load i64, i64* %1222, align 8
  %1224 = sub i64 %1221, %1223
  %1225 = icmp eq i64 %1224, 4096
  br i1 %1225, label %1226, label %1230

1226:                                             ; preds = %1217
  %1227 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1219, i64 1
  %1228 = bitcast %"struct.std::__1::pair.1046"** %1227 to i64*
  %1229 = load i64, i64* %1228, align 8
  br label %1230

1230:                                             ; preds = %1226, %1217
  %1231 = phi i64 [ %1229, %1226 ], [ %1221, %1217 ]
  %1232 = phi %"struct.std::__1::pair.1046"** [ %1227, %1226 ], [ %1219, %1217 ]
  %1233 = inttoptr i64 %1231 to %"struct.std::__1::pair.1046"*
  %1234 = icmp eq %"struct.std::__1::pair.1046"* %1211, %1233
  br i1 %1234, label %1213, label %1217

1235:                                             ; preds = %1213, %1235
  %1236 = phi %"struct.std::__1::pair.1046"** [ %1240, %1235 ], [ %1193, %1213 ]
  %1237 = bitcast %"struct.std::__1::pair.1046"** %1236 to i8**
  %1238 = load i8*, i8** %1237, align 8
  call void @_ZdlPv(i8* %1238) #12
  %1239 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %201, align 8
  %1240 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1239, i64 1
  store %"struct.std::__1::pair.1046"** %1240, %"struct.std::__1::pair.1046"*** %201, align 8
  %1241 = load i64, i64* %205, align 8
  %1242 = ptrtoint %"struct.std::__1::pair.1046"** %1240 to i64
  %1243 = sub i64 %1241, %1242
  %1244 = ashr exact i64 %1243, 3
  %1245 = icmp ugt i64 %1244, 2
  br i1 %1245, label %1235, label %1246

1246:                                             ; preds = %1235
  %1247 = inttoptr i64 %1241 to %"struct.std::__1::pair.1046"**
  br label %1248

1248:                                             ; preds = %1246, %1213
  %1249 = phi %"struct.std::__1::pair.1046"** [ %1197, %1213 ], [ %1247, %1246 ]
  %1250 = phi %"struct.std::__1::pair.1046"** [ %1193, %1213 ], [ %1240, %1246 ]
  %1251 = phi i64 [ %1215, %1213 ], [ %1244, %1246 ]
  switch i64 %1251, label %1255 [
    i64 1, label %1253
    i64 2, label %1252
  ]

1252:                                             ; preds = %1248
  br label %1253

1253:                                             ; preds = %1248, %1252
  %1254 = phi i64 [ 256, %1252 ], [ 128, %1248 ]
  store i64 %1254, i64* %202, align 8
  br label %1255

1255:                                             ; preds = %1253, %1248
  %1256 = icmp eq %"struct.std::__1::pair.1046"** %1250, %1249
  br i1 %1256, label %1275, label %1257

1257:                                             ; preds = %1255, %1257
  %1258 = phi %"struct.std::__1::pair.1046"** [ %1261, %1257 ], [ %1250, %1255 ]
  %1259 = bitcast %"struct.std::__1::pair.1046"** %1258 to i8**
  %1260 = load i8*, i8** %1259, align 8
  call void @_ZdlPv(i8* %1260) #12
  %1261 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1258, i64 1
  %1262 = icmp eq %"struct.std::__1::pair.1046"** %1261, %1249
  br i1 %1262, label %1263, label %1257

1263:                                             ; preds = %1257
  %1264 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %201, align 8
  %1265 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %203, align 8
  %1266 = icmp eq %"struct.std::__1::pair.1046"** %1265, %1264
  br i1 %1266, label %1275, label %1267

1267:                                             ; preds = %1263
  %1268 = ptrtoint %"struct.std::__1::pair.1046"** %1264 to i64
  %1269 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1265, i64 -1
  %1270 = ptrtoint %"struct.std::__1::pair.1046"** %1269 to i64
  %1271 = sub i64 %1270, %1268
  %1272 = lshr i64 %1271, 3
  %1273 = xor i64 %1272, -1
  %1274 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1265, i64 %1273
  store %"struct.std::__1::pair.1046"** %1274, %"struct.std::__1::pair.1046"*** %203, align 8
  br label %1275

1275:                                             ; preds = %1267, %1263, %1255
  %1276 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %206, align 8
  %1277 = icmp eq %"struct.std::__1::pair.1046"** %1276, null
  br i1 %1277, label %1280, label %1278

1278:                                             ; preds = %1275
  %1279 = bitcast %"struct.std::__1::pair.1046"** %1276 to i8*
  call void @_ZdlPv(i8* %1279) #12
  br label %1280

1280:                                             ; preds = %1278, %1275
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %179) #13
  br i1 %957, label %1292, label %1281

1281:                                             ; preds = %1280
  %1282 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %955, align 8
  %1283 = and i64 %947, 255
  %1284 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %1282, i64 %1283
  %1285 = add i64 %946, %947
  %1286 = lshr i64 %1285, 8
  %1287 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %953, i64 %1286
  %1288 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1287, align 8
  %1289 = and i64 %1285, 255
  %1290 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %1288, i64 %1289
  %1291 = icmp eq %"struct.std::__1::pair.1046"* %1290, %1284
  br i1 %1291, label %1292, label %1296

1292:                                             ; preds = %1309, %1280, %1281
  %1293 = sub i64 %948, %949
  %1294 = ashr exact i64 %1293, 3
  %1295 = icmp ugt i64 %1294, 2
  br i1 %1295, label %1314, label %1323

1296:                                             ; preds = %1281, %1309
  %1297 = phi %"struct.std::__1::pair.1046"* [ %1312, %1309 ], [ %1284, %1281 ]
  %1298 = phi %"struct.std::__1::pair.1046"** [ %1311, %1309 ], [ %955, %1281 ]
  %1299 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %1297, i64 1
  %1300 = ptrtoint %"struct.std::__1::pair.1046"* %1299 to i64
  %1301 = bitcast %"struct.std::__1::pair.1046"** %1298 to i64*
  %1302 = load i64, i64* %1301, align 8
  %1303 = sub i64 %1300, %1302
  %1304 = icmp eq i64 %1303, 4096
  br i1 %1304, label %1305, label %1309

1305:                                             ; preds = %1296
  %1306 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1298, i64 1
  %1307 = bitcast %"struct.std::__1::pair.1046"** %1306 to i64*
  %1308 = load i64, i64* %1307, align 8
  br label %1309

1309:                                             ; preds = %1305, %1296
  %1310 = phi i64 [ %1308, %1305 ], [ %1300, %1296 ]
  %1311 = phi %"struct.std::__1::pair.1046"** [ %1306, %1305 ], [ %1298, %1296 ]
  %1312 = inttoptr i64 %1310 to %"struct.std::__1::pair.1046"*
  %1313 = icmp eq %"struct.std::__1::pair.1046"* %1290, %1312
  br i1 %1313, label %1292, label %1296

1314:                                             ; preds = %1292, %1314
  %1315 = phi %"struct.std::__1::pair.1046"** [ %1318, %1314 ], [ %953, %1292 ]
  %1316 = bitcast %"struct.std::__1::pair.1046"** %1315 to i8**
  %1317 = load i8*, i8** %1316, align 8
  call void @_ZdlPv(i8* %1317) #12
  %1318 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1315, i64 1
  %1319 = ptrtoint %"struct.std::__1::pair.1046"** %1318 to i64
  %1320 = sub i64 %948, %1319
  %1321 = ashr exact i64 %1320, 3
  %1322 = icmp ugt i64 %1321, 2
  br i1 %1322, label %1314, label %1323

1323:                                             ; preds = %1314, %1292
  %1324 = phi %"struct.std::__1::pair.1046"** [ %953, %1292 ], [ %1318, %1314 ]
  %1325 = icmp eq %"struct.std::__1::pair.1046"** %1324, %956
  br i1 %1325, label %1332, label %1326

1326:                                             ; preds = %1323, %1326
  %1327 = phi %"struct.std::__1::pair.1046"** [ %1330, %1326 ], [ %1324, %1323 ]
  %1328 = bitcast %"struct.std::__1::pair.1046"** %1327 to i8**
  %1329 = load i8*, i8** %1328, align 8
  call void @_ZdlPv(i8* %1329) #12
  %1330 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %1327, i64 1
  %1331 = icmp eq %"struct.std::__1::pair.1046"** %1330, %956
  br i1 %1331, label %1332, label %1326

1332:                                             ; preds = %1326, %1323
  %1333 = icmp eq %"struct.std::__1::pair.1046"** %951, null
  br i1 %1333, label %1379, label %1334

1334:                                             ; preds = %1332
  call void @_ZdlPv(i8* %950) #12
  br label %1379

1335:                                             ; preds = %972, %1375
  %1336 = phi %"struct.spvtools::opt::DominatorTreeNode"* [ %1376, %1375 ], [ %976, %972 ]
  %1337 = call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEPKNS0_17DominatorTreeNodeES4_(%"class.spvtools::opt::DominatorTree"* %13, %"struct.spvtools::opt::DominatorTreeNode"* %909, %"struct.spvtools::opt::DominatorTreeNode"* %1336) #13
  br i1 %1337, label %1375, label %1338

1338:                                             ; preds = %1335
  %1339 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %1336, i64 0, i32 0
  %1340 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1339, align 8
  %1341 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1340, i64 0, i32 1, i32 0, i32 0, i32 0
  %1342 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1341, align 8
  %1343 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1342, i64 0, i32 4
  %1344 = load i8, i8* %1343, align 1, !range !2
  %1345 = icmp eq i8 %1344, 0
  br i1 %1345, label %1351, label %1346

1346:                                             ; preds = %1338
  %1347 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1342, i64 0, i32 3
  %1348 = load i8, i8* %1347, align 4, !range !2
  %1349 = zext i8 %1348 to i32
  %1350 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1342, i32 %1349) #13
  br label %1351

1351:                                             ; preds = %1346, %1338
  %1352 = phi i32 [ %1350, %1346 ], [ 0, %1338 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %189) #13
  store i32 %1352, i32* %4, align 4
  br label %1353

1353:                                             ; preds = %1351, %1353
  %1354 = phi %"class.spvtools::opt::Loop"* [ %1358, %1353 ], [ %770, %1351 ]
  %1355 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1354, i64 0, i32 8, i32 0
  %1356 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %1355, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %4) #13
  %1357 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1354, i64 0, i32 6
  %1358 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1357, align 8
  %1359 = icmp eq %"class.spvtools::opt::Loop"* %1358, null
  br i1 %1359, label %1360, label %1353

1360:                                             ; preds = %1353
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %189) #13
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %190) #13
  %1361 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1339, align 8
  %1362 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1361, i64 0, i32 1, i32 0, i32 0, i32 0
  %1363 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %1362, align 8
  %1364 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1363, i64 0, i32 4
  %1365 = load i8, i8* %1364, align 1, !range !2
  %1366 = icmp eq i8 %1365, 0
  br i1 %1366, label %1372, label %1367

1367:                                             ; preds = %1360
  %1368 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1363, i64 0, i32 3
  %1369 = load i8, i8* %1368, align 4, !range !2
  %1370 = zext i8 %1369 to i32
  %1371 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1363, i32 %1370) #13
  br label %1372

1372:                                             ; preds = %1360, %1367
  %1373 = phi i32 [ %1371, %1367 ], [ 0, %1360 ]
  store i32 %1373, i32* %191, align 8
  store i8* %769, i8** %193, align 8
  %1374 = call { %"struct.std::__1::__hash_node_base.1009"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJNS_4pairIjS5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1005"* %194, i32* nonnull dereferenceable(4) %191, %"struct.std::__1::pair.1060"* nonnull dereferenceable(16) %11) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %190) #13
  br label %1375

1375:                                             ; preds = %1335, %1372
  call void @_ZN8spvtools3opt14TreeDFIteratorINS0_17DominatorTreeNodeEE14MoveToNextNodeEv(%"class.spvtools::opt::TreeDFIterator"* nonnull %9) #13
  %1376 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %187, align 8
  %1377 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %188, align 8
  %1378 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %1376, %1377
  br i1 %1378, label %1104, label %1335

1379:                                             ; preds = %610, %561, %1334, %1332, %471
  call void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_17DominatorTreeNodeEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator"* nonnull %6) #13
  %1380 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %146, align 8
  %1381 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %148, align 8
  %1382 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %1380, %1381
  br i1 %1382, label %208, label %471

1383:                                             ; preds = %1453, %457
  ret void

1384:                                             ; preds = %463, %1453
  %1385 = phi %"class.spvtools::opt::Loop"** [ %459, %463 ], [ %1454, %1453 ]
  %1386 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1385, align 8
  %1387 = ptrtoint %"class.spvtools::opt::Loop"* %1386 to i64
  %1388 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1386, i64 0, i32 6
  %1389 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1388, align 8
  %1390 = icmp eq %"class.spvtools::opt::Loop"* %1389, null
  br i1 %1390, label %1391, label %1453

1391:                                             ; preds = %1384
  %1392 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %465, align 8
  %1393 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %466, align 8
  %1394 = icmp eq %"class.spvtools::opt::Loop"** %1392, %1393
  %1395 = ptrtoint %"class.spvtools::opt::Loop"** %1393 to i64
  br i1 %1394, label %1400, label %1396

1396:                                             ; preds = %1391
  %1397 = bitcast %"class.spvtools::opt::Loop"** %1392 to i64*
  store i64 %1387, i64* %1397, align 8
  %1398 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1392, i64 1
  %1399 = ptrtoint %"class.spvtools::opt::Loop"** %1398 to i64
  store i64 %1399, i64* %467, align 8
  br label %1453

1400:                                             ; preds = %1391
  %1401 = ptrtoint %"class.spvtools::opt::Loop"** %1392 to i64
  %1402 = load i64, i64* %468, align 8
  %1403 = sub i64 %1401, %1402
  %1404 = ashr exact i64 %1403, 3
  %1405 = add nsw i64 %1404, 1
  %1406 = icmp ugt i64 %1405, 2305843009213693951
  br i1 %1406, label %1407, label %1409

1407:                                             ; preds = %1400
  %1408 = bitcast %"class.std::__1::vector.910"* %464 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1408) #14
  unreachable

1409:                                             ; preds = %1400
  %1410 = sub i64 %1395, %1402
  %1411 = ashr exact i64 %1410, 3
  %1412 = icmp ult i64 %1411, 1152921504606846975
  br i1 %1412, label %1413, label %1421

1413:                                             ; preds = %1409
  %1414 = ashr exact i64 %1410, 2
  %1415 = icmp ult i64 %1414, %1405
  %1416 = select i1 %1415, i64 %1405, i64 %1414
  %1417 = icmp eq i64 %1416, 0
  br i1 %1417, label %1426, label %1418

1418:                                             ; preds = %1413
  %1419 = icmp ugt i64 %1416, 2305843009213693951
  br i1 %1419, label %1420, label %1421

1420:                                             ; preds = %1418
  call void @abort() #14
  unreachable

1421:                                             ; preds = %1418, %1409
  %1422 = phi i64 [ %1416, %1418 ], [ 2305843009213693951, %1409 ]
  %1423 = shl i64 %1422, 3
  %1424 = call i8* @_Znwm(i64 %1423) #12
  %1425 = bitcast i8* %1424 to %"class.spvtools::opt::Loop"**
  br label %1426

1426:                                             ; preds = %1421, %1413
  %1427 = phi i64 [ %1422, %1421 ], [ 0, %1413 ]
  %1428 = phi %"class.spvtools::opt::Loop"** [ %1425, %1421 ], [ null, %1413 ]
  %1429 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1428, i64 %1404
  %1430 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1428, i64 %1427
  %1431 = ptrtoint %"class.spvtools::opt::Loop"** %1430 to i64
  %1432 = bitcast %"class.spvtools::opt::Loop"** %1429 to i64*
  store i64 %1387, i64* %1432, align 8
  %1433 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1429, i64 1
  %1434 = ptrtoint %"class.spvtools::opt::Loop"** %1433 to i64
  %1435 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %470, align 8
  %1436 = load i64, i64* %467, align 8
  %1437 = ptrtoint %"class.spvtools::opt::Loop"** %1435 to i64
  %1438 = sub i64 %1436, %1437
  %1439 = ashr exact i64 %1438, 3
  %1440 = sub nsw i64 0, %1439
  %1441 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1429, i64 %1440
  %1442 = ptrtoint %"class.spvtools::opt::Loop"** %1441 to i64
  %1443 = icmp sgt i64 %1438, 0
  br i1 %1443, label %1444, label %1448

1444:                                             ; preds = %1426
  %1445 = bitcast %"class.spvtools::opt::Loop"** %1441 to i8*
  %1446 = bitcast %"class.spvtools::opt::Loop"** %1435 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1445, i8* align 8 %1446, i64 %1438, i1 false) #13
  %1447 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %470, align 8
  br label %1448

1448:                                             ; preds = %1444, %1426
  %1449 = phi %"class.spvtools::opt::Loop"** [ %1435, %1426 ], [ %1447, %1444 ]
  store i64 %1442, i64* %468, align 8
  store i64 %1434, i64* %467, align 8
  store i64 %1431, i64* %469, align 8
  %1450 = icmp eq %"class.spvtools::opt::Loop"** %1449, null
  br i1 %1450, label %1453, label %1451

1451:                                             ; preds = %1448
  %1452 = bitcast %"class.spvtools::opt::Loop"** %1449 to i8*
  call void @_ZdlPv(i8* %1452) #12
  br label %1453

1453:                                             ; preds = %1384, %1451, %1448, %1396
  %1454 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1385, i64 1
  %1455 = icmp eq %"class.spvtools::opt::Loop"** %1454, %461
  br i1 %1455, label %1383, label %1384
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14LoopDescriptorD2Ev(%"class.spvtools::opt::LoopDescriptor"*) unnamed_addr #0 align 2 {
  tail call void @_ZN8spvtools3opt14LoopDescriptor10ClearLoopsEv(%"class.spvtools::opt::LoopDescriptor"* %0)
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.std::__1::vector.1028", %"class.std::__1::vector.1028"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.std::__1::pair.1030"*, %"struct.std::__1::pair.1030"** %3, align 8
  %5 = icmp eq %"struct.std::__1::pair.1030"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.1028", %"class.std::__1::vector.1028"* %2, i64 0, i32 0
  tail call void @_ZNSt3__113__vector_baseINS_4pairIPN8spvtools3opt4LoopENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_9allocatorISA_EEE5clearEv(%"class.std::__1::__vector_base.1029"* %7) #13
  %8 = bitcast %"class.std::__1::vector.1028"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.1009"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.1009"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  %21 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %21, align 8
  store %"struct.std::__1::__hash_node_base.1009"** null, %"struct.std::__1::__hash_node_base.1009"*** %21, align 8
  %23 = icmp eq %"struct.std::__1::__hash_node_base.1009"** %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = bitcast %"struct.std::__1::__hash_node_base.1009"** %22 to i8*
  tail call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.922"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %26, %30
  %31 = phi %"struct.std::__1::__hash_node_base.922"* [ %33, %30 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %32, align 8
  %34 = bitcast %"struct.std::__1::__hash_node_base.922"* %31 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  %35 = icmp eq %"struct.std::__1::__hash_node_base.922"* %33, null
  br i1 %35, label %36, label %30

36:                                               ; preds = %30, %26
  %37 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %37, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.922"** %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  %41 = bitcast %"struct.std::__1::__hash_node_base.922"** %38 to i8*
  tail call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %40, %36
  %43 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 7, i32 0, i32 0
  %44 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %43, align 8
  %45 = icmp eq %"class.spvtools::opt::Loop"** %44, null
  br i1 %45, label %51, label %46

46:                                               ; preds = %42
  %47 = ptrtoint %"class.spvtools::opt::Loop"** %44 to i64
  %48 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 7, i32 0, i32 1
  %49 = bitcast %"class.spvtools::opt::Loop"*** %48 to i64*
  store i64 %47, i64* %49, align 8
  %50 = bitcast %"class.spvtools::opt::Loop"** %44 to i8*
  tail call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %42, %46
  %52 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %52, align 8
  %54 = icmp eq %"class.spvtools::opt::Loop"** %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = ptrtoint %"class.spvtools::opt::Loop"** %53 to i64
  %57 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Loop"*** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast %"class.spvtools::opt::Loop"** %53 to i8*
  tail call void @_ZdlPv(i8* %59) #12
  br label %60

60:                                               ; preds = %51, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14LoopDescriptor10ClearLoopsEv(%"class.spvtools::opt::LoopDescriptor"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Loop"** %3, %5
  br i1 %6, label %7, label %15

7:                                                ; preds = %1
  %8 = ptrtoint %"class.spvtools::opt::Loop"** %3 to i64
  br label %12

9:                                                ; preds = %46
  %10 = bitcast %"class.spvtools::opt::LoopDescriptor"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  br label %12

12:                                               ; preds = %7, %9
  %13 = phi i64 [ %11, %9 ], [ %8, %7 ]
  %14 = bitcast %"class.spvtools::opt::Loop"*** %4 to i64*
  store i64 %13, i64* %14, align 8
  ret void

15:                                               ; preds = %1, %46
  %16 = phi %"class.spvtools::opt::Loop"** [ %47, %46 ], [ %3, %1 ]
  %17 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %16, align 8
  %18 = icmp eq %"class.spvtools::opt::Loop"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %17, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.922"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19, %23
  %24 = phi %"struct.std::__1::__hash_node_base.922"* [ %26, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %24, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base.922"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #12
  %28 = icmp eq %"struct.std::__1::__hash_node_base.922"* %26, null
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %17, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.922"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %33, %29
  %36 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %17, i64 0, i32 7, i32 0, i32 0
  %37 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %36, align 8
  %38 = icmp eq %"class.spvtools::opt::Loop"** %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = ptrtoint %"class.spvtools::opt::Loop"** %37 to i64
  %41 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %17, i64 0, i32 7, i32 0, i32 1
  %42 = bitcast %"class.spvtools::opt::Loop"*** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = bitcast %"class.spvtools::opt::Loop"** %37 to i8*
  tail call void @_ZdlPv(i8* %43) #12
  br label %44

44:                                               ; preds = %35, %39
  %45 = bitcast %"class.spvtools::opt::Loop"* %17 to i8*
  tail call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %44, %15
  %47 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %16, i64 1
  %48 = icmp eq %"class.spvtools::opt::Loop"** %47, %5
  br i1 %48, label %9, label %15
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14LoopDescriptor27GetLoopsInBinaryLayoutOrderEv(%"class.std::__1::vector.910"* noalias sret, %"class.spvtools::opt::LoopDescriptor"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.324", align 8
  %4 = bitcast %"class.std::__1::vector.324"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #13
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"class.spvtools::opt::Loop"*** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.spvtools::opt::LoopDescriptor"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  %14 = inttoptr i64 %12 to %"class.spvtools::opt::Loop"**
  br i1 %13, label %22, label %15

15:                                               ; preds = %2
  %16 = bitcast i32** %6 to i64*
  %17 = bitcast %"class.std::__1::vector.324"* %3 to i64*
  %18 = bitcast i32** %7 to i64*
  br label %30

19:                                               ; preds = %104
  %20 = inttoptr i64 %109 to %"class.spvtools::opt::Loop"**
  %21 = load i32*, i32** %5, align 8
  br label %22

22:                                               ; preds = %19, %2
  %23 = phi %"class.spvtools::opt::Loop"** [ %20, %19 ], [ %14, %2 ]
  %24 = phi i32* [ %105, %19 ], [ null, %2 ]
  %25 = phi i32* [ %21, %19 ], [ null, %2 ]
  %26 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %0, i64 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast %"class.std::__1::vector.910"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #13
  %29 = icmp eq i32* %25, %24
  br i1 %29, label %225, label %114

30:                                               ; preds = %15, %104
  %31 = phi i64 [ 0, %15 ], [ %106, %104 ]
  %32 = phi i32* [ null, %15 ], [ %105, %104 ]
  %33 = phi %"class.spvtools::opt::Loop"** [ %14, %15 ], [ %113, %104 ]
  %34 = phi i64 [ 0, %15 ], [ %107, %104 ]
  %35 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %33, i64 %34
  %36 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %35, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %36, i64 0, i32 1
  %38 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %37, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %38, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 4
  %42 = load i8, i8* %41, align 1, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %30
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 3
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = zext i8 %46 to i32
  %48 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %40, i32 %47) #13
  br label %49

49:                                               ; preds = %30, %44
  %50 = phi i32 [ %48, %44 ], [ 0, %30 ]
  %51 = load i32*, i32** %7, align 8
  %52 = icmp ult i32* %32, %51
  %53 = ptrtoint i32* %51 to i64
  br i1 %52, label %54, label %57

54:                                               ; preds = %49
  store i32 %50, i32* %32, align 4
  %55 = getelementptr inbounds i32, i32* %32, i64 1
  %56 = ptrtoint i32* %55 to i64
  store i64 %56, i64* %16, align 8
  br label %104

57:                                               ; preds = %49
  %58 = ptrtoint i32* %32 to i64
  %59 = load i64, i64* %17, align 8
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 2
  %62 = add nsw i64 %61, 1
  %63 = icmp ugt i64 %62, 4611686018427387903
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::vector.324"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %65) #14
  unreachable

66:                                               ; preds = %57
  %67 = sub i64 %53, %59
  %68 = ashr exact i64 %67, 2
  %69 = icmp ult i64 %68, 2305843009213693951
  br i1 %69, label %70, label %78

70:                                               ; preds = %66
  %71 = ashr exact i64 %67, 1
  %72 = icmp ult i64 %71, %62
  %73 = select i1 %72, i64 %62, i64 %71
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %83, label %75

75:                                               ; preds = %70
  %76 = icmp ugt i64 %73, 4611686018427387903
  br i1 %76, label %77, label %78

77:                                               ; preds = %75
  tail call void @abort() #14
  unreachable

78:                                               ; preds = %75, %66
  %79 = phi i64 [ %73, %75 ], [ 4611686018427387903, %66 ]
  %80 = shl i64 %79, 2
  %81 = tail call i8* @_Znwm(i64 %80) #12
  %82 = bitcast i8* %81 to i32*
  br label %83

83:                                               ; preds = %78, %70
  %84 = phi i64 [ %79, %78 ], [ 0, %70 ]
  %85 = phi i32* [ %82, %78 ], [ null, %70 ]
  %86 = getelementptr inbounds i32, i32* %85, i64 %61
  %87 = getelementptr inbounds i32, i32* %85, i64 %84
  %88 = ptrtoint i32* %87 to i64
  store i32 %50, i32* %86, align 4
  %89 = getelementptr inbounds i32, i32* %86, i64 1
  %90 = ptrtoint i32* %89 to i64
  %91 = sub i64 %31, %59
  %92 = ashr exact i64 %91, 2
  %93 = sub nsw i64 0, %92
  %94 = getelementptr inbounds i32, i32* %86, i64 %93
  %95 = ptrtoint i32* %94 to i64
  %96 = icmp sgt i64 %91, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %83
  %98 = bitcast i32* %94 to i8*
  %99 = inttoptr i64 %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 %91, i1 false) #13
  br label %100

100:                                              ; preds = %97, %83
  store i64 %95, i64* %17, align 8
  store i64 %90, i64* %16, align 8
  store i64 %88, i64* %18, align 8
  %101 = icmp eq i64 %59, 0
  br i1 %101, label %104, label %102

102:                                              ; preds = %100
  %103 = inttoptr i64 %59 to i8*
  tail call void @_ZdlPv(i8* %103) #12
  br label %104

104:                                              ; preds = %54, %100, %102
  %105 = phi i32* [ %55, %54 ], [ %89, %100 ], [ %89, %102 ]
  %106 = phi i64 [ %56, %54 ], [ %90, %100 ], [ %90, %102 ]
  %107 = add nuw i64 %34, 1
  %108 = load i64, i64* %9, align 8
  %109 = load i64, i64* %11, align 8
  %110 = sub i64 %108, %109
  %111 = ashr exact i64 %110, 3
  %112 = icmp ult i64 %107, %111
  %113 = inttoptr i64 %109 to %"class.spvtools::opt::Loop"**
  br i1 %112, label %30, label %19

114:                                              ; preds = %22
  %115 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %1, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %23, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 1
  %118 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %118, i64 0, i32 0
  %120 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %119, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %120, i64 0, i32 3, i32 0, i32 0
  %122 = load %"class.std::__1::unique_ptr.838"*, %"class.std::__1::unique_ptr.838"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %120, i64 0, i32 3, i32 0, i32 1
  %124 = load %"class.std::__1::unique_ptr.838"*, %"class.std::__1::unique_ptr.838"** %123, align 8
  %125 = icmp eq %"class.std::__1::unique_ptr.838"* %122, %124
  br i1 %125, label %225, label %126

126:                                              ; preds = %114
  %127 = bitcast %"class.spvtools::opt::Loop"*** %26 to i64*
  %128 = bitcast %"class.std::__1::vector.910"* %0 to i64*
  %129 = bitcast %"class.spvtools::opt::Loop"*** %27 to i64*
  br label %130

130:                                              ; preds = %126, %220
  %131 = phi %"class.std::__1::unique_ptr.838"* [ %122, %126 ], [ %221, %220 ]
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.838", %"class.std::__1::unique_ptr.838"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %132, align 8
  %134 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %133, i64 0, i32 1, i32 0, i32 0, i32 0
  %135 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %135, i64 0, i32 4
  %137 = load i8, i8* %136, align 1, !range !2
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %144, label %139

139:                                              ; preds = %130
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %135, i64 0, i32 3
  %141 = load i8, i8* %140, align 4, !range !2
  %142 = zext i8 %141 to i32
  %143 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %135, i32 %142) #13
  br label %144

144:                                              ; preds = %130, %139
  %145 = phi i32 [ %143, %139 ], [ 0, %130 ]
  %146 = load i32*, i32** %5, align 8
  %147 = load i32*, i32** %6, align 8
  %148 = icmp eq i32* %146, %147
  br i1 %148, label %156, label %149

149:                                              ; preds = %144, %153
  %150 = phi i32* [ %154, %153 ], [ %146, %144 ]
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, %145
  br i1 %152, label %156, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds i32, i32* %150, i64 1
  %155 = icmp eq i32* %154, %147
  br i1 %155, label %220, label %149

156:                                              ; preds = %149, %144
  %157 = phi i32* [ %146, %144 ], [ %150, %149 ]
  %158 = icmp eq i32* %157, %147
  br i1 %158, label %220, label %159

159:                                              ; preds = %156
  %160 = ptrtoint i32* %157 to i64
  %161 = ptrtoint i32* %146 to i64
  %162 = sub i64 %160, %161
  %163 = ashr exact i64 %162, 2
  %164 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %115, align 8
  %165 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %164, i64 %163
  %166 = bitcast %"class.spvtools::opt::Loop"** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %26, align 8
  %169 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %27, align 8
  %170 = icmp ult %"class.spvtools::opt::Loop"** %168, %169
  %171 = ptrtoint %"class.spvtools::opt::Loop"** %169 to i64
  br i1 %170, label %172, label %176

172:                                              ; preds = %159
  %173 = bitcast %"class.spvtools::opt::Loop"** %168 to i64*
  store i64 %167, i64* %173, align 8
  %174 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %168, i64 1
  %175 = ptrtoint %"class.spvtools::opt::Loop"** %174 to i64
  store i64 %175, i64* %127, align 8
  br label %220

176:                                              ; preds = %159
  %177 = ptrtoint %"class.spvtools::opt::Loop"** %168 to i64
  %178 = load i64, i64* %128, align 8
  %179 = sub i64 %177, %178
  %180 = ashr exact i64 %179, 3
  %181 = add nsw i64 %180, 1
  %182 = icmp ugt i64 %181, 2305843009213693951
  br i1 %182, label %183, label %185

183:                                              ; preds = %176
  %184 = bitcast %"class.std::__1::vector.910"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %184) #14
  unreachable

185:                                              ; preds = %176
  %186 = sub i64 %171, %178
  %187 = ashr exact i64 %186, 3
  %188 = icmp ult i64 %187, 1152921504606846975
  br i1 %188, label %189, label %197

189:                                              ; preds = %185
  %190 = ashr exact i64 %186, 2
  %191 = icmp ult i64 %190, %181
  %192 = select i1 %191, i64 %181, i64 %190
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %189
  %195 = icmp ugt i64 %192, 2305843009213693951
  br i1 %195, label %196, label %197

196:                                              ; preds = %194
  tail call void @abort() #14
  unreachable

197:                                              ; preds = %194, %185
  %198 = phi i64 [ %192, %194 ], [ 2305843009213693951, %185 ]
  %199 = shl i64 %198, 3
  %200 = tail call i8* @_Znwm(i64 %199) #12
  %201 = bitcast i8* %200 to %"class.spvtools::opt::Loop"**
  br label %202

202:                                              ; preds = %197, %189
  %203 = phi i64 [ %198, %197 ], [ 0, %189 ]
  %204 = phi i8* [ %200, %197 ], [ null, %189 ]
  %205 = phi %"class.spvtools::opt::Loop"** [ %201, %197 ], [ null, %189 ]
  %206 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %205, i64 %180
  %207 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %205, i64 %203
  %208 = ptrtoint %"class.spvtools::opt::Loop"** %207 to i64
  %209 = bitcast %"class.spvtools::opt::Loop"** %206 to i64*
  store i64 %167, i64* %209, align 8
  %210 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %206, i64 1
  %211 = ptrtoint %"class.spvtools::opt::Loop"** %210 to i64
  %212 = ptrtoint %"class.spvtools::opt::Loop"** %205 to i64
  %213 = icmp sgt i64 %179, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %202
  %215 = inttoptr i64 %178 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %204, i8* align 8 %215, i64 %179, i1 false) #13
  br label %216

216:                                              ; preds = %214, %202
  store i64 %212, i64* %128, align 8
  store i64 %211, i64* %127, align 8
  store i64 %208, i64* %129, align 8
  %217 = icmp eq i64 %178, 0
  br i1 %217, label %220, label %218

218:                                              ; preds = %216
  %219 = inttoptr i64 %178 to i8*
  tail call void @_ZdlPv(i8* %219) #12
  br label %220

220:                                              ; preds = %153, %156, %218, %216, %172
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr.838", %"class.std::__1::unique_ptr.838"* %131, i64 1
  %222 = icmp eq %"class.std::__1::unique_ptr.838"* %221, %124
  br i1 %222, label %223, label %130

223:                                              ; preds = %220
  %224 = load i32*, i32** %5, align 8
  br label %225

225:                                              ; preds = %114, %223, %22
  %226 = phi i32* [ %24, %22 ], [ %224, %223 ], [ %25, %114 ]
  %227 = icmp eq i32* %226, null
  br i1 %227, label %232, label %228

228:                                              ; preds = %225
  %229 = ptrtoint i32* %226 to i64
  %230 = bitcast i32** %6 to i64*
  store i64 %229, i64* %230, align 8
  %231 = bitcast i32* %226 to i8*
  tail call void @_ZdlPv(i8* %231) #12
  br label %232

232:                                              ; preds = %225, %228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8spvtools3opt4Loop22FindNumberOfIterationsEPKNS0_11InstructionES4_PmPlS6_(%"class.spvtools::opt::Loop"* nocapture readonly, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i64*, i64*, i64*) local_unnamed_addr #0 align 2 {
  %7 = alloca i64, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 1
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %38

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %15, align 8
  %17 = tail call i8* @_Znwm(i64 104) #12
  %18 = bitcast i8* %17 to %"class.spvtools::opt::analysis::DefUseManager"*
  %19 = getelementptr inbounds i8, i8* %17, i64 32
  %20 = bitcast i8* %19 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %17, i64 48
  %22 = getelementptr inbounds i8, i8* %17, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #13
  %23 = bitcast i8* %22 to i8**
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds i8, i8* %17, i64 64
  %25 = getelementptr inbounds i8, i8* %17, i64 96
  %26 = bitcast i8* %25 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %26, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %18, %"class.spvtools::opt::Module"* %16) #13
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 6
  %28 = ptrtoint i8* %17 to i64
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr.1"* %27 to i64*
  store i64 %28, i64* %31, align 8
  %32 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %30, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %14
  %34 = bitcast %"class.std::__1::unique_ptr.1"* %27 to %"struct.std::__1::default_delete.57"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.57"* %34, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %30) #13
  br label %35

35:                                               ; preds = %33, %14
  %36 = load i32, i32* %10, align 8
  %37 = or i32 %36, 1
  store i32 %37, i32* %10, align 8
  br label %38

38:                                               ; preds = %6, %35
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 6, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %39, align 8
  %41 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 0) #13
  %42 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %40, i32 %41) #13
  %43 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 11
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 16384
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %62

48:                                               ; preds = %38
  %49 = tail call i8* @_Znwm(i64 136) #12
  %50 = bitcast i8* %49 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %50, %"class.spvtools::opt::IRContext"* %43) #13
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 19
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.261"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %53, align 8
  %55 = bitcast %"class.std::__1::unique_ptr.261"* %52 to i64*
  store i64 %51, i64* %55, align 8
  %56 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %54, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %48
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %54) #13
  %58 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %54 to i8*
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %57, %48
  %60 = load i32, i32* %44, align 8
  %61 = or i32 %60, 16384
  store i32 %61, i32* %44, align 8
  br label %62

62:                                               ; preds = %38, %59
  %63 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 19, i32 0, i32 0, i32 0
  %64 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %63, align 8
  %65 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %42, i32 3) #13
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %64, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %261, label %70

70:                                               ; preds = %62
  %71 = tail call i64 @llvm.ctpop.i64(i64 %68) #13, !range !3
  %72 = icmp ugt i64 %71, 1
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  %74 = add i64 %68, 4294967295
  %75 = and i64 %74, %66
  br label %80

76:                                               ; preds = %70
  %77 = icmp ugt i64 %68, %66
  br i1 %77, label %80, label %78

78:                                               ; preds = %76
  %79 = urem i64 %66, %68
  br label %80

80:                                               ; preds = %78, %76, %73
  %81 = phi i64 [ %75, %73 ], [ %79, %78 ], [ %66, %76 ]
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %64, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.269"**, %"struct.std::__1::__hash_node_base.269"*** %82, align 8
  %84 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %83, i64 %81
  %85 = load %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %84, align 8
  %86 = icmp eq %"struct.std::__1::__hash_node_base.269"* %85, null
  br i1 %86, label %261, label %87

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %85, i64 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.269"* %89, null
  br i1 %90, label %261, label %91

91:                                               ; preds = %87
  %92 = add i64 %68, -1
  br label %93

93:                                               ; preds = %114, %91
  %94 = phi %"struct.std::__1::__hash_node_base.269"* [ %89, %91 ], [ %116, %114 ]
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %94, i64 1
  %96 = bitcast %"struct.std::__1::__hash_node_base.269"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %97, %66
  br i1 %98, label %109, label %99

99:                                               ; preds = %93
  br i1 %72, label %102, label %100

100:                                              ; preds = %99
  %101 = and i64 %97, %92
  br label %106

102:                                              ; preds = %99
  %103 = icmp ult i64 %97, %68
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = urem i64 %97, %68
  br label %106

106:                                              ; preds = %104, %102, %100
  %107 = phi i64 [ %101, %100 ], [ %105, %104 ], [ %97, %102 ]
  %108 = icmp eq i64 %107, %81
  br i1 %108, label %114, label %261

109:                                              ; preds = %93
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %94, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.269"* %110 to i32*
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, %65
  br i1 %113, label %118, label %114

114:                                              ; preds = %109, %106
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %94, i64 0, i32 0
  %116 = load %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.269"* %116, null
  br i1 %117, label %261, label %93

118:                                              ; preds = %109
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %94, i64 3
  %120 = bitcast %"struct.std::__1::__hash_node_base.269"* %119 to %"class.spvtools::opt::analysis::Constant"**
  %121 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %120, align 8
  %122 = icmp eq %"class.spvtools::opt::analysis::Constant"* %121, null
  br i1 %122, label %261, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.spvtools::opt::analysis::Constant", %"class.spvtools::opt::analysis::Constant"* %121, i64 0, i32 1
  %125 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %124, align 8
  %126 = bitcast %"class.spvtools::opt::analysis::Type"* %125 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %127 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %126, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %127, i64 11
  %129 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %128, align 8
  %130 = tail call %"class.spvtools::opt::analysis::Integer"* %129(%"class.spvtools::opt::analysis::Type"* %125) #13
  %131 = icmp eq %"class.spvtools::opt::analysis::Integer"* %130, null
  br i1 %131, label %261, label %132

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %130, i64 0, i32 1
  %134 = load i32, i32* %133, align 4
  %135 = icmp ugt i32 %134, 64
  br i1 %135, label %261, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %130, i64 0, i32 2
  %138 = load i8, i8* %137, align 8, !range !2
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %142, label %140

140:                                              ; preds = %136
  %141 = tail call i64 @_ZNK8spvtools3opt8analysis8Constant20GetSignExtendedValueEv(%"class.spvtools::opt::analysis::Constant"* nonnull %121) #13
  br label %144

142:                                              ; preds = %136
  %143 = tail call i64 @_ZNK8spvtools3opt8analysis8Constant20GetZeroExtendedValueEv(%"class.spvtools::opt::analysis::Constant"* nonnull %121) #13
  br label %144

144:                                              ; preds = %142, %140
  %145 = phi i64 [ %141, %140 ], [ %143, %142 ]
  %146 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop25GetInductionStepOperationEPKNS0_11InstructionE(%"class.spvtools::opt::Loop"* %0, %"class.spvtools::opt::Instruction"* %1)
  %147 = icmp eq %"class.spvtools::opt::Instruction"* %146, null
  br i1 %147, label %261, label %148

148:                                              ; preds = %144
  %149 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %146, i32 3) #13
  %150 = zext i32 %149 to i64
  %151 = load i64, i64* %67, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %261, label %153

153:                                              ; preds = %148
  %154 = tail call i64 @llvm.ctpop.i64(i64 %151) #13, !range !3
  %155 = icmp ugt i64 %154, 1
  br i1 %155, label %159, label %156

156:                                              ; preds = %153
  %157 = add i64 %151, 4294967295
  %158 = and i64 %157, %150
  br label %163

159:                                              ; preds = %153
  %160 = icmp ugt i64 %151, %150
  br i1 %160, label %163, label %161

161:                                              ; preds = %159
  %162 = urem i64 %150, %151
  br label %163

163:                                              ; preds = %161, %159, %156
  %164 = phi i64 [ %158, %156 ], [ %162, %161 ], [ %150, %159 ]
  %165 = load %"struct.std::__1::__hash_node_base.269"**, %"struct.std::__1::__hash_node_base.269"*** %82, align 8
  %166 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %165, i64 %164
  %167 = load %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %166, align 8
  %168 = icmp eq %"struct.std::__1::__hash_node_base.269"* %167, null
  br i1 %168, label %261, label %169

169:                                              ; preds = %163
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %167, i64 0, i32 0
  %171 = load %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.269"* %171, null
  br i1 %172, label %261, label %173

173:                                              ; preds = %169
  %174 = add i64 %151, -1
  br label %175

175:                                              ; preds = %196, %173
  %176 = phi %"struct.std::__1::__hash_node_base.269"* [ %171, %173 ], [ %198, %196 ]
  %177 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %176, i64 1
  %178 = bitcast %"struct.std::__1::__hash_node_base.269"* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = icmp eq i64 %179, %150
  br i1 %180, label %191, label %181

181:                                              ; preds = %175
  br i1 %155, label %184, label %182

182:                                              ; preds = %181
  %183 = and i64 %179, %174
  br label %188

184:                                              ; preds = %181
  %185 = icmp ult i64 %179, %151
  br i1 %185, label %188, label %186

186:                                              ; preds = %184
  %187 = urem i64 %179, %151
  br label %188

188:                                              ; preds = %186, %184, %182
  %189 = phi i64 [ %183, %182 ], [ %187, %186 ], [ %179, %184 ]
  %190 = icmp eq i64 %189, %164
  br i1 %190, label %196, label %261

191:                                              ; preds = %175
  %192 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %176, i64 2
  %193 = bitcast %"struct.std::__1::__hash_node_base.269"* %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = icmp eq i32 %194, %149
  br i1 %195, label %200, label %196

196:                                              ; preds = %191, %188
  %197 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %176, i64 0, i32 0
  %198 = load %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %197, align 8
  %199 = icmp eq %"struct.std::__1::__hash_node_base.269"* %198, null
  br i1 %199, label %261, label %175

200:                                              ; preds = %191
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %176, i64 3
  %202 = bitcast %"struct.std::__1::__hash_node_base.269"* %201 to %"class.spvtools::opt::analysis::Constant"**
  %203 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %202, align 8
  %204 = icmp eq %"class.spvtools::opt::analysis::Constant"* %203, null
  br i1 %204, label %261, label %205

205:                                              ; preds = %200
  %206 = bitcast %"class.spvtools::opt::analysis::Constant"* %203 to %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)***
  %207 = load %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %206, align 8
  %208 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %207, i64 14
  %209 = load %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %208, align 8
  %210 = tail call %"class.spvtools::opt::analysis::IntConstant"* %209(%"class.spvtools::opt::analysis::Constant"* nonnull %203) #13
  %211 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %210, i64 0, i32 0, i32 0, i32 1
  %212 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %211, align 8
  %213 = bitcast %"class.spvtools::opt::analysis::Type"* %212 to %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)***
  %214 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*** %213, align 8
  %215 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %214, i64 11
  %216 = load %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)** %215, align 8
  %217 = tail call %"class.spvtools::opt::analysis::Integer"* %216(%"class.spvtools::opt::analysis::Type"* %212) #13
  %218 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %217, i64 0, i32 2
  %219 = load i8, i8* %218, align 8, !range !2
  %220 = icmp eq i8 %219, 0
  %221 = load %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)**, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*** %206, align 8
  %222 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %221, i64 14
  %223 = load %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)*, %"class.spvtools::opt::analysis::IntConstant"* (%"class.spvtools::opt::analysis::Constant"*)** %222, align 8
  %224 = tail call %"class.spvtools::opt::analysis::IntConstant"* %223(%"class.spvtools::opt::analysis::Constant"* nonnull %203) #13
  %225 = getelementptr inbounds %"class.spvtools::opt::analysis::IntConstant", %"class.spvtools::opt::analysis::IntConstant"* %224, i64 0, i32 0
  %226 = bitcast %"class.spvtools::opt::analysis::IntConstant"* %224 to %"class.std::__1::vector.324"* (%"class.spvtools::opt::analysis::ScalarConstant"*)***
  %227 = load %"class.std::__1::vector.324"* (%"class.spvtools::opt::analysis::ScalarConstant"*)**, %"class.std::__1::vector.324"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*** %226, align 8
  %228 = getelementptr inbounds %"class.std::__1::vector.324"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.324"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %227, i64 24
  %229 = load %"class.std::__1::vector.324"* (%"class.spvtools::opt::analysis::ScalarConstant"*)*, %"class.std::__1::vector.324"* (%"class.spvtools::opt::analysis::ScalarConstant"*)** %228, align 8
  %230 = tail call dereferenceable(24) %"class.std::__1::vector.324"* %229(%"class.spvtools::opt::analysis::ScalarConstant"* %225) #13
  %231 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %230, i64 0, i32 0, i32 0
  %232 = load i32*, i32** %231, align 8
  %233 = load i32, i32* %232, align 4
  %234 = sext i32 %233 to i64
  %235 = zext i32 %233 to i64
  %236 = select i1 %220, i64 %235, i64 %234
  %237 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %146, i64 0, i32 2
  %238 = load i32, i32* %237, align 8
  %239 = icmp eq i32 %238, 130
  %240 = sub nsw i64 0, %236
  %241 = select i1 %239, i64 %240, i64 %236
  %242 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #13
  store i64 0, i64* %7, align 8
  %243 = call zeroext i1 @_ZNK8spvtools3opt4Loop21GetInductionInitValueEPKNS0_11InstructionEPl(%"class.spvtools::opt::Loop"* %0, %"class.spvtools::opt::Instruction"* %1, i64* nonnull %7)
  br i1 %243, label %244, label %259

244:                                              ; preds = %205
  %245 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %42, i64 0, i32 2
  %246 = load i32, i32* %245, align 8
  %247 = load i64, i64* %7, align 8
  %248 = call i64 @_ZNK8spvtools3opt4Loop13GetIterationsE6SpvOp_lll(%"class.spvtools::opt::Loop"* undef, i32 %246, i64 %145, i64 %247, i64 %241)
  %249 = icmp slt i64 %248, 1
  br i1 %249, label %259, label %250

250:                                              ; preds = %244
  %251 = icmp eq i64* %3, null
  br i1 %251, label %253, label %252

252:                                              ; preds = %250
  store i64 %248, i64* %3, align 8
  br label %253

253:                                              ; preds = %250, %252
  %254 = icmp eq i64* %4, null
  br i1 %254, label %256, label %255

255:                                              ; preds = %253
  store i64 %241, i64* %4, align 8
  br label %256

256:                                              ; preds = %253, %255
  %257 = icmp eq i64* %5, null
  br i1 %257, label %259, label %258

258:                                              ; preds = %256
  store i64 %247, i64* %5, align 8
  br label %259

259:                                              ; preds = %244, %256, %258, %205
  %260 = phi i1 [ false, %205 ], [ false, %244 ], [ true, %256 ], [ true, %258 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #13
  br label %261

261:                                              ; preds = %114, %106, %196, %188, %169, %148, %163, %87, %62, %80, %123, %132, %259, %200, %144, %118
  %262 = phi i1 [ false, %118 ], [ false, %123 ], [ false, %132 ], [ false, %144 ], [ %260, %259 ], [ false, %200 ], [ false, %80 ], [ false, %62 ], [ false, %87 ], [ false, %163 ], [ false, %148 ], [ false, %169 ], [ false, %188 ], [ false, %196 ], [ false, %106 ], [ false, %114 ]
  ret i1 %262
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK8spvtools3opt4Loop13GetIterationsE6SpvOp_lll(%"class.spvtools::opt::Loop"* nocapture readnone, i32, i64, i64, i64) local_unnamed_addr #3 align 2 {
  switch i32 %1, label %6 [
    i32 177, label %10
    i32 176, label %10
    i32 173, label %21
    i32 172, label %21
    i32 175, label %31
    i32 174, label %31
    i32 179, label %42
    i32 178, label %42
  ]

6:                                                ; preds = %5
  %7 = icmp slt i64 %4, 0
  %8 = sub nsw i64 0, %4
  %9 = select i1 %7, i64 %8, i64 %4
  br label %62

10:                                               ; preds = %5, %5
  %11 = icmp slt i64 %3, %2
  br i1 %11, label %12, label %70

12:                                               ; preds = %10
  %13 = sub nsw i64 %2, %3
  %14 = icmp slt i64 %13, 0
  %15 = icmp sgt i64 %4, 0
  %16 = and i1 %14, %15
  br i1 %16, label %70, label %17

17:                                               ; preds = %12
  %18 = icmp sgt i64 %13, 0
  %19 = icmp slt i64 %4, 0
  %20 = and i1 %18, %19
  br i1 %20, label %70, label %54

21:                                               ; preds = %5, %5
  %22 = icmp sgt i64 %3, %2
  br i1 %22, label %23, label %70

23:                                               ; preds = %21
  %24 = sub nsw i64 %3, %2
  %25 = and i64 %24, %4
  %26 = icmp slt i64 %25, 0
  br i1 %26, label %70, label %27

27:                                               ; preds = %23
  %28 = icmp sgt i64 %24, 0
  %29 = icmp sgt i64 %4, 0
  %30 = and i1 %28, %29
  br i1 %30, label %70, label %54

31:                                               ; preds = %5, %5
  %32 = icmp slt i64 %3, %2
  br i1 %32, label %70, label %33

33:                                               ; preds = %31
  %34 = sub i64 1, %2
  %35 = add i64 %34, %3
  %36 = icmp sgt i64 %35, 0
  %37 = icmp sgt i64 %4, 0
  %38 = and i1 %36, %37
  %39 = and i64 %35, %4
  %40 = icmp slt i64 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %70, label %54

42:                                               ; preds = %5, %5
  %43 = icmp sgt i64 %3, %2
  br i1 %43, label %70, label %44

44:                                               ; preds = %42
  %45 = add nsw i64 %2, 1
  %46 = sub i64 %45, %3
  %47 = icmp slt i64 %46, 0
  %48 = icmp sgt i64 %4, 0
  %49 = and i1 %47, %48
  br i1 %49, label %70, label %50

50:                                               ; preds = %44
  %51 = icmp sgt i64 %46, 0
  %52 = icmp slt i64 %4, 0
  %53 = and i1 %51, %52
  br i1 %53, label %70, label %54

54:                                               ; preds = %33, %50, %27, %17
  %55 = phi i64 [ %46, %50 ], [ %24, %27 ], [ %13, %17 ], [ %35, %33 ]
  %56 = icmp slt i64 %4, 0
  %57 = sub nsw i64 0, %4
  %58 = select i1 %56, i64 %57, i64 %4
  %59 = icmp slt i64 %55, 0
  %60 = sub nsw i64 0, %55
  %61 = select i1 %59, i64 %60, i64 %55
  br label %62

62:                                               ; preds = %54, %6
  %63 = phi i64 [ %9, %6 ], [ %58, %54 ]
  %64 = phi i64 [ 0, %6 ], [ %61, %54 ]
  %65 = udiv i64 %64, %63
  %66 = urem i64 %64, %63
  %67 = icmp ne i64 %66, 0
  %68 = zext i1 %67 to i64
  %69 = add nuw nsw i64 %65, %68
  br label %70

70:                                               ; preds = %44, %50, %42, %33, %31, %23, %27, %21, %12, %17, %10, %62
  %71 = phi i64 [ %69, %62 ], [ 0, %10 ], [ 0, %17 ], [ 0, %12 ], [ 0, %21 ], [ 0, %27 ], [ 0, %23 ], [ 0, %31 ], [ 0, %33 ], [ 0, %42 ], [ 0, %50 ], [ 0, %44 ]
  ret i64 %71
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8spvtools3opt4Loop21GetInductionVariablesERNSt3__16vectorIPNS0_11InstructionENS2_9allocatorIS5_EEEE(%"class.spvtools::opt::Loop"* nocapture readonly, %"class.std::__1::vector.1063"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %4, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %4, i64 0, i32 2, i32 0, i32 1
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = inttoptr i64 %8 to %"class.spvtools::opt::Instruction"*
  %10 = icmp eq %"class.spvtools::opt::Instruction"* %6, %9
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.std::__1::vector.1063", %"class.std::__1::vector.1063"* %1, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector.1063", %"class.std::__1::vector.1063"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"class.spvtools::opt::Instruction"*** %12 to i64*
  %15 = bitcast %"class.std::__1::vector.1063"* %1 to i64*
  %16 = bitcast %"class.spvtools::opt::Instruction"*** %13 to i64*
  %17 = getelementptr inbounds %"class.std::__1::vector.1063", %"class.std::__1::vector.1063"* %1, i64 0, i32 0, i32 0
  br label %19

18:                                               ; preds = %87, %2
  ret void

19:                                               ; preds = %11, %87
  %20 = phi %"class.spvtools::opt::Instruction"* [ %9, %11 ], [ %92, %87 ]
  %21 = phi i64 [ %8, %11 ], [ %91, %87 ]
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %20, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 245
  br i1 %24, label %25, label %87

25:                                               ; preds = %19
  %26 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %12, align 8
  %27 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %28 = icmp ult %"class.spvtools::opt::Instruction"** %26, %27
  %29 = ptrtoint %"class.spvtools::opt::Instruction"** %27 to i64
  br i1 %28, label %30, label %34

30:                                               ; preds = %25
  %31 = bitcast %"class.spvtools::opt::Instruction"** %26 to i64*
  store i64 %21, i64* %31, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %26, i64 1
  %33 = ptrtoint %"class.spvtools::opt::Instruction"** %32 to i64
  store i64 %33, i64* %14, align 8
  br label %87

34:                                               ; preds = %25
  %35 = ptrtoint %"class.spvtools::opt::Instruction"** %26 to i64
  %36 = load i64, i64* %15, align 8
  %37 = sub i64 %35, %36
  %38 = ashr exact i64 %37, 3
  %39 = add nsw i64 %38, 1
  %40 = icmp ugt i64 %39, 2305843009213693951
  br i1 %40, label %41, label %43

41:                                               ; preds = %34
  %42 = bitcast %"class.std::__1::vector.1063"* %1 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %42) #14
  unreachable

43:                                               ; preds = %34
  %44 = sub i64 %29, %36
  %45 = ashr exact i64 %44, 3
  %46 = icmp ult i64 %45, 1152921504606846975
  br i1 %46, label %47, label %55

47:                                               ; preds = %43
  %48 = ashr exact i64 %44, 2
  %49 = icmp ult i64 %48, %39
  %50 = select i1 %49, i64 %39, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %47
  %53 = icmp ugt i64 %50, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @abort() #14
  unreachable

55:                                               ; preds = %52, %43
  %56 = phi i64 [ %50, %52 ], [ 2305843009213693951, %43 ]
  %57 = shl i64 %56, 3
  %58 = tail call i8* @_Znwm(i64 %57) #12
  %59 = bitcast i8* %58 to %"class.spvtools::opt::Instruction"**
  br label %60

60:                                               ; preds = %55, %47
  %61 = phi i64 [ %56, %55 ], [ 0, %47 ]
  %62 = phi %"class.spvtools::opt::Instruction"** [ %59, %55 ], [ null, %47 ]
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, i64 %38
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %62, i64 %61
  %65 = ptrtoint %"class.spvtools::opt::Instruction"** %64 to i64
  %66 = bitcast %"class.spvtools::opt::Instruction"** %63 to i64*
  store i64 %21, i64* %66, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %63, i64 1
  %68 = ptrtoint %"class.spvtools::opt::Instruction"** %67 to i64
  %69 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %17, align 8
  %70 = load i64, i64* %14, align 8
  %71 = ptrtoint %"class.spvtools::opt::Instruction"** %69 to i64
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = sub nsw i64 0, %73
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %63, i64 %74
  %76 = ptrtoint %"class.spvtools::opt::Instruction"** %75 to i64
  %77 = icmp sgt i64 %72, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %60
  %79 = bitcast %"class.spvtools::opt::Instruction"** %75 to i8*
  %80 = bitcast %"class.spvtools::opt::Instruction"** %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 %72, i1 false) #13
  %81 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %17, align 8
  br label %82

82:                                               ; preds = %78, %60
  %83 = phi %"class.spvtools::opt::Instruction"** [ %69, %60 ], [ %81, %78 ]
  store i64 %76, i64* %15, align 8
  store i64 %68, i64* %14, align 8
  store i64 %65, i64* %16, align 8
  %84 = icmp eq %"class.spvtools::opt::Instruction"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = bitcast %"class.spvtools::opt::Instruction"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #12
  br label %87

87:                                               ; preds = %85, %82, %30, %19
  %88 = inttoptr i64 %21 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %89 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %88, i64 0, i32 1
  %90 = bitcast %"class.spvtools::opt::Instruction"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = inttoptr i64 %91 to %"class.spvtools::opt::Instruction"*
  %93 = icmp eq %"class.spvtools::opt::Instruction"* %6, %92
  br i1 %93, label %18, label %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt4Loop21FindConditionVariableEPKNS0_10BasicBlockE(%"class.spvtools::opt::Loop"* nocapture readonly, %"class.spvtools::opt::BasicBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8, !noalias !50
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 250
  br i1 %7, label %8, label %252

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 0
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 11
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %39

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %16, align 8
  %18 = tail call i8* @_Znwm(i64 104) #12
  %19 = bitcast i8* %18 to %"class.spvtools::opt::analysis::DefUseManager"*
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #13
  %24 = bitcast i8* %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = getelementptr inbounds i8, i8* %18, i64 64
  %26 = getelementptr inbounds i8, i8* %18, i64 96
  %27 = bitcast i8* %26 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #13
  store i32 1065353216, i32* %27, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %19, %"class.spvtools::opt::Module"* %17) #13
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6
  %29 = ptrtoint i8* %18 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1"* %28, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.1"* %28 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %15
  %35 = bitcast %"class.std::__1::unique_ptr.1"* %28 to %"struct.std::__1::default_delete.57"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.57"* %35, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %31) #13
  br label %36

36:                                               ; preds = %34, %15
  %37 = load i32, i32* %11, align 8
  %38 = or i32 %37, 1
  store i32 %38, i32* %11, align 8
  br label %39

39:                                               ; preds = %8, %36
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 6, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %40, align 8
  %42 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %4, i32 0) #13
  %43 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %41, i32 %42) #13
  %44 = icmp eq %"class.spvtools::opt::Instruction"* %43, null
  br i1 %44, label %250, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 2
  %47 = load i32, i32* %46, align 8
  %48 = add i32 %47, -172
  %49 = icmp ult i32 %48, 8
  br i1 %49, label %50, label %250

50:                                               ; preds = %45
  %51 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %43, i32 2) #13
  %52 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %41, i32 %51) #13
  %53 = icmp eq %"class.spvtools::opt::Instruction"* %52, null
  br i1 %53, label %252, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 245
  br i1 %57, label %58, label %252

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 6
  %60 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 6, i32 0, i32 1
  %61 = bitcast %"struct.spvtools::opt::Operand"** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.std::__1::vector.777"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = sub i64 %62, %64
  %66 = sdiv exact i64 %65, 48
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 3
  %68 = load i8, i8* %67, align 4, !range !2
  %69 = icmp eq i8 %68, 0
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %52, i64 0, i32 4
  %71 = load i8, i8* %70, align 1, !range !2
  %72 = icmp eq i8 %71, 0
  %73 = select i1 %72, i32 1, i32 2
  %74 = xor i1 %72, true
  %75 = zext i1 %74 to i32
  %76 = select i1 %69, i32 %75, i32 %73
  %77 = trunc i64 %66 to i32
  %78 = sub i32 %77, %76
  %79 = icmp eq i32 %78, 4
  br i1 %79, label %80, label %252

80:                                               ; preds = %58
  %81 = add nuw nsw i32 %76, 1
  %82 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %52, i32 %81) #13
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %135, label %87

87:                                               ; preds = %80
  %88 = tail call i64 @llvm.ctpop.i64(i64 %85) #13, !range !3
  %89 = icmp ugt i64 %88, 1
  br i1 %89, label %93, label %90

90:                                               ; preds = %87
  %91 = add i64 %85, 4294967295
  %92 = and i64 %91, %83
  br label %97

93:                                               ; preds = %87
  %94 = icmp ugt i64 %85, %83
  br i1 %94, label %97, label %95

95:                                               ; preds = %93
  %96 = urem i64 %83, %85
  br label %97

97:                                               ; preds = %95, %93, %90
  %98 = phi i64 [ %92, %90 ], [ %96, %95 ], [ %83, %93 ]
  %99 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %99, align 8
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %100, i64 %98
  %102 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %101, align 8
  %103 = icmp eq %"struct.std::__1::__hash_node_base.922"* %102, null
  br i1 %103, label %135, label %104

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %102, i64 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.922"* %106, null
  br i1 %107, label %135, label %108

108:                                              ; preds = %104
  %109 = add i64 %85, -1
  br label %110

110:                                              ; preds = %131, %108
  %111 = phi %"struct.std::__1::__hash_node_base.922"* [ %106, %108 ], [ %133, %131 ]
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %111, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.922"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, %83
  br i1 %115, label %126, label %116

116:                                              ; preds = %110
  br i1 %89, label %119, label %117

117:                                              ; preds = %116
  %118 = and i64 %114, %109
  br label %123

119:                                              ; preds = %116
  %120 = icmp ult i64 %114, %85
  br i1 %120, label %123, label %121

121:                                              ; preds = %119
  %122 = urem i64 %114, %85
  br label %123

123:                                              ; preds = %121, %119, %117
  %124 = phi i64 [ %118, %117 ], [ %122, %121 ], [ %114, %119 ]
  %125 = icmp eq i64 %124, %98
  br i1 %125, label %131, label %135

126:                                              ; preds = %110
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %111, i64 2
  %128 = bitcast %"struct.std::__1::__hash_node_base.922"* %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, %82
  br i1 %130, label %197, label %131

131:                                              ; preds = %126, %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %111, i64 0, i32 0
  %133 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %132, align 8
  %134 = icmp eq %"struct.std::__1::__hash_node_base.922"* %133, null
  br i1 %134, label %135, label %110

135:                                              ; preds = %123, %131, %97, %80, %104
  %136 = load i8, i8* %67, align 4, !range !2
  %137 = icmp eq i8 %136, 0
  %138 = load i8, i8* %70, align 1, !range !2
  %139 = icmp eq i8 %138, 0
  %140 = select i1 %139, i32 1, i32 2
  %141 = xor i1 %139, true
  %142 = zext i1 %141 to i32
  %143 = select i1 %137, i32 %142, i32 %140
  %144 = add nuw nsw i32 %143, 3
  %145 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %52, i32 %144) #13
  %146 = zext i32 %145 to i64
  %147 = load i64, i64* %84, align 8
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %252, label %149

149:                                              ; preds = %135
  %150 = tail call i64 @llvm.ctpop.i64(i64 %147) #13, !range !3
  %151 = icmp ugt i64 %150, 1
  br i1 %151, label %155, label %152

152:                                              ; preds = %149
  %153 = add i64 %147, 4294967295
  %154 = and i64 %153, %146
  br label %159

155:                                              ; preds = %149
  %156 = icmp ugt i64 %147, %146
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = urem i64 %146, %147
  br label %159

159:                                              ; preds = %157, %155, %152
  %160 = phi i64 [ %154, %152 ], [ %158, %157 ], [ %146, %155 ]
  %161 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %162, i64 %160
  %164 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %163, align 8
  %165 = icmp eq %"struct.std::__1::__hash_node_base.922"* %164, null
  br i1 %165, label %252, label %166

166:                                              ; preds = %159
  %167 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %164, i64 0, i32 0
  %168 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %167, align 8
  %169 = icmp eq %"struct.std::__1::__hash_node_base.922"* %168, null
  br i1 %169, label %252, label %170

170:                                              ; preds = %166
  %171 = add i64 %147, -1
  br label %172

172:                                              ; preds = %193, %170
  %173 = phi %"struct.std::__1::__hash_node_base.922"* [ %168, %170 ], [ %195, %193 ]
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %173, i64 1
  %175 = bitcast %"struct.std::__1::__hash_node_base.922"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = icmp eq i64 %176, %146
  br i1 %177, label %188, label %178

178:                                              ; preds = %172
  br i1 %151, label %181, label %179

179:                                              ; preds = %178
  %180 = and i64 %176, %171
  br label %185

181:                                              ; preds = %178
  %182 = icmp ult i64 %176, %147
  br i1 %182, label %185, label %183

183:                                              ; preds = %181
  %184 = urem i64 %176, %147
  br label %185

185:                                              ; preds = %183, %181, %179
  %186 = phi i64 [ %180, %179 ], [ %184, %183 ], [ %176, %181 ]
  %187 = icmp eq i64 %186, %160
  br i1 %187, label %193, label %252

188:                                              ; preds = %172
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %173, i64 2
  %190 = bitcast %"struct.std::__1::__hash_node_base.922"* %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = icmp eq i32 %191, %145
  br i1 %192, label %197, label %193

193:                                              ; preds = %188, %185
  %194 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %173, i64 0, i32 0
  %195 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %194, align 8
  %196 = icmp eq %"struct.std::__1::__hash_node_base.922"* %195, null
  br i1 %196, label %252, label %172

197:                                              ; preds = %126, %188
  %198 = load i8, i8* %67, align 4, !range !2
  %199 = icmp eq i8 %198, 0
  %200 = load i8, i8* %70, align 1, !range !2
  %201 = icmp eq i8 %200, 0
  %202 = select i1 %201, i32 1, i32 2
  %203 = xor i1 %201, true
  %204 = zext i1 %203 to i32
  %205 = select i1 %199, i32 %204, i32 %202
  %206 = add nuw nsw i32 %205, 1
  %207 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %52, i32 %206) #13
  %208 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %0, i64 0, i32 5
  %209 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %208, align 8
  %210 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %209, i64 0, i32 1, i32 0, i32 0, i32 0
  %211 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %210, align 8
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %211, i64 0, i32 4
  %213 = load i8, i8* %212, align 1, !range !2
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %220, label %215

215:                                              ; preds = %197
  %216 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %211, i64 0, i32 3
  %217 = load i8, i8* %216, align 4, !range !2
  %218 = zext i8 %217 to i32
  %219 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %211, i32 %218) #13
  br label %220

220:                                              ; preds = %197, %215
  %221 = phi i32 [ %219, %215 ], [ 0, %197 ]
  %222 = icmp eq i32 %207, %221
  br i1 %222, label %248, label %223

223:                                              ; preds = %220
  %224 = load i8, i8* %67, align 4, !range !2
  %225 = icmp eq i8 %224, 0
  %226 = load i8, i8* %70, align 1, !range !2
  %227 = icmp eq i8 %226, 0
  %228 = select i1 %227, i32 1, i32 2
  %229 = xor i1 %227, true
  %230 = zext i1 %229 to i32
  %231 = select i1 %225, i32 %230, i32 %228
  %232 = add nuw nsw i32 %231, 3
  %233 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %52, i32 %232) #13
  %234 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %208, align 8
  %235 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %234, i64 0, i32 1, i32 0, i32 0, i32 0
  %236 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %235, align 8
  %237 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %236, i64 0, i32 4
  %238 = load i8, i8* %237, align 1, !range !2
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %245, label %240

240:                                              ; preds = %223
  %241 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %236, i64 0, i32 3
  %242 = load i8, i8* %241, align 4, !range !2
  %243 = zext i8 %242 to i32
  %244 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %236, i32 %243) #13
  br label %245

245:                                              ; preds = %223, %240
  %246 = phi i32 [ %244, %240 ], [ 0, %223 ]
  %247 = icmp eq i32 %233, %246
  br i1 %247, label %248, label %252

248:                                              ; preds = %245, %220
  %249 = tail call zeroext i1 @_ZNK8spvtools3opt4Loop22FindNumberOfIterationsEPKNS0_11InstructionES4_PmPlS6_(%"class.spvtools::opt::Loop"* %0, %"class.spvtools::opt::Instruction"* nonnull %52, %"class.spvtools::opt::Instruction"* %4, i64* null, i64* null, i64* null)
  br i1 %249, label %250, label %252

250:                                              ; preds = %248, %39, %45
  %251 = phi %"class.spvtools::opt::Instruction"* [ %52, %248 ], [ null, %39 ], [ null, %45 ]
  br label %252

252:                                              ; preds = %193, %185, %166, %135, %159, %245, %2, %250, %248, %58, %50, %54
  %253 = phi %"class.spvtools::opt::Instruction"* [ null, %54 ], [ null, %50 ], [ null, %58 ], [ null, %248 ], [ null, %2 ], [ %251, %250 ], [ null, %245 ], [ null, %159 ], [ null, %135 ], [ null, %166 ], [ null, %185 ], [ null, %193 ]
  ret %"class.spvtools::opt::Instruction"* %253
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt14LoopDescriptor30CreatePreHeaderBlocksIfMissingEv(%"class.spvtools::opt::LoopDescriptor"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.spvtools::opt::PostOrderTreeDFIterator.1070", align 8
  %3 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 0
  store %"class.spvtools::opt::Loop"* %4, %"class.spvtools::opt::Loop"** %5, align 8, !alias.scope !53
  %6 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1
  %7 = bitcast %"class.std::__1::stack.1071"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 48, i1 false) #13, !alias.scope !53
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 7, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %8, align 8, !noalias !53
  %10 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 7, i32 0, i32 1
  %11 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %10, align 8, !noalias !53
  %12 = icmp eq %"class.spvtools::opt::Loop"** %9, %11
  br i1 %12, label %82, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %15 = bitcast %"struct.std::__1::pair.1075"*** %14 to i64*
  %16 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.std::__1::pair.1075"*** %16 to i64*
  %18 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1, i32 0
  %21 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2 to i64*
  br label %22

22:                                               ; preds = %75, %13
  %23 = phi i64 [ 0, %13 ], [ %78, %75 ]
  %24 = phi i64 [ 0, %13 ], [ %77, %75 ]
  %25 = phi i64 [ 0, %13 ], [ %76, %75 ]
  %26 = phi i64 [ 0, %13 ], [ %63, %75 ]
  %27 = phi %"class.spvtools::opt::Loop"** [ %9, %13 ], [ %71, %75 ]
  %28 = phi %"class.spvtools::opt::Loop"* [ %4, %13 ], [ %69, %75 ]
  %29 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %27, i64 1
  %30 = sub i64 %25, %24
  %31 = icmp eq i64 %30, 0
  %32 = shl i64 %30, 5
  %33 = add i64 %32, -1
  %34 = select i1 %31, i64 0, i64 %33
  %35 = add i64 %26, %23
  %36 = icmp eq i64 %34, %35
  %37 = inttoptr i64 %24 to %"struct.std::__1::pair.1075"**
  %38 = inttoptr i64 %25 to %"struct.std::__1::pair.1075"**
  br i1 %36, label %39, label %45

39:                                               ; preds = %22
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque.1072"* %20) #13
  %40 = load i64, i64* %19, align 8, !alias.scope !53
  %41 = load i64, i64* %18, align 8, !alias.scope !53
  %42 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %16, align 8, !alias.scope !53
  %43 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %14, align 8, !alias.scope !53
  %44 = add i64 %41, %40
  br label %45

45:                                               ; preds = %39, %22
  %46 = phi i64 [ %44, %39 ], [ %35, %22 ]
  %47 = phi %"struct.std::__1::pair.1075"** [ %43, %39 ], [ %38, %22 ]
  %48 = phi %"struct.std::__1::pair.1075"** [ %42, %39 ], [ %37, %22 ]
  %49 = icmp eq %"struct.std::__1::pair.1075"** %47, %48
  br i1 %49, label %57, label %50

50:                                               ; preds = %45
  %51 = lshr i64 %46, 8
  %52 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %48, i64 %51
  %53 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %52, align 8
  %54 = and i64 %46, 255
  %55 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %53, i64 %54
  %56 = bitcast %"struct.std::__1::pair.1075"* %55 to i8*
  br label %57

57:                                               ; preds = %50, %45
  %58 = phi i8* [ %56, %50 ], [ null, %45 ]
  %59 = bitcast i8* %58 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %28, %"class.spvtools::opt::Loop"** %59, align 8
  %60 = getelementptr inbounds i8, i8* %58, i64 8
  %61 = bitcast i8* %60 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %29, %"class.spvtools::opt::Loop"*** %61, align 8
  %62 = load i64, i64* %19, align 8, !alias.scope !53
  %63 = add i64 %62, 1
  store i64 %63, i64* %19, align 8, !alias.scope !53
  %64 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8, !alias.scope !53
  %65 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %64, i64 0, i32 7, i32 0, i32 0
  %66 = bitcast %"class.spvtools::opt::Loop"*** %65 to i64**
  %67 = load i64*, i64** %66, align 8
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %21, align 8, !alias.scope !53
  %69 = inttoptr i64 %68 to %"class.spvtools::opt::Loop"*
  %70 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %69, i64 0, i32 7, i32 0, i32 0
  %71 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %70, align 8
  %72 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %69, i64 0, i32 7, i32 0, i32 1
  %73 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Loop"** %71, %73
  br i1 %74, label %79, label %75

75:                                               ; preds = %57
  %76 = load i64, i64* %15, align 8, !alias.scope !53
  %77 = load i64, i64* %17, align 8, !alias.scope !53
  %78 = load i64, i64* %18, align 8, !alias.scope !53
  br label %22

79:                                               ; preds = %57
  %80 = inttoptr i64 %68 to %"class.spvtools::opt::Loop"*
  %81 = icmp eq %"class.spvtools::opt::Loop"* %4, %80
  br i1 %81, label %82, label %183

82:                                               ; preds = %191, %1, %79
  %83 = phi i8 [ 0, %79 ], [ 0, %1 ], [ %192, %191 ]
  %84 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %85 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %84, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = lshr i64 %87, 8
  %89 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %85, i64 %88
  %90 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %91 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %90, align 8
  %92 = icmp eq %"struct.std::__1::pair.1075"** %91, %85
  %93 = ptrtoint %"struct.std::__1::pair.1075"** %91 to i64
  %94 = ptrtoint %"struct.std::__1::pair.1075"** %85 to i64
  br i1 %92, label %95, label %97

95:                                               ; preds = %82
  %96 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %110

97:                                               ; preds = %82
  %98 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %89, align 8
  %99 = and i64 %87, 255
  %100 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %98, i64 %99
  %101 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, %87
  %104 = lshr i64 %103, 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %85, i64 %104
  %106 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %105, align 8
  %107 = and i64 %103, 255
  %108 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %106, i64 %107
  %109 = icmp eq %"struct.std::__1::pair.1075"* %108, %100
  br i1 %109, label %110, label %116

110:                                              ; preds = %129, %97, %95
  %111 = phi i64* [ %96, %95 ], [ %101, %97 ], [ %101, %129 ]
  store i64 0, i64* %111, align 8
  %112 = bitcast %"struct.std::__1::pair.1075"*** %90 to i64*
  %113 = sub i64 %93, %94
  %114 = ashr exact i64 %113, 3
  %115 = icmp ugt i64 %114, 2
  br i1 %115, label %134, label %147

116:                                              ; preds = %97, %129
  %117 = phi %"struct.std::__1::pair.1075"* [ %132, %129 ], [ %100, %97 ]
  %118 = phi %"struct.std::__1::pair.1075"** [ %131, %129 ], [ %89, %97 ]
  %119 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %117, i64 1
  %120 = ptrtoint %"struct.std::__1::pair.1075"* %119 to i64
  %121 = bitcast %"struct.std::__1::pair.1075"** %118 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 %120, %122
  %124 = icmp eq i64 %123, 4096
  br i1 %124, label %125, label %129

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %118, i64 1
  %127 = bitcast %"struct.std::__1::pair.1075"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  br label %129

129:                                              ; preds = %125, %116
  %130 = phi i64 [ %128, %125 ], [ %120, %116 ]
  %131 = phi %"struct.std::__1::pair.1075"** [ %126, %125 ], [ %118, %116 ]
  %132 = inttoptr i64 %130 to %"struct.std::__1::pair.1075"*
  %133 = icmp eq %"struct.std::__1::pair.1075"* %108, %132
  br i1 %133, label %110, label %116

134:                                              ; preds = %110, %134
  %135 = phi %"struct.std::__1::pair.1075"** [ %139, %134 ], [ %85, %110 ]
  %136 = bitcast %"struct.std::__1::pair.1075"** %135 to i8**
  %137 = load i8*, i8** %136, align 8
  call void @_ZdlPv(i8* %137) #12
  %138 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %84, align 8
  %139 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %138, i64 1
  store %"struct.std::__1::pair.1075"** %139, %"struct.std::__1::pair.1075"*** %84, align 8
  %140 = load i64, i64* %112, align 8
  %141 = ptrtoint %"struct.std::__1::pair.1075"** %139 to i64
  %142 = sub i64 %140, %141
  %143 = ashr exact i64 %142, 3
  %144 = icmp ugt i64 %143, 2
  br i1 %144, label %134, label %145

145:                                              ; preds = %134
  %146 = inttoptr i64 %140 to %"struct.std::__1::pair.1075"**
  br label %147

147:                                              ; preds = %145, %110
  %148 = phi %"struct.std::__1::pair.1075"** [ %91, %110 ], [ %146, %145 ]
  %149 = phi %"struct.std::__1::pair.1075"** [ %85, %110 ], [ %139, %145 ]
  %150 = phi i64 [ %114, %110 ], [ %143, %145 ]
  switch i64 %150, label %154 [
    i64 1, label %152
    i64 2, label %151
  ]

151:                                              ; preds = %147
  br label %152

152:                                              ; preds = %147, %151
  %153 = phi i64 [ 256, %151 ], [ 128, %147 ]
  store i64 %153, i64* %86, align 8
  br label %154

154:                                              ; preds = %152, %147
  %155 = icmp eq %"struct.std::__1::pair.1075"** %149, %148
  br i1 %155, label %174, label %156

156:                                              ; preds = %154, %156
  %157 = phi %"struct.std::__1::pair.1075"** [ %160, %156 ], [ %149, %154 ]
  %158 = bitcast %"struct.std::__1::pair.1075"** %157 to i8**
  %159 = load i8*, i8** %158, align 8
  call void @_ZdlPv(i8* %159) #12
  %160 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %157, i64 1
  %161 = icmp eq %"struct.std::__1::pair.1075"** %160, %148
  br i1 %161, label %162, label %156

162:                                              ; preds = %156
  %163 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %84, align 8
  %164 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %90, align 8
  %165 = icmp eq %"struct.std::__1::pair.1075"** %164, %163
  br i1 %165, label %174, label %166

166:                                              ; preds = %162
  %167 = ptrtoint %"struct.std::__1::pair.1075"** %163 to i64
  %168 = getelementptr %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %164, i64 -1
  %169 = ptrtoint %"struct.std::__1::pair.1075"** %168 to i64
  %170 = sub i64 %169, %167
  %171 = lshr i64 %170, 3
  %172 = xor i64 %171, -1
  %173 = getelementptr %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %164, i64 %172
  store %"struct.std::__1::pair.1075"** %173, %"struct.std::__1::pair.1075"*** %90, align 8
  br label %174

174:                                              ; preds = %166, %162, %154
  %175 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %176 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %175, align 8
  %177 = icmp eq %"struct.std::__1::pair.1075"** %176, null
  br i1 %177, label %180, label %178

178:                                              ; preds = %174
  %179 = bitcast %"struct.std::__1::pair.1075"** %176 to i8*
  call void @_ZdlPv(i8* %179) #12
  br label %180

180:                                              ; preds = %174, %178
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3) #13
  %181 = and i8 %83, 1
  %182 = icmp ne i8 %181, 0
  ret i1 %182

183:                                              ; preds = %79, %191
  %184 = phi %"class.spvtools::opt::Loop"* [ %193, %191 ], [ %80, %79 ]
  %185 = phi i8 [ %192, %191 ], [ 0, %79 ]
  %186 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %184, i64 0, i32 4
  %187 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %186, align 8
  %188 = icmp eq %"class.spvtools::opt::BasicBlock"* %187, null
  br i1 %188, label %189, label %191

189:                                              ; preds = %183
  %190 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt4Loop25GetOrCreatePreHeaderBlockEv(%"class.spvtools::opt::Loop"* %184)
  br label %191

191:                                              ; preds = %183, %189
  %192 = phi i8 [ %185, %183 ], [ 1, %189 ]
  call void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator.1070"* nonnull %2) #13
  %193 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %194 = icmp eq %"class.spvtools::opt::Loop"* %193, %4
  br i1 %194, label %82, label %183
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14LoopDescriptor23PostModificationCleanupEv(%"class.spvtools::opt::LoopDescriptor"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::vector.910", align 8
  %4 = bitcast %"class.std::__1::vector.910"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %3, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #13
  %8 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %10, align 8
  %12 = icmp eq %"class.spvtools::opt::Loop"** %9, %11
  br i1 %12, label %123, label %13

13:                                               ; preds = %1
  %14 = bitcast %"class.spvtools::opt::Loop"*** %6 to i64*
  %15 = bitcast %"class.std::__1::vector.910"* %3 to i64*
  %16 = bitcast %"class.spvtools::opt::Loop"*** %7 to i64*
  br label %19

17:                                               ; preds = %116
  %18 = icmp eq %"class.spvtools::opt::Loop"** %118, %117
  br i1 %18, label %123, label %136

19:                                               ; preds = %13, %116
  %20 = phi %"class.spvtools::opt::Loop"** [ null, %13 ], [ %117, %116 ]
  %21 = phi %"class.spvtools::opt::Loop"** [ null, %13 ], [ %118, %116 ]
  %22 = phi i64 [ 0, %13 ], [ %119, %116 ]
  %23 = phi %"class.spvtools::opt::Loop"** [ null, %13 ], [ %120, %116 ]
  %24 = phi %"class.spvtools::opt::Loop"** [ %9, %13 ], [ %121, %116 ]
  %25 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %24, align 8
  %26 = ptrtoint %"class.spvtools::opt::Loop"* %25 to i64
  %27 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %25, i64 0, i32 9
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %116, label %30

30:                                               ; preds = %19
  %31 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %7, align 8
  %32 = icmp eq %"class.spvtools::opt::Loop"** %23, %31
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = bitcast %"class.spvtools::opt::Loop"** %23 to i64*
  store i64 %26, i64* %34, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %23, i64 1
  %36 = ptrtoint %"class.spvtools::opt::Loop"** %35 to i64
  store i64 %36, i64* %14, align 8
  br label %83

37:                                               ; preds = %30
  %38 = ptrtoint %"class.spvtools::opt::Loop"** %31 to i64
  %39 = load i64, i64* %15, align 8
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = add nsw i64 %41, 1
  %43 = icmp ugt i64 %42, 2305843009213693951
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::vector.910"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %45) #14
  unreachable

46:                                               ; preds = %37
  %47 = icmp ult i64 %41, 1152921504606846975
  br i1 %47, label %48, label %56

48:                                               ; preds = %46
  %49 = ashr exact i64 %40, 2
  %50 = icmp ult i64 %49, %42
  %51 = select i1 %50, i64 %42, i64 %49
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %61, label %53

53:                                               ; preds = %48
  %54 = icmp ugt i64 %51, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %53, %46
  %57 = phi i64 [ %51, %53 ], [ 2305843009213693951, %46 ]
  %58 = shl i64 %57, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"class.spvtools::opt::Loop"**
  br label %61

61:                                               ; preds = %56, %48
  %62 = phi i64 [ %57, %56 ], [ 0, %48 ]
  %63 = phi %"class.spvtools::opt::Loop"** [ %60, %56 ], [ null, %48 ]
  %64 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %63, i64 %41
  %65 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %63, i64 %62
  %66 = ptrtoint %"class.spvtools::opt::Loop"** %65 to i64
  %67 = bitcast %"class.spvtools::opt::Loop"** %64 to i64*
  store i64 %26, i64* %67, align 8
  %68 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %64, i64 1
  %69 = ptrtoint %"class.spvtools::opt::Loop"** %68 to i64
  %70 = sub i64 %22, %39
  %71 = ashr exact i64 %70, 3
  %72 = sub nsw i64 0, %71
  %73 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %64, i64 %72
  %74 = ptrtoint %"class.spvtools::opt::Loop"** %73 to i64
  %75 = icmp sgt i64 %70, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %61
  %77 = bitcast %"class.spvtools::opt::Loop"** %73 to i8*
  %78 = inttoptr i64 %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 %70, i1 false) #13
  br label %79

79:                                               ; preds = %76, %61
  store i64 %74, i64* %15, align 8
  store i64 %69, i64* %14, align 8
  store i64 %66, i64* %16, align 8
  %80 = icmp eq i64 %39, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %79
  %82 = inttoptr i64 %39 to i8*
  tail call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %33, %79, %81
  %84 = phi %"class.spvtools::opt::Loop"** [ %35, %33 ], [ %68, %79 ], [ %68, %81 ]
  %85 = phi %"class.spvtools::opt::Loop"** [ %21, %33 ], [ %73, %79 ], [ %73, %81 ]
  %86 = phi i64 [ %36, %33 ], [ %69, %79 ], [ %69, %81 ]
  %87 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %25, i64 0, i32 6
  %88 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %87, align 8
  %89 = icmp eq %"class.spvtools::opt::Loop"* %88, null
  br i1 %89, label %116, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %88, i64 0, i32 7, i32 0, i32 0
  %92 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %91, align 8
  %93 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %88, i64 0, i32 7, i32 0, i32 1
  %94 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %93, align 8
  %95 = icmp eq %"class.spvtools::opt::Loop"** %92, %94
  %96 = ptrtoint %"class.spvtools::opt::Loop"** %94 to i64
  br i1 %95, label %104, label %97

97:                                               ; preds = %90, %101
  %98 = phi %"class.spvtools::opt::Loop"** [ %102, %101 ], [ %92, %90 ]
  %99 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %98, align 8
  %100 = icmp eq %"class.spvtools::opt::Loop"* %99, %25
  br i1 %100, label %104, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %98, i64 1
  %103 = icmp eq %"class.spvtools::opt::Loop"** %102, %94
  br i1 %103, label %104, label %97

104:                                              ; preds = %101, %97, %90
  %105 = phi %"class.spvtools::opt::Loop"** [ %92, %90 ], [ %94, %101 ], [ %98, %97 ]
  %106 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %105, i64 1
  %107 = ptrtoint %"class.spvtools::opt::Loop"** %106 to i64
  %108 = sub i64 %96, %107
  %109 = ashr exact i64 %108, 3
  %110 = icmp eq i64 %108, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %104
  %112 = bitcast %"class.spvtools::opt::Loop"** %105 to i8*
  %113 = bitcast %"class.spvtools::opt::Loop"** %106 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 %108, i1 false) #13
  br label %114

114:                                              ; preds = %104, %111
  %115 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %105, i64 %109
  store %"class.spvtools::opt::Loop"** %115, %"class.spvtools::opt::Loop"*** %93, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %87, align 8
  br label %116

116:                                              ; preds = %83, %19, %114
  %117 = phi %"class.spvtools::opt::Loop"** [ %84, %83 ], [ %20, %19 ], [ %84, %114 ]
  %118 = phi %"class.spvtools::opt::Loop"** [ %85, %83 ], [ %21, %19 ], [ %85, %114 ]
  %119 = phi i64 [ %86, %83 ], [ %22, %19 ], [ %86, %114 ]
  %120 = phi %"class.spvtools::opt::Loop"** [ %84, %83 ], [ %23, %19 ], [ %84, %114 ]
  %121 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %24, i64 1
  %122 = icmp eq %"class.spvtools::opt::Loop"** %121, %11
  br i1 %122, label %17, label %19

123:                                              ; preds = %194, %1, %17
  %124 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 3
  %125 = getelementptr inbounds %"class.std::__1::vector.1028", %"class.std::__1::vector.1028"* %124, i64 0, i32 0, i32 0
  %126 = load %"struct.std::__1::pair.1030"*, %"struct.std::__1::pair.1030"** %125, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 3, i32 0, i32 1
  %128 = load %"struct.std::__1::pair.1030"*, %"struct.std::__1::pair.1030"** %127, align 8
  %129 = icmp eq %"struct.std::__1::pair.1030"* %126, %128
  br i1 %129, label %197, label %130

130:                                              ; preds = %123
  %131 = bitcast i32* %2 to i8*
  %132 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %133 = bitcast %"class.spvtools::opt::Loop"*** %10 to i64*
  %134 = bitcast %"class.spvtools::opt::LoopDescriptor"* %0 to i64*
  %135 = bitcast %"class.spvtools::opt::Loop"*** %132 to i64*
  br label %206

136:                                              ; preds = %17, %194
  %137 = phi %"class.spvtools::opt::Loop"** [ %195, %194 ], [ %118, %17 ]
  %138 = bitcast %"class.spvtools::opt::Loop"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %8, align 8
  %141 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %10, align 8
  %142 = icmp eq %"class.spvtools::opt::Loop"** %140, %141
  %143 = ptrtoint %"class.spvtools::opt::Loop"** %141 to i64
  br i1 %142, label %153, label %144

144:                                              ; preds = %136
  %145 = inttoptr i64 %139 to %"class.spvtools::opt::Loop"*
  br label %146

146:                                              ; preds = %150, %144
  %147 = phi %"class.spvtools::opt::Loop"** [ %140, %144 ], [ %151, %150 ]
  %148 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %147, align 8
  %149 = icmp eq %"class.spvtools::opt::Loop"* %148, %145
  br i1 %149, label %153, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %147, i64 1
  %152 = icmp eq %"class.spvtools::opt::Loop"** %151, %141
  br i1 %152, label %153, label %146

153:                                              ; preds = %146, %150, %136
  %154 = phi %"class.spvtools::opt::Loop"** [ %140, %136 ], [ %147, %146 ], [ %141, %150 ]
  %155 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %154, i64 1
  %156 = ptrtoint %"class.spvtools::opt::Loop"** %155 to i64
  %157 = sub i64 %143, %156
  %158 = ashr exact i64 %157, 3
  %159 = icmp eq i64 %157, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %153
  %161 = bitcast %"class.spvtools::opt::Loop"** %154 to i8*
  %162 = bitcast %"class.spvtools::opt::Loop"** %155 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 %157, i1 false) #13
  br label %163

163:                                              ; preds = %153, %160
  %164 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %154, i64 %158
  store %"class.spvtools::opt::Loop"** %164, %"class.spvtools::opt::Loop"*** %10, align 8
  %165 = inttoptr i64 %139 to %"class.spvtools::opt::Loop"*
  %166 = icmp eq i64 %139, 0
  br i1 %166, label %194, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %165, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %168, align 8
  %170 = icmp eq %"struct.std::__1::__hash_node_base.922"* %169, null
  br i1 %170, label %177, label %171

171:                                              ; preds = %167, %171
  %172 = phi %"struct.std::__1::__hash_node_base.922"* [ %174, %171 ], [ %169, %167 ]
  %173 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %172, i64 0, i32 0
  %174 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %173, align 8
  %175 = bitcast %"struct.std::__1::__hash_node_base.922"* %172 to i8*
  tail call void @_ZdlPv(i8* %175) #12
  %176 = icmp eq %"struct.std::__1::__hash_node_base.922"* %174, null
  br i1 %176, label %177, label %171

177:                                              ; preds = %171, %167
  %178 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %165, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %178, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %178, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base.922"** %179, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %177
  %182 = bitcast %"struct.std::__1::__hash_node_base.922"** %179 to i8*
  tail call void @_ZdlPv(i8* %182) #12
  br label %183

183:                                              ; preds = %181, %177
  %184 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %165, i64 0, i32 7, i32 0, i32 0
  %185 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %184, align 8
  %186 = icmp eq %"class.spvtools::opt::Loop"** %185, null
  br i1 %186, label %192, label %187

187:                                              ; preds = %183
  %188 = ptrtoint %"class.spvtools::opt::Loop"** %185 to i64
  %189 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %165, i64 0, i32 7, i32 0, i32 1
  %190 = bitcast %"class.spvtools::opt::Loop"*** %189 to i64*
  store i64 %188, i64* %190, align 8
  %191 = bitcast %"class.spvtools::opt::Loop"** %185 to i8*
  tail call void @_ZdlPv(i8* %191) #12
  br label %192

192:                                              ; preds = %183, %187
  %193 = inttoptr i64 %139 to i8*
  tail call void @_ZdlPv(i8* %193) #12
  br label %194

194:                                              ; preds = %192, %163
  %195 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %137, i64 1
  %196 = icmp eq %"class.spvtools::opt::Loop"** %195, %117
  br i1 %196, label %123, label %136

197:                                              ; preds = %370, %123
  %198 = getelementptr inbounds %"class.std::__1::vector.1028", %"class.std::__1::vector.1028"* %124, i64 0, i32 0
  call void @_ZNSt3__113__vector_baseINS_4pairIPN8spvtools3opt4LoopENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_9allocatorISA_EEE5clearEv(%"class.std::__1::__vector_base.1029"* %198) #13
  %199 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %5, align 8
  %200 = icmp eq %"class.spvtools::opt::Loop"** %199, null
  br i1 %200, label %205, label %201

201:                                              ; preds = %197
  %202 = ptrtoint %"class.spvtools::opt::Loop"** %199 to i64
  %203 = bitcast %"class.spvtools::opt::Loop"*** %6 to i64*
  store i64 %202, i64* %203, align 8
  %204 = bitcast %"class.spvtools::opt::Loop"** %199 to i8*
  call void @_ZdlPv(i8* %204) #12
  br label %205

205:                                              ; preds = %197, %201
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  ret void

206:                                              ; preds = %130, %370
  %207 = phi %"struct.std::__1::pair.1030"* [ %126, %130 ], [ %371, %370 ]
  %208 = getelementptr inbounds %"struct.std::__1::pair.1030", %"struct.std::__1::pair.1030"* %207, i64 0, i32 0
  %209 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %208, align 8
  %210 = getelementptr inbounds %"struct.std::__1::pair.1030", %"struct.std::__1::pair.1030"* %207, i64 0, i32 1
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.1031", %"class.std::__1::unique_ptr.1031"* %210, i64 0, i32 0, i32 0, i32 0
  %212 = bitcast %"class.std::__1::unique_ptr.1031"* %210 to i64*
  %213 = load i64, i64* %212, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %211, align 8
  %214 = icmp eq %"class.spvtools::opt::Loop"* %209, null
  br i1 %214, label %308, label %215

215:                                              ; preds = %206
  %216 = inttoptr i64 %213 to %"class.spvtools::opt::Loop"*
  %217 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %216, i64 0, i32 6
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %217, align 8
  %218 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %209, i64 0, i32 7
  %219 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %209, i64 0, i32 7, i32 0, i32 1
  %220 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %219, align 8
  %221 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %209, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %222 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %221, align 8
  %223 = icmp eq %"class.spvtools::opt::Loop"** %220, %222
  %224 = ptrtoint %"class.spvtools::opt::Loop"** %222 to i64
  br i1 %223, label %230, label %225

225:                                              ; preds = %215
  %226 = bitcast %"class.spvtools::opt::Loop"** %220 to i64*
  store i64 %213, i64* %226, align 8
  %227 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %220, i64 1
  %228 = ptrtoint %"class.spvtools::opt::Loop"** %227 to i64
  %229 = bitcast %"class.spvtools::opt::Loop"*** %219 to i64*
  store i64 %228, i64* %229, align 8
  br label %287

230:                                              ; preds = %215
  %231 = ptrtoint %"class.spvtools::opt::Loop"** %220 to i64
  %232 = bitcast %"class.spvtools::opt::Loop"*** %219 to i64*
  %233 = bitcast %"class.std::__1::vector.910"* %218 to i64*
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 %231, %234
  %236 = ashr exact i64 %235, 3
  %237 = add nsw i64 %236, 1
  %238 = icmp ugt i64 %237, 2305843009213693951
  br i1 %238, label %239, label %241

239:                                              ; preds = %230
  %240 = bitcast %"class.std::__1::vector.910"* %218 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %240) #14
  unreachable

241:                                              ; preds = %230
  %242 = bitcast %"class.spvtools::opt::Loop"*** %221 to i64*
  %243 = sub i64 %224, %234
  %244 = ashr exact i64 %243, 3
  %245 = icmp ult i64 %244, 1152921504606846975
  br i1 %245, label %246, label %254

246:                                              ; preds = %241
  %247 = ashr exact i64 %243, 2
  %248 = icmp ult i64 %247, %237
  %249 = select i1 %248, i64 %237, i64 %247
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %259, label %251

251:                                              ; preds = %246
  %252 = icmp ugt i64 %249, 2305843009213693951
  br i1 %252, label %253, label %254

253:                                              ; preds = %251
  call void @abort() #14
  unreachable

254:                                              ; preds = %251, %241
  %255 = phi i64 [ %249, %251 ], [ 2305843009213693951, %241 ]
  %256 = shl i64 %255, 3
  %257 = call i8* @_Znwm(i64 %256) #12
  %258 = bitcast i8* %257 to %"class.spvtools::opt::Loop"**
  br label %259

259:                                              ; preds = %254, %246
  %260 = phi i64 [ %255, %254 ], [ 0, %246 ]
  %261 = phi %"class.spvtools::opt::Loop"** [ %258, %254 ], [ null, %246 ]
  %262 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %261, i64 %236
  %263 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %261, i64 %260
  %264 = ptrtoint %"class.spvtools::opt::Loop"** %263 to i64
  %265 = bitcast %"class.spvtools::opt::Loop"** %262 to i64*
  store i64 %213, i64* %265, align 8
  %266 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %262, i64 1
  %267 = ptrtoint %"class.spvtools::opt::Loop"** %266 to i64
  %268 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %218, i64 0, i32 0, i32 0
  %269 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %268, align 8
  %270 = load i64, i64* %232, align 8
  %271 = ptrtoint %"class.spvtools::opt::Loop"** %269 to i64
  %272 = sub i64 %270, %271
  %273 = ashr exact i64 %272, 3
  %274 = sub nsw i64 0, %273
  %275 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %262, i64 %274
  %276 = ptrtoint %"class.spvtools::opt::Loop"** %275 to i64
  %277 = icmp sgt i64 %272, 0
  br i1 %277, label %278, label %282

278:                                              ; preds = %259
  %279 = bitcast %"class.spvtools::opt::Loop"** %275 to i8*
  %280 = bitcast %"class.spvtools::opt::Loop"** %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 %272, i1 false) #13
  %281 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %268, align 8
  br label %282

282:                                              ; preds = %278, %259
  %283 = phi %"class.spvtools::opt::Loop"** [ %269, %259 ], [ %281, %278 ]
  store i64 %276, i64* %233, align 8
  store i64 %267, i64* %232, align 8
  store i64 %264, i64* %242, align 8
  %284 = icmp eq %"class.spvtools::opt::Loop"** %283, null
  br i1 %284, label %287, label %285

285:                                              ; preds = %282
  %286 = bitcast %"class.spvtools::opt::Loop"** %283 to i8*
  call void @_ZdlPv(i8* %286) #12
  br label %287

287:                                              ; preds = %225, %282, %285
  store %"class.spvtools::opt::Loop"* %209, %"class.spvtools::opt::Loop"** %217, align 8
  %288 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %216, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %289 = bitcast %"struct.std::__1::__hash_node_base.922"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %308, label %292

292:                                              ; preds = %287, %304
  %293 = phi i64 [ %306, %304 ], [ %290, %287 ]
  %294 = inttoptr i64 %293 to %"struct.std::__1::__hash_node.1195"*
  %295 = getelementptr inbounds %"struct.std::__1::__hash_node.1195", %"struct.std::__1::__hash_node.1195"* %294, i64 0, i32 2
  %296 = load i32, i32* %295, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131)
  store i32 %296, i32* %2, align 4
  br label %297

297:                                              ; preds = %292, %297
  %298 = phi %"class.spvtools::opt::Loop"* [ %302, %297 ], [ %209, %292 ]
  %299 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %298, i64 0, i32 8, i32 0
  %300 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %299, i32* nonnull dereferenceable(4) %2, i32* nonnull dereferenceable(4) %2) #13
  %301 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %298, i64 0, i32 6
  %302 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %301, align 8
  %303 = icmp eq %"class.spvtools::opt::Loop"* %302, null
  br i1 %303, label %304, label %297

304:                                              ; preds = %297
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131)
  %305 = inttoptr i64 %293 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %292

308:                                              ; preds = %304, %287, %206
  %309 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %10, align 8
  %310 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %132, align 8
  %311 = icmp ult %"class.spvtools::opt::Loop"** %309, %310
  %312 = ptrtoint %"class.spvtools::opt::Loop"** %310 to i64
  br i1 %311, label %313, label %317

313:                                              ; preds = %308
  %314 = bitcast %"class.spvtools::opt::Loop"** %309 to i64*
  store i64 %213, i64* %314, align 8
  %315 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %309, i64 1
  %316 = ptrtoint %"class.spvtools::opt::Loop"** %315 to i64
  store i64 %316, i64* %133, align 8
  br label %370

317:                                              ; preds = %308
  %318 = ptrtoint %"class.spvtools::opt::Loop"** %309 to i64
  %319 = load i64, i64* %134, align 8
  %320 = sub i64 %318, %319
  %321 = ashr exact i64 %320, 3
  %322 = add nsw i64 %321, 1
  %323 = icmp ugt i64 %322, 2305843009213693951
  br i1 %323, label %324, label %326

324:                                              ; preds = %317
  %325 = bitcast %"class.spvtools::opt::LoopDescriptor"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %325) #14
  unreachable

326:                                              ; preds = %317
  %327 = sub i64 %312, %319
  %328 = ashr exact i64 %327, 3
  %329 = icmp ult i64 %328, 1152921504606846975
  br i1 %329, label %330, label %338

330:                                              ; preds = %326
  %331 = ashr exact i64 %327, 2
  %332 = icmp ult i64 %331, %322
  %333 = select i1 %332, i64 %322, i64 %331
  %334 = icmp eq i64 %333, 0
  br i1 %334, label %343, label %335

335:                                              ; preds = %330
  %336 = icmp ugt i64 %333, 2305843009213693951
  br i1 %336, label %337, label %338

337:                                              ; preds = %335
  call void @abort() #14
  unreachable

338:                                              ; preds = %335, %326
  %339 = phi i64 [ %333, %335 ], [ 2305843009213693951, %326 ]
  %340 = shl i64 %339, 3
  %341 = call i8* @_Znwm(i64 %340) #12
  %342 = bitcast i8* %341 to %"class.spvtools::opt::Loop"**
  br label %343

343:                                              ; preds = %338, %330
  %344 = phi i64 [ %339, %338 ], [ 0, %330 ]
  %345 = phi %"class.spvtools::opt::Loop"** [ %342, %338 ], [ null, %330 ]
  %346 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %345, i64 %321
  %347 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %345, i64 %344
  %348 = ptrtoint %"class.spvtools::opt::Loop"** %347 to i64
  %349 = bitcast %"class.spvtools::opt::Loop"** %346 to i64*
  store i64 %213, i64* %349, align 8
  %350 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %346, i64 1
  %351 = ptrtoint %"class.spvtools::opt::Loop"** %350 to i64
  %352 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %8, align 8
  %353 = load i64, i64* %133, align 8
  %354 = ptrtoint %"class.spvtools::opt::Loop"** %352 to i64
  %355 = sub i64 %353, %354
  %356 = ashr exact i64 %355, 3
  %357 = sub nsw i64 0, %356
  %358 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %346, i64 %357
  %359 = ptrtoint %"class.spvtools::opt::Loop"** %358 to i64
  %360 = icmp sgt i64 %355, 0
  br i1 %360, label %361, label %365

361:                                              ; preds = %343
  %362 = bitcast %"class.spvtools::opt::Loop"** %358 to i8*
  %363 = bitcast %"class.spvtools::opt::Loop"** %352 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %362, i8* align 8 %363, i64 %355, i1 false) #13
  %364 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %8, align 8
  br label %365

365:                                              ; preds = %361, %343
  %366 = phi %"class.spvtools::opt::Loop"** [ %352, %343 ], [ %364, %361 ]
  store i64 %359, i64* %134, align 8
  store i64 %351, i64* %133, align 8
  store i64 %348, i64* %135, align 8
  %367 = icmp eq %"class.spvtools::opt::Loop"** %366, null
  br i1 %367, label %370, label %368

368:                                              ; preds = %365
  %369 = bitcast %"class.spvtools::opt::Loop"** %366 to i8*
  call void @_ZdlPv(i8* %369) #12
  br label %370

370:                                              ; preds = %368, %365, %313
  %371 = getelementptr inbounds %"struct.std::__1::pair.1030", %"struct.std::__1::pair.1030"* %207, i64 1
  %372 = icmp eq %"struct.std::__1::pair.1030"* %371, %128
  br i1 %372, label %197, label %206
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::Loop"* @_ZN8spvtools3opt14LoopDescriptor11AddLoopNestENSt3__110unique_ptrINS0_4LoopENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::opt::PostOrderTreeDFIterator.1070", align 8
  %4 = alloca %"class.spvtools::opt::PostOrderTreeDFIterator.1070", align 8
  %5 = alloca %"class.spvtools::opt::PostOrderTreeDFIterator.1070", align 8
  %6 = alloca %"struct.std::__1::pair.1060", align 8
  %7 = ptrtoint %"class.spvtools::opt::Loop"* %1 to i64
  %8 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 6
  %9 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %8, align 8
  %10 = icmp eq %"class.spvtools::opt::Loop"* %9, null
  br i1 %10, label %11, label %81

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 7
  %13 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 7, i32 0, i32 1
  %14 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1, i32 7, i32 0, i32 2, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %15, align 8
  %17 = icmp eq %"class.spvtools::opt::Loop"** %14, %16
  %18 = ptrtoint %"class.spvtools::opt::Loop"** %16 to i64
  br i1 %17, label %24, label %19

19:                                               ; preds = %11
  %20 = bitcast %"class.spvtools::opt::Loop"** %14 to i64*
  store i64 %7, i64* %20, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %14, i64 1
  %22 = ptrtoint %"class.spvtools::opt::Loop"** %21 to i64
  %23 = bitcast %"class.spvtools::opt::Loop"*** %13 to i64*
  store i64 %22, i64* %23, align 8
  br label %81

24:                                               ; preds = %11
  %25 = ptrtoint %"class.spvtools::opt::Loop"** %14 to i64
  %26 = bitcast %"class.spvtools::opt::Loop"*** %13 to i64*
  %27 = bitcast %"class.std::__1::vector.910"* %12 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %25, %28
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = icmp ugt i64 %31, 2305843009213693951
  br i1 %32, label %33, label %35

33:                                               ; preds = %24
  %34 = bitcast %"class.std::__1::vector.910"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #14
  unreachable

35:                                               ; preds = %24
  %36 = bitcast %"class.spvtools::opt::Loop"*** %15 to i64*
  %37 = sub i64 %18, %28
  %38 = ashr exact i64 %37, 3
  %39 = icmp ult i64 %38, 1152921504606846975
  br i1 %39, label %40, label %48

40:                                               ; preds = %35
  %41 = ashr exact i64 %37, 2
  %42 = icmp ult i64 %41, %31
  %43 = select i1 %42, i64 %31, i64 %41
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = icmp ugt i64 %43, 2305843009213693951
  br i1 %46, label %47, label %48

47:                                               ; preds = %45
  tail call void @abort() #14
  unreachable

48:                                               ; preds = %45, %35
  %49 = phi i64 [ %43, %45 ], [ 2305843009213693951, %35 ]
  %50 = shl i64 %49, 3
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to %"class.spvtools::opt::Loop"**
  br label %53

53:                                               ; preds = %48, %40
  %54 = phi i64 [ %49, %48 ], [ 0, %40 ]
  %55 = phi %"class.spvtools::opt::Loop"** [ %52, %48 ], [ null, %40 ]
  %56 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %55, i64 %30
  %57 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %55, i64 %54
  %58 = ptrtoint %"class.spvtools::opt::Loop"** %57 to i64
  %59 = bitcast %"class.spvtools::opt::Loop"** %56 to i64*
  store i64 %7, i64* %59, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %56, i64 1
  %61 = ptrtoint %"class.spvtools::opt::Loop"** %60 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %12, i64 0, i32 0, i32 0
  %63 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %62, align 8
  %64 = load i64, i64* %26, align 8
  %65 = ptrtoint %"class.spvtools::opt::Loop"** %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 3
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %56, i64 %68
  %70 = ptrtoint %"class.spvtools::opt::Loop"** %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %53
  %73 = bitcast %"class.spvtools::opt::Loop"** %69 to i8*
  %74 = bitcast %"class.spvtools::opt::Loop"** %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 %66, i1 false) #13
  %75 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %62, align 8
  br label %76

76:                                               ; preds = %72, %53
  %77 = phi %"class.spvtools::opt::Loop"** [ %63, %53 ], [ %75, %72 ]
  store i64 %70, i64* %27, align 8
  store i64 %61, i64* %26, align 8
  store i64 %58, i64* %36, align 8
  %78 = icmp eq %"class.spvtools::opt::Loop"** %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast %"class.spvtools::opt::Loop"** %77 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %2, %79, %76, %19
  %82 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %82) #13
  %83 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %3, i64 0, i32 0
  store %"class.spvtools::opt::Loop"* %1, %"class.spvtools::opt::Loop"** %83, align 8, !alias.scope !58
  %84 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %3, i64 0, i32 1
  %85 = bitcast %"class.std::__1::stack.1071"* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 48, i1 false) #13, !alias.scope !58
  %86 = icmp eq %"class.spvtools::opt::Loop"* %1, null
  br i1 %86, label %166, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 7, i32 0, i32 0
  %89 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %88, align 8, !noalias !58
  %90 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 7, i32 0, i32 1
  %91 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %90, align 8, !noalias !58
  %92 = icmp eq %"class.spvtools::opt::Loop"** %89, %91
  br i1 %92, label %166, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %95 = bitcast %"struct.std::__1::pair.1075"*** %94 to i64*
  %96 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %97 = bitcast %"struct.std::__1::pair.1075"*** %96 to i64*
  %98 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %3, i64 0, i32 1, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %3, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %100 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %3, i64 0, i32 1, i32 0
  %101 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %3 to i64*
  br label %102

102:                                              ; preds = %155, %93
  %103 = phi i64 [ 0, %93 ], [ %158, %155 ]
  %104 = phi i64 [ 0, %93 ], [ %157, %155 ]
  %105 = phi i64 [ 0, %93 ], [ %156, %155 ]
  %106 = phi i64 [ 0, %93 ], [ %143, %155 ]
  %107 = phi %"class.spvtools::opt::Loop"** [ %89, %93 ], [ %151, %155 ]
  %108 = phi %"class.spvtools::opt::Loop"* [ %1, %93 ], [ %149, %155 ]
  %109 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %107, i64 1
  %110 = sub i64 %105, %104
  %111 = icmp eq i64 %110, 0
  %112 = shl i64 %110, 5
  %113 = add i64 %112, -1
  %114 = select i1 %111, i64 0, i64 %113
  %115 = add i64 %106, %103
  %116 = icmp eq i64 %114, %115
  %117 = inttoptr i64 %104 to %"struct.std::__1::pair.1075"**
  %118 = inttoptr i64 %105 to %"struct.std::__1::pair.1075"**
  br i1 %116, label %119, label %125

119:                                              ; preds = %102
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque.1072"* %100) #13
  %120 = load i64, i64* %99, align 8, !alias.scope !58
  %121 = load i64, i64* %98, align 8, !alias.scope !58
  %122 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %96, align 8, !alias.scope !58
  %123 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %94, align 8, !alias.scope !58
  %124 = add i64 %121, %120
  br label %125

125:                                              ; preds = %119, %102
  %126 = phi i64 [ %124, %119 ], [ %115, %102 ]
  %127 = phi %"struct.std::__1::pair.1075"** [ %123, %119 ], [ %118, %102 ]
  %128 = phi %"struct.std::__1::pair.1075"** [ %122, %119 ], [ %117, %102 ]
  %129 = icmp eq %"struct.std::__1::pair.1075"** %127, %128
  br i1 %129, label %137, label %130

130:                                              ; preds = %125
  %131 = lshr i64 %126, 8
  %132 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %128, i64 %131
  %133 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %132, align 8
  %134 = and i64 %126, 255
  %135 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %133, i64 %134
  %136 = bitcast %"struct.std::__1::pair.1075"* %135 to i8*
  br label %137

137:                                              ; preds = %130, %125
  %138 = phi i8* [ %136, %130 ], [ null, %125 ]
  %139 = bitcast i8* %138 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %108, %"class.spvtools::opt::Loop"** %139, align 8
  %140 = getelementptr inbounds i8, i8* %138, i64 8
  %141 = bitcast i8* %140 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %109, %"class.spvtools::opt::Loop"*** %141, align 8
  %142 = load i64, i64* %99, align 8, !alias.scope !58
  %143 = add i64 %142, 1
  store i64 %143, i64* %99, align 8, !alias.scope !58
  %144 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %83, align 8, !alias.scope !58
  %145 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %144, i64 0, i32 7, i32 0, i32 0
  %146 = bitcast %"class.spvtools::opt::Loop"*** %145 to i64**
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %101, align 8, !alias.scope !58
  %149 = inttoptr i64 %148 to %"class.spvtools::opt::Loop"*
  %150 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %149, i64 0, i32 7, i32 0, i32 0
  %151 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %150, align 8
  %152 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %149, i64 0, i32 7, i32 0, i32 1
  %153 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %152, align 8
  %154 = icmp eq %"class.spvtools::opt::Loop"** %151, %153
  br i1 %154, label %159, label %155

155:                                              ; preds = %137
  %156 = load i64, i64* %95, align 8, !alias.scope !58
  %157 = load i64, i64* %97, align 8, !alias.scope !58
  %158 = load i64, i64* %98, align 8, !alias.scope !58
  br label %102

159:                                              ; preds = %137
  %160 = getelementptr inbounds %"class.std::__1::stack.1071", %"class.std::__1::stack.1071"* %84, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %160, align 8, !noalias !61
  %162 = bitcast %"struct.std::__1::pair.1075"** %161 to i8*
  %163 = load i64, i64* %97, align 8, !noalias !61
  %164 = load i64, i64* %95, align 8, !noalias !61
  %165 = load i64, i64* %98, align 8, !noalias !61
  br label %166

166:                                              ; preds = %159, %87, %81
  %167 = phi i64 [ %143, %159 ], [ 0, %87 ], [ 0, %81 ]
  %168 = phi i64 [ %165, %159 ], [ 0, %87 ], [ 0, %81 ]
  %169 = phi i64 [ %164, %159 ], [ 0, %87 ], [ 0, %81 ]
  %170 = phi i64 [ %163, %159 ], [ 0, %87 ], [ 0, %81 ]
  %171 = phi i8* [ %162, %159 ], [ null, %87 ], [ null, %81 ]
  %172 = phi %"struct.std::__1::pair.1075"** [ %161, %159 ], [ null, %87 ], [ null, %81 ]
  %173 = phi i64 [ %148, %159 ], [ %7, %87 ], [ %7, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %82) #13
  %174 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %174) #13
  %175 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %4 to i64*
  store i64 %173, i64* %175, align 8, !alias.scope !64
  %176 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %4, i64 0, i32 1
  %177 = getelementptr inbounds %"class.std::__1::stack.1071", %"class.std::__1::stack.1071"* %176, i64 0, i32 0
  %178 = bitcast %"class.std::__1::stack.1071"* %176 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 48, i1 false) #13, !alias.scope !64
  %179 = inttoptr i64 %170 to %"struct.std::__1::pair.1075"**
  %180 = lshr i64 %168, 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %179, i64 %180
  %182 = inttoptr i64 %169 to %"struct.std::__1::pair.1075"**
  %183 = icmp eq %"struct.std::__1::pair.1075"** %182, %179
  br i1 %183, label %184, label %188

184:                                              ; preds = %166
  %185 = add i64 %167, %168
  %186 = lshr i64 %185, 8
  %187 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %179, i64 %186
  br label %198

188:                                              ; preds = %166
  %189 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %181, align 8
  %190 = and i64 %168, 255
  %191 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %189, i64 %190
  %192 = add i64 %167, %168
  %193 = lshr i64 %192, 8
  %194 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %179, i64 %193
  %195 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %194, align 8
  %196 = and i64 %192, 255
  %197 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %195, i64 %196
  br label %198

198:                                              ; preds = %184, %188
  %199 = phi %"struct.std::__1::pair.1075"** [ %194, %188 ], [ %187, %184 ]
  %200 = phi %"struct.std::__1::pair.1075"* [ %191, %188 ], [ null, %184 ]
  %201 = phi %"struct.std::__1::pair.1075"* [ %197, %188 ], [ null, %184 ]
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque.1072"* %177, %"struct.std::__1::pair.1075"** %181, %"struct.std::__1::pair.1075"* %200, %"struct.std::__1::pair.1075"** %199, %"struct.std::__1::pair.1075"* %201, i8* null) #13
  %202 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %202) #13
  %203 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %5, i64 0, i32 1, i32 0
  %204 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 0, i64 56, i1 false)
  call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque.1072"* %203, %"struct.std::__1::pair.1075"** null, %"struct.std::__1::pair.1075"* null, %"struct.std::__1::pair.1075"** null, %"struct.std::__1::pair.1075"* null, i8* null) #13
  %205 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %4, i64 0, i32 0
  %206 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %205, align 8
  %207 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %5, i64 0, i32 0
  %208 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %207, align 8
  %209 = icmp eq %"class.spvtools::opt::Loop"* %206, %208
  br i1 %209, label %221, label %210

210:                                              ; preds = %198
  %211 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 1
  %212 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %213 = bitcast %"class.spvtools::opt::Loop"*** %211 to i64*
  %214 = bitcast %"class.spvtools::opt::LoopDescriptor"* %0 to i64*
  %215 = bitcast %"class.spvtools::opt::Loop"*** %212 to i64*
  %216 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %217 = bitcast %"struct.std::__1::pair.1060"* %6 to i8*
  %218 = getelementptr inbounds %"struct.std::__1::pair.1060", %"struct.std::__1::pair.1060"* %6, i64 0, i32 0
  %219 = getelementptr inbounds %"struct.std::__1::pair.1060", %"struct.std::__1::pair.1060"* %6, i64 0, i32 1
  %220 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 2, i32 0
  br label %471

221:                                              ; preds = %540, %198
  %222 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %223 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %222, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %5, i64 0, i32 1, i32 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = lshr i64 %225, 8
  %227 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %223, i64 %226
  %228 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %229 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %228, align 8
  %230 = icmp eq %"struct.std::__1::pair.1075"** %229, %223
  %231 = ptrtoint %"struct.std::__1::pair.1075"** %229 to i64
  %232 = ptrtoint %"struct.std::__1::pair.1075"** %223 to i64
  br i1 %230, label %233, label %235

233:                                              ; preds = %221
  %234 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %5, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %248

235:                                              ; preds = %221
  %236 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %227, align 8
  %237 = and i64 %225, 255
  %238 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %236, i64 %237
  %239 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %5, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %240 = load i64, i64* %239, align 8
  %241 = add i64 %240, %225
  %242 = lshr i64 %241, 8
  %243 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %223, i64 %242
  %244 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %243, align 8
  %245 = and i64 %241, 255
  %246 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %244, i64 %245
  %247 = icmp eq %"struct.std::__1::pair.1075"* %246, %238
  br i1 %247, label %248, label %254

248:                                              ; preds = %267, %235, %233
  %249 = phi i64* [ %234, %233 ], [ %239, %235 ], [ %239, %267 ]
  store i64 0, i64* %249, align 8
  %250 = bitcast %"struct.std::__1::pair.1075"*** %228 to i64*
  %251 = sub i64 %231, %232
  %252 = ashr exact i64 %251, 3
  %253 = icmp ugt i64 %252, 2
  br i1 %253, label %272, label %285

254:                                              ; preds = %235, %267
  %255 = phi %"struct.std::__1::pair.1075"* [ %270, %267 ], [ %238, %235 ]
  %256 = phi %"struct.std::__1::pair.1075"** [ %269, %267 ], [ %227, %235 ]
  %257 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %255, i64 1
  %258 = ptrtoint %"struct.std::__1::pair.1075"* %257 to i64
  %259 = bitcast %"struct.std::__1::pair.1075"** %256 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = sub i64 %258, %260
  %262 = icmp eq i64 %261, 4096
  br i1 %262, label %263, label %267

263:                                              ; preds = %254
  %264 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %256, i64 1
  %265 = bitcast %"struct.std::__1::pair.1075"** %264 to i64*
  %266 = load i64, i64* %265, align 8
  br label %267

267:                                              ; preds = %263, %254
  %268 = phi i64 [ %266, %263 ], [ %258, %254 ]
  %269 = phi %"struct.std::__1::pair.1075"** [ %264, %263 ], [ %256, %254 ]
  %270 = inttoptr i64 %268 to %"struct.std::__1::pair.1075"*
  %271 = icmp eq %"struct.std::__1::pair.1075"* %246, %270
  br i1 %271, label %248, label %254

272:                                              ; preds = %248, %272
  %273 = phi %"struct.std::__1::pair.1075"** [ %277, %272 ], [ %223, %248 ]
  %274 = bitcast %"struct.std::__1::pair.1075"** %273 to i8**
  %275 = load i8*, i8** %274, align 8
  call void @_ZdlPv(i8* %275) #12
  %276 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %222, align 8
  %277 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %276, i64 1
  store %"struct.std::__1::pair.1075"** %277, %"struct.std::__1::pair.1075"*** %222, align 8
  %278 = load i64, i64* %250, align 8
  %279 = ptrtoint %"struct.std::__1::pair.1075"** %277 to i64
  %280 = sub i64 %278, %279
  %281 = ashr exact i64 %280, 3
  %282 = icmp ugt i64 %281, 2
  br i1 %282, label %272, label %283

283:                                              ; preds = %272
  %284 = inttoptr i64 %278 to %"struct.std::__1::pair.1075"**
  br label %285

285:                                              ; preds = %283, %248
  %286 = phi %"struct.std::__1::pair.1075"** [ %229, %248 ], [ %284, %283 ]
  %287 = phi %"struct.std::__1::pair.1075"** [ %223, %248 ], [ %277, %283 ]
  %288 = phi i64 [ %252, %248 ], [ %281, %283 ]
  switch i64 %288, label %292 [
    i64 1, label %290
    i64 2, label %289
  ]

289:                                              ; preds = %285
  br label %290

290:                                              ; preds = %285, %289
  %291 = phi i64 [ 256, %289 ], [ 128, %285 ]
  store i64 %291, i64* %224, align 8
  br label %292

292:                                              ; preds = %290, %285
  %293 = icmp eq %"struct.std::__1::pair.1075"** %287, %286
  br i1 %293, label %312, label %294

294:                                              ; preds = %292, %294
  %295 = phi %"struct.std::__1::pair.1075"** [ %298, %294 ], [ %287, %292 ]
  %296 = bitcast %"struct.std::__1::pair.1075"** %295 to i8**
  %297 = load i8*, i8** %296, align 8
  call void @_ZdlPv(i8* %297) #12
  %298 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %295, i64 1
  %299 = icmp eq %"struct.std::__1::pair.1075"** %298, %286
  br i1 %299, label %300, label %294

300:                                              ; preds = %294
  %301 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %222, align 8
  %302 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %228, align 8
  %303 = icmp eq %"struct.std::__1::pair.1075"** %302, %301
  br i1 %303, label %312, label %304

304:                                              ; preds = %300
  %305 = ptrtoint %"struct.std::__1::pair.1075"** %301 to i64
  %306 = getelementptr %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %302, i64 -1
  %307 = ptrtoint %"struct.std::__1::pair.1075"** %306 to i64
  %308 = sub i64 %307, %305
  %309 = lshr i64 %308, 3
  %310 = xor i64 %309, -1
  %311 = getelementptr %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %302, i64 %310
  store %"struct.std::__1::pair.1075"** %311, %"struct.std::__1::pair.1075"*** %228, align 8
  br label %312

312:                                              ; preds = %304, %300, %292
  %313 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %314 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %313, align 8
  %315 = icmp eq %"struct.std::__1::pair.1075"** %314, null
  br i1 %315, label %318, label %316

316:                                              ; preds = %312
  %317 = bitcast %"struct.std::__1::pair.1075"** %314 to i8*
  call void @_ZdlPv(i8* %317) #12
  br label %318

318:                                              ; preds = %312, %316
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %202) #13
  %319 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %320 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %319, align 8
  %321 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %4, i64 0, i32 1, i32 0, i32 0, i32 1
  %322 = load i64, i64* %321, align 8
  %323 = lshr i64 %322, 8
  %324 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %320, i64 %323
  %325 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %326 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %325, align 8
  %327 = icmp eq %"struct.std::__1::pair.1075"** %326, %320
  %328 = ptrtoint %"struct.std::__1::pair.1075"** %326 to i64
  %329 = ptrtoint %"struct.std::__1::pair.1075"** %320 to i64
  br i1 %327, label %330, label %332

330:                                              ; preds = %318
  %331 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %4, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %345

332:                                              ; preds = %318
  %333 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %324, align 8
  %334 = and i64 %322, 255
  %335 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %333, i64 %334
  %336 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %4, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %337 = load i64, i64* %336, align 8
  %338 = add i64 %337, %322
  %339 = lshr i64 %338, 8
  %340 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %320, i64 %339
  %341 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %340, align 8
  %342 = and i64 %338, 255
  %343 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %341, i64 %342
  %344 = icmp eq %"struct.std::__1::pair.1075"* %343, %335
  br i1 %344, label %345, label %351

345:                                              ; preds = %364, %332, %330
  %346 = phi i64* [ %331, %330 ], [ %336, %332 ], [ %336, %364 ]
  store i64 0, i64* %346, align 8
  %347 = bitcast %"struct.std::__1::pair.1075"*** %325 to i64*
  %348 = sub i64 %328, %329
  %349 = ashr exact i64 %348, 3
  %350 = icmp ugt i64 %349, 2
  br i1 %350, label %369, label %382

351:                                              ; preds = %332, %364
  %352 = phi %"struct.std::__1::pair.1075"* [ %367, %364 ], [ %335, %332 ]
  %353 = phi %"struct.std::__1::pair.1075"** [ %366, %364 ], [ %324, %332 ]
  %354 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %352, i64 1
  %355 = ptrtoint %"struct.std::__1::pair.1075"* %354 to i64
  %356 = bitcast %"struct.std::__1::pair.1075"** %353 to i64*
  %357 = load i64, i64* %356, align 8
  %358 = sub i64 %355, %357
  %359 = icmp eq i64 %358, 4096
  br i1 %359, label %360, label %364

360:                                              ; preds = %351
  %361 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %353, i64 1
  %362 = bitcast %"struct.std::__1::pair.1075"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  br label %364

364:                                              ; preds = %360, %351
  %365 = phi i64 [ %363, %360 ], [ %355, %351 ]
  %366 = phi %"struct.std::__1::pair.1075"** [ %361, %360 ], [ %353, %351 ]
  %367 = inttoptr i64 %365 to %"struct.std::__1::pair.1075"*
  %368 = icmp eq %"struct.std::__1::pair.1075"* %343, %367
  br i1 %368, label %345, label %351

369:                                              ; preds = %345, %369
  %370 = phi %"struct.std::__1::pair.1075"** [ %374, %369 ], [ %320, %345 ]
  %371 = bitcast %"struct.std::__1::pair.1075"** %370 to i8**
  %372 = load i8*, i8** %371, align 8
  call void @_ZdlPv(i8* %372) #12
  %373 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %319, align 8
  %374 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %373, i64 1
  store %"struct.std::__1::pair.1075"** %374, %"struct.std::__1::pair.1075"*** %319, align 8
  %375 = load i64, i64* %347, align 8
  %376 = ptrtoint %"struct.std::__1::pair.1075"** %374 to i64
  %377 = sub i64 %375, %376
  %378 = ashr exact i64 %377, 3
  %379 = icmp ugt i64 %378, 2
  br i1 %379, label %369, label %380

380:                                              ; preds = %369
  %381 = inttoptr i64 %375 to %"struct.std::__1::pair.1075"**
  br label %382

382:                                              ; preds = %380, %345
  %383 = phi %"struct.std::__1::pair.1075"** [ %326, %345 ], [ %381, %380 ]
  %384 = phi %"struct.std::__1::pair.1075"** [ %320, %345 ], [ %374, %380 ]
  %385 = phi i64 [ %349, %345 ], [ %378, %380 ]
  switch i64 %385, label %389 [
    i64 1, label %387
    i64 2, label %386
  ]

386:                                              ; preds = %382
  br label %387

387:                                              ; preds = %382, %386
  %388 = phi i64 [ 256, %386 ], [ 128, %382 ]
  store i64 %388, i64* %321, align 8
  br label %389

389:                                              ; preds = %387, %382
  %390 = icmp eq %"struct.std::__1::pair.1075"** %384, %383
  br i1 %390, label %409, label %391

391:                                              ; preds = %389, %391
  %392 = phi %"struct.std::__1::pair.1075"** [ %395, %391 ], [ %384, %389 ]
  %393 = bitcast %"struct.std::__1::pair.1075"** %392 to i8**
  %394 = load i8*, i8** %393, align 8
  call void @_ZdlPv(i8* %394) #12
  %395 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %392, i64 1
  %396 = icmp eq %"struct.std::__1::pair.1075"** %395, %383
  br i1 %396, label %397, label %391

397:                                              ; preds = %391
  %398 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %319, align 8
  %399 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %325, align 8
  %400 = icmp eq %"struct.std::__1::pair.1075"** %399, %398
  br i1 %400, label %409, label %401

401:                                              ; preds = %397
  %402 = ptrtoint %"struct.std::__1::pair.1075"** %398 to i64
  %403 = getelementptr %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %399, i64 -1
  %404 = ptrtoint %"struct.std::__1::pair.1075"** %403 to i64
  %405 = sub i64 %404, %402
  %406 = lshr i64 %405, 3
  %407 = xor i64 %406, -1
  %408 = getelementptr %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %399, i64 %407
  store %"struct.std::__1::pair.1075"** %408, %"struct.std::__1::pair.1075"*** %325, align 8
  br label %409

409:                                              ; preds = %401, %397, %389
  %410 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %411 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %410, align 8
  %412 = icmp eq %"struct.std::__1::pair.1075"** %411, null
  br i1 %412, label %415, label %413

413:                                              ; preds = %409
  %414 = bitcast %"struct.std::__1::pair.1075"** %411 to i8*
  call void @_ZdlPv(i8* %414) #12
  br label %415

415:                                              ; preds = %413, %409
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %174) #13
  br i1 %183, label %427, label %416

416:                                              ; preds = %415
  %417 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %181, align 8
  %418 = and i64 %168, 255
  %419 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %417, i64 %418
  %420 = add i64 %167, %168
  %421 = lshr i64 %420, 8
  %422 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %179, i64 %421
  %423 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %422, align 8
  %424 = and i64 %420, 255
  %425 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %423, i64 %424
  %426 = icmp eq %"struct.std::__1::pair.1075"* %425, %419
  br i1 %426, label %427, label %431

427:                                              ; preds = %444, %415, %416
  %428 = sub i64 %169, %170
  %429 = ashr exact i64 %428, 3
  %430 = icmp ugt i64 %429, 2
  br i1 %430, label %449, label %458

431:                                              ; preds = %416, %444
  %432 = phi %"struct.std::__1::pair.1075"* [ %447, %444 ], [ %419, %416 ]
  %433 = phi %"struct.std::__1::pair.1075"** [ %446, %444 ], [ %181, %416 ]
  %434 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %432, i64 1
  %435 = ptrtoint %"struct.std::__1::pair.1075"* %434 to i64
  %436 = bitcast %"struct.std::__1::pair.1075"** %433 to i64*
  %437 = load i64, i64* %436, align 8
  %438 = sub i64 %435, %437
  %439 = icmp eq i64 %438, 4096
  br i1 %439, label %440, label %444

440:                                              ; preds = %431
  %441 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %433, i64 1
  %442 = bitcast %"struct.std::__1::pair.1075"** %441 to i64*
  %443 = load i64, i64* %442, align 8
  br label %444

444:                                              ; preds = %440, %431
  %445 = phi i64 [ %443, %440 ], [ %435, %431 ]
  %446 = phi %"struct.std::__1::pair.1075"** [ %441, %440 ], [ %433, %431 ]
  %447 = inttoptr i64 %445 to %"struct.std::__1::pair.1075"*
  %448 = icmp eq %"struct.std::__1::pair.1075"* %425, %447
  br i1 %448, label %427, label %431

449:                                              ; preds = %427, %449
  %450 = phi %"struct.std::__1::pair.1075"** [ %453, %449 ], [ %179, %427 ]
  %451 = bitcast %"struct.std::__1::pair.1075"** %450 to i8**
  %452 = load i8*, i8** %451, align 8
  call void @_ZdlPv(i8* %452) #12
  %453 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %450, i64 1
  %454 = ptrtoint %"struct.std::__1::pair.1075"** %453 to i64
  %455 = sub i64 %169, %454
  %456 = ashr exact i64 %455, 3
  %457 = icmp ugt i64 %456, 2
  br i1 %457, label %449, label %458

458:                                              ; preds = %449, %427
  %459 = phi %"struct.std::__1::pair.1075"** [ %179, %427 ], [ %453, %449 ]
  %460 = icmp eq %"struct.std::__1::pair.1075"** %459, %182
  br i1 %460, label %467, label %461

461:                                              ; preds = %458, %461
  %462 = phi %"struct.std::__1::pair.1075"** [ %465, %461 ], [ %459, %458 ]
  %463 = bitcast %"struct.std::__1::pair.1075"** %462 to i8**
  %464 = load i8*, i8** %463, align 8
  call void @_ZdlPv(i8* %464) #12
  %465 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %462, i64 1
  %466 = icmp eq %"struct.std::__1::pair.1075"** %465, %182
  br i1 %466, label %467, label %461

467:                                              ; preds = %461, %458
  %468 = icmp eq %"struct.std::__1::pair.1075"** %172, null
  br i1 %468, label %470, label %469

469:                                              ; preds = %467
  call void @_ZdlPv(i8* %171) #12
  br label %470

470:                                              ; preds = %469, %467
  ret %"class.spvtools::opt::Loop"* %1

471:                                              ; preds = %210, %540
  %472 = phi %"class.spvtools::opt::Loop"* [ %206, %210 ], [ %541, %540 ]
  %473 = ptrtoint %"class.spvtools::opt::Loop"* %472 to i64
  %474 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %211, align 8
  %475 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %212, align 8
  %476 = icmp ult %"class.spvtools::opt::Loop"** %474, %475
  %477 = ptrtoint %"class.spvtools::opt::Loop"** %475 to i64
  br i1 %476, label %478, label %482

478:                                              ; preds = %471
  %479 = bitcast %"class.spvtools::opt::Loop"** %474 to i64*
  store i64 %473, i64* %479, align 8
  %480 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %474, i64 1
  %481 = ptrtoint %"class.spvtools::opt::Loop"** %480 to i64
  store i64 %481, i64* %213, align 8
  br label %535

482:                                              ; preds = %471
  %483 = ptrtoint %"class.spvtools::opt::Loop"** %474 to i64
  %484 = load i64, i64* %214, align 8
  %485 = sub i64 %483, %484
  %486 = ashr exact i64 %485, 3
  %487 = add nsw i64 %486, 1
  %488 = icmp ugt i64 %487, 2305843009213693951
  br i1 %488, label %489, label %491

489:                                              ; preds = %482
  %490 = bitcast %"class.spvtools::opt::LoopDescriptor"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %490) #14
  unreachable

491:                                              ; preds = %482
  %492 = sub i64 %477, %484
  %493 = ashr exact i64 %492, 3
  %494 = icmp ult i64 %493, 1152921504606846975
  br i1 %494, label %495, label %503

495:                                              ; preds = %491
  %496 = ashr exact i64 %492, 2
  %497 = icmp ult i64 %496, %487
  %498 = select i1 %497, i64 %487, i64 %496
  %499 = icmp eq i64 %498, 0
  br i1 %499, label %508, label %500

500:                                              ; preds = %495
  %501 = icmp ugt i64 %498, 2305843009213693951
  br i1 %501, label %502, label %503

502:                                              ; preds = %500
  call void @abort() #14
  unreachable

503:                                              ; preds = %500, %491
  %504 = phi i64 [ %498, %500 ], [ 2305843009213693951, %491 ]
  %505 = shl i64 %504, 3
  %506 = call i8* @_Znwm(i64 %505) #12
  %507 = bitcast i8* %506 to %"class.spvtools::opt::Loop"**
  br label %508

508:                                              ; preds = %503, %495
  %509 = phi i64 [ %504, %503 ], [ 0, %495 ]
  %510 = phi %"class.spvtools::opt::Loop"** [ %507, %503 ], [ null, %495 ]
  %511 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %510, i64 %486
  %512 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %510, i64 %509
  %513 = ptrtoint %"class.spvtools::opt::Loop"** %512 to i64
  %514 = bitcast %"class.spvtools::opt::Loop"** %511 to i64*
  store i64 %473, i64* %514, align 8
  %515 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %511, i64 1
  %516 = ptrtoint %"class.spvtools::opt::Loop"** %515 to i64
  %517 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %216, align 8
  %518 = load i64, i64* %213, align 8
  %519 = ptrtoint %"class.spvtools::opt::Loop"** %517 to i64
  %520 = sub i64 %518, %519
  %521 = ashr exact i64 %520, 3
  %522 = sub nsw i64 0, %521
  %523 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %511, i64 %522
  %524 = ptrtoint %"class.spvtools::opt::Loop"** %523 to i64
  %525 = icmp sgt i64 %520, 0
  br i1 %525, label %526, label %530

526:                                              ; preds = %508
  %527 = bitcast %"class.spvtools::opt::Loop"** %523 to i8*
  %528 = bitcast %"class.spvtools::opt::Loop"** %517 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %527, i8* align 8 %528, i64 %520, i1 false) #13
  %529 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %216, align 8
  br label %530

530:                                              ; preds = %526, %508
  %531 = phi %"class.spvtools::opt::Loop"** [ %517, %508 ], [ %529, %526 ]
  store i64 %524, i64* %214, align 8
  store i64 %516, i64* %213, align 8
  store i64 %513, i64* %215, align 8
  %532 = icmp eq %"class.spvtools::opt::Loop"** %531, null
  br i1 %532, label %535, label %533

533:                                              ; preds = %530
  %534 = bitcast %"class.spvtools::opt::Loop"** %531 to i8*
  call void @_ZdlPv(i8* %534) #12
  br label %535

535:                                              ; preds = %478, %530, %533
  %536 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %472, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %537 = bitcast %"struct.std::__1::__hash_node_base.922"** %536 to i64*
  %538 = load i64, i64* %537, align 8
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %540, label %544

540:                                              ; preds = %544, %535
  call void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator.1070"* nonnull %4) #13
  %541 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %205, align 8
  %542 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %207, align 8
  %543 = icmp eq %"class.spvtools::opt::Loop"* %541, %542
  br i1 %543, label %221, label %471

544:                                              ; preds = %535, %544
  %545 = phi i64 [ %551, %544 ], [ %538, %535 ]
  %546 = inttoptr i64 %545 to %"struct.std::__1::__hash_node.1195"*
  %547 = getelementptr inbounds %"struct.std::__1::__hash_node.1195", %"struct.std::__1::__hash_node.1195"* %546, i64 0, i32 2
  %548 = load i32, i32* %547, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %217) #13
  store i32 %548, i32* %218, align 8
  store %"class.spvtools::opt::Loop"* %472, %"class.spvtools::opt::Loop"** %219, align 8
  %549 = call { %"struct.std::__1::__hash_node_base.1009"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJNS_4pairIjS5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1005"* %220, i32* nonnull dereferenceable(4) %218, %"struct.std::__1::pair.1060"* nonnull dereferenceable(16) %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %217) #13
  %550 = inttoptr i64 %545 to i64*
  %551 = load i64, i64* %550, align 8
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %540, label %544
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt14LoopDescriptor10RemoveLoopEPNS0_4LoopE(%"class.spvtools::opt::LoopDescriptor"*, %"class.spvtools::opt::Loop"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1164", align 8
  %4 = alloca %"class.std::__1::tuple.1138", align 1
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 6
  %8 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %7, align 8
  %9 = icmp eq %"class.spvtools::opt::Loop"* %8, null
  %10 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 1
  %11 = select i1 %9, %"class.spvtools::opt::Loop"* %10, %"class.spvtools::opt::Loop"* %8
  %12 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %11, i64 0, i32 7
  %13 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %12, i64 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %11, i64 0, i32 7, i32 0, i32 1
  %16 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %15, align 8
  %17 = icmp eq %"class.spvtools::opt::Loop"** %14, %16
  %18 = ptrtoint %"class.spvtools::opt::Loop"** %16 to i64
  br i1 %17, label %26, label %19

19:                                               ; preds = %2, %23
  %20 = phi %"class.spvtools::opt::Loop"** [ %24, %23 ], [ %14, %2 ]
  %21 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %20, align 8
  %22 = icmp eq %"class.spvtools::opt::Loop"* %21, %1
  br i1 %22, label %26, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %20, i64 1
  %25 = icmp eq %"class.spvtools::opt::Loop"** %24, %16
  br i1 %25, label %26, label %19

26:                                               ; preds = %19, %23, %2
  %27 = phi %"class.spvtools::opt::Loop"** [ %14, %2 ], [ %20, %19 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %27, i64 1
  %29 = ptrtoint %"class.spvtools::opt::Loop"** %28 to i64
  %30 = sub i64 %18, %29
  %31 = ashr exact i64 %30, 3
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %26
  %34 = bitcast %"class.spvtools::opt::Loop"** %27 to i8*
  %35 = bitcast %"class.spvtools::opt::Loop"** %28 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 %30, i1 false) #13
  br label %36

36:                                               ; preds = %26, %33
  %37 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %27, i64 %31
  store %"class.spvtools::opt::Loop"** %37, %"class.spvtools::opt::Loop"*** %15, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 7, i32 0, i32 0
  %39 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %38, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 7, i32 0, i32 1
  %41 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::Loop"** %39, %41
  br i1 %42, label %113, label %43

43:                                               ; preds = %36
  %44 = ptrtoint %"class.spvtools::opt::Loop"** %39 to i64
  %45 = bitcast %"class.spvtools::opt::Loop"** %7 to i64*
  %46 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %41, i64 -1
  %47 = ptrtoint %"class.spvtools::opt::Loop"** %46 to i64
  %48 = sub i64 %47, %44
  %49 = lshr i64 %48, 3
  %50 = add nuw nsw i64 %49, 1
  %51 = and i64 %50, 7
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %43, %53
  %54 = phi %"class.spvtools::opt::Loop"** [ %60, %53 ], [ %39, %43 ]
  %55 = phi i64 [ %61, %53 ], [ %51, %43 ]
  %56 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %54, align 8
  %57 = load i64, i64* %45, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %56, i64 0, i32 6
  %59 = bitcast %"class.spvtools::opt::Loop"** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %54, i64 1
  %61 = add i64 %55, -1
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %53, !llvm.loop !67

63:                                               ; preds = %53, %43
  %64 = phi %"class.spvtools::opt::Loop"** [ %39, %43 ], [ %60, %53 ]
  %65 = icmp ult i64 %48, 56
  br i1 %65, label %109, label %66

66:                                               ; preds = %63, %66
  %67 = phi %"class.spvtools::opt::Loop"** [ %107, %66 ], [ %64, %63 ]
  %68 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %67, align 8
  %69 = load i64, i64* %45, align 8
  %70 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %68, i64 0, i32 6
  %71 = bitcast %"class.spvtools::opt::Loop"** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %67, i64 1
  %73 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %72, align 8
  %74 = load i64, i64* %45, align 8
  %75 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %73, i64 0, i32 6
  %76 = bitcast %"class.spvtools::opt::Loop"** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %67, i64 2
  %78 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %77, align 8
  %79 = load i64, i64* %45, align 8
  %80 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %78, i64 0, i32 6
  %81 = bitcast %"class.spvtools::opt::Loop"** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %67, i64 3
  %83 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %82, align 8
  %84 = load i64, i64* %45, align 8
  %85 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %83, i64 0, i32 6
  %86 = bitcast %"class.spvtools::opt::Loop"** %85 to i64*
  store i64 %84, i64* %86, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %67, i64 4
  %88 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %87, align 8
  %89 = load i64, i64* %45, align 8
  %90 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %88, i64 0, i32 6
  %91 = bitcast %"class.spvtools::opt::Loop"** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %67, i64 5
  %93 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %92, align 8
  %94 = load i64, i64* %45, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %93, i64 0, i32 6
  %96 = bitcast %"class.spvtools::opt::Loop"** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %67, i64 6
  %98 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %97, align 8
  %99 = load i64, i64* %45, align 8
  %100 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %98, i64 0, i32 6
  %101 = bitcast %"class.spvtools::opt::Loop"** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %67, i64 7
  %103 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %102, align 8
  %104 = load i64, i64* %45, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %103, i64 0, i32 6
  %106 = bitcast %"class.spvtools::opt::Loop"** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %67, i64 8
  %108 = icmp eq %"class.spvtools::opt::Loop"** %107, %41
  br i1 %108, label %109, label %66

109:                                              ; preds = %66, %63
  %110 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %15, align 8
  %111 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %38, align 8
  %112 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %40, align 8
  br label %113

113:                                              ; preds = %109, %36
  %114 = phi %"class.spvtools::opt::Loop"** [ %112, %109 ], [ %39, %36 ]
  %115 = phi %"class.spvtools::opt::Loop"** [ %111, %109 ], [ %39, %36 ]
  %116 = phi %"class.spvtools::opt::Loop"** [ %110, %109 ], [ %37, %36 ]
  %117 = tail call %"class.spvtools::opt::Loop"** @_ZNSt3__16vectorIPN8spvtools3opt4LoopENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.910"* %12, %"class.spvtools::opt::Loop"** %116, %"class.spvtools::opt::Loop"** %115, %"class.spvtools::opt::Loop"** %114)
  %118 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.922"** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %132, label %122

122:                                              ; preds = %113
  %123 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = bitcast i32* %6 to i8*
  %126 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 2, i32 0
  %127 = bitcast i32* %5 to i8*
  %128 = bitcast %"class.std::__1::tuple.1164"* %3 to i8*
  %129 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %3, i64 0, i32 0, i32 0, i32 0
  %130 = getelementptr inbounds %"class.std::__1::tuple.1138", %"class.std::__1::tuple.1138"* %4, i64 0, i32 0
  %131 = bitcast %"class.spvtools::opt::Loop"** %7 to i64*
  br label %149

132:                                              ; preds = %219, %113
  %133 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %133, align 8
  %135 = getelementptr inbounds %"class.spvtools::opt::LoopDescriptor", %"class.spvtools::opt::LoopDescriptor"* %0, i64 0, i32 0, i32 0, i32 1
  %136 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %135, align 8
  %137 = icmp eq %"class.spvtools::opt::Loop"** %134, %136
  %138 = ptrtoint %"class.spvtools::opt::Loop"** %136 to i64
  br i1 %137, label %146, label %139

139:                                              ; preds = %132, %143
  %140 = phi %"class.spvtools::opt::Loop"** [ %144, %143 ], [ %134, %132 ]
  %141 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %140, align 8
  %142 = icmp eq %"class.spvtools::opt::Loop"* %141, %1
  br i1 %142, label %146, label %143

143:                                              ; preds = %139
  %144 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %140, i64 1
  %145 = icmp eq %"class.spvtools::opt::Loop"** %144, %136
  br i1 %145, label %146, label %139

146:                                              ; preds = %139, %143, %132
  %147 = phi %"class.spvtools::opt::Loop"** [ %134, %132 ], [ %140, %139 ], [ %136, %143 ]
  %148 = icmp eq %"class.spvtools::opt::Loop"* %1, null
  br i1 %148, label %250, label %224

149:                                              ; preds = %122, %219
  %150 = phi i64 [ %120, %122 ], [ %222, %219 ]
  %151 = inttoptr i64 %150 to %"struct.std::__1::__hash_node.1195"*
  %152 = getelementptr inbounds %"struct.std::__1::__hash_node.1195", %"struct.std::__1::__hash_node.1195"* %151, i64 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = zext i32 %153 to i64
  %155 = load i64, i64* %123, align 8
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %208, label %157

157:                                              ; preds = %149
  %158 = call i64 @llvm.ctpop.i64(i64 %155) #13, !range !3
  %159 = icmp ugt i64 %158, 1
  br i1 %159, label %163, label %160

160:                                              ; preds = %157
  %161 = add i64 %155, 4294967295
  %162 = and i64 %161, %154
  br label %167

163:                                              ; preds = %157
  %164 = icmp ugt i64 %155, %154
  br i1 %164, label %167, label %165

165:                                              ; preds = %163
  %166 = urem i64 %154, %155
  br label %167

167:                                              ; preds = %165, %163, %160
  %168 = phi i64 [ %162, %160 ], [ %166, %165 ], [ %154, %163 ]
  %169 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %124, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %169, i64 %168
  %171 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %170, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %171, null
  br i1 %172, label %208, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %171, i64 0, i32 0
  %175 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %174, align 8
  %176 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %175, null
  br i1 %176, label %208, label %177

177:                                              ; preds = %173
  %178 = add i64 %155, -1
  br label %179

179:                                              ; preds = %200, %177
  %180 = phi %"struct.std::__1::__hash_node_base.1009"* [ %175, %177 ], [ %202, %200 ]
  %181 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %180, i64 1
  %182 = bitcast %"struct.std::__1::__hash_node_base.1009"* %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = icmp eq i64 %183, %154
  br i1 %184, label %195, label %185

185:                                              ; preds = %179
  br i1 %159, label %188, label %186

186:                                              ; preds = %185
  %187 = and i64 %183, %178
  br label %192

188:                                              ; preds = %185
  %189 = icmp ult i64 %183, %155
  br i1 %189, label %192, label %190

190:                                              ; preds = %188
  %191 = urem i64 %183, %155
  br label %192

192:                                              ; preds = %190, %188, %186
  %193 = phi i64 [ %187, %186 ], [ %191, %190 ], [ %183, %188 ]
  %194 = icmp eq i64 %193, %168
  br i1 %194, label %200, label %208

195:                                              ; preds = %179
  %196 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %180, i64 2
  %197 = bitcast %"struct.std::__1::__hash_node_base.1009"* %196 to i32*
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %198, %153
  br i1 %199, label %204, label %200

200:                                              ; preds = %195, %192
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %180, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %201, align 8
  %203 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %202, null
  br i1 %203, label %208, label %179

204:                                              ; preds = %195
  %205 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %180, i64 3
  %206 = bitcast %"struct.std::__1::__hash_node_base.1009"* %205 to %"class.spvtools::opt::Loop"**
  %207 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %206, align 8
  br label %208

208:                                              ; preds = %192, %200, %149, %167, %173, %204
  %209 = phi %"class.spvtools::opt::Loop"* [ %207, %204 ], [ null, %167 ], [ null, %149 ], [ null, %173 ], [ null, %200 ], [ null, %192 ]
  %210 = icmp eq %"class.spvtools::opt::Loop"* %209, %1
  br i1 %210, label %211, label %217

211:                                              ; preds = %208
  %212 = load i64, i64* %131, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %127)
  store i32 %153, i32* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #13
  store i32* %5, i32** %129, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %130) #13
  %213 = call { %"struct.std::__1::__hash_node_base.1009"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1005"* %126, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1164"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1138"* nonnull dereferenceable(1) %4) #13
  %214 = extractvalue { %"struct.std::__1::__hash_node_base.1009"*, i8 } %213, 0
  %215 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %214, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %130) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #13
  %216 = bitcast %"struct.std::__1::__hash_node_base.1009"* %215 to i64*
  store i64 %212, i64* %216, align 8
  br label %219

217:                                              ; preds = %208
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %125)
  store i32 %153, i32* %6, align 4
  %218 = call i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.1005"* %126, i32* nonnull dereferenceable(4) %6) #13
  br label %219

219:                                              ; preds = %217, %211
  %220 = phi i8* [ %125, %217 ], [ %127, %211 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %220)
  %221 = inttoptr i64 %150 to i64*
  %222 = load i64, i64* %221, align 8
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %132, label %149

224:                                              ; preds = %146
  %225 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %118, align 8
  %226 = icmp eq %"struct.std::__1::__hash_node_base.922"* %225, null
  br i1 %226, label %233, label %227

227:                                              ; preds = %224, %227
  %228 = phi %"struct.std::__1::__hash_node_base.922"* [ %230, %227 ], [ %225, %224 ]
  %229 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %228, i64 0, i32 0
  %230 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %229, align 8
  %231 = bitcast %"struct.std::__1::__hash_node_base.922"* %228 to i8*
  call void @_ZdlPv(i8* %231) #12
  %232 = icmp eq %"struct.std::__1::__hash_node_base.922"* %230, null
  br i1 %232, label %233, label %227

233:                                              ; preds = %227, %224
  %234 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %234, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %234, align 8
  %236 = icmp eq %"struct.std::__1::__hash_node_base.922"** %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %233
  %238 = bitcast %"struct.std::__1::__hash_node_base.922"** %235 to i8*
  call void @_ZdlPv(i8* %238) #12
  br label %239

239:                                              ; preds = %237, %233
  %240 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %38, align 8
  %241 = icmp eq %"class.spvtools::opt::Loop"** %240, null
  br i1 %241, label %246, label %242

242:                                              ; preds = %239
  %243 = ptrtoint %"class.spvtools::opt::Loop"** %240 to i64
  %244 = bitcast %"class.spvtools::opt::Loop"*** %40 to i64*
  store i64 %243, i64* %244, align 8
  %245 = bitcast %"class.spvtools::opt::Loop"** %240 to i8*
  call void @_ZdlPv(i8* %245) #12
  br label %246

246:                                              ; preds = %239, %242
  %247 = bitcast %"class.spvtools::opt::Loop"* %1 to i8*
  call void @_ZdlPv(i8* %247) #12
  %248 = bitcast %"class.spvtools::opt::Loop"*** %135 to i64*
  %249 = load i64, i64* %248, align 8
  br label %250

250:                                              ; preds = %146, %246
  %251 = phi i64 [ %249, %246 ], [ %138, %146 ]
  %252 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %147, i64 1
  %253 = ptrtoint %"class.spvtools::opt::Loop"** %252 to i64
  %254 = sub i64 %251, %253
  %255 = ashr exact i64 %254, 3
  %256 = icmp eq i64 %254, 0
  br i1 %256, label %260, label %257

257:                                              ; preds = %250
  %258 = bitcast %"class.spvtools::opt::Loop"** %147 to i8*
  %259 = bitcast %"class.spvtools::opt::Loop"** %252 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %258, i8* align 8 %259, i64 %254, i1 false) #13
  br label %260

260:                                              ; preds = %250, %257
  %261 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %147, i64 %255
  store %"class.spvtools::opt::Loop"** %261, %"class.spvtools::opt::Loop"*** %135, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Loop"** @_ZNSt3__16vectorIPN8spvtools3opt4LoopENS_9allocatorIS4_EEE6insertINS_11__wrap_iterIPS4_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS4_NS_15iterator_traitsISD_E9referenceEEE5valueESB_E4typeENS9_IPKS4_EESD_SD_(%"class.std::__1::vector.910"*, %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"**) local_unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.spvtools::opt::Loop"** %2 to i8*
  %6 = bitcast %"class.spvtools::opt::Loop"** %1 to i8*
  %7 = ptrtoint %"class.spvtools::opt::Loop"** %1 to i64
  %8 = ptrtoint %"class.spvtools::opt::Loop"** %2 to i64
  %9 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %0, i64 0, i32 0, i32 0
  %10 = ptrtoint %"class.spvtools::opt::Loop"** %3 to i64
  %11 = sub i64 %10, %8
  %12 = ashr exact i64 %11, 3
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %772

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.spvtools::opt::Loop"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.910", %"class.std::__1::vector.910"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %18, align 8
  %20 = ptrtoint %"class.spvtools::opt::Loop"** %19 to i64
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 3
  %23 = icmp sgt i64 %12, %22
  %24 = bitcast %"class.spvtools::opt::Loop"*** %18 to i64*
  br i1 %23, label %359, label %25

25:                                               ; preds = %14
  %26 = sub i64 %20, %7
  %27 = ashr exact i64 %26, 3
  %28 = icmp sgt i64 %12, %27
  br i1 %28, label %29, label %214

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, i64 %27
  %31 = icmp eq %"class.spvtools::opt::Loop"** %30, %3
  br i1 %31, label %209, label %32

32:                                               ; preds = %29
  %33 = xor i64 %27, -1
  %34 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, i64 %33
  %35 = ptrtoint %"class.spvtools::opt::Loop"** %34 to i64
  %36 = sub i64 %35, %8
  %37 = lshr i64 %36, 3
  %38 = add nuw nsw i64 %37, 1
  %39 = icmp ult i64 %38, 4
  br i1 %39, label %135, label %40

40:                                               ; preds = %32
  %41 = xor i64 %27, -1
  %42 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, i64 %41
  %43 = ptrtoint %"class.spvtools::opt::Loop"** %42 to i64
  %44 = sub i64 %43, %8
  %45 = lshr i64 %44, 3
  %46 = add nuw nsw i64 %45, 1
  %47 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %19, i64 %46
  %48 = add nsw i64 %27, %45
  %49 = add nsw i64 %48, 1
  %50 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, i64 %49
  %51 = icmp ult %"class.spvtools::opt::Loop"** %19, %50
  %52 = icmp ult %"class.spvtools::opt::Loop"** %30, %47
  %53 = and i1 %51, %52
  br i1 %53, label %135, label %54

54:                                               ; preds = %40
  %55 = and i64 %38, 4611686018427387900
  %56 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %19, i64 %55
  %57 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %30, i64 %55
  %58 = add nsw i64 %55, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 12
  br i1 %62, label %114, label %63

63:                                               ; preds = %54
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %19, i64 %66
  %69 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %30, i64 %66
  %70 = bitcast %"class.spvtools::opt::Loop"** %69 to <2 x i64>*
  %71 = load <2 x i64>, <2 x i64>* %70, align 8, !alias.scope !68
  %72 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %69, i64 2
  %73 = bitcast %"class.spvtools::opt::Loop"** %72 to <2 x i64>*
  %74 = load <2 x i64>, <2 x i64>* %73, align 8, !alias.scope !68
  %75 = bitcast %"class.spvtools::opt::Loop"** %68 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %75, align 8, !alias.scope !71, !noalias !68
  %76 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %68, i64 2
  %77 = bitcast %"class.spvtools::opt::Loop"** %76 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %77, align 8, !alias.scope !71, !noalias !68
  %78 = or i64 %66, 4
  %79 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %19, i64 %78
  %80 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %30, i64 %78
  %81 = bitcast %"class.spvtools::opt::Loop"** %80 to <2 x i64>*
  %82 = load <2 x i64>, <2 x i64>* %81, align 8, !alias.scope !68
  %83 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %80, i64 2
  %84 = bitcast %"class.spvtools::opt::Loop"** %83 to <2 x i64>*
  %85 = load <2 x i64>, <2 x i64>* %84, align 8, !alias.scope !68
  %86 = bitcast %"class.spvtools::opt::Loop"** %79 to <2 x i64>*
  store <2 x i64> %82, <2 x i64>* %86, align 8, !alias.scope !71, !noalias !68
  %87 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %79, i64 2
  %88 = bitcast %"class.spvtools::opt::Loop"** %87 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %88, align 8, !alias.scope !71, !noalias !68
  %89 = or i64 %66, 8
  %90 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %19, i64 %89
  %91 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %30, i64 %89
  %92 = bitcast %"class.spvtools::opt::Loop"** %91 to <2 x i64>*
  %93 = load <2 x i64>, <2 x i64>* %92, align 8, !alias.scope !68
  %94 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %91, i64 2
  %95 = bitcast %"class.spvtools::opt::Loop"** %94 to <2 x i64>*
  %96 = load <2 x i64>, <2 x i64>* %95, align 8, !alias.scope !68
  %97 = bitcast %"class.spvtools::opt::Loop"** %90 to <2 x i64>*
  store <2 x i64> %93, <2 x i64>* %97, align 8, !alias.scope !71, !noalias !68
  %98 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %90, i64 2
  %99 = bitcast %"class.spvtools::opt::Loop"** %98 to <2 x i64>*
  store <2 x i64> %96, <2 x i64>* %99, align 8, !alias.scope !71, !noalias !68
  %100 = or i64 %66, 12
  %101 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %19, i64 %100
  %102 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %30, i64 %100
  %103 = bitcast %"class.spvtools::opt::Loop"** %102 to <2 x i64>*
  %104 = load <2 x i64>, <2 x i64>* %103, align 8, !alias.scope !68
  %105 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %102, i64 2
  %106 = bitcast %"class.spvtools::opt::Loop"** %105 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8, !alias.scope !68
  %108 = bitcast %"class.spvtools::opt::Loop"** %101 to <2 x i64>*
  store <2 x i64> %104, <2 x i64>* %108, align 8, !alias.scope !71, !noalias !68
  %109 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %101, i64 2
  %110 = bitcast %"class.spvtools::opt::Loop"** %109 to <2 x i64>*
  store <2 x i64> %107, <2 x i64>* %110, align 8, !alias.scope !71, !noalias !68
  %111 = add i64 %66, 16
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !73

114:                                              ; preds = %65, %54
  %115 = phi i64 [ 0, %54 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %19, i64 %118
  %121 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %30, i64 %118
  %122 = bitcast %"class.spvtools::opt::Loop"** %121 to <2 x i64>*
  %123 = load <2 x i64>, <2 x i64>* %122, align 8, !alias.scope !68
  %124 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %121, i64 2
  %125 = bitcast %"class.spvtools::opt::Loop"** %124 to <2 x i64>*
  %126 = load <2 x i64>, <2 x i64>* %125, align 8, !alias.scope !68
  %127 = bitcast %"class.spvtools::opt::Loop"** %120 to <2 x i64>*
  store <2 x i64> %123, <2 x i64>* %127, align 8, !alias.scope !71, !noalias !68
  %128 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %120, i64 2
  %129 = bitcast %"class.spvtools::opt::Loop"** %128 to <2 x i64>*
  store <2 x i64> %126, <2 x i64>* %129, align 8, !alias.scope !71, !noalias !68
  %130 = add i64 %118, 4
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !75

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %38, %55
  br i1 %134, label %206, label %135

135:                                              ; preds = %133, %40, %32
  %136 = phi %"class.spvtools::opt::Loop"** [ %19, %40 ], [ %19, %32 ], [ %56, %133 ]
  %137 = phi %"class.spvtools::opt::Loop"** [ %30, %40 ], [ %30, %32 ], [ %57, %133 ]
  %138 = ptrtoint %"class.spvtools::opt::Loop"** %137 to i64
  %139 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %3, i64 -1
  %140 = ptrtoint %"class.spvtools::opt::Loop"** %139 to i64
  %141 = sub i64 %140, %138
  %142 = lshr i64 %141, 3
  %143 = add nuw nsw i64 %142, 1
  %144 = and i64 %143, 7
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %157, label %146

146:                                              ; preds = %135, %146
  %147 = phi %"class.spvtools::opt::Loop"** [ %154, %146 ], [ %136, %135 ]
  %148 = phi %"class.spvtools::opt::Loop"** [ %153, %146 ], [ %137, %135 ]
  %149 = phi i64 [ %155, %146 ], [ %144, %135 ]
  %150 = bitcast %"class.spvtools::opt::Loop"** %147 to i64*
  %151 = bitcast %"class.spvtools::opt::Loop"** %148 to i64*
  %152 = load i64, i64* %151, align 8
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %148, i64 1
  %154 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %147, i64 1
  %155 = add i64 %149, -1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %146, !llvm.loop !76

157:                                              ; preds = %146, %135
  %158 = phi %"class.spvtools::opt::Loop"** [ undef, %135 ], [ %154, %146 ]
  %159 = phi %"class.spvtools::opt::Loop"** [ %136, %135 ], [ %154, %146 ]
  %160 = phi %"class.spvtools::opt::Loop"** [ %137, %135 ], [ %153, %146 ]
  %161 = icmp ult i64 %141, 56
  br i1 %161, label %206, label %162

162:                                              ; preds = %157, %162
  %163 = phi %"class.spvtools::opt::Loop"** [ %204, %162 ], [ %159, %157 ]
  %164 = phi %"class.spvtools::opt::Loop"** [ %203, %162 ], [ %160, %157 ]
  %165 = bitcast %"class.spvtools::opt::Loop"** %163 to i64*
  %166 = bitcast %"class.spvtools::opt::Loop"** %164 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %165, align 8
  %168 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %164, i64 1
  %169 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %163, i64 1
  %170 = bitcast %"class.spvtools::opt::Loop"** %169 to i64*
  %171 = bitcast %"class.spvtools::opt::Loop"** %168 to i64*
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %170, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %164, i64 2
  %174 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %163, i64 2
  %175 = bitcast %"class.spvtools::opt::Loop"** %174 to i64*
  %176 = bitcast %"class.spvtools::opt::Loop"** %173 to i64*
  %177 = load i64, i64* %176, align 8
  store i64 %177, i64* %175, align 8
  %178 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %164, i64 3
  %179 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %163, i64 3
  %180 = bitcast %"class.spvtools::opt::Loop"** %179 to i64*
  %181 = bitcast %"class.spvtools::opt::Loop"** %178 to i64*
  %182 = load i64, i64* %181, align 8
  store i64 %182, i64* %180, align 8
  %183 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %164, i64 4
  %184 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %163, i64 4
  %185 = bitcast %"class.spvtools::opt::Loop"** %184 to i64*
  %186 = bitcast %"class.spvtools::opt::Loop"** %183 to i64*
  %187 = load i64, i64* %186, align 8
  store i64 %187, i64* %185, align 8
  %188 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %164, i64 5
  %189 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %163, i64 5
  %190 = bitcast %"class.spvtools::opt::Loop"** %189 to i64*
  %191 = bitcast %"class.spvtools::opt::Loop"** %188 to i64*
  %192 = load i64, i64* %191, align 8
  store i64 %192, i64* %190, align 8
  %193 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %164, i64 6
  %194 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %163, i64 6
  %195 = bitcast %"class.spvtools::opt::Loop"** %194 to i64*
  %196 = bitcast %"class.spvtools::opt::Loop"** %193 to i64*
  %197 = load i64, i64* %196, align 8
  store i64 %197, i64* %195, align 8
  %198 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %164, i64 7
  %199 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %163, i64 7
  %200 = bitcast %"class.spvtools::opt::Loop"** %199 to i64*
  %201 = bitcast %"class.spvtools::opt::Loop"** %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %200, align 8
  %203 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %164, i64 8
  %204 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %163, i64 8
  %205 = icmp eq %"class.spvtools::opt::Loop"** %203, %3
  br i1 %205, label %206, label %162, !llvm.loop !77

206:                                              ; preds = %157, %162, %133
  %207 = phi %"class.spvtools::opt::Loop"** [ %56, %133 ], [ %158, %157 ], [ %204, %162 ]
  %208 = ptrtoint %"class.spvtools::opt::Loop"** %207 to i64
  br label %209

209:                                              ; preds = %206, %29
  %210 = phi i64 [ %20, %29 ], [ %208, %206 ]
  store i64 %210, i64* %24, align 8
  %211 = icmp sgt i64 %26, 0
  br i1 %211, label %212, label %772

212:                                              ; preds = %209
  %213 = inttoptr i64 %210 to %"class.spvtools::opt::Loop"**
  br label %214

214:                                              ; preds = %212, %25
  %215 = phi i64 [ %210, %212 ], [ %20, %25 ]
  %216 = phi %"class.spvtools::opt::Loop"** [ %213, %212 ], [ %19, %25 ]
  %217 = phi %"class.spvtools::opt::Loop"** [ %30, %212 ], [ %3, %25 ]
  %218 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1, i64 %12
  %219 = ptrtoint %"class.spvtools::opt::Loop"** %218 to i64
  %220 = sub i64 %215, %219
  %221 = ashr exact i64 %220, 3
  %222 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1, i64 %221
  %223 = icmp ult %"class.spvtools::opt::Loop"** %222, %19
  br i1 %223, label %224, label %337

224:                                              ; preds = %214
  %225 = sub nsw i64 0, %221
  %226 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %19, i64 %225
  %227 = bitcast %"class.spvtools::opt::Loop"** %226 to i8*
  %228 = xor i64 %7, -1
  %229 = getelementptr i8, i8* %227, i64 %228
  %230 = ptrtoint i8* %229 to i64
  %231 = lshr i64 %230, 3
  %232 = add nuw nsw i64 %231, 1
  %233 = icmp ult i64 %232, 4
  br i1 %233, label %234, label %237

234:                                              ; preds = %332, %237, %224
  %235 = phi %"class.spvtools::opt::Loop"** [ %216, %237 ], [ %216, %224 ], [ %255, %332 ]
  %236 = phi %"class.spvtools::opt::Loop"** [ %222, %237 ], [ %222, %224 ], [ %256, %332 ]
  br label %345

237:                                              ; preds = %224
  %238 = sub nsw i64 0, %221
  %239 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %19, i64 %238
  %240 = bitcast %"class.spvtools::opt::Loop"** %239 to i8*
  %241 = xor i64 %7, -1
  %242 = getelementptr i8, i8* %240, i64 %241
  %243 = ptrtoint i8* %242 to i64
  %244 = lshr i64 %243, 3
  %245 = add nuw nsw i64 %244, 1
  %246 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %216, i64 %245
  %247 = add nsw i64 %221, %244
  %248 = add nsw i64 %247, 1
  %249 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1, i64 %248
  %250 = icmp ult %"class.spvtools::opt::Loop"** %216, %249
  %251 = icmp ult %"class.spvtools::opt::Loop"** %222, %246
  %252 = and i1 %250, %251
  br i1 %252, label %234, label %253

253:                                              ; preds = %237
  %254 = and i64 %232, 4611686018427387900
  %255 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %216, i64 %254
  %256 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %222, i64 %254
  %257 = add nsw i64 %254, -4
  %258 = lshr exact i64 %257, 2
  %259 = add nuw nsw i64 %258, 1
  %260 = and i64 %259, 3
  %261 = icmp ult i64 %257, 12
  br i1 %261, label %313, label %262

262:                                              ; preds = %253
  %263 = sub nsw i64 %259, %260
  br label %264

264:                                              ; preds = %264, %262
  %265 = phi i64 [ 0, %262 ], [ %310, %264 ]
  %266 = phi i64 [ %263, %262 ], [ %311, %264 ]
  %267 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %216, i64 %265
  %268 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %222, i64 %265
  %269 = bitcast %"class.spvtools::opt::Loop"** %268 to <2 x i64>*
  %270 = load <2 x i64>, <2 x i64>* %269, align 8, !alias.scope !78
  %271 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %268, i64 2
  %272 = bitcast %"class.spvtools::opt::Loop"** %271 to <2 x i64>*
  %273 = load <2 x i64>, <2 x i64>* %272, align 8, !alias.scope !78
  %274 = bitcast %"class.spvtools::opt::Loop"** %267 to <2 x i64>*
  store <2 x i64> %270, <2 x i64>* %274, align 8, !alias.scope !81, !noalias !78
  %275 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %267, i64 2
  %276 = bitcast %"class.spvtools::opt::Loop"** %275 to <2 x i64>*
  store <2 x i64> %273, <2 x i64>* %276, align 8, !alias.scope !81, !noalias !78
  %277 = or i64 %265, 4
  %278 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %216, i64 %277
  %279 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %222, i64 %277
  %280 = bitcast %"class.spvtools::opt::Loop"** %279 to <2 x i64>*
  %281 = load <2 x i64>, <2 x i64>* %280, align 8, !alias.scope !78
  %282 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %279, i64 2
  %283 = bitcast %"class.spvtools::opt::Loop"** %282 to <2 x i64>*
  %284 = load <2 x i64>, <2 x i64>* %283, align 8, !alias.scope !78
  %285 = bitcast %"class.spvtools::opt::Loop"** %278 to <2 x i64>*
  store <2 x i64> %281, <2 x i64>* %285, align 8, !alias.scope !81, !noalias !78
  %286 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %278, i64 2
  %287 = bitcast %"class.spvtools::opt::Loop"** %286 to <2 x i64>*
  store <2 x i64> %284, <2 x i64>* %287, align 8, !alias.scope !81, !noalias !78
  %288 = or i64 %265, 8
  %289 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %216, i64 %288
  %290 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %222, i64 %288
  %291 = bitcast %"class.spvtools::opt::Loop"** %290 to <2 x i64>*
  %292 = load <2 x i64>, <2 x i64>* %291, align 8, !alias.scope !78
  %293 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %290, i64 2
  %294 = bitcast %"class.spvtools::opt::Loop"** %293 to <2 x i64>*
  %295 = load <2 x i64>, <2 x i64>* %294, align 8, !alias.scope !78
  %296 = bitcast %"class.spvtools::opt::Loop"** %289 to <2 x i64>*
  store <2 x i64> %292, <2 x i64>* %296, align 8, !alias.scope !81, !noalias !78
  %297 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %289, i64 2
  %298 = bitcast %"class.spvtools::opt::Loop"** %297 to <2 x i64>*
  store <2 x i64> %295, <2 x i64>* %298, align 8, !alias.scope !81, !noalias !78
  %299 = or i64 %265, 12
  %300 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %216, i64 %299
  %301 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %222, i64 %299
  %302 = bitcast %"class.spvtools::opt::Loop"** %301 to <2 x i64>*
  %303 = load <2 x i64>, <2 x i64>* %302, align 8, !alias.scope !78
  %304 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %301, i64 2
  %305 = bitcast %"class.spvtools::opt::Loop"** %304 to <2 x i64>*
  %306 = load <2 x i64>, <2 x i64>* %305, align 8, !alias.scope !78
  %307 = bitcast %"class.spvtools::opt::Loop"** %300 to <2 x i64>*
  store <2 x i64> %303, <2 x i64>* %307, align 8, !alias.scope !81, !noalias !78
  %308 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %300, i64 2
  %309 = bitcast %"class.spvtools::opt::Loop"** %308 to <2 x i64>*
  store <2 x i64> %306, <2 x i64>* %309, align 8, !alias.scope !81, !noalias !78
  %310 = add i64 %265, 16
  %311 = add i64 %266, -4
  %312 = icmp eq i64 %311, 0
  br i1 %312, label %313, label %264, !llvm.loop !83

313:                                              ; preds = %264, %253
  %314 = phi i64 [ 0, %253 ], [ %310, %264 ]
  %315 = icmp eq i64 %260, 0
  br i1 %315, label %332, label %316

316:                                              ; preds = %313, %316
  %317 = phi i64 [ %329, %316 ], [ %314, %313 ]
  %318 = phi i64 [ %330, %316 ], [ %260, %313 ]
  %319 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %216, i64 %317
  %320 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %222, i64 %317
  %321 = bitcast %"class.spvtools::opt::Loop"** %320 to <2 x i64>*
  %322 = load <2 x i64>, <2 x i64>* %321, align 8, !alias.scope !78
  %323 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %320, i64 2
  %324 = bitcast %"class.spvtools::opt::Loop"** %323 to <2 x i64>*
  %325 = load <2 x i64>, <2 x i64>* %324, align 8, !alias.scope !78
  %326 = bitcast %"class.spvtools::opt::Loop"** %319 to <2 x i64>*
  store <2 x i64> %322, <2 x i64>* %326, align 8, !alias.scope !81, !noalias !78
  %327 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %319, i64 2
  %328 = bitcast %"class.spvtools::opt::Loop"** %327 to <2 x i64>*
  store <2 x i64> %325, <2 x i64>* %328, align 8, !alias.scope !81, !noalias !78
  %329 = add i64 %317, 4
  %330 = add i64 %318, -1
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %332, label %316, !llvm.loop !84

332:                                              ; preds = %316, %313
  %333 = icmp eq i64 %232, %254
  br i1 %333, label %334, label %234

334:                                              ; preds = %345, %332
  %335 = phi %"class.spvtools::opt::Loop"** [ %255, %332 ], [ %352, %345 ]
  %336 = ptrtoint %"class.spvtools::opt::Loop"** %335 to i64
  br label %337

337:                                              ; preds = %334, %214
  %338 = phi i64 [ %336, %334 ], [ %215, %214 ]
  store i64 %338, i64* %24, align 8
  %339 = icmp eq i64 %220, 0
  br i1 %339, label %354, label %340

340:                                              ; preds = %337
  %341 = sub nsw i64 0, %221
  %342 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %216, i64 %341
  %343 = bitcast %"class.spvtools::opt::Loop"** %342 to i8*
  %344 = bitcast %"class.spvtools::opt::Loop"** %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %343, i8* align 8 %344, i64 %220, i1 false) #13
  br label %354

345:                                              ; preds = %234, %345
  %346 = phi %"class.spvtools::opt::Loop"** [ %352, %345 ], [ %235, %234 ]
  %347 = phi %"class.spvtools::opt::Loop"** [ %351, %345 ], [ %236, %234 ]
  %348 = bitcast %"class.spvtools::opt::Loop"** %347 to i64*
  %349 = load i64, i64* %348, align 8
  %350 = bitcast %"class.spvtools::opt::Loop"** %346 to i64*
  store i64 %349, i64* %350, align 8
  %351 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %347, i64 1
  %352 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %346, i64 1
  %353 = icmp ult %"class.spvtools::opt::Loop"** %351, %19
  br i1 %353, label %345, label %334, !llvm.loop !85

354:                                              ; preds = %337, %340
  %355 = ptrtoint %"class.spvtools::opt::Loop"** %217 to i64
  %356 = sub i64 %355, %8
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %772, label %358

358:                                              ; preds = %354
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %5, i64 %356, i1 false) #13
  br label %772

359:                                              ; preds = %14
  %360 = bitcast %"class.std::__1::vector.910"* %0 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %20, %361
  %363 = ashr exact i64 %362, 3
  %364 = add nsw i64 %363, %12
  %365 = icmp ugt i64 %364, 2305843009213693951
  br i1 %365, label %366, label %368

366:                                              ; preds = %359
  %367 = bitcast %"class.std::__1::vector.910"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %367) #14
  unreachable

368:                                              ; preds = %359
  %369 = sub i64 %17, %361
  %370 = ashr exact i64 %369, 3
  %371 = icmp ult i64 %370, 1152921504606846975
  br i1 %371, label %375, label %372

372:                                              ; preds = %368
  %373 = sub i64 %7, %361
  %374 = ashr exact i64 %373, 3
  br label %385

375:                                              ; preds = %368
  %376 = ashr exact i64 %369, 2
  %377 = icmp ult i64 %376, %364
  %378 = select i1 %377, i64 %364, i64 %376
  %379 = sub i64 %7, %361
  %380 = ashr exact i64 %379, 3
  %381 = icmp eq i64 %378, 0
  br i1 %381, label %391, label %382

382:                                              ; preds = %375
  %383 = icmp ugt i64 %378, 2305843009213693951
  br i1 %383, label %384, label %385

384:                                              ; preds = %382
  tail call void @abort() #14
  unreachable

385:                                              ; preds = %372, %382
  %386 = phi i64 [ 2305843009213693951, %372 ], [ %378, %382 ]
  %387 = phi i64 [ %374, %372 ], [ %380, %382 ]
  %388 = shl i64 %386, 3
  %389 = tail call i8* @_Znwm(i64 %388) #12
  %390 = bitcast i8* %389 to %"class.spvtools::opt::Loop"**
  br label %391

391:                                              ; preds = %385, %375
  %392 = phi i64 [ %387, %385 ], [ %380, %375 ]
  %393 = phi i64 [ %386, %385 ], [ 0, %375 ]
  %394 = phi %"class.spvtools::opt::Loop"** [ %390, %385 ], [ null, %375 ]
  %395 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %394, i64 %392
  %396 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %394, i64 %393
  %397 = ptrtoint %"class.spvtools::opt::Loop"** %396 to i64
  %398 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %395, i64 %12
  %399 = add i64 %11, -8
  %400 = lshr i64 %399, 3
  %401 = add nuw nsw i64 %400, 1
  %402 = icmp ult i64 %401, 4
  br i1 %402, label %496, label %403

403:                                              ; preds = %391
  %404 = add i64 %11, -8
  %405 = lshr i64 %404, 3
  %406 = add nsw i64 %392, %405
  %407 = add nsw i64 %406, 1
  %408 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %394, i64 %407
  %409 = add nuw nsw i64 %405, 1
  %410 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, i64 %409
  %411 = icmp ult %"class.spvtools::opt::Loop"** %395, %410
  %412 = icmp ugt %"class.spvtools::opt::Loop"** %408, %2
  %413 = and i1 %411, %412
  br i1 %413, label %496, label %414

414:                                              ; preds = %403
  %415 = and i64 %401, 4611686018427387900
  %416 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %395, i64 %415
  %417 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %395, i64 %415
  %418 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, i64 %415
  %419 = add nsw i64 %415, -4
  %420 = lshr exact i64 %419, 2
  %421 = add nuw nsw i64 %420, 1
  %422 = and i64 %421, 3
  %423 = icmp ult i64 %419, 12
  br i1 %423, label %475, label %424

424:                                              ; preds = %414
  %425 = sub nsw i64 %421, %422
  br label %426

426:                                              ; preds = %426, %424
  %427 = phi i64 [ 0, %424 ], [ %472, %426 ]
  %428 = phi i64 [ %425, %424 ], [ %473, %426 ]
  %429 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %395, i64 %427
  %430 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, i64 %427
  %431 = bitcast %"class.spvtools::opt::Loop"** %430 to <2 x i64>*
  %432 = load <2 x i64>, <2 x i64>* %431, align 8, !alias.scope !86
  %433 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %430, i64 2
  %434 = bitcast %"class.spvtools::opt::Loop"** %433 to <2 x i64>*
  %435 = load <2 x i64>, <2 x i64>* %434, align 8, !alias.scope !86
  %436 = bitcast %"class.spvtools::opt::Loop"** %429 to <2 x i64>*
  store <2 x i64> %432, <2 x i64>* %436, align 8, !alias.scope !89, !noalias !86
  %437 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %429, i64 2
  %438 = bitcast %"class.spvtools::opt::Loop"** %437 to <2 x i64>*
  store <2 x i64> %435, <2 x i64>* %438, align 8, !alias.scope !89, !noalias !86
  %439 = or i64 %427, 4
  %440 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %395, i64 %439
  %441 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, i64 %439
  %442 = bitcast %"class.spvtools::opt::Loop"** %441 to <2 x i64>*
  %443 = load <2 x i64>, <2 x i64>* %442, align 8, !alias.scope !86
  %444 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %441, i64 2
  %445 = bitcast %"class.spvtools::opt::Loop"** %444 to <2 x i64>*
  %446 = load <2 x i64>, <2 x i64>* %445, align 8, !alias.scope !86
  %447 = bitcast %"class.spvtools::opt::Loop"** %440 to <2 x i64>*
  store <2 x i64> %443, <2 x i64>* %447, align 8, !alias.scope !89, !noalias !86
  %448 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %440, i64 2
  %449 = bitcast %"class.spvtools::opt::Loop"** %448 to <2 x i64>*
  store <2 x i64> %446, <2 x i64>* %449, align 8, !alias.scope !89, !noalias !86
  %450 = or i64 %427, 8
  %451 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %395, i64 %450
  %452 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, i64 %450
  %453 = bitcast %"class.spvtools::opt::Loop"** %452 to <2 x i64>*
  %454 = load <2 x i64>, <2 x i64>* %453, align 8, !alias.scope !86
  %455 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %452, i64 2
  %456 = bitcast %"class.spvtools::opt::Loop"** %455 to <2 x i64>*
  %457 = load <2 x i64>, <2 x i64>* %456, align 8, !alias.scope !86
  %458 = bitcast %"class.spvtools::opt::Loop"** %451 to <2 x i64>*
  store <2 x i64> %454, <2 x i64>* %458, align 8, !alias.scope !89, !noalias !86
  %459 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %451, i64 2
  %460 = bitcast %"class.spvtools::opt::Loop"** %459 to <2 x i64>*
  store <2 x i64> %457, <2 x i64>* %460, align 8, !alias.scope !89, !noalias !86
  %461 = or i64 %427, 12
  %462 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %395, i64 %461
  %463 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, i64 %461
  %464 = bitcast %"class.spvtools::opt::Loop"** %463 to <2 x i64>*
  %465 = load <2 x i64>, <2 x i64>* %464, align 8, !alias.scope !86
  %466 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %463, i64 2
  %467 = bitcast %"class.spvtools::opt::Loop"** %466 to <2 x i64>*
  %468 = load <2 x i64>, <2 x i64>* %467, align 8, !alias.scope !86
  %469 = bitcast %"class.spvtools::opt::Loop"** %462 to <2 x i64>*
  store <2 x i64> %465, <2 x i64>* %469, align 8, !alias.scope !89, !noalias !86
  %470 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %462, i64 2
  %471 = bitcast %"class.spvtools::opt::Loop"** %470 to <2 x i64>*
  store <2 x i64> %468, <2 x i64>* %471, align 8, !alias.scope !89, !noalias !86
  %472 = add i64 %427, 16
  %473 = add i64 %428, -4
  %474 = icmp eq i64 %473, 0
  br i1 %474, label %475, label %426, !llvm.loop !91

475:                                              ; preds = %426, %414
  %476 = phi i64 [ 0, %414 ], [ %472, %426 ]
  %477 = icmp eq i64 %422, 0
  br i1 %477, label %494, label %478

478:                                              ; preds = %475, %478
  %479 = phi i64 [ %491, %478 ], [ %476, %475 ]
  %480 = phi i64 [ %492, %478 ], [ %422, %475 ]
  %481 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %395, i64 %479
  %482 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, i64 %479
  %483 = bitcast %"class.spvtools::opt::Loop"** %482 to <2 x i64>*
  %484 = load <2 x i64>, <2 x i64>* %483, align 8, !alias.scope !86
  %485 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %482, i64 2
  %486 = bitcast %"class.spvtools::opt::Loop"** %485 to <2 x i64>*
  %487 = load <2 x i64>, <2 x i64>* %486, align 8, !alias.scope !86
  %488 = bitcast %"class.spvtools::opt::Loop"** %481 to <2 x i64>*
  store <2 x i64> %484, <2 x i64>* %488, align 8, !alias.scope !89, !noalias !86
  %489 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %481, i64 2
  %490 = bitcast %"class.spvtools::opt::Loop"** %489 to <2 x i64>*
  store <2 x i64> %487, <2 x i64>* %490, align 8, !alias.scope !89, !noalias !86
  %491 = add i64 %479, 4
  %492 = add i64 %480, -1
  %493 = icmp eq i64 %492, 0
  br i1 %493, label %494, label %478, !llvm.loop !92

494:                                              ; preds = %478, %475
  %495 = icmp eq i64 %401, %415
  br i1 %495, label %572, label %496

496:                                              ; preds = %494, %403, %391
  %497 = phi %"class.spvtools::opt::Loop"** [ %395, %403 ], [ %395, %391 ], [ %416, %494 ]
  %498 = phi %"class.spvtools::opt::Loop"** [ %395, %403 ], [ %395, %391 ], [ %417, %494 ]
  %499 = phi %"class.spvtools::opt::Loop"** [ %2, %403 ], [ %2, %391 ], [ %418, %494 ]
  %500 = ptrtoint %"class.spvtools::opt::Loop"** %497 to i64
  %501 = add nsw i64 %392, %12
  %502 = add nsw i64 %501, -1
  %503 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %394, i64 %502
  %504 = ptrtoint %"class.spvtools::opt::Loop"** %503 to i64
  %505 = sub i64 %504, %500
  %506 = lshr i64 %505, 3
  %507 = add nuw nsw i64 %506, 1
  %508 = and i64 %507, 7
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %522, label %510

510:                                              ; preds = %496, %510
  %511 = phi %"class.spvtools::opt::Loop"** [ %518, %510 ], [ %497, %496 ]
  %512 = phi %"class.spvtools::opt::Loop"** [ %518, %510 ], [ %498, %496 ]
  %513 = phi %"class.spvtools::opt::Loop"** [ %519, %510 ], [ %499, %496 ]
  %514 = phi i64 [ %520, %510 ], [ %508, %496 ]
  %515 = bitcast %"class.spvtools::opt::Loop"** %513 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = bitcast %"class.spvtools::opt::Loop"** %512 to i64*
  store i64 %516, i64* %517, align 8
  %518 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %511, i64 1
  %519 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %513, i64 1
  %520 = add i64 %514, -1
  %521 = icmp eq i64 %520, 0
  br i1 %521, label %522, label %510, !llvm.loop !93

522:                                              ; preds = %510, %496
  %523 = phi %"class.spvtools::opt::Loop"** [ %497, %496 ], [ %518, %510 ]
  %524 = phi %"class.spvtools::opt::Loop"** [ %498, %496 ], [ %518, %510 ]
  %525 = phi %"class.spvtools::opt::Loop"** [ %499, %496 ], [ %519, %510 ]
  %526 = icmp ult i64 %505, 56
  br i1 %526, label %572, label %527

527:                                              ; preds = %522, %527
  %528 = phi %"class.spvtools::opt::Loop"** [ %569, %527 ], [ %523, %522 ]
  %529 = phi %"class.spvtools::opt::Loop"** [ %569, %527 ], [ %524, %522 ]
  %530 = phi %"class.spvtools::opt::Loop"** [ %570, %527 ], [ %525, %522 ]
  %531 = bitcast %"class.spvtools::opt::Loop"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"class.spvtools::opt::Loop"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %528, i64 1
  %535 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %530, i64 1
  %536 = bitcast %"class.spvtools::opt::Loop"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"class.spvtools::opt::Loop"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %528, i64 2
  %540 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %530, i64 2
  %541 = bitcast %"class.spvtools::opt::Loop"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"class.spvtools::opt::Loop"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %528, i64 3
  %545 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %530, i64 3
  %546 = bitcast %"class.spvtools::opt::Loop"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"class.spvtools::opt::Loop"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %528, i64 4
  %550 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %530, i64 4
  %551 = bitcast %"class.spvtools::opt::Loop"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"class.spvtools::opt::Loop"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %528, i64 5
  %555 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %530, i64 5
  %556 = bitcast %"class.spvtools::opt::Loop"** %555 to i64*
  %557 = load i64, i64* %556, align 8
  %558 = bitcast %"class.spvtools::opt::Loop"** %554 to i64*
  store i64 %557, i64* %558, align 8
  %559 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %528, i64 6
  %560 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %530, i64 6
  %561 = bitcast %"class.spvtools::opt::Loop"** %560 to i64*
  %562 = load i64, i64* %561, align 8
  %563 = bitcast %"class.spvtools::opt::Loop"** %559 to i64*
  store i64 %562, i64* %563, align 8
  %564 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %528, i64 7
  %565 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %530, i64 7
  %566 = bitcast %"class.spvtools::opt::Loop"** %565 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = bitcast %"class.spvtools::opt::Loop"** %564 to i64*
  store i64 %567, i64* %568, align 8
  %569 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %528, i64 8
  %570 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %530, i64 8
  %571 = icmp eq %"class.spvtools::opt::Loop"** %398, %569
  br i1 %571, label %572, label %527, !llvm.loop !94

572:                                              ; preds = %522, %527, %494
  %573 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %9, align 8
  %574 = ptrtoint %"class.spvtools::opt::Loop"** %573 to i64
  %575 = sub i64 %7, %574
  %576 = ashr exact i64 %575, 3
  %577 = sub nsw i64 0, %576
  %578 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %395, i64 %577
  %579 = ptrtoint %"class.spvtools::opt::Loop"** %578 to i64
  %580 = icmp sgt i64 %575, 0
  br i1 %580, label %581, label %584

581:                                              ; preds = %572
  %582 = bitcast %"class.spvtools::opt::Loop"** %578 to i8*
  %583 = bitcast %"class.spvtools::opt::Loop"** %573 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 8 %583, i64 %575, i1 false) #13
  br label %584

584:                                              ; preds = %581, %572
  %585 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %18, align 8
  %586 = icmp eq %"class.spvtools::opt::Loop"** %585, %1
  br i1 %586, label %765, label %587

587:                                              ; preds = %584
  %588 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %585, i64 -1
  %589 = ptrtoint %"class.spvtools::opt::Loop"** %588 to i64
  %590 = sub i64 %589, %7
  %591 = lshr i64 %590, 3
  %592 = add nuw nsw i64 %591, 1
  %593 = icmp ult i64 %592, 4
  br i1 %593, label %690, label %594

594:                                              ; preds = %587
  %595 = add nsw i64 %392, %12
  %596 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %585, i64 -1
  %597 = ptrtoint %"class.spvtools::opt::Loop"** %596 to i64
  %598 = sub i64 %597, %7
  %599 = lshr i64 %598, 3
  %600 = add nsw i64 %595, %599
  %601 = add nsw i64 %600, 1
  %602 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %394, i64 %601
  %603 = add nuw nsw i64 %599, 1
  %604 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1, i64 %603
  %605 = icmp ult %"class.spvtools::opt::Loop"** %398, %604
  %606 = icmp ugt %"class.spvtools::opt::Loop"** %602, %1
  %607 = and i1 %605, %606
  br i1 %607, label %690, label %608

608:                                              ; preds = %594
  %609 = and i64 %592, 4611686018427387900
  %610 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %398, i64 %609
  %611 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %398, i64 %609
  %612 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1, i64 %609
  %613 = add nsw i64 %609, -4
  %614 = lshr exact i64 %613, 2
  %615 = add nuw nsw i64 %614, 1
  %616 = and i64 %615, 3
  %617 = icmp ult i64 %613, 12
  br i1 %617, label %669, label %618

618:                                              ; preds = %608
  %619 = sub nsw i64 %615, %616
  br label %620

620:                                              ; preds = %620, %618
  %621 = phi i64 [ 0, %618 ], [ %666, %620 ]
  %622 = phi i64 [ %619, %618 ], [ %667, %620 ]
  %623 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %398, i64 %621
  %624 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1, i64 %621
  %625 = bitcast %"class.spvtools::opt::Loop"** %624 to <2 x i64>*
  %626 = load <2 x i64>, <2 x i64>* %625, align 8, !alias.scope !95
  %627 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %624, i64 2
  %628 = bitcast %"class.spvtools::opt::Loop"** %627 to <2 x i64>*
  %629 = load <2 x i64>, <2 x i64>* %628, align 8, !alias.scope !95
  %630 = bitcast %"class.spvtools::opt::Loop"** %623 to <2 x i64>*
  store <2 x i64> %626, <2 x i64>* %630, align 8, !alias.scope !98, !noalias !95
  %631 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %623, i64 2
  %632 = bitcast %"class.spvtools::opt::Loop"** %631 to <2 x i64>*
  store <2 x i64> %629, <2 x i64>* %632, align 8, !alias.scope !98, !noalias !95
  %633 = or i64 %621, 4
  %634 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %398, i64 %633
  %635 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1, i64 %633
  %636 = bitcast %"class.spvtools::opt::Loop"** %635 to <2 x i64>*
  %637 = load <2 x i64>, <2 x i64>* %636, align 8, !alias.scope !95
  %638 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %635, i64 2
  %639 = bitcast %"class.spvtools::opt::Loop"** %638 to <2 x i64>*
  %640 = load <2 x i64>, <2 x i64>* %639, align 8, !alias.scope !95
  %641 = bitcast %"class.spvtools::opt::Loop"** %634 to <2 x i64>*
  store <2 x i64> %637, <2 x i64>* %641, align 8, !alias.scope !98, !noalias !95
  %642 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %634, i64 2
  %643 = bitcast %"class.spvtools::opt::Loop"** %642 to <2 x i64>*
  store <2 x i64> %640, <2 x i64>* %643, align 8, !alias.scope !98, !noalias !95
  %644 = or i64 %621, 8
  %645 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %398, i64 %644
  %646 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1, i64 %644
  %647 = bitcast %"class.spvtools::opt::Loop"** %646 to <2 x i64>*
  %648 = load <2 x i64>, <2 x i64>* %647, align 8, !alias.scope !95
  %649 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %646, i64 2
  %650 = bitcast %"class.spvtools::opt::Loop"** %649 to <2 x i64>*
  %651 = load <2 x i64>, <2 x i64>* %650, align 8, !alias.scope !95
  %652 = bitcast %"class.spvtools::opt::Loop"** %645 to <2 x i64>*
  store <2 x i64> %648, <2 x i64>* %652, align 8, !alias.scope !98, !noalias !95
  %653 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %645, i64 2
  %654 = bitcast %"class.spvtools::opt::Loop"** %653 to <2 x i64>*
  store <2 x i64> %651, <2 x i64>* %654, align 8, !alias.scope !98, !noalias !95
  %655 = or i64 %621, 12
  %656 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %398, i64 %655
  %657 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1, i64 %655
  %658 = bitcast %"class.spvtools::opt::Loop"** %657 to <2 x i64>*
  %659 = load <2 x i64>, <2 x i64>* %658, align 8, !alias.scope !95
  %660 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %657, i64 2
  %661 = bitcast %"class.spvtools::opt::Loop"** %660 to <2 x i64>*
  %662 = load <2 x i64>, <2 x i64>* %661, align 8, !alias.scope !95
  %663 = bitcast %"class.spvtools::opt::Loop"** %656 to <2 x i64>*
  store <2 x i64> %659, <2 x i64>* %663, align 8, !alias.scope !98, !noalias !95
  %664 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %656, i64 2
  %665 = bitcast %"class.spvtools::opt::Loop"** %664 to <2 x i64>*
  store <2 x i64> %662, <2 x i64>* %665, align 8, !alias.scope !98, !noalias !95
  %666 = add i64 %621, 16
  %667 = add i64 %622, -4
  %668 = icmp eq i64 %667, 0
  br i1 %668, label %669, label %620, !llvm.loop !100

669:                                              ; preds = %620, %608
  %670 = phi i64 [ 0, %608 ], [ %666, %620 ]
  %671 = icmp eq i64 %616, 0
  br i1 %671, label %688, label %672

672:                                              ; preds = %669, %672
  %673 = phi i64 [ %685, %672 ], [ %670, %669 ]
  %674 = phi i64 [ %686, %672 ], [ %616, %669 ]
  %675 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %398, i64 %673
  %676 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %1, i64 %673
  %677 = bitcast %"class.spvtools::opt::Loop"** %676 to <2 x i64>*
  %678 = load <2 x i64>, <2 x i64>* %677, align 8, !alias.scope !95
  %679 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %676, i64 2
  %680 = bitcast %"class.spvtools::opt::Loop"** %679 to <2 x i64>*
  %681 = load <2 x i64>, <2 x i64>* %680, align 8, !alias.scope !95
  %682 = bitcast %"class.spvtools::opt::Loop"** %675 to <2 x i64>*
  store <2 x i64> %678, <2 x i64>* %682, align 8, !alias.scope !98, !noalias !95
  %683 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %675, i64 2
  %684 = bitcast %"class.spvtools::opt::Loop"** %683 to <2 x i64>*
  store <2 x i64> %681, <2 x i64>* %684, align 8, !alias.scope !98, !noalias !95
  %685 = add i64 %673, 4
  %686 = add i64 %674, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %672, !llvm.loop !101

688:                                              ; preds = %672, %669
  %689 = icmp eq i64 %592, %609
  br i1 %689, label %765, label %690

690:                                              ; preds = %688, %594, %587
  %691 = phi %"class.spvtools::opt::Loop"** [ %398, %594 ], [ %398, %587 ], [ %610, %688 ]
  %692 = phi %"class.spvtools::opt::Loop"** [ %398, %594 ], [ %398, %587 ], [ %611, %688 ]
  %693 = phi %"class.spvtools::opt::Loop"** [ %1, %594 ], [ %1, %587 ], [ %612, %688 ]
  %694 = ptrtoint %"class.spvtools::opt::Loop"** %693 to i64
  %695 = getelementptr %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %585, i64 -1
  %696 = ptrtoint %"class.spvtools::opt::Loop"** %695 to i64
  %697 = sub i64 %696, %694
  %698 = lshr i64 %697, 3
  %699 = add nuw nsw i64 %698, 1
  %700 = and i64 %699, 7
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %714, label %702

702:                                              ; preds = %690, %702
  %703 = phi %"class.spvtools::opt::Loop"** [ %711, %702 ], [ %691, %690 ]
  %704 = phi %"class.spvtools::opt::Loop"** [ %711, %702 ], [ %692, %690 ]
  %705 = phi %"class.spvtools::opt::Loop"** [ %710, %702 ], [ %693, %690 ]
  %706 = phi i64 [ %712, %702 ], [ %700, %690 ]
  %707 = bitcast %"class.spvtools::opt::Loop"** %704 to i64*
  %708 = bitcast %"class.spvtools::opt::Loop"** %705 to i64*
  %709 = load i64, i64* %708, align 8
  store i64 %709, i64* %707, align 8
  %710 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %705, i64 1
  %711 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %703, i64 1
  %712 = add i64 %706, -1
  %713 = icmp eq i64 %712, 0
  br i1 %713, label %714, label %702, !llvm.loop !102

714:                                              ; preds = %702, %690
  %715 = phi %"class.spvtools::opt::Loop"** [ undef, %690 ], [ %711, %702 ]
  %716 = phi %"class.spvtools::opt::Loop"** [ %691, %690 ], [ %711, %702 ]
  %717 = phi %"class.spvtools::opt::Loop"** [ %692, %690 ], [ %711, %702 ]
  %718 = phi %"class.spvtools::opt::Loop"** [ %693, %690 ], [ %710, %702 ]
  %719 = icmp ult i64 %697, 56
  br i1 %719, label %765, label %720

720:                                              ; preds = %714, %720
  %721 = phi %"class.spvtools::opt::Loop"** [ %763, %720 ], [ %716, %714 ]
  %722 = phi %"class.spvtools::opt::Loop"** [ %763, %720 ], [ %717, %714 ]
  %723 = phi %"class.spvtools::opt::Loop"** [ %762, %720 ], [ %718, %714 ]
  %724 = bitcast %"class.spvtools::opt::Loop"** %722 to i64*
  %725 = bitcast %"class.spvtools::opt::Loop"** %723 to i64*
  %726 = load i64, i64* %725, align 8
  store i64 %726, i64* %724, align 8
  %727 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %723, i64 1
  %728 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %721, i64 1
  %729 = bitcast %"class.spvtools::opt::Loop"** %728 to i64*
  %730 = bitcast %"class.spvtools::opt::Loop"** %727 to i64*
  %731 = load i64, i64* %730, align 8
  store i64 %731, i64* %729, align 8
  %732 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %723, i64 2
  %733 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %721, i64 2
  %734 = bitcast %"class.spvtools::opt::Loop"** %733 to i64*
  %735 = bitcast %"class.spvtools::opt::Loop"** %732 to i64*
  %736 = load i64, i64* %735, align 8
  store i64 %736, i64* %734, align 8
  %737 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %723, i64 3
  %738 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %721, i64 3
  %739 = bitcast %"class.spvtools::opt::Loop"** %738 to i64*
  %740 = bitcast %"class.spvtools::opt::Loop"** %737 to i64*
  %741 = load i64, i64* %740, align 8
  store i64 %741, i64* %739, align 8
  %742 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %723, i64 4
  %743 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %721, i64 4
  %744 = bitcast %"class.spvtools::opt::Loop"** %743 to i64*
  %745 = bitcast %"class.spvtools::opt::Loop"** %742 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %744, align 8
  %747 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %723, i64 5
  %748 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %721, i64 5
  %749 = bitcast %"class.spvtools::opt::Loop"** %748 to i64*
  %750 = bitcast %"class.spvtools::opt::Loop"** %747 to i64*
  %751 = load i64, i64* %750, align 8
  store i64 %751, i64* %749, align 8
  %752 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %723, i64 6
  %753 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %721, i64 6
  %754 = bitcast %"class.spvtools::opt::Loop"** %753 to i64*
  %755 = bitcast %"class.spvtools::opt::Loop"** %752 to i64*
  %756 = load i64, i64* %755, align 8
  store i64 %756, i64* %754, align 8
  %757 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %723, i64 7
  %758 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %721, i64 7
  %759 = bitcast %"class.spvtools::opt::Loop"** %758 to i64*
  %760 = bitcast %"class.spvtools::opt::Loop"** %757 to i64*
  %761 = load i64, i64* %760, align 8
  store i64 %761, i64* %759, align 8
  %762 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %723, i64 8
  %763 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %721, i64 8
  %764 = icmp eq %"class.spvtools::opt::Loop"** %762, %585
  br i1 %764, label %765, label %720, !llvm.loop !103

765:                                              ; preds = %714, %720, %688, %584
  %766 = phi %"class.spvtools::opt::Loop"** [ %398, %584 ], [ %610, %688 ], [ %715, %714 ], [ %763, %720 ]
  %767 = ptrtoint %"class.spvtools::opt::Loop"** %766 to i64
  %768 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %9, align 8
  store i64 %579, i64* %360, align 8
  store i64 %767, i64* %24, align 8
  store i64 %397, i64* %16, align 8
  %769 = icmp eq %"class.spvtools::opt::Loop"** %768, null
  br i1 %769, label %772, label %770

770:                                              ; preds = %765
  %771 = bitcast %"class.spvtools::opt::Loop"** %768 to i8*
  tail call void @_ZdlPv(i8* %771) #12
  br label %772

772:                                              ; preds = %770, %765, %209, %354, %358, %4
  %773 = phi %"class.spvtools::opt::Loop"** [ %1, %4 ], [ %1, %358 ], [ %1, %354 ], [ %1, %209 ], [ %395, %765 ], [ %395, %770 ]
  ret %"class.spvtools::opt::Loop"** %773
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.57"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.33"*, %"struct.std::__1::__hash_node_base.33"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.33"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.33"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.33", %"struct.std::__1::__hash_node_base.33"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.33"*, %"struct.std::__1::__hash_node_base.33"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.33", %"struct.std::__1::__hash_node_base.33"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.33"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.33", %"struct.std::__1::__hash_node_base.33"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.33"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.33"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  %23 = icmp eq %"struct.std::__1::__hash_node_base.33"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.33"**, %"struct.std::__1::__hash_node_base.33"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.33"** null, %"struct.std::__1::__hash_node_base.33"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.33"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.33"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node"* %34) #13
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.878"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.878"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.878", %"struct.std::__1::__hash_node_base.878"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.878"*, %"struct.std::__1::__hash_node_base.878"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.878"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #12
  %10 = icmp eq %"struct.std::__1::__hash_node_base.878"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.878"**, %"struct.std::__1::__hash_node_base.878"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.878"** null, %"struct.std::__1::__hash_node_base.878"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.878"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.878"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.854"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.854"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.854"*, %"struct.std::__1::__hash_node_base.854"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.854"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.854", %"struct.std::__1::__hash_node_base.854"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.854"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #12
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.854"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  %36 = icmp eq %"struct.std::__1::__hash_node_base.854"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.854"**, %"struct.std::__1::__hash_node_base.854"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.854"** null, %"struct.std::__1::__hash_node_base.854"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.854"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.854"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #13
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #13
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !2
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #13
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !2
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #13
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #13
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !2
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #13
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #13
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !2
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !2
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #13
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !2
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #13
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #13
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.801"*, %"struct.std::__1::__hash_node_base.801"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.801"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.801"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.801", %"struct.std::__1::__hash_node_base.801"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.801"*, %"struct.std::__1::__hash_node_base.801"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.801", %"struct.std::__1::__hash_node_base.801"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.801"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.801", %"struct.std::__1::__hash_node_base.801"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.801"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.801"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #12
  %214 = icmp eq %"struct.std::__1::__hash_node_base.801"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.801"**, %"struct.std::__1::__hash_node_base.801"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.801"** null, %"struct.std::__1::__hash_node_base.801"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.801"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.801"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #12
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #13
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #13
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #13
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.789", %"class.std::__1::vector.789"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #13
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.789"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector.777", %"class.std::__1::vector.777"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %38, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.324"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.324"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector.777"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #13
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #13
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %3, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.324"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.324"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %3, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.324"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.324"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.319"*, %"class.std::__1::unique_ptr.319"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.319"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.319"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.319"*, %"class.std::__1::unique_ptr.319"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.319"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.319"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.319"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.319"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #13
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.319"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.319"* %4, %"class.std::__1::unique_ptr.319"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.302"*, %"struct.std::__1::__hash_node_base.302"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.302"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.302"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.302", %"struct.std::__1::__hash_node_base.302"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.302"*, %"struct.std::__1::__hash_node_base.302"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.302"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  %38 = icmp eq %"struct.std::__1::__hash_node_base.302"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.302"**, %"struct.std::__1::__hash_node_base.302"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.302"** null, %"struct.std::__1::__hash_node_base.302"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.302"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.302"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.1106"**
  %49 = load %"class.std::__1::__tree_node.1106"*, %"class.std::__1::__tree_node.1106"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.288"* %46, %"class.std::__1::__tree_node.1106"* %49) #13
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.269"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.269"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.269", %"struct.std::__1::__hash_node_base.269"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.269"*, %"struct.std::__1::__hash_node_base.269"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.269"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #12
  %58 = icmp eq %"struct.std::__1::__hash_node_base.269"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.269"**, %"struct.std::__1::__hash_node_base.269"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.269"** null, %"struct.std::__1::__hash_node_base.269"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.269"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.269"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.288"*, %"class.std::__1::__tree_node.1106"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1106"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1106"* %1 to %"class.std::__1::__tree_node.1106"**
  %6 = load %"class.std::__1::__tree_node.1106"*, %"class.std::__1::__tree_node.1106"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.288"* %0, %"class.std::__1::__tree_node.1106"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1106", %"class.std::__1::__tree_node.1106"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1106"**
  %9 = load %"class.std::__1::__tree_node.1106"*, %"class.std::__1::__tree_node.1106"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.288"* %0, %"class.std::__1::__tree_node.1106"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node.1106"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1138", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.972", align 8
  %6 = alloca %"class.std::__1::function.1124", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.115"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.115"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.115"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  %19 = icmp eq %"struct.std::__1::__hash_node_base.115"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !104

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.899"*, %"class.std::__1::unique_ptr.899"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.899"*, %"class.std::__1::unique_ptr.899"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.899"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1124"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1124", %"class.std::__1::function.1124"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1124", %"class.std::__1::function.1124"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1124"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1124", %"class.std::__1::function.1124"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.972"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1124"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.972", %"class.std::__1::function.972"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.972", %"class.std::__1::function.972"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.972"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.972", %"class.std::__1::function.972"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.972", %"class.std::__1::function.972"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1124", %"class.std::__1::function.1124"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1138", %"class.std::__1::tuple.1138"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.899"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.899", %"class.std::__1::unique_ptr.899"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.838"*, %"class.std::__1::unique_ptr.838"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.838"*, %"class.std::__1::unique_ptr.838"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.838"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.899", %"class.std::__1::unique_ptr.899"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.899"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.838"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.838", %"class.std::__1::unique_ptr.838"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #13
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #13
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #13
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #13
  %113 = call { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1138"* nonnull dereferenceable(1) %3) #13
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #13
  %116 = bitcast %"struct.std::__1::__hash_node_base.115"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !2
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !2
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #13
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #13
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #13
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #13
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #13
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.838", %"class.std::__1::unique_ptr.838"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.838"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1124"**
  %4 = load %"class.std::__1::function.1124"*, %"class.std::__1::function.1124"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1124", %"class.std::__1::function.1124"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1124", %"class.std::__1::function.1124"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #13
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1138", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #13
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1138", %"class.std::__1::tuple.1138"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #13
  %18 = call { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1138"* nonnull dereferenceable(1) %4) #13
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  %21 = bitcast %"struct.std::__1::__hash_node_base.115"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.115"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.111"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1138"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !3
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.115"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.115"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.115"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.115"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.115"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #12, !noalias !105
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !105
  %75 = load i64, i64* %74, align 8, !noalias !105
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !105
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !105
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !105
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.115"**
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %81, align 8, !noalias !105
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #13, !range !3
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #13
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.111"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #13, !range !3
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.115"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.115"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.115"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.115"* %124, %"struct.std::__1::__hash_node_base.115"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.115"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.115"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #13, !range !3
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.115"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.115"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.115"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.115"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.115"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } undef, %"struct.std::__1::__hash_node_base.115"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.115"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.115"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.111"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.111"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.111"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.111"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.111"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.115"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.115"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.117", %"class.std::__1::__bucket_list_deallocator.117"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !108

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.115"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.115"* null, %"struct.std::__1::__hash_node_base.115"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.115"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.115"* %36, %"struct.std::__1::__hash_node_base.115"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.115"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.115"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.115"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.115"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.115"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.115"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.115"* %82, %"struct.std::__1::__hash_node_base.115"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.115"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.115"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.115"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.115"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.115"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.115"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.115"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.115"* %80, %"struct.std::__1::__hash_node_base.115"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.115"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.115", %"struct.std::__1::__hash_node_base.115"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.115"*, %"struct.std::__1::__hash_node_base.115"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.115"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.111", %"class.std::__1::__hash_table.111"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.115"**, %"struct.std::__1::__hash_node_base.115"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.115"** null, %"struct.std::__1::__hash_node_base.115"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.115"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.115"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.117", %"class.std::__1::__bucket_list_deallocator.117"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.324"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.779"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %8, align 8
  store %"class.std::__1::vector.324"* %4, %"class.std::__1::vector.324"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.324"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.324"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.779"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.324"*, %"class.std::__1::vector.324"** %23, align 8
  store %"class.std::__1::vector.324"* null, %"class.std::__1::vector.324"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.324"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.324", %"class.std::__1::vector.324"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.324"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"*, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8spvtools3opt9IRContext23IsCombinatorInstructionEPKNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple.1151", align 8
  %4 = alloca %"class.std::__1::tuple.1138", align 1
  %5 = alloca %"class.std::__1::tuple.1164", align 8
  %6 = alloca %"class.std::__1::tuple.1138", align 1
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"* %0) #13
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 12
  br i1 %17, label %81, label %18

18:                                               ; preds = %14
  %19 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #13
  store i32 0, i32* %7, align 4
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %21 = bitcast %"class.std::__1::tuple.1151"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  %22 = getelementptr inbounds %"class.std::__1::tuple.1151", %"class.std::__1::tuple.1151"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %22, align 8
  %23 = getelementptr inbounds %"class.std::__1::tuple.1138", %"class.std::__1::tuple.1138"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #13
  %24 = call { %"struct.std::__1::__hash_node_base.167"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.163"* %20, i32* nonnull dereferenceable(4) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1151"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1138"* nonnull dereferenceable(1) %4) #13
  %25 = extractvalue { %"struct.std::__1::__hash_node_base.167"*, i8 } %24, 0
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %25, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  %27 = load i32, i32* %15, align 8
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %25, i64 4
  %30 = bitcast %"struct.std::__1::__hash_node_base.167"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %164, label %33

33:                                               ; preds = %18
  %34 = call i64 @llvm.ctpop.i64(i64 %31) #13, !range !3
  %35 = icmp ugt i64 %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = add i64 %31, 4294967295
  %38 = and i64 %37, %28
  br label %43

39:                                               ; preds = %33
  %40 = icmp ugt i64 %31, %28
  br i1 %40, label %43, label %41

41:                                               ; preds = %39
  %42 = urem i64 %28, %31
  br label %43

43:                                               ; preds = %41, %39, %36
  %44 = phi i64 [ %38, %36 ], [ %42, %41 ], [ %28, %39 ]
  %45 = bitcast %"struct.std::__1::__hash_node_base.167"* %26 to %"struct.std::__1::__hash_node_base.922"***
  %46 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %46, i64 %44
  %48 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.922"* %48, null
  br i1 %49, label %164, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %48, i64 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base.922"* %52, null
  br i1 %53, label %164, label %54

54:                                               ; preds = %50
  %55 = add i64 %31, -1
  br label %56

56:                                               ; preds = %77, %54
  %57 = phi %"struct.std::__1::__hash_node_base.922"* [ %52, %54 ], [ %79, %77 ]
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %57, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.922"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %28
  br i1 %61, label %72, label %62

62:                                               ; preds = %56
  br i1 %35, label %65, label %63

63:                                               ; preds = %62
  %64 = and i64 %60, %55
  br label %69

65:                                               ; preds = %62
  %66 = icmp ult i64 %60, %31
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = urem i64 %60, %31
  br label %69

69:                                               ; preds = %67, %65, %63
  %70 = phi i64 [ %64, %63 ], [ %68, %67 ], [ %60, %65 ]
  %71 = icmp eq i64 %70, %44
  br i1 %71, label %77, label %164

72:                                               ; preds = %56
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %57, i64 2
  %74 = bitcast %"struct.std::__1::__hash_node_base.922"* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, %27
  br i1 %76, label %164, label %77

77:                                               ; preds = %72, %69
  %78 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %57, i64 0, i32 0
  %79 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %78, align 8
  %80 = icmp eq %"struct.std::__1::__hash_node_base.922"* %79, null
  br i1 %80, label %164, label %56

81:                                               ; preds = %14
  %82 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #13
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %84 = load i8, i8* %83, align 4, !range !2
  %85 = icmp eq i8 %84, 0
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %87 = load i8, i8* %86, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  %89 = select i1 %88, i32 1, i32 2
  %90 = xor i1 %88, true
  %91 = zext i1 %90 to i32
  %92 = select i1 %85, i32 %91, i32 %89
  %93 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %92) #13
  store i32 %93, i32* %8, align 4
  %94 = load i8, i8* %83, align 4, !range !2
  %95 = icmp eq i8 %94, 0
  %96 = load i8, i8* %86, align 1, !range !2
  %97 = icmp eq i8 %96, 0
  %98 = select i1 %97, i32 1, i32 2
  %99 = xor i1 %97, true
  %100 = zext i1 %99 to i32
  %101 = select i1 %95, i32 %100, i32 %98
  %102 = add nuw nsw i32 %101, 1
  %103 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %102) #13
  %104 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 13, i32 0
  %105 = bitcast %"class.std::__1::tuple.1164"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #13
  %106 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %8, i32** %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::tuple.1138", %"class.std::__1::tuple.1138"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %107) #13
  %108 = call { %"struct.std::__1::__hash_node_base.167"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.163"* %104, i32* nonnull dereferenceable(4) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1164"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1138"* nonnull dereferenceable(1) %6) #13
  %109 = extractvalue { %"struct.std::__1::__hash_node_base.167"*, i8 } %108, 0
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %109, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %107) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #13
  %111 = zext i32 %103 to i64
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %109, i64 4
  %113 = bitcast %"struct.std::__1::__hash_node_base.167"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %164, label %116

116:                                              ; preds = %81
  %117 = call i64 @llvm.ctpop.i64(i64 %114) #13, !range !3
  %118 = icmp ugt i64 %117, 1
  br i1 %118, label %122, label %119

119:                                              ; preds = %116
  %120 = add i64 %114, 4294967295
  %121 = and i64 %120, %111
  br label %126

122:                                              ; preds = %116
  %123 = icmp ugt i64 %114, %111
  br i1 %123, label %126, label %124

124:                                              ; preds = %122
  %125 = urem i64 %111, %114
  br label %126

126:                                              ; preds = %124, %122, %119
  %127 = phi i64 [ %121, %119 ], [ %125, %124 ], [ %111, %122 ]
  %128 = bitcast %"struct.std::__1::__hash_node_base.167"* %110 to %"struct.std::__1::__hash_node_base.922"***
  %129 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %128, align 8
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %129, i64 %127
  %131 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %130, align 8
  %132 = icmp eq %"struct.std::__1::__hash_node_base.922"* %131, null
  br i1 %132, label %164, label %133

133:                                              ; preds = %126
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %131, i64 0, i32 0
  %135 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %134, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.922"* %135, null
  br i1 %136, label %164, label %137

137:                                              ; preds = %133
  %138 = add i64 %114, -1
  br label %139

139:                                              ; preds = %160, %137
  %140 = phi %"struct.std::__1::__hash_node_base.922"* [ %135, %137 ], [ %162, %160 ]
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %140, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base.922"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = icmp eq i64 %143, %111
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  br i1 %118, label %148, label %146

146:                                              ; preds = %145
  %147 = and i64 %143, %138
  br label %152

148:                                              ; preds = %145
  %149 = icmp ult i64 %143, %114
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = urem i64 %143, %114
  br label %152

152:                                              ; preds = %150, %148, %146
  %153 = phi i64 [ %147, %146 ], [ %151, %150 ], [ %143, %148 ]
  %154 = icmp eq i64 %153, %127
  br i1 %154, label %160, label %164

155:                                              ; preds = %139
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %140, i64 2
  %157 = bitcast %"struct.std::__1::__hash_node_base.922"* %156 to i32*
  %158 = load i32, i32* %157, align 4
  %159 = icmp eq i32 %158, %103
  br i1 %159, label %164, label %160

160:                                              ; preds = %155, %152
  %161 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %140, i64 0, i32 0
  %162 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %161, align 8
  %163 = icmp eq %"struct.std::__1::__hash_node_base.922"* %162, null
  br i1 %163, label %164, label %139

164:                                              ; preds = %77, %72, %69, %160, %155, %152, %133, %126, %81, %50, %43, %18
  %165 = phi i8* [ %19, %18 ], [ %19, %43 ], [ %19, %50 ], [ %82, %81 ], [ %82, %126 ], [ %82, %133 ], [ %82, %152 ], [ %82, %155 ], [ %82, %160 ], [ %19, %69 ], [ %19, %72 ], [ %19, %77 ]
  %166 = phi %"struct.std::__1::__hash_node_base.922"* [ null, %18 ], [ null, %43 ], [ null, %50 ], [ null, %81 ], [ null, %126 ], [ null, %133 ], [ null, %160 ], [ %140, %155 ], [ null, %152 ], [ null, %77 ], [ %57, %72 ], [ null, %69 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %165) #13
  %167 = icmp ne %"struct.std::__1::__hash_node_base.922"* %166, null
  ret i1 %167
}

declare zeroext i1 @_Z17spvOpcodeIsBranch6SpvOp_(i32) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext21InitializeCombinatorsEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.167"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJOjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.163"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1151"* dereferenceable(8), %"class.std::__1::tuple.1138"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.167"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.167"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.167"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.167"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.167"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #12, !noalias !109
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1151", %"class.std::__1::tuple.1151"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !109
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !109
  store i32 %62, i32* %61, align 8, !noalias !109
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #13, !noalias !109
  store i32 1065353216, i32* %65, align 4, !noalias !109
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !109
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.167"**
  store %"struct.std::__1::__hash_node_base.167"* null, %"struct.std::__1::__hash_node_base.167"** %68, align 8, !noalias !109
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #13
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.163"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #13, !range !3
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.167"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.167"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.167"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.167"* %111, %"struct.std::__1::__hash_node_base.167"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.167"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.167"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #13, !range !3
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.167"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.167"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.167"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.167"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.167"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.167"*, i8 } undef, %"struct.std::__1::__hash_node_base.167"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.167"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.167"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.163"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.163"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.163"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE8__rehashEm(%"class.std::__1::__hash_table.163"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.163"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.167"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.167"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.169", %"class.std::__1::__bucket_list_deallocator.169"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.167"* null, %"struct.std::__1::__hash_node_base.167"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !112

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.167"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.167"* null, %"struct.std::__1::__hash_node_base.167"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.167"* null, %"struct.std::__1::__hash_node_base.167"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.167"* null, %"struct.std::__1::__hash_node_base.167"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.167"* null, %"struct.std::__1::__hash_node_base.167"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.167"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.167"* %36, %"struct.std::__1::__hash_node_base.167"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.167"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.167"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.167"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.167"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.167"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.167"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.167"* %82, %"struct.std::__1::__hash_node_base.167"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.167"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.167"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.167"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.167"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.167"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.167"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.167"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.167"* %80, %"struct.std::__1::__hash_node_base.167"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.167"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.167"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.167"** null, %"struct.std::__1::__hash_node_base.167"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.167"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.167"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.169", %"class.std::__1::__bucket_list_deallocator.169"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.167"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISA_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.163"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1164"* dereferenceable(8), %"class.std::__1::tuple.1138"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.167"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.167"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.167"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.167"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.167"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %147, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 64) #12, !noalias !113
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !113
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !113
  store i32 %62, i32* %61, align 8, !noalias !113
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = getelementptr inbounds i8, i8* %57, i64 56
  %65 = bitcast i8* %64 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #13, !noalias !113
  store i32 1065353216, i32* %65, align 4, !noalias !113
  %66 = getelementptr inbounds i8, i8* %57, i64 8
  %67 = bitcast i8* %66 to i64*
  store i64 %7, i64* %67, align 8, !noalias !113
  %68 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.167"**
  store %"struct.std::__1::__hash_node_base.167"* null, %"struct.std::__1::__hash_node_base.167"** %68, align 8, !noalias !113
  %69 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  %72 = uitofp i64 %71 to float
  %73 = uitofp i64 %9 to float
  %74 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 3, i32 0, i32 0
  %75 = load float, float* %74, align 4
  %76 = fmul float %75, %73
  %77 = fcmp olt float %76, %72
  %78 = or i1 %10, %77
  br i1 %78, label %79, label %102

79:                                               ; preds = %55
  %80 = shl i64 %9, 1
  %81 = icmp ult i64 %9, 3
  %82 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %83 = icmp ugt i64 %82, 1
  %84 = or i1 %81, %83
  %85 = zext i1 %84 to i64
  %86 = or i64 %80, %85
  %87 = fdiv float %72, %75
  %88 = tail call float @llvm.ceil.f32(float %87) #13
  %89 = fptoui float %88 to i64
  %90 = icmp ult i64 %86, %89
  %91 = select i1 %90, i64 %89, i64 %86
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE6rehashEm(%"class.std::__1::__hash_table.163"* %0, i64 %91)
  %92 = load i64, i64* %8, align 8
  %93 = tail call i64 @llvm.ctpop.i64(i64 %92) #13, !range !3
  %94 = icmp ugt i64 %93, 1
  br i1 %94, label %98, label %95

95:                                               ; preds = %79
  %96 = add i64 %92, 4294967295
  %97 = and i64 %96, %7
  br label %102

98:                                               ; preds = %79
  %99 = icmp ugt i64 %92, %7
  br i1 %99, label %102, label %100

100:                                              ; preds = %98
  %101 = urem i64 %7, %92
  br label %102

102:                                              ; preds = %100, %98, %95, %55
  %103 = phi i64 [ %9, %55 ], [ %92, %95 ], [ %92, %98 ], [ %92, %100 ]
  %104 = phi i64 [ %56, %55 ], [ %97, %95 ], [ %7, %98 ], [ %101, %100 ]
  %105 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %106 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %105, align 8
  %107 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %106, i64 %104
  %108 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %107, align 8
  %109 = icmp eq %"struct.std::__1::__hash_node_base.167"* %108, null
  br i1 %109, label %110, label %136

110:                                              ; preds = %102
  %111 = getelementptr inbounds %"class.std::__1::__hash_table.163", %"class.std::__1::__hash_table.163"* %0, i64 0, i32 1, i32 0, i32 0
  %112 = bitcast %"struct.std::__1::__hash_node_base.167"* %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast i8* %57 to i64*
  store i64 %113, i64* %114, align 8
  %115 = bitcast %"struct.std::__1::__hash_node_base.167"* %111 to i8**
  store i8* %57, i8** %115, align 8
  store %"struct.std::__1::__hash_node_base.167"* %111, %"struct.std::__1::__hash_node_base.167"** %107, align 8
  %116 = load %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %68, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.167"* %116, null
  br i1 %117, label %143, label %118

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167", %"struct.std::__1::__hash_node_base.167"* %116, i64 1
  %120 = bitcast %"struct.std::__1::__hash_node_base.167"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = tail call i64 @llvm.ctpop.i64(i64 %103) #13, !range !3
  %123 = icmp ugt i64 %122, 1
  br i1 %123, label %127, label %124

124:                                              ; preds = %118
  %125 = add i64 %103, -1
  %126 = and i64 %121, %125
  br label %131

127:                                              ; preds = %118
  %128 = icmp ult i64 %121, %103
  br i1 %128, label %131, label %129

129:                                              ; preds = %127
  %130 = urem i64 %121, %103
  br label %131

131:                                              ; preds = %124, %127, %129
  %132 = phi i64 [ %126, %124 ], [ %130, %129 ], [ %121, %127 ]
  %133 = load %"struct.std::__1::__hash_node_base.167"**, %"struct.std::__1::__hash_node_base.167"*** %105, align 8
  %134 = getelementptr inbounds %"struct.std::__1::__hash_node_base.167"*, %"struct.std::__1::__hash_node_base.167"** %133, i64 %132
  %135 = bitcast %"struct.std::__1::__hash_node_base.167"** %134 to i8**
  br label %141

136:                                              ; preds = %102
  %137 = bitcast %"struct.std::__1::__hash_node_base.167"* %108 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast i8* %57 to i64*
  store i64 %138, i64* %139, align 8
  %140 = bitcast %"struct.std::__1::__hash_node_base.167"* %108 to i8**
  br label %141

141:                                              ; preds = %131, %136
  %142 = phi i8** [ %140, %136 ], [ %135, %131 ]
  store i8* %57, i8** %142, align 8
  br label %143

143:                                              ; preds = %141, %110
  %144 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.167"*
  %145 = load i64, i64* %69, align 8
  %146 = add i64 %145, 1
  store i64 %146, i64* %69, align 8
  br label %147

147:                                              ; preds = %50, %143
  %148 = phi i8 [ 1, %143 ], [ 0, %50 ]
  %149 = phi %"struct.std::__1::__hash_node_base.167"* [ %144, %143 ], [ %33, %50 ]
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.167"*, i8 } undef, %"struct.std::__1::__hash_node_base.167"* %149, 0
  %151 = insertvalue { %"struct.std::__1::__hash_node_base.167"*, i8 } %150, i8 %148, 1
  ret { %"struct.std::__1::__hash_node_base.167"*, i8 } %151
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.979"**
  %4 = load %"class.std::__1::function.979"*, %"class.std::__1::function.979"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.979", %"class.std::__1::function.979"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.979", %"class.std::__1::function.979"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #13
  ret i1 true
}

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.96"*, %"class.std::__1::__tree_node.1178"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1178"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1178"* %1 to %"class.std::__1::__tree_node.1178"**
  %6 = load %"class.std::__1::__tree_node.1178"*, %"class.std::__1::__tree_node.1178"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.96"* %0, %"class.std::__1::__tree_node.1178"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1178", %"class.std::__1::__tree_node.1178"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1178"**
  %9 = load %"class.std::__1::__tree_node.1178"*, %"class.std::__1::__tree_node.1178"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.96"* %0, %"class.std::__1::__tree_node.1178"* %9) #13
  %10 = bitcast %"class.std::__1::__tree_node.1178"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque.1043"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::pair.1046"*, align 8
  %3 = alloca %"struct.std::__1::pair.1046"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1182", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 255
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -256
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %10, align 8
  %12 = bitcast %"struct.std::__1::pair.1046"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %11, i64 1
  store %"struct.std::__1::pair.1046"** %14, %"struct.std::__1::pair.1046"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.1046"** %16, %18
  %20 = ptrtoint %"struct.std::__1::pair.1046"** %18 to i64
  %21 = bitcast %"struct.std::__1::pair.1046"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %23, align 8
  %25 = icmp ugt %"struct.std::__1::pair.1046"** %14, %24
  %26 = ptrtoint %"struct.std::__1::pair.1046"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.std::__1::pair.1046"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %14, i64 %32
  %34 = ptrtoint %"struct.std::__1::pair.1046"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.std::__1::pair.1046"** %33 to i8*
  %40 = bitcast %"struct.std::__1::pair.1046"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #13
  %41 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.std::__1::pair.1046"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %33, i64 %36
  store %"struct.std::__1::pair.1046"** %44, %"struct.std::__1::pair.1046"*** %15, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %43, i64 %32
  store %"struct.std::__1::pair.1046"** %45, %"struct.std::__1::pair.1046"*** %10, align 8
  %46 = bitcast %"struct.std::__1::pair.1046"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.std::__1::pair.1046"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.1043"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"struct.std::__1::pair.1046"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %60, i64 %57
  %63 = ptrtoint %"struct.std::__1::pair.1046"** %62 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %60, i64 %53
  %65 = ptrtoint %"struct.std::__1::pair.1046"** %64 to i64
  %66 = ptrtoint %"struct.std::__1::pair.1046"** %14 to i64
  %67 = ptrtoint %"struct.std::__1::pair.1046"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.std::__1::pair.1046"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.std::__1::pair.1046"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.std::__1::pair.1046"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %79, i64 1
  %87 = ptrtoint %"struct.std::__1::pair.1046"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !116

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.std::__1::pair.1046"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.std::__1::pair.1046"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.std::__1::pair.1046"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.std::__1::pair.1046"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.std::__1::pair.1046"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.std::__1::pair.1046"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %99, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %101, i64 1
  %107 = bitcast %"struct.std::__1::pair.1046"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1046"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %99, i64 2
  %111 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %101, i64 2
  %112 = bitcast %"struct.std::__1::pair.1046"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1046"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %99, i64 3
  %116 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %101, i64 3
  %117 = bitcast %"struct.std::__1::pair.1046"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1046"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %99, i64 4
  %121 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %101, i64 4
  %122 = bitcast %"struct.std::__1::pair.1046"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1046"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %99, i64 5
  %126 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %101, i64 5
  %127 = bitcast %"struct.std::__1::pair.1046"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1046"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %99, i64 6
  %131 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %101, i64 6
  %132 = bitcast %"struct.std::__1::pair.1046"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::pair.1046"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %99, i64 7
  %136 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %101, i64 7
  %137 = bitcast %"struct.std::__1::pair.1046"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair.1046"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %99, i64 8
  %141 = ptrtoint %"struct.std::__1::pair.1046"** %140 to i64
  %142 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %101, i64 8
  %143 = icmp eq %"struct.std::__1::pair.1046"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.std::__1::pair.1046"** %70 to i64
  %146 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.std::__1::pair.1046"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.std::__1::pair.1046"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::pair.1046"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.std::__1::pair.1046"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.std::__1::pair.1046"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  %156 = bitcast %"struct.std::__1::pair.1046"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %15, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %160, i64 1
  store %"struct.std::__1::pair.1046"** %161, %"struct.std::__1::pair.1046"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::pair.1046"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.1046"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair.1046"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.1043"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.std::__1::pair.1046"**
  %181 = inttoptr i64 %169 to %"struct.std::__1::pair.1046"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.std::__1::pair.1046"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = tail call i8* @_Znwm(i64 4096) #12
  %187 = bitcast %"struct.std::__1::pair.1046"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer.1045"* %163, %"struct.std::__1::pair.1046"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.std::__1::pair.1046"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = tail call i8* @_Znwm(i64 4096) #12
  %191 = bitcast %"struct.std::__1::pair.1046"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer.1045"* %163, %"struct.std::__1::pair.1046"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %192 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %167, align 8
  %193 = bitcast %"struct.std::__1::pair.1046"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %192, i64 1
  store %"struct.std::__1::pair.1046"** %195, %"struct.std::__1::pair.1046"*** %167, align 8
  %196 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %164, align 8
  %197 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %172, align 8
  %198 = icmp eq %"struct.std::__1::pair.1046"** %196, %197
  %199 = ptrtoint %"struct.std::__1::pair.1046"** %197 to i64
  %200 = bitcast %"struct.std::__1::pair.1046"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %202, align 8
  %204 = icmp ugt %"struct.std::__1::pair.1046"** %195, %203
  %205 = ptrtoint %"struct.std::__1::pair.1046"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.std::__1::pair.1046"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %195, i64 %211
  %213 = ptrtoint %"struct.std::__1::pair.1046"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.std::__1::pair.1046"** %212 to i8*
  %219 = bitcast %"struct.std::__1::pair.1046"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #13
  %220 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.std::__1::pair.1046"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %212, i64 %215
  store %"struct.std::__1::pair.1046"** %223, %"struct.std::__1::pair.1046"*** %164, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %222, i64 %211
  store %"struct.std::__1::pair.1046"** %224, %"struct.std::__1::pair.1046"*** %167, align 8
  %225 = bitcast %"struct.std::__1::pair.1046"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = bitcast i8* %236 to %"struct.std::__1::pair.1046"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %237, i64 %234
  %240 = ptrtoint %"struct.std::__1::pair.1046"** %239 to i64
  %241 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %237, i64 %230
  %242 = ptrtoint %"struct.std::__1::pair.1046"** %241 to i64
  %243 = ptrtoint %"struct.std::__1::pair.1046"** %195 to i64
  %244 = ptrtoint %"struct.std::__1::pair.1046"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.std::__1::pair.1046"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.std::__1::pair.1046"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.std::__1::pair.1046"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %256, i64 1
  %264 = ptrtoint %"struct.std::__1::pair.1046"** %263 to i64
  %265 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !117

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.std::__1::pair.1046"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.std::__1::pair.1046"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.std::__1::pair.1046"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.std::__1::pair.1046"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.std::__1::pair.1046"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.std::__1::pair.1046"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %276, i64 1
  %283 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %278, i64 1
  %284 = bitcast %"struct.std::__1::pair.1046"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::pair.1046"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %276, i64 2
  %288 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %278, i64 2
  %289 = bitcast %"struct.std::__1::pair.1046"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.std::__1::pair.1046"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %276, i64 3
  %293 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %278, i64 3
  %294 = bitcast %"struct.std::__1::pair.1046"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.std::__1::pair.1046"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %276, i64 4
  %298 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %278, i64 4
  %299 = bitcast %"struct.std::__1::pair.1046"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.std::__1::pair.1046"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %276, i64 5
  %303 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %278, i64 5
  %304 = bitcast %"struct.std::__1::pair.1046"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.std::__1::pair.1046"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %276, i64 6
  %308 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %278, i64 6
  %309 = bitcast %"struct.std::__1::pair.1046"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.std::__1::pair.1046"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %276, i64 7
  %313 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %278, i64 7
  %314 = bitcast %"struct.std::__1::pair.1046"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.std::__1::pair.1046"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %276, i64 8
  %318 = ptrtoint %"struct.std::__1::pair.1046"** %317 to i64
  %319 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %278, i64 8
  %320 = icmp eq %"struct.std::__1::pair.1046"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.std::__1::pair.1046"** %247 to i64
  %323 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.std::__1::pair.1046"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.std::__1::pair.1046"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.std::__1::pair.1046"** %325 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = bitcast %"struct.std::__1::pair.1046"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %164, align 8
  %336 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %335, i64 1
  store %"struct.std::__1::pair.1046"** %336, %"struct.std::__1::pair.1046"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1182"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #13
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1182"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1046"** null, %"struct.std::__1::pair.1046"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.1050"** %342 to %"class.std::__1::__compressed_pair.1047"**
  store %"class.std::__1::__compressed_pair.1047"* %346, %"class.std::__1::__compressed_pair.1047"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #12
  %354 = bitcast i8* %353 to %"struct.std::__1::pair.1046"**
  %355 = bitcast %"struct.std::__1::__split_buffer.1182"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %354, i64 %171
  store %"struct.std::__1::pair.1046"** %356, %"struct.std::__1::pair.1046"*** %340, align 8
  store %"struct.std::__1::pair.1046"** %356, %"struct.std::__1::pair.1046"*** %339, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %354, i64 %345
  store %"struct.std::__1::pair.1046"** %357, %"struct.std::__1::pair.1046"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #12
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.std::__1::pair.1046"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.std::__1::pair.1046"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.std::__1::pair.1046"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %356, i64 %370
  store %"struct.std::__1::pair.1046"** %371, %"struct.std::__1::pair.1046"*** %340, align 8
  store %"struct.std::__1::pair.1046"** %371, %"struct.std::__1::pair.1046"*** %339, align 8
  %372 = ptrtoint %"struct.std::__1::pair.1046"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1182"* %4 to i64*
  %382 = bitcast %"struct.std::__1::pair.1046"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to %"struct.std::__1::pair.1046"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %386, i64 %383
  %389 = ptrtoint %"struct.std::__1::pair.1046"** %388 to i64
  %390 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %386, i64 %377
  %391 = ptrtoint %"struct.std::__1::pair.1046"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.std::__1::pair.1046"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.std::__1::pair.1046"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #12
  %394 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %164, align 8
  %395 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %167, align 8
  %396 = ptrtoint %"struct.std::__1::pair.1046"** %395 to i64
  %397 = ptrtoint %"struct.std::__1::pair.1046"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.std::__1::pair.1046"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.std::__1::pair.1046"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.std::__1::pair.1046"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.std::__1::pair.1046"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %406, i64 1
  store %"struct.std::__1::pair.1046"** %408, %"struct.std::__1::pair.1046"*** %340, align 8
  %409 = icmp eq %"struct.std::__1::pair.1046"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.std::__1::pair.1046"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1182"* %4 to i64*
  %413 = bitcast %"struct.std::__1::pair.1046"*** %339 to i64*
  %414 = bitcast %"struct.std::__1::pair.1046"*** %340 to i64*
  %415 = bitcast %"struct.std::__1::pair.1046"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.std::__1::pair.1046"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1182"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.std::__1::pair.1046"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.std::__1::pair.1046"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.std::__1::pair.1046"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.std::__1::pair.1046"**
  %441 = inttoptr i64 %434 to %"struct.std::__1::pair.1046"**
  %442 = icmp eq %"struct.std::__1::pair.1046"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %441, i64 -1
  %445 = ptrtoint %"struct.std::__1::pair.1046"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %441, i64 %448
  store %"struct.std::__1::pair.1046"** %449, %"struct.std::__1::pair.1046"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #13
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.std::__1::pair.1046"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1182"* nonnull %4, %"struct.std::__1::pair.1046"** dereferenceable(8) %457)
  %458 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %167, align 8
  %459 = icmp eq %"struct.std::__1::pair.1046"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer.1045"*, %"struct.std::__1::pair.1046"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1045", %"struct.std::__1::__split_buffer.1045"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1045", %"struct.std::__1::__split_buffer.1045"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1046"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1046"** %6 to i64
  %9 = bitcast %"struct.std::__1::pair.1046"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1045", %"struct.std::__1::__split_buffer.1045"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1045", %"struct.std::__1::__split_buffer.1045"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.1046"** %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.1046"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.1046"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %12, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1046"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.std::__1::pair.1046"** %23 to i8*
  %30 = bitcast %"struct.std::__1::pair.1046"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.std::__1::pair.1046"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %23, i64 %26
  store %"struct.std::__1::pair.1046"** %34, %"struct.std::__1::pair.1046"*** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %33, i64 %22
  store %"struct.std::__1::pair.1046"** %35, %"struct.std::__1::pair.1046"*** %11, align 8
  %36 = bitcast %"struct.std::__1::pair.1046"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.std::__1::pair.1046"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1045"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.1046"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %50, i64 %47
  %53 = ptrtoint %"struct.std::__1::pair.1046"** %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %50, i64 %43
  %55 = ptrtoint %"struct.std::__1::pair.1046"** %54 to i64
  %56 = ptrtoint %"struct.std::__1::pair.1046"** %12 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1046"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.1046"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.std::__1::pair.1046"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.std::__1::pair.1046"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %69, i64 1
  %77 = ptrtoint %"struct.std::__1::pair.1046"** %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !118

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.std::__1::pair.1046"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.std::__1::pair.1046"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.std::__1::pair.1046"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.std::__1::pair.1046"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.std::__1::pair.1046"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.std::__1::pair.1046"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %89, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %91, i64 1
  %97 = bitcast %"struct.std::__1::pair.1046"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.std::__1::pair.1046"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %89, i64 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %91, i64 2
  %102 = bitcast %"struct.std::__1::pair.1046"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.1046"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %89, i64 3
  %106 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %91, i64 3
  %107 = bitcast %"struct.std::__1::pair.1046"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1046"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %89, i64 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %91, i64 4
  %112 = bitcast %"struct.std::__1::pair.1046"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1046"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %89, i64 5
  %116 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %91, i64 5
  %117 = bitcast %"struct.std::__1::pair.1046"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1046"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %89, i64 6
  %121 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %91, i64 6
  %122 = bitcast %"struct.std::__1::pair.1046"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1046"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %89, i64 7
  %126 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %91, i64 7
  %127 = bitcast %"struct.std::__1::pair.1046"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1046"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %89, i64 8
  %131 = ptrtoint %"struct.std::__1::pair.1046"** %130 to i64
  %132 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %91, i64 8
  %133 = icmp eq %"struct.std::__1::pair.1046"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.std::__1::pair.1046"** %60 to i64
  %136 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.std::__1::pair.1046"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.std::__1::pair.1046"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.std::__1::pair.1046"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.std::__1::pair.1046"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.std::__1::pair.1046"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"struct.std::__1::pair.1046"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.std::__1::pair.1046"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %3, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %152, i64 1
  store %"struct.std::__1::pair.1046"** %153, %"struct.std::__1::pair.1046"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer.1045"*, %"struct.std::__1::pair.1046"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1045", %"struct.std::__1::__split_buffer.1045"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1045", %"struct.std::__1::__split_buffer.1045"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1046"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1046"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1045", %"struct.std::__1::__split_buffer.1045"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1045", %"struct.std::__1::__split_buffer.1045"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1046"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1046"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1046"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1046"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1046"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1046"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1046"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1046"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1046"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1046"** %36, %"struct.std::__1::pair.1046"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %35, i64 %22
  store %"struct.std::__1::pair.1046"** %37, %"struct.std::__1::pair.1046"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1045"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1046"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1046"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1046"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1046"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1046"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1046"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1046"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1046"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1046"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !119

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1046"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1046"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1046"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1046"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1046"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1046"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1046"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1046"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1046"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1046"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1046"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1046"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1046"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1046"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1046"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1046"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1046"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1046"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1046"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1046"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1046"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1046"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1046"** %61 to i64
  %137 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1046"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1046"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1046"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1046"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1046"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1046"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1046"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1046"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %153, i64 -1
  store %"struct.std::__1::pair.1046"** %154, %"struct.std::__1::pair.1046"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1182"*, %"struct.std::__1::pair.1046"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1046"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1046"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1046"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1046"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1046"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1046"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1046"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1046"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1046"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1046"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1046"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1046"** %36, %"struct.std::__1::pair.1046"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %35, i64 %22
  store %"struct.std::__1::pair.1046"** %37, %"struct.std::__1::pair.1046"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1182"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1046"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1046"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1046"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1046"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1046"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1046"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1046"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1046"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1046"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !120

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1046"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1046"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1046"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1046"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1046"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1046"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1046"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1046"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1046"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1046"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1046"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1046"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1046"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1046"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1046"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1046"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1046"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1046"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1046"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1046"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1046"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1046"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1046"** %61 to i64
  %137 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1046"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1046"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1046"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1046"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1046"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1046"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1046"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1046"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %153, i64 -1
  store %"struct.std::__1::pair.1046"** %154, %"struct.std::__1::pair.1046"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.922"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.922"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.922"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #12, !noalias !121
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !121
  store i32 %58, i32* %57, align 4, !noalias !121
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !121
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"**
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %61, align 8, !noalias !121
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #13
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #13, !range !3
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.922"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.922"* %104, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.922"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.922"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #13, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.922"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.922"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } undef, %"struct.std::__1::__hash_node_base.922"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.922"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.918"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.918"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.922"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.922"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !124

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.922"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.922"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.922"* %36, %"struct.std::__1::__hash_node_base.922"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.922"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.922"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.922"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.922"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.922"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.922"* %82, %"struct.std::__1::__hash_node_base.922"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.922"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.922"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.922"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.922"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.922"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.922"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.922"* %80, %"struct.std::__1::__hash_node_base.922"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.922"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.922"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.922"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.922"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.924", %"class.std::__1::__bucket_list_deallocator.924"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1009"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1005"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1164"* dereferenceable(8), %"class.std::__1::tuple.1138"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.1009"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1009"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.1009"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #12, !noalias !125
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1164", %"class.std::__1::tuple.1164"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !125
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !125
  store i32 %62, i32* %61, align 8, !noalias !125
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %64, align 8, !noalias !125
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !125
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.1009"**
  store %"struct.std::__1::__hash_node_base.1009"* null, %"struct.std::__1::__hash_node_base.1009"** %67, align 8, !noalias !125
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #13, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1005"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.1009"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.1009"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.1009"* %110, %"struct.std::__1::__hash_node_base.1009"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.1009"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.1009"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.1009"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.1009"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.1009"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.1009"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.1009"*, i8 } undef, %"struct.std::__1::__hash_node_base.1009"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.1009"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.1009"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1005"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !3
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #13
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1005"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #13, !range !3
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #13
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #13, !range !3
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #13
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1005"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1005"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #14
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #12
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1005"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1009"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1009"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1011", %"class.std::__1::__bucket_list_deallocator.1011"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1009"* null, %"struct.std::__1::__hash_node_base.1009"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !128

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1009"* null, %"struct.std::__1::__hash_node_base.1009"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1009"* null, %"struct.std::__1::__hash_node_base.1009"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1009"* null, %"struct.std::__1::__hash_node_base.1009"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1009"* null, %"struct.std::__1::__hash_node_base.1009"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1009"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #13, !range !3
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1009"* %36, %"struct.std::__1::__hash_node_base.1009"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1009"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1009"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1009"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1009"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1009"* %82, %"struct.std::__1::__hash_node_base.1009"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1009"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1009"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1009"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1009"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1009"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1009"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1009"* %80, %"struct.std::__1::__hash_node_base.1009"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1009"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1009"** null, %"struct.std::__1::__hash_node_base.1009"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1009"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1009"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1011", %"class.std::__1::__bucket_list_deallocator.1011"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.1005"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1209", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.1009"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1009"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.1009"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.1209"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.1209"* nonnull sret %3, %"class.std::__1::__hash_table.1005"* %0, %"struct.std::__1::__hash_node_base.1009"* nonnull %33) #13
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1209", %"class.std::__1::unique_ptr.1209"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.1206"*, %"struct.std::__1::__hash_node.1206"** %59, align 8
  store %"struct.std::__1::__hash_node.1206"* null, %"struct.std::__1::__hash_node.1206"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.1206"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node.1206"* %60 to i8*
  call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS6_PvEEEE(%"class.std::__1::unique_ptr.1209"* noalias sret, %"class.std::__1::__hash_table.1005"*, %"struct.std::__1::__hash_node_base.1009"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.1009"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.1009"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.1016", %"class.std::__1::__compressed_pair.1016"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1009"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.1009"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.1009"* null, %"struct.std::__1::__hash_node_base.1009"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.1009"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.1009"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.1009"* %25, %"struct.std::__1::__hash_node_base.1009"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.1009"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.1009"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.1009"* null, %"struct.std::__1::__hash_node_base.1009"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.1009"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1209"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1209", %"class.std::__1::unique_ptr.1209"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.1019"** %98 to %"class.std::__1::__compressed_pair.1016"**
  store %"class.std::__1::__compressed_pair.1016"* %30, %"class.std::__1::__compressed_pair.1016"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1209", %"class.std::__1::unique_ptr.1209"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt14TreeDFIteratorINS0_17DominatorTreeNodeEE14MoveToNextNodeEv(%"class.spvtools::opt::TreeDFIterator"*) local_unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 0
  %3 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2, align 8
  %4 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %3, null
  br i1 %4, label %108, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %"struct.spvtools::opt::DominatorTreeNode"* null, %"struct.spvtools::opt::DominatorTreeNode"** %2, align 8
  br label %108

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %7, -1
  %14 = add i64 %13, %12
  %15 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %15, align 8
  %17 = lshr i64 %14, 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %16, i64 %17
  %19 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %18, align 8
  %20 = and i64 %14, 255
  %21 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %19, i64 %20, i32 1, i32 0
  %22 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %21 to i64**
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::TreeDFIterator"* %0 to i64*
  store i64 %24, i64* %25, align 8
  %26 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %21, align 8
  %27 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %26, i64 1
  store %"struct.spvtools::opt::DominatorTreeNode"** %27, %"struct.spvtools::opt::DominatorTreeNode"*** %21, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %19, i64 %20, i32 0
  %29 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %28, align 8
  %30 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %29, i64 0, i32 2, i32 0, i32 1
  %31 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %30, align 8
  %32 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %31, %27
  br i1 %32, label %33, label %58

33:                                               ; preds = %10
  %34 = load i64, i64* %6, align 8
  %35 = load i64, i64* %11, align 8
  %36 = add i64 %34, -1
  store i64 %36, i64* %6, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %38 = bitcast %"struct.std::__1::pair.1046"*** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"struct.std::__1::pair.1046"*** %15 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %39, %41
  %43 = icmp eq i64 %42, 0
  %44 = shl i64 %42, 5
  %45 = add i64 %44, -1
  %46 = select i1 %43, i64 0, i64 %45
  %47 = sub i64 1, %34
  %48 = sub i64 %47, %35
  %49 = add i64 %48, %46
  %50 = icmp ult i64 %49, 512
  br i1 %50, label %58, label %51

51:                                               ; preds = %33
  %52 = inttoptr i64 %39 to %"struct.std::__1::pair.1046"**
  %53 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %52, i64 -1
  %54 = bitcast %"struct.std::__1::pair.1046"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #12
  %56 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %37, align 8
  %57 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %56, i64 -1
  store %"struct.std::__1::pair.1046"** %57, %"struct.std::__1::pair.1046"*** %37, align 8
  br label %58

58:                                               ; preds = %51, %33, %10
  %59 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2, align 8
  %60 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %59, i64 0, i32 2, i32 0, i32 0
  %61 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %60, align 8
  %62 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %59, i64 0, i32 2, i32 0, i32 1
  %63 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %62, align 8
  %64 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %61, %63
  br i1 %64, label %108, label %65

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %67 = bitcast %"struct.std::__1::pair.1046"*** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"struct.std::__1::pair.1046"*** %15 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = icmp eq i64 %71, 0
  %73 = shl i64 %71, 5
  %74 = add i64 %73, -1
  %75 = select i1 %72, i64 0, i64 %74
  %76 = load i64, i64* %11, align 8
  %77 = load i64, i64* %6, align 8
  %78 = add i64 %77, %76
  %79 = icmp eq i64 %75, %78
  %80 = inttoptr i64 %70 to %"struct.std::__1::pair.1046"**
  %81 = inttoptr i64 %68 to %"struct.std::__1::pair.1046"**
  br i1 %79, label %82, label %89

82:                                               ; preds = %65
  %83 = getelementptr inbounds %"class.spvtools::opt::TreeDFIterator", %"class.spvtools::opt::TreeDFIterator"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque.1043"* %83) #13
  %84 = load i64, i64* %6, align 8
  %85 = load i64, i64* %11, align 8
  %86 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %15, align 8
  %87 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %66, align 8
  %88 = add i64 %85, %84
  br label %89

89:                                               ; preds = %82, %65
  %90 = phi i64 [ %88, %82 ], [ %78, %65 ]
  %91 = phi %"struct.std::__1::pair.1046"** [ %87, %82 ], [ %81, %65 ]
  %92 = phi %"struct.std::__1::pair.1046"** [ %86, %82 ], [ %80, %65 ]
  %93 = icmp eq %"struct.std::__1::pair.1046"** %91, %92
  br i1 %93, label %101, label %94

94:                                               ; preds = %89
  %95 = lshr i64 %90, 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %92, i64 %95
  %97 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %96, align 8
  %98 = and i64 %90, 255
  %99 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %97, i64 %98
  %100 = bitcast %"struct.std::__1::pair.1046"* %99 to i8*
  br label %101

101:                                              ; preds = %89, %94
  %102 = phi i8* [ %100, %94 ], [ null, %89 ]
  %103 = bitcast i8* %102 to %"struct.spvtools::opt::DominatorTreeNode"**
  store %"struct.spvtools::opt::DominatorTreeNode"* %59, %"struct.spvtools::opt::DominatorTreeNode"** %103, align 8
  %104 = getelementptr inbounds i8, i8* %102, i64 8
  %105 = bitcast i8* %104 to %"struct.spvtools::opt::DominatorTreeNode"***
  store %"struct.spvtools::opt::DominatorTreeNode"** %61, %"struct.spvtools::opt::DominatorTreeNode"*** %105, align 8
  %106 = load i64, i64* %6, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %6, align 8
  br label %108

108:                                              ; preds = %58, %101, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE14__erase_uniqueIjEEmRKT_(%"class.std::__1::__hash_table.918"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.1196", align 8
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %65, label %9

9:                                                ; preds = %2
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %17, %15, %12
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.922"* %24, null
  br i1 %25, label %65, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %24, i64 0, i32 0
  %28 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node_base.922"* %28, null
  br i1 %29, label %65, label %30

30:                                               ; preds = %26
  %31 = add i64 %7, -1
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi %"struct.std::__1::__hash_node_base.922"* [ %28, %30 ], [ %55, %53 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %33, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %32
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %31
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %43, %41, %39
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %53, label %65

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %33, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.922"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %57, label %53

53:                                               ; preds = %48, %45
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %33, i64 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base.922"* %55, null
  br i1 %56, label %65, label %32

57:                                               ; preds = %48
  %58 = bitcast %"class.std::__1::unique_ptr.1196"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58)
  call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1196"* nonnull sret %3, %"class.std::__1::__hash_table.918"* %0, %"struct.std::__1::__hash_node_base.922"* nonnull %33) #13
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.1196", %"class.std::__1::unique_ptr.1196"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.std::__1::__hash_node.1195"*, %"struct.std::__1::__hash_node.1195"** %59, align 8
  store %"struct.std::__1::__hash_node.1195"* null, %"struct.std::__1::__hash_node.1195"** %59, align 8
  %61 = icmp eq %"struct.std::__1::__hash_node.1195"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"struct.std::__1::__hash_node.1195"* %60 to i8*
  call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %57, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58)
  br label %65

65:                                               ; preds = %45, %53, %26, %2, %19, %64
  %66 = phi i64 [ 1, %64 ], [ 0, %19 ], [ 0, %2 ], [ 0, %26 ], [ 0, %53 ], [ 0, %45 ]
  ret i64 %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIjPvEEEE(%"class.std::__1::unique_ptr.1196"* noalias sret, %"class.std::__1::__hash_table.918"*, %"struct.std::__1::__hash_node_base.922"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.922"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #13, !range !3
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.922"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.922"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.929", %"class.std::__1::__compressed_pair.929"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.922"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.922"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.922"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.922"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.922"* %25, %"struct.std::__1::__hash_node_base.922"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.922"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.922"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.922"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1196"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1196", %"class.std::__1::unique_ptr.1196"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.932"** %98 to %"class.std::__1::__compressed_pair.929"**
  store %"class.std::__1::__compressed_pair.929"* %30, %"class.std::__1::__compressed_pair.929"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1196", %"class.std::__1::unique_ptr.1196"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__vector_baseINS_4pairIPN8spvtools3opt4LoopENS_10unique_ptrIS4_NS_14default_deleteIS4_EEEEEENS_9allocatorISA_EEE5clearEv(%"class.std::__1::__vector_base.1029"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::__vector_base.1029", %"class.std::__1::__vector_base.1029"* %0, i64 0, i32 0
  %3 = load %"struct.std::__1::pair.1030"*, %"struct.std::__1::pair.1030"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::__vector_base.1029", %"class.std::__1::__vector_base.1029"* %0, i64 0, i32 1
  %5 = load %"struct.std::__1::pair.1030"*, %"struct.std::__1::pair.1030"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.1030"* %5, %3
  br i1 %6, label %42, label %7

7:                                                ; preds = %1, %40
  %8 = phi %"struct.std::__1::pair.1030"* [ %9, %40 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"struct.std::__1::pair.1030", %"struct.std::__1::pair.1030"* %8, i64 -1
  %10 = getelementptr inbounds %"struct.std::__1::pair.1030", %"struct.std::__1::pair.1030"* %8, i64 -1, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %10, align 8
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %10, align 8
  %12 = icmp eq %"class.spvtools::opt::Loop"* %11, null
  br i1 %12, label %40, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %11, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %15 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %14, align 8
  %16 = icmp eq %"struct.std::__1::__hash_node_base.922"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13, %17
  %18 = phi %"struct.std::__1::__hash_node_base.922"* [ %20, %17 ], [ %15, %13 ]
  %19 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %18, i64 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %19, align 8
  %21 = bitcast %"struct.std::__1::__hash_node_base.922"* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  %22 = icmp eq %"struct.std::__1::__hash_node_base.922"* %20, null
  br i1 %22, label %23, label %17

23:                                               ; preds = %17, %13
  %24 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %11, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %24, align 8
  store %"struct.std::__1::__hash_node_base.922"** null, %"struct.std::__1::__hash_node_base.922"*** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.922"** %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = bitcast %"struct.std::__1::__hash_node_base.922"** %25 to i8*
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %23
  %30 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %11, i64 0, i32 7, i32 0, i32 0
  %31 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %30, align 8
  %32 = icmp eq %"class.spvtools::opt::Loop"** %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint %"class.spvtools::opt::Loop"** %31 to i64
  %35 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %11, i64 0, i32 7, i32 0, i32 1
  %36 = bitcast %"class.spvtools::opt::Loop"*** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast %"class.spvtools::opt::Loop"** %31 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %33, %29
  %39 = bitcast %"class.spvtools::opt::Loop"* %11 to i8*
  tail call void @_ZdlPv(i8* %39) #12
  br label %40

40:                                               ; preds = %38, %7
  %41 = icmp eq %"struct.std::__1::pair.1030"* %9, %3
  br i1 %41, label %42, label %7

42:                                               ; preds = %40, %1
  store %"struct.std::__1::pair.1030"* %3, %"struct.std::__1::pair.1030"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque.1072"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::__1::pair.1075"*, align 8
  %3 = alloca %"struct.std::__1::pair.1075"*, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1218", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 255
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -256
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %10, align 8
  %12 = bitcast %"struct.std::__1::pair.1075"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %11, i64 1
  store %"struct.std::__1::pair.1075"** %14, %"struct.std::__1::pair.1075"*** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %17, align 8
  %19 = icmp eq %"struct.std::__1::pair.1075"** %16, %18
  %20 = ptrtoint %"struct.std::__1::pair.1075"** %18 to i64
  %21 = bitcast %"struct.std::__1::pair.1075"** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %23, align 8
  %25 = icmp ugt %"struct.std::__1::pair.1075"** %14, %24
  %26 = ptrtoint %"struct.std::__1::pair.1075"** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"struct.std::__1::pair.1075"** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %14, i64 %32
  %34 = ptrtoint %"struct.std::__1::pair.1075"** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"struct.std::__1::pair.1075"** %33 to i8*
  %40 = bitcast %"struct.std::__1::pair.1075"** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #13
  %41 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"struct.std::__1::pair.1075"** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %33, i64 %36
  store %"struct.std::__1::pair.1075"** %44, %"struct.std::__1::pair.1075"*** %15, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %43, i64 %32
  store %"struct.std::__1::pair.1075"** %45, %"struct.std::__1::pair.1075"*** %10, align 8
  %46 = bitcast %"struct.std::__1::pair.1075"** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"struct.std::__1::pair.1075"*** %17 to i64*
  %49 = bitcast %"class.std::__1::deque.1072"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"struct.std::__1::pair.1075"**
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %60, i64 %57
  %63 = ptrtoint %"struct.std::__1::pair.1075"** %62 to i64
  %64 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %60, i64 %53
  %65 = ptrtoint %"struct.std::__1::pair.1075"** %64 to i64
  %66 = ptrtoint %"struct.std::__1::pair.1075"** %14 to i64
  %67 = ptrtoint %"struct.std::__1::pair.1075"** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"struct.std::__1::pair.1075"** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"struct.std::__1::pair.1075"** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"struct.std::__1::pair.1075"** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %79, i64 1
  %87 = ptrtoint %"struct.std::__1::pair.1075"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !129

91:                                               ; preds = %78
  %92 = ptrtoint %"struct.std::__1::pair.1075"** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"struct.std::__1::pair.1075"** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"struct.std::__1::pair.1075"** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"struct.std::__1::pair.1075"** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"struct.std::__1::pair.1075"** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"struct.std::__1::pair.1075"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %99, i64 1
  %106 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %101, i64 1
  %107 = bitcast %"struct.std::__1::pair.1075"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1075"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %99, i64 2
  %111 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %101, i64 2
  %112 = bitcast %"struct.std::__1::pair.1075"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1075"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %99, i64 3
  %116 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %101, i64 3
  %117 = bitcast %"struct.std::__1::pair.1075"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1075"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %99, i64 4
  %121 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %101, i64 4
  %122 = bitcast %"struct.std::__1::pair.1075"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1075"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %99, i64 5
  %126 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %101, i64 5
  %127 = bitcast %"struct.std::__1::pair.1075"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1075"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %99, i64 6
  %131 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %101, i64 6
  %132 = bitcast %"struct.std::__1::pair.1075"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"struct.std::__1::pair.1075"** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %99, i64 7
  %136 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %101, i64 7
  %137 = bitcast %"struct.std::__1::pair.1075"** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"struct.std::__1::pair.1075"** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %99, i64 8
  %141 = ptrtoint %"struct.std::__1::pair.1075"** %140 to i64
  %142 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %101, i64 8
  %143 = icmp eq %"struct.std::__1::pair.1075"** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"struct.std::__1::pair.1075"** %70 to i64
  %146 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"struct.std::__1::pair.1075"** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"struct.std::__1::pair.1075"*** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::pair.1075"*** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"struct.std::__1::pair.1075"** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"struct.std::__1::pair.1075"** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  %156 = bitcast %"struct.std::__1::pair.1075"*** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %15, align 8
  %161 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %160, i64 1
  store %"struct.std::__1::pair.1075"** %161, %"struct.std::__1::pair.1075"*** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"struct.std::__1::pair.1075"*** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"struct.std::__1::pair.1075"*** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"struct.std::__1::pair.1075"*** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque.1072"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"struct.std::__1::pair.1075"**
  %181 = inttoptr i64 %169 to %"struct.std::__1::pair.1075"**
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"struct.std::__1::pair.1075"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = tail call i8* @_Znwm(i64 4096) #12
  %187 = bitcast %"struct.std::__1::pair.1075"** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer.1074"* %163, %"struct.std::__1::pair.1075"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"struct.std::__1::pair.1075"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = tail call i8* @_Znwm(i64 4096) #12
  %191 = bitcast %"struct.std::__1::pair.1075"** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer.1074"* %163, %"struct.std::__1::pair.1075"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %192 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %167, align 8
  %193 = bitcast %"struct.std::__1::pair.1075"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %192, i64 1
  store %"struct.std::__1::pair.1075"** %195, %"struct.std::__1::pair.1075"*** %167, align 8
  %196 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %164, align 8
  %197 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %172, align 8
  %198 = icmp eq %"struct.std::__1::pair.1075"** %196, %197
  %199 = ptrtoint %"struct.std::__1::pair.1075"** %197 to i64
  %200 = bitcast %"struct.std::__1::pair.1075"** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %202, align 8
  %204 = icmp ugt %"struct.std::__1::pair.1075"** %195, %203
  %205 = ptrtoint %"struct.std::__1::pair.1075"** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"struct.std::__1::pair.1075"** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %195, i64 %211
  %213 = ptrtoint %"struct.std::__1::pair.1075"** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"struct.std::__1::pair.1075"** %212 to i8*
  %219 = bitcast %"struct.std::__1::pair.1075"** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #13
  %220 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"struct.std::__1::pair.1075"** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %212, i64 %215
  store %"struct.std::__1::pair.1075"** %223, %"struct.std::__1::pair.1075"*** %164, align 8
  %224 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %222, i64 %211
  store %"struct.std::__1::pair.1075"** %224, %"struct.std::__1::pair.1075"*** %167, align 8
  %225 = bitcast %"struct.std::__1::pair.1075"** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = bitcast i8* %236 to %"struct.std::__1::pair.1075"**
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %237, i64 %234
  %240 = ptrtoint %"struct.std::__1::pair.1075"** %239 to i64
  %241 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %237, i64 %230
  %242 = ptrtoint %"struct.std::__1::pair.1075"** %241 to i64
  %243 = ptrtoint %"struct.std::__1::pair.1075"** %195 to i64
  %244 = ptrtoint %"struct.std::__1::pair.1075"** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"struct.std::__1::pair.1075"** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"struct.std::__1::pair.1075"** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"struct.std::__1::pair.1075"** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %256, i64 1
  %264 = ptrtoint %"struct.std::__1::pair.1075"** %263 to i64
  %265 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !130

268:                                              ; preds = %255
  %269 = ptrtoint %"struct.std::__1::pair.1075"** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"struct.std::__1::pair.1075"** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"struct.std::__1::pair.1075"** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"struct.std::__1::pair.1075"** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"struct.std::__1::pair.1075"** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"struct.std::__1::pair.1075"** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %276, i64 1
  %283 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %278, i64 1
  %284 = bitcast %"struct.std::__1::pair.1075"** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"struct.std::__1::pair.1075"** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %276, i64 2
  %288 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %278, i64 2
  %289 = bitcast %"struct.std::__1::pair.1075"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"struct.std::__1::pair.1075"** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %276, i64 3
  %293 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %278, i64 3
  %294 = bitcast %"struct.std::__1::pair.1075"** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"struct.std::__1::pair.1075"** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %276, i64 4
  %298 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %278, i64 4
  %299 = bitcast %"struct.std::__1::pair.1075"** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"struct.std::__1::pair.1075"** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %276, i64 5
  %303 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %278, i64 5
  %304 = bitcast %"struct.std::__1::pair.1075"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"struct.std::__1::pair.1075"** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %276, i64 6
  %308 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %278, i64 6
  %309 = bitcast %"struct.std::__1::pair.1075"** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"struct.std::__1::pair.1075"** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %276, i64 7
  %313 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %278, i64 7
  %314 = bitcast %"struct.std::__1::pair.1075"** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"struct.std::__1::pair.1075"** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %276, i64 8
  %318 = ptrtoint %"struct.std::__1::pair.1075"** %317 to i64
  %319 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %278, i64 8
  %320 = icmp eq %"struct.std::__1::pair.1075"** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"struct.std::__1::pair.1075"** %247 to i64
  %323 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"struct.std::__1::pair.1075"** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"struct.std::__1::pair.1075"** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"struct.std::__1::pair.1075"** %325 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = bitcast %"struct.std::__1::pair.1075"*** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %164, align 8
  %336 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %335, i64 1
  store %"struct.std::__1::pair.1075"** %336, %"struct.std::__1::pair.1075"*** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1218"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #13
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1218"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1075"** null, %"struct.std::__1::pair.1075"*** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.1079"** %342 to %"class.std::__1::__compressed_pair.1076"**
  store %"class.std::__1::__compressed_pair.1076"* %346, %"class.std::__1::__compressed_pair.1076"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #12
  %354 = bitcast i8* %353 to %"struct.std::__1::pair.1075"**
  %355 = bitcast %"struct.std::__1::__split_buffer.1218"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %354, i64 %171
  store %"struct.std::__1::pair.1075"** %356, %"struct.std::__1::pair.1075"*** %340, align 8
  store %"struct.std::__1::pair.1075"** %356, %"struct.std::__1::pair.1075"*** %339, align 8
  %357 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %354, i64 %345
  store %"struct.std::__1::pair.1075"** %357, %"struct.std::__1::pair.1075"*** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #12
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"struct.std::__1::pair.1075"** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"struct.std::__1::pair.1075"** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"struct.std::__1::pair.1075"** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %356, i64 %370
  store %"struct.std::__1::pair.1075"** %371, %"struct.std::__1::pair.1075"*** %340, align 8
  store %"struct.std::__1::pair.1075"** %371, %"struct.std::__1::pair.1075"*** %339, align 8
  %372 = ptrtoint %"struct.std::__1::pair.1075"** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1218"* %4 to i64*
  %382 = bitcast %"struct.std::__1::pair.1075"*** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to %"struct.std::__1::pair.1075"**
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %386, i64 %383
  %389 = ptrtoint %"struct.std::__1::pair.1075"** %388 to i64
  %390 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %386, i64 %377
  %391 = ptrtoint %"struct.std::__1::pair.1075"** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"struct.std::__1::pair.1075"*** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"struct.std::__1::pair.1075"*** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #12
  %394 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %164, align 8
  %395 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %167, align 8
  %396 = ptrtoint %"struct.std::__1::pair.1075"** %395 to i64
  %397 = ptrtoint %"struct.std::__1::pair.1075"** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"struct.std::__1::pair.1075"** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"struct.std::__1::pair.1075"** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"struct.std::__1::pair.1075"** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"struct.std::__1::pair.1075"** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %406, i64 1
  store %"struct.std::__1::pair.1075"** %408, %"struct.std::__1::pair.1075"*** %340, align 8
  %409 = icmp eq %"struct.std::__1::pair.1075"** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"struct.std::__1::pair.1075"** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1218"* %4 to i64*
  %413 = bitcast %"struct.std::__1::pair.1075"*** %339 to i64*
  %414 = bitcast %"struct.std::__1::pair.1075"*** %340 to i64*
  %415 = bitcast %"struct.std::__1::pair.1075"*** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"struct.std::__1::pair.1075"** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1218"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"struct.std::__1::pair.1075"*** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"struct.std::__1::pair.1075"*** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"struct.std::__1::pair.1075"*** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"struct.std::__1::pair.1075"**
  %441 = inttoptr i64 %434 to %"struct.std::__1::pair.1075"**
  %442 = icmp eq %"struct.std::__1::pair.1075"** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %441, i64 -1
  %445 = ptrtoint %"struct.std::__1::pair.1075"** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %441, i64 %448
  store %"struct.std::__1::pair.1075"** %449, %"struct.std::__1::pair.1075"*** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #13
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"struct.std::__1::pair.1075"** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1218"* nonnull %4, %"struct.std::__1::pair.1075"** dereferenceable(8) %457)
  %458 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %167, align 8
  %459 = icmp eq %"struct.std::__1::pair.1075"** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer.1074"*, %"struct.std::__1::pair.1075"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1074", %"struct.std::__1::__split_buffer.1074"* %0, i64 0, i32 2
  %4 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1074", %"struct.std::__1::__split_buffer.1074"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1075"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1075"** %6 to i64
  %9 = bitcast %"struct.std::__1::pair.1075"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1074", %"struct.std::__1::__split_buffer.1074"* %0, i64 0, i32 1
  %12 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1074", %"struct.std::__1::__split_buffer.1074"* %0, i64 0, i32 0
  %14 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %13, align 8
  %15 = icmp ugt %"struct.std::__1::pair.1075"** %12, %14
  %16 = ptrtoint %"struct.std::__1::pair.1075"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"struct.std::__1::pair.1075"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %12, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1075"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.std::__1::pair.1075"** %23 to i8*
  %30 = bitcast %"struct.std::__1::pair.1075"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"struct.std::__1::pair.1075"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %23, i64 %26
  store %"struct.std::__1::pair.1075"** %34, %"struct.std::__1::pair.1075"*** %3, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %33, i64 %22
  store %"struct.std::__1::pair.1075"** %35, %"struct.std::__1::pair.1075"*** %11, align 8
  %36 = bitcast %"struct.std::__1::pair.1075"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"struct.std::__1::pair.1075"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1074"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"struct.std::__1::pair.1075"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %50, i64 %47
  %53 = ptrtoint %"struct.std::__1::pair.1075"** %52 to i64
  %54 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %50, i64 %43
  %55 = ptrtoint %"struct.std::__1::pair.1075"** %54 to i64
  %56 = ptrtoint %"struct.std::__1::pair.1075"** %12 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1075"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"struct.std::__1::pair.1075"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"struct.std::__1::pair.1075"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"struct.std::__1::pair.1075"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %69, i64 1
  %77 = ptrtoint %"struct.std::__1::pair.1075"** %76 to i64
  %78 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !131

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.std::__1::pair.1075"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"struct.std::__1::pair.1075"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"struct.std::__1::pair.1075"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"struct.std::__1::pair.1075"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"struct.std::__1::pair.1075"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"struct.std::__1::pair.1075"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %89, i64 1
  %96 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %91, i64 1
  %97 = bitcast %"struct.std::__1::pair.1075"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"struct.std::__1::pair.1075"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %89, i64 2
  %101 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %91, i64 2
  %102 = bitcast %"struct.std::__1::pair.1075"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"struct.std::__1::pair.1075"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %89, i64 3
  %106 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %91, i64 3
  %107 = bitcast %"struct.std::__1::pair.1075"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"struct.std::__1::pair.1075"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %89, i64 4
  %111 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %91, i64 4
  %112 = bitcast %"struct.std::__1::pair.1075"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"struct.std::__1::pair.1075"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %89, i64 5
  %116 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %91, i64 5
  %117 = bitcast %"struct.std::__1::pair.1075"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"struct.std::__1::pair.1075"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %89, i64 6
  %121 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %91, i64 6
  %122 = bitcast %"struct.std::__1::pair.1075"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"struct.std::__1::pair.1075"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %89, i64 7
  %126 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %91, i64 7
  %127 = bitcast %"struct.std::__1::pair.1075"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"struct.std::__1::pair.1075"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %89, i64 8
  %131 = ptrtoint %"struct.std::__1::pair.1075"** %130 to i64
  %132 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %91, i64 8
  %133 = icmp eq %"struct.std::__1::pair.1075"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"struct.std::__1::pair.1075"** %60 to i64
  %136 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"struct.std::__1::pair.1075"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"struct.std::__1::pair.1075"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"struct.std::__1::pair.1075"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"struct.std::__1::pair.1075"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"struct.std::__1::pair.1075"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"struct.std::__1::pair.1075"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"struct.std::__1::pair.1075"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %3, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %152, i64 1
  store %"struct.std::__1::pair.1075"** %153, %"struct.std::__1::pair.1075"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer.1074"*, %"struct.std::__1::pair.1075"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1074", %"struct.std::__1::__split_buffer.1074"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1074", %"struct.std::__1::__split_buffer.1074"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1075"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1075"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1074", %"struct.std::__1::__split_buffer.1074"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1074", %"struct.std::__1::__split_buffer.1074"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1075"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1075"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1075"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1075"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1075"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1075"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1075"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1075"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1075"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1075"** %36, %"struct.std::__1::pair.1075"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %35, i64 %22
  store %"struct.std::__1::pair.1075"** %37, %"struct.std::__1::pair.1075"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1074"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1075"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1075"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1075"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1075"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1075"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1075"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1075"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1075"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1075"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !132

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1075"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1075"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1075"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1075"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1075"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1075"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1075"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1075"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1075"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1075"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1075"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1075"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1075"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1075"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1075"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1075"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1075"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1075"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1075"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1075"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1075"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1075"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1075"** %61 to i64
  %137 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1075"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1075"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1075"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1075"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1075"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1075"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1075"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1075"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %153, i64 -1
  store %"struct.std::__1::pair.1075"** %154, %"struct.std::__1::pair.1075"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1218"*, %"struct.std::__1::pair.1075"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %0, i64 0, i32 1
  %4 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %0, i64 0, i32 0
  %6 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %5, align 8
  %7 = icmp eq %"struct.std::__1::pair.1075"** %4, %6
  %8 = ptrtoint %"struct.std::__1::pair.1075"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %0, i64 0, i32 2
  %11 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %12, align 8
  %14 = icmp ult %"struct.std::__1::pair.1075"** %11, %13
  %15 = bitcast %"struct.std::__1::pair.1075"*** %12 to i64*
  %16 = ptrtoint %"struct.std::__1::pair.1075"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.std::__1::pair.1075"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %11, i64 %22
  %24 = ptrtoint %"struct.std::__1::pair.1075"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %23, i64 %29
  %31 = bitcast %"struct.std::__1::pair.1075"** %30 to i8*
  %32 = bitcast %"struct.std::__1::pair.1075"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"struct.std::__1::pair.1075"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"struct.std::__1::pair.1075"** [ %30, %27 ], [ %23, %17 ]
  store %"struct.std::__1::pair.1075"** %36, %"struct.std::__1::pair.1075"*** %3, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %35, i64 %22
  store %"struct.std::__1::pair.1075"** %37, %"struct.std::__1::pair.1075"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1218"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"struct.std::__1::pair.1075"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %51, i64 %48
  %54 = ptrtoint %"struct.std::__1::pair.1075"** %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %51, i64 %43
  %56 = ptrtoint %"struct.std::__1::pair.1075"** %55 to i64
  %57 = ptrtoint %"struct.std::__1::pair.1075"** %4 to i64
  %58 = ptrtoint %"struct.std::__1::pair.1075"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"struct.std::__1::pair.1075"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"struct.std::__1::pair.1075"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"struct.std::__1::pair.1075"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %70, i64 1
  %78 = ptrtoint %"struct.std::__1::pair.1075"** %77 to i64
  %79 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !133

82:                                               ; preds = %69
  %83 = ptrtoint %"struct.std::__1::pair.1075"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"struct.std::__1::pair.1075"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"struct.std::__1::pair.1075"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"struct.std::__1::pair.1075"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"struct.std::__1::pair.1075"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"struct.std::__1::pair.1075"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 1
  %97 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 1
  %98 = bitcast %"struct.std::__1::pair.1075"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"struct.std::__1::pair.1075"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 2
  %102 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 2
  %103 = bitcast %"struct.std::__1::pair.1075"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"struct.std::__1::pair.1075"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 3
  %107 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 3
  %108 = bitcast %"struct.std::__1::pair.1075"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"struct.std::__1::pair.1075"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 4
  %112 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 4
  %113 = bitcast %"struct.std::__1::pair.1075"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"struct.std::__1::pair.1075"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 5
  %117 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 5
  %118 = bitcast %"struct.std::__1::pair.1075"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"struct.std::__1::pair.1075"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 6
  %122 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 6
  %123 = bitcast %"struct.std::__1::pair.1075"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"struct.std::__1::pair.1075"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 7
  %127 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 7
  %128 = bitcast %"struct.std::__1::pair.1075"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"struct.std::__1::pair.1075"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %90, i64 8
  %132 = ptrtoint %"struct.std::__1::pair.1075"** %131 to i64
  %133 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %92, i64 8
  %134 = icmp eq %"struct.std::__1::pair.1075"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"struct.std::__1::pair.1075"** %61 to i64
  %137 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"struct.std::__1::pair.1075"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"struct.std::__1::pair.1075"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"struct.std::__1::pair.1075"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"struct.std::__1::pair.1075"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"struct.std::__1::pair.1075"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"struct.std::__1::pair.1075"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %148, i64 -1
  %150 = bitcast %"struct.std::__1::pair.1075"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1075"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %3, align 8
  %154 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %153, i64 -1
  store %"struct.std::__1::pair.1075"** %154, %"struct.std::__1::pair.1075"*** %3, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt4Loop17FindLoopPreheaderEPNS7_17DominatorAnalysisEE3$_0S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #11 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to i32*
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, %1
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8 0, i8* %9, align 1
  br label %10

10:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop13GetExitBlocksEPNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEE3$_1S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #13
  store i32 %1, i32* %3, align 4
  %5 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %6 = bitcast [8 x i8]* %5 to %"class.spvtools::opt::Loop"**
  %7 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %6, align 8
  %8 = zext i32 %1 to i64
  %9 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %7, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %60, label %12

12:                                               ; preds = %2
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #13, !range !3
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, 4294967295
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ugt i64 %10, %8
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %20, %18, %15
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %7, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.922"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %27, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"* %31, null
  br i1 %32, label %60, label %33

33:                                               ; preds = %29
  %34 = add i64 %10, -1
  br label %35

35:                                               ; preds = %56, %33
  %36 = phi %"struct.std::__1::__hash_node_base.922"* [ %31, %33 ], [ %58, %56 ]
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %36, i64 1
  %38 = bitcast %"struct.std::__1::__hash_node_base.922"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, %8
  br i1 %40, label %51, label %41

41:                                               ; preds = %35
  br i1 %14, label %44, label %42

42:                                               ; preds = %41
  %43 = and i64 %39, %34
  br label %48

44:                                               ; preds = %41
  %45 = icmp ult i64 %39, %10
  br i1 %45, label %48, label %46

46:                                               ; preds = %44
  %47 = urem i64 %39, %10
  br label %48

48:                                               ; preds = %46, %44, %42
  %49 = phi i64 [ %43, %42 ], [ %47, %46 ], [ %39, %44 ]
  %50 = icmp eq i64 %49, %23
  br i1 %50, label %56, label %60

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %36, i64 2
  %53 = bitcast %"struct.std::__1::__hash_node_base.922"* %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, %1
  br i1 %55, label %65, label %56

56:                                               ; preds = %51, %48
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %36, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.922"* %58, null
  br i1 %59, label %60, label %35

60:                                               ; preds = %56, %48, %29, %22, %2
  %61 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::unordered_set.917"**
  %62 = load %"class.std::__1::unordered_set.917"*, %"class.std::__1::unordered_set.917"** %61, align 8
  %63 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %62, i64 0, i32 0
  %64 = call { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"* %63, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #13
  br label %65

65:                                               ; preds = %51, %60
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIPKN8spvtools3opt10BasicBlockENS_9allocatorIS5_EEE19__add_back_capacityEv(%"class.std::__1::deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.spvtools::opt::BasicBlock"**, align 8
  %3 = alloca %"class.spvtools::opt::BasicBlock"**, align 8
  %4 = alloca %"struct.std::__1::__split_buffer.1231", align 8
  %5 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, 511
  br i1 %7, label %8, label %162

8:                                                ; preds = %1
  %9 = add i64 %6, -512
  store i64 %9, i64* %5, align 8
  %10 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %12 = bitcast %"class.spvtools::opt::BasicBlock"*** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %14, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %15 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %17, align 8
  %19 = icmp eq %"class.spvtools::opt::BasicBlock"*** %16, %18
  %20 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %18 to i64
  %21 = bitcast %"class.spvtools::opt::BasicBlock"*** %16 to i64*
  br i1 %19, label %22, label %158

22:                                               ; preds = %8
  %23 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %23, align 8
  %25 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %14, %24
  %26 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %24 to i64
  br i1 %25, label %27, label %47

27:                                               ; preds = %22
  %28 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %14 to i64
  %29 = sub i64 %28, %26
  %30 = ashr exact i64 %29, 3
  %31 = add nsw i64 %30, 1
  %32 = sdiv i64 %31, -2
  %33 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %14, i64 %32
  %34 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %16 to i64
  %35 = sub i64 %34, %28
  %36 = ashr exact i64 %35, 3
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %27
  %39 = bitcast %"class.spvtools::opt::BasicBlock"*** %33 to i8*
  %40 = bitcast %"class.spvtools::opt::BasicBlock"*** %14 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %39, i8* align 8 %40, i64 %35, i1 false) #13
  %41 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %42

42:                                               ; preds = %38, %27
  %43 = phi %"class.spvtools::opt::BasicBlock"*** [ %14, %27 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %33, i64 %36
  store %"class.spvtools::opt::BasicBlock"*** %44, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %43, i64 %32
  store %"class.spvtools::opt::BasicBlock"*** %45, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %46 = bitcast %"class.spvtools::opt::BasicBlock"*** %44 to i64*
  br label %158

47:                                               ; preds = %22
  %48 = bitcast %"class.spvtools::opt::BasicBlock"**** %17 to i64*
  %49 = bitcast %"class.std::__1::deque"* %0 to i64*
  %50 = sub i64 %20, %26
  %51 = ashr exact i64 %50, 2
  %52 = icmp eq i64 %50, 0
  %53 = select i1 %52, i64 1, i64 %51
  %54 = icmp ugt i64 %53, 2305843009213693951
  br i1 %54, label %55, label %56

55:                                               ; preds = %47
  tail call void @abort() #14
  unreachable

56:                                               ; preds = %47
  %57 = lshr i64 %53, 2
  %58 = shl i64 %53, 3
  %59 = tail call i8* @_Znwm(i64 %58) #12
  %60 = bitcast i8* %59 to %"class.spvtools::opt::BasicBlock"***
  %61 = ptrtoint i8* %59 to i64
  %62 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %60, i64 %57
  %63 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %62 to i64
  %64 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %60, i64 %53
  %65 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %64 to i64
  %66 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %14 to i64
  %67 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %16 to i64
  %68 = sub i64 %67, %66
  %69 = ashr exact i64 %68, 3
  %70 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %62, i64 %69
  %71 = icmp eq i64 %68, 0
  br i1 %71, label %147, label %72

72:                                               ; preds = %56
  %73 = add i64 %68, -8
  %74 = lshr i64 %73, 3
  %75 = add nuw nsw i64 %74, 1
  %76 = and i64 %75, 7
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %93, label %78

78:                                               ; preds = %72, %78
  %79 = phi %"class.spvtools::opt::BasicBlock"*** [ %86, %78 ], [ %62, %72 ]
  %80 = phi i64 [ %87, %78 ], [ %63, %72 ]
  %81 = phi %"class.spvtools::opt::BasicBlock"*** [ %88, %78 ], [ %14, %72 ]
  %82 = phi i64 [ %89, %78 ], [ %76, %72 ]
  %83 = bitcast %"class.spvtools::opt::BasicBlock"*** %81 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = inttoptr i64 %80 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %79, i64 1
  %87 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %86 to i64
  %88 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %81, i64 1
  %89 = add i64 %82, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78, !llvm.loop !134

91:                                               ; preds = %78
  %92 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %86 to i64
  br label %93

93:                                               ; preds = %72, %91
  %94 = phi %"class.spvtools::opt::BasicBlock"*** [ %62, %72 ], [ %86, %91 ]
  %95 = phi i64 [ %63, %72 ], [ %92, %91 ]
  %96 = phi %"class.spvtools::opt::BasicBlock"*** [ %14, %72 ], [ %88, %91 ]
  %97 = icmp ult i64 %73, 56
  br i1 %97, label %144, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.spvtools::opt::BasicBlock"*** [ %140, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %141, %98 ], [ %95, %93 ]
  %101 = phi %"class.spvtools::opt::BasicBlock"*** [ %142, %98 ], [ %96, %93 ]
  %102 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = inttoptr i64 %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 1
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 1
  %107 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::BasicBlock"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 2
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 2
  %112 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::BasicBlock"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 3
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 3
  %117 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::BasicBlock"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 4
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 4
  %122 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::BasicBlock"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 5
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 5
  %127 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::BasicBlock"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 6
  %131 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 6
  %132 = bitcast %"class.spvtools::opt::BasicBlock"*** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.spvtools::opt::BasicBlock"*** %130 to i64*
  store i64 %133, i64* %134, align 8
  %135 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 7
  %136 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 7
  %137 = bitcast %"class.spvtools::opt::BasicBlock"*** %136 to i64*
  %138 = load i64, i64* %137, align 8
  %139 = bitcast %"class.spvtools::opt::BasicBlock"*** %135 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %99, i64 8
  %141 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %140 to i64
  %142 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %101, i64 8
  %143 = icmp eq %"class.spvtools::opt::BasicBlock"*** %70, %140
  br i1 %143, label %144, label %98

144:                                              ; preds = %98, %93
  %145 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %70 to i64
  %146 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %23, align 8
  br label %147

147:                                              ; preds = %144, %56
  %148 = phi %"class.spvtools::opt::BasicBlock"*** [ %146, %144 ], [ %24, %56 ]
  %149 = phi i64 [ %145, %144 ], [ %63, %56 ]
  store i64 %61, i64* %49, align 8
  %150 = bitcast %"class.spvtools::opt::BasicBlock"**** %10 to i64*
  store i64 %63, i64* %150, align 8
  %151 = bitcast %"class.spvtools::opt::BasicBlock"**** %15 to i64*
  store i64 %149, i64* %151, align 8
  store i64 %65, i64* %48, align 8
  %152 = icmp eq %"class.spvtools::opt::BasicBlock"*** %148, null
  %153 = inttoptr i64 %149 to i64*
  br i1 %152, label %158, label %154

154:                                              ; preds = %147
  %155 = bitcast %"class.spvtools::opt::BasicBlock"*** %148 to i8*
  tail call void @_ZdlPv(i8* %155) #12
  %156 = bitcast %"class.spvtools::opt::BasicBlock"**** %15 to i64**
  %157 = load i64*, i64** %156, align 8
  br label %158

158:                                              ; preds = %8, %42, %147, %154
  %159 = phi i64* [ %157, %154 ], [ %153, %147 ], [ %46, %42 ], [ %21, %8 ]
  store i64 %13, i64* %159, align 8
  %160 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  %161 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %160, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %161, %"class.spvtools::opt::BasicBlock"**** %15, align 8
  br label %460

162:                                              ; preds = %1
  %163 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0
  %164 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::BasicBlock"**** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::BasicBlock"**** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %166, %169
  %171 = ashr exact i64 %170, 3
  %172 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %173 = bitcast %"class.spvtools::opt::BasicBlock"**** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = bitcast %"class.std::__1::deque"* %0 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = ashr exact i64 %177, 3
  %179 = icmp ult i64 %171, %178
  %180 = inttoptr i64 %166 to %"class.spvtools::opt::BasicBlock"***
  %181 = inttoptr i64 %169 to %"class.spvtools::opt::BasicBlock"***
  br i1 %179, label %182, label %337

182:                                              ; preds = %162
  %183 = icmp eq i64 %174, %166
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = bitcast %"class.spvtools::opt::BasicBlock"*** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185) #13
  %186 = tail call i8* @_Znwm(i64 4096) #12
  %187 = bitcast %"class.spvtools::opt::BasicBlock"*** %2 to i8**
  store i8* %186, i8** %187, align 8
  call void @_ZNSt3__114__split_bufferIPPKN8spvtools3opt10BasicBlockENS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"* %163, %"class.spvtools::opt::BasicBlock"*** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185) #13
  br label %460

188:                                              ; preds = %182
  %189 = bitcast %"class.spvtools::opt::BasicBlock"*** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #13
  %190 = tail call i8* @_Znwm(i64 4096) #12
  %191 = bitcast %"class.spvtools::opt::BasicBlock"*** %3 to i8**
  store i8* %190, i8** %191, align 8
  call void @_ZNSt3__114__split_bufferIPPKN8spvtools3opt10BasicBlockENS_9allocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"* %163, %"class.spvtools::opt::BasicBlock"*** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #13
  %192 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %193 = bitcast %"class.spvtools::opt::BasicBlock"*** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %192, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %195, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %196 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %197 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %172, align 8
  %198 = icmp eq %"class.spvtools::opt::BasicBlock"*** %196, %197
  %199 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %197 to i64
  %200 = bitcast %"class.spvtools::opt::BasicBlock"*** %196 to i64*
  br i1 %198, label %201, label %333

201:                                              ; preds = %188
  %202 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %202, align 8
  %204 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %195, %203
  %205 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %203 to i64
  br i1 %204, label %206, label %226

206:                                              ; preds = %201
  %207 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %195 to i64
  %208 = sub i64 %207, %205
  %209 = ashr exact i64 %208, 3
  %210 = add nsw i64 %209, 1
  %211 = sdiv i64 %210, -2
  %212 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %195, i64 %211
  %213 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %196 to i64
  %214 = sub i64 %213, %207
  %215 = ashr exact i64 %214, 3
  %216 = icmp eq i64 %214, 0
  br i1 %216, label %221, label %217

217:                                              ; preds = %206
  %218 = bitcast %"class.spvtools::opt::BasicBlock"*** %212 to i8*
  %219 = bitcast %"class.spvtools::opt::BasicBlock"*** %195 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %218, i8* align 8 %219, i64 %214, i1 false) #13
  %220 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  br label %221

221:                                              ; preds = %217, %206
  %222 = phi %"class.spvtools::opt::BasicBlock"*** [ %195, %206 ], [ %220, %217 ]
  %223 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %212, i64 %215
  store %"class.spvtools::opt::BasicBlock"*** %223, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %224 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %222, i64 %211
  store %"class.spvtools::opt::BasicBlock"*** %224, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %225 = bitcast %"class.spvtools::opt::BasicBlock"*** %223 to i64*
  br label %333

226:                                              ; preds = %201
  %227 = sub i64 %199, %205
  %228 = ashr exact i64 %227, 2
  %229 = icmp eq i64 %227, 0
  %230 = select i1 %229, i64 1, i64 %228
  %231 = icmp ugt i64 %230, 2305843009213693951
  br i1 %231, label %232, label %233

232:                                              ; preds = %226
  call void @abort() #14
  unreachable

233:                                              ; preds = %226
  %234 = lshr i64 %230, 2
  %235 = shl i64 %230, 3
  %236 = call i8* @_Znwm(i64 %235) #12
  %237 = bitcast i8* %236 to %"class.spvtools::opt::BasicBlock"***
  %238 = ptrtoint i8* %236 to i64
  %239 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %237, i64 %234
  %240 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %239 to i64
  %241 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %237, i64 %230
  %242 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %241 to i64
  %243 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %195 to i64
  %244 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %196 to i64
  %245 = sub i64 %244, %243
  %246 = ashr exact i64 %245, 3
  %247 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %239, i64 %246
  %248 = icmp eq i64 %245, 0
  br i1 %248, label %324, label %249

249:                                              ; preds = %233
  %250 = add i64 %245, -8
  %251 = lshr i64 %250, 3
  %252 = add nuw nsw i64 %251, 1
  %253 = and i64 %252, 7
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %270, label %255

255:                                              ; preds = %249, %255
  %256 = phi %"class.spvtools::opt::BasicBlock"*** [ %263, %255 ], [ %239, %249 ]
  %257 = phi i64 [ %264, %255 ], [ %240, %249 ]
  %258 = phi %"class.spvtools::opt::BasicBlock"*** [ %265, %255 ], [ %195, %249 ]
  %259 = phi i64 [ %266, %255 ], [ %253, %249 ]
  %260 = bitcast %"class.spvtools::opt::BasicBlock"*** %258 to i64*
  %261 = load i64, i64* %260, align 8
  %262 = inttoptr i64 %257 to i64*
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %256, i64 1
  %264 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %263 to i64
  %265 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %258, i64 1
  %266 = add i64 %259, -1
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %255, !llvm.loop !135

268:                                              ; preds = %255
  %269 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %263 to i64
  br label %270

270:                                              ; preds = %249, %268
  %271 = phi %"class.spvtools::opt::BasicBlock"*** [ %239, %249 ], [ %263, %268 ]
  %272 = phi i64 [ %240, %249 ], [ %269, %268 ]
  %273 = phi %"class.spvtools::opt::BasicBlock"*** [ %195, %249 ], [ %265, %268 ]
  %274 = icmp ult i64 %250, 56
  br i1 %274, label %321, label %275

275:                                              ; preds = %270, %275
  %276 = phi %"class.spvtools::opt::BasicBlock"*** [ %317, %275 ], [ %271, %270 ]
  %277 = phi i64 [ %318, %275 ], [ %272, %270 ]
  %278 = phi %"class.spvtools::opt::BasicBlock"*** [ %319, %275 ], [ %273, %270 ]
  %279 = bitcast %"class.spvtools::opt::BasicBlock"*** %278 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = inttoptr i64 %277 to i64*
  store i64 %280, i64* %281, align 8
  %282 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 1
  %283 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 1
  %284 = bitcast %"class.spvtools::opt::BasicBlock"*** %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = bitcast %"class.spvtools::opt::BasicBlock"*** %282 to i64*
  store i64 %285, i64* %286, align 8
  %287 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 2
  %288 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 2
  %289 = bitcast %"class.spvtools::opt::BasicBlock"*** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = bitcast %"class.spvtools::opt::BasicBlock"*** %287 to i64*
  store i64 %290, i64* %291, align 8
  %292 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 3
  %293 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 3
  %294 = bitcast %"class.spvtools::opt::BasicBlock"*** %293 to i64*
  %295 = load i64, i64* %294, align 8
  %296 = bitcast %"class.spvtools::opt::BasicBlock"*** %292 to i64*
  store i64 %295, i64* %296, align 8
  %297 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 4
  %298 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 4
  %299 = bitcast %"class.spvtools::opt::BasicBlock"*** %298 to i64*
  %300 = load i64, i64* %299, align 8
  %301 = bitcast %"class.spvtools::opt::BasicBlock"*** %297 to i64*
  store i64 %300, i64* %301, align 8
  %302 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 5
  %303 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 5
  %304 = bitcast %"class.spvtools::opt::BasicBlock"*** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.spvtools::opt::BasicBlock"*** %302 to i64*
  store i64 %305, i64* %306, align 8
  %307 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 6
  %308 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 6
  %309 = bitcast %"class.spvtools::opt::BasicBlock"*** %308 to i64*
  %310 = load i64, i64* %309, align 8
  %311 = bitcast %"class.spvtools::opt::BasicBlock"*** %307 to i64*
  store i64 %310, i64* %311, align 8
  %312 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 7
  %313 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 7
  %314 = bitcast %"class.spvtools::opt::BasicBlock"*** %313 to i64*
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.spvtools::opt::BasicBlock"*** %312 to i64*
  store i64 %315, i64* %316, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %276, i64 8
  %318 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %317 to i64
  %319 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %278, i64 8
  %320 = icmp eq %"class.spvtools::opt::BasicBlock"*** %247, %317
  br i1 %320, label %321, label %275

321:                                              ; preds = %275, %270
  %322 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %247 to i64
  %323 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %202, align 8
  br label %324

324:                                              ; preds = %321, %233
  %325 = phi %"class.spvtools::opt::BasicBlock"*** [ %323, %321 ], [ %203, %233 ]
  %326 = phi i64 [ %322, %321 ], [ %240, %233 ]
  store i64 %238, i64* %175, align 8
  store i64 %240, i64* %168, align 8
  store i64 %326, i64* %165, align 8
  store i64 %242, i64* %173, align 8
  %327 = icmp eq %"class.spvtools::opt::BasicBlock"*** %325, null
  %328 = inttoptr i64 %326 to i64*
  br i1 %327, label %333, label %329

329:                                              ; preds = %324
  %330 = bitcast %"class.spvtools::opt::BasicBlock"*** %325 to i8*
  call void @_ZdlPv(i8* %330) #12
  %331 = bitcast %"class.spvtools::opt::BasicBlock"**** %164 to i64**
  %332 = load i64*, i64** %331, align 8
  br label %333

333:                                              ; preds = %188, %221, %324, %329
  %334 = phi i64* [ %332, %329 ], [ %328, %324 ], [ %225, %221 ], [ %200, %188 ]
  store i64 %194, i64* %334, align 8
  %335 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %336 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %335, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %336, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  br label %460

337:                                              ; preds = %162
  %338 = bitcast %"struct.std::__1::__split_buffer.1231"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %338) #13
  %339 = getelementptr inbounds %"struct.std::__1::__split_buffer.1231", %"struct.std::__1::__split_buffer.1231"* %4, i64 0, i32 1
  %340 = getelementptr inbounds %"struct.std::__1::__split_buffer.1231", %"struct.std::__1::__split_buffer.1231"* %4, i64 0, i32 2
  %341 = getelementptr inbounds %"struct.std::__1::__split_buffer.1231", %"struct.std::__1::__split_buffer.1231"* %4, i64 0, i32 3, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::__1::__split_buffer.1231", %"struct.std::__1::__split_buffer.1231"* %4, i64 0, i32 3, i32 1, i32 0
  %343 = ashr exact i64 %177, 2
  %344 = icmp eq i64 %177, 0
  %345 = select i1 %344, i64 1, i64 %343
  %346 = getelementptr inbounds %"class.std::__1::deque", %"class.std::__1::deque"* %0, i64 0, i32 0, i32 0, i32 3
  %347 = bitcast %"struct.std::__1::__split_buffer.1231"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 24, i1 false)
  store %"class.spvtools::opt::BasicBlock"*** null, %"class.spvtools::opt::BasicBlock"**** %341, align 8
  %348 = bitcast %"class.std::__1::allocator.966"** %342 to %"class.std::__1::__compressed_pair.963"**
  store %"class.std::__1::__compressed_pair.963"* %346, %"class.std::__1::__compressed_pair.963"** %348, align 8
  %349 = icmp ugt i64 %345, 2305843009213693951
  br i1 %349, label %350, label %351

350:                                              ; preds = %337
  tail call void @abort() #14
  unreachable

351:                                              ; preds = %337
  %352 = shl i64 %345, 3
  %353 = tail call i8* @_Znwm(i64 %352) #12
  %354 = bitcast i8* %353 to %"class.spvtools::opt::BasicBlock"***
  %355 = bitcast %"struct.std::__1::__split_buffer.1231"* %4 to i8**
  store i8* %353, i8** %355, align 8
  %356 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %354, i64 %171
  store %"class.spvtools::opt::BasicBlock"*** %356, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  store %"class.spvtools::opt::BasicBlock"*** %356, %"class.spvtools::opt::BasicBlock"**** %339, align 8
  %357 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %354, i64 %345
  store %"class.spvtools::opt::BasicBlock"*** %357, %"class.spvtools::opt::BasicBlock"**** %341, align 8
  %358 = tail call i8* @_Znwm(i64 4096) #12
  %359 = ptrtoint i8* %358 to i64
  %360 = icmp eq i64 %171, %345
  %361 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %357 to i64
  %362 = ptrtoint i8* %353 to i64
  %363 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %356 to i64
  br i1 %360, label %364, label %398

364:                                              ; preds = %351
  %365 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %356, %354
  br i1 %365, label %366, label %373

366:                                              ; preds = %364
  %367 = sub i64 %363, %362
  %368 = ashr exact i64 %367, 3
  %369 = add nsw i64 %368, 1
  %370 = sdiv i64 %369, -2
  %371 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %356, i64 %370
  store %"class.spvtools::opt::BasicBlock"*** %371, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  store %"class.spvtools::opt::BasicBlock"*** %371, %"class.spvtools::opt::BasicBlock"**** %339, align 8
  %372 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %371 to i64
  br label %398

373:                                              ; preds = %364
  %374 = sub i64 %361, %362
  %375 = ashr exact i64 %374, 2
  %376 = icmp eq i64 %374, 0
  %377 = select i1 %376, i64 1, i64 %375
  %378 = icmp ugt i64 %377, 2305843009213693951
  br i1 %378, label %379, label %380

379:                                              ; preds = %373
  tail call void @abort() #14
  unreachable

380:                                              ; preds = %373
  %381 = bitcast %"struct.std::__1::__split_buffer.1231"* %4 to i64*
  %382 = bitcast %"class.spvtools::opt::BasicBlock"**** %341 to i64*
  %383 = lshr i64 %377, 2
  %384 = shl i64 %377, 3
  %385 = tail call i8* @_Znwm(i64 %384) #12
  %386 = bitcast i8* %385 to %"class.spvtools::opt::BasicBlock"***
  %387 = ptrtoint i8* %385 to i64
  %388 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %386, i64 %383
  %389 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %388 to i64
  %390 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %386, i64 %377
  %391 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %390 to i64
  store i64 %387, i64* %381, align 8
  %392 = bitcast %"class.spvtools::opt::BasicBlock"**** %339 to i64*
  store i64 %389, i64* %392, align 8
  %393 = bitcast %"class.spvtools::opt::BasicBlock"**** %340 to i64*
  store i64 %389, i64* %393, align 8
  store i64 %391, i64* %382, align 8
  tail call void @_ZdlPv(i8* nonnull %353) #12
  %394 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %164, align 8
  %395 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %396 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %395 to i64
  %397 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %394 to i64
  br label %398

398:                                              ; preds = %351, %366, %380
  %399 = phi i64 [ %391, %380 ], [ %361, %366 ], [ %361, %351 ]
  %400 = phi i64 [ %397, %380 ], [ %166, %366 ], [ %166, %351 ]
  %401 = phi i64 [ %389, %380 ], [ %372, %366 ], [ %363, %351 ]
  %402 = phi i64 [ %396, %380 ], [ %169, %366 ], [ %169, %351 ]
  %403 = phi i64 [ %387, %380 ], [ %362, %366 ], [ %362, %351 ]
  %404 = phi %"class.spvtools::opt::BasicBlock"*** [ %395, %380 ], [ %181, %366 ], [ %181, %351 ]
  %405 = phi %"class.spvtools::opt::BasicBlock"*** [ %394, %380 ], [ %180, %366 ], [ %180, %351 ]
  %406 = phi %"class.spvtools::opt::BasicBlock"*** [ %388, %380 ], [ %371, %366 ], [ %356, %351 ]
  %407 = bitcast %"class.spvtools::opt::BasicBlock"*** %406 to i64*
  store i64 %359, i64* %407, align 8
  %408 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %406, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %408, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  %409 = icmp eq %"class.spvtools::opt::BasicBlock"*** %405, %404
  br i1 %409, label %410, label %455

410:                                              ; preds = %398
  %411 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %408 to i64
  %412 = bitcast %"struct.std::__1::__split_buffer.1231"* %4 to i64*
  %413 = bitcast %"class.spvtools::opt::BasicBlock"**** %339 to i64*
  %414 = bitcast %"class.spvtools::opt::BasicBlock"**** %340 to i64*
  %415 = bitcast %"class.spvtools::opt::BasicBlock"**** %341 to i64*
  br label %427

416:                                              ; preds = %455
  %417 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %458 to i64
  %418 = bitcast %"struct.std::__1::__split_buffer.1231"* %4 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.spvtools::opt::BasicBlock"**** %339 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = load i64, i64* %165, align 8
  %423 = bitcast %"class.spvtools::opt::BasicBlock"**** %340 to i64*
  %424 = load i64, i64* %423, align 8
  %425 = bitcast %"class.spvtools::opt::BasicBlock"**** %341 to i64*
  %426 = load i64, i64* %425, align 8
  br label %427

427:                                              ; preds = %410, %416
  %428 = phi i64* [ %415, %410 ], [ %425, %416 ]
  %429 = phi i64* [ %414, %410 ], [ %423, %416 ]
  %430 = phi i64* [ %413, %410 ], [ %420, %416 ]
  %431 = phi i64* [ %412, %410 ], [ %418, %416 ]
  %432 = phi i64 [ %399, %410 ], [ %426, %416 ]
  %433 = phi i64 [ %411, %410 ], [ %424, %416 ]
  %434 = phi i64 [ %400, %410 ], [ %422, %416 ]
  %435 = phi i64 [ %401, %410 ], [ %421, %416 ]
  %436 = phi i64 [ %402, %410 ], [ %417, %416 ]
  %437 = phi i64 [ %403, %410 ], [ %419, %416 ]
  %438 = load i64, i64* %175, align 8
  store i64 %437, i64* %175, align 8
  store i64 %438, i64* %431, align 8
  store i64 %435, i64* %168, align 8
  store i64 %436, i64* %430, align 8
  store i64 %433, i64* %165, align 8
  store i64 %434, i64* %429, align 8
  %439 = load i64, i64* %173, align 8
  store i64 %432, i64* %173, align 8
  store i64 %439, i64* %428, align 8
  %440 = inttoptr i64 %436 to %"class.spvtools::opt::BasicBlock"***
  %441 = inttoptr i64 %434 to %"class.spvtools::opt::BasicBlock"***
  %442 = icmp eq %"class.spvtools::opt::BasicBlock"*** %441, %440
  br i1 %442, label %450, label %443

443:                                              ; preds = %427
  %444 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %441, i64 -1
  %445 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %444 to i64
  %446 = sub i64 %445, %436
  %447 = lshr i64 %446, 3
  %448 = xor i64 %447, -1
  %449 = getelementptr %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %441, i64 %448
  store %"class.spvtools::opt::BasicBlock"*** %449, %"class.spvtools::opt::BasicBlock"**** %340, align 8
  br label %450

450:                                              ; preds = %443, %427
  %451 = icmp eq i64 %438, 0
  br i1 %451, label %454, label %452

452:                                              ; preds = %450
  %453 = inttoptr i64 %438 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %450, %452
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %338) #13
  br label %460

455:                                              ; preds = %398, %455
  %456 = phi %"class.spvtools::opt::BasicBlock"*** [ %457, %455 ], [ %405, %398 ]
  %457 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %456, i64 -1
  call void @_ZNSt3__114__split_bufferIPPKN8spvtools3opt10BasicBlockERNS_9allocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1231"* nonnull %4, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8) %457)
  %458 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %167, align 8
  %459 = icmp eq %"class.spvtools::opt::BasicBlock"*** %457, %458
  br i1 %459, label %416, label %455

460:                                              ; preds = %454, %333, %184, %158
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPKN8spvtools3opt10BasicBlockENS_9allocatorIS6_EEE9push_backEOS6_(%"struct.std::__1::__split_buffer"*, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %6 to i64
  %9 = bitcast %"class.spvtools::opt::BasicBlock"*** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %12 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %13, align 8
  %15 = icmp ugt %"class.spvtools::opt::BasicBlock"*** %12, %14
  %16 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %12, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.spvtools::opt::BasicBlock"*** %23 to i8*
  %30 = bitcast %"class.spvtools::opt::BasicBlock"*** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #13
  %31 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.spvtools::opt::BasicBlock"*** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %23, i64 %26
  store %"class.spvtools::opt::BasicBlock"*** %34, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %33, i64 %22
  store %"class.spvtools::opt::BasicBlock"*** %35, %"class.spvtools::opt::BasicBlock"**** %11, align 8
  %36 = bitcast %"class.spvtools::opt::BasicBlock"*** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.spvtools::opt::BasicBlock"**** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"class.spvtools::opt::BasicBlock"***
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %50, i64 %47
  %53 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %52 to i64
  %54 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %50, i64 %43
  %55 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %54 to i64
  %56 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %12 to i64
  %57 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.spvtools::opt::BasicBlock"*** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.spvtools::opt::BasicBlock"*** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.spvtools::opt::BasicBlock"*** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %69, i64 1
  %77 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %76 to i64
  %78 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !136

81:                                               ; preds = %68
  %82 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.spvtools::opt::BasicBlock"*** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.spvtools::opt::BasicBlock"*** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.spvtools::opt::BasicBlock"*** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.spvtools::opt::BasicBlock"*** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.spvtools::opt::BasicBlock"*** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 1
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 1
  %97 = bitcast %"class.spvtools::opt::BasicBlock"*** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.spvtools::opt::BasicBlock"*** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 2
  %101 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 2
  %102 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.spvtools::opt::BasicBlock"*** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 3
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 3
  %107 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.spvtools::opt::BasicBlock"*** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 4
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 4
  %112 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.spvtools::opt::BasicBlock"*** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 5
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 5
  %117 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.spvtools::opt::BasicBlock"*** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 6
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 6
  %122 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.spvtools::opt::BasicBlock"*** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 7
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 7
  %127 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.spvtools::opt::BasicBlock"*** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %89, i64 8
  %131 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %130 to i64
  %132 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %91, i64 8
  %133 = icmp eq %"class.spvtools::opt::BasicBlock"*** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %60 to i64
  %136 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.spvtools::opt::BasicBlock"*** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.spvtools::opt::BasicBlock"**** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.spvtools::opt::BasicBlock"*** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.spvtools::opt::BasicBlock"*** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.spvtools::opt::BasicBlock"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %152, i64 1
  store %"class.spvtools::opt::BasicBlock"*** %153, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPKN8spvtools3opt10BasicBlockENS_9allocatorIS6_EEE10push_frontEOS6_(%"struct.std::__1::__split_buffer"*, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::BasicBlock"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::BasicBlock"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::BasicBlock"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::BasicBlock"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::BasicBlock"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::BasicBlock"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::BasicBlock"*** %36, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %35, i64 %22
  store %"class.spvtools::opt::BasicBlock"*** %37, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"class.spvtools::opt::BasicBlock"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::BasicBlock"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::BasicBlock"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::BasicBlock"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !137

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::BasicBlock"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::BasicBlock"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::BasicBlock"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::BasicBlock"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::BasicBlock"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::BasicBlock"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::BasicBlock"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::BasicBlock"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::BasicBlock"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::BasicBlock"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::BasicBlock"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::BasicBlock"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::BasicBlock"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::BasicBlock"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %61 to i64
  %137 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::BasicBlock"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::BasicBlock"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::BasicBlock"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::BasicBlock"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::BasicBlock"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::BasicBlock"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::BasicBlock"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %153, i64 -1
  store %"class.spvtools::opt::BasicBlock"*** %154, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPPKN8spvtools3opt10BasicBlockERNS_9allocatorIS6_EEE10push_frontERKS6_(%"struct.std::__1::__split_buffer.1231"*, %"class.spvtools::opt::BasicBlock"*** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1231", %"struct.std::__1::__split_buffer.1231"* %0, i64 0, i32 1
  %4 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1231", %"struct.std::__1::__split_buffer.1231"* %0, i64 0, i32 0
  %6 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  %7 = icmp eq %"class.spvtools::opt::BasicBlock"*** %4, %6
  %8 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1231", %"struct.std::__1::__split_buffer.1231"* %0, i64 0, i32 2
  %11 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1231", %"struct.std::__1::__split_buffer.1231"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %12, align 8
  %14 = icmp ult %"class.spvtools::opt::BasicBlock"*** %11, %13
  %15 = bitcast %"class.spvtools::opt::BasicBlock"**** %12 to i64*
  %16 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %11, i64 %22
  %24 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %23, i64 %29
  %31 = bitcast %"class.spvtools::opt::BasicBlock"*** %30 to i8*
  %32 = bitcast %"class.spvtools::opt::BasicBlock"*** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #13
  %33 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.spvtools::opt::BasicBlock"*** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.spvtools::opt::BasicBlock"*** [ %30, %27 ], [ %23, %17 ]
  store %"class.spvtools::opt::BasicBlock"*** %36, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %35, i64 %22
  store %"class.spvtools::opt::BasicBlock"*** %37, %"class.spvtools::opt::BasicBlock"**** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1231"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #14
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"class.spvtools::opt::BasicBlock"***
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %48
  %54 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %53 to i64
  %55 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %51, i64 %43
  %56 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %55 to i64
  %57 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %4 to i64
  %58 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.spvtools::opt::BasicBlock"*** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.spvtools::opt::BasicBlock"*** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.spvtools::opt::BasicBlock"*** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %70, i64 1
  %78 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  %79 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !138

82:                                               ; preds = %69
  %83 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.spvtools::opt::BasicBlock"*** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.spvtools::opt::BasicBlock"*** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.spvtools::opt::BasicBlock"*** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.spvtools::opt::BasicBlock"*** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.spvtools::opt::BasicBlock"*** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 1
  %97 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 1
  %98 = bitcast %"class.spvtools::opt::BasicBlock"*** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.spvtools::opt::BasicBlock"*** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 2
  %102 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 2
  %103 = bitcast %"class.spvtools::opt::BasicBlock"*** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.spvtools::opt::BasicBlock"*** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 3
  %107 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 3
  %108 = bitcast %"class.spvtools::opt::BasicBlock"*** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.spvtools::opt::BasicBlock"*** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 4
  %112 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 4
  %113 = bitcast %"class.spvtools::opt::BasicBlock"*** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::BasicBlock"*** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 5
  %117 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 5
  %118 = bitcast %"class.spvtools::opt::BasicBlock"*** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.spvtools::opt::BasicBlock"*** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 6
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 6
  %123 = bitcast %"class.spvtools::opt::BasicBlock"*** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.spvtools::opt::BasicBlock"*** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 7
  %127 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 7
  %128 = bitcast %"class.spvtools::opt::BasicBlock"*** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.spvtools::opt::BasicBlock"*** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %90, i64 8
  %132 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %131 to i64
  %133 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %92, i64 8
  %134 = icmp eq %"class.spvtools::opt::BasicBlock"*** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.spvtools::opt::BasicBlock"*** %61 to i64
  %137 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.spvtools::opt::BasicBlock"*** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.spvtools::opt::BasicBlock"**** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.spvtools::opt::BasicBlock"**** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.spvtools::opt::BasicBlock"*** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.spvtools::opt::BasicBlock"*** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.spvtools::opt::BasicBlock"*** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %148, i64 -1
  %150 = bitcast %"class.spvtools::opt::BasicBlock"*** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.spvtools::opt::BasicBlock"*** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.spvtools::opt::BasicBlock"***, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %153, i64 -1
  store %"class.spvtools::opt::BasicBlock"*** %154, %"class.spvtools::opt::BasicBlock"**** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.922"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.918"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.922"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.922"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.922"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.922"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.922"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #12, !noalias !139
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !139
  store i32 %58, i32* %57, align 4, !noalias !139
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !139
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"**
  store %"struct.std::__1::__hash_node_base.922"* null, %"struct.std::__1::__hash_node_base.922"** %61, align 8, !noalias !139
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #13
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.918"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #13, !range !3
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.922"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.918", %"class.std::__1::__hash_table.918"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.922"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.922"* %104, %"struct.std::__1::__hash_node_base.922"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.922"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.922"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #13, !range !3
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.922"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.922"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.922"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.922"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } undef, %"struct.std::__1::__hash_node_base.922"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.922"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.922"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNKS3_4Loop7IsLCSSAEvE3$_2S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1244"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1244"*, %"class.std::__1::__function::__default_alloc_func.1244"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1244", %"class.std::__1::__function::__default_alloc_func.1244"* %4, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1244", %"class.std::__1::__function::__default_alloc_func.1244"* %4, i64 0, i32 0, i32 1
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %8, %"class.spvtools::opt::Instruction"* %1) #13
  %10 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %9, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 3
  %17 = load i8, i8* %16, align 4, !range !2
  %18 = zext i8 %17 to i32
  %19 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %11, i32 %18) #13
  br label %20

20:                                               ; preds = %15, %2
  %21 = phi i32 [ %19, %15 ], [ 0, %2 ]
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %74, label %26

26:                                               ; preds = %20
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #13, !range !3
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, 4294967295
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ugt i64 %24, %22
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.922"* %41, null
  br i1 %42, label %74, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.922"* %45, null
  br i1 %46, label %74, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.922"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.922"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %74

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.922"* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %21
  br i1 %69, label %147, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.922"* %72, null
  br i1 %73, label %74, label %49

74:                                               ; preds = %70, %62, %43, %36, %20
  %75 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 245
  br i1 %77, label %78, label %147

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1244", %"class.std::__1::__function::__default_alloc_func.1244"* %4, i64 0, i32 0, i32 0
  %80 = load %"class.std::__1::unordered_set.917"*, %"class.std::__1::unordered_set.917"** %79, align 8
  %81 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %81, i64 0, i32 4
  %83 = load i8, i8* %82, align 1, !range !2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %81, i64 0, i32 3
  %87 = load i8, i8* %86, align 4, !range !2
  %88 = zext i8 %87 to i32
  %89 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %81, i32 %88) #13
  br label %90

90:                                               ; preds = %85, %78
  %91 = phi i32 [ %89, %85 ], [ 0, %78 ]
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %80, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %144, label %96

96:                                               ; preds = %90
  %97 = tail call i64 @llvm.ctpop.i64(i64 %94) #13, !range !3
  %98 = icmp ugt i64 %97, 1
  br i1 %98, label %102, label %99

99:                                               ; preds = %96
  %100 = add i64 %94, 4294967295
  %101 = and i64 %100, %92
  br label %106

102:                                              ; preds = %96
  %103 = icmp ugt i64 %94, %92
  br i1 %103, label %106, label %104

104:                                              ; preds = %102
  %105 = urem i64 %92, %94
  br label %106

106:                                              ; preds = %104, %102, %99
  %107 = phi i64 [ %101, %99 ], [ %105, %104 ], [ %92, %102 ]
  %108 = getelementptr inbounds %"class.std::__1::unordered_set.917", %"class.std::__1::unordered_set.917"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %108, align 8
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %109, i64 %107
  %111 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %110, align 8
  %112 = icmp eq %"struct.std::__1::__hash_node_base.922"* %111, null
  br i1 %112, label %144, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %111, i64 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.922"* %115, null
  br i1 %116, label %144, label %117

117:                                              ; preds = %113
  %118 = add i64 %94, -1
  br label %119

119:                                              ; preds = %140, %117
  %120 = phi %"struct.std::__1::__hash_node_base.922"* [ %115, %117 ], [ %142, %140 ]
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %120, i64 1
  %122 = bitcast %"struct.std::__1::__hash_node_base.922"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = icmp eq i64 %123, %92
  br i1 %124, label %135, label %125

125:                                              ; preds = %119
  br i1 %98, label %128, label %126

126:                                              ; preds = %125
  %127 = and i64 %123, %118
  br label %132

128:                                              ; preds = %125
  %129 = icmp ult i64 %123, %94
  br i1 %129, label %132, label %130

130:                                              ; preds = %128
  %131 = urem i64 %123, %94
  br label %132

132:                                              ; preds = %130, %128, %126
  %133 = phi i64 [ %127, %126 ], [ %131, %130 ], [ %123, %128 ]
  %134 = icmp eq i64 %133, %107
  br i1 %134, label %140, label %144

135:                                              ; preds = %119
  %136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %120, i64 2
  %137 = bitcast %"struct.std::__1::__hash_node_base.922"* %136 to i32*
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, %91
  br i1 %139, label %144, label %140

140:                                              ; preds = %135, %132
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %120, i64 0, i32 0
  %142 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %141, align 8
  %143 = icmp eq %"struct.std::__1::__hash_node_base.922"* %142, null
  br i1 %143, label %144, label %119

144:                                              ; preds = %140, %135, %132, %113, %106, %90
  %145 = phi %"struct.std::__1::__hash_node_base.922"* [ null, %106 ], [ null, %90 ], [ null, %113 ], [ null, %132 ], [ null, %140 ], [ %120, %135 ]
  %146 = icmp ne %"struct.std::__1::__hash_node_base.922"* %145, null
  br label %147

147:                                              ; preds = %65, %74, %144
  %148 = phi i1 [ %146, %144 ], [ false, %74 ], [ true, %65 ]
  ret i1 %148
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop7IsLCSSAEvE3$_2FbPNS5_11InstructionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12, !noalias !142
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZNK8spvtools3opt4Loop7IsLCSSAEvE3$_2FbPNS5_11InstructionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS8_9IRContextEPNS8_11InstructionEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1246"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1246"*, %"class.std::__1::__function::__default_alloc_func.1246"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1246", %"class.std::__1::__function::__default_alloc_func.1246"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1246", %"class.std::__1::__function::__default_alloc_func.1246"* %4, i64 0, i32 0, i32 1
  %8 = load %"class.spvtools::opt::analysis::DefUseManager"**, %"class.spvtools::opt::analysis::DefUseManager"*** %7, align 8
  %9 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %8, align 8
  %10 = load i32, i32* %1, align 4
  %11 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %9, i32 %10) #13
  %12 = tail call zeroext i1 @_ZNK8spvtools3opt4Loop12IsInsideLoopEPNS0_11InstructionE(%"class.spvtools::opt::Loop"* %6, %"class.spvtools::opt::Instruction"* %11) #13
  br i1 %12, label %13, label %16

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1246", %"class.std::__1::__function::__default_alloc_func.1246"* %4, i64 0, i32 0, i32 2
  %15 = load i8*, i8** %14, align 8
  store i8 0, i8* %15, align 1
  br label %16

16:                                               ; preds = %2, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS5_9IRContextEPNS5_11InstructionEE3$_3FvPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12, !noalias !147
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #13
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS5_9IRContextEPNS5_11InstructionEE3$_3FvPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNKS3_4Loop26ComputeLoopStructuredOrderEPNS_6vectorIS5_NS_9allocatorIS5_EEEEbbE3$_4S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) #0 align 2 {
  %3 = ptrtoint %"class.spvtools::opt::BasicBlock"* %1 to i64
  %4 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %5 = bitcast [8 x i8]* %4 to %"class.spvtools::opt::Loop"**
  %6 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 4
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %8, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = zext i8 %14 to i32
  %16 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %8, i32 %15) #13
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ %16, %12 ], [ 0, %2 ]
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %142, label %23

23:                                               ; preds = %17
  %24 = tail call i64 @llvm.ctpop.i64(i64 %21) #13, !range !3
  %25 = icmp ugt i64 %24, 1
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  %27 = add i64 %21, 4294967295
  %28 = and i64 %27, %19
  br label %33

29:                                               ; preds = %23
  %30 = icmp ugt i64 %21, %19
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = urem i64 %19, %21
  br label %33

33:                                               ; preds = %31, %29, %26
  %34 = phi i64 [ %28, %26 ], [ %32, %31 ], [ %19, %29 ]
  %35 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %6, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.922"**, %"struct.std::__1::__hash_node_base.922"*** %35, align 8
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %36, i64 %34
  %38 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.922"* %38, null
  br i1 %39, label %142, label %40

40:                                               ; preds = %33
  %41 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %38, i64 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.922"* %42, null
  br i1 %43, label %142, label %44

44:                                               ; preds = %40
  %45 = add i64 %21, -1
  br label %46

46:                                               ; preds = %67, %44
  %47 = phi %"struct.std::__1::__hash_node_base.922"* [ %42, %44 ], [ %69, %67 ]
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %47, i64 1
  %49 = bitcast %"struct.std::__1::__hash_node_base.922"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, %19
  br i1 %51, label %62, label %52

52:                                               ; preds = %46
  br i1 %25, label %55, label %53

53:                                               ; preds = %52
  %54 = and i64 %50, %45
  br label %59

55:                                               ; preds = %52
  %56 = icmp ult i64 %50, %21
  br i1 %56, label %59, label %57

57:                                               ; preds = %55
  %58 = urem i64 %50, %21
  br label %59

59:                                               ; preds = %57, %55, %53
  %60 = phi i64 [ %54, %53 ], [ %58, %57 ], [ %50, %55 ]
  %61 = icmp eq i64 %60, %34
  br i1 %61, label %67, label %142

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %47, i64 2
  %64 = bitcast %"struct.std::__1::__hash_node_base.922"* %63 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %18
  br i1 %66, label %71, label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.922", %"struct.std::__1::__hash_node_base.922"* %47, i64 0, i32 0
  %69 = load %"struct.std::__1::__hash_node_base.922"*, %"struct.std::__1::__hash_node_base.922"** %68, align 8
  %70 = icmp eq %"struct.std::__1::__hash_node_base.922"* %69, null
  br i1 %70, label %142, label %46

71:                                               ; preds = %62
  %72 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::vector.986"**
  %73 = load %"class.std::__1::vector.986"*, %"class.std::__1::vector.986"** %72, align 8
  %74 = getelementptr inbounds %"class.std::__1::vector.986", %"class.std::__1::vector.986"* %73, i64 0, i32 0, i32 1
  %75 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::vector.986", %"class.std::__1::vector.986"* %73, i64 0, i32 0, i32 2, i32 0, i32 0
  %77 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %76, align 8
  %78 = icmp eq %"class.spvtools::opt::BasicBlock"** %75, %77
  %79 = ptrtoint %"class.spvtools::opt::BasicBlock"** %77 to i64
  br i1 %78, label %85, label %80

80:                                               ; preds = %71
  %81 = bitcast %"class.spvtools::opt::BasicBlock"** %75 to i64*
  store i64 %3, i64* %81, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %75, i64 1
  %83 = ptrtoint %"class.spvtools::opt::BasicBlock"** %82 to i64
  %84 = bitcast %"class.spvtools::opt::BasicBlock"*** %74 to i64*
  store i64 %83, i64* %84, align 8
  br label %142

85:                                               ; preds = %71
  %86 = ptrtoint %"class.spvtools::opt::BasicBlock"** %75 to i64
  %87 = bitcast %"class.spvtools::opt::BasicBlock"*** %74 to i64*
  %88 = bitcast %"class.std::__1::vector.986"* %73 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %86, %89
  %91 = ashr exact i64 %90, 3
  %92 = add nsw i64 %91, 1
  %93 = icmp ugt i64 %92, 2305843009213693951
  br i1 %93, label %94, label %96

94:                                               ; preds = %85
  %95 = bitcast %"class.std::__1::vector.986"* %73 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %95) #14
  unreachable

96:                                               ; preds = %85
  %97 = bitcast %"class.spvtools::opt::BasicBlock"*** %76 to i64*
  %98 = sub i64 %79, %89
  %99 = ashr exact i64 %98, 3
  %100 = icmp ult i64 %99, 1152921504606846975
  br i1 %100, label %101, label %109

101:                                              ; preds = %96
  %102 = ashr exact i64 %98, 2
  %103 = icmp ult i64 %102, %92
  %104 = select i1 %103, i64 %92, i64 %102
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %101
  %107 = icmp ugt i64 %104, 2305843009213693951
  br i1 %107, label %108, label %109

108:                                              ; preds = %106
  tail call void @abort() #14
  unreachable

109:                                              ; preds = %106, %96
  %110 = phi i64 [ %104, %106 ], [ 2305843009213693951, %96 ]
  %111 = shl i64 %110, 3
  %112 = tail call i8* @_Znwm(i64 %111) #12
  %113 = bitcast i8* %112 to %"class.spvtools::opt::BasicBlock"**
  br label %114

114:                                              ; preds = %109, %101
  %115 = phi i64 [ %110, %109 ], [ 0, %101 ]
  %116 = phi %"class.spvtools::opt::BasicBlock"** [ %113, %109 ], [ null, %101 ]
  %117 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %116, i64 %91
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %116, i64 %115
  %119 = ptrtoint %"class.spvtools::opt::BasicBlock"** %118 to i64
  %120 = bitcast %"class.spvtools::opt::BasicBlock"** %117 to i64*
  store i64 %3, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %117, i64 1
  %122 = ptrtoint %"class.spvtools::opt::BasicBlock"** %121 to i64
  %123 = getelementptr inbounds %"class.std::__1::vector.986", %"class.std::__1::vector.986"* %73, i64 0, i32 0, i32 0
  %124 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %123, align 8
  %125 = load i64, i64* %87, align 8
  %126 = ptrtoint %"class.spvtools::opt::BasicBlock"** %124 to i64
  %127 = sub i64 %125, %126
  %128 = ashr exact i64 %127, 3
  %129 = sub nsw i64 0, %128
  %130 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %117, i64 %129
  %131 = ptrtoint %"class.spvtools::opt::BasicBlock"** %130 to i64
  %132 = icmp sgt i64 %127, 0
  br i1 %132, label %133, label %137

133:                                              ; preds = %114
  %134 = bitcast %"class.spvtools::opt::BasicBlock"** %130 to i8*
  %135 = bitcast %"class.spvtools::opt::BasicBlock"** %124 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %135, i64 %127, i1 false) #13
  %136 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %123, align 8
  br label %137

137:                                              ; preds = %133, %114
  %138 = phi %"class.spvtools::opt::BasicBlock"** [ %124, %114 ], [ %136, %133 ]
  store i64 %131, i64* %88, align 8
  store i64 %122, i64* %87, align 8
  store i64 %119, i64* %97, align 8
  %139 = icmp eq %"class.spvtools::opt::BasicBlock"** %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %137
  %141 = bitcast %"class.spvtools::opt::BasicBlock"** %138 to i8*
  tail call void @_ZdlPv(i8* %141) #12
  br label %142

142:                                              ; preds = %59, %67, %17, %33, %40, %80, %137, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque.1043"*, %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %7 = ptrtoint %"struct.std::__1::pair.1046"* %2 to i64
  %8 = icmp eq %"struct.std::__1::pair.1046"* %4, %2
  br i1 %8, label %25, label %9

9:                                                ; preds = %6
  %10 = ptrtoint %"struct.std::__1::pair.1046"* %4 to i64
  %11 = ptrtoint %"struct.std::__1::pair.1046"** %3 to i64
  %12 = ptrtoint %"struct.std::__1::pair.1046"** %1 to i64
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 5
  %15 = bitcast %"struct.std::__1::pair.1046"** %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %10, %16
  %18 = ashr exact i64 %17, 4
  %19 = add nsw i64 %18, %14
  %20 = bitcast %"struct.std::__1::pair.1046"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %7, %21
  %23 = ashr exact i64 %22, 4
  %24 = sub i64 %19, %23
  br label %25

25:                                               ; preds = %6, %9
  %26 = phi i64 [ %24, %9 ], [ 0, %6 ]
  %27 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast %"struct.std::__1::pair.1046"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.std::__1::pair.1046"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = icmp eq i64 %33, 0
  %35 = shl i64 %33, 5
  %36 = add i64 %35, -1
  %37 = select i1 %34, i64 0, i64 %36
  %38 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, %39
  %43 = sub i64 %37, %42
  %44 = icmp ugt i64 %26, %43
  %45 = inttoptr i64 %32 to %"struct.std::__1::pair.1046"**
  %46 = inttoptr i64 %29 to %"struct.std::__1::pair.1046"**
  br i1 %44, label %47, label %54

47:                                               ; preds = %25
  %48 = sub i64 %26, %43
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm(%"class.std::__1::deque.1043"* %0, i64 %48)
  %49 = load i64, i64* %40, align 8
  %50 = load i64, i64* %38, align 8
  %51 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %30, align 8
  %52 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %27, align 8
  %53 = add i64 %50, %49
  br label %54

54:                                               ; preds = %47, %25
  %55 = phi i64 [ %53, %47 ], [ %42, %25 ]
  %56 = phi %"struct.std::__1::pair.1046"** [ %52, %47 ], [ %46, %25 ]
  %57 = phi %"struct.std::__1::pair.1046"** [ %51, %47 ], [ %45, %25 ]
  %58 = phi i64 [ %49, %47 ], [ %41, %25 ]
  %59 = lshr i64 %55, 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %57, i64 %59
  %61 = icmp eq %"struct.std::__1::pair.1046"** %56, %57
  br i1 %61, label %67, label %62

62:                                               ; preds = %54
  %63 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %60, align 8
  %64 = and i64 %55, 255
  %65 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %63, i64 %64
  %66 = ptrtoint %"struct.std::__1::pair.1046"* %65 to i64
  br label %67

67:                                               ; preds = %54, %62
  %68 = phi i64 [ %66, %62 ], [ 0, %54 ]
  %69 = icmp eq i64 %26, 0
  br i1 %69, label %93, label %70

70:                                               ; preds = %67
  %71 = bitcast %"struct.std::__1::pair.1046"** %60 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %68, %72
  %74 = ashr exact i64 %73, 4
  %75 = add nsw i64 %74, %26
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %70
  %78 = lshr i64 %75, 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %60, i64 %78
  %80 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %79, align 8
  %81 = and i64 %75, 255
  %82 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %80, i64 %81
  %83 = ptrtoint %"struct.std::__1::pair.1046"* %82 to i64
  br label %93

84:                                               ; preds = %70
  %85 = sub nsw i64 255, %75
  %86 = sdiv i64 %85, -256
  %87 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %60, i64 %86
  %88 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %87, align 8
  %89 = srem i64 %85, 256
  %90 = sub nsw i64 255, %89
  %91 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %88, i64 %90
  %92 = ptrtoint %"struct.std::__1::pair.1046"* %91 to i64
  br label %93

93:                                               ; preds = %67, %77, %84
  %94 = phi i64 [ %68, %67 ], [ %83, %77 ], [ %92, %84 ]
  %95 = phi %"struct.std::__1::pair.1046"** [ %60, %67 ], [ %79, %77 ], [ %87, %84 ]
  %96 = inttoptr i64 %94 to %"struct.std::__1::pair.1046"*
  %97 = inttoptr i64 %68 to %"struct.std::__1::pair.1046"*
  %98 = icmp eq %"struct.std::__1::pair.1046"* %97, %96
  br i1 %98, label %99, label %100

99:                                               ; preds = %184, %192, %93
  ret void

100:                                              ; preds = %93, %192
  %101 = phi i64 [ %191, %192 ], [ %58, %93 ]
  %102 = phi i64 [ %187, %192 ], [ %7, %93 ]
  %103 = phi %"struct.std::__1::pair.1046"** [ %186, %192 ], [ %1, %93 ]
  %104 = phi i64 [ %195, %192 ], [ %68, %93 ]
  %105 = phi %"struct.std::__1::pair.1046"** [ %193, %192 ], [ %60, %93 ]
  %106 = icmp eq %"struct.std::__1::pair.1046"** %105, %95
  br i1 %106, label %110, label %107

107:                                              ; preds = %100
  %108 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %105, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %108, i64 256
  br label %110

110:                                              ; preds = %100, %107
  %111 = phi %"struct.std::__1::pair.1046"* [ %109, %107 ], [ %96, %100 ]
  %112 = inttoptr i64 %104 to %"struct.std::__1::pair.1046"*
  %113 = icmp eq %"struct.std::__1::pair.1046"* %111, %112
  br i1 %113, label %184, label %114

114:                                              ; preds = %110
  %115 = getelementptr %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %111, i64 -1
  %116 = bitcast %"struct.std::__1::pair.1046"* %115 to i8*
  %117 = sub i64 0, %104
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = ptrtoint i8* %118 to i64
  %120 = and i64 %119, 16
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %138

122:                                              ; preds = %114
  %123 = inttoptr i64 %102 to %"struct.std::__1::pair.1046"*
  %124 = inttoptr i64 %104 to i8*
  %125 = inttoptr i64 %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #13
  %126 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %112, i64 1
  %127 = ptrtoint %"struct.std::__1::pair.1046"* %126 to i64
  %128 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %123, i64 1
  %129 = ptrtoint %"struct.std::__1::pair.1046"* %128 to i64
  %130 = bitcast %"struct.std::__1::pair.1046"** %103 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %129, %131
  %133 = icmp eq i64 %132, 4096
  br i1 %133, label %134, label %138

134:                                              ; preds = %122
  %135 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %103, i64 1
  %136 = bitcast %"struct.std::__1::pair.1046"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  br label %138

138:                                              ; preds = %114, %134, %122
  %139 = phi %"struct.std::__1::pair.1046"** [ undef, %114 ], [ %135, %134 ], [ %103, %122 ]
  %140 = phi i64 [ undef, %114 ], [ %137, %134 ], [ %129, %122 ]
  %141 = phi %"struct.std::__1::pair.1046"* [ %112, %114 ], [ %126, %134 ], [ %126, %122 ]
  %142 = phi i64 [ %104, %114 ], [ %127, %134 ], [ %127, %122 ]
  %143 = phi i64 [ %102, %114 ], [ %137, %134 ], [ %129, %122 ]
  %144 = phi %"struct.std::__1::pair.1046"** [ %103, %114 ], [ %135, %134 ], [ %103, %122 ]
  %145 = icmp ult i8* %118, inttoptr (i64 16 to i8*)
  br i1 %145, label %179, label %146

146:                                              ; preds = %138, %202
  %147 = phi %"struct.std::__1::pair.1046"* [ %171, %202 ], [ %141, %138 ]
  %148 = phi i64 [ %172, %202 ], [ %142, %138 ]
  %149 = phi i64 [ %204, %202 ], [ %143, %138 ]
  %150 = phi %"struct.std::__1::pair.1046"** [ %203, %202 ], [ %144, %138 ]
  %151 = inttoptr i64 %149 to %"struct.std::__1::pair.1046"*
  %152 = inttoptr i64 %148 to i8*
  %153 = inttoptr i64 %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #13
  %154 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %147, i64 1
  %155 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %151, i64 1
  %156 = ptrtoint %"struct.std::__1::pair.1046"* %155 to i64
  %157 = bitcast %"struct.std::__1::pair.1046"** %150 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %156, %158
  %160 = icmp eq i64 %159, 4096
  br i1 %160, label %161, label %165

161:                                              ; preds = %146
  %162 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %150, i64 1
  %163 = bitcast %"struct.std::__1::pair.1046"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  br label %165

165:                                              ; preds = %146, %161
  %166 = phi %"struct.std::__1::pair.1046"** [ %162, %161 ], [ %150, %146 ]
  %167 = phi i64 [ %164, %161 ], [ %156, %146 ]
  %168 = inttoptr i64 %167 to %"struct.std::__1::pair.1046"*
  %169 = bitcast %"struct.std::__1::pair.1046"* %154 to i8*
  %170 = inttoptr i64 %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 16, i1 false) #13
  %171 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %147, i64 2
  %172 = ptrtoint %"struct.std::__1::pair.1046"* %171 to i64
  %173 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %168, i64 1
  %174 = ptrtoint %"struct.std::__1::pair.1046"* %173 to i64
  %175 = bitcast %"struct.std::__1::pair.1046"** %166 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = icmp eq i64 %177, 4096
  br i1 %178, label %198, label %202

179:                                              ; preds = %202, %138
  %180 = phi %"struct.std::__1::pair.1046"** [ %139, %138 ], [ %203, %202 ]
  %181 = phi i64 [ %140, %138 ], [ %204, %202 ]
  %182 = ptrtoint %"struct.std::__1::pair.1046"* %111 to i64
  %183 = load i64, i64* %40, align 8
  br label %184

184:                                              ; preds = %179, %110
  %185 = phi i64 [ %183, %179 ], [ %101, %110 ]
  %186 = phi %"struct.std::__1::pair.1046"** [ %180, %179 ], [ %103, %110 ]
  %187 = phi i64 [ %181, %179 ], [ %102, %110 ]
  %188 = phi i64 [ %182, %179 ], [ %104, %110 ]
  %189 = sub i64 %188, %104
  %190 = ashr exact i64 %189, 4
  %191 = add i64 %185, %190
  store i64 %191, i64* %40, align 8
  br i1 %106, label %99, label %192

192:                                              ; preds = %184
  %193 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %105, i64 1
  %194 = bitcast %"struct.std::__1::pair.1046"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = inttoptr i64 %195 to %"struct.std::__1::pair.1046"*
  %197 = icmp eq %"struct.std::__1::pair.1046"* %196, %96
  br i1 %197, label %99, label %100

198:                                              ; preds = %165
  %199 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %166, i64 1
  %200 = bitcast %"struct.std::__1::pair.1046"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  br label %202

202:                                              ; preds = %198, %165
  %203 = phi %"struct.std::__1::pair.1046"** [ %199, %198 ], [ %166, %165 ]
  %204 = phi i64 [ %201, %198 ], [ %174, %165 ]
  %205 = icmp eq %"struct.std::__1::pair.1046"* %111, %171
  br i1 %205, label %179, label %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm(%"class.std::__1::deque.1043"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::pair.1046"*, align 8
  %4 = alloca %"struct.std::__1::pair.1046"*, align 8
  %5 = alloca %"struct.std::__1::__split_buffer.1182", align 16
  %6 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair.1046"** %8, %10
  %12 = zext i1 %11 to i64
  %13 = add i64 %12, %1
  %14 = lshr i64 %13, 8
  %15 = and i64 %13, 255
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i64
  %18 = add nuw nsw i64 %14, %17
  %19 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 8
  %22 = icmp ult i64 %18, %21
  %23 = select i1 %22, i64 %18, i64 %21
  %24 = sub nsw i64 %18, %23
  %25 = icmp eq i64 %24, 0
  %26 = ptrtoint %"struct.std::__1::pair.1046"** %8 to i64
  br i1 %25, label %27, label %186

27:                                               ; preds = %2
  %28 = shl nuw i64 %23, 8
  %29 = sub i64 %20, %28
  store i64 %29, i64* %19, align 8
  %30 = icmp eq i64 %23, 0
  br i1 %30, label %768, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.1046"*** %32 to i64*
  %35 = bitcast %"class.std::__1::deque.1043"* %0 to i64*
  %36 = bitcast %"struct.std::__1::pair.1046"*** %9 to i64*
  %37 = bitcast %"struct.std::__1::pair.1046"*** %7 to i64*
  %38 = bitcast %"struct.std::__1::pair.1046"*** %7 to i64**
  br label %39

39:                                               ; preds = %184, %31
  %40 = phi %"struct.std::__1::pair.1046"** [ %8, %31 ], [ %181, %184 ]
  %41 = phi %"struct.std::__1::pair.1046"** [ %10, %31 ], [ %185, %184 ]
  %42 = phi i64 [ %23, %31 ], [ %182, %184 ]
  %43 = bitcast %"struct.std::__1::pair.1046"** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %41, i64 1
  store %"struct.std::__1::pair.1046"** %45, %"struct.std::__1::pair.1046"*** %9, align 8
  %46 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %32, align 8
  %47 = icmp eq %"struct.std::__1::pair.1046"** %40, %46
  %48 = ptrtoint %"struct.std::__1::pair.1046"** %46 to i64
  %49 = bitcast %"struct.std::__1::pair.1046"** %40 to i64*
  br i1 %47, label %50, label %178

50:                                               ; preds = %39
  %51 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %33, align 8
  %52 = icmp ugt %"struct.std::__1::pair.1046"** %45, %51
  %53 = ptrtoint %"struct.std::__1::pair.1046"** %51 to i64
  br i1 %52, label %54, label %73

54:                                               ; preds = %50
  %55 = ptrtoint %"struct.std::__1::pair.1046"** %45 to i64
  %56 = sub i64 %55, %53
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = sdiv i64 %58, -2
  %60 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %45, i64 %59
  %61 = sub i64 %48, %55
  %62 = ashr exact i64 %61, 3
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = bitcast %"struct.std::__1::pair.1046"** %60 to i8*
  %66 = bitcast %"struct.std::__1::pair.1046"** %45 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %61, i1 false) #13
  %67 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %9, align 8
  br label %68

68:                                               ; preds = %64, %54
  %69 = phi %"struct.std::__1::pair.1046"** [ %45, %54 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %60, i64 %62
  store %"struct.std::__1::pair.1046"** %70, %"struct.std::__1::pair.1046"*** %7, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %69, i64 %59
  store %"struct.std::__1::pair.1046"** %71, %"struct.std::__1::pair.1046"*** %9, align 8
  %72 = bitcast %"struct.std::__1::pair.1046"** %70 to i64*
  br label %178

73:                                               ; preds = %50
  %74 = sub i64 %48, %53
  %75 = ashr exact i64 %74, 2
  %76 = icmp eq i64 %74, 0
  %77 = select i1 %76, i64 1, i64 %75
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  tail call void @abort() #14
  unreachable

80:                                               ; preds = %73
  %81 = lshr i64 %77, 2
  %82 = shl i64 %77, 3
  %83 = tail call i8* @_Znwm(i64 %82) #12
  %84 = bitcast i8* %83 to %"struct.std::__1::pair.1046"**
  %85 = ptrtoint i8* %83 to i64
  %86 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %84, i64 %81
  %87 = ptrtoint %"struct.std::__1::pair.1046"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %84, i64 %77
  %89 = ptrtoint %"struct.std::__1::pair.1046"** %88 to i64
  %90 = ptrtoint %"struct.std::__1::pair.1046"** %45 to i64
  %91 = sub i64 %48, %90
  %92 = ashr exact i64 %91, 3
  %93 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %86, i64 %92
  %94 = icmp eq i64 %91, 0
  br i1 %94, label %170, label %95

95:                                               ; preds = %80
  %96 = add i64 %91, -8
  %97 = lshr i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 7
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %116, label %101

101:                                              ; preds = %95, %101
  %102 = phi %"struct.std::__1::pair.1046"** [ %109, %101 ], [ %86, %95 ]
  %103 = phi i64 [ %110, %101 ], [ %87, %95 ]
  %104 = phi %"struct.std::__1::pair.1046"** [ %111, %101 ], [ %45, %95 ]
  %105 = phi i64 [ %112, %101 ], [ %99, %95 ]
  %106 = bitcast %"struct.std::__1::pair.1046"** %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %102, i64 1
  %110 = ptrtoint %"struct.std::__1::pair.1046"** %109 to i64
  %111 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %104, i64 1
  %112 = add i64 %105, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %101, !llvm.loop !152

114:                                              ; preds = %101
  %115 = ptrtoint %"struct.std::__1::pair.1046"** %109 to i64
  br label %116

116:                                              ; preds = %95, %114
  %117 = phi %"struct.std::__1::pair.1046"** [ %86, %95 ], [ %109, %114 ]
  %118 = phi i64 [ %87, %95 ], [ %115, %114 ]
  %119 = phi %"struct.std::__1::pair.1046"** [ %45, %95 ], [ %111, %114 ]
  %120 = icmp ult i64 %96, 56
  br i1 %120, label %167, label %121

121:                                              ; preds = %116, %121
  %122 = phi %"struct.std::__1::pair.1046"** [ %163, %121 ], [ %117, %116 ]
  %123 = phi i64 [ %164, %121 ], [ %118, %116 ]
  %124 = phi %"struct.std::__1::pair.1046"** [ %165, %121 ], [ %119, %116 ]
  %125 = bitcast %"struct.std::__1::pair.1046"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = inttoptr i64 %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %122, i64 1
  %129 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %124, i64 1
  %130 = bitcast %"struct.std::__1::pair.1046"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"struct.std::__1::pair.1046"** %128 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %122, i64 2
  %134 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %124, i64 2
  %135 = bitcast %"struct.std::__1::pair.1046"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"struct.std::__1::pair.1046"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %122, i64 3
  %139 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %124, i64 3
  %140 = bitcast %"struct.std::__1::pair.1046"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"struct.std::__1::pair.1046"** %138 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %122, i64 4
  %144 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %124, i64 4
  %145 = bitcast %"struct.std::__1::pair.1046"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"struct.std::__1::pair.1046"** %143 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %122, i64 5
  %149 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %124, i64 5
  %150 = bitcast %"struct.std::__1::pair.1046"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1046"** %148 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %122, i64 6
  %154 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %124, i64 6
  %155 = bitcast %"struct.std::__1::pair.1046"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"struct.std::__1::pair.1046"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %122, i64 7
  %159 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %124, i64 7
  %160 = bitcast %"struct.std::__1::pair.1046"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"struct.std::__1::pair.1046"** %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %122, i64 8
  %164 = ptrtoint %"struct.std::__1::pair.1046"** %163 to i64
  %165 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %124, i64 8
  %166 = icmp eq %"struct.std::__1::pair.1046"** %93, %163
  br i1 %166, label %167, label %121

167:                                              ; preds = %121, %116
  %168 = ptrtoint %"struct.std::__1::pair.1046"** %93 to i64
  %169 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %33, align 8
  br label %170

170:                                              ; preds = %167, %80
  %171 = phi %"struct.std::__1::pair.1046"** [ %169, %167 ], [ %51, %80 ]
  %172 = phi i64 [ %168, %167 ], [ %87, %80 ]
  store i64 %85, i64* %35, align 8
  store i64 %87, i64* %36, align 8
  store i64 %172, i64* %37, align 8
  store i64 %89, i64* %34, align 8
  %173 = icmp eq %"struct.std::__1::pair.1046"** %171, null
  %174 = inttoptr i64 %172 to i64*
  br i1 %173, label %178, label %175

175:                                              ; preds = %170
  %176 = bitcast %"struct.std::__1::pair.1046"** %171 to i8*
  tail call void @_ZdlPv(i8* %176) #12
  %177 = load i64*, i64** %38, align 8
  br label %178

178:                                              ; preds = %39, %68, %170, %175
  %179 = phi i64* [ %177, %175 ], [ %174, %170 ], [ %72, %68 ], [ %49, %39 ]
  store i64 %44, i64* %179, align 8
  %180 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %7, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %180, i64 1
  store %"struct.std::__1::pair.1046"** %181, %"struct.std::__1::pair.1046"*** %7, align 8
  %182 = add i64 %42, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %768, label %184

184:                                              ; preds = %178
  %185 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %9, align 8
  br label %39

186:                                              ; preds = %2
  %187 = ptrtoint %"struct.std::__1::pair.1046"** %10 to i64
  %188 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %189 = bitcast %"struct.std::__1::pair.1046"*** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::deque.1043"* %0 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %190, %192
  %194 = ashr exact i64 %193, 3
  %195 = bitcast %"struct.std::__1::pair.1046"*** %7 to i64*
  %196 = bitcast %"struct.std::__1::pair.1046"*** %9 to i64*
  %197 = sub i64 %26, %187
  %198 = ashr exact i64 %197, 3
  %199 = sub nsw i64 %194, %198
  %200 = icmp ugt i64 %24, %199
  br i1 %200, label %391, label %201

201:                                              ; preds = %186
  %202 = bitcast %"struct.std::__1::pair.1046"** %3 to i8*
  %203 = bitcast %"struct.std::__1::pair.1046"** %3 to i8**
  %204 = icmp eq i64 %190, %26
  br i1 %204, label %214, label %205

205:                                              ; preds = %201, %210
  %206 = phi i64 [ %208, %210 ], [ %24, %201 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #13
  %207 = call i8* @_Znwm(i64 4096) #12
  store i8* %207, i8** %203, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer.1045"* %6, %"struct.std::__1::pair.1046"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #13
  %208 = add i64 %206, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = load i64, i64* %189, align 8
  %212 = load i64, i64* %195, align 8
  %213 = icmp eq i64 %211, %212
  br i1 %213, label %214, label %205

214:                                              ; preds = %210, %201
  %215 = phi i64 [ %24, %201 ], [ %208, %210 ]
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %205, %214
  %218 = load i64, i64* %19, align 8
  br label %236

219:                                              ; preds = %214
  %220 = bitcast %"struct.std::__1::pair.1046"** %4 to i8*
  %221 = bitcast %"struct.std::__1::pair.1046"** %4 to i8**
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %215, %219 ], [ %225, %222 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #13
  %224 = call i8* @_Znwm(i64 4096) #12
  store i8* %224, i8** %221, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer.1045"* %6, %"struct.std::__1::pair.1046"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #13
  %225 = add i64 %223, -1
  %226 = load i64, i64* %195, align 8
  %227 = load i64, i64* %196, align 8
  %228 = sub i64 %226, %227
  %229 = icmp eq i64 %228, 8
  %230 = select i1 %229, i64 255, i64 256
  %231 = load i64, i64* %19, align 8
  %232 = add i64 %230, %231
  store i64 %232, i64* %19, align 8
  %233 = icmp eq i64 %225, 0
  br i1 %233, label %234, label %222

234:                                              ; preds = %222
  %235 = add i64 %215, %23
  br label %236

236:                                              ; preds = %217, %234
  %237 = phi i64 [ %218, %217 ], [ %232, %234 ]
  %238 = phi i64 [ %23, %217 ], [ %235, %234 ]
  %239 = shl i64 %238, 8
  %240 = sub i64 %237, %239
  store i64 %240, i64* %19, align 8
  %241 = icmp eq i64 %238, 0
  br i1 %241, label %768, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"struct.std::__1::pair.1046"*** %7 to i64**
  %245 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %7, align 8
  br label %246

246:                                              ; preds = %242, %385
  %247 = phi %"struct.std::__1::pair.1046"** [ %245, %242 ], [ %388, %385 ]
  %248 = phi i64 [ %238, %242 ], [ %389, %385 ]
  %249 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %9, align 8
  %250 = bitcast %"struct.std::__1::pair.1046"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %249, i64 1
  store %"struct.std::__1::pair.1046"** %252, %"struct.std::__1::pair.1046"*** %9, align 8
  %253 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %188, align 8
  %254 = icmp eq %"struct.std::__1::pair.1046"** %247, %253
  %255 = ptrtoint %"struct.std::__1::pair.1046"** %253 to i64
  %256 = bitcast %"struct.std::__1::pair.1046"** %247 to i64*
  br i1 %254, label %257, label %385

257:                                              ; preds = %246
  %258 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %243, align 8
  %259 = icmp ugt %"struct.std::__1::pair.1046"** %252, %258
  %260 = ptrtoint %"struct.std::__1::pair.1046"** %258 to i64
  br i1 %259, label %261, label %280

261:                                              ; preds = %257
  %262 = ptrtoint %"struct.std::__1::pair.1046"** %252 to i64
  %263 = sub i64 %262, %260
  %264 = ashr exact i64 %263, 3
  %265 = add nsw i64 %264, 1
  %266 = sdiv i64 %265, -2
  %267 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %252, i64 %266
  %268 = sub i64 %255, %262
  %269 = ashr exact i64 %268, 3
  %270 = icmp eq i64 %268, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %261
  %272 = bitcast %"struct.std::__1::pair.1046"** %267 to i8*
  %273 = bitcast %"struct.std::__1::pair.1046"** %252 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 %268, i1 false) #13
  %274 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %9, align 8
  br label %275

275:                                              ; preds = %271, %261
  %276 = phi %"struct.std::__1::pair.1046"** [ %252, %261 ], [ %274, %271 ]
  %277 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %267, i64 %269
  store %"struct.std::__1::pair.1046"** %277, %"struct.std::__1::pair.1046"*** %7, align 8
  %278 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %276, i64 %266
  store %"struct.std::__1::pair.1046"** %278, %"struct.std::__1::pair.1046"*** %9, align 8
  %279 = bitcast %"struct.std::__1::pair.1046"** %277 to i64*
  br label %385

280:                                              ; preds = %257
  %281 = sub i64 %255, %260
  %282 = ashr exact i64 %281, 2
  %283 = icmp eq i64 %281, 0
  %284 = select i1 %283, i64 1, i64 %282
  %285 = icmp ugt i64 %284, 2305843009213693951
  br i1 %285, label %286, label %287

286:                                              ; preds = %280
  call void @abort() #14
  unreachable

287:                                              ; preds = %280
  %288 = lshr i64 %284, 2
  %289 = shl i64 %284, 3
  %290 = call i8* @_Znwm(i64 %289) #12
  %291 = bitcast i8* %290 to %"struct.std::__1::pair.1046"**
  %292 = ptrtoint i8* %290 to i64
  %293 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %291, i64 %288
  %294 = ptrtoint %"struct.std::__1::pair.1046"** %293 to i64
  %295 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %291, i64 %284
  %296 = ptrtoint %"struct.std::__1::pair.1046"** %295 to i64
  %297 = ptrtoint %"struct.std::__1::pair.1046"** %252 to i64
  %298 = sub i64 %255, %297
  %299 = ashr exact i64 %298, 3
  %300 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %293, i64 %299
  %301 = icmp eq i64 %298, 0
  br i1 %301, label %377, label %302

302:                                              ; preds = %287
  %303 = add i64 %298, -8
  %304 = lshr i64 %303, 3
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 7
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %323, label %308

308:                                              ; preds = %302, %308
  %309 = phi %"struct.std::__1::pair.1046"** [ %316, %308 ], [ %293, %302 ]
  %310 = phi i64 [ %317, %308 ], [ %294, %302 ]
  %311 = phi %"struct.std::__1::pair.1046"** [ %318, %308 ], [ %252, %302 ]
  %312 = phi i64 [ %319, %308 ], [ %306, %302 ]
  %313 = bitcast %"struct.std::__1::pair.1046"** %311 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = inttoptr i64 %310 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %309, i64 1
  %317 = ptrtoint %"struct.std::__1::pair.1046"** %316 to i64
  %318 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %311, i64 1
  %319 = add i64 %312, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %308, !llvm.loop !153

321:                                              ; preds = %308
  %322 = ptrtoint %"struct.std::__1::pair.1046"** %316 to i64
  br label %323

323:                                              ; preds = %302, %321
  %324 = phi %"struct.std::__1::pair.1046"** [ %293, %302 ], [ %316, %321 ]
  %325 = phi i64 [ %294, %302 ], [ %322, %321 ]
  %326 = phi %"struct.std::__1::pair.1046"** [ %252, %302 ], [ %318, %321 ]
  %327 = icmp ult i64 %303, 56
  br i1 %327, label %374, label %328

328:                                              ; preds = %323, %328
  %329 = phi %"struct.std::__1::pair.1046"** [ %370, %328 ], [ %324, %323 ]
  %330 = phi i64 [ %371, %328 ], [ %325, %323 ]
  %331 = phi %"struct.std::__1::pair.1046"** [ %372, %328 ], [ %326, %323 ]
  %332 = bitcast %"struct.std::__1::pair.1046"** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = inttoptr i64 %330 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %329, i64 1
  %336 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %331, i64 1
  %337 = bitcast %"struct.std::__1::pair.1046"** %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"struct.std::__1::pair.1046"** %335 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %329, i64 2
  %341 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %331, i64 2
  %342 = bitcast %"struct.std::__1::pair.1046"** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"struct.std::__1::pair.1046"** %340 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %329, i64 3
  %346 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %331, i64 3
  %347 = bitcast %"struct.std::__1::pair.1046"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"struct.std::__1::pair.1046"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %329, i64 4
  %351 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %331, i64 4
  %352 = bitcast %"struct.std::__1::pair.1046"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"struct.std::__1::pair.1046"** %350 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %329, i64 5
  %356 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %331, i64 5
  %357 = bitcast %"struct.std::__1::pair.1046"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"struct.std::__1::pair.1046"** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %329, i64 6
  %361 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %331, i64 6
  %362 = bitcast %"struct.std::__1::pair.1046"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"struct.std::__1::pair.1046"** %360 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %329, i64 7
  %366 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %331, i64 7
  %367 = bitcast %"struct.std::__1::pair.1046"** %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"struct.std::__1::pair.1046"** %365 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %329, i64 8
  %371 = ptrtoint %"struct.std::__1::pair.1046"** %370 to i64
  %372 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %331, i64 8
  %373 = icmp eq %"struct.std::__1::pair.1046"** %300, %370
  br i1 %373, label %374, label %328

374:                                              ; preds = %328, %323
  %375 = ptrtoint %"struct.std::__1::pair.1046"** %300 to i64
  %376 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %243, align 8
  br label %377

377:                                              ; preds = %374, %287
  %378 = phi %"struct.std::__1::pair.1046"** [ %376, %374 ], [ %258, %287 ]
  %379 = phi i64 [ %375, %374 ], [ %294, %287 ]
  store i64 %292, i64* %191, align 8
  store i64 %294, i64* %196, align 8
  store i64 %379, i64* %195, align 8
  store i64 %296, i64* %189, align 8
  %380 = icmp eq %"struct.std::__1::pair.1046"** %378, null
  %381 = inttoptr i64 %379 to i64*
  br i1 %380, label %385, label %382

382:                                              ; preds = %377
  %383 = bitcast %"struct.std::__1::pair.1046"** %378 to i8*
  call void @_ZdlPv(i8* %383) #12
  %384 = load i64*, i64** %244, align 8
  br label %385

385:                                              ; preds = %246, %275, %377, %382
  %386 = phi i64* [ %384, %382 ], [ %381, %377 ], [ %279, %275 ], [ %256, %246 ]
  store i64 %251, i64* %386, align 8
  %387 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %7, align 8
  %388 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %387, i64 1
  store %"struct.std::__1::pair.1046"** %388, %"struct.std::__1::pair.1046"*** %7, align 8
  %389 = add i64 %248, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %768, label %246

391:                                              ; preds = %186
  %392 = shl nuw i64 %23, 8
  %393 = bitcast %"struct.std::__1::__split_buffer.1182"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #13
  %394 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %5, i64 0, i32 0
  %395 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %5, i64 0, i32 1
  %396 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %5, i64 0, i32 2
  %397 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %5, i64 0, i32 3, i32 0, i32 0
  %398 = getelementptr inbounds %"struct.std::__1::__split_buffer.1182", %"struct.std::__1::__split_buffer.1182"* %5, i64 0, i32 3, i32 1, i32 0
  %399 = ashr exact i64 %193, 2
  %400 = add nsw i64 %198, %24
  %401 = icmp ult i64 %399, %400
  %402 = select i1 %401, i64 %400, i64 %399
  %403 = sub nsw i64 %198, %23
  %404 = getelementptr inbounds %"class.std::__1::deque.1043", %"class.std::__1::deque.1043"* %0, i64 0, i32 0, i32 0, i32 3
  %405 = bitcast %"struct.std::__1::__split_buffer.1182"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %405, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1046"** null, %"struct.std::__1::pair.1046"*** %397, align 8
  %406 = bitcast %"class.std::__1::allocator.1050"** %398 to %"class.std::__1::__compressed_pair.1047"**
  store %"class.std::__1::__compressed_pair.1047"* %404, %"class.std::__1::__compressed_pair.1047"** %406, align 8
  %407 = icmp eq i64 %402, 0
  br i1 %407, label %415, label %408

408:                                              ; preds = %391
  %409 = icmp ugt i64 %402, 2305843009213693951
  br i1 %409, label %410, label %411

410:                                              ; preds = %408
  tail call void @abort() #14
  unreachable

411:                                              ; preds = %408
  %412 = shl i64 %402, 3
  %413 = tail call i8* @_Znwm(i64 %412) #12
  %414 = bitcast i8* %413 to %"struct.std::__1::pair.1046"**
  br label %415

415:                                              ; preds = %411, %391
  %416 = phi %"struct.std::__1::pair.1046"** [ %414, %411 ], [ null, %391 ]
  store %"struct.std::__1::pair.1046"** %416, %"struct.std::__1::pair.1046"*** %394, align 16
  %417 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %416, i64 %403
  store %"struct.std::__1::pair.1046"** %417, %"struct.std::__1::pair.1046"*** %396, align 16
  store %"struct.std::__1::pair.1046"** %417, %"struct.std::__1::pair.1046"*** %395, align 8
  %418 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %416, i64 %402
  store %"struct.std::__1::pair.1046"** %418, %"struct.std::__1::pair.1046"*** %397, align 8
  %419 = bitcast %"struct.std::__1::pair.1046"*** %397 to i64*
  %420 = bitcast %"struct.std::__1::__split_buffer.1182"* %5 to i64*
  %421 = bitcast %"struct.std::__1::pair.1046"*** %395 to i64*
  %422 = bitcast %"struct.std::__1::pair.1046"*** %396 to i64*
  br label %434

423:                                              ; preds = %568
  %424 = icmp eq i64 %23, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %423
  %426 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %9, align 8
  br label %719

427:                                              ; preds = %423
  %428 = bitcast %"struct.std::__1::pair.1046"*** %9 to i64**
  %429 = bitcast %"struct.std::__1::pair.1046"*** %397 to i64*
  %430 = bitcast %"struct.std::__1::__split_buffer.1182"* %5 to i64*
  %431 = bitcast %"struct.std::__1::pair.1046"*** %395 to i64*
  %432 = bitcast %"struct.std::__1::pair.1046"*** %396 to i64*
  %433 = load i64*, i64** %428, align 8
  br label %576

434:                                              ; preds = %574, %415
  %435 = phi %"struct.std::__1::pair.1046"** [ %418, %415 ], [ %575, %574 ]
  %436 = phi %"struct.std::__1::pair.1046"** [ %417, %415 ], [ %571, %574 ]
  %437 = phi i64 [ %24, %415 ], [ %572, %574 ]
  %438 = tail call i8* @_Znwm(i64 4096) #12
  %439 = ptrtoint i8* %438 to i64
  %440 = icmp eq %"struct.std::__1::pair.1046"** %436, %435
  %441 = ptrtoint %"struct.std::__1::pair.1046"** %435 to i64
  %442 = bitcast %"struct.std::__1::pair.1046"** %436 to i64*
  br i1 %440, label %443, label %568

443:                                              ; preds = %434
  %444 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %395, align 8
  %445 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %394, align 16
  %446 = icmp ugt %"struct.std::__1::pair.1046"** %444, %445
  %447 = ptrtoint %"struct.std::__1::pair.1046"** %445 to i64
  br i1 %446, label %448, label %464

448:                                              ; preds = %443
  %449 = ptrtoint %"struct.std::__1::pair.1046"** %444 to i64
  %450 = sub i64 %449, %447
  %451 = ashr exact i64 %450, 3
  %452 = add nsw i64 %451, 1
  %453 = sdiv i64 %452, -2
  %454 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %444, i64 %453
  %455 = sub i64 %441, %449
  %456 = ashr exact i64 %455, 3
  %457 = icmp eq i64 %455, 0
  br i1 %457, label %461, label %458

458:                                              ; preds = %448
  %459 = bitcast %"struct.std::__1::pair.1046"** %454 to i8*
  %460 = bitcast %"struct.std::__1::pair.1046"** %444 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %459, i8* align 8 %460, i64 %455, i1 false) #13
  br label %461

461:                                              ; preds = %458, %448
  %462 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %454, i64 %456
  store %"struct.std::__1::pair.1046"** %462, %"struct.std::__1::pair.1046"*** %396, align 16
  store %"struct.std::__1::pair.1046"** %454, %"struct.std::__1::pair.1046"*** %395, align 8
  %463 = bitcast %"struct.std::__1::pair.1046"** %462 to i64*
  br label %568

464:                                              ; preds = %443
  %465 = sub i64 %441, %447
  %466 = ashr exact i64 %465, 2
  %467 = icmp eq i64 %465, 0
  %468 = select i1 %467, i64 1, i64 %466
  %469 = icmp ugt i64 %468, 2305843009213693951
  br i1 %469, label %470, label %471

470:                                              ; preds = %464
  tail call void @abort() #14
  unreachable

471:                                              ; preds = %464
  %472 = lshr i64 %468, 2
  %473 = shl i64 %468, 3
  %474 = tail call i8* @_Znwm(i64 %473) #12
  %475 = bitcast i8* %474 to %"struct.std::__1::pair.1046"**
  %476 = ptrtoint i8* %474 to i64
  %477 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %475, i64 %472
  %478 = ptrtoint %"struct.std::__1::pair.1046"** %477 to i64
  %479 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %475, i64 %468
  %480 = ptrtoint %"struct.std::__1::pair.1046"** %479 to i64
  %481 = ptrtoint %"struct.std::__1::pair.1046"** %444 to i64
  %482 = sub i64 %441, %481
  %483 = ashr exact i64 %482, 3
  %484 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %477, i64 %483
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %561, label %486

486:                                              ; preds = %471
  %487 = add i64 %482, -8
  %488 = lshr i64 %487, 3
  %489 = add nuw nsw i64 %488, 1
  %490 = and i64 %489, 7
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %507, label %492

492:                                              ; preds = %486, %492
  %493 = phi %"struct.std::__1::pair.1046"** [ %500, %492 ], [ %477, %486 ]
  %494 = phi i64 [ %501, %492 ], [ %478, %486 ]
  %495 = phi %"struct.std::__1::pair.1046"** [ %502, %492 ], [ %444, %486 ]
  %496 = phi i64 [ %503, %492 ], [ %490, %486 ]
  %497 = bitcast %"struct.std::__1::pair.1046"** %495 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = inttoptr i64 %494 to i64*
  store i64 %498, i64* %499, align 8
  %500 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %493, i64 1
  %501 = ptrtoint %"struct.std::__1::pair.1046"** %500 to i64
  %502 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %495, i64 1
  %503 = add i64 %496, -1
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %492, !llvm.loop !154

505:                                              ; preds = %492
  %506 = ptrtoint %"struct.std::__1::pair.1046"** %500 to i64
  br label %507

507:                                              ; preds = %486, %505
  %508 = phi %"struct.std::__1::pair.1046"** [ %477, %486 ], [ %500, %505 ]
  %509 = phi i64 [ %478, %486 ], [ %506, %505 ]
  %510 = phi %"struct.std::__1::pair.1046"** [ %444, %486 ], [ %502, %505 ]
  %511 = icmp ult i64 %487, 56
  br i1 %511, label %558, label %512

512:                                              ; preds = %507, %512
  %513 = phi %"struct.std::__1::pair.1046"** [ %554, %512 ], [ %508, %507 ]
  %514 = phi i64 [ %555, %512 ], [ %509, %507 ]
  %515 = phi %"struct.std::__1::pair.1046"** [ %556, %512 ], [ %510, %507 ]
  %516 = bitcast %"struct.std::__1::pair.1046"** %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = inttoptr i64 %514 to i64*
  store i64 %517, i64* %518, align 8
  %519 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %513, i64 1
  %520 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %515, i64 1
  %521 = bitcast %"struct.std::__1::pair.1046"** %520 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = bitcast %"struct.std::__1::pair.1046"** %519 to i64*
  store i64 %522, i64* %523, align 8
  %524 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %513, i64 2
  %525 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %515, i64 2
  %526 = bitcast %"struct.std::__1::pair.1046"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"struct.std::__1::pair.1046"** %524 to i64*
  store i64 %527, i64* %528, align 8
  %529 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %513, i64 3
  %530 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %515, i64 3
  %531 = bitcast %"struct.std::__1::pair.1046"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"struct.std::__1::pair.1046"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %513, i64 4
  %535 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %515, i64 4
  %536 = bitcast %"struct.std::__1::pair.1046"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"struct.std::__1::pair.1046"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %513, i64 5
  %540 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %515, i64 5
  %541 = bitcast %"struct.std::__1::pair.1046"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"struct.std::__1::pair.1046"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %513, i64 6
  %545 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %515, i64 6
  %546 = bitcast %"struct.std::__1::pair.1046"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"struct.std::__1::pair.1046"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %513, i64 7
  %550 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %515, i64 7
  %551 = bitcast %"struct.std::__1::pair.1046"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"struct.std::__1::pair.1046"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %513, i64 8
  %555 = ptrtoint %"struct.std::__1::pair.1046"** %554 to i64
  %556 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %515, i64 8
  %557 = icmp eq %"struct.std::__1::pair.1046"** %484, %554
  br i1 %557, label %558, label %512

558:                                              ; preds = %512, %507
  %559 = ptrtoint %"struct.std::__1::pair.1046"** %484 to i64
  %560 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %394, align 16
  br label %561

561:                                              ; preds = %558, %471
  %562 = phi %"struct.std::__1::pair.1046"** [ %560, %558 ], [ %445, %471 ]
  %563 = phi i64 [ %559, %558 ], [ %478, %471 ]
  store i64 %476, i64* %420, align 16
  store i64 %478, i64* %421, align 8
  store i64 %563, i64* %422, align 16
  store i64 %480, i64* %419, align 8
  %564 = icmp eq %"struct.std::__1::pair.1046"** %562, null
  %565 = inttoptr i64 %563 to i64*
  br i1 %564, label %568, label %566

566:                                              ; preds = %561
  %567 = bitcast %"struct.std::__1::pair.1046"** %562 to i8*
  tail call void @_ZdlPv(i8* %567) #12
  br label %568

568:                                              ; preds = %434, %461, %561, %566
  %569 = phi i64* [ %565, %566 ], [ %565, %561 ], [ %463, %461 ], [ %442, %434 ]
  store i64 %439, i64* %569, align 8
  %570 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %396, align 16
  %571 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %570, i64 1
  store %"struct.std::__1::pair.1046"** %571, %"struct.std::__1::pair.1046"*** %396, align 16
  %572 = add i64 %437, -1
  %573 = icmp eq i64 %572, 0
  br i1 %573, label %423, label %574

574:                                              ; preds = %568
  %575 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %397, align 8
  br label %434

576:                                              ; preds = %427, %709
  %577 = phi %"struct.std::__1::pair.1046"** [ %571, %427 ], [ %713, %709 ]
  %578 = phi i64* [ %433, %427 ], [ %718, %709 ]
  %579 = phi i64 [ %23, %427 ], [ %716, %709 ]
  %580 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %397, align 8
  %581 = icmp eq %"struct.std::__1::pair.1046"** %577, %580
  %582 = ptrtoint %"struct.std::__1::pair.1046"** %580 to i64
  %583 = bitcast %"struct.std::__1::pair.1046"** %577 to i64*
  br i1 %581, label %584, label %709

584:                                              ; preds = %576
  %585 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %395, align 8
  %586 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %394, align 16
  %587 = icmp ugt %"struct.std::__1::pair.1046"** %585, %586
  %588 = ptrtoint %"struct.std::__1::pair.1046"** %586 to i64
  br i1 %587, label %589, label %605

589:                                              ; preds = %584
  %590 = ptrtoint %"struct.std::__1::pair.1046"** %585 to i64
  %591 = sub i64 %590, %588
  %592 = ashr exact i64 %591, 3
  %593 = add nsw i64 %592, 1
  %594 = sdiv i64 %593, -2
  %595 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %585, i64 %594
  %596 = sub i64 %582, %590
  %597 = ashr exact i64 %596, 3
  %598 = icmp eq i64 %596, 0
  br i1 %598, label %602, label %599

599:                                              ; preds = %589
  %600 = bitcast %"struct.std::__1::pair.1046"** %595 to i8*
  %601 = bitcast %"struct.std::__1::pair.1046"** %585 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %600, i8* align 8 %601, i64 %596, i1 false) #13
  br label %602

602:                                              ; preds = %599, %589
  %603 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %595, i64 %597
  store %"struct.std::__1::pair.1046"** %603, %"struct.std::__1::pair.1046"*** %396, align 16
  store %"struct.std::__1::pair.1046"** %595, %"struct.std::__1::pair.1046"*** %395, align 8
  %604 = bitcast %"struct.std::__1::pair.1046"** %603 to i64*
  br label %709

605:                                              ; preds = %584
  %606 = sub i64 %582, %588
  %607 = ashr exact i64 %606, 2
  %608 = icmp eq i64 %606, 0
  %609 = select i1 %608, i64 1, i64 %607
  %610 = icmp ugt i64 %609, 2305843009213693951
  br i1 %610, label %611, label %612

611:                                              ; preds = %605
  tail call void @abort() #14
  unreachable

612:                                              ; preds = %605
  %613 = lshr i64 %609, 2
  %614 = shl i64 %609, 3
  %615 = tail call i8* @_Znwm(i64 %614) #12
  %616 = bitcast i8* %615 to %"struct.std::__1::pair.1046"**
  %617 = ptrtoint i8* %615 to i64
  %618 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %616, i64 %613
  %619 = ptrtoint %"struct.std::__1::pair.1046"** %618 to i64
  %620 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %616, i64 %609
  %621 = ptrtoint %"struct.std::__1::pair.1046"** %620 to i64
  %622 = ptrtoint %"struct.std::__1::pair.1046"** %585 to i64
  %623 = sub i64 %582, %622
  %624 = ashr exact i64 %623, 3
  %625 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %618, i64 %624
  %626 = icmp eq i64 %623, 0
  br i1 %626, label %702, label %627

627:                                              ; preds = %612
  %628 = add i64 %623, -8
  %629 = lshr i64 %628, 3
  %630 = add nuw nsw i64 %629, 1
  %631 = and i64 %630, 7
  %632 = icmp eq i64 %631, 0
  br i1 %632, label %648, label %633

633:                                              ; preds = %627, %633
  %634 = phi %"struct.std::__1::pair.1046"** [ %641, %633 ], [ %618, %627 ]
  %635 = phi i64 [ %642, %633 ], [ %619, %627 ]
  %636 = phi %"struct.std::__1::pair.1046"** [ %643, %633 ], [ %585, %627 ]
  %637 = phi i64 [ %644, %633 ], [ %631, %627 ]
  %638 = bitcast %"struct.std::__1::pair.1046"** %636 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = inttoptr i64 %635 to i64*
  store i64 %639, i64* %640, align 8
  %641 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %634, i64 1
  %642 = ptrtoint %"struct.std::__1::pair.1046"** %641 to i64
  %643 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %636, i64 1
  %644 = add i64 %637, -1
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %646, label %633, !llvm.loop !155

646:                                              ; preds = %633
  %647 = ptrtoint %"struct.std::__1::pair.1046"** %641 to i64
  br label %648

648:                                              ; preds = %627, %646
  %649 = phi %"struct.std::__1::pair.1046"** [ %618, %627 ], [ %641, %646 ]
  %650 = phi i64 [ %619, %627 ], [ %647, %646 ]
  %651 = phi %"struct.std::__1::pair.1046"** [ %585, %627 ], [ %643, %646 ]
  %652 = icmp ult i64 %628, 56
  br i1 %652, label %699, label %653

653:                                              ; preds = %648, %653
  %654 = phi %"struct.std::__1::pair.1046"** [ %695, %653 ], [ %649, %648 ]
  %655 = phi i64 [ %696, %653 ], [ %650, %648 ]
  %656 = phi %"struct.std::__1::pair.1046"** [ %697, %653 ], [ %651, %648 ]
  %657 = bitcast %"struct.std::__1::pair.1046"** %656 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = inttoptr i64 %655 to i64*
  store i64 %658, i64* %659, align 8
  %660 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %654, i64 1
  %661 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %656, i64 1
  %662 = bitcast %"struct.std::__1::pair.1046"** %661 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = bitcast %"struct.std::__1::pair.1046"** %660 to i64*
  store i64 %663, i64* %664, align 8
  %665 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %654, i64 2
  %666 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %656, i64 2
  %667 = bitcast %"struct.std::__1::pair.1046"** %666 to i64*
  %668 = load i64, i64* %667, align 8
  %669 = bitcast %"struct.std::__1::pair.1046"** %665 to i64*
  store i64 %668, i64* %669, align 8
  %670 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %654, i64 3
  %671 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %656, i64 3
  %672 = bitcast %"struct.std::__1::pair.1046"** %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = bitcast %"struct.std::__1::pair.1046"** %670 to i64*
  store i64 %673, i64* %674, align 8
  %675 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %654, i64 4
  %676 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %656, i64 4
  %677 = bitcast %"struct.std::__1::pair.1046"** %676 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = bitcast %"struct.std::__1::pair.1046"** %675 to i64*
  store i64 %678, i64* %679, align 8
  %680 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %654, i64 5
  %681 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %656, i64 5
  %682 = bitcast %"struct.std::__1::pair.1046"** %681 to i64*
  %683 = load i64, i64* %682, align 8
  %684 = bitcast %"struct.std::__1::pair.1046"** %680 to i64*
  store i64 %683, i64* %684, align 8
  %685 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %654, i64 6
  %686 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %656, i64 6
  %687 = bitcast %"struct.std::__1::pair.1046"** %686 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = bitcast %"struct.std::__1::pair.1046"** %685 to i64*
  store i64 %688, i64* %689, align 8
  %690 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %654, i64 7
  %691 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %656, i64 7
  %692 = bitcast %"struct.std::__1::pair.1046"** %691 to i64*
  %693 = load i64, i64* %692, align 8
  %694 = bitcast %"struct.std::__1::pair.1046"** %690 to i64*
  store i64 %693, i64* %694, align 8
  %695 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %654, i64 8
  %696 = ptrtoint %"struct.std::__1::pair.1046"** %695 to i64
  %697 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %656, i64 8
  %698 = icmp eq %"struct.std::__1::pair.1046"** %625, %695
  br i1 %698, label %699, label %653

699:                                              ; preds = %653, %648
  %700 = ptrtoint %"struct.std::__1::pair.1046"** %625 to i64
  %701 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %394, align 16
  br label %702

702:                                              ; preds = %699, %612
  %703 = phi %"struct.std::__1::pair.1046"** [ %701, %699 ], [ %586, %612 ]
  %704 = phi i64 [ %700, %699 ], [ %619, %612 ]
  store i64 %617, i64* %430, align 16
  store i64 %619, i64* %431, align 8
  store i64 %704, i64* %432, align 16
  store i64 %621, i64* %429, align 8
  %705 = icmp eq %"struct.std::__1::pair.1046"** %703, null
  %706 = inttoptr i64 %704 to i64*
  br i1 %705, label %709, label %707

707:                                              ; preds = %702
  %708 = bitcast %"struct.std::__1::pair.1046"** %703 to i8*
  tail call void @_ZdlPv(i8* %708) #12
  br label %709

709:                                              ; preds = %576, %602, %702, %707
  %710 = phi i64* [ %706, %707 ], [ %706, %702 ], [ %604, %602 ], [ %583, %576 ]
  %711 = load i64, i64* %578, align 8
  store i64 %711, i64* %710, align 8
  %712 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %396, align 16
  %713 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %712, i64 1
  store %"struct.std::__1::pair.1046"** %713, %"struct.std::__1::pair.1046"*** %396, align 16
  %714 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %9, align 8
  %715 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %714, i64 1
  store %"struct.std::__1::pair.1046"** %715, %"struct.std::__1::pair.1046"*** %9, align 8
  %716 = add i64 %579, -1
  %717 = icmp eq i64 %716, 0
  %718 = bitcast %"struct.std::__1::pair.1046"** %715 to i64*
  br i1 %717, label %719, label %576

719:                                              ; preds = %709, %425
  %720 = phi %"struct.std::__1::pair.1046"** [ %571, %425 ], [ %713, %709 ]
  %721 = phi %"struct.std::__1::pair.1046"** [ %426, %425 ], [ %715, %709 ]
  %722 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %7, align 8
  %723 = icmp eq %"struct.std::__1::pair.1046"** %722, %721
  br i1 %723, label %724, label %763

724:                                              ; preds = %719
  %725 = ptrtoint %"struct.std::__1::pair.1046"** %722 to i64
  %726 = ptrtoint %"struct.std::__1::pair.1046"** %720 to i64
  %727 = bitcast %"struct.std::__1::pair.1046"*** %396 to i64*
  br label %732

728:                                              ; preds = %763
  %729 = load i64, i64* %195, align 8
  %730 = bitcast %"struct.std::__1::pair.1046"*** %396 to i64*
  %731 = load i64, i64* %730, align 16
  br label %732

732:                                              ; preds = %724, %728
  %733 = phi i64* [ %727, %724 ], [ %730, %728 ]
  %734 = phi i64 [ %726, %724 ], [ %731, %728 ]
  %735 = phi i64 [ %725, %724 ], [ %729, %728 ]
  %736 = phi %"struct.std::__1::pair.1046"** [ %721, %724 ], [ %766, %728 ]
  %737 = ptrtoint %"struct.std::__1::pair.1046"** %736 to i64
  %738 = load i64, i64* %191, align 8
  %739 = bitcast %"struct.std::__1::__split_buffer.1182"* %5 to i64*
  %740 = bitcast %"struct.std::__1::pair.1046"*** %395 to i64*
  %741 = bitcast %"struct.std::__1::__split_buffer.1182"* %5 to <2 x i64>*
  %742 = load <2 x i64>, <2 x i64>* %741, align 16
  store i64 %738, i64* %739, align 16
  %743 = bitcast %"class.std::__1::deque.1043"* %0 to <2 x i64>*
  store <2 x i64> %742, <2 x i64>* %743, align 8
  store i64 %737, i64* %740, align 8
  store i64 %734, i64* %195, align 8
  store i64 %735, i64* %733, align 8
  %744 = load i64, i64* %189, align 8
  %745 = bitcast %"struct.std::__1::pair.1046"*** %397 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %189, align 8
  store i64 %744, i64* %745, align 8
  %747 = load i64, i64* %19, align 8
  %748 = sub i64 %747, %392
  store i64 %748, i64* %19, align 8
  %749 = inttoptr i64 %735 to %"struct.std::__1::pair.1046"**
  %750 = icmp eq %"struct.std::__1::pair.1046"** %736, %749
  br i1 %750, label %758, label %751

751:                                              ; preds = %732
  %752 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %749, i64 -1
  %753 = ptrtoint %"struct.std::__1::pair.1046"** %752 to i64
  %754 = sub i64 %753, %737
  %755 = lshr i64 %754, 3
  %756 = xor i64 %755, -1
  %757 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %749, i64 %756
  store %"struct.std::__1::pair.1046"** %757, %"struct.std::__1::pair.1046"*** %396, align 16
  br label %758

758:                                              ; preds = %751, %732
  %759 = icmp eq i64 %738, 0
  br i1 %759, label %762, label %760

760:                                              ; preds = %758
  %761 = inttoptr i64 %738 to i8*
  call void @_ZdlPv(i8* %761) #12
  br label %762

762:                                              ; preds = %758, %760
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #13
  br label %768

763:                                              ; preds = %719, %763
  %764 = phi %"struct.std::__1::pair.1046"** [ %765, %763 ], [ %722, %719 ]
  %765 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %764, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1182"* nonnull %5, %"struct.std::__1::pair.1046"** dereferenceable(8) %765)
  %766 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %9, align 8
  %767 = icmp eq %"struct.std::__1::pair.1046"** %765, %766
  br i1 %767, label %728, label %763

768:                                              ; preds = %385, %178, %236, %27, %762
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_17DominatorTreeNodeEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator"*) local_unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 0
  %3 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2, align 8
  %4 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"* %3, null
  br i1 %4, label %122, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %"struct.spvtools::opt::DominatorTreeNode"* null, %"struct.spvtools::opt::DominatorTreeNode"** %2, align 8
  br label %122

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %7, -1
  %14 = add i64 %12, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %15, align 8
  %17 = lshr i64 %14, 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %16, i64 %17
  %19 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %18, align 8
  %20 = and i64 %14, 255
  %21 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %19, i64 %20, i32 0
  %22 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %21, align 8
  %23 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %22, i64 0, i32 2, i32 0, i32 1
  %24 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %19, i64 %20, i32 1, i32 0
  %26 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %25, align 8
  %27 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %26, %24
  br i1 %27, label %28, label %51

28:                                               ; preds = %10
  %29 = ptrtoint %"struct.std::__1::pair.1046"** %16 to i64
  %30 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"* %22 to i64
  %31 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %0 to i64*
  store i64 %30, i64* %31, align 8
  store i64 %13, i64* %6, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %33 = bitcast %"struct.std::__1::pair.1046"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %29
  %36 = icmp eq i64 %35, 0
  %37 = shl i64 %35, 5
  %38 = add i64 %37, -1
  %39 = select i1 %36, i64 0, i64 %38
  %40 = sub i64 1, %7
  %41 = sub i64 %40, %12
  %42 = add i64 %41, %39
  %43 = icmp ult i64 %42, 512
  br i1 %43, label %122, label %44

44:                                               ; preds = %28
  %45 = inttoptr i64 %34 to %"struct.std::__1::pair.1046"**
  %46 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %45, i64 -1
  %47 = bitcast %"struct.std::__1::pair.1046"** %46 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #12
  %49 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %32, align 8
  %50 = getelementptr %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %49, i64 -1
  store %"struct.std::__1::pair.1046"** %50, %"struct.std::__1::pair.1046"*** %32, align 8
  br label %122

51:                                               ; preds = %10
  %52 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %26 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator"* %0 to i64*
  store i64 %53, i64* %54, align 8
  %55 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %25, align 8
  %56 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %55, i64 1
  store %"struct.spvtools::opt::DominatorTreeNode"** %56, %"struct.spvtools::opt::DominatorTreeNode"*** %25, align 8
  %57 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2, align 8
  %58 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %57, i64 0, i32 2, i32 0, i32 0
  %59 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %58, align 8
  %60 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %57, i64 0, i32 2, i32 0, i32 1
  %61 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %60, align 8
  %62 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %59, %61
  br i1 %62, label %122, label %63

63:                                               ; preds = %51
  %64 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %65 = bitcast %"struct.std::__1::pair.1046"*** %64 to i64*
  %66 = bitcast %"struct.std::__1::pair.1046"*** %15 to i64*
  %67 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator", %"class.spvtools::opt::PostOrderTreeDFIterator"* %0, i64 0, i32 1, i32 0
  %68 = load i64, i64* %6, align 8
  br label %69

69:                                               ; preds = %104, %63
  %70 = phi i64 [ %68, %63 ], [ %110, %104 ]
  %71 = phi %"struct.spvtools::opt::DominatorTreeNode"** [ %59, %63 ], [ %118, %104 ]
  %72 = phi %"struct.spvtools::opt::DominatorTreeNode"* [ %57, %63 ], [ %116, %104 ]
  %73 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %71, i64 1
  %74 = load i64, i64* %65, align 8
  %75 = load i64, i64* %66, align 8
  %76 = sub i64 %74, %75
  %77 = icmp eq i64 %76, 0
  %78 = shl i64 %76, 5
  %79 = add i64 %78, -1
  %80 = select i1 %77, i64 0, i64 %79
  %81 = load i64, i64* %11, align 8
  %82 = add i64 %81, %70
  %83 = icmp eq i64 %80, %82
  %84 = inttoptr i64 %75 to %"struct.std::__1::pair.1046"**
  %85 = inttoptr i64 %74 to %"struct.std::__1::pair.1046"**
  br i1 %83, label %86, label %92

86:                                               ; preds = %69
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt17DominatorTreeNodeENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque.1043"* %67) #13
  %87 = load i64, i64* %6, align 8
  %88 = load i64, i64* %11, align 8
  %89 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %15, align 8
  %90 = load %"struct.std::__1::pair.1046"**, %"struct.std::__1::pair.1046"*** %64, align 8
  %91 = add i64 %88, %87
  br label %92

92:                                               ; preds = %86, %69
  %93 = phi i64 [ %91, %86 ], [ %82, %69 ]
  %94 = phi %"struct.std::__1::pair.1046"** [ %90, %86 ], [ %85, %69 ]
  %95 = phi %"struct.std::__1::pair.1046"** [ %89, %86 ], [ %84, %69 ]
  %96 = icmp eq %"struct.std::__1::pair.1046"** %94, %95
  br i1 %96, label %104, label %97

97:                                               ; preds = %92
  %98 = lshr i64 %93, 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %95, i64 %98
  %100 = load %"struct.std::__1::pair.1046"*, %"struct.std::__1::pair.1046"** %99, align 8
  %101 = and i64 %93, 255
  %102 = getelementptr inbounds %"struct.std::__1::pair.1046", %"struct.std::__1::pair.1046"* %100, i64 %101
  %103 = bitcast %"struct.std::__1::pair.1046"* %102 to i8*
  br label %104

104:                                              ; preds = %97, %92
  %105 = phi i8* [ %103, %97 ], [ null, %92 ]
  %106 = bitcast i8* %105 to %"struct.spvtools::opt::DominatorTreeNode"**
  store %"struct.spvtools::opt::DominatorTreeNode"* %72, %"struct.spvtools::opt::DominatorTreeNode"** %106, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 8
  %108 = bitcast i8* %107 to %"struct.spvtools::opt::DominatorTreeNode"***
  store %"struct.spvtools::opt::DominatorTreeNode"** %73, %"struct.spvtools::opt::DominatorTreeNode"*** %108, align 8
  %109 = load i64, i64* %6, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %6, align 8
  %111 = load %"struct.spvtools::opt::DominatorTreeNode"*, %"struct.spvtools::opt::DominatorTreeNode"** %2, align 8
  %112 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %111, i64 0, i32 2, i32 0, i32 0
  %113 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %112 to i64**
  %114 = load i64*, i64** %113, align 8
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %54, align 8
  %116 = inttoptr i64 %115 to %"struct.spvtools::opt::DominatorTreeNode"*
  %117 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %116, i64 0, i32 2, i32 0, i32 0
  %118 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %117, align 8
  %119 = getelementptr inbounds %"struct.spvtools::opt::DominatorTreeNode", %"struct.spvtools::opt::DominatorTreeNode"* %116, i64 0, i32 2, i32 0, i32 1
  %120 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %119, align 8
  %121 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %118, %120
  br i1 %121, label %122, label %69

122:                                              ; preds = %104, %51, %44, %28, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1009"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJNS_4pairIjS5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1005"*, i32* dereferenceable(4), %"struct.std::__1::pair.1060"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.1009"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1009"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.1009"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %146, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 32) #12, !noalias !156
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = getelementptr inbounds %"struct.std::__1::pair.1060", %"struct.std::__1::pair.1060"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4, !noalias !156
  store i32 %59, i32* %57, align 8, !noalias !156
  %60 = getelementptr inbounds i8, i8* %55, i64 24
  %61 = getelementptr inbounds %"struct.std::__1::pair.1060", %"struct.std::__1::pair.1060"* %2, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Loop"** %61 to i64*
  %63 = load i64, i64* %62, align 8, !noalias !156
  %64 = bitcast i8* %60 to i64*
  store i64 %63, i64* %64, align 8, !noalias !156
  %65 = getelementptr inbounds i8, i8* %55, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %5, i64* %66, align 8, !noalias !156
  %67 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.1009"**
  store %"struct.std::__1::__hash_node_base.1009"* null, %"struct.std::__1::__hash_node_base.1009"** %67, align 8, !noalias !156
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %7 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %8, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %53
  %79 = shl i64 %7, 1
  %80 = icmp ult i64 %7, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %7) #13, !range !3
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #13
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1005"* %0, i64 %90)
  %91 = load i64, i64* %6, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #13, !range !3
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %5
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %5
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %5, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %53
  %102 = phi i64 [ %7, %53 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %54, %53 ], [ %96, %94 ], [ %5, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.1005", %"class.std::__1::__hash_table.1005"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.1009"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %55 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.1009"* %110 to i8**
  store i8* %55, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.1009"* %110, %"struct.std::__1::__hash_node_base.1009"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1009"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009", %"struct.std::__1::__hash_node_base.1009"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.1009"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #13, !range !3
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.1009"**, %"struct.std::__1::__hash_node_base.1009"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1009"*, %"struct.std::__1::__hash_node_base.1009"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.1009"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.1009"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %55 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.1009"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %55, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.1009"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %48, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %48 ]
  %148 = phi %"struct.std::__1::__hash_node_base.1009"* [ %143, %142 ], [ %31, %48 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.1009"*, i8 } undef, %"struct.std::__1::__hash_node_base.1009"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.1009"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.1009"*, i8 } %150
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE14MoveToNextNodeEv(%"class.spvtools::opt::PostOrderTreeDFIterator.1070"*) local_unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %0, i64 0, i32 0
  %3 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %4 = icmp eq %"class.spvtools::opt::Loop"* %3, null
  br i1 %4, label %122, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store %"class.spvtools::opt::Loop"* null, %"class.spvtools::opt::Loop"** %2, align 8
  br label %122

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %7, -1
  %14 = add i64 %12, %13
  %15 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %16 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %15, align 8
  %17 = lshr i64 %14, 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %16, i64 %17
  %19 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %18, align 8
  %20 = and i64 %14, 255
  %21 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %19, i64 %20, i32 0
  %22 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %21, align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %22, i64 0, i32 7, i32 0, i32 1
  %24 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %19, i64 %20, i32 1, i32 0
  %26 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %25, align 8
  %27 = icmp eq %"class.spvtools::opt::Loop"** %26, %24
  br i1 %27, label %28, label %51

28:                                               ; preds = %10
  %29 = ptrtoint %"struct.std::__1::pair.1075"** %16 to i64
  %30 = ptrtoint %"class.spvtools::opt::Loop"* %22 to i64
  %31 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %0 to i64*
  store i64 %30, i64* %31, align 8
  store i64 %13, i64* %6, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %33 = bitcast %"struct.std::__1::pair.1075"*** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 %34, %29
  %36 = icmp eq i64 %35, 0
  %37 = shl i64 %35, 5
  %38 = add i64 %37, -1
  %39 = select i1 %36, i64 0, i64 %38
  %40 = sub i64 1, %7
  %41 = sub i64 %40, %12
  %42 = add i64 %41, %39
  %43 = icmp ult i64 %42, 512
  br i1 %43, label %122, label %44

44:                                               ; preds = %28
  %45 = inttoptr i64 %34 to %"struct.std::__1::pair.1075"**
  %46 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %45, i64 -1
  %47 = bitcast %"struct.std::__1::pair.1075"** %46 to i8**
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #12
  %49 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %32, align 8
  %50 = getelementptr %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %49, i64 -1
  store %"struct.std::__1::pair.1075"** %50, %"struct.std::__1::pair.1075"*** %32, align 8
  br label %122

51:                                               ; preds = %10
  %52 = bitcast %"class.spvtools::opt::Loop"** %26 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %0 to i64*
  store i64 %53, i64* %54, align 8
  %55 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %25, align 8
  %56 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %55, i64 1
  store %"class.spvtools::opt::Loop"** %56, %"class.spvtools::opt::Loop"*** %25, align 8
  %57 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %57, i64 0, i32 7, i32 0, i32 0
  %59 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %57, i64 0, i32 7, i32 0, i32 1
  %61 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %60, align 8
  %62 = icmp eq %"class.spvtools::opt::Loop"** %59, %61
  br i1 %62, label %122, label %63

63:                                               ; preds = %51
  %64 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %65 = bitcast %"struct.std::__1::pair.1075"*** %64 to i64*
  %66 = bitcast %"struct.std::__1::pair.1075"*** %15 to i64*
  %67 = getelementptr inbounds %"class.spvtools::opt::PostOrderTreeDFIterator.1070", %"class.spvtools::opt::PostOrderTreeDFIterator.1070"* %0, i64 0, i32 1, i32 0
  %68 = load i64, i64* %6, align 8
  br label %69

69:                                               ; preds = %104, %63
  %70 = phi i64 [ %68, %63 ], [ %110, %104 ]
  %71 = phi %"class.spvtools::opt::Loop"** [ %59, %63 ], [ %118, %104 ]
  %72 = phi %"class.spvtools::opt::Loop"* [ %57, %63 ], [ %116, %104 ]
  %73 = getelementptr inbounds %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %71, i64 1
  %74 = load i64, i64* %65, align 8
  %75 = load i64, i64* %66, align 8
  %76 = sub i64 %74, %75
  %77 = icmp eq i64 %76, 0
  %78 = shl i64 %76, 5
  %79 = add i64 %78, -1
  %80 = select i1 %77, i64 0, i64 %79
  %81 = load i64, i64* %11, align 8
  %82 = add i64 %81, %70
  %83 = icmp eq i64 %80, %82
  %84 = inttoptr i64 %75 to %"struct.std::__1::pair.1075"**
  %85 = inttoptr i64 %74 to %"struct.std::__1::pair.1075"**
  br i1 %83, label %86, label %92

86:                                               ; preds = %69
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEv(%"class.std::__1::deque.1072"* %67) #13
  %87 = load i64, i64* %6, align 8
  %88 = load i64, i64* %11, align 8
  %89 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %15, align 8
  %90 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %64, align 8
  %91 = add i64 %88, %87
  br label %92

92:                                               ; preds = %86, %69
  %93 = phi i64 [ %91, %86 ], [ %82, %69 ]
  %94 = phi %"struct.std::__1::pair.1075"** [ %90, %86 ], [ %85, %69 ]
  %95 = phi %"struct.std::__1::pair.1075"** [ %89, %86 ], [ %84, %69 ]
  %96 = icmp eq %"struct.std::__1::pair.1075"** %94, %95
  br i1 %96, label %104, label %97

97:                                               ; preds = %92
  %98 = lshr i64 %93, 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %95, i64 %98
  %100 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %99, align 8
  %101 = and i64 %93, 255
  %102 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %100, i64 %101
  %103 = bitcast %"struct.std::__1::pair.1075"* %102 to i8*
  br label %104

104:                                              ; preds = %97, %92
  %105 = phi i8* [ %103, %97 ], [ null, %92 ]
  %106 = bitcast i8* %105 to %"class.spvtools::opt::Loop"**
  store %"class.spvtools::opt::Loop"* %72, %"class.spvtools::opt::Loop"** %106, align 8
  %107 = getelementptr inbounds i8, i8* %105, i64 8
  %108 = bitcast i8* %107 to %"class.spvtools::opt::Loop"***
  store %"class.spvtools::opt::Loop"** %73, %"class.spvtools::opt::Loop"*** %108, align 8
  %109 = load i64, i64* %6, align 8
  %110 = add i64 %109, 1
  store i64 %110, i64* %6, align 8
  %111 = load %"class.spvtools::opt::Loop"*, %"class.spvtools::opt::Loop"** %2, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %111, i64 0, i32 7, i32 0, i32 0
  %113 = bitcast %"class.spvtools::opt::Loop"*** %112 to i64**
  %114 = load i64*, i64** %113, align 8
  %115 = load i64, i64* %114, align 8
  store i64 %115, i64* %54, align 8
  %116 = inttoptr i64 %115 to %"class.spvtools::opt::Loop"*
  %117 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 0
  %118 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %117, align 8
  %119 = getelementptr inbounds %"class.spvtools::opt::Loop", %"class.spvtools::opt::Loop"* %116, i64 0, i32 7, i32 0, i32 1
  %120 = load %"class.spvtools::opt::Loop"**, %"class.spvtools::opt::Loop"*** %119, align 8
  %121 = icmp eq %"class.spvtools::opt::Loop"** %118, %120
  br i1 %121, label %122, label %69

122:                                              ; preds = %104, %51, %44, %28, %1, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE8__appendINS_16__deque_iteratorIS9_PKS9_RSF_PKSG_lLl0EEEEEvT_SL_PNS_9enable_ifIXsr27__is_cpp17_forward_iteratorISL_EE5valueEvE4typeE(%"class.std::__1::deque.1072"*, %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %7 = ptrtoint %"struct.std::__1::pair.1075"* %2 to i64
  %8 = icmp eq %"struct.std::__1::pair.1075"* %4, %2
  br i1 %8, label %25, label %9

9:                                                ; preds = %6
  %10 = ptrtoint %"struct.std::__1::pair.1075"* %4 to i64
  %11 = ptrtoint %"struct.std::__1::pair.1075"** %3 to i64
  %12 = ptrtoint %"struct.std::__1::pair.1075"** %1 to i64
  %13 = sub i64 %11, %12
  %14 = shl i64 %13, 5
  %15 = bitcast %"struct.std::__1::pair.1075"** %3 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %10, %16
  %18 = ashr exact i64 %17, 4
  %19 = add nsw i64 %18, %14
  %20 = bitcast %"struct.std::__1::pair.1075"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %7, %21
  %23 = ashr exact i64 %22, 4
  %24 = sub i64 %19, %23
  br label %25

25:                                               ; preds = %6, %9
  %26 = phi i64 [ %24, %9 ], [ 0, %6 ]
  %27 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast %"struct.std::__1::pair.1075"*** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast %"struct.std::__1::pair.1075"*** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %29, %32
  %34 = icmp eq i64 %33, 0
  %35 = shl i64 %33, 5
  %36 = add i64 %35, -1
  %37 = select i1 %34, i64 0, i64 %36
  %38 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, %39
  %43 = sub i64 %37, %42
  %44 = icmp ugt i64 %26, %43
  %45 = inttoptr i64 %32 to %"struct.std::__1::pair.1075"**
  %46 = inttoptr i64 %29 to %"struct.std::__1::pair.1075"**
  br i1 %44, label %47, label %54

47:                                               ; preds = %25
  %48 = sub i64 %26, %43
  tail call void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm(%"class.std::__1::deque.1072"* %0, i64 %48)
  %49 = load i64, i64* %40, align 8
  %50 = load i64, i64* %38, align 8
  %51 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %30, align 8
  %52 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %27, align 8
  %53 = add i64 %50, %49
  br label %54

54:                                               ; preds = %47, %25
  %55 = phi i64 [ %53, %47 ], [ %42, %25 ]
  %56 = phi %"struct.std::__1::pair.1075"** [ %52, %47 ], [ %46, %25 ]
  %57 = phi %"struct.std::__1::pair.1075"** [ %51, %47 ], [ %45, %25 ]
  %58 = phi i64 [ %49, %47 ], [ %41, %25 ]
  %59 = lshr i64 %55, 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %57, i64 %59
  %61 = icmp eq %"struct.std::__1::pair.1075"** %56, %57
  br i1 %61, label %67, label %62

62:                                               ; preds = %54
  %63 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %60, align 8
  %64 = and i64 %55, 255
  %65 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %63, i64 %64
  %66 = ptrtoint %"struct.std::__1::pair.1075"* %65 to i64
  br label %67

67:                                               ; preds = %54, %62
  %68 = phi i64 [ %66, %62 ], [ 0, %54 ]
  %69 = icmp eq i64 %26, 0
  br i1 %69, label %93, label %70

70:                                               ; preds = %67
  %71 = bitcast %"struct.std::__1::pair.1075"** %60 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %68, %72
  %74 = ashr exact i64 %73, 4
  %75 = add nsw i64 %74, %26
  %76 = icmp sgt i64 %75, 0
  br i1 %76, label %77, label %84

77:                                               ; preds = %70
  %78 = lshr i64 %75, 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %60, i64 %78
  %80 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %79, align 8
  %81 = and i64 %75, 255
  %82 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %80, i64 %81
  %83 = ptrtoint %"struct.std::__1::pair.1075"* %82 to i64
  br label %93

84:                                               ; preds = %70
  %85 = sub nsw i64 255, %75
  %86 = sdiv i64 %85, -256
  %87 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %60, i64 %86
  %88 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %87, align 8
  %89 = srem i64 %85, 256
  %90 = sub nsw i64 255, %89
  %91 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %88, i64 %90
  %92 = ptrtoint %"struct.std::__1::pair.1075"* %91 to i64
  br label %93

93:                                               ; preds = %67, %77, %84
  %94 = phi i64 [ %68, %67 ], [ %83, %77 ], [ %92, %84 ]
  %95 = phi %"struct.std::__1::pair.1075"** [ %60, %67 ], [ %79, %77 ], [ %87, %84 ]
  %96 = inttoptr i64 %94 to %"struct.std::__1::pair.1075"*
  %97 = inttoptr i64 %68 to %"struct.std::__1::pair.1075"*
  %98 = icmp eq %"struct.std::__1::pair.1075"* %97, %96
  br i1 %98, label %99, label %100

99:                                               ; preds = %184, %192, %93
  ret void

100:                                              ; preds = %93, %192
  %101 = phi i64 [ %191, %192 ], [ %58, %93 ]
  %102 = phi i64 [ %187, %192 ], [ %7, %93 ]
  %103 = phi %"struct.std::__1::pair.1075"** [ %186, %192 ], [ %1, %93 ]
  %104 = phi i64 [ %195, %192 ], [ %68, %93 ]
  %105 = phi %"struct.std::__1::pair.1075"** [ %193, %192 ], [ %60, %93 ]
  %106 = icmp eq %"struct.std::__1::pair.1075"** %105, %95
  br i1 %106, label %110, label %107

107:                                              ; preds = %100
  %108 = load %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %105, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %108, i64 256
  br label %110

110:                                              ; preds = %100, %107
  %111 = phi %"struct.std::__1::pair.1075"* [ %109, %107 ], [ %96, %100 ]
  %112 = inttoptr i64 %104 to %"struct.std::__1::pair.1075"*
  %113 = icmp eq %"struct.std::__1::pair.1075"* %111, %112
  br i1 %113, label %184, label %114

114:                                              ; preds = %110
  %115 = getelementptr %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %111, i64 -1
  %116 = bitcast %"struct.std::__1::pair.1075"* %115 to i8*
  %117 = sub i64 0, %104
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = ptrtoint i8* %118 to i64
  %120 = and i64 %119, 16
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %138

122:                                              ; preds = %114
  %123 = inttoptr i64 %102 to %"struct.std::__1::pair.1075"*
  %124 = inttoptr i64 %104 to i8*
  %125 = inttoptr i64 %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 16, i1 false) #13
  %126 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %112, i64 1
  %127 = ptrtoint %"struct.std::__1::pair.1075"* %126 to i64
  %128 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %123, i64 1
  %129 = ptrtoint %"struct.std::__1::pair.1075"* %128 to i64
  %130 = bitcast %"struct.std::__1::pair.1075"** %103 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %129, %131
  %133 = icmp eq i64 %132, 4096
  br i1 %133, label %134, label %138

134:                                              ; preds = %122
  %135 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %103, i64 1
  %136 = bitcast %"struct.std::__1::pair.1075"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  br label %138

138:                                              ; preds = %114, %134, %122
  %139 = phi %"struct.std::__1::pair.1075"** [ undef, %114 ], [ %135, %134 ], [ %103, %122 ]
  %140 = phi i64 [ undef, %114 ], [ %137, %134 ], [ %129, %122 ]
  %141 = phi %"struct.std::__1::pair.1075"* [ %112, %114 ], [ %126, %134 ], [ %126, %122 ]
  %142 = phi i64 [ %104, %114 ], [ %127, %134 ], [ %127, %122 ]
  %143 = phi i64 [ %102, %114 ], [ %137, %134 ], [ %129, %122 ]
  %144 = phi %"struct.std::__1::pair.1075"** [ %103, %114 ], [ %135, %134 ], [ %103, %122 ]
  %145 = icmp ult i8* %118, inttoptr (i64 16 to i8*)
  br i1 %145, label %179, label %146

146:                                              ; preds = %138, %202
  %147 = phi %"struct.std::__1::pair.1075"* [ %171, %202 ], [ %141, %138 ]
  %148 = phi i64 [ %172, %202 ], [ %142, %138 ]
  %149 = phi i64 [ %204, %202 ], [ %143, %138 ]
  %150 = phi %"struct.std::__1::pair.1075"** [ %203, %202 ], [ %144, %138 ]
  %151 = inttoptr i64 %149 to %"struct.std::__1::pair.1075"*
  %152 = inttoptr i64 %148 to i8*
  %153 = inttoptr i64 %149 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 16, i1 false) #13
  %154 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %147, i64 1
  %155 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %151, i64 1
  %156 = ptrtoint %"struct.std::__1::pair.1075"* %155 to i64
  %157 = bitcast %"struct.std::__1::pair.1075"** %150 to i64*
  %158 = load i64, i64* %157, align 8
  %159 = sub i64 %156, %158
  %160 = icmp eq i64 %159, 4096
  br i1 %160, label %161, label %165

161:                                              ; preds = %146
  %162 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %150, i64 1
  %163 = bitcast %"struct.std::__1::pair.1075"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  br label %165

165:                                              ; preds = %146, %161
  %166 = phi %"struct.std::__1::pair.1075"** [ %162, %161 ], [ %150, %146 ]
  %167 = phi i64 [ %164, %161 ], [ %156, %146 ]
  %168 = inttoptr i64 %167 to %"struct.std::__1::pair.1075"*
  %169 = bitcast %"struct.std::__1::pair.1075"* %154 to i8*
  %170 = inttoptr i64 %167 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 16, i1 false) #13
  %171 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %147, i64 2
  %172 = ptrtoint %"struct.std::__1::pair.1075"* %171 to i64
  %173 = getelementptr inbounds %"struct.std::__1::pair.1075", %"struct.std::__1::pair.1075"* %168, i64 1
  %174 = ptrtoint %"struct.std::__1::pair.1075"* %173 to i64
  %175 = bitcast %"struct.std::__1::pair.1075"** %166 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 %174, %176
  %178 = icmp eq i64 %177, 4096
  br i1 %178, label %198, label %202

179:                                              ; preds = %202, %138
  %180 = phi %"struct.std::__1::pair.1075"** [ %139, %138 ], [ %203, %202 ]
  %181 = phi i64 [ %140, %138 ], [ %204, %202 ]
  %182 = ptrtoint %"struct.std::__1::pair.1075"* %111 to i64
  %183 = load i64, i64* %40, align 8
  br label %184

184:                                              ; preds = %179, %110
  %185 = phi i64 [ %183, %179 ], [ %101, %110 ]
  %186 = phi %"struct.std::__1::pair.1075"** [ %180, %179 ], [ %103, %110 ]
  %187 = phi i64 [ %181, %179 ], [ %102, %110 ]
  %188 = phi i64 [ %182, %179 ], [ %104, %110 ]
  %189 = sub i64 %188, %104
  %190 = ashr exact i64 %189, 4
  %191 = add i64 %185, %190
  store i64 %191, i64* %40, align 8
  br i1 %106, label %99, label %192

192:                                              ; preds = %184
  %193 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %105, i64 1
  %194 = bitcast %"struct.std::__1::pair.1075"** %193 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = inttoptr i64 %195 to %"struct.std::__1::pair.1075"*
  %197 = icmp eq %"struct.std::__1::pair.1075"* %196, %96
  br i1 %197, label %99, label %100

198:                                              ; preds = %165
  %199 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %166, i64 1
  %200 = bitcast %"struct.std::__1::pair.1075"** %199 to i64*
  %201 = load i64, i64* %200, align 8
  br label %202

202:                                              ; preds = %198, %165
  %203 = phi %"struct.std::__1::pair.1075"** [ %199, %198 ], [ %166, %165 ]
  %204 = phi i64 [ %201, %198 ], [ %174, %165 ]
  %205 = icmp eq %"struct.std::__1::pair.1075"* %111, %171
  br i1 %205, label %179, label %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeINS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorIS9_EEE19__add_back_capacityEm(%"class.std::__1::deque.1072"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::__1::pair.1075"*, align 8
  %4 = alloca %"struct.std::__1::pair.1075"*, align 8
  %5 = alloca %"struct.std::__1::__split_buffer.1218", align 16
  %6 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %9, align 8
  %11 = icmp eq %"struct.std::__1::pair.1075"** %8, %10
  %12 = zext i1 %11 to i64
  %13 = add i64 %12, %1
  %14 = lshr i64 %13, 8
  %15 = and i64 %13, 255
  %16 = icmp ne i64 %15, 0
  %17 = zext i1 %16 to i64
  %18 = add nuw nsw i64 %14, %17
  %19 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = lshr i64 %20, 8
  %22 = icmp ult i64 %18, %21
  %23 = select i1 %22, i64 %18, i64 %21
  %24 = sub nsw i64 %18, %23
  %25 = icmp eq i64 %24, 0
  %26 = ptrtoint %"struct.std::__1::pair.1075"** %8 to i64
  br i1 %25, label %27, label %186

27:                                               ; preds = %2
  %28 = shl nuw i64 %23, 8
  %29 = sub i64 %20, %28
  store i64 %29, i64* %19, align 8
  %30 = icmp eq i64 %23, 0
  br i1 %30, label %768, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %33 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"struct.std::__1::pair.1075"*** %32 to i64*
  %35 = bitcast %"class.std::__1::deque.1072"* %0 to i64*
  %36 = bitcast %"struct.std::__1::pair.1075"*** %9 to i64*
  %37 = bitcast %"struct.std::__1::pair.1075"*** %7 to i64*
  %38 = bitcast %"struct.std::__1::pair.1075"*** %7 to i64**
  br label %39

39:                                               ; preds = %184, %31
  %40 = phi %"struct.std::__1::pair.1075"** [ %8, %31 ], [ %181, %184 ]
  %41 = phi %"struct.std::__1::pair.1075"** [ %10, %31 ], [ %185, %184 ]
  %42 = phi i64 [ %23, %31 ], [ %182, %184 ]
  %43 = bitcast %"struct.std::__1::pair.1075"** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %41, i64 1
  store %"struct.std::__1::pair.1075"** %45, %"struct.std::__1::pair.1075"*** %9, align 8
  %46 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %32, align 8
  %47 = icmp eq %"struct.std::__1::pair.1075"** %40, %46
  %48 = ptrtoint %"struct.std::__1::pair.1075"** %46 to i64
  %49 = bitcast %"struct.std::__1::pair.1075"** %40 to i64*
  br i1 %47, label %50, label %178

50:                                               ; preds = %39
  %51 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %33, align 8
  %52 = icmp ugt %"struct.std::__1::pair.1075"** %45, %51
  %53 = ptrtoint %"struct.std::__1::pair.1075"** %51 to i64
  br i1 %52, label %54, label %73

54:                                               ; preds = %50
  %55 = ptrtoint %"struct.std::__1::pair.1075"** %45 to i64
  %56 = sub i64 %55, %53
  %57 = ashr exact i64 %56, 3
  %58 = add nsw i64 %57, 1
  %59 = sdiv i64 %58, -2
  %60 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %45, i64 %59
  %61 = sub i64 %48, %55
  %62 = ashr exact i64 %61, 3
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = bitcast %"struct.std::__1::pair.1075"** %60 to i8*
  %66 = bitcast %"struct.std::__1::pair.1075"** %45 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 %61, i1 false) #13
  %67 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %9, align 8
  br label %68

68:                                               ; preds = %64, %54
  %69 = phi %"struct.std::__1::pair.1075"** [ %45, %54 ], [ %67, %64 ]
  %70 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %60, i64 %62
  store %"struct.std::__1::pair.1075"** %70, %"struct.std::__1::pair.1075"*** %7, align 8
  %71 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %69, i64 %59
  store %"struct.std::__1::pair.1075"** %71, %"struct.std::__1::pair.1075"*** %9, align 8
  %72 = bitcast %"struct.std::__1::pair.1075"** %70 to i64*
  br label %178

73:                                               ; preds = %50
  %74 = sub i64 %48, %53
  %75 = ashr exact i64 %74, 2
  %76 = icmp eq i64 %74, 0
  %77 = select i1 %76, i64 1, i64 %75
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %80

79:                                               ; preds = %73
  tail call void @abort() #14
  unreachable

80:                                               ; preds = %73
  %81 = lshr i64 %77, 2
  %82 = shl i64 %77, 3
  %83 = tail call i8* @_Znwm(i64 %82) #12
  %84 = bitcast i8* %83 to %"struct.std::__1::pair.1075"**
  %85 = ptrtoint i8* %83 to i64
  %86 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %84, i64 %81
  %87 = ptrtoint %"struct.std::__1::pair.1075"** %86 to i64
  %88 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %84, i64 %77
  %89 = ptrtoint %"struct.std::__1::pair.1075"** %88 to i64
  %90 = ptrtoint %"struct.std::__1::pair.1075"** %45 to i64
  %91 = sub i64 %48, %90
  %92 = ashr exact i64 %91, 3
  %93 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %86, i64 %92
  %94 = icmp eq i64 %91, 0
  br i1 %94, label %170, label %95

95:                                               ; preds = %80
  %96 = add i64 %91, -8
  %97 = lshr i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 7
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %116, label %101

101:                                              ; preds = %95, %101
  %102 = phi %"struct.std::__1::pair.1075"** [ %109, %101 ], [ %86, %95 ]
  %103 = phi i64 [ %110, %101 ], [ %87, %95 ]
  %104 = phi %"struct.std::__1::pair.1075"** [ %111, %101 ], [ %45, %95 ]
  %105 = phi i64 [ %112, %101 ], [ %99, %95 ]
  %106 = bitcast %"struct.std::__1::pair.1075"** %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = inttoptr i64 %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %102, i64 1
  %110 = ptrtoint %"struct.std::__1::pair.1075"** %109 to i64
  %111 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %104, i64 1
  %112 = add i64 %105, -1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %101, !llvm.loop !159

114:                                              ; preds = %101
  %115 = ptrtoint %"struct.std::__1::pair.1075"** %109 to i64
  br label %116

116:                                              ; preds = %95, %114
  %117 = phi %"struct.std::__1::pair.1075"** [ %86, %95 ], [ %109, %114 ]
  %118 = phi i64 [ %87, %95 ], [ %115, %114 ]
  %119 = phi %"struct.std::__1::pair.1075"** [ %45, %95 ], [ %111, %114 ]
  %120 = icmp ult i64 %96, 56
  br i1 %120, label %167, label %121

121:                                              ; preds = %116, %121
  %122 = phi %"struct.std::__1::pair.1075"** [ %163, %121 ], [ %117, %116 ]
  %123 = phi i64 [ %164, %121 ], [ %118, %116 ]
  %124 = phi %"struct.std::__1::pair.1075"** [ %165, %121 ], [ %119, %116 ]
  %125 = bitcast %"struct.std::__1::pair.1075"** %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = inttoptr i64 %123 to i64*
  store i64 %126, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %122, i64 1
  %129 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %124, i64 1
  %130 = bitcast %"struct.std::__1::pair.1075"** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"struct.std::__1::pair.1075"** %128 to i64*
  store i64 %131, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %122, i64 2
  %134 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %124, i64 2
  %135 = bitcast %"struct.std::__1::pair.1075"** %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast %"struct.std::__1::pair.1075"** %133 to i64*
  store i64 %136, i64* %137, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %122, i64 3
  %139 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %124, i64 3
  %140 = bitcast %"struct.std::__1::pair.1075"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"struct.std::__1::pair.1075"** %138 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %122, i64 4
  %144 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %124, i64 4
  %145 = bitcast %"struct.std::__1::pair.1075"** %144 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"struct.std::__1::pair.1075"** %143 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %122, i64 5
  %149 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %124, i64 5
  %150 = bitcast %"struct.std::__1::pair.1075"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"struct.std::__1::pair.1075"** %148 to i64*
  store i64 %151, i64* %152, align 8
  %153 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %122, i64 6
  %154 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %124, i64 6
  %155 = bitcast %"struct.std::__1::pair.1075"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"struct.std::__1::pair.1075"** %153 to i64*
  store i64 %156, i64* %157, align 8
  %158 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %122, i64 7
  %159 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %124, i64 7
  %160 = bitcast %"struct.std::__1::pair.1075"** %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"struct.std::__1::pair.1075"** %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %122, i64 8
  %164 = ptrtoint %"struct.std::__1::pair.1075"** %163 to i64
  %165 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %124, i64 8
  %166 = icmp eq %"struct.std::__1::pair.1075"** %93, %163
  br i1 %166, label %167, label %121

167:                                              ; preds = %121, %116
  %168 = ptrtoint %"struct.std::__1::pair.1075"** %93 to i64
  %169 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %33, align 8
  br label %170

170:                                              ; preds = %167, %80
  %171 = phi %"struct.std::__1::pair.1075"** [ %169, %167 ], [ %51, %80 ]
  %172 = phi i64 [ %168, %167 ], [ %87, %80 ]
  store i64 %85, i64* %35, align 8
  store i64 %87, i64* %36, align 8
  store i64 %172, i64* %37, align 8
  store i64 %89, i64* %34, align 8
  %173 = icmp eq %"struct.std::__1::pair.1075"** %171, null
  %174 = inttoptr i64 %172 to i64*
  br i1 %173, label %178, label %175

175:                                              ; preds = %170
  %176 = bitcast %"struct.std::__1::pair.1075"** %171 to i8*
  tail call void @_ZdlPv(i8* %176) #12
  %177 = load i64*, i64** %38, align 8
  br label %178

178:                                              ; preds = %39, %68, %170, %175
  %179 = phi i64* [ %177, %175 ], [ %174, %170 ], [ %72, %68 ], [ %49, %39 ]
  store i64 %44, i64* %179, align 8
  %180 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %7, align 8
  %181 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %180, i64 1
  store %"struct.std::__1::pair.1075"** %181, %"struct.std::__1::pair.1075"*** %7, align 8
  %182 = add i64 %42, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %768, label %184

184:                                              ; preds = %178
  %185 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %9, align 8
  br label %39

186:                                              ; preds = %2
  %187 = ptrtoint %"struct.std::__1::pair.1075"** %10 to i64
  %188 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %189 = bitcast %"struct.std::__1::pair.1075"*** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.std::__1::deque.1072"* %0 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %190, %192
  %194 = ashr exact i64 %193, 3
  %195 = bitcast %"struct.std::__1::pair.1075"*** %7 to i64*
  %196 = bitcast %"struct.std::__1::pair.1075"*** %9 to i64*
  %197 = sub i64 %26, %187
  %198 = ashr exact i64 %197, 3
  %199 = sub nsw i64 %194, %198
  %200 = icmp ugt i64 %24, %199
  br i1 %200, label %391, label %201

201:                                              ; preds = %186
  %202 = bitcast %"struct.std::__1::pair.1075"** %3 to i8*
  %203 = bitcast %"struct.std::__1::pair.1075"** %3 to i8**
  %204 = icmp eq i64 %190, %26
  br i1 %204, label %214, label %205

205:                                              ; preds = %201, %210
  %206 = phi i64 [ %208, %210 ], [ %24, %201 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #13
  %207 = call i8* @_Znwm(i64 4096) #12
  store i8* %207, i8** %203, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE9push_backEOSA_(%"struct.std::__1::__split_buffer.1074"* %6, %"struct.std::__1::pair.1075"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #13
  %208 = add i64 %206, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %217, label %210

210:                                              ; preds = %205
  %211 = load i64, i64* %189, align 8
  %212 = load i64, i64* %195, align 8
  %213 = icmp eq i64 %211, %212
  br i1 %213, label %214, label %205

214:                                              ; preds = %210, %201
  %215 = phi i64 [ %24, %201 ], [ %208, %210 ]
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %205, %214
  %218 = load i64, i64* %19, align 8
  br label %236

219:                                              ; preds = %214
  %220 = bitcast %"struct.std::__1::pair.1075"** %4 to i8*
  %221 = bitcast %"struct.std::__1::pair.1075"** %4 to i8**
  br label %222

222:                                              ; preds = %219, %222
  %223 = phi i64 [ %215, %219 ], [ %225, %222 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #13
  %224 = call i8* @_Znwm(i64 4096) #12
  store i8* %224, i8** %221, align 8
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEENS_9allocatorISA_EEE10push_frontEOSA_(%"struct.std::__1::__split_buffer.1074"* %6, %"struct.std::__1::pair.1075"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #13
  %225 = add i64 %223, -1
  %226 = load i64, i64* %195, align 8
  %227 = load i64, i64* %196, align 8
  %228 = sub i64 %226, %227
  %229 = icmp eq i64 %228, 8
  %230 = select i1 %229, i64 255, i64 256
  %231 = load i64, i64* %19, align 8
  %232 = add i64 %230, %231
  store i64 %232, i64* %19, align 8
  %233 = icmp eq i64 %225, 0
  br i1 %233, label %234, label %222

234:                                              ; preds = %222
  %235 = add i64 %215, %23
  br label %236

236:                                              ; preds = %217, %234
  %237 = phi i64 [ %218, %217 ], [ %232, %234 ]
  %238 = phi i64 [ %23, %217 ], [ %235, %234 ]
  %239 = shl i64 %238, 8
  %240 = sub i64 %237, %239
  store i64 %240, i64* %19, align 8
  %241 = icmp eq i64 %238, 0
  br i1 %241, label %768, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"struct.std::__1::pair.1075"*** %7 to i64**
  %245 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %7, align 8
  br label %246

246:                                              ; preds = %242, %385
  %247 = phi %"struct.std::__1::pair.1075"** [ %245, %242 ], [ %388, %385 ]
  %248 = phi i64 [ %238, %242 ], [ %389, %385 ]
  %249 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %9, align 8
  %250 = bitcast %"struct.std::__1::pair.1075"** %249 to i64*
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %249, i64 1
  store %"struct.std::__1::pair.1075"** %252, %"struct.std::__1::pair.1075"*** %9, align 8
  %253 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %188, align 8
  %254 = icmp eq %"struct.std::__1::pair.1075"** %247, %253
  %255 = ptrtoint %"struct.std::__1::pair.1075"** %253 to i64
  %256 = bitcast %"struct.std::__1::pair.1075"** %247 to i64*
  br i1 %254, label %257, label %385

257:                                              ; preds = %246
  %258 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %243, align 8
  %259 = icmp ugt %"struct.std::__1::pair.1075"** %252, %258
  %260 = ptrtoint %"struct.std::__1::pair.1075"** %258 to i64
  br i1 %259, label %261, label %280

261:                                              ; preds = %257
  %262 = ptrtoint %"struct.std::__1::pair.1075"** %252 to i64
  %263 = sub i64 %262, %260
  %264 = ashr exact i64 %263, 3
  %265 = add nsw i64 %264, 1
  %266 = sdiv i64 %265, -2
  %267 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %252, i64 %266
  %268 = sub i64 %255, %262
  %269 = ashr exact i64 %268, 3
  %270 = icmp eq i64 %268, 0
  br i1 %270, label %275, label %271

271:                                              ; preds = %261
  %272 = bitcast %"struct.std::__1::pair.1075"** %267 to i8*
  %273 = bitcast %"struct.std::__1::pair.1075"** %252 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %272, i8* align 8 %273, i64 %268, i1 false) #13
  %274 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %9, align 8
  br label %275

275:                                              ; preds = %271, %261
  %276 = phi %"struct.std::__1::pair.1075"** [ %252, %261 ], [ %274, %271 ]
  %277 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %267, i64 %269
  store %"struct.std::__1::pair.1075"** %277, %"struct.std::__1::pair.1075"*** %7, align 8
  %278 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %276, i64 %266
  store %"struct.std::__1::pair.1075"** %278, %"struct.std::__1::pair.1075"*** %9, align 8
  %279 = bitcast %"struct.std::__1::pair.1075"** %277 to i64*
  br label %385

280:                                              ; preds = %257
  %281 = sub i64 %255, %260
  %282 = ashr exact i64 %281, 2
  %283 = icmp eq i64 %281, 0
  %284 = select i1 %283, i64 1, i64 %282
  %285 = icmp ugt i64 %284, 2305843009213693951
  br i1 %285, label %286, label %287

286:                                              ; preds = %280
  call void @abort() #14
  unreachable

287:                                              ; preds = %280
  %288 = lshr i64 %284, 2
  %289 = shl i64 %284, 3
  %290 = call i8* @_Znwm(i64 %289) #12
  %291 = bitcast i8* %290 to %"struct.std::__1::pair.1075"**
  %292 = ptrtoint i8* %290 to i64
  %293 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %291, i64 %288
  %294 = ptrtoint %"struct.std::__1::pair.1075"** %293 to i64
  %295 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %291, i64 %284
  %296 = ptrtoint %"struct.std::__1::pair.1075"** %295 to i64
  %297 = ptrtoint %"struct.std::__1::pair.1075"** %252 to i64
  %298 = sub i64 %255, %297
  %299 = ashr exact i64 %298, 3
  %300 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %293, i64 %299
  %301 = icmp eq i64 %298, 0
  br i1 %301, label %377, label %302

302:                                              ; preds = %287
  %303 = add i64 %298, -8
  %304 = lshr i64 %303, 3
  %305 = add nuw nsw i64 %304, 1
  %306 = and i64 %305, 7
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %323, label %308

308:                                              ; preds = %302, %308
  %309 = phi %"struct.std::__1::pair.1075"** [ %316, %308 ], [ %293, %302 ]
  %310 = phi i64 [ %317, %308 ], [ %294, %302 ]
  %311 = phi %"struct.std::__1::pair.1075"** [ %318, %308 ], [ %252, %302 ]
  %312 = phi i64 [ %319, %308 ], [ %306, %302 ]
  %313 = bitcast %"struct.std::__1::pair.1075"** %311 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = inttoptr i64 %310 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %309, i64 1
  %317 = ptrtoint %"struct.std::__1::pair.1075"** %316 to i64
  %318 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %311, i64 1
  %319 = add i64 %312, -1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %308, !llvm.loop !160

321:                                              ; preds = %308
  %322 = ptrtoint %"struct.std::__1::pair.1075"** %316 to i64
  br label %323

323:                                              ; preds = %302, %321
  %324 = phi %"struct.std::__1::pair.1075"** [ %293, %302 ], [ %316, %321 ]
  %325 = phi i64 [ %294, %302 ], [ %322, %321 ]
  %326 = phi %"struct.std::__1::pair.1075"** [ %252, %302 ], [ %318, %321 ]
  %327 = icmp ult i64 %303, 56
  br i1 %327, label %374, label %328

328:                                              ; preds = %323, %328
  %329 = phi %"struct.std::__1::pair.1075"** [ %370, %328 ], [ %324, %323 ]
  %330 = phi i64 [ %371, %328 ], [ %325, %323 ]
  %331 = phi %"struct.std::__1::pair.1075"** [ %372, %328 ], [ %326, %323 ]
  %332 = bitcast %"struct.std::__1::pair.1075"** %331 to i64*
  %333 = load i64, i64* %332, align 8
  %334 = inttoptr i64 %330 to i64*
  store i64 %333, i64* %334, align 8
  %335 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %329, i64 1
  %336 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %331, i64 1
  %337 = bitcast %"struct.std::__1::pair.1075"** %336 to i64*
  %338 = load i64, i64* %337, align 8
  %339 = bitcast %"struct.std::__1::pair.1075"** %335 to i64*
  store i64 %338, i64* %339, align 8
  %340 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %329, i64 2
  %341 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %331, i64 2
  %342 = bitcast %"struct.std::__1::pair.1075"** %341 to i64*
  %343 = load i64, i64* %342, align 8
  %344 = bitcast %"struct.std::__1::pair.1075"** %340 to i64*
  store i64 %343, i64* %344, align 8
  %345 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %329, i64 3
  %346 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %331, i64 3
  %347 = bitcast %"struct.std::__1::pair.1075"** %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = bitcast %"struct.std::__1::pair.1075"** %345 to i64*
  store i64 %348, i64* %349, align 8
  %350 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %329, i64 4
  %351 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %331, i64 4
  %352 = bitcast %"struct.std::__1::pair.1075"** %351 to i64*
  %353 = load i64, i64* %352, align 8
  %354 = bitcast %"struct.std::__1::pair.1075"** %350 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %329, i64 5
  %356 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %331, i64 5
  %357 = bitcast %"struct.std::__1::pair.1075"** %356 to i64*
  %358 = load i64, i64* %357, align 8
  %359 = bitcast %"struct.std::__1::pair.1075"** %355 to i64*
  store i64 %358, i64* %359, align 8
  %360 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %329, i64 6
  %361 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %331, i64 6
  %362 = bitcast %"struct.std::__1::pair.1075"** %361 to i64*
  %363 = load i64, i64* %362, align 8
  %364 = bitcast %"struct.std::__1::pair.1075"** %360 to i64*
  store i64 %363, i64* %364, align 8
  %365 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %329, i64 7
  %366 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %331, i64 7
  %367 = bitcast %"struct.std::__1::pair.1075"** %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = bitcast %"struct.std::__1::pair.1075"** %365 to i64*
  store i64 %368, i64* %369, align 8
  %370 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %329, i64 8
  %371 = ptrtoint %"struct.std::__1::pair.1075"** %370 to i64
  %372 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %331, i64 8
  %373 = icmp eq %"struct.std::__1::pair.1075"** %300, %370
  br i1 %373, label %374, label %328

374:                                              ; preds = %328, %323
  %375 = ptrtoint %"struct.std::__1::pair.1075"** %300 to i64
  %376 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %243, align 8
  br label %377

377:                                              ; preds = %374, %287
  %378 = phi %"struct.std::__1::pair.1075"** [ %376, %374 ], [ %258, %287 ]
  %379 = phi i64 [ %375, %374 ], [ %294, %287 ]
  store i64 %292, i64* %191, align 8
  store i64 %294, i64* %196, align 8
  store i64 %379, i64* %195, align 8
  store i64 %296, i64* %189, align 8
  %380 = icmp eq %"struct.std::__1::pair.1075"** %378, null
  %381 = inttoptr i64 %379 to i64*
  br i1 %380, label %385, label %382

382:                                              ; preds = %377
  %383 = bitcast %"struct.std::__1::pair.1075"** %378 to i8*
  call void @_ZdlPv(i8* %383) #12
  %384 = load i64*, i64** %244, align 8
  br label %385

385:                                              ; preds = %246, %275, %377, %382
  %386 = phi i64* [ %384, %382 ], [ %381, %377 ], [ %279, %275 ], [ %256, %246 ]
  store i64 %251, i64* %386, align 8
  %387 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %7, align 8
  %388 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %387, i64 1
  store %"struct.std::__1::pair.1075"** %388, %"struct.std::__1::pair.1075"*** %7, align 8
  %389 = add i64 %248, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %768, label %246

391:                                              ; preds = %186
  %392 = shl nuw i64 %23, 8
  %393 = bitcast %"struct.std::__1::__split_buffer.1218"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %393) #13
  %394 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %5, i64 0, i32 0
  %395 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %5, i64 0, i32 1
  %396 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %5, i64 0, i32 2
  %397 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %5, i64 0, i32 3, i32 0, i32 0
  %398 = getelementptr inbounds %"struct.std::__1::__split_buffer.1218", %"struct.std::__1::__split_buffer.1218"* %5, i64 0, i32 3, i32 1, i32 0
  %399 = ashr exact i64 %193, 2
  %400 = add nsw i64 %198, %24
  %401 = icmp ult i64 %399, %400
  %402 = select i1 %401, i64 %400, i64 %399
  %403 = sub nsw i64 %198, %23
  %404 = getelementptr inbounds %"class.std::__1::deque.1072", %"class.std::__1::deque.1072"* %0, i64 0, i32 0, i32 0, i32 3
  %405 = bitcast %"struct.std::__1::__split_buffer.1218"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %405, i8 -86, i64 24, i1 false)
  store %"struct.std::__1::pair.1075"** null, %"struct.std::__1::pair.1075"*** %397, align 8
  %406 = bitcast %"class.std::__1::allocator.1079"** %398 to %"class.std::__1::__compressed_pair.1076"**
  store %"class.std::__1::__compressed_pair.1076"* %404, %"class.std::__1::__compressed_pair.1076"** %406, align 8
  %407 = icmp eq i64 %402, 0
  br i1 %407, label %415, label %408

408:                                              ; preds = %391
  %409 = icmp ugt i64 %402, 2305843009213693951
  br i1 %409, label %410, label %411

410:                                              ; preds = %408
  tail call void @abort() #14
  unreachable

411:                                              ; preds = %408
  %412 = shl i64 %402, 3
  %413 = tail call i8* @_Znwm(i64 %412) #12
  %414 = bitcast i8* %413 to %"struct.std::__1::pair.1075"**
  br label %415

415:                                              ; preds = %411, %391
  %416 = phi %"struct.std::__1::pair.1075"** [ %414, %411 ], [ null, %391 ]
  store %"struct.std::__1::pair.1075"** %416, %"struct.std::__1::pair.1075"*** %394, align 16
  %417 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %416, i64 %403
  store %"struct.std::__1::pair.1075"** %417, %"struct.std::__1::pair.1075"*** %396, align 16
  store %"struct.std::__1::pair.1075"** %417, %"struct.std::__1::pair.1075"*** %395, align 8
  %418 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %416, i64 %402
  store %"struct.std::__1::pair.1075"** %418, %"struct.std::__1::pair.1075"*** %397, align 8
  %419 = bitcast %"struct.std::__1::pair.1075"*** %397 to i64*
  %420 = bitcast %"struct.std::__1::__split_buffer.1218"* %5 to i64*
  %421 = bitcast %"struct.std::__1::pair.1075"*** %395 to i64*
  %422 = bitcast %"struct.std::__1::pair.1075"*** %396 to i64*
  br label %434

423:                                              ; preds = %568
  %424 = icmp eq i64 %23, 0
  br i1 %424, label %425, label %427

425:                                              ; preds = %423
  %426 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %9, align 8
  br label %719

427:                                              ; preds = %423
  %428 = bitcast %"struct.std::__1::pair.1075"*** %9 to i64**
  %429 = bitcast %"struct.std::__1::pair.1075"*** %397 to i64*
  %430 = bitcast %"struct.std::__1::__split_buffer.1218"* %5 to i64*
  %431 = bitcast %"struct.std::__1::pair.1075"*** %395 to i64*
  %432 = bitcast %"struct.std::__1::pair.1075"*** %396 to i64*
  %433 = load i64*, i64** %428, align 8
  br label %576

434:                                              ; preds = %574, %415
  %435 = phi %"struct.std::__1::pair.1075"** [ %418, %415 ], [ %575, %574 ]
  %436 = phi %"struct.std::__1::pair.1075"** [ %417, %415 ], [ %571, %574 ]
  %437 = phi i64 [ %24, %415 ], [ %572, %574 ]
  %438 = tail call i8* @_Znwm(i64 4096) #12
  %439 = ptrtoint i8* %438 to i64
  %440 = icmp eq %"struct.std::__1::pair.1075"** %436, %435
  %441 = ptrtoint %"struct.std::__1::pair.1075"** %435 to i64
  %442 = bitcast %"struct.std::__1::pair.1075"** %436 to i64*
  br i1 %440, label %443, label %568

443:                                              ; preds = %434
  %444 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %395, align 8
  %445 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %394, align 16
  %446 = icmp ugt %"struct.std::__1::pair.1075"** %444, %445
  %447 = ptrtoint %"struct.std::__1::pair.1075"** %445 to i64
  br i1 %446, label %448, label %464

448:                                              ; preds = %443
  %449 = ptrtoint %"struct.std::__1::pair.1075"** %444 to i64
  %450 = sub i64 %449, %447
  %451 = ashr exact i64 %450, 3
  %452 = add nsw i64 %451, 1
  %453 = sdiv i64 %452, -2
  %454 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %444, i64 %453
  %455 = sub i64 %441, %449
  %456 = ashr exact i64 %455, 3
  %457 = icmp eq i64 %455, 0
  br i1 %457, label %461, label %458

458:                                              ; preds = %448
  %459 = bitcast %"struct.std::__1::pair.1075"** %454 to i8*
  %460 = bitcast %"struct.std::__1::pair.1075"** %444 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %459, i8* align 8 %460, i64 %455, i1 false) #13
  br label %461

461:                                              ; preds = %458, %448
  %462 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %454, i64 %456
  store %"struct.std::__1::pair.1075"** %462, %"struct.std::__1::pair.1075"*** %396, align 16
  store %"struct.std::__1::pair.1075"** %454, %"struct.std::__1::pair.1075"*** %395, align 8
  %463 = bitcast %"struct.std::__1::pair.1075"** %462 to i64*
  br label %568

464:                                              ; preds = %443
  %465 = sub i64 %441, %447
  %466 = ashr exact i64 %465, 2
  %467 = icmp eq i64 %465, 0
  %468 = select i1 %467, i64 1, i64 %466
  %469 = icmp ugt i64 %468, 2305843009213693951
  br i1 %469, label %470, label %471

470:                                              ; preds = %464
  tail call void @abort() #14
  unreachable

471:                                              ; preds = %464
  %472 = lshr i64 %468, 2
  %473 = shl i64 %468, 3
  %474 = tail call i8* @_Znwm(i64 %473) #12
  %475 = bitcast i8* %474 to %"struct.std::__1::pair.1075"**
  %476 = ptrtoint i8* %474 to i64
  %477 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %475, i64 %472
  %478 = ptrtoint %"struct.std::__1::pair.1075"** %477 to i64
  %479 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %475, i64 %468
  %480 = ptrtoint %"struct.std::__1::pair.1075"** %479 to i64
  %481 = ptrtoint %"struct.std::__1::pair.1075"** %444 to i64
  %482 = sub i64 %441, %481
  %483 = ashr exact i64 %482, 3
  %484 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %477, i64 %483
  %485 = icmp eq i64 %482, 0
  br i1 %485, label %561, label %486

486:                                              ; preds = %471
  %487 = add i64 %482, -8
  %488 = lshr i64 %487, 3
  %489 = add nuw nsw i64 %488, 1
  %490 = and i64 %489, 7
  %491 = icmp eq i64 %490, 0
  br i1 %491, label %507, label %492

492:                                              ; preds = %486, %492
  %493 = phi %"struct.std::__1::pair.1075"** [ %500, %492 ], [ %477, %486 ]
  %494 = phi i64 [ %501, %492 ], [ %478, %486 ]
  %495 = phi %"struct.std::__1::pair.1075"** [ %502, %492 ], [ %444, %486 ]
  %496 = phi i64 [ %503, %492 ], [ %490, %486 ]
  %497 = bitcast %"struct.std::__1::pair.1075"** %495 to i64*
  %498 = load i64, i64* %497, align 8
  %499 = inttoptr i64 %494 to i64*
  store i64 %498, i64* %499, align 8
  %500 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %493, i64 1
  %501 = ptrtoint %"struct.std::__1::pair.1075"** %500 to i64
  %502 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %495, i64 1
  %503 = add i64 %496, -1
  %504 = icmp eq i64 %503, 0
  br i1 %504, label %505, label %492, !llvm.loop !161

505:                                              ; preds = %492
  %506 = ptrtoint %"struct.std::__1::pair.1075"** %500 to i64
  br label %507

507:                                              ; preds = %486, %505
  %508 = phi %"struct.std::__1::pair.1075"** [ %477, %486 ], [ %500, %505 ]
  %509 = phi i64 [ %478, %486 ], [ %506, %505 ]
  %510 = phi %"struct.std::__1::pair.1075"** [ %444, %486 ], [ %502, %505 ]
  %511 = icmp ult i64 %487, 56
  br i1 %511, label %558, label %512

512:                                              ; preds = %507, %512
  %513 = phi %"struct.std::__1::pair.1075"** [ %554, %512 ], [ %508, %507 ]
  %514 = phi i64 [ %555, %512 ], [ %509, %507 ]
  %515 = phi %"struct.std::__1::pair.1075"** [ %556, %512 ], [ %510, %507 ]
  %516 = bitcast %"struct.std::__1::pair.1075"** %515 to i64*
  %517 = load i64, i64* %516, align 8
  %518 = inttoptr i64 %514 to i64*
  store i64 %517, i64* %518, align 8
  %519 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %513, i64 1
  %520 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %515, i64 1
  %521 = bitcast %"struct.std::__1::pair.1075"** %520 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = bitcast %"struct.std::__1::pair.1075"** %519 to i64*
  store i64 %522, i64* %523, align 8
  %524 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %513, i64 2
  %525 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %515, i64 2
  %526 = bitcast %"struct.std::__1::pair.1075"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"struct.std::__1::pair.1075"** %524 to i64*
  store i64 %527, i64* %528, align 8
  %529 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %513, i64 3
  %530 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %515, i64 3
  %531 = bitcast %"struct.std::__1::pair.1075"** %530 to i64*
  %532 = load i64, i64* %531, align 8
  %533 = bitcast %"struct.std::__1::pair.1075"** %529 to i64*
  store i64 %532, i64* %533, align 8
  %534 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %513, i64 4
  %535 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %515, i64 4
  %536 = bitcast %"struct.std::__1::pair.1075"** %535 to i64*
  %537 = load i64, i64* %536, align 8
  %538 = bitcast %"struct.std::__1::pair.1075"** %534 to i64*
  store i64 %537, i64* %538, align 8
  %539 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %513, i64 5
  %540 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %515, i64 5
  %541 = bitcast %"struct.std::__1::pair.1075"** %540 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = bitcast %"struct.std::__1::pair.1075"** %539 to i64*
  store i64 %542, i64* %543, align 8
  %544 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %513, i64 6
  %545 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %515, i64 6
  %546 = bitcast %"struct.std::__1::pair.1075"** %545 to i64*
  %547 = load i64, i64* %546, align 8
  %548 = bitcast %"struct.std::__1::pair.1075"** %544 to i64*
  store i64 %547, i64* %548, align 8
  %549 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %513, i64 7
  %550 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %515, i64 7
  %551 = bitcast %"struct.std::__1::pair.1075"** %550 to i64*
  %552 = load i64, i64* %551, align 8
  %553 = bitcast %"struct.std::__1::pair.1075"** %549 to i64*
  store i64 %552, i64* %553, align 8
  %554 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %513, i64 8
  %555 = ptrtoint %"struct.std::__1::pair.1075"** %554 to i64
  %556 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %515, i64 8
  %557 = icmp eq %"struct.std::__1::pair.1075"** %484, %554
  br i1 %557, label %558, label %512

558:                                              ; preds = %512, %507
  %559 = ptrtoint %"struct.std::__1::pair.1075"** %484 to i64
  %560 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %394, align 16
  br label %561

561:                                              ; preds = %558, %471
  %562 = phi %"struct.std::__1::pair.1075"** [ %560, %558 ], [ %445, %471 ]
  %563 = phi i64 [ %559, %558 ], [ %478, %471 ]
  store i64 %476, i64* %420, align 16
  store i64 %478, i64* %421, align 8
  store i64 %563, i64* %422, align 16
  store i64 %480, i64* %419, align 8
  %564 = icmp eq %"struct.std::__1::pair.1075"** %562, null
  %565 = inttoptr i64 %563 to i64*
  br i1 %564, label %568, label %566

566:                                              ; preds = %561
  %567 = bitcast %"struct.std::__1::pair.1075"** %562 to i8*
  tail call void @_ZdlPv(i8* %567) #12
  br label %568

568:                                              ; preds = %434, %461, %561, %566
  %569 = phi i64* [ %565, %566 ], [ %565, %561 ], [ %463, %461 ], [ %442, %434 ]
  store i64 %439, i64* %569, align 8
  %570 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %396, align 16
  %571 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %570, i64 1
  store %"struct.std::__1::pair.1075"** %571, %"struct.std::__1::pair.1075"*** %396, align 16
  %572 = add i64 %437, -1
  %573 = icmp eq i64 %572, 0
  br i1 %573, label %423, label %574

574:                                              ; preds = %568
  %575 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %397, align 8
  br label %434

576:                                              ; preds = %427, %709
  %577 = phi %"struct.std::__1::pair.1075"** [ %571, %427 ], [ %713, %709 ]
  %578 = phi i64* [ %433, %427 ], [ %718, %709 ]
  %579 = phi i64 [ %23, %427 ], [ %716, %709 ]
  %580 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %397, align 8
  %581 = icmp eq %"struct.std::__1::pair.1075"** %577, %580
  %582 = ptrtoint %"struct.std::__1::pair.1075"** %580 to i64
  %583 = bitcast %"struct.std::__1::pair.1075"** %577 to i64*
  br i1 %581, label %584, label %709

584:                                              ; preds = %576
  %585 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %395, align 8
  %586 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %394, align 16
  %587 = icmp ugt %"struct.std::__1::pair.1075"** %585, %586
  %588 = ptrtoint %"struct.std::__1::pair.1075"** %586 to i64
  br i1 %587, label %589, label %605

589:                                              ; preds = %584
  %590 = ptrtoint %"struct.std::__1::pair.1075"** %585 to i64
  %591 = sub i64 %590, %588
  %592 = ashr exact i64 %591, 3
  %593 = add nsw i64 %592, 1
  %594 = sdiv i64 %593, -2
  %595 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %585, i64 %594
  %596 = sub i64 %582, %590
  %597 = ashr exact i64 %596, 3
  %598 = icmp eq i64 %596, 0
  br i1 %598, label %602, label %599

599:                                              ; preds = %589
  %600 = bitcast %"struct.std::__1::pair.1075"** %595 to i8*
  %601 = bitcast %"struct.std::__1::pair.1075"** %585 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %600, i8* align 8 %601, i64 %596, i1 false) #13
  br label %602

602:                                              ; preds = %599, %589
  %603 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %595, i64 %597
  store %"struct.std::__1::pair.1075"** %603, %"struct.std::__1::pair.1075"*** %396, align 16
  store %"struct.std::__1::pair.1075"** %595, %"struct.std::__1::pair.1075"*** %395, align 8
  %604 = bitcast %"struct.std::__1::pair.1075"** %603 to i64*
  br label %709

605:                                              ; preds = %584
  %606 = sub i64 %582, %588
  %607 = ashr exact i64 %606, 2
  %608 = icmp eq i64 %606, 0
  %609 = select i1 %608, i64 1, i64 %607
  %610 = icmp ugt i64 %609, 2305843009213693951
  br i1 %610, label %611, label %612

611:                                              ; preds = %605
  tail call void @abort() #14
  unreachable

612:                                              ; preds = %605
  %613 = lshr i64 %609, 2
  %614 = shl i64 %609, 3
  %615 = tail call i8* @_Znwm(i64 %614) #12
  %616 = bitcast i8* %615 to %"struct.std::__1::pair.1075"**
  %617 = ptrtoint i8* %615 to i64
  %618 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %616, i64 %613
  %619 = ptrtoint %"struct.std::__1::pair.1075"** %618 to i64
  %620 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %616, i64 %609
  %621 = ptrtoint %"struct.std::__1::pair.1075"** %620 to i64
  %622 = ptrtoint %"struct.std::__1::pair.1075"** %585 to i64
  %623 = sub i64 %582, %622
  %624 = ashr exact i64 %623, 3
  %625 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %618, i64 %624
  %626 = icmp eq i64 %623, 0
  br i1 %626, label %702, label %627

627:                                              ; preds = %612
  %628 = add i64 %623, -8
  %629 = lshr i64 %628, 3
  %630 = add nuw nsw i64 %629, 1
  %631 = and i64 %630, 7
  %632 = icmp eq i64 %631, 0
  br i1 %632, label %648, label %633

633:                                              ; preds = %627, %633
  %634 = phi %"struct.std::__1::pair.1075"** [ %641, %633 ], [ %618, %627 ]
  %635 = phi i64 [ %642, %633 ], [ %619, %627 ]
  %636 = phi %"struct.std::__1::pair.1075"** [ %643, %633 ], [ %585, %627 ]
  %637 = phi i64 [ %644, %633 ], [ %631, %627 ]
  %638 = bitcast %"struct.std::__1::pair.1075"** %636 to i64*
  %639 = load i64, i64* %638, align 8
  %640 = inttoptr i64 %635 to i64*
  store i64 %639, i64* %640, align 8
  %641 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %634, i64 1
  %642 = ptrtoint %"struct.std::__1::pair.1075"** %641 to i64
  %643 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %636, i64 1
  %644 = add i64 %637, -1
  %645 = icmp eq i64 %644, 0
  br i1 %645, label %646, label %633, !llvm.loop !162

646:                                              ; preds = %633
  %647 = ptrtoint %"struct.std::__1::pair.1075"** %641 to i64
  br label %648

648:                                              ; preds = %627, %646
  %649 = phi %"struct.std::__1::pair.1075"** [ %618, %627 ], [ %641, %646 ]
  %650 = phi i64 [ %619, %627 ], [ %647, %646 ]
  %651 = phi %"struct.std::__1::pair.1075"** [ %585, %627 ], [ %643, %646 ]
  %652 = icmp ult i64 %628, 56
  br i1 %652, label %699, label %653

653:                                              ; preds = %648, %653
  %654 = phi %"struct.std::__1::pair.1075"** [ %695, %653 ], [ %649, %648 ]
  %655 = phi i64 [ %696, %653 ], [ %650, %648 ]
  %656 = phi %"struct.std::__1::pair.1075"** [ %697, %653 ], [ %651, %648 ]
  %657 = bitcast %"struct.std::__1::pair.1075"** %656 to i64*
  %658 = load i64, i64* %657, align 8
  %659 = inttoptr i64 %655 to i64*
  store i64 %658, i64* %659, align 8
  %660 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %654, i64 1
  %661 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %656, i64 1
  %662 = bitcast %"struct.std::__1::pair.1075"** %661 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = bitcast %"struct.std::__1::pair.1075"** %660 to i64*
  store i64 %663, i64* %664, align 8
  %665 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %654, i64 2
  %666 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %656, i64 2
  %667 = bitcast %"struct.std::__1::pair.1075"** %666 to i64*
  %668 = load i64, i64* %667, align 8
  %669 = bitcast %"struct.std::__1::pair.1075"** %665 to i64*
  store i64 %668, i64* %669, align 8
  %670 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %654, i64 3
  %671 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %656, i64 3
  %672 = bitcast %"struct.std::__1::pair.1075"** %671 to i64*
  %673 = load i64, i64* %672, align 8
  %674 = bitcast %"struct.std::__1::pair.1075"** %670 to i64*
  store i64 %673, i64* %674, align 8
  %675 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %654, i64 4
  %676 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %656, i64 4
  %677 = bitcast %"struct.std::__1::pair.1075"** %676 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = bitcast %"struct.std::__1::pair.1075"** %675 to i64*
  store i64 %678, i64* %679, align 8
  %680 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %654, i64 5
  %681 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %656, i64 5
  %682 = bitcast %"struct.std::__1::pair.1075"** %681 to i64*
  %683 = load i64, i64* %682, align 8
  %684 = bitcast %"struct.std::__1::pair.1075"** %680 to i64*
  store i64 %683, i64* %684, align 8
  %685 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %654, i64 6
  %686 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %656, i64 6
  %687 = bitcast %"struct.std::__1::pair.1075"** %686 to i64*
  %688 = load i64, i64* %687, align 8
  %689 = bitcast %"struct.std::__1::pair.1075"** %685 to i64*
  store i64 %688, i64* %689, align 8
  %690 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %654, i64 7
  %691 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %656, i64 7
  %692 = bitcast %"struct.std::__1::pair.1075"** %691 to i64*
  %693 = load i64, i64* %692, align 8
  %694 = bitcast %"struct.std::__1::pair.1075"** %690 to i64*
  store i64 %693, i64* %694, align 8
  %695 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %654, i64 8
  %696 = ptrtoint %"struct.std::__1::pair.1075"** %695 to i64
  %697 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %656, i64 8
  %698 = icmp eq %"struct.std::__1::pair.1075"** %625, %695
  br i1 %698, label %699, label %653

699:                                              ; preds = %653, %648
  %700 = ptrtoint %"struct.std::__1::pair.1075"** %625 to i64
  %701 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %394, align 16
  br label %702

702:                                              ; preds = %699, %612
  %703 = phi %"struct.std::__1::pair.1075"** [ %701, %699 ], [ %586, %612 ]
  %704 = phi i64 [ %700, %699 ], [ %619, %612 ]
  store i64 %617, i64* %430, align 16
  store i64 %619, i64* %431, align 8
  store i64 %704, i64* %432, align 16
  store i64 %621, i64* %429, align 8
  %705 = icmp eq %"struct.std::__1::pair.1075"** %703, null
  %706 = inttoptr i64 %704 to i64*
  br i1 %705, label %709, label %707

707:                                              ; preds = %702
  %708 = bitcast %"struct.std::__1::pair.1075"** %703 to i8*
  tail call void @_ZdlPv(i8* %708) #12
  br label %709

709:                                              ; preds = %576, %602, %702, %707
  %710 = phi i64* [ %706, %707 ], [ %706, %702 ], [ %604, %602 ], [ %583, %576 ]
  %711 = load i64, i64* %578, align 8
  store i64 %711, i64* %710, align 8
  %712 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %396, align 16
  %713 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %712, i64 1
  store %"struct.std::__1::pair.1075"** %713, %"struct.std::__1::pair.1075"*** %396, align 16
  %714 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %9, align 8
  %715 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %714, i64 1
  store %"struct.std::__1::pair.1075"** %715, %"struct.std::__1::pair.1075"*** %9, align 8
  %716 = add i64 %579, -1
  %717 = icmp eq i64 %716, 0
  %718 = bitcast %"struct.std::__1::pair.1075"** %715 to i64*
  br i1 %717, label %719, label %576

719:                                              ; preds = %709, %425
  %720 = phi %"struct.std::__1::pair.1075"** [ %571, %425 ], [ %713, %709 ]
  %721 = phi %"struct.std::__1::pair.1075"** [ %426, %425 ], [ %715, %709 ]
  %722 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %7, align 8
  %723 = icmp eq %"struct.std::__1::pair.1075"** %722, %721
  br i1 %723, label %724, label %763

724:                                              ; preds = %719
  %725 = ptrtoint %"struct.std::__1::pair.1075"** %722 to i64
  %726 = ptrtoint %"struct.std::__1::pair.1075"** %720 to i64
  %727 = bitcast %"struct.std::__1::pair.1075"*** %396 to i64*
  br label %732

728:                                              ; preds = %763
  %729 = load i64, i64* %195, align 8
  %730 = bitcast %"struct.std::__1::pair.1075"*** %396 to i64*
  %731 = load i64, i64* %730, align 16
  br label %732

732:                                              ; preds = %724, %728
  %733 = phi i64* [ %727, %724 ], [ %730, %728 ]
  %734 = phi i64 [ %726, %724 ], [ %731, %728 ]
  %735 = phi i64 [ %725, %724 ], [ %729, %728 ]
  %736 = phi %"struct.std::__1::pair.1075"** [ %721, %724 ], [ %766, %728 ]
  %737 = ptrtoint %"struct.std::__1::pair.1075"** %736 to i64
  %738 = load i64, i64* %191, align 8
  %739 = bitcast %"struct.std::__1::__split_buffer.1218"* %5 to i64*
  %740 = bitcast %"struct.std::__1::pair.1075"*** %395 to i64*
  %741 = bitcast %"struct.std::__1::__split_buffer.1218"* %5 to <2 x i64>*
  %742 = load <2 x i64>, <2 x i64>* %741, align 16
  store i64 %738, i64* %739, align 16
  %743 = bitcast %"class.std::__1::deque.1072"* %0 to <2 x i64>*
  store <2 x i64> %742, <2 x i64>* %743, align 8
  store i64 %737, i64* %740, align 8
  store i64 %734, i64* %195, align 8
  store i64 %735, i64* %733, align 8
  %744 = load i64, i64* %189, align 8
  %745 = bitcast %"struct.std::__1::pair.1075"*** %397 to i64*
  %746 = load i64, i64* %745, align 8
  store i64 %746, i64* %189, align 8
  store i64 %744, i64* %745, align 8
  %747 = load i64, i64* %19, align 8
  %748 = sub i64 %747, %392
  store i64 %748, i64* %19, align 8
  %749 = inttoptr i64 %735 to %"struct.std::__1::pair.1075"**
  %750 = icmp eq %"struct.std::__1::pair.1075"** %736, %749
  br i1 %750, label %758, label %751

751:                                              ; preds = %732
  %752 = getelementptr %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %749, i64 -1
  %753 = ptrtoint %"struct.std::__1::pair.1075"** %752 to i64
  %754 = sub i64 %753, %737
  %755 = lshr i64 %754, 3
  %756 = xor i64 %755, -1
  %757 = getelementptr %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %749, i64 %756
  store %"struct.std::__1::pair.1075"** %757, %"struct.std::__1::pair.1075"*** %396, align 16
  br label %758

758:                                              ; preds = %751, %732
  %759 = icmp eq i64 %738, 0
  br i1 %759, label %762, label %760

760:                                              ; preds = %758
  %761 = inttoptr i64 %738 to i8*
  call void @_ZdlPv(i8* %761) #12
  br label %762

762:                                              ; preds = %758, %760
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %393) #13
  br label %768

763:                                              ; preds = %719, %763
  %764 = phi %"struct.std::__1::pair.1075"** [ %765, %763 ], [ %722, %719 ]
  %765 = getelementptr inbounds %"struct.std::__1::pair.1075"*, %"struct.std::__1::pair.1075"** %764, i64 -1
  call void @_ZNSt3__114__split_bufferIPNS_4pairIPN8spvtools3opt4LoopENS_11__wrap_iterIPS5_EEEERNS_9allocatorISA_EEE10push_frontERKSA_(%"struct.std::__1::__split_buffer.1218"* nonnull %5, %"struct.std::__1::pair.1075"** dereferenceable(8) %765)
  %766 = load %"struct.std::__1::pair.1075"**, %"struct.std::__1::pair.1075"*** %9, align 8
  %767 = icmp eq %"struct.std::__1::pair.1075"** %765, %766
  br i1 %767, label %728, label %763

768:                                              ; preds = %385, %178, %236, %27, %762
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{i64 0, i64 65}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!6 = distinct !{!6, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK8spvtools3opt10BasicBlock5ctailEv: argument 0"}
!9 = distinct !{!9, !"_ZNK8spvtools3opt10BasicBlock5ctailEv"}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !11}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!16 = distinct !{!16, !17, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK8spvtools3opt4Loop7IsLCSSAEvE3$_2FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!17 = distinct !{!17, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK8spvtools3opt4Loop7IsLCSSAEvE3$_2FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!20 = distinct !{!20, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!21 = distinct !{!21, !22, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS5_9IRContextEPNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!22 = distinct !{!22, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS5_9IRContextEPNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN8spvtools3opt13DominatorTree10post_beginEv: argument 0"}
!25 = distinct !{!25, !"_ZN8spvtools3opt13DominatorTree10post_beginEv"}
!26 = !{!27, !24}
!27 = distinct !{!27, !28, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_17DominatorTreeNodeEE5beginEPS2_: argument 0"}
!28 = distinct !{!28, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_17DominatorTreeNodeEE5beginEPS2_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN8spvtools3opt10make_rangeINS0_23PostOrderTreeDFIteratorINS0_17DominatorTreeNodeEEEEENS0_13IteratorRangeIT_EEOS6_S8_: argument 0"}
!31 = distinct !{!31, !"_ZN8spvtools3opt10make_rangeINS0_23PostOrderTreeDFIteratorINS0_17DominatorTreeNodeEEEEENS0_13IteratorRangeIT_EEOS6_S8_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN8spvtools3opt13DominatorTree8post_endEv: argument 0"}
!34 = distinct !{!34, !"_ZN8spvtools3opt13DominatorTree8post_endEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK8spvtools3opt13IteratorRangeINS0_23PostOrderTreeDFIteratorINS0_17DominatorTreeNodeEEEE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZNK8spvtools3opt13IteratorRangeINS0_23PostOrderTreeDFIteratorINS0_17DominatorTreeNodeEEEE5beginEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK8spvtools3opt13IteratorRangeINS0_23PostOrderTreeDFIteratorINS0_17DominatorTreeNodeEEEE3endEv: argument 0"}
!40 = distinct !{!40, !"_ZNK8spvtools3opt13IteratorRangeINS0_23PostOrderTreeDFIteratorINS0_17DominatorTreeNodeEEEE3endEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN8spvtools3opt17DominatorTreeNode8df_beginEv: argument 0"}
!43 = distinct !{!43, !"_ZN8spvtools3opt17DominatorTreeNode8df_beginEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN8spvtools3opt10make_rangeINS0_14TreeDFIteratorINS0_17DominatorTreeNodeEEEEENS0_13IteratorRangeIT_EEOS6_S8_: argument 0"}
!46 = distinct !{!46, !"_ZN8spvtools3opt10make_rangeINS0_14TreeDFIteratorINS0_17DominatorTreeNodeEEEEENS0_13IteratorRangeIT_EEOS6_S8_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_17DominatorTreeNodeEEEE5beginEv: argument 0"}
!49 = distinct !{!49, !"_ZNK8spvtools3opt13IteratorRangeINS0_14TreeDFIteratorINS0_17DominatorTreeNodeEEEE5beginEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK8spvtools3opt10BasicBlock5ctailEv: argument 0"}
!52 = distinct !{!52, !"_ZNK8spvtools3opt10BasicBlock5ctailEv"}
!53 = !{!54, !56}
!54 = distinct !{!54, !55, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_: argument 0"}
!55 = distinct !{!55, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_"}
!56 = distinct !{!56, !57, !"_ZN8spvtools3opt14LoopDescriptor5beginEv: argument 0"}
!57 = distinct !{!57, !"_ZN8spvtools3opt14LoopDescriptor5beginEv"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_: argument 0"}
!60 = distinct !{!60, !"_ZN8spvtools3opt23PostOrderTreeDFIteratorINS0_4LoopEE5beginEPS2_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN8spvtools3opt10make_rangeINS0_23PostOrderTreeDFIteratorINS0_4LoopEEEEENS0_13IteratorRangeIT_EEOS6_S8_: argument 0"}
!63 = distinct !{!63, !"_ZN8spvtools3opt10make_rangeINS0_23PostOrderTreeDFIteratorINS0_4LoopEEEEENS0_13IteratorRangeIT_EEOS6_S8_"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK8spvtools3opt13IteratorRangeINS0_23PostOrderTreeDFIteratorINS0_4LoopEEEE5beginEv: argument 0"}
!66 = distinct !{!66, !"_ZNK8spvtools3opt13IteratorRangeINS0_23PostOrderTreeDFIteratorINS0_4LoopEEEE5beginEv"}
!67 = distinct !{!67, !11}
!68 = !{!69}
!69 = distinct !{!69, !70}
!70 = distinct !{!70, !"LVerDomain"}
!71 = !{!72}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !74}
!74 = !{!"llvm.loop.isvectorized", i32 1}
!75 = distinct !{!75, !11}
!76 = distinct !{!76, !11}
!77 = distinct !{!77, !74}
!78 = !{!79}
!79 = distinct !{!79, !80}
!80 = distinct !{!80, !"LVerDomain"}
!81 = !{!82}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !74}
!84 = distinct !{!84, !11}
!85 = distinct !{!85, !74}
!86 = !{!87}
!87 = distinct !{!87, !88}
!88 = distinct !{!88, !"LVerDomain"}
!89 = !{!90}
!90 = distinct !{!90, !88}
!91 = distinct !{!91, !74}
!92 = distinct !{!92, !11}
!93 = distinct !{!93, !11}
!94 = distinct !{!94, !74}
!95 = !{!96}
!96 = distinct !{!96, !97}
!97 = distinct !{!97, !"LVerDomain"}
!98 = !{!99}
!99 = distinct !{!99, !97}
!100 = distinct !{!100, !74}
!101 = distinct !{!101, !11}
!102 = distinct !{!102, !11}
!103 = distinct !{!103, !74}
!104 = distinct !{!104, !11}
!105 = !{!106}
!106 = distinct !{!106, !107, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!107 = distinct !{!107, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!108 = distinct !{!108, !11}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!111 = distinct !{!111, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_ISS_EEEEEEmOT_DpOT0_"}
!112 = distinct !{!112, !11}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_: argument 0"}
!115 = distinct !{!115, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_13unordered_setIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjSA_S4_S6_Lb1EEENS_21__unordered_map_equalIjSA_S6_S4_Lb1EEENS7_ISA_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISA_PvEENS_22__hash_node_destructorINS7_IST_EEEEEEmOT_DpOT0_"}
!116 = distinct !{!116, !11}
!117 = distinct !{!117, !11}
!118 = distinct !{!118, !11}
!119 = distinct !{!119, !11}
!120 = distinct !{!120, !11}
!121 = !{!122}
!122 = distinct !{!122, !123, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!123 = distinct !{!123, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!124 = distinct !{!124, !11}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!127 = distinct !{!127, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!128 = distinct !{!128, !11}
!129 = distinct !{!129, !11}
!130 = distinct !{!130, !11}
!131 = distinct !{!131, !11}
!132 = distinct !{!132, !11}
!133 = distinct !{!133, !11}
!134 = distinct !{!134, !11}
!135 = distinct !{!135, !11}
!136 = distinct !{!136, !11}
!137 = distinct !{!137, !11}
!138 = distinct !{!138, !11}
!139 = !{!140}
!140 = distinct !{!140, !141, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!141 = distinct !{!141, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
!142 = !{!143, !145}
!143 = distinct !{!143, !144, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!144 = distinct !{!144, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!145 = distinct !{!145, !146, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK8spvtools3opt4Loop7IsLCSSAEvE3$_2FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!146 = distinct !{!146, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZNK8spvtools3opt4Loop7IsLCSSAEvE3$_2FbPNS5_11InstructionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!147 = !{!148, !150}
!148 = distinct !{!148, !149, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!149 = distinct !{!149, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!150 = distinct !{!150, !151, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS5_9IRContextEPNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!151 = distinct !{!151, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt4Loop25AreAllOperandsOutsideLoopEPNS5_9IRContextEPNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!152 = distinct !{!152, !11}
!153 = distinct !{!153, !11}
!154 = distinct !{!154, !11}
!155 = distinct !{!155, !11}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashINS_4pairIjS5_EEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISO_EEEEEEmOT_DpOT0_: argument 0"}
!158 = distinct !{!158, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt4LoopEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashINS_4pairIjS5_EEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISO_EEEEEEmOT_DpOT0_"}
!159 = distinct !{!159, !11}
!160 = distinct !{!160, !11}
!161 = distinct !{!161, !11}
!162 = distinct !{!162, !11}
