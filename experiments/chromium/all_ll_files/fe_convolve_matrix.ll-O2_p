; ModuleID = '../../third_party/blink/renderer/platform/graphics/filters/fe_convolve_matrix.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/filters/fe_convolve_matrix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::FEConvolveMatrix" = type { %"class.blink::FilterEffect", %"class.blink::IntSize", float, float, %"class.blink::IntPoint", i32, i8, %"class.WTF::Vector.10" }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector", %"class.blink::Member.2", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::FilterEffect"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Filter"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.9, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.9 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.WTF::Vector.10" = type { %"class.WTF::VectorBuffer.11" }
%"class.WTF::VectorBuffer.11" = type { %"class.WTF::VectorBufferBase.12" }
%"class.WTF::VectorBufferBase.12" = type { float*, i32, i32 }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.6", %"class.blink::Member" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%struct.SkISize = type { i32, i32 }
%struct.SkIPoint = type { i32, i32 }
%"class.cc::MatrixConvolutionPaintFilter" = type { %"class.cc::PaintFilter", %struct.SkISize, %"class.base::StackVector", float, float, %struct.SkIPoint, i32, i8, %class.sk_sp }
%"class.base::StackVector" = type { %"class.base::StackContainer" }
%"class.base::StackContainer" = type { %"struct.base::StackAllocator<float, 3>::Source", %"class.base::StackAllocator", %"class.std::__1::vector" }
%"struct.base::StackAllocator<float, 3>::Source" = type { [12 x i8], i8, [3 x i8] }
%"class.base::StackAllocator" = type { %"struct.base::StackAllocator<float, 3>::Source"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float*, float*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem" = type { float* }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.base::StackAllocator" }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::TextStream" = type { %"class.WTF::StringBuilder" }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.23, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i32 }
%union.anon.23 = type { %"class.WTF::Vector.24" }
%"class.WTF::Vector.24" = type { %"class.WTF::VectorBuffer.25" }
%"class.WTF::VectorBuffer.25" = type { %"class.WTF::VectorBufferBase.26", [16 x i8] }
%"class.WTF::VectorBufferBase.26" = type { i8*, i32, i32 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.34", i32, [4 x i8], %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.172", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.182", %"class.std::__1::unique_ptr.188", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.206", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.213", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.113", %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.70" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { i64 }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.70" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.70" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.70" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::Worklist.102"* }
%"class.blink::Worklist.102" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.70" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::Worklist.109"* }
%"class.blink::Worklist.109" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.70" }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"class.blink::Worklist.116"* }
%"class.blink::Worklist.116" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.70" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::Worklist.123"* }
%"class.blink::Worklist.123" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.70" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.130", %"class.std::__1::__compressed_pair.139", %"class.std::__1::__compressed_pair.144", %"class.std::__1::__compressed_pair.146", [4 x i8] }>
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132", %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { i64 }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { float }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.155", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.164" }
%"class.WTF::Vector.164" = type { %"class.WTF::VectorBuffer.165" }
%"class.WTF::VectorBuffer.165" = type { %"class.WTF::VectorBufferBase.166" }
%"class.WTF::VectorBufferBase.166" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.180" }
%"class.WTF::VectorBuffer.180" = type { %"class.WTF::VectorBufferBase.181" }
%"class.WTF::VectorBufferBase.181" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.194" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.88"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.95"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.102"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.109"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.217", i64 }
%"class.std::__1::vector.217" = type { %"class.std::__1::__vector_base.218" }
%"class.std::__1::__vector_base.218" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.219" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.206" = type { %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.212 }
%class.scoped_refptr.212 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.213" = type { %"struct.std::__1::__atomic_base.214" }
%"struct.std::__1::__atomic_base.214" = type { %"struct.std::__1::__cxx_atomic_impl.215" }
%"struct.std::__1::__cxx_atomic_impl.215" = type { %"struct.std::__1::__cxx_atomic_base_impl.216" }
%"struct.std::__1::__cxx_atomic_base_impl.216" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.230 }
%union.anon.230 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink16FEConvolveMatrixD2Ev = comdat any

$_ZN5blink16FEConvolveMatrixD0Ev = comdat any

$_ZNK5blink12FilterEffect19GetFilterEffectTypeEv = comdat any

$_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE = comdat any

$_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv = comdat any

$_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZTVN5blink16FEConvolveMatrixE = hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::FEConvolveMatrix"*)* @_ZN5blink16FEConvolveMatrixD2Ev to i8*), i8* bitcast (void (%"class.blink::FEConvolveMatrix"*)* @_ZN5blink16FEConvolveMatrixD0Ev to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, %"class.blink::Visitor"*)* @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FEConvolveMatrix"*)* @_ZN5blink16FEConvolveMatrix17CreateImageFilterEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv to i8*), i8* bitcast (i32 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv to i8*), i8* bitcast (%"class.WTF::TextStream"* (%"class.blink::FEConvolveMatrix"*, %"class.WTF::TextStream"*, i32)* @_ZNK5blink16FEConvolveMatrix22ExternalRepresentationERN3WTF10TextStreamEi to i8*), i8* bitcast (void (%"class.blink::FilterEffect"*, i32)* @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv to i8*), i8* bitcast (i1 (%"class.blink::FilterEffect"*)* @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FilterEffect"*, %"class.blink::FloatRect"*)* @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::FEConvolveMatrix"*, %"class.blink::FloatRect"*)* @_ZNK5blink16FEConvolveMatrix9MapEffectERKNS_9FloatRectE to i8*)] }, align 8
@__const._ZN5blink16FEConvolveMatrix17CreateImageFilterEv.crop_rect = private unnamed_addr constant { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { %struct.SkRect { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } } } } } }, align 4
@.str = private unnamed_addr constant [18 x i8] c"[feConvolveMatrix\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c" order=\22\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"\22 \00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"kernelMatrix=\22\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"divisor=\22\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"bias=\22\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"target=\22\00", align 1
@.str.7 = private unnamed_addr constant [11 x i8] c"edgeMode=\22\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"preserveAlpha=\22\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"\22]\0A\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"UNKNOWN\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"DUPLICATE\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"WRAP\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"NONE\00", align 1
@.str.14 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.15 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.17 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.19 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@switch.table._ZNK5blink16FEConvolveMatrix22ExternalRepresentationERN3WTF10TextStreamEi = private unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)], align 8

@_ZN5blink16FEConvolveMatrixC1EPNS_6FilterERKNS_7IntSizeEffRKNS_8IntPointENS0_12EdgeModeTypeEbRKN3WTF6VectorIfLj0ENSA_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::FEConvolveMatrix"*, %"class.blink::Filter"*, %"class.blink::IntSize"*, float, float, %"class.blink::IntPoint"*, i32, i1, %"class.WTF::Vector.10"*), void (%"class.blink::FEConvolveMatrix"*, %"class.blink::Filter"*, %"class.blink::IntSize"*, float, float, %"class.blink::IntPoint"*, i32, i1, %"class.WTF::Vector.10"*)* @_ZN5blink16FEConvolveMatrixC2EPNS_6FilterERKNS_7IntSizeEffRKNS_8IntPointENS0_12EdgeModeTypeEbRKN3WTF6VectorIfLj0ENSA_18PartitionAllocatorEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FEConvolveMatrixC2EPNS_6FilterERKNS_7IntSizeEffRKNS_8IntPointENS0_12EdgeModeTypeEbRKN3WTF6VectorIfLj0ENSA_18PartitionAllocatorEEE(%"class.blink::FEConvolveMatrix"*, %"class.blink::Filter"*, %"class.blink::IntSize"* nocapture readonly dereferenceable(8), float, float, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8), i32, i1 zeroext, %"class.WTF::Vector.10"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %10 = zext i1 %7 to i8
  %11 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"* %11, %"class.blink::Filter"* %1) #10
  %12 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink16FEConvolveMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::IntSize"* %2 to i64*
  %15 = bitcast %"class.blink::IntSize"* %13 to i64*
  %16 = load i64, i64* %14, align 4
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 2
  store float %3, float* %17, align 8
  %18 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 3
  store float %4, float* %18, align 4
  %19 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 4
  %20 = bitcast %"class.blink::IntPoint"* %5 to i64*
  %21 = bitcast %"class.blink::IntPoint"* %19 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 8
  %23 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 5
  store i32 %6, i32* %23, align 8
  %24 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 6
  store i8 %10, i8* %24, align 4
  %25 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 7
  %26 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %8, i64 0, i32 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %25, i64 0, i32 0, i32 0, i32 0
  store float* null, float** %28, align 8
  %29 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  store i32 0, i32* %29, align 8
  %30 = icmp eq i32 %27, 0
  br i1 %30, label %40, label %31

31:                                               ; preds = %9
  %32 = zext i32 %27 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %32) #10
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #10
  %35 = ptrtoint i8* %34 to i64
  %36 = bitcast %"class.WTF::Vector.10"* %25 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = lshr i64 %33, 2
  %38 = trunc i64 %37 to i32
  store i32 %38, i32* %29, align 8
  %39 = icmp ne i8* %34, null
  br label %40

40:                                               ; preds = %31, %9
  %41 = phi i8* [ null, %9 ], [ %34, %31 ]
  %42 = phi i1 [ false, %9 ], [ %39, %31 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %8, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %8, i64 0, i32 0, i32 0, i32 0
  %47 = load float*, float** %46, align 8
  %48 = icmp ne float* %47, null
  %49 = and i1 %42, %48
  br i1 %49, label %50, label %55, !prof !2

50:                                               ; preds = %40
  %51 = load i32, i32* %43, align 4
  %52 = zext i32 %51 to i64
  %53 = bitcast float* %47 to i8*
  %54 = shl nuw nsw i64 %52, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* nonnull align 4 %53, i64 %54, i1 false) #10
  br label %55

55:                                               ; preds = %40, %50
  ret void
}

declare void @_ZN5blink12FilterEffectC2EPNS_6FilterE(%"class.blink::FilterEffect"*, %"class.blink::Filter"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink16FEConvolveMatrix9MapEffectERKNS_9FloatRectE(%"class.blink::FEConvolveMatrix"* nocapture readonly, %"class.blink::FloatRect"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %36, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %36, label %10

10:                                               ; preds = %6
  %11 = sext i32 %4 to i64
  %12 = sext i32 %8 to i64
  %13 = mul nsw i64 %12, %11
  %14 = icmp ult i64 %13, 2147483648
  br i1 %14, label %15, label %36

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i64
  %19 = icmp eq i64 %13, %18
  br i1 %19, label %20, label %36

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 4, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp sgt i32 %22, -1
  %24 = icmp slt i32 %22, %4
  %25 = and i1 %23, %24
  br i1 %25, label %26, label %36

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 4, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  %30 = icmp slt i32 %28, %8
  %31 = and i1 %29, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 2
  %34 = load float, float* %33, align 8
  %35 = fcmp une float %34, 0.000000e+00
  br i1 %35, label %42, label %36

36:                                               ; preds = %2, %26, %20, %15, %10, %6, %32
  %37 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 4
  %39 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1
  %40 = bitcast %"class.blink::FloatSize"* %39 to <2 x float>*
  %41 = load <2 x float>, <2 x float>* %40, align 4
  br label %66

42:                                               ; preds = %32
  %43 = bitcast %"class.blink::FloatRect"* %1 to <2 x float>*
  %44 = load <2 x float>, <2 x float>* %43, align 4
  %45 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %1, i64 0, i32 1
  %46 = bitcast %"class.blink::FloatSize"* %45 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  %48 = sub nsw i32 0, %22
  %49 = sub nsw i32 0, %28
  %50 = sitofp i32 %48 to float
  %51 = sitofp i32 %49 to float
  %52 = extractelement <2 x float> %44, i32 0
  %53 = fadd float %52, %50
  %54 = insertelement <2 x float> undef, float %53, i32 0
  %55 = extractelement <2 x float> %44, i32 1
  %56 = fadd float %55, %51
  %57 = insertelement <2 x float> %54, float %56, i32 1
  %58 = sitofp i32 %4 to float
  %59 = sitofp i32 %8 to float
  %60 = extractelement <2 x float> %47, i32 0
  %61 = fadd float %60, %58
  %62 = insertelement <2 x float> undef, float %61, i32 0
  %63 = extractelement <2 x float> %47, i32 1
  %64 = fadd float %63, %59
  %65 = insertelement <2 x float> %62, float %64, i32 1
  br label %66

66:                                               ; preds = %42, %36
  %67 = phi <2 x float> [ %57, %42 ], [ %38, %36 ]
  %68 = phi <2 x float> [ %65, %42 ], [ %41, %36 ]
  %69 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %67, 0
  %70 = insertvalue { <2 x float>, <2 x float> } %69, <2 x float> %68, 1
  ret { <2 x float>, <2 x float> } %70
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink16FEConvolveMatrix15ParametersValidEv(%"class.blink::FEConvolveMatrix"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %35, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 1, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, 1
  br i1 %8, label %35, label %9

9:                                                ; preds = %5
  %10 = sext i32 %3 to i64
  %11 = sext i32 %7 to i64
  %12 = mul nsw i64 %11, %10
  %13 = icmp ult i64 %12, 2147483648
  br i1 %13, label %14, label %35

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i64
  %18 = icmp eq i64 %12, %17
  br i1 %18, label %19, label %35

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 4, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %21, -1
  %23 = icmp slt i32 %21, %3
  %24 = and i1 %22, %23
  br i1 %24, label %25, label %35

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 4, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp sgt i32 %27, -1
  %29 = icmp slt i32 %27, %7
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 2
  %33 = load float, float* %32, align 8
  %34 = fcmp une float %33, 0.000000e+00
  br label %35

35:                                               ; preds = %25, %19, %1, %9, %14, %31, %5
  %36 = phi i1 [ false, %5 ], [ false, %9 ], [ false, %14 ], [ false, %19 ], [ false, %25 ], [ %34, %31 ], [ false, %1 ]
  ret i1 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16FEConvolveMatrix10SetDivisorEf(%"class.blink::FEConvolveMatrix"* nocapture, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 2
  %4 = load float, float* %3, align 8
  %5 = fcmp oeq float %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store float %1, float* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16FEConvolveMatrix7SetBiasEf(%"class.blink::FEConvolveMatrix"* nocapture, float) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 3
  %4 = load float, float* %3, align 4
  %5 = fcmp oeq float %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store float %1, float* %3, align 4
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16FEConvolveMatrix15SetTargetOffsetERKNS_8IntPointE(%"class.blink::FEConvolveMatrix"* nocapture, %"class.blink::IntPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %9, label %15

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 4, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %"class.blink::IntPoint", %"class.blink::IntPoint"* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %19, label %15

15:                                               ; preds = %2, %9
  %16 = bitcast %"class.blink::IntPoint"* %1 to i64*
  %17 = bitcast %"class.blink::IntPoint"* %3 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 8
  br label %19

19:                                               ; preds = %9, %15
  %20 = phi i1 [ true, %15 ], [ false, %9 ]
  ret i1 %20
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16FEConvolveMatrix11SetEdgeModeENS0_12EdgeModeTypeE(%"class.blink::FEConvolveMatrix"* nocapture, i32) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 5
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  br label %7

7:                                                ; preds = %2, %6
  %8 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink16FEConvolveMatrix16SetPreserveAlphaEb(%"class.blink::FEConvolveMatrix"* nocapture, i1 zeroext) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 6
  %4 = load i8, i8* %3, align 4, !range !3
  %5 = zext i8 %4 to i32
  %6 = zext i1 %1 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %10, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %3, align 4
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i1 [ true, %8 ], [ false, %2 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16FEConvolveMatrix17CreateImageFilterEv(%class.sk_sp* noalias sret, %"class.blink::FEConvolveMatrix"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp, align 8
  %4 = alloca %class.sk_sp, align 8
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %struct.SkISize*
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %struct.SkIPoint*
  %9 = alloca %"class.absl::optional", align 4
  %10 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %43, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, 1
  br i1 %16, label %43, label %17

17:                                               ; preds = %13
  %18 = sext i32 %11 to i64
  %19 = sext i32 %15 to i64
  %20 = mul nsw i64 %19, %18
  %21 = icmp ult i64 %20, 2147483648
  br i1 %21, label %22, label %43

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 7, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = icmp eq i64 %20, %25
  br i1 %26, label %27, label %43

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 4, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, -1
  %31 = icmp slt i32 %29, %11
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %43

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 4, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = icmp sgt i32 %35, -1
  %37 = icmp slt i32 %35, %15
  %38 = and i1 %36, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 2
  %41 = load float, float* %40, align 8
  %42 = fcmp une float %41, 0.000000e+00
  br i1 %42, label %45, label %43

43:                                               ; preds = %2, %33, %27, %22, %17, %13, %39
  %44 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 0
  tail call void @_ZNK5blink12FilterEffect22CreateTransparentBlackEv(%class.sk_sp* sret %0, %"class.blink::FilterEffect"* %44) #10
  br label %148

45:                                               ; preds = %39
  %46 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  %47 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  store %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*), %"class.cc::PaintFilter"** %47, align 8
  %48 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 0
  %49 = tail call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %48, i32 0) #10
  %50 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 0, i32 6
  %51 = load i32, i32* %50, align 4
  call void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* nonnull sret %4, %"class.blink::FilterEffect"* %49, i32 %51, i1 zeroext true) #10
  %52 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #10
  %53 = load i32, i32* %10, align 4
  %54 = load i32, i32* %14, align 4
  %55 = zext i32 %54 to i64
  %56 = shl nuw i64 %55, 32
  %57 = zext i32 %53 to i64
  %58 = or i64 %56, %57
  store i64 %58, i64* %5, align 8
  %59 = sext i32 %53 to i64
  %60 = sext i32 %54 to i64
  %61 = mul nsw i64 %60, %59
  %62 = icmp ult i64 %61, 2147483648
  br i1 %62, label %64, label %63, !prof !2

63:                                               ; preds = %45
  call void @llvm.trap() #10
  unreachable

64:                                               ; preds = %45
  %65 = trunc i64 %61 to i32
  %66 = load float, float* %40, align 8
  %67 = fdiv float 1.000000e+00, %66
  %68 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 3
  %69 = load float, float* %68, align 4
  %70 = fmul float %69, 2.550000e+02
  %71 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #10
  %72 = load i32, i32* %28, align 4
  %73 = load i32, i32* %34, align 4
  %74 = zext i32 %73 to i64
  %75 = shl nuw i64 %74, 32
  %76 = zext i32 %72 to i64
  %77 = or i64 %75, %76
  store i64 %77, i64* %7, align 8
  %78 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 5
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 2
  %81 = zext i1 %80 to i32
  %82 = icmp eq i32 %79, 3
  %83 = select i1 %82, i32 3, i32 %81
  %84 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 6
  %85 = load i8, i8* %84, align 4, !range !3
  %86 = shl i64 %61, 32
  %87 = ashr exact i64 %86, 30
  %88 = call i8* @_Znam(i64 %87) #11
  %89 = bitcast i8* %88 to float*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %88, i8 0, i64 %87, i1 false) #10
  %90 = icmp sgt i32 %65, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %64
  %92 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %1, i64 0, i32 7
  %93 = and i64 %61, 4294967295
  br label %135

94:                                               ; preds = %135, %64
  %95 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %95) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %95, i8* align 4 getelementptr inbounds ({ { { { i8, [3 x i8], %union.anon } } } }, { { { { i8, [3 x i8], %union.anon } } } }* @__const._ZN5blink16FEConvolveMatrix17CreateImageFilterEv.crop_rect, i64 0, i32 0, i32 0, i32 0, i32 0), i64 20, i1 false)
  call void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* nonnull sret %9, %"class.blink::FilterEffect"* %48) #10
  %96 = load i8, i8* %95, align 4, !range !3
  %97 = icmp eq i8 %96, 0
  %98 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %99 = select i1 %97, %struct.SkRect* null, %struct.SkRect* %98
  %100 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100)
  %101 = call i8* @_Znwm(i64 152) #11, !noalias !4
  %102 = bitcast i8* %101 to %"class.cc::MatrixConvolutionPaintFilter"*
  %103 = icmp ne i8 %85, 1
  %104 = bitcast %class.sk_sp* %4 to i64*
  %105 = load i64, i64* %104, align 8, !noalias !4
  store %"class.cc::PaintFilter"* null, %"class.cc::PaintFilter"** %47, align 8, !noalias !4
  %106 = bitcast %class.sk_sp* %3 to i64*
  store i64 %105, i64* %106, align 8, !noalias !4
  call void @_ZN2cc28MatrixConvolutionPaintFilterC1ERK7SkISizePKfffRK8SkIPoint10SkTileModeb5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::MatrixConvolutionPaintFilter"* nonnull %102, %struct.SkISize* nonnull dereferenceable(8) %6, float* nonnull %89, float %67, float %70, %struct.SkIPoint* nonnull dereferenceable(8) %8, i32 %83, i1 zeroext %103, %class.sk_sp* nonnull %3, %struct.SkRect* %99) #10, !noalias !4
  %107 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  %108 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %107, align 8, !noalias !4
  %109 = icmp eq %"class.cc::PaintFilter"* %108, null
  br i1 %109, label %120, label %110

110:                                              ; preds = %94
  %111 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %108, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = atomicrmw add i32* %111, i32 -1 acq_rel, !noalias !4
  %113 = icmp eq i32 %112, 1
  br i1 %113, label %114, label %120

114:                                              ; preds = %110
  %115 = bitcast %"class.cc::PaintFilter"* %108 to %class.SkRefCntBase*
  %116 = bitcast %"class.cc::PaintFilter"* %108 to void (%class.SkRefCntBase*)***
  %117 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %116, align 8, !noalias !4
  %118 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %117, i64 2
  %119 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %118, align 8, !noalias !4
  call void %119(%class.SkRefCntBase* nonnull %115) #10, !noalias !4
  br label %120

120:                                              ; preds = %114, %110, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100)
  %121 = bitcast %class.sk_sp* %0 to i8**
  store i8* %101, i8** %121, align 8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %95) #10
  call void @_ZdaPv(i8* nonnull %88) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #10
  %122 = load %"class.cc::PaintFilter"*, %"class.cc::PaintFilter"** %47, align 8
  %123 = icmp eq %"class.cc::PaintFilter"* %122, null
  br i1 %123, label %134, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.cc::PaintFilter", %"class.cc::PaintFilter"* %122, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = atomicrmw add i32* %125, i32 -1 acq_rel
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %128, label %134

128:                                              ; preds = %124
  %129 = bitcast %"class.cc::PaintFilter"* %122 to %class.SkRefCntBase*
  %130 = bitcast %"class.cc::PaintFilter"* %122 to void (%class.SkRefCntBase*)***
  %131 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %130, align 8
  %132 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %131, i64 2
  %133 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %132, align 8
  call void %133(%class.SkRefCntBase* nonnull %129) #10
  br label %134

134:                                              ; preds = %120, %124, %128
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %148

135:                                              ; preds = %135, %91
  %136 = phi i64 [ 0, %91 ], [ %145, %135 ]
  %137 = phi i32 [ 0, %91 ], [ %146, %135 ]
  %138 = xor i32 %137, -1
  %139 = add i32 %138, %65
  %140 = call dereferenceable(4) float* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.10"* %92, i32 %139) #10
  %141 = bitcast float* %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds float, float* %89, i64 %136
  %144 = bitcast float* %143 to i32*
  store i32 %142, i32* %144, align 4
  %145 = add nuw nsw i64 %136, 1
  %146 = add nuw nsw i32 %137, 1
  %147 = icmp eq i64 %145, %93
  br i1 %147, label %94, label %135

148:                                              ; preds = %134, %43
  ret void
}

declare void @_ZNK5blink12FilterEffect22CreateTransparentBlackEv(%class.sk_sp* sret, %"class.blink::FilterEffect"*) local_unnamed_addr #1

declare void @_ZN5blink20paint_filter_builder5BuildEPNS_12FilterEffectENS_18InterpolationSpaceEb(%class.sk_sp* sret, %"class.blink::FilterEffect"*, i32, i1 zeroext) local_unnamed_addr #1

declare %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"*, i32) local_unnamed_addr #1

declare void @_ZNK5blink12FilterEffect11GetCropRectEv(%"class.absl::optional"* sret, %"class.blink::FilterEffect"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink16FEConvolveMatrix22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FEConvolveMatrix"*, %"class.WTF::TextStream"* returned dereferenceable(48), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::FloatSize", align 4
  tail call void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48) %1, i32 %2) #10
  %5 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #10
  %6 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 0
  %7 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"* %6, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 0) #10
  %8 = tail call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #10
  %9 = bitcast %"class.blink::FloatSize"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sitofp i32 %11 to float
  %13 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 1, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %4, i64 0, i32 0
  store float %12, float* %16, align 4
  %17 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %4, i64 0, i32 1
  store float %15, float* %17, align 4
  %18 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_9FloatSizeE(%"class.WTF::TextStream"* dereferenceable(48) %8, %"class.blink::FloatSize"* nonnull dereferenceable(8) %4) #10
  %19 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %18, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #10
  %20 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)) #10
  %21 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 7
  %22 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0)) #10
  %23 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %39, label %26

26:                                               ; preds = %3
  %27 = add i32 %24, -1
  br label %28

28:                                               ; preds = %36, %26
  %29 = phi i32 [ 0, %26 ], [ %37, %36 ]
  %30 = call dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.10"* %21, i32 %29) #10
  %31 = load float, float* %30, align 4
  %32 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %20, float %31) #10
  %33 = icmp ult i32 %29, %27
  br i1 %33, label %34, label %36

34:                                               ; preds = %28
  %35 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.19, i64 0, i64 0)) #10
  br label %36

36:                                               ; preds = %34, %28
  %37 = add nuw i32 %29, 1
  %38 = icmp eq i32 %37, %24
  br i1 %38, label %39, label %28

39:                                               ; preds = %36, %3
  %40 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %20, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #10
  %41 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #10
  %42 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %41, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0)) #10
  %43 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 2
  %44 = load float, float* %43, align 8
  %45 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %42, float %44) #10
  %46 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %45, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #10
  %47 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %46, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0)) #10
  %48 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 3
  %49 = load float, float* %48, align 4
  %50 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"* %47, float %49) #10
  %51 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %50, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #10
  %52 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %51, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #10
  %53 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 4
  %54 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_8IntPointE(%"class.WTF::TextStream"* dereferenceable(48) %52, %"class.blink::IntPoint"* dereferenceable(8) %53) #10
  %55 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %54, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #10
  %56 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %55, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.7, i64 0, i64 0)) #10
  %57 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 5
  %58 = load i32, i32* %57, align 4
  %59 = icmp ult i32 %58, 4
  br i1 %59, label %60, label %65

60:                                               ; preds = %39
  %61 = sext i32 %58 to i64
  %62 = getelementptr inbounds [4 x i8*], [4 x i8*]* @switch.table._ZNK5blink16FEConvolveMatrix22ExternalRepresentationERN3WTF10TextStreamEi, i64 0, i64 %61
  %63 = load i8*, i8** %62, align 8
  %64 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %56, i8* %63) #10
  br label %65

65:                                               ; preds = %39, %60
  %66 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %56, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #10
  %67 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %66, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0)) #10
  %68 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 6
  %69 = load i8, i8* %68, align 4, !range !3
  %70 = icmp ne i8 %69, 0
  %71 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEb(%"class.WTF::TextStream"* %67, i1 zeroext %70) #10
  %72 = call dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"* %71, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.9, i64 0, i64 0)) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  %73 = call %"class.blink::FilterEffect"* @_ZNK5blink12FilterEffect11InputEffectEj(%"class.blink::FilterEffect"* %6, i32 0) #10
  %74 = add nsw i32 %2, 1
  %75 = bitcast %"class.blink::FilterEffect"* %73 to %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)***
  %76 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)**, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*** %75, align 8
  %77 = getelementptr inbounds %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %76, i64 6
  %78 = load %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)*, %"class.WTF::TextStream"* (%"class.blink::FilterEffect"*, %"class.WTF::TextStream"*, i32)** %77, align 8
  %79 = call dereferenceable(48) %"class.WTF::TextStream"* %78(%"class.blink::FilterEffect"* %73, %"class.WTF::TextStream"* dereferenceable(48) %1, i32 %74) #10
  ret %"class.WTF::TextStream"* %1
}

declare void @_ZN3WTF11WriteIndentERNS_10TextStreamEi(%"class.WTF::TextStream"* dereferenceable(48), i32) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEPKc(%"class.WTF::TextStream"*, i8*) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZNK5blink12FilterEffect22ExternalRepresentationERN3WTF10TextStreamEi(%"class.blink::FilterEffect"*, %"class.WTF::TextStream"* dereferenceable(48), i32) unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_8IntPointE(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::IntPoint"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN5blinklsERN3WTF10TextStreamERKNS_9FloatSizeE(%"class.WTF::TextStream"* dereferenceable(48), %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEf(%"class.WTF::TextStream"*, float) local_unnamed_addr #1

declare dereferenceable(48) %"class.WTF::TextStream"* @_ZN3WTF10TextStreamlsEb(%"class.WTF::TextStream"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16FEConvolveMatrixD2Ev(%"class.blink::FEConvolveMatrix"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink16FEConvolveMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !7

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %14) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16FEConvolveMatrixD0Ev(%"class.blink::FEConvolveMatrix"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink16FEConvolveMatrixE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  %6 = bitcast float* %4 to i8*
  br i1 %5, label %13, label %7, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11, !prof !7

11:                                               ; preds = %7
  store i32 0, i32* %8, align 4
  br label %12

12:                                               ; preds = %11, %7
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %6) #10
  store float* null, float** %3, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.blink::FEConvolveMatrix", %"class.blink::FEConvolveMatrix"* %0, i64 0, i32 0
  tail call void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"* %14) #10
  ret void
}

declare void @_ZNK5blink12FilterEffect5TraceEPNS_7VisitorE(%"class.blink::FilterEffect"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink12FilterEffect34CreateImageFilterWithoutValidationEv(%class.sk_sp* sret, %"class.blink::FilterEffect"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12FilterEffect19GetFilterEffectTypeEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12FilterEffect30SetOperatingInterpolationSpaceENS_18InterpolationSpaceE(%"class.blink::FilterEffect"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::FilterEffect", %"class.blink::FilterEffect"* %0, i64 0, i32 6
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12FilterEffect24AffectsTransparentPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12FilterEffect36MayProduceInvalidPreMultipliedPixelsEv(%"class.blink::FilterEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12FilterEffect9MapInputsERKNS_9FloatRectE(%"class.blink::FilterEffect"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink12FilterEffectD2Ev(%"class.blink::FilterEffect"*) unnamed_addr #6

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.15, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) float* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.10"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds float, float* %24, i64 %25
  ret float* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN2cc28MatrixConvolutionPaintFilterC1ERK7SkISizePKfffRK8SkIPoint10SkTileModeb5sk_spINS_11PaintFilterEEPK6SkRect(%"class.cc::MatrixConvolutionPaintFilter"*, %struct.SkISize* dereferenceable(8), float*, float, float, %struct.SkIPoint* dereferenceable(8), i32, i1 zeroext, %class.sk_sp*, %struct.SkRect*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) float* @_ZNK3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.10"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #10
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8* %14, i8* %15) #10
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #10
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  %23 = getelementptr inbounds %"class.WTF::Vector.10", %"class.WTF::Vector.10"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds float, float* %24, i64 %25
  ret float* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_Z10sk_make_spIN2cc28MatrixConvolutionPaintFilterEJR7SkISizePfRfS5_R8SkIPointR10SkTileModeRb5sk_spINS0_11PaintFilterEEP6SkRectEESB_IT_EDpOT0_: argument 0"}
!6 = distinct !{!6, !"_Z10sk_make_spIN2cc28MatrixConvolutionPaintFilterEJR7SkISizePfRfS5_R8SkIPointR10SkTileModeRb5sk_spINS0_11PaintFilterEEP6SkRectEESB_IT_EDpOT0_"}
!7 = !{!"branch_weights", i32 1, i32 2000}
