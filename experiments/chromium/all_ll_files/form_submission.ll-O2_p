; ModuleID = '../../third_party/blink/renderer/core/loader/form_submission.cc'
source_filename = "../../third_party/blink/renderer/core/loader/form_submission.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.1249", i32, [4 x i8], %"class.std::__1::unique_ptr.1387", %"class.std::__1::unique_ptr.1387", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.1393", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.1399", %"class.std::__1::unique_ptr.1405", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.1417", %"class.std::__1::unique_ptr.1423", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.212", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1249" = type { %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.1251" }
%"struct.std::__1::__compressed_pair_elem.1251" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.1252", %"class.std::__1::unique_ptr.1258", %"class.std::__1::unique_ptr.1264", %"class.std::__1::unique_ptr.1270", %"class.std::__1::unique_ptr.1276", %"class.std::__1::unique_ptr.1282", %"class.std::__1::unique_ptr.1293", %"class.std::__1::unique_ptr.1300", %"class.std::__1::unique_ptr.1300", %"class.std::__1::unique_ptr.1307", %"class.std::__1::unique_ptr.1314", %"class.std::__1::unique_ptr.1321", %"class.std::__1::unique_ptr.1321", %"class.std::__1::unique_ptr.1328", %"class.std::__1::unique_ptr.1335", %"class.std::__1::unique_ptr.1342", %"class.std::__1::unique_ptr.1367", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.1252" = type { %"class.std::__1::__compressed_pair.1253" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.1254" }
%"struct.std::__1::__compressed_pair_elem.1254" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.1258" = type { %"class.std::__1::__compressed_pair.1259" }
%"class.std::__1::__compressed_pair.1259" = type { %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.1264" = type { %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.1266" }
%"struct.std::__1::__compressed_pair_elem.1266" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.1270" = type { %"class.std::__1::__compressed_pair.1271" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.1272" }
%"struct.std::__1::__compressed_pair_elem.1272" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.1276" = type { %"class.std::__1::__compressed_pair.1277" }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.1278" }
%"struct.std::__1::__compressed_pair_elem.1278" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.1282" = type { %"class.std::__1::__compressed_pair.1283" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.1284" }
%"struct.std::__1::__compressed_pair_elem.1284" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.1285" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.1285" = type { %"struct.std::__1::__atomic_base.1286" }
%"struct.std::__1::__atomic_base.1286" = type { %"struct.std::__1::__atomic_base.1287" }
%"struct.std::__1::__atomic_base.1287" = type { %"struct.std::__1::__cxx_atomic_impl.1288" }
%"struct.std::__1::__cxx_atomic_impl.1288" = type { %"struct.std::__1::__cxx_atomic_base_impl.1289" }
%"struct.std::__1::__cxx_atomic_base_impl.1289" = type { i64 }
%"class.std::__1::unique_ptr.1293" = type { %"class.std::__1::__compressed_pair.1294" }
%"class.std::__1::__compressed_pair.1294" = type { %"struct.std::__1::__compressed_pair_elem.1295" }
%"struct.std::__1::__compressed_pair_elem.1295" = type { %"class.blink::Worklist.1296"* }
%"class.blink::Worklist.1296" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.1285" }
%"class.std::__1::unique_ptr.1300" = type { %"class.std::__1::__compressed_pair.1301" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"class.blink::Worklist.1303"* }
%"class.blink::Worklist.1303" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1285" }
%"class.std::__1::unique_ptr.1307" = type { %"class.std::__1::__compressed_pair.1308" }
%"class.std::__1::__compressed_pair.1308" = type { %"struct.std::__1::__compressed_pair_elem.1309" }
%"struct.std::__1::__compressed_pair_elem.1309" = type { %"class.blink::Worklist.1310"* }
%"class.blink::Worklist.1310" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1285" }
%"class.std::__1::unique_ptr.1314" = type { %"class.std::__1::__compressed_pair.1315" }
%"class.std::__1::__compressed_pair.1315" = type { %"struct.std::__1::__compressed_pair_elem.1316" }
%"struct.std::__1::__compressed_pair_elem.1316" = type { %"class.blink::Worklist.1317"* }
%"class.blink::Worklist.1317" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.1285" }
%"class.std::__1::unique_ptr.1321" = type { %"class.std::__1::__compressed_pair.1322" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"class.blink::Worklist.1324"* }
%"class.blink::Worklist.1324" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1285" }
%"class.std::__1::unique_ptr.1328" = type { %"class.std::__1::__compressed_pair.1329" }
%"class.std::__1::__compressed_pair.1329" = type { %"struct.std::__1::__compressed_pair_elem.1330" }
%"struct.std::__1::__compressed_pair_elem.1330" = type { %"class.blink::Worklist.1331"* }
%"class.blink::Worklist.1331" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.1285" }
%"class.std::__1::unique_ptr.1335" = type { %"class.std::__1::__compressed_pair.1336" }
%"class.std::__1::__compressed_pair.1336" = type { %"struct.std::__1::__compressed_pair_elem.1337" }
%"struct.std::__1::__compressed_pair_elem.1337" = type { %"class.blink::Worklist.1338"* }
%"class.blink::Worklist.1338" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.1285" }
%"class.std::__1::unique_ptr.1342" = type { %"class.std::__1::__compressed_pair.1343" }
%"class.std::__1::__compressed_pair.1343" = type { %"struct.std::__1::__compressed_pair_elem.1344" }
%"struct.std::__1::__compressed_pair_elem.1344" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.1345", %"class.std::__1::__compressed_pair.1353", %"class.std::__1::__compressed_pair.1358", %"class.std::__1::__compressed_pair.1360", [4 x i8] }>
%"class.std::__1::unique_ptr.1345" = type { %"class.std::__1::__compressed_pair.1346" }
%"class.std::__1::__compressed_pair.1346" = type { %"struct.std::__1::__compressed_pair_elem.1347", %"struct.std::__1::__compressed_pair_elem.1348" }
%"struct.std::__1::__compressed_pair_elem.1347" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.1348" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.1349" }
%"class.std::__1::__compressed_pair.1349" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { i64 }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.1358" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { float }
%"class.std::__1::unique_ptr.1367" = type { %"class.std::__1::__compressed_pair.1368" }
%"class.std::__1::__compressed_pair.1368" = type { %"struct.std::__1::__compressed_pair_elem.1369" }
%"struct.std::__1::__compressed_pair_elem.1369" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.1370", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1370" = type { %"class.std::__1::__compressed_pair.1371" }
%"class.std::__1::__compressed_pair.1371" = type { %"struct.std::__1::__compressed_pair_elem.1372" }
%"struct.std::__1::__compressed_pair_elem.1372" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.1379" }
%"class.WTF::Vector.1379" = type { %"class.WTF::VectorBuffer.1380" }
%"class.WTF::VectorBuffer.1380" = type { %"class.WTF::VectorBufferBase.1381" }
%"class.WTF::VectorBufferBase.1381" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.1387" = type { %"class.std::__1::__compressed_pair.1388" }
%"class.std::__1::__compressed_pair.1388" = type { %"struct.std::__1::__compressed_pair_elem.1389" }
%"struct.std::__1::__compressed_pair_elem.1389" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.1393" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.1396" }
%"class.WTF::VectorBuffer.1396" = type { %"class.WTF::VectorBufferBase.1397" }
%"class.WTF::VectorBufferBase.1397" = type { %"struct.std::__1::pair.1398"*, i32, i32 }
%"struct.std::__1::pair.1398" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.1399" = type { %"class.std::__1::__compressed_pair.1400" }
%"class.std::__1::__compressed_pair.1400" = type { %"struct.std::__1::__compressed_pair_elem.1401" }
%"struct.std::__1::__compressed_pair_elem.1401" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.1405" = type { %"class.std::__1::__compressed_pair.1406" }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.1407" }
%"struct.std::__1::__compressed_pair_elem.1407" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.1411" }
%"class.std::__1::unique_ptr.1411" = type { %"class.std::__1::__compressed_pair.1412" }
%"class.std::__1::__compressed_pair.1412" = type { %"struct.std::__1::__compressed_pair_elem.1413" }
%"struct.std::__1::__compressed_pair_elem.1413" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.1296"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.1303"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1310"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.1317"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.1324"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1645", i64 }
%"class.std::__1::vector.1645" = type { %"class.std::__1::__vector_base.1646" }
%"class.std::__1::__vector_base.1646" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1647" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"struct.std::__1::__compressed_pair_elem.1648" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.1417" = type { %"class.std::__1::__compressed_pair.1418" }
%"class.std::__1::__compressed_pair.1418" = type { %"struct.std::__1::__compressed_pair_elem.1419" }
%"struct.std::__1::__compressed_pair_elem.1419" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.1423" = type { %"class.std::__1::__compressed_pair.1424" }
%"class.std::__1::__compressed_pair.1424" = type { %"struct.std::__1::__compressed_pair_elem.1425" }
%"struct.std::__1::__compressed_pair_elem.1425" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.1429 }
%class.scoped_refptr.1429 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.212" = type { %"struct.std::__1::__atomic_base.213" }
%"struct.std::__1::__atomic_base.213" = type { %"struct.std::__1::__cxx_atomic_impl.214" }
%"struct.std::__1::__cxx_atomic_impl.214" = type { %"struct.std::__1::__cxx_atomic_base_impl.215" }
%"struct.std::__1::__cxx_atomic_base_impl.215" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.300" }
%"class.base::time_internal::TimeBase.300" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::FormSubmission::Attributes" = type { i32, i8, %"class.WTF::String", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::String" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::FormSubmission" = type { i32, %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member", %class.scoped_refptr.44, i32, i32, %"class.WTF::String", i32, %"class.std::__1::unique_ptr.64", %"class.blink::Member.135", i32, %"class.blink::Member.137", %"class.util::TokenType", %"class.std::__1::unique_ptr.660", %"class.mojo::PendingRemote.672" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HTMLFormElement"* }
%class.scoped_refptr.44 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted.45", [4 x i8], %"class.WTF::Vector.47", i64, %"class.WTF::Vector.50", i8, [7 x i8] }>
%"class.WTF::RefCounted.45" = type { %"class.base::RefCounted.46" }
%"class.base::RefCounted.46" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.47" = type { %"class.WTF::VectorBuffer.48" }
%"class.WTF::VectorBuffer.48" = type { %"class.WTF::VectorBufferBase.49" }
%"class.WTF::VectorBufferBase.49" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.50", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.55, i64, i64, %"class.absl::optional", %class.scoped_refptr.61 }
%class.scoped_refptr.55 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.56" }
%"struct.std::__1::atomic.56" = type { %"struct.std::__1::__atomic_base.57" }
%"struct.std::__1::__atomic_base.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__cxx_atomic_impl.59" }
%"struct.std::__1::__cxx_atomic_impl.59" = type { %"struct.std::__1::__cxx_atomic_base_impl.60" }
%"struct.std::__1::__cxx_atomic_base_impl.60" = type { i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.61 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.50" = type { %"class.WTF::VectorBuffer.51" }
%"class.WTF::VectorBuffer.51" = type { %"class.WTF::VectorBufferBase.52" }
%"class.WTF::VectorBufferBase.52" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::ResourceRequest"* }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.76, %class.scoped_refptr.76, %class.scoped_refptr.76, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.79, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.89", %"class.absl::optional.94", %"class.absl::optional.109", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.119", %"class.absl::optional.109", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.109", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.119", %"class.absl::optional.124", i8, %class.scoped_refptr.130 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.71" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.69 }
%union.anon.69 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.71" = type { %"class.absl::optional_internal::optional_data.72" }
%"class.absl::optional_internal::optional_data.72" = type { %"class.absl::optional_internal::optional_data_base.73" }
%"class.absl::optional_internal::optional_data_base.73" = type { %"class.absl::optional_internal::optional_data_dtor_base.74" }
%"class.absl::optional_internal::optional_data_dtor_base.74" = type { i8, %union.anon.75 }
%union.anon.75 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.76 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.364", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.71", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.76 }
%"class.WTF::RefCounted.364" = type { %"class.base::RefCounted.365" }
%"class.base::RefCounted.365" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.79 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.80", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.87, i8, %"class.url::Origin" }
%"class.base::RefCounted.80" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.81"*, %"class.std::__1::unique_ptr.81"*, %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.1698" }
%"class.std::__1::__compressed_pair.1698" = type { %"struct.std::__1::__compressed_pair_elem.1699" }
%"struct.std::__1::__compressed_pair_elem.1699" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::unique_ptr.81"* }
%class.scoped_refptr.87 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.88", [4 x i8] }>
%"class.base::RefCountedThreadSafe.88" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.94" = type { %"class.absl::optional_internal::optional_data.95" }
%"class.absl::optional_internal::optional_data.95" = type { %"class.absl::optional_internal::optional_data_base.96" }
%"class.absl::optional_internal::optional_data_base.96" = type { %"class.absl::optional_internal::optional_data_dtor_base.97" }
%"class.absl::optional_internal::optional_data_dtor_base.97" = type { i8, %union.anon.98 }
%union.anon.98 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.99", %"class.WTF::Vector.104", %"class.WTF::String" }
%"class.WTF::Vector.99" = type { %"class.WTF::VectorBuffer.100" }
%"class.WTF::VectorBuffer.100" = type { %"class.WTF::VectorBufferBase.101" }
%"class.WTF::VectorBufferBase.101" = type { %class.scoped_refptr.76*, i32, i32 }
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"class.WTF::String"*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.114", %"class.absl::optional.114" }
%"class.absl::optional.114" = type { %"class.absl::optional_internal::optional_data.115" }
%"class.absl::optional_internal::optional_data.115" = type { %"class.absl::optional_internal::optional_data_base.116" }
%"class.absl::optional_internal::optional_data_base.116" = type { %"class.absl::optional_internal::optional_data_dtor_base.117" }
%"class.absl::optional_internal::optional_data_dtor_base.117" = type { i8, %union.anon.118 }
%union.anon.118 = type { %"class.base::TimeDelta" }
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, %union.anon.113 }
%union.anon.113 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.119" = type { %"class.absl::optional_internal::optional_data.120" }
%"class.absl::optional_internal::optional_data.120" = type { %"class.absl::optional_internal::optional_data_base.121" }
%"class.absl::optional_internal::optional_data_base.121" = type { %"class.absl::optional_internal::optional_data_dtor_base.122" }
%"class.absl::optional_internal::optional_data_dtor_base.122" = type { i8, %union.anon.123 }
%union.anon.123 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.124" = type { %"class.absl::optional_internal::optional_data.125" }
%"class.absl::optional_internal::optional_data.125" = type { %"class.absl::optional_internal::optional_data_base.126" }
%"class.absl::optional_internal::optional_data_base.126" = type { %"class.absl::optional_internal::optional_data_dtor_base.127" }
%"class.absl::optional_internal::optional_data_dtor_base.127" = type { i8, %union.anon.128 }
%union.anon.128 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote.129" }
%"class.mojo::PendingRemote.129" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.130 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1703", %"class.base::internal::flat_tree.1704" }
%"class.base::RefCountedThreadSafe.1703" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.1704" = type { %"class.std::__1::vector.1705" }
%"class.std::__1::vector.1705" = type { %"class.std::__1::__vector_base.1706" }
%"class.std::__1::__vector_base.1706" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1707" }
%"class.std::__1::__compressed_pair.1707" = type { %"struct.std::__1::__compressed_pair_elem.1708" }
%"struct.std::__1::__compressed_pair_elem.1708" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.44, %"class.mojo::PendingRemote.131" }
%"class.mojo::PendingRemote.131" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.685", %"class.blink::Member.687", %"class.blink::Member.689", i8, i32, i8, i32, %"class.blink::Member.691", %"class.blink::Member.159", %"class.blink::FrameLifecycle", %"class.blink::Member.135", %"class.blink::Member.135", %"class.blink::Member.135", %"class.blink::Member.135", %"class.blink::Member.135", %"class.blink::Member.135", %"class.blink::Member.625", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.701", i8, %"class.base::UnguessableToken", %"class.absl::optional.703", %"class.absl::optional.119", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.135", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.685" = type { %"class.blink::MemberBase.686" }
%"class.blink::MemberBase.686" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.135", %"class.blink::Member.159", %"class.blink::Member.161", %"class.blink::Member.163", i8, %"class.WTF::Vector.165" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.152" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.141" }
%"class.blink::HeapVector.141" = type { %"class.WTF::Vector.144" }
%"class.WTF::Vector.144" = type { %"class.WTF::VectorBuffer.145" }
%"class.WTF::VectorBuffer.145" = type { %"class.WTF::VectorBufferBase.146", [32 x i8] }
%"class.WTF::VectorBufferBase.146" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.147" }
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::HeapVector.149"* }
%"class.blink::HeapVector.149" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.WTF::Vector.155"* }
%"class.WTF::Vector.155" = type opaque
%"class.blink::Member.161" = type { %"class.blink::MemberBase.162" }
%"class.blink::MemberBase.162" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.163" = type { %"class.blink::MemberBase.164" }
%"class.blink::MemberBase.164" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.336" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.168, %"class.std::__1::unique_ptr.290", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.170, i32 }>
%class.scoped_refptr.168 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.170, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.256", %"class.absl::optional.261", %"class.absl::optional.216", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.281", i8, [7 x i8], %class.scoped_refptr.170, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.169" }>
%"class.base::RefCountedThreadSafe.169" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.184 }
%class.scoped_refptr.184 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.185", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.185" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.186" }
%"struct.std::__1::atomic.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__cxx_atomic_impl.189" }
%"struct.std::__1::__cxx_atomic_impl.189" = type { %"struct.std::__1::__cxx_atomic_base_impl.190" }
%"struct.std::__1::__cxx_atomic_base_impl.190" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.170, %"class.std::__1::unique_ptr.193", %"class.absl::optional.202", %"struct.std::__1::atomic.212", i8, i8, i8, i8, i32, i32, %"class.absl::optional.216", %"class.std::__1::unique_ptr.221", i8, i64, %class.scoped_refptr.252, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.255" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.191 }
%class.scoped_refptr.191 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.192", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.192" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.170, i8, %"class.mojo::ScopedHandleBase.196", %class.scoped_refptr.197, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.198" }
%"class.mojo::ScopedHandleBase.196" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.197 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.198" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.202" = type { %"class.absl::optional_internal::optional_data.203" }
%"class.absl::optional_internal::optional_data.203" = type { %"class.absl::optional_internal::optional_data_base.204" }
%"class.absl::optional_internal::optional_data_base.204" = type { %"class.absl::optional_internal::optional_data_dtor_base.205" }
%"class.absl::optional_internal::optional_data_dtor_base.205" = type { i8, %union.anon.206 }
%union.anon.206 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.207", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.207" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.224", i8, i64, %class.scoped_refptr.225, %class.scoped_refptr.247 }
%"class.base::RepeatingCallback.224" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.225 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.226", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.236", i8, [7 x i8] }>
%"class.base::RefCounted.226" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.227 }
%class.scoped_refptr.227 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.228", %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::map.236" = type { %"class.std::__1::__tree.237" }
%"class.std::__1::__tree.237" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%class.scoped_refptr.247 = type { %"class.base::RefCountedData.248"* }
%"class.base::RefCountedData.248" = type opaque
%class.scoped_refptr.252 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.253 }
%class.scoped_refptr.253 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1652", [4 x i8], %"class.base::RepeatingCallback.293", %class.scoped_refptr.170, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1652" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.293" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.254 }
%class.scoped_refptr.254 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.255" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.256" = type { %"class.absl::optional_internal::optional_data.257" }
%"class.absl::optional_internal::optional_data.257" = type { %"class.absl::optional_internal::optional_data_base.258" }
%"class.absl::optional_internal::optional_data_base.258" = type { %"class.absl::optional_internal::optional_data_dtor_base.259" }
%"class.absl::optional_internal::optional_data_dtor_base.259" = type { i8, %union.anon.260 }
%union.anon.260 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.261" = type { %"class.absl::optional_internal::optional_data.262" }
%"class.absl::optional_internal::optional_data.262" = type { %"class.absl::optional_internal::optional_data_base.263" }
%"class.absl::optional_internal::optional_data_base.263" = type { %"class.absl::optional_internal::optional_data_dtor_base.264" }
%"class.absl::optional_internal::optional_data_dtor_base.264" = type { i8, [7 x i8], %union.anon.265 }
%union.anon.265 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.216" = type { %"class.absl::optional_internal::optional_data.217" }
%"class.absl::optional_internal::optional_data.217" = type { %"class.absl::optional_internal::optional_data_base.218" }
%"class.absl::optional_internal::optional_data_base.218" = type { %"class.absl::optional_internal::optional_data_dtor_base.219" }
%"class.absl::optional_internal::optional_data_dtor_base.219" = type { i8, %union.anon.220 }
%union.anon.220 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.266 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.266 = type { %"class.std::__1::map.269" }
%"class.std::__1::map.269" = type { %"class.std::__1::__tree.270" }
%"class.std::__1::__tree.270" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.275" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.280"*, i64 }
%"class.std::__1::unique_ptr.280" = type opaque
%"class.std::__1::map.281" = type { %"class.std::__1::__tree.282" }
%"class.std::__1::__tree.282" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.283", %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.293", %"class.base::OnceCallback.294", %"class.absl::optional.114", %"class.absl::optional.295", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.303", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.311", %"class.std::__1::map.322", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.331", i8, %class.scoped_refptr.170, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.332" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.294" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.295" = type { %"class.absl::optional_internal::optional_data.296" }
%"class.absl::optional_internal::optional_data.296" = type { %"class.absl::optional_internal::optional_data_base.297" }
%"class.absl::optional_internal::optional_data_base.297" = type { %"class.absl::optional_internal::optional_data_dtor_base.298" }
%"class.absl::optional_internal::optional_data_dtor_base.298" = type { i8, %union.anon.299 }
%union.anon.299 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.170, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.301" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.301" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.302 }
%class.scoped_refptr.302 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.306", %class.scoped_refptr.307 }
%"class.base::RepeatingCallback.306" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.307 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.169", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.311" = type { %"class.std::__1::__tree.312" }
%"class.std::__1::__tree.312" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.313", %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::map.322" = type { %"class.std::__1::__tree.323" }
%"class.std::__1::__tree.323" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.324", %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.base::OnceCallback.331" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.332" = type { %"class.base::internal::WeakPtrFactoryBase" }
%class.scoped_refptr.170 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.171" }>
%"class.base::RefCountedThreadSafe.171" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.336" = type { %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.691" = type { %"class.blink::MemberBase.692" }
%"class.blink::MemberBase.692" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.159" = type { %"class.blink::MemberBase.160" }
%"class.blink::MemberBase.160" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.625" = type { %"class.blink::MemberBase.626" }
%"class.blink::MemberBase.626" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.716", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.724", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.732", %"class.blink::FrameLoader", %"class.blink::Member.753", %"class.blink::Member.755", %"class.blink::Member.757", %"class.blink::Member.759", %"class.blink::Member.761", %"class.blink::Member.763", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.765", %class.scoped_refptr.767, %"class.blink::Member.768", %"class.blink::Member.770", %"class.blink::Member.772", %"class.blink::Member.774", %"class.blink::Member.776", %"class.blink::Member.778", %"class.blink::Member.780", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.782", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.785", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.791", %"class.std::__1::unique_ptr.792", %"class.absl::optional.119", i32, [4 x i8], %"class.std::__1::unique_ptr.798", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.806", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.811", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.816", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.819", %"class.blink::Member.821", %"class.blink::Member.823", %"class.blink::Member.825", %"class.mojo::StructPtr.828", %"class.blink::Member.837", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.839", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.716" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.717" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.717" = type { %"class.WTF::HashMap.720" }
%"class.WTF::HashMap.720" = type { %"class.WTF::HashTable.721" }
%"class.WTF::HashTable.721" = type <{ %"struct.WTF::KeyValuePair.723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.723" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.610", %"class.base::WeakPtrFactory.615" }
%"class.WTF::HashMap.610" = type { %"class.WTF::HashTable.611" }
%"class.WTF::HashTable.611" = type <{ %"struct.WTF::KeyValuePair.614"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.614" = type opaque
%"class.base::WeakPtrFactory.615" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.730" }
%"class.blink::Member.730" = type { %"class.blink::MemberBase.731" }
%"class.blink::MemberBase.731" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.623" }
%"class.blink::WeakMember.623" = type { %"class.blink::MemberBase.624" }
%"class.blink::MemberBase.624" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.353" }
%"class.WTF::HashTable.353" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.293", %"class.base::RepeatingCallback.1724", i64, %"class.std::__1::map.1725", i8*, i64, %"class.base::WeakPtrFactory.1734" }
%"class.base::RepeatingCallback.1724" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.1725" = type { %"class.std::__1::__tree.1726" }
%"class.std::__1::__tree.1726" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1727", %"class.std::__1::__compressed_pair.1731" }
%"class.std::__1::__compressed_pair.1727" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.1731" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.base::WeakPtrFactory.1734" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.732" = type { %"class.WTF::HashSet.735" }
%"class.WTF::HashSet.735" = type { %"class.WTF::HashTable.736" }
%"class.WTF::HashTable.736" = type <{ %"class.blink::WeakMember.738"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.738" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.625", %"class.blink::Member.739", %"class.blink::Member.741", %"class.std::__1::unique_ptr.743", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.749" }
%"class.blink::Member.739" = type { %"class.blink::MemberBase.740" }
%"class.blink::MemberBase.740" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.741" = type { %"class.blink::MemberBase.742" }
%"class.blink::MemberBase.742" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.743" = type { %"class.std::__1::__compressed_pair.744" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.745" }
%"struct.std::__1::__compressed_pair_elem.745" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.749" = type { %"class.WTF::HashTable.750" }
%"class.WTF::HashTable.750" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.753" = type { %"class.blink::MemberBase.754" }
%"class.blink::MemberBase.754" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.846", %"class.blink::Member.625", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer", i8, i32, %"class.blink::Color", %"class.absl::optional.854", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.859", %"class.blink::Member.861", %"class.blink::Member.861", %"class.std::__1::unique_ptr.864", i32, [4 x i8], %"class.WTF::HashSet.867", %"class.blink::Member.874", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.876", %"class.blink::HeapHashSet.883", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.891", i8, %"class.blink::Member.897", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.909", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.923", i8, %"class.std::__1::unique_ptr.929", %"class.std::__1::unique_ptr.1046", %"class.WTF::Vector.1052", i32, %class.scoped_refptr.1057, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1058", %"class.blink::Member.1060", %"class.blink::Member.1062", %"class.blink::HeapHashSet.1064", %"class.blink::HeapHashSet.1071", %"class.std::__1::unique_ptr.1078", %"class.std::__1::unique_ptr.1084", %"class.WTF::Vector.1090" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.846" = type { %"class.WTF::HashTable.847" }
%"class.WTF::HashTable.847" = type <{ %class.scoped_refptr.850*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.850 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.853", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.851, %"class.base::WeakPtrFactory.852" }
%class.scoped_refptr.851 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.852" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.853" = type { %"class.blink::MemberBase.754" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, %union.anon.858 }
%union.anon.858 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.859" = type { %"class.blink::MemberBase.860" }
%"class.blink::MemberBase.860" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.861" = type { %"class.blink::MemberBase.862" }
%"class.blink::MemberBase.862" = type { %"class.blink::HeapHashSet.863"* }
%"class.blink::HeapHashSet.863" = type opaque
%"class.std::__1::unique_ptr.864" = type { %"class.std::__1::__compressed_pair.865" }
%"class.std::__1::__compressed_pair.865" = type { %"struct.std::__1::__compressed_pair_elem.866" }
%"struct.std::__1::__compressed_pair_elem.866" = type { %"class.WTF::HashSet.867"* }
%"class.WTF::HashSet.867" = type { %"class.WTF::HashTable.868" }
%"class.WTF::HashTable.868" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.874" = type { %"class.blink::MemberBase.875" }
%"class.blink::MemberBase.875" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.876" = type { %"class.WTF::HashSet.879" }
%"class.WTF::HashSet.879" = type { %"class.WTF::HashTable.880" }
%"class.WTF::HashTable.880" = type <{ %"class.blink::Member.882"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.882" = type opaque
%"class.blink::HeapHashSet.883" = type { %"class.WTF::HashSet.886" }
%"class.WTF::HashSet.886" = type { %"class.WTF::HashTable.887" }
%"class.WTF::HashTable.887" = type <{ %"class.blink::Member.889"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.889" = type { %"class.blink::MemberBase.890" }
%"class.blink::MemberBase.890" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1118", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1129", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.755" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1118" = type { %"class.blink::MemberBase.1119" }
%"class.blink::MemberBase.1119" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1120", %"class.blink::Member.1121", %"class.blink::Member.1123", %"class.blink::Member.1125", %"class.blink::Member.1127", %"class.WTF::Vector.1090", i16, %class.scoped_refptr.851 }
%"class.blink::ThreadState::PrefinalizerRegistration.1120" = type { i8 }
%"class.blink::Member.1121" = type { %"class.blink::MemberBase.1122" }
%"class.blink::MemberBase.1122" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1123" = type { %"class.blink::MemberBase.1124" }
%"class.blink::MemberBase.1124" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1127" = type { %"class.blink::MemberBase.1128" }
%"class.blink::MemberBase.1128" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1129" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1130", { i64, i64 } }
%"class.blink::WeakMember.1130" = type { %"class.blink::MemberBase.890" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.891" = type { %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.897" = type { %"class.blink::MemberBase.898" }
%"class.blink::MemberBase.898" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.901", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.901" = type { %"class.WTF::HashTable.902" }
%"class.WTF::HashTable.902" = type <{ %"struct.WTF::KeyValuePair.904"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.904" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.905", i32, i32 }
%"class.WTF::Vector.905" = type { %"class.WTF::VectorBuffer.906" }
%"class.WTF::VectorBuffer.906" = type { %"class.WTF::VectorBufferBase.907" }
%"class.WTF::VectorBufferBase.907" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.909" = type { %"class.WTF::LinkedHashSet.912" }
%"class.WTF::LinkedHashSet.912" = type { %"class.WTF::HashMap.913", %"class.WTF::VectorBackedLinkedList.917" }
%"class.WTF::HashMap.913" = type { %"class.WTF::HashTable.914" }
%"class.WTF::HashTable.914" = type <{ %"struct.WTF::KeyValuePair.916"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.916" = type opaque
%"class.WTF::VectorBackedLinkedList.917" = type { %"class.WTF::Vector.918", i32, i32 }
%"class.WTF::Vector.918" = type { %"class.WTF::VectorBuffer.919" }
%"class.WTF::VectorBuffer.919" = type { %"class.WTF::VectorBufferBase.920" }
%"class.WTF::VectorBufferBase.920" = type { %"class.WTF::VectorBackedLinkedListNode.921"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.921" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.923" = type { %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.932, %class.scoped_refptr.932, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1023", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1028", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.932 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.933", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.940" }
%"class.WTF::RefCounted.933" = type { %"class.base::RefCounted.934" }
%"class.base::RefCounted.934" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.935", i32, [4 x i8] }>
%"class.WTF::Vector.935" = type { %"class.WTF::VectorBuffer.936" }
%"class.WTF::VectorBuffer.936" = type { %"class.WTF::VectorBufferBase.937" }
%"class.WTF::VectorBufferBase.937" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.940" = type { %"class.WTF::VectorBuffer.941" }
%"class.WTF::VectorBuffer.941" = type { %"class.WTF::VectorBufferBase.942" }
%"class.WTF::VectorBufferBase.942" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.946", %"class.std::__1::unique_ptr.995", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.943, %class.scoped_refptr.944, %class.scoped_refptr.945 }
%class.scoped_refptr.943 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.959", i8, i8, %class.scoped_refptr.943, i32, i32 }
%"class.WTF::RefCounted.959" = type { %"class.base::RefCounted.960" }
%"class.base::RefCounted.960" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.944 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1113" }
%"class.blink::PaintPropertyNode.1113" = type { %"class.WTF::RefCounted.1114", i8, i8, %class.scoped_refptr.944, i32, i32 }
%"class.WTF::RefCounted.1114" = type { %"class.base::RefCounted.1115" }
%"class.base::RefCounted.1115" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.945 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1110" }
%"class.blink::PaintPropertyNode.1110" = type { %"class.WTF::RefCounted.1111", i8, i8, %class.scoped_refptr.945, i32, i32 }
%"class.WTF::RefCounted.1111" = type { %"class.base::RefCounted.1112" }
%"class.base::RefCounted.1112" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.948" }
%"struct.std::__1::__compressed_pair_elem.948" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.949", %"class.WTF::Vector.954", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.949" = type { %"class.WTF::VectorBuffer.950" }
%"class.WTF::VectorBuffer.950" = type { %"class.WTF::VectorBufferBase.951" }
%"class.WTF::VectorBufferBase.951" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.954" = type { %"class.WTF::VectorBuffer.955" }
%"class.WTF::VectorBuffer.955" = type { %"class.WTF::VectorBufferBase.956" }
%"class.WTF::VectorBufferBase.956" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.974" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.967, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.968", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.961" }
%"class.blink::FloatSize" = type { float, float }
%"class.std::__1::unique_ptr.961" = type { %"class.std::__1::__compressed_pair.962" }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.963" }
%"struct.std::__1::__compressed_pair_elem.963" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.967 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1095", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1095" = type { %"class.WTF::RefCounted.1096", i8, i8, %class.scoped_refptr.967, i32, i32 }
%"class.WTF::RefCounted.1096" = type { %"class.base::RefCounted.1097" }
%"class.base::RefCounted.1097" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1098" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1098" = type { %"class.absl::optional_internal::optional_data.1099" }
%"class.absl::optional_internal::optional_data.1099" = type { %"class.absl::optional_internal::optional_data_base.1100" }
%"class.absl::optional_internal::optional_data_base.1100" = type { %"class.absl::optional_internal::optional_data_dtor_base.1101" }
%"class.absl::optional_internal::optional_data_dtor_base.1101" = type { i8, %union.anon.1102 }
%union.anon.1102 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1103", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1103" = type { %"class.std::__1::__vector_base.1104" }
%"class.std::__1::__vector_base.1104" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1105" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.968" = type { %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.974" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.977", %"class.std::__1::unique_ptr.983", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.983" = type { %"class.std::__1::__compressed_pair.984" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.985" }
%"struct.std::__1::__compressed_pair_elem.985" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.995" = type { %"class.std::__1::__compressed_pair.996" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.998", %"class.absl::optional.998" }
%"class.absl::optional.998" = type { %"class.absl::optional_internal::optional_data.999" }
%"class.absl::optional_internal::optional_data.999" = type { %"class.absl::optional_internal::optional_data_base.1000" }
%"class.absl::optional_internal::optional_data_base.1000" = type { %"class.absl::optional_internal::optional_data_dtor_base.1001" }
%"class.absl::optional_internal::optional_data_dtor_base.1001" = type { i8, [3 x i8], %union.anon.1002 }
%union.anon.1002 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.940"*, %"class.absl::optional.1008", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1008" = type { %"class.absl::optional_internal::optional_data.1009" }
%"class.absl::optional_internal::optional_data.1009" = type { %"class.absl::optional_internal::optional_data_base.1010" }
%"class.absl::optional_internal::optional_data_base.1010" = type { %"class.absl::optional_internal::optional_data_dtor_base.1011" }
%"class.absl::optional_internal::optional_data_dtor_base.1011" = type { i8, %union.anon.1012 }
%union.anon.1012 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1013", %"class.WTF::Vector.1018" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015", [128 x i8] }
%"class.WTF::VectorBufferBase.1015" = type { i32*, i32, i32 }
%"class.WTF::Vector.1018" = type { %"class.WTF::VectorBuffer.1019" }
%"class.WTF::VectorBuffer.1019" = type { %"class.WTF::VectorBufferBase.1020", [128 x i8] }
%"class.WTF::VectorBufferBase.1020" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1023" = type { %"class.WTF::VectorBuffer.1024" }
%"class.WTF::VectorBuffer.1024" = type { %"class.WTF::VectorBufferBase.1025" }
%"class.WTF::VectorBufferBase.1025" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1028" = type { %"class.WTF::HashTable.1029" }
%"class.WTF::HashTable.1029" = type <{ %"struct.WTF::KeyValuePair.1032"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1032" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1033", %"class.WTF::Vector.1038" }
%"class.WTF::HashMap.1033" = type { %"class.WTF::HashTable.1034" }
%"class.WTF::HashTable.1034" = type <{ %"struct.WTF::KeyValuePair.1037"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1037" = type opaque
%"class.WTF::Vector.1038" = type { %"class.WTF::VectorBuffer.1039" }
%"class.WTF::VectorBuffer.1039" = type { %"class.WTF::VectorBufferBase.1040" }
%"class.WTF::VectorBufferBase.1040" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1046" = type { %"class.std::__1::__compressed_pair.1047" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1052" = type { %"class.WTF::VectorBuffer.1053" }
%"class.WTF::VectorBuffer.1053" = type { %"class.WTF::VectorBufferBase.1054" }
%"class.WTF::VectorBufferBase.1054" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1057 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1062" = type { %"class.blink::MemberBase.1063" }
%"class.blink::MemberBase.1063" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1064" = type { %"class.WTF::HashSet.1067" }
%"class.WTF::HashSet.1067" = type { %"class.WTF::HashTable.1068" }
%"class.WTF::HashTable.1068" = type <{ %"class.blink::WeakMember.1070"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1070" = type opaque
%"class.blink::HeapHashSet.1071" = type { %"class.WTF::HashSet.1074" }
%"class.WTF::HashSet.1074" = type { %"class.WTF::HashTable.1075" }
%"class.WTF::HashTable.1075" = type <{ %"class.blink::WeakMember.1077"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1077" = type opaque
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1084" = type { %"class.std::__1::__compressed_pair.1085" }
%"class.std::__1::__compressed_pair.1085" = type { %"struct.std::__1::__compressed_pair_elem.1086" }
%"struct.std::__1::__compressed_pair_elem.1086" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional", i32, i32, i32, i8, [3 x i8] }>
%"class.WTF::Vector.1090" = type { %"class.WTF::VectorBuffer.1091" }
%"class.WTF::VectorBuffer.1091" = type { %"class.WTF::VectorBufferBase.1092" }
%"class.WTF::VectorBufferBase.1092" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.blink::Member.755" = type { %"class.blink::MemberBase.756" }
%"class.blink::MemberBase.756" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.13" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.4", %"class.blink::Member.4" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.4", %"class.blink::Member.6", %"class.blink::Member.4", %"class.blink::Member.4", %"class.blink::Member.8" }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1131", %"class.blink::Member.494", %"class.blink::Member.6", %"class.blink::Member.1133", %"class.blink::Member.1133", %"class.blink::Member.1155", %"class.blink::Member.1157", %"class.blink::Member.1159", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.1161", %"class.blink::HeapVector.1163" }
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable.1206", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.1090", %"class.WTF::Vector.1090", i8, i32, %"class.blink::Member.137", %"class.blink::Member.399", %"class.blink::Member.1214", %"class.blink::Member.1216", %"class.blink::Member.1218", %"class.blink::Member.1220", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1222", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1228", %"class.blink::Member.1230", %"class.blink::Member.1169", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1232", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1432", %"class.blink::HeapVector.1148", %"class.blink::Member.755", %"class.blink::Member.636", %"class.blink::Member.755", %"class.blink::Member.755", %"class.blink::Member.755", %"class.blink::UserActionElementSet", %"class.blink::Member.1441", double, double, i64, i64, %"class.blink::HeapHashSet.1443", %"class.blink::HeapHashSet.1450", i16, i8, %"class.blink::Member.1457", %"class.blink::Member.1459", %"class.blink::Member.1461", %"class.blink::Member.1463", %"class.blink::TextLinkColors", %"class.blink::Member.1465", i8, [7 x i8], %"class.blink::HeapHashMap.1467", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.755", %"class.WTF::Vector.1474", %"class.blink::Member.1479", %"class.blink::Member.1481", i8, %"class.blink::Member.755", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1483", %"class.blink::HeapVector.1485", %"class.std::__1::unique_ptr.1493", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1499", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1512", %"class.WTF::Vector.1514", i8, i8, %"class.std::__1::unique_ptr.1519", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.1148", %"class.blink::HeapVector.1525", i32, i8, %"class.blink::HeapTaskRunnerTimer.1432", %"class.blink::HeapTaskRunnerTimer.1432", %"class.blink::DocumentTiming", %"class.blink::Member.1533", i8, i32, %"class.blink::Member.1535", %"class.blink::Member.1537", %"class.blink::Member.1539", %"class.blink::HeapTaskRunnerTimer.1432", %"class.blink::Member.1541", %"class.WTF::HashMap.1543", %"class.blink::Member.1548", %"class.blink::Member.1550", %"class.blink::Member.1552", %"class.blink::Member.1554", %"class.blink::Member.494", %"class.blink::Member.494", %"class.blink::HeapTaskRunnerTimer.1432", %"class.blink::HeapHashSet.1556", i8, i32, %"class.blink::Member.1563", %"class.blink::Member.1565", i32, %"class.blink::Member.1567", %"class.blink::Member.1569", %"class.blink::Member.1571", %"class.std::__1::unique_ptr.1573", i64, %"class.std::__1::unique_ptr.1579", i32, i32, %"class.blink::Member.1585", %"class.blink::Member.1587", %"class.blink::Member.1589", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1591", %"class.WTF::Vector.647", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1593", %"class.blink::Member.1600", %"class.std::__1::unique_ptr.1602", %"class.blink::Member.1608", i8, i8, %"class.WTF::String", %"class.blink::Member.1610", i8, [7 x i8], %"class.blink::HeapHashMap.1612", %"class.blink::HeapObserverSet.1619", %"class.blink::Member.1627", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1629", i32, i8, i8, %"class.blink::WeakMember.1631", %"class.blink::Member.1632" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable.1206" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1207" }
%"class.blink::HeapHashMap.1207" = type { %"class.WTF::HashMap.1210" }
%"class.WTF::HashMap.1210" = type { %"class.WTF::HashTable.1211" }
%"class.WTF::HashTable.1211" = type <{ %"struct.WTF::KeyValuePair.1213"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1213" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.405", i32, i8, [3 x i8], %"class.blink::HeapVector.407", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.415", %"class.blink::Member.417", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.426", %"class.blink::Member.480", %"class.blink::Member.482", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.344" }
%"class.blink::HeapHashMap.344" = type { %"class.WTF::HashMap.347" }
%"class.WTF::HashMap.347" = type { %"class.WTF::HashTable.348" }
%"class.WTF::HashTable.348" = type <{ %"struct.WTF::KeyValuePair.350"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.350" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.355" }
%"class.blink::Supplementable.355" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.356" }
%"class.blink::HeapHashMap.356" = type { %"class.WTF::HashMap.359" }
%"class.WTF::HashMap.359" = type { %"class.WTF::HashTable.360" }
%"class.WTF::HashTable.360" = type <{ %"struct.WTF::KeyValuePair.362"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.362" = type { i8*, %"class.blink::Member.1712" }
%"class.blink::Member.1712" = type { %"class.blink::MemberBase.1713" }
%"class.blink::MemberBase.1713" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1714" }
%"class.blink::Member.1714" = type { %"class.blink::MemberBase.1715" }
%"class.blink::MemberBase.1715" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.363, %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.366", %"class.std::__1::unique_ptr.393", %"class.std::__1::unique_ptr.393", %"class.blink::Member.399", i32, [4 x i8], %"class.WTF::HashSet.401", i32, i32 }
%class.scoped_refptr.363 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.369", %"class.std::__1::map.380", %"class.std::__1::map.389"* }
%"class.std::__1::map.369" = type { %"class.std::__1::__tree.370" }
%"class.std::__1::__tree.370" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.371", %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::map.380" = type { %"class.std::__1::__tree.381" }
%"class.std::__1::__tree.381" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.382", %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.229" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::map.389" = type opaque
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.401" = type { %"class.WTF::HashTable.402" }
%"class.WTF::HashTable.402" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.407" = type { %"class.WTF::Vector.410" }
%"class.WTF::Vector.410" = type { %"class.WTF::VectorBuffer.411" }
%"class.WTF::VectorBuffer.411" = type { %"class.WTF::VectorBufferBase.412" }
%"class.WTF::VectorBufferBase.412" = type { %"class.blink::Member.413"*, i32, i32 }
%"class.blink::Member.413" = type opaque
%"class.blink::Member.415" = type { %"class.blink::MemberBase.416" }
%"class.blink::MemberBase.416" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.419", i32, i32 }
%"class.blink::HeapHashMap.419" = type { %"class.WTF::HashMap.422" }
%"class.WTF::HashMap.422" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"struct.WTF::KeyValuePair.425"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.425" = type opaque
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.429" }
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.432" }
%"class.WTF::Vector.432" = type { %"class.WTF::VectorBuffer.433" }
%"class.WTF::VectorBuffer.433" = type { %"class.WTF::VectorBufferBase.434" }
%"class.WTF::VectorBufferBase.434" = type { %"class.mojo::StructPtr.435"*, i32, i32 }
%"class.mojo::StructPtr.435" = type { %"class.std::__1::unique_ptr.436" }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.439", %"class.WTF::HashMap.446", %"class.WTF::HashMap.451", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.104", i32, %"class.mojo::StructPtr.456", %"class.WTF::Vector.104" }
%"class.mojo::StructPtr.439" = type { %"class.std::__1::unique_ptr.440" }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.446" = type { %"class.WTF::HashTable.447" }
%"class.WTF::HashTable.447" = type <{ %"struct.WTF::KeyValuePair.450"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.450" = type opaque
%"class.WTF::HashMap.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ %"struct.WTF::KeyValuePair.455"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.455" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.456" = type { %"class.std::__1::unique_ptr.457" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.104", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.471" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.290", i32 }>
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1214" = type { %"class.blink::MemberBase.1215" }
%"class.blink::MemberBase.1215" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1216" = type { %"class.blink::MemberBase.1217" }
%"class.blink::MemberBase.1217" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1218" = type { %"class.blink::MemberBase.1219" }
%"class.blink::MemberBase.1219" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1220" = type { %"class.blink::MemberBase.1221" }
%"class.blink::MemberBase.1221" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.1228" = type { %"class.blink::MemberBase.1229" }
%"class.blink::MemberBase.1229" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1230" = type { %"class.blink::MemberBase.1231" }
%"class.blink::MemberBase.1231" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.1169" = type { %"class.blink::MemberBase.1170" }
%"class.blink::MemberBase.1170" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.1171", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.1173, %"class.WTF::Vector.1174", %"class.WTF::Vector.1174", %"class.blink::Member.4", %"class.blink::Member.1179", %"class.blink::HeapHashSet.1183", %"class.blink::Member.494", %"class.WTF::HashSet.1190", %"class.WTF::TextPosition", %"class.blink::Member.1194", %"class.blink::HeapVector.1196", %"class.blink::Member.1203" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.1171" = type { %"class.blink::MemberBase.1172" }
%"class.blink::MemberBase.1172" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.1173 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.1174" = type { %"class.WTF::VectorBuffer.1175" }
%"class.WTF::VectorBuffer.1175" = type { %"class.WTF::VectorBufferBase.1176" }
%"class.WTF::VectorBufferBase.1176" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.1179" = type { %"class.blink::MemberBase.1180" }
%"class.blink::MemberBase.1180" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.1181" }
%"class.blink::Member.1181" = type { %"class.blink::MemberBase.1182" }
%"class.blink::MemberBase.1182" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.1183" = type { %"class.WTF::HashSet.1186" }
%"class.WTF::HashSet.1186" = type { %"class.WTF::HashTable.1187" }
%"class.WTF::HashTable.1187" = type <{ %"class.blink::WeakMember.1189"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1189" = type { %"class.blink::MemberBase.7" }
%"class.WTF::HashSet.1190" = type { %"class.WTF::HashTable.1191" }
%"class.WTF::HashTable.1191" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.1194" = type { %"class.blink::MemberBase.1195" }
%"class.blink::MemberBase.1195" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.1196" = type { %"class.WTF::Vector.1199" }
%"class.WTF::Vector.1199" = type { %"class.WTF::VectorBuffer.1200" }
%"class.WTF::VectorBuffer.1200" = type { %"class.WTF::VectorBufferBase.1201" }
%"class.WTF::VectorBufferBase.1201" = type { %"class.blink::Member.1179"*, i32, i32 }
%"class.blink::Member.1203" = type { %"class.blink::MemberBase.1204" }
%"class.blink::MemberBase.1204" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.WTF::Vector.1232" = type { %"class.WTF::VectorBuffer.1233" }
%"class.WTF::VectorBuffer.1233" = type { %"class.WTF::VectorBufferBase.1234" }
%"class.WTF::VectorBufferBase.1234" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1235 }
%class.scoped_refptr.1235 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1236", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.1236" = type { %"class.base::RefCounted.1237" }
%"class.base::RefCounted.1237" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1240" }
%"class.blink::HeapHashMap.1240" = type { %"class.WTF::HashMap.1243" }
%"class.WTF::HashMap.1243" = type { %"class.WTF::HashTable.1244" }
%"class.WTF::HashTable.1244" = type <{ %"struct.WTF::KeyValuePair.1246"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1246" = type { %"class.blink::WeakMember.1247", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1247" = type { %"class.blink::MemberBase.1248" }
%"class.blink::MemberBase.1248" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.494", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.4", %"class.blink::Member.4", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1434" }
%"class.blink::HeapHashMap.1434" = type { %"class.WTF::HashMap.1437" }
%"class.WTF::HashMap.1437" = type { %"class.WTF::HashTable.1438" }
%"class.WTF::HashTable.1438" = type <{ %"struct.WTF::KeyValuePair.1440"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1440" = type opaque
%"class.blink::Member.1441" = type { %"class.blink::MemberBase.1442" }
%"class.blink::MemberBase.1442" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1443" = type { %"class.WTF::HashSet.1446" }
%"class.WTF::HashSet.1446" = type { %"class.WTF::HashTable.1447" }
%"class.WTF::HashTable.1447" = type <{ %"class.blink::WeakMember.1449"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1449" = type opaque
%"class.blink::HeapHashSet.1450" = type { %"class.WTF::HashSet.1453" }
%"class.WTF::HashSet.1453" = type { %"class.WTF::HashTable.1454" }
%"class.WTF::HashTable.1454" = type <{ %"class.blink::WeakMember.1456"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1456" = type opaque
%"class.blink::Member.1457" = type { %"class.blink::MemberBase.1458" }
%"class.blink::MemberBase.1458" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1459" = type { %"class.blink::MemberBase.1460" }
%"class.blink::MemberBase.1460" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.1461" = type { %"class.blink::MemberBase.1462" }
%"class.blink::MemberBase.1462" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.6", %"class.blink::HeapVector.1163" }
%"class.blink::Member.1463" = type { %"class.blink::MemberBase.1464" }
%"class.blink::MemberBase.1464" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1467" = type { %"class.WTF::HashMap.1470" }
%"class.WTF::HashMap.1470" = type { %"class.WTF::HashTable.1471" }
%"class.WTF::HashTable.1471" = type <{ %"struct.WTF::KeyValuePair.1473"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1473" = type opaque
%"class.WTF::Vector.1474" = type { %"class.WTF::VectorBuffer.1475" }
%"class.WTF::VectorBuffer.1475" = type { %"class.WTF::VectorBufferBase.1476" }
%"class.WTF::VectorBufferBase.1476" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1485" = type { %"class.WTF::Vector.1488" }
%"class.WTF::Vector.1488" = type { %"class.WTF::VectorBuffer.1489" }
%"class.WTF::VectorBuffer.1489" = type { %"class.WTF::VectorBufferBase.1490" }
%"class.WTF::VectorBufferBase.1490" = type { %"class.blink::Member.1491"*, i32, i32 }
%"class.blink::Member.1491" = type opaque
%"class.std::__1::unique_ptr.1493" = type { %"class.std::__1::__compressed_pair.1494" }
%"class.std::__1::__compressed_pair.1494" = type { %"struct.std::__1::__compressed_pair_elem.1495" }
%"struct.std::__1::__compressed_pair_elem.1495" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.1499" = type { %"class.WTF::HashSet.1502" }
%"class.WTF::HashSet.1502" = type { %"class.WTF::HashTable.1503" }
%"class.WTF::HashTable.1503" = type <{ %"class.blink::WeakMember.1505"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1505" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1506", i32, [4 x i8] }>
%"class.WTF::Vector.1506" = type { %"class.WTF::VectorBuffer.1507" }
%"class.WTF::VectorBuffer.1507" = type { %"class.WTF::VectorBufferBase.1508" }
%"class.WTF::VectorBufferBase.1508" = type { %"struct.std::__1::pair.1509"*, i32, i32 }
%"struct.std::__1::pair.1509" = type opaque
%"class.blink::Member.1512" = type { %"class.blink::MemberBase.1513" }
%"class.blink::MemberBase.1513" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1514" = type { %"class.WTF::VectorBuffer.1515" }
%"class.WTF::VectorBuffer.1515" = type { %"class.WTF::VectorBufferBase.1516" }
%"class.WTF::VectorBufferBase.1516" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1519" = type { %"class.std::__1::__compressed_pair.1520" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1148" = type { %"class.WTF::Vector.1151" }
%"class.WTF::Vector.1151" = type { %"class.WTF::VectorBuffer.1152" }
%"class.WTF::VectorBuffer.1152" = type { %"class.WTF::VectorBufferBase.1153" }
%"class.WTF::VectorBufferBase.1153" = type { %"class.blink::Member.755"*, i32, i32 }
%"class.blink::HeapVector.1525" = type { %"class.WTF::Vector.1528" }
%"class.WTF::Vector.1528" = type { %"class.WTF::VectorBuffer.1529" }
%"class.WTF::VectorBuffer.1529" = type { %"class.WTF::VectorBufferBase.1530" }
%"class.WTF::VectorBufferBase.1530" = type { %"class.blink::Member.1531"*, i32, i32 }
%"class.blink::Member.1531" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.494" }
%"class.blink::Member.1533" = type { %"class.blink::MemberBase.1534" }
%"class.blink::MemberBase.1534" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1535" = type { %"class.blink::MemberBase.1536" }
%"class.blink::MemberBase.1536" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1537" = type { %"class.blink::MemberBase.1538" }
%"class.blink::MemberBase.1538" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1543" = type { %"class.WTF::HashTable.1544" }
%"class.WTF::HashTable.1544" = type <{ %"struct.WTF::KeyValuePair.1547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1547" = type opaque
%"class.blink::Member.1548" = type { %"class.blink::MemberBase.1549" }
%"class.blink::MemberBase.1549" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1550" = type { %"class.blink::MemberBase.1551" }
%"class.blink::MemberBase.1551" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1552" = type { %"class.blink::MemberBase.1553" }
%"class.blink::MemberBase.1553" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1554" = type { %"class.blink::MemberBase.1555" }
%"class.blink::MemberBase.1555" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1432" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1433", { i64, i64 } }
%"class.blink::WeakMember.1433" = type { %"class.blink::MemberBase.495" }
%"class.blink::HeapHashSet.1556" = type { %"class.WTF::HashSet.1559" }
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ %"class.blink::Member.1562"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1562" = type opaque
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1567" = type { %"class.blink::MemberBase.1568" }
%"class.blink::MemberBase.1568" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1569" = type { %"class.blink::MemberBase.1570" }
%"class.blink::MemberBase.1570" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1571" = type { %"class.blink::MemberBase.1572" }
%"class.blink::MemberBase.1572" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1573" = type { %"class.std::__1::__compressed_pair.1574" }
%"class.std::__1::__compressed_pair.1574" = type { %"struct.std::__1::__compressed_pair_elem.1575" }
%"struct.std::__1::__compressed_pair_elem.1575" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1579" = type { %"class.std::__1::__compressed_pair.1580" }
%"class.std::__1::__compressed_pair.1580" = type { %"struct.std::__1::__compressed_pair_elem.1581" }
%"struct.std::__1::__compressed_pair_elem.1581" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1585" = type { %"class.blink::MemberBase.1586" }
%"class.blink::MemberBase.1586" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1591" = type { %"class.blink::MemberBase.1592" }
%"class.blink::MemberBase.1592" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.647" = type { %"class.WTF::VectorBuffer.648" }
%"class.WTF::VectorBuffer.648" = type { %"class.WTF::VectorBufferBase.649" }
%"class.WTF::VectorBufferBase.649" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1593" = type { %"class.WTF::HashMap.1596" }
%"class.WTF::HashMap.1596" = type { %"class.WTF::HashTable.1597" }
%"class.WTF::HashTable.1597" = type <{ %"struct.WTF::KeyValuePair.1599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1599" = type opaque
%"class.blink::Member.1600" = type { %"class.blink::MemberBase.1601" }
%"class.blink::MemberBase.1601" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1602" = type { %"class.std::__1::__compressed_pair.1603" }
%"class.std::__1::__compressed_pair.1603" = type { %"struct.std::__1::__compressed_pair_elem.1604" }
%"struct.std::__1::__compressed_pair_elem.1604" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1608" = type { %"class.blink::MemberBase.1609" }
%"class.blink::MemberBase.1609" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1610" = type { %"class.blink::MemberBase.1611" }
%"class.blink::MemberBase.1611" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1612" = type { %"class.WTF::HashMap.1615" }
%"class.WTF::HashMap.1615" = type { %"class.WTF::HashTable.1616" }
%"class.WTF::HashTable.1616" = type <{ %"struct.WTF::KeyValuePair.1618"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1618" = type opaque
%"class.blink::HeapObserverSet.1619" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1620" }
%"class.blink::HeapHashSet.1620" = type { %"class.WTF::HashSet.1623" }
%"class.WTF::HashSet.1623" = type { %"class.WTF::HashTable.1624" }
%"class.WTF::HashTable.1624" = type <{ %"class.blink::WeakMember.1626"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1626" = type opaque
%"class.blink::Member.1627" = type { %"class.blink::MemberBase.1628" }
%"class.blink::MemberBase.1628" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1629" = type { %"class.blink::MemberBase.1630" }
%"class.blink::MemberBase.1630" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.494", %"class.blink::HeapHashSet.1636", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1643", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1636" = type { %"class.WTF::HashSet.1639" }
%"class.WTF::HashSet.1639" = type { %"class.WTF::HashTable.1640" }
%"class.WTF::HashTable.1640" = type <{ %"class.blink::Member.1642"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1642" = type opaque
%"class.blink::HeapTaskRunnerTimer.1643" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1644", { i64, i64 } }
%"class.blink::WeakMember.1644" = type { %"class.blink::MemberBase.1630" }
%"class.blink::WeakMember.1631" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::Node"* }
%"class.blink::Member.1632" = type { %"class.blink::MemberBase.1633" }
%"class.blink::MemberBase.1633" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.1137" }
%"class.blink::HeapHashMap.1137" = type { %"class.WTF::HashMap.1140" }
%"class.WTF::HashMap.1140" = type { %"class.WTF::HashTable.1141" }
%"class.WTF::HashTable.1141" = type <{ %"struct.WTF::KeyValuePair.1143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1143" = type { %"class.WTF::AtomicString", %"class.blink::Member.1144" }
%"class.blink::Member.1144" = type { %"class.blink::MemberBase.1145" }
%"class.blink::MemberBase.1145" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.755", i32, %"class.blink::HeapVector.1148" }
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.1157" = type { %"class.blink::MemberBase.1158" }
%"class.blink::MemberBase.1158" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.1159" = type { %"class.blink::MemberBase.1160" }
%"class.blink::MemberBase.1160" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.26" }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::HeapHashMap.28"* }
%"class.blink::HeapHashMap.28" = type opaque
%"class.blink::Member.1161" = type { %"class.blink::MemberBase.1162" }
%"class.blink::MemberBase.1162" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.1163" = type { %"class.WTF::Vector.1166" }
%"class.WTF::Vector.1166" = type { %"class.WTF::VectorBuffer.1167" }
%"class.WTF::VectorBuffer.1167" = type { %"class.WTF::VectorBufferBase.1168" }
%"class.WTF::VectorBufferBase.1168" = type { %"class.blink::Member.1169"*, i32, i32 }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.13" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.17", %"class.blink::Member.19", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.17" = type { %"class.WTF::SingleThreadedBitField.18" }
%"class.WTF::SingleThreadedBitField.18" = type { i32 }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.22", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.759" = type { %"class.blink::MemberBase.760" }
%"class.blink::MemberBase.760" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.761" = type { %"class.blink::MemberBase.762" }
%"class.blink::MemberBase.762" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.767 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.768" = type { %"class.blink::MemberBase.769" }
%"class.blink::MemberBase.769" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.770" = type { %"class.blink::MemberBase.771" }
%"class.blink::MemberBase.771" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.772" = type { %"class.blink::MemberBase.773" }
%"class.blink::MemberBase.773" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.774" = type { %"class.blink::MemberBase.775" }
%"class.blink::MemberBase.775" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.776" = type { %"class.blink::MemberBase.777" }
%"class.blink::MemberBase.777" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.778" = type { %"class.blink::MemberBase.779" }
%"class.blink::MemberBase.779" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.782" = type { %"class.blink::Member.783" }
%"class.blink::Member.783" = type { %"class.blink::MemberBase.784" }
%"class.blink::MemberBase.784" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.1737" }
%"class.mojo::Remote.1737" = type { %"class.mojo::internal::InterfacePtrState.1738" }
%"class.mojo::internal::InterfacePtrState.1738" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1739" }
%"class.std::__1::unique_ptr.1739" = type { %"class.std::__1::__compressed_pair.1740" }
%"class.std::__1::__compressed_pair.1740" = type { %"struct.std::__1::__compressed_pair_elem.1741" }
%"struct.std::__1::__compressed_pair_elem.1741" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.791" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.804" }
%"class.blink::Member.804" = type { %"class.blink::MemberBase.805" }
%"class.blink::MemberBase.805" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1747" }
%"class.mojo::AssociatedRemote.1747" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1748" }
%"class.mojo::internal::AssociatedInterfacePtrState.1748" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1749" }
%"class.std::__1::unique_ptr.1749" = type { %"class.std::__1::__compressed_pair.1750" }
%"class.std::__1::__compressed_pair.1750" = type { %"struct.std::__1::__compressed_pair_elem.1751" }
%"struct.std::__1::__compressed_pair_elem.1751" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.806" = type { %"class.blink::Member.807" }
%"class.blink::Member.807" = type { %"class.blink::MemberBase.808" }
%"class.blink::MemberBase.808" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.1757" }
%"class.mojo::AssociatedRemote.1757" = type { %"class.mojo::internal::AssociatedInterfacePtrState.1758" }
%"class.mojo::internal::AssociatedInterfacePtrState.1758" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1759" }
%"class.std::__1::unique_ptr.1759" = type { %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.809" }
%"class.blink::Member.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1767", %"class.blink::Member.625", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1767" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.1768" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.290" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.1768" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.811" = type { %"class.blink::Member.812" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1771", %"class.blink::Member.625", %"class.mojo::AssociatedReceiver.1772" }
%"class.blink::ThreadState::PrefinalizerRegistration.1771" = type { i8 }
%"class.mojo::AssociatedReceiver.1772" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.1773" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.1773" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.814" }
%"class.blink::Member.814" = type { %"class.blink::MemberBase.815" }
%"class.blink::MemberBase.815" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1776", %"class.blink::Member.625", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.1776" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.168, %"class.std::__1::unique_ptr.290", %"class.base::WeakPtrFactory.1777" }
%"class.base::WeakPtrFactory.1777" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.816" = type { %"class.blink::Member.817" }
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.1780", %"class.blink::Member.625", %"class.mojo::AssociatedReceiver.1781" }
%"class.blink::ThreadState::PrefinalizerRegistration.1780" = type { i8 }
%"class.mojo::AssociatedReceiver.1781" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.1782" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.1782" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.819" = type { %"class.blink::MemberBase.820" }
%"class.blink::MemberBase.820" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.821" = type { %"class.blink::MemberBase.822" }
%"class.blink::MemberBase.822" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.823" = type { %"class.blink::MemberBase.824" }
%"class.blink::MemberBase.824" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.825" = type { %"class.blink::MemberBase.826" }
%"class.blink::MemberBase.826" = type { %"class.blink::HeapHashMap.827"* }
%"class.blink::HeapHashMap.827" = type opaque
%"class.mojo::StructPtr.828" = type { %"class.std::__1::unique_ptr.829" }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.832", %"class.mojo::InlinedStructPtr.833" }
%"class.mojo::InlinedStructPtr.832" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.833" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.837" = type { %"class.blink::MemberBase.838" }
%"class.blink::MemberBase.838" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.839" = type { %"class.absl::optional_internal::optional_data.840" }
%"class.absl::optional_internal::optional_data.840" = type { %"class.absl::optional_internal::optional_data_base.841" }
%"class.absl::optional_internal::optional_data_base.841" = type { %"class.absl::optional_internal::optional_data_dtor_base.842" }
%"class.absl::optional_internal::optional_data_dtor_base.842" = type { i8, %union.anon.843 }
%union.anon.843 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.135", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.693" }
%"class.std::__1::vector.693" = type { %"class.std::__1::__vector_base.694" }
%"class.std::__1::__vector_base.694" = type { %"struct.std::__1::pair.695"*, %"struct.std::__1::pair.695"*, %"class.std::__1::__compressed_pair.696" }
%"struct.std::__1::pair.695" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"struct.std::__1::pair.695"* }
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.703" = type { %"class.absl::optional_internal::optional_data.704" }
%"class.absl::optional_internal::optional_data.704" = type { %"class.absl::optional_internal::optional_data_base.705" }
%"class.absl::optional_internal::optional_data_base.705" = type { %"class.absl::optional_internal::optional_data_dtor_base.706" }
%"class.absl::optional_internal::optional_data_dtor_base.706" = type { i8, %union.anon.707 }
%union.anon.707 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.708 }
%class.scoped_refptr.708 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.709" }
%"class.blink::HeapHashSet.709" = type { %"class.WTF::HashSet.712" }
%"class.WTF::HashSet.712" = type { %"class.WTF::HashTable.713" }
%"class.WTF::HashTable.713" = type <{ %"class.blink::WeakMember.715"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.715" = type opaque
%"class.blink::Member.137" = type { %"class.blink::MemberBase.138" }
%"class.blink::MemberBase.138" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.484", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.492", %"class.blink::Member.494", %"class.blink::Member.496", i8, %"class.blink::Member.498", %"class.blink::Member.500", %"class.blink::Member.502", %"class.blink::Member.502", %"class.blink::Member.502", %"class.blink::Member.502", %"class.blink::Member.502", %"class.blink::Member.502", %"class.blink::Member.504", %"class.blink::Member.506", %"class.blink::Member.508", %"class.blink::Member.510", %"class.blink::Member.512", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.104", %"class.blink::Member.514", %class.scoped_refptr.516, %"class.blink::HeapHashSet.580", %"class.blink::Member.587", %"class.blink::HeapHashMap.600", %"class.std::__1::unique_ptr.607", %"class.blink::Member.619", %"class.blink::Member.640", %"class.blink::Member.642", %"class.blink::Member.644", %"class.WTF::Vector.647", %"class.util::TokenType", %"class.WTF::HashSet.652", %"class.WTF::Deque" }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.405", i32, i8, [3 x i8], %"class.blink::HeapVector.407", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.415", %"class.blink::Member.417", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.426", %"class.blink::Member.480", %"class.blink::Member.482", i8 }>
%"class.blink::Supplementable.484" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.485" }
%"class.blink::HeapHashMap.485" = type { %"class.WTF::HashMap.488" }
%"class.WTF::HashMap.488" = type { %"class.WTF::HashTable.489" }
%"class.WTF::HashTable.489" = type <{ %"struct.WTF::KeyValuePair.491"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.491" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.496" = type { %"class.blink::MemberBase.497" }
%"class.blink::MemberBase.497" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.498" = type { %"class.blink::MemberBase.499" }
%"class.blink::MemberBase.499" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.500" = type { %"class.blink::MemberBase.501" }
%"class.blink::MemberBase.501" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.502" = type { %"class.blink::MemberBase.503" }
%"class.blink::MemberBase.503" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.504" = type { %"class.blink::MemberBase.505" }
%"class.blink::MemberBase.505" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.506" = type { %"class.blink::MemberBase.507" }
%"class.blink::MemberBase.507" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.508" = type { %"class.blink::MemberBase.509" }
%"class.blink::MemberBase.509" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.510" = type { %"class.blink::MemberBase.511" }
%"class.blink::MemberBase.511" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.blink::Member.514" = type { %"class.blink::MemberBase.515" }
%"class.blink::MemberBase.515" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.516 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.517", [4 x i8], %"class.std::__1::unique_ptr.519", i64, %"class.WTF::Vector.523", %"class.WTF::Vector.528", %"class.WTF::Vector.534", %"class.WTF::Vector.552", %class.scoped_refptr.363, %"class.WTF::HashMap.558", %"class.WTF::Vector.563", %"class.WTF::Vector.523", %"class.WTF::Vector.569", %"class.WTF::HashMap.575", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.517" = type { %"class.base::RefCountedThreadSafe.518" }
%"class.base::RefCountedThreadSafe.518" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { i8* }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530", [8 x i8] }
%"class.WTF::VectorBufferBase.530" = type { %class.scoped_refptr.531*, i32, i32 }
%class.scoped_refptr.531 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.534" = type { %"class.WTF::VectorBuffer.535" }
%"class.WTF::VectorBuffer.535" = type { %"class.WTF::VectorBufferBase.536" }
%"class.WTF::VectorBufferBase.536" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.538", %"class.std::__1::unique_ptr.544" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.537 }
%class.scoped_refptr.537 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.552" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.555", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.555" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.558" = type { %"class.WTF::HashTable.559" }
%"class.WTF::HashTable.559" = type <{ %"struct.WTF::KeyValuePair.562"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.562" = type opaque
%"class.WTF::Vector.563" = type { %"class.WTF::VectorBuffer.564" }
%"class.WTF::VectorBuffer.564" = type { %"class.WTF::VectorBufferBase.565" }
%"class.WTF::VectorBufferBase.565" = type { %"class.mojo::ScopedHandleBase.566"*, i32, i32 }
%"class.mojo::ScopedHandleBase.566" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.523" = type { %"class.WTF::VectorBuffer.524" }
%"class.WTF::VectorBuffer.524" = type { %"class.WTF::VectorBufferBase.525", [16 x i8] }
%"class.WTF::VectorBufferBase.525" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.569" = type { %"class.WTF::VectorBuffer.570" }
%"class.WTF::VectorBuffer.570" = type { %"class.WTF::VectorBufferBase.571" }
%"class.WTF::VectorBufferBase.571" = type { %"class.mojo::PendingRemote.572"*, i32, i32 }
%"class.mojo::PendingRemote.572" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::HashMap.575" = type { %"class.WTF::HashTable.576" }
%"class.WTF::HashTable.576" = type <{ %"struct.WTF::KeyValuePair.579"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.579" = type { i8**, %"class.std::__1::unique_ptr.1716" }
%"class.std::__1::unique_ptr.1716" = type { %"class.std::__1::__compressed_pair.1717" }
%"class.std::__1::__compressed_pair.1717" = type { %"struct.std::__1::__compressed_pair_elem.1718" }
%"struct.std::__1::__compressed_pair_elem.1718" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.580" = type { %"class.WTF::HashSet.583" }
%"class.WTF::HashSet.583" = type { %"class.WTF::HashTable.584" }
%"class.WTF::HashTable.584" = type <{ %"class.blink::WeakMember.586"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.586" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::Event"* }
%"class.blink::HeapHashMap.600" = type { %"class.WTF::HashMap.603" }
%"class.WTF::HashMap.603" = type { %"class.WTF::HashTable.604" }
%"class.WTF::HashTable.604" = type <{ %"struct.WTF::KeyValuePair.606"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.606" = type opaque
%"class.std::__1::unique_ptr.607" = type { %"class.std::__1::__compressed_pair.608" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.619" = type { %"class.blink::MemberBase.620" }
%"class.blink::MemberBase.620" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.625", %"class.blink::CachedTextInputInfo", %"class.blink::Member.636", %"class.blink::Member.638", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.627", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.629", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.629" = type { %"class.WTF::HashMap.632" }
%"class.WTF::HashMap.632" = type { %"class.WTF::HashTable.633" }
%"class.WTF::HashTable.633" = type <{ %"struct.WTF::KeyValuePair.635"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.635" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.4", i32, i32 }
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.640" = type { %"class.blink::MemberBase.641" }
%"class.blink::MemberBase.641" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.137", %"class.blink::Member.679", %"class.blink::Member.681" }
%"class.blink::Member.679" = type { %"class.blink::MemberBase.680" }
%"class.blink::MemberBase.680" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.681" = type { %"class.blink::MemberBase.682" }
%"class.blink::MemberBase.682" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.642" = type { %"class.blink::MemberBase.643" }
%"class.blink::MemberBase.643" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.137", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.675" }
%"class.blink::Member.675" = type { %"class.blink::MemberBase.676" }
%"class.blink::MemberBase.676" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::HeapHashMap.646"* }
%"class.blink::HeapHashMap.646" = type opaque
%"class.WTF::HashSet.652" = type { %"class.WTF::HashTable.653" }
%"class.WTF::HashTable.653" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.658" }
%"class.WTF::VectorBuffer.658" = type { %"class.WTF::VectorBufferBase.659" }
%"class.WTF::VectorBufferBase.659" = type { i64*, i32, i32 }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.663", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.mojo::PendingRemote.672" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::HTMLFormElement" = type { %"class.blink::HTMLElement", %"class.blink::FormSubmission::Attributes", %"class.blink::Member.24", %"class.blink::RadioButtonGroupScope", %"class.blink::HeapVector", %"class.blink::HeapVector.36", i32, i8, i8, i8, i8 }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::HeapHashMap"* }
%"class.blink::HeapHashMap" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.31" }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33" }
%"class.WTF::VectorBufferBase.33" = type { %"class.blink::Member.34"*, i32, i32 }
%"class.blink::Member.34" = type opaque
%"class.blink::HeapVector.36" = type { %"class.WTF::Vector.39" }
%"class.WTF::Vector.39" = type { %"class.WTF::VectorBuffer.40" }
%"class.WTF::VectorBuffer.40" = type { %"class.WTF::VectorBufferBase.41" }
%"class.WTF::VectorBufferBase.41" = type { %"class.blink::Member.42"*, i32, i32 }
%"class.blink::Member.42" = type opaque
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.594", %"class.blink::Member.594", %"class.blink::Member.596", %"class.blink::Member.598", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.589" }
%"class.absl::optional.589" = type { %"class.absl::optional_internal::optional_data.590" }
%"class.absl::optional_internal::optional_data.590" = type { %"class.absl::optional_internal::optional_data_base.591" }
%"class.absl::optional_internal::optional_data_base.591" = type { %"class.absl::optional_internal::optional_data_dtor_base.592" }
%"class.absl::optional_internal::optional_data_dtor_base.592" = type { i8, %union.anon.593 }
%union.anon.593 = type { i64 }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::Event"* }
%"class.blink::Member.598" = type { %"class.blink::MemberBase.599" }
%"class.blink::MemberBase.599" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HTMLFormControlElement" = type <{ %"class.blink::HTMLElement", %"class.blink::ListedElement.base", [4 x i8], %"class.blink::FormAssociated", i32, [4 x i8], %"class.blink::WebString", i32, i8, [3 x i8] }>
%"class.blink::ListedElement.base" = type <{ %"class.blink::GarbageCollectedMixin", i8, [7 x i8], %"class.blink::Member.1653", %"class.blink::Member", %"class.blink::Member.1655", %"class.WTF::String", i8, [3 x i8], i32, i32 }>
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::FormAttributeTargetObserver"* }
%"class.blink::FormAttributeTargetObserver" = type opaque
%"class.blink::Member.1655" = type { %"class.blink::MemberBase.1656" }
%"class.blink::MemberBase.1656" = type { %"class.blink::ValidityState"* }
%"class.blink::ValidityState" = type opaque
%"class.blink::FormAssociated" = type { i32 (...)** }
%"class.WTF::StringAppend.1789" = type { %"class.WTF::String", i8* }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.1790, i32, i8, i8, [2 x i8] }>
%union.anon.1790 = type { %"class.WTF::Vector.1791" }
%"class.WTF::Vector.1791" = type { %"class.WTF::VectorBuffer.1792" }
%"class.WTF::VectorBuffer.1792" = type { %"class.WTF::VectorBufferBase.1793", [16 x i8] }
%"class.WTF::VectorBufferBase.1793" = type { i8*, i32, i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.1657" }
%"class.std::__1::unique_ptr.1657" = type { %"class.std::__1::__compressed_pair.1658" }
%"class.std::__1::__compressed_pair.1658" = type { %"struct.std::__1::__compressed_pair_elem.1659" }
%"struct.std::__1::__compressed_pair_elem.1659" = type { %class.GURL* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.1671", %"class.WTF::String" }
%"class.WTF::StringAppend.1671" = type { %"class.WTF::AtomicString", i8* }
%"struct.blink::FrameLoadRequest" = type { %"class.blink::LocalDOMWindow"*, %"class.blink::ResourceRequest", %"class.WTF::AtomicString", i32, i32, i32, %"class.blink::HTMLFormElement"*, i32, %class.scoped_refptr.1235, %class.scoped_refptr.1672, %"class.base::TimeTicks", i32, %"struct.blink::WebWindowFeatures", %"class.absl::optional.1683", %"class.absl::optional.1693", %"class.mojo::PendingRemote.672", %"class.std::__1::unique_ptr.660" }
%class.scoped_refptr.1672 = type { %"class.base::RefCountedData.1673"* }
%"class.base::RefCountedData.1673" = type { %"class.base::RefCountedThreadSafe.1674", %"class.mojo::Remote.1675" }
%"class.base::RefCountedThreadSafe.1674" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::Remote.1675" = type { %"class.mojo::internal::InterfacePtrState.1676" }
%"class.mojo::internal::InterfacePtrState.1676" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1677" }
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.blink::mojom::blink::BlobURLTokenProxy"* }
%"class.blink::mojom::blink::BlobURLTokenProxy" = type { %"class.blink::mojom::blink::BlobURLToken", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BlobURLToken" = type { i32 (...)** }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.1683" }
%"class.absl::optional.1683" = type { %"class.absl::optional_internal::optional_data.1684" }
%"class.absl::optional_internal::optional_data.1684" = type { %"class.absl::optional_internal::optional_data_base.1685" }
%"class.absl::optional_internal::optional_data_base.1685" = type { %"class.absl::optional_internal::optional_data_dtor_base.1686" }
%"class.absl::optional_internal::optional_data_dtor_base.1686" = type { i8, %union.anon.1687 }
%union.anon.1687 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.1688", i64, %"class.absl::optional.114", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.1688" = type { %"class.absl::optional_internal::optional_data.1689" }
%"class.absl::optional_internal::optional_data.1689" = type { %"class.absl::optional_internal::optional_data_base.1690" }
%"class.absl::optional_internal::optional_data_base.1690" = type { %"class.absl::optional_internal::optional_data_dtor_base.1691" }
%"class.absl::optional_internal::optional_data_dtor_base.1691" = type { i8, %union.anon.1692 }
%union.anon.1692 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.1693" = type { %"class.absl::optional_internal::optional_data.1694" }
%"class.absl::optional_internal::optional_data.1694" = type { %"class.absl::optional_internal::optional_data_base.1695" }
%"class.absl::optional_internal::optional_data_base.1695" = type { %"class.absl::optional_internal::optional_data_dtor_base.1696" }
%"class.absl::optional_internal::optional_data_dtor_base.1696" = type { i8, %union.anon.1697 }
%union.anon.1697 = type { %"class.util::TokenType" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.19", %"class.WTF::Vector.1783" }
%"class.WTF::Vector.1783" = type { %"class.WTF::VectorBuffer.1784" }
%"class.WTF::VectorBuffer.1784" = type { %"class.WTF::VectorBufferBase.1785", [64 x i8] }
%"class.WTF::VectorBufferBase.1785" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::FormData" = type <{ %"class.blink::ScriptWrappable", %"class.blink::PairIterable", %"class.WTF::TextEncoding", %"class.blink::HeapVector.1663", i8, [7 x i8] }>
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::HeapVector.1663" = type { %"class.WTF::Vector.1666" }
%"class.WTF::Vector.1666" = type { %"class.WTF::VectorBuffer.1667" }
%"class.WTF::VectorBuffer.1667" = type { %"class.WTF::VectorBufferBase.1668" }
%"class.WTF::VectorBufferBase.1668" = type { %"class.blink::Member.1669"*, i32, i32 }
%"class.blink::Member.1669" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.168, %"class.std::__1::unique_ptr.290", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.170, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.1801" }
%"class.WTF::StringTypeAdapter.1801" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.1802" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::Vector.1796" = type { %"class.WTF::VectorBuffer.1797" }
%"class.WTF::VectorBuffer.1797" = type { %"class.WTF::VectorBufferBase.1798", [16 x i8] }
%"class.WTF::VectorBufferBase.1798" = type { i16*, i32, i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.1831" = type { %"class.WTF::StringTypeAdapter.1801" }

$_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink15EncodedFormData17ParseEncodingTypeERKN3WTF6StringE = comdat any

$_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZN5blink16FrameLoadRequestD2Ev = comdat any

$_ZN5blink14FormSubmission10AttributesD2Ev = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev = comdat any

$_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14FormSubmissionEE4CallIJN3WTF6StringEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14FormSubmissionEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14FormSubmissionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14FormSubmissionEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14FormSubmissionEE7GetNameEPKv = comdat any

$_ZN5blink14FormSubmissionD2Ev = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14FormSubmissionEE4CallIJRA1_KcEEEPS1_DpOT_ = comdat any

$_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14FormSubmissionEE4CallIJNS1_12SubmitMethodERNS_4KURLERN3WTF12AtomicStringES9_RPNS_15HTMLFormElementE13scoped_refptrINS_15EncodedFormDataEERPKNS_5EventENS_16NavigationPolicyERNS_5mojom19TriggeringEventInfoERNS_22ClientNavigationReasonENSt3__110unique_ptrINS_15ResourceRequestENSQ_14default_deleteISS_EEEERPNS_5FrameERNS_16WebFrameLoadTypeEPNS_14LocalDOMWindowEN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENSR_INS_14SourceLocationENST_IS17_EEEEN4mojo13PendingRemoteINSL_5blink34PolicyContainerHostKeepAliveHandleEEEEEEPS1_DpOT_ = comdat any

$_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_14LocalDOMWindowEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_14FormSubmissionEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14FormSubmissionEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [20 x i8] c"multipart/form-data\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"text/plain\00", align 1
@.str.2 = private unnamed_addr constant [34 x i8] c"application/x-www-form-urlencoded\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"post\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"dialog\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"get\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZN5blink10html_names15kFormactionAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names16kFormenctypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kFormmethodAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink10html_names15kFormtargetAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"https\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"mailto\00", align 1
@_ZN5blink10http_names5kPOSTE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.10 = private unnamed_addr constant [12 x i8] c"; boundary=\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.11 = private unnamed_addr constant [3 x i8] c"\0D\0A\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"body=\00", align 1
@.str.13 = private unnamed_addr constant [4 x i8] c"%20\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.15 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.18 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.20 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.21 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZZN5blinkL26GenerateFormDataIdentifierEvE15next_identifier = internal unnamed_addr global i64 0, align 8
@_ZGVZN5blinkL26GenerateFormDataIdentifierEvE15next_identifier = internal global i64 0, align 8
@_ZN5blink10http_names12kContentTypeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.23 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/public/common/tokens/multi_token.h\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"Is<InputTokenType>()\00", align 1
@.str.25 = private unnamed_addr constant [24 x i8] c"invalid token type cast\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.27 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.28 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14FormSubmissionEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14FormSubmissionEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14FormSubmissionEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14FormSubmissionEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14FormSubmissionEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.29 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormSubmission10Attributes11ParseActionERKN3WTF6StringE(%"class.blink::FormSubmission::Attributes"* nocapture, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1) #13
  %4 = ptrtoint %"class.WTF::StringImpl"* %3 to i64
  %5 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 2
  %6 = bitcast %"class.WTF::String"* %5 to i64*
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %4, i64* %6, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #13
  br label %23

23:                                               ; preds = %22, %19, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14FormSubmission10Attributes17ParseEncodingTypeERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::AtomicString", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %63, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  %11 = bitcast %"class.WTF::StringImpl"* %10 to i8*
  %12 = icmp eq i32 %9, 19
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = bitcast %"class.WTF::StringView"* %3 to i8*
  br label %68

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %38, label %22

20:                                               ; preds = %22
  %21 = icmp eq i64 %37, 19
  br i1 %21, label %60, label %102

22:                                               ; preds = %15, %116
  %23 = phi i64 [ %117, %116 ], [ 0, %15 ]
  %24 = getelementptr inbounds i8, i8* %11, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i64
  %27 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i32
  %30 = getelementptr inbounds [20 x i8], [20 x i8]* @.str, i64 0, i64 %23
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i64
  %33 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = sext i8 %34 to i32
  %36 = icmp eq i32 %29, %35
  %37 = or i64 %23, 1
  br i1 %36, label %20, label %61

38:                                               ; preds = %15
  %39 = bitcast %"class.WTF::StringImpl"* %10 to i16*
  br label %42

40:                                               ; preds = %42
  %41 = icmp eq i64 %59, 19
  br i1 %41, label %60, label %84

42:                                               ; preds = %100, %38
  %43 = phi i64 [ 0, %38 ], [ %101, %100 ]
  %44 = getelementptr inbounds i16, i16* %39, i64 %43
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [20 x i8], [20 x i8]* @.str, i64 0, i64 %43
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  %59 = or i64 %43, 1
  br i1 %58, label %40, label %61

60:                                               ; preds = %20, %40
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 19) #13
  br label %81

61:                                               ; preds = %22, %102, %42, %84
  %62 = bitcast %"class.WTF::StringView"* %3 to i8*
  br label %68

63:                                               ; preds = %1
  %64 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #13
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %65, align 8
  %66 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %67 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %66, i64* %67, align 8
  br label %74

68:                                               ; preds = %61, %13
  %69 = phi i8* [ %62, %61 ], [ %14, %13 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #13
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %70, align 8
  %71 = load i32, i32* %8, align 4
  %72 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %73 = bitcast i8** %72 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %73, align 8
  br label %74

74:                                               ; preds = %63, %68
  %75 = phi i8* [ %69, %68 ], [ %64, %63 ]
  %76 = phi i32 [ %71, %68 ], [ 0, %63 ]
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %76, i32* %77, align 8
  %78 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [11 x i8]* nonnull dereferenceable(11) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %75) #13
  br i1 %78, label %79, label %80

79:                                               ; preds = %74
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i64 10) #13
  br label %81

80:                                               ; preds = %74
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %2, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i64 33) #13
  br label %81

81:                                               ; preds = %80, %79, %60
  %82 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  ret %"class.WTF::StringImpl"* %83

84:                                               ; preds = %40
  %85 = getelementptr inbounds i16, i16* %39, i64 %59
  %86 = load i16, i16* %85, align 2
  %87 = add i16 %86, -65
  %88 = icmp ult i16 %87, 26
  %89 = zext i1 %88 to i16
  %90 = shl nuw nsw i16 %89, 5
  %91 = or i16 %90, %86
  %92 = zext i16 %91 to i32
  %93 = getelementptr inbounds [20 x i8], [20 x i8]* @.str, i64 0, i64 %59
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i64
  %96 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = sext i8 %97 to i32
  %99 = icmp eq i32 %92, %98
  br i1 %99, label %100, label %61

100:                                              ; preds = %84
  %101 = add nuw nsw i64 %43, 2
  br label %42

102:                                              ; preds = %20
  %103 = getelementptr inbounds i8, i8* %11, i64 %37
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = getelementptr inbounds [20 x i8], [20 x i8]* @.str, i64 0, i64 %37
  %110 = load i8, i8* %109, align 1
  %111 = zext i8 %110 to i64
  %112 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %111
  %113 = load i8, i8* %112, align 1
  %114 = sext i8 %113 to i32
  %115 = icmp eq i32 %108, %114
  br i1 %115, label %116, label %61

116:                                              ; preds = %102
  %117 = add nuw nsw i64 %23, 2
  br label %22
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [11 x i8]* dereferenceable(11)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 10
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %205, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %303, %14, %28, %205, %219, %233, %247, %261, %275, %289, %42, %59, %77, %93, %109, %125, %141, %157, %173, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %173 ], [ false, %14 ], [ false, %28 ], [ false, %205 ], [ false, %219 ], [ false, %233 ], [ false, %247 ], [ false, %261 ], [ false, %275 ], [ false, %289 ], [ %316, %303 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  br i1 %188, label %189, label %75

189:                                              ; preds = %173
  %190 = getelementptr inbounds i16, i16* %44, i64 9
  %191 = load i16, i16* %190, align 2
  %192 = add i16 %191, -65
  %193 = icmp ult i16 %192, 26
  %194 = zext i1 %193 to i16
  %195 = shl nuw nsw i16 %194, 5
  %196 = or i16 %195, %191
  %197 = zext i16 %196 to i32
  %198 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i64
  %201 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = sext i8 %202 to i32
  %204 = icmp eq i32 %197, %203
  ret i1 %204

205:                                              ; preds = %28
  %206 = getelementptr inbounds i8, i8* %15, i64 2
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i64
  %215 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = sext i8 %216 to i32
  %218 = icmp eq i32 %211, %217
  br i1 %218, label %219, label %75

219:                                              ; preds = %205
  %220 = getelementptr inbounds i8, i8* %15, i64 3
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i64
  %229 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = sext i8 %230 to i32
  %232 = icmp eq i32 %225, %231
  br i1 %232, label %233, label %75

233:                                              ; preds = %219
  %234 = getelementptr inbounds i8, i8* %15, i64 4
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i64
  %237 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i64
  %243 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = sext i8 %244 to i32
  %246 = icmp eq i32 %239, %245
  br i1 %246, label %247, label %75

247:                                              ; preds = %233
  %248 = getelementptr inbounds i8, i8* %15, i64 5
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i64
  %251 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %250
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = sext i8 %258 to i32
  %260 = icmp eq i32 %253, %259
  br i1 %260, label %261, label %75

261:                                              ; preds = %247
  %262 = getelementptr inbounds i8, i8* %15, i64 6
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i64
  %265 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i64
  %271 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = sext i8 %272 to i32
  %274 = icmp eq i32 %267, %273
  br i1 %274, label %275, label %75

275:                                              ; preds = %261
  %276 = getelementptr inbounds i8, i8* %15, i64 7
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i64
  %279 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i64
  %285 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = sext i8 %286 to i32
  %288 = icmp eq i32 %281, %287
  br i1 %288, label %289, label %75

289:                                              ; preds = %275
  %290 = getelementptr inbounds i8, i8* %15, i64 8
  %291 = load i8, i8* %290, align 1
  %292 = zext i8 %291 to i64
  %293 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %292
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  %296 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i64
  %299 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %298
  %300 = load i8, i8* %299, align 1
  %301 = sext i8 %300 to i32
  %302 = icmp eq i32 %295, %301
  br i1 %302, label %303, label %75

303:                                              ; preds = %289
  %304 = getelementptr inbounds i8, i8* %15, i64 9
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i64
  %307 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %306
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i64
  %313 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = sext i8 %314 to i32
  %316 = icmp eq i32 %309, %315
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormSubmission10Attributes18UpdateEncodingTypeERKN3WTF6StringE(%"class.blink::FormSubmission::Attributes"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = tail call %"class.WTF::StringImpl"* @_ZN5blink14FormSubmission10Attributes17ParseEncodingTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1)
  %6 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %7 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 4
  %8 = bitcast %"class.WTF::AtomicString"* %7 to i64*
  %9 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %7, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store i64 %6, i64* %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %27, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #13
  br label %25

25:                                               ; preds = %21, %24
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  br label %27

27:                                               ; preds = %25, %2
  %28 = phi %"class.WTF::StringImpl"* [ %26, %25 ], [ %5, %2 ]
  %29 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #13
  %30 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %32, align 8
  %33 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %34 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %33, i64* %34, align 8
  br label %43

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 1
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %41 = bitcast i8** %40 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %41, align 8
  %42 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %43

43:                                               ; preds = %35, %31
  %44 = phi i64 [ %42, %35 ], [ %33, %31 ]
  %45 = phi i32 [ %38, %35 ], [ 0, %31 ]
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %45, i32* %46, align 8
  %47 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #13
  %48 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %44, i64* %48, align 8
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 19, i32* %50, align 8
  %51 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #13
  %52 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 1
  %53 = zext i1 %51 to i8
  store i8 %53, i8* %52, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14FormSubmission10Attributes15ParseMethodTypeERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #13
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %9, align 8
  %10 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %11 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %10, i64* %11, align 8
  br label %19

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 1
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %18 = bitcast i8** %17 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %18, align 8
  br label %19

19:                                               ; preds = %8, %12
  %20 = phi i32 [ %15, %12 ], [ 0, %8 ]
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %20, i32* %21, align 8
  %22 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [5 x i8]* nonnull dereferenceable(5) @.str.3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #13
  br i1 %22, label %43, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #13
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %28, align 8
  %29 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %30 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %29, i64* %30, align 8
  br label %38

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %25, %"class.WTF::StringImpl"** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 1
  %36 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %37 = bitcast i8** %36 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %37, align 8
  br label %38

38:                                               ; preds = %27, %31
  %39 = phi i32 [ %34, %31 ], [ 0, %27 ]
  %40 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %39, i32* %40, align 8
  %41 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [7 x i8]* nonnull dereferenceable(7) @.str.4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #13
  %42 = select i1 %41, i32 2, i32 0
  br label %43

43:                                               ; preds = %38, %19
  %44 = phi i32 [ 1, %19 ], [ %42, %38 ]
  ret i32 %44
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [5 x i8]* dereferenceable(5)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 4
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %109, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %123, %14, %28, %109, %42, %59, %77, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %14 ], [ false, %28 ], [ false, %109 ], [ %136, %123 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  ret i1 %108

109:                                              ; preds = %28
  %110 = getelementptr inbounds i8, i8* %15, i64 2
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 2
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %75

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 3
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [5 x i8], [5 x i8]* %1, i64 0, i64 3
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [7 x i8]* dereferenceable(7)) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 6
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %141, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %183, %14, %28, %141, %155, %169, %42, %59, %77, %93, %109, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %14 ], [ false, %28 ], [ false, %141 ], [ false, %155 ], [ false, %169 ], [ %196, %183 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  ret i1 %140

141:                                              ; preds = %28
  %142 = getelementptr inbounds i8, i8* %15, i64 2
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i64
  %145 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %144
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 2
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i64
  %151 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %150
  %152 = load i8, i8* %151, align 1
  %153 = sext i8 %152 to i32
  %154 = icmp eq i32 %147, %153
  br i1 %154, label %155, label %75

155:                                              ; preds = %141
  %156 = getelementptr inbounds i8, i8* %15, i64 3
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %158
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 3
  %163 = load i8, i8* %162, align 1
  %164 = zext i8 %163 to i64
  %165 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %164
  %166 = load i8, i8* %165, align 1
  %167 = sext i8 %166 to i32
  %168 = icmp eq i32 %161, %167
  br i1 %168, label %169, label %75

169:                                              ; preds = %155
  %170 = getelementptr inbounds i8, i8* %15, i64 4
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i64
  %173 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %172
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 4
  %177 = load i8, i8* %176, align 1
  %178 = zext i8 %177 to i64
  %179 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %178
  %180 = load i8, i8* %179, align 1
  %181 = sext i8 %180 to i32
  %182 = icmp eq i32 %175, %181
  br i1 %182, label %183, label %75

183:                                              ; preds = %169
  %184 = getelementptr inbounds i8, i8* %15, i64 5
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i64
  %187 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %186
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i32
  %190 = getelementptr inbounds [7 x i8], [7 x i8]* %1, i64 0, i64 5
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i64
  %193 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %192
  %194 = load i8, i8* %193, align 1
  %195 = sext i8 %194 to i32
  %196 = icmp eq i32 %189, %195
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormSubmission10Attributes16UpdateMethodTypeERKN3WTF6StringE(%"class.blink::FormSubmission::Attributes"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %10, align 8
  %11 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %12 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %11, i64* %12, align 8
  br label %20

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %14, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 1
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %19 = bitcast i8** %18 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %19, align 8
  br label %20

20:                                               ; preds = %13, %9
  %21 = phi i32 [ %16, %13 ], [ 0, %9 ]
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %21, i32* %22, align 8
  %23 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, [5 x i8]* nonnull dereferenceable(5) @.str.3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #13
  br i1 %23, label %44, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #13
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %29, align 8
  %30 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %31 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %30, i64* %31, align 8
  br label %39

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %26, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 1
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %38 = bitcast i8** %37 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %38, align 8
  br label %39

39:                                               ; preds = %32, %28
  %40 = phi i32 [ %35, %32 ], [ 0, %28 ]
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %40, i32* %41, align 8
  %42 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, [7 x i8]* nonnull dereferenceable(7) @.str.4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #13
  %43 = select i1 %42, i32 2, i32 0
  br label %44

44:                                               ; preds = %20, %39
  %45 = phi i32 [ 1, %20 ], [ %43, %39 ]
  %46 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 0
  store i32 %45, i32* %46, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14FormSubmission10Attributes12MethodStringENS0_12SubmitMethodE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  switch i32 %0, label %6 [
    i32 0, label %3
    i32 1, label %4
    i32 2, label %5
  ]

3:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i64 3) #13
  br label %29

4:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i64 4) #13
  br label %29

5:                                                ; preds = %1
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i64 6) #13
  br label %29

6:                                                ; preds = %1
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #13
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #13
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %6, %5, %4, %3
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  ret %"class.WTF::StringImpl"* %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormSubmission10Attributes8CopyFromERKS1_(%"class.blink::FormSubmission::Attributes"* nocapture, %"class.blink::FormSubmission::Attributes"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 0
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %1, i64 0, i32 1
  %7 = load i8, i8* %6, align 4, !range !3
  %8 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 1
  store i8 %7, i8* %8, align 4
  %9 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %1, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #13
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %28, %13, %2
  %31 = ptrtoint %"class.WTF::StringImpl"* %11 to i64
  %32 = bitcast %"class.WTF::String"* %9 to i64*
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  store i64 %31, i64* %32, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #13
  br label %49

49:                                               ; preds = %30, %45, %48
  %50 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 3
  %51 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %71, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %71

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = zext i32 %61 to i33
  %63 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #13
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %59
  tail call void @llvm.trap() #13
  unreachable

69:                                               ; preds = %59
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %60, align 4
  br label %71

71:                                               ; preds = %69, %54, %49
  %72 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %73 = bitcast %"class.WTF::AtomicString"* %50 to i64*
  %74 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %50, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  store i64 %72, i64* %73, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #13
  br label %90

90:                                               ; preds = %71, %86, %89
  %91 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 4
  %92 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #13
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %100
  tail call void @llvm.trap() #13
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %110, %95, %90
  %113 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %114 = bitcast %"class.WTF::AtomicString"* %91 to i64*
  %115 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %91, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  store i64 %113, i64* %114, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #13
  br label %131

131:                                              ; preds = %112, %127, %130
  %132 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 5
  %133 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %1, i64 0, i32 5, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %153, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %153

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = zext i32 %143 to i33
  %145 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %144, i33 1) #13
  %146 = extractvalue { i33, i1 } %145, 1
  %147 = extractvalue { i33, i1 } %145, 0
  %148 = icmp slt i33 %147, 0
  %149 = or i1 %146, %148
  br i1 %149, label %150, label %151, !prof !2

150:                                              ; preds = %141
  tail call void @llvm.trap() #13
  unreachable

151:                                              ; preds = %141
  %152 = trunc i33 %147 to i32
  store i32 %152, i32* %142, align 4
  br label %153

153:                                              ; preds = %151, %136, %131
  %154 = ptrtoint %"class.WTF::StringImpl"* %134 to i64
  %155 = bitcast %"class.WTF::String"* %132 to i64*
  %156 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %132, i64 0, i32 0, i32 0
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %156, align 8
  store i64 %154, i64* %155, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %157, null
  br i1 %158, label %172, label %159

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load atomic i32, i32* %160 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %157, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  br i1 %163, label %166, label %168

166:                                              ; preds = %159
  %167 = add i32 %165, -1
  store i32 %167, i32* %164, align 4
  br label %168

168:                                              ; preds = %166, %159
  %169 = phi i32 [ %167, %166 ], [ %165, %159 ]
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %172

171:                                              ; preds = %168
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %157) #13
  br label %172

172:                                              ; preds = %153, %168, %171
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::FormSubmission"* @_ZN5blink14FormSubmission6CreateEPNS_15HTMLFormElementERKNS0_10AttributesEPKNS_5EventEPNS_22HTMLFormControlElementE(%"class.blink::HTMLFormElement"*, %"class.blink::FormSubmission::Attributes"* nocapture readonly dereferenceable(40), %"class.blink::Event"*, %"class.blink::HTMLFormControlElement"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::Time", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend.1789", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::Vector.50", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringBuilder", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.logging::CheckError", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::StringView", align 8
  %24 = alloca %"class.blink::HTMLFormElement"*, align 8
  %25 = alloca %"class.blink::Event"*, align 8
  %26 = alloca %"class.blink::FormSubmission::Attributes", align 8
  %27 = alloca %"class.WTF::AtomicString", align 8
  %28 = alloca %"class.WTF::String", align 8
  %29 = alloca %"class.blink::KURL", align 8
  %30 = alloca %"class.WTF::StringView", align 8
  %31 = alloca %class.GURL, align 8
  %32 = alloca %"class.WTF::String", align 8
  %33 = alloca %"class.WTF::StringView", align 8
  %34 = alloca %"class.WTF::AtomicString", align 8
  %35 = alloca %"class.WTF::AtomicString", align 8
  %36 = alloca %"class.WTF::TextEncoding", align 8
  %37 = alloca %class.scoped_refptr.44, align 8
  %38 = alloca %"class.WTF::String", align 8
  %39 = alloca %"class.WTF::AtomicString", align 8
  %40 = alloca %"class.std::__1::unique_ptr.64", align 8
  %41 = alloca i32, align 4
  %42 = alloca %"class.WTF::AtomicString", align 8
  %43 = alloca %"class.WTF::StringAppend", align 8
  %44 = alloca %"class.WTF::StringAppend.1671", align 8
  %45 = alloca i32, align 4
  %46 = alloca %"struct.blink::FrameLoadRequest", align 8
  %47 = alloca %"class.blink::Frame"*, align 8
  %48 = alloca i32, align 4
  %49 = alloca i32, align 4
  %50 = alloca i32, align 4
  %51 = alloca %"class.blink::LocalDOMWindow"*, align 8
  %52 = alloca %"class.util::TokenType", align 8
  %53 = alloca %"class.std::__1::unique_ptr.660", align 8
  %54 = alloca %"class.mojo::PendingRemote.672", align 4
  store %"class.blink::HTMLFormElement"* %0, %"class.blink::HTMLFormElement"** %24, align 8
  store %"class.blink::Event"* %2, %"class.blink::Event"** %25, align 8
  %55 = bitcast %"class.blink::FormSubmission::Attributes"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %55) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 40, i1 false)
  %56 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %26, i64 0, i32 0
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %26, i64 0, i32 1
  store i8 0, i8* %57, align 4
  %58 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %26, i64 0, i32 2, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %26, i64 0, i32 4
  %60 = bitcast %"class.WTF::StringImpl"** %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* %59, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i64 33) #13
  %61 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %26, i64 0, i32 5, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  call void @_ZN5blink14FormSubmission10Attributes8CopyFromERKS1_(%"class.blink::FormSubmission::Attributes"* nonnull %26, %"class.blink::FormSubmission::Attributes"* dereferenceable(40) %1)
  %62 = icmp ne %"class.blink::HTMLFormControlElement"* %3, null
  br i1 %62, label %63, label %629

63:                                               ; preds = %4
  %64 = bitcast %"class.WTF::AtomicString"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #13
  %65 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %27, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %66 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kFormactionAttrE, align 8
  %67 = getelementptr inbounds %"class.blink::HTMLFormControlElement", %"class.blink::HTMLFormControlElement"* %3, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %68 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %67, align 8
  %69 = icmp eq %"class.blink::ElementData"* %68, null
  br i1 %69, label %120, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %68, i64 0, i32 0, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = and i32 %72, 1
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %82, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.blink::ElementData"* %68 to %"class.blink::UniqueElementData"*
  %77 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %68, i64 1, i32 1
  %78 = bitcast %"class.blink::Member.19"* %77 to %"class.blink::Attribute"**
  %79 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %76, i64 0, i32 2, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  br label %87

82:                                               ; preds = %70
  %83 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %68, i64 1
  %84 = bitcast %"class.blink::ElementData"* %83 to %"class.blink::Attribute"*
  %85 = lshr i32 %72, 1
  %86 = and i32 %85, 268435455
  br label %87

87:                                               ; preds = %82, %75
  %88 = phi %"class.blink::Attribute"* [ %84, %82 ], [ %79, %75 ]
  %89 = phi i32 [ %86, %82 ], [ %81, %75 ]
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %88, i64 %90
  %92 = icmp eq i32 %89, 0
  br i1 %92, label %120, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %66, i64 0, i32 0, i32 0
  %95 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %95, i64 0, i32 3, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %95, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %98

98:                                               ; preds = %113, %93
  %99 = phi %"class.blink::Attribute"* [ %88, %93 ], [ %114, %113 ]
  %100 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %99, i64 0, i32 0, i32 0, i32 0
  %101 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %100, align 8
  %102 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %101, %95
  br i1 %102, label %116, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 3, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, %106
  br i1 %107, label %108, label %113

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %101, i64 0, i32 4, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %110, %111
  br i1 %112, label %116, label %113

113:                                              ; preds = %108, %103
  %114 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %99, i64 1
  %115 = icmp eq %"class.blink::Attribute"* %114, %91
  br i1 %115, label %120, label %98

116:                                              ; preds = %108, %98
  %117 = icmp eq %"class.blink::Attribute"* %99, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %99, i64 0, i32 1
  br label %122

120:                                              ; preds = %113, %116, %87, %63
  %121 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %122

122:                                              ; preds = %118, %120
  %123 = phi %"class.WTF::AtomicString"* [ %121, %120 ], [ %119, %118 ]
  %124 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %123, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %142, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %142

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = zext i32 %134 to i33
  %136 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %135, i33 1) #13
  %137 = extractvalue { i33, i1 } %136, 1
  %138 = extractvalue { i33, i1 } %136, 0
  %139 = icmp slt i33 %138, 0
  %140 = or i1 %137, %139
  br i1 %140, label %141, label %145, !prof !2

141:                                              ; preds = %132
  call void @llvm.trap() #13
  unreachable

142:                                              ; preds = %127, %122
  %143 = ptrtoint %"class.WTF::StringImpl"* %125 to i64
  %144 = bitcast %"class.WTF::AtomicString"* %27 to i64*
  store i64 %143, i64* %144, align 8
  br label %166

145:                                              ; preds = %132
  %146 = trunc i33 %138 to i32
  store i32 %146, i32* %133, align 4
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %148 = ptrtoint %"class.WTF::StringImpl"* %125 to i64
  %149 = bitcast %"class.WTF::AtomicString"* %27 to i64*
  store i64 %148, i64* %149, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %150, label %170, label %151

151:                                              ; preds = %145
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #13
  br label %164

164:                                              ; preds = %163, %160
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  br label %166

166:                                              ; preds = %142, %164
  %167 = phi i64* [ %149, %164 ], [ %144, %142 ]
  %168 = phi %"class.WTF::StringImpl"* [ %165, %164 ], [ %125, %142 ]
  %169 = icmp eq %"class.WTF::StringImpl"* %168, null
  br i1 %169, label %193, label %170

170:                                              ; preds = %145, %166
  %171 = phi i64* [ %167, %166 ], [ %149, %145 ]
  %172 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %27, i64 0, i32 0
  %173 = call %"class.WTF::StringImpl"* @_ZN5blink33StripLeadingAndTrailingHTMLSpacesERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %172) #13
  %174 = ptrtoint %"class.WTF::StringImpl"* %173 to i64
  %175 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %26, i64 0, i32 2
  %176 = bitcast %"class.WTF::String"* %175 to i64*
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %175, i64 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  store i64 %174, i64* %176, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %170
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #13
  br label %193

193:                                              ; preds = %192, %189, %170, %166
  %194 = phi i64* [ %171, %192 ], [ %171, %189 ], [ %171, %170 ], [ %167, %166 ]
  %195 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names16kFormenctypeAttrE, align 8
  %196 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %67, align 8
  %197 = icmp eq %"class.blink::ElementData"* %196, null
  br i1 %197, label %248, label %198

198:                                              ; preds = %193
  %199 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %196, i64 0, i32 0, i32 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = and i32 %200, 1
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %210, label %203

203:                                              ; preds = %198
  %204 = bitcast %"class.blink::ElementData"* %196 to %"class.blink::UniqueElementData"*
  %205 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %196, i64 1, i32 1
  %206 = bitcast %"class.blink::Member.19"* %205 to %"class.blink::Attribute"**
  %207 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %204, i64 0, i32 2, i32 0, i32 0, i32 2
  %209 = load i32, i32* %208, align 4
  br label %215

210:                                              ; preds = %198
  %211 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %196, i64 1
  %212 = bitcast %"class.blink::ElementData"* %211 to %"class.blink::Attribute"*
  %213 = lshr i32 %200, 1
  %214 = and i32 %213, 268435455
  br label %215

215:                                              ; preds = %210, %203
  %216 = phi %"class.blink::Attribute"* [ %212, %210 ], [ %207, %203 ]
  %217 = phi i32 [ %214, %210 ], [ %209, %203 ]
  %218 = zext i32 %217 to i64
  %219 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %216, i64 %218
  %220 = icmp eq i32 %217, 0
  br i1 %220, label %248, label %221

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %195, i64 0, i32 0, i32 0
  %223 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %223, i64 0, i32 3, i32 0, i32 0, i32 0
  %225 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %223, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %226

226:                                              ; preds = %241, %221
  %227 = phi %"class.blink::Attribute"* [ %216, %221 ], [ %242, %241 ]
  %228 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %227, i64 0, i32 0, i32 0, i32 0
  %229 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %228, align 8
  %230 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %229, %223
  br i1 %230, label %244, label %231

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %229, i64 0, i32 3, i32 0, i32 0, i32 0
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %233, %234
  br i1 %235, label %236, label %241

236:                                              ; preds = %231
  %237 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %229, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %238, %239
  br i1 %240, label %244, label %241

241:                                              ; preds = %236, %231
  %242 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %227, i64 1
  %243 = icmp eq %"class.blink::Attribute"* %242, %219
  br i1 %243, label %248, label %226

244:                                              ; preds = %236, %226
  %245 = icmp eq %"class.blink::Attribute"* %227, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %244
  %247 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %227, i64 0, i32 1
  br label %250

248:                                              ; preds = %241, %244, %215, %193
  %249 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %250

250:                                              ; preds = %246, %248
  %251 = phi %"class.WTF::AtomicString"* [ %249, %248 ], [ %247, %246 ]
  %252 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %251, i64 0, i32 0, i32 0, i32 0
  %253 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %252, align 8
  %254 = icmp eq %"class.WTF::StringImpl"* %253, null
  br i1 %254, label %272, label %255

255:                                              ; preds = %250
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %272

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %253, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = zext i32 %262 to i33
  %264 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %263, i33 1) #13
  %265 = extractvalue { i33, i1 } %264, 1
  %266 = extractvalue { i33, i1 } %264, 0
  %267 = icmp slt i33 %266, 0
  %268 = or i1 %265, %267
  br i1 %268, label %269, label %270, !prof !2

269:                                              ; preds = %260
  call void @llvm.trap() #13
  unreachable

270:                                              ; preds = %260
  %271 = trunc i33 %266 to i32
  store i32 %271, i32* %261, align 4
  br label %272

272:                                              ; preds = %270, %255, %250
  %273 = ptrtoint %"class.WTF::StringImpl"* %253 to i64
  %274 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  store i64 %273, i64* %194, align 8
  %275 = icmp eq %"class.WTF::StringImpl"* %274, null
  br i1 %275, label %291, label %276

276:                                              ; preds = %272
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = load atomic i32, i32* %277 monotonic, align 4
  %279 = and i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %274, i64 0, i32 0
  %282 = load i32, i32* %281, align 4
  br i1 %280, label %283, label %285

283:                                              ; preds = %276
  %284 = add i32 %282, -1
  store i32 %284, i32* %281, align 4
  br label %285

285:                                              ; preds = %283, %276
  %286 = phi i32 [ %284, %283 ], [ %282, %276 ]
  %287 = icmp eq i32 %286, 0
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %274) #13
  br label %289

289:                                              ; preds = %288, %285
  %290 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  br label %291

291:                                              ; preds = %289, %272
  %292 = phi %"class.WTF::StringImpl"* [ %290, %289 ], [ %253, %272 ]
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %343, label %294

294:                                              ; preds = %291
  %295 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %27, i64 0, i32 0
  %296 = call %"class.WTF::StringImpl"* @_ZN5blink14FormSubmission10Attributes17ParseEncodingTypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %295) #13
  %297 = ptrtoint %"class.WTF::StringImpl"* %296 to i64
  %298 = bitcast %"class.WTF::AtomicString"* %59 to i64*
  %299 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %300 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %299, align 8
  store i64 %297, i64* %298, align 8
  %301 = icmp eq %"class.WTF::StringImpl"* %300, null
  br i1 %301, label %317, label %302

302:                                              ; preds = %294
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %304 = load atomic i32, i32* %303 monotonic, align 4
  %305 = and i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %300, i64 0, i32 0
  %308 = load i32, i32* %307, align 4
  br i1 %306, label %309, label %311

309:                                              ; preds = %302
  %310 = add i32 %308, -1
  store i32 %310, i32* %307, align 4
  br label %311

311:                                              ; preds = %309, %302
  %312 = phi i32 [ %310, %309 ], [ %308, %302 ]
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %314, label %315

314:                                              ; preds = %311
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %300) #13
  br label %315

315:                                              ; preds = %314, %311
  %316 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %299, align 8
  br label %317

317:                                              ; preds = %315, %294
  %318 = phi %"class.WTF::StringImpl"* [ %316, %315 ], [ %296, %294 ]
  %319 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %319) #13
  %320 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %320, label %321, label %325

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* null, i8** %322, align 8
  %323 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %324 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %323, i64* %324, align 8
  br label %333

325:                                              ; preds = %317
  %326 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 0
  store %"class.WTF::StringImpl"* %318, %"class.WTF::StringImpl"** %326, align 8
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 1
  %328 = load i32, i32* %327, align 4
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 1
  %330 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  %331 = bitcast i8** %330 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %329, %"class.WTF::StringImpl"** %331, align 8
  %332 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %333

333:                                              ; preds = %321, %325
  %334 = phi i64 [ %332, %325 ], [ %323, %321 ]
  %335 = phi i32 [ %328, %325 ], [ 0, %321 ]
  %336 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 %335, i32* %336, align 8
  %337 = bitcast %"class.WTF::StringView"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %337) #13
  %338 = bitcast %"class.WTF::StringView"* %23 to i64*
  store i64 %334, i64* %338, align 8
  %339 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8** %339, align 8
  %340 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %23, i64 0, i32 2
  store i32 19, i32* %340, align 8
  %341 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %22, %"class.WTF::StringView"* nonnull dereferenceable(24) %23) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %337) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %319) #13
  %342 = zext i1 %341 to i8
  store i8 %342, i8* %57, align 4
  br label %343

343:                                              ; preds = %333, %291
  %344 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kFormmethodAttrE, align 8
  %345 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %67, align 8
  %346 = icmp eq %"class.blink::ElementData"* %345, null
  br i1 %346, label %397, label %347

347:                                              ; preds = %343
  %348 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %345, i64 0, i32 0, i32 0, i32 0
  %349 = load i32, i32* %348, align 4
  %350 = and i32 %349, 1
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %359, label %352

352:                                              ; preds = %347
  %353 = bitcast %"class.blink::ElementData"* %345 to %"class.blink::UniqueElementData"*
  %354 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %345, i64 1, i32 1
  %355 = bitcast %"class.blink::Member.19"* %354 to %"class.blink::Attribute"**
  %356 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %355, align 8
  %357 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %353, i64 0, i32 2, i32 0, i32 0, i32 2
  %358 = load i32, i32* %357, align 4
  br label %364

359:                                              ; preds = %347
  %360 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %345, i64 1
  %361 = bitcast %"class.blink::ElementData"* %360 to %"class.blink::Attribute"*
  %362 = lshr i32 %349, 1
  %363 = and i32 %362, 268435455
  br label %364

364:                                              ; preds = %359, %352
  %365 = phi %"class.blink::Attribute"* [ %361, %359 ], [ %356, %352 ]
  %366 = phi i32 [ %363, %359 ], [ %358, %352 ]
  %367 = zext i32 %366 to i64
  %368 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %365, i64 %367
  %369 = icmp eq i32 %366, 0
  br i1 %369, label %397, label %370

370:                                              ; preds = %364
  %371 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %344, i64 0, i32 0, i32 0
  %372 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %371, align 8
  %373 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %372, i64 0, i32 3, i32 0, i32 0, i32 0
  %374 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %372, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %375

375:                                              ; preds = %390, %370
  %376 = phi %"class.blink::Attribute"* [ %365, %370 ], [ %391, %390 ]
  %377 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %376, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %377, align 8
  %379 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %378, %372
  br i1 %379, label %393, label %380

380:                                              ; preds = %375
  %381 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %378, i64 0, i32 3, i32 0, i32 0, i32 0
  %382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %381, align 8
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %373, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %382, %383
  br i1 %384, label %385, label %390

385:                                              ; preds = %380
  %386 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %378, i64 0, i32 4, i32 0, i32 0, i32 0
  %387 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %386, align 8
  %388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %374, align 8
  %389 = icmp eq %"class.WTF::StringImpl"* %387, %388
  br i1 %389, label %393, label %390

390:                                              ; preds = %385, %380
  %391 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %376, i64 1
  %392 = icmp eq %"class.blink::Attribute"* %391, %368
  br i1 %392, label %397, label %375

393:                                              ; preds = %385, %375
  %394 = icmp eq %"class.blink::Attribute"* %376, null
  br i1 %394, label %397, label %395

395:                                              ; preds = %393
  %396 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %376, i64 0, i32 1
  br label %399

397:                                              ; preds = %390, %393, %364, %343
  %398 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %399

399:                                              ; preds = %395, %397
  %400 = phi %"class.WTF::AtomicString"* [ %398, %397 ], [ %396, %395 ]
  %401 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %401, align 8
  %403 = icmp eq %"class.WTF::StringImpl"* %402, null
  br i1 %403, label %421, label %404

404:                                              ; preds = %399
  %405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %402, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %406 = load atomic i32, i32* %405 monotonic, align 4
  %407 = and i32 %406, 2
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %409, label %421

409:                                              ; preds = %404
  %410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %402, i64 0, i32 0
  %411 = load i32, i32* %410, align 4
  %412 = zext i32 %411 to i33
  %413 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %412, i33 1) #13
  %414 = extractvalue { i33, i1 } %413, 1
  %415 = extractvalue { i33, i1 } %413, 0
  %416 = icmp slt i33 %415, 0
  %417 = or i1 %414, %416
  br i1 %417, label %418, label %419, !prof !2

418:                                              ; preds = %409
  call void @llvm.trap() #13
  unreachable

419:                                              ; preds = %409
  %420 = trunc i33 %415 to i32
  store i32 %420, i32* %410, align 4
  br label %421

421:                                              ; preds = %419, %404, %399
  %422 = ptrtoint %"class.WTF::StringImpl"* %402 to i64
  %423 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  store i64 %422, i64* %194, align 8
  %424 = icmp eq %"class.WTF::StringImpl"* %423, null
  br i1 %424, label %440, label %425

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %423, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %427 = load atomic i32, i32* %426 monotonic, align 4
  %428 = and i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %423, i64 0, i32 0
  %431 = load i32, i32* %430, align 4
  br i1 %429, label %432, label %434

432:                                              ; preds = %425
  %433 = add i32 %431, -1
  store i32 %433, i32* %430, align 4
  br label %434

434:                                              ; preds = %432, %425
  %435 = phi i32 [ %433, %432 ], [ %431, %425 ]
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %438

437:                                              ; preds = %434
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %423) #13
  br label %438

438:                                              ; preds = %437, %434
  %439 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  br label %440

440:                                              ; preds = %438, %421
  %441 = phi %"class.WTF::StringImpl"* [ %439, %438 ], [ %402, %421 ]
  %442 = icmp eq %"class.WTF::StringImpl"* %441, null
  br i1 %442, label %475, label %443

443:                                              ; preds = %440
  %444 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %444) #13
  %445 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 0
  store %"class.WTF::StringImpl"* %441, %"class.WTF::StringImpl"** %445, align 8
  %446 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %441, i64 0, i32 1
  %447 = load i32, i32* %446, align 4
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %441, i64 1
  %449 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  %450 = bitcast i8** %449 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %448, %"class.WTF::StringImpl"** %450, align 8
  %451 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 %447, i32* %451, align 8
  %452 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm5EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %20, [5 x i8]* nonnull dereferenceable(5) @.str.3) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %444) #13
  br i1 %452, label %473, label %453

453:                                              ; preds = %443
  %454 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %454) #13
  %455 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %456 = icmp eq %"class.WTF::StringImpl"* %455, null
  br i1 %456, label %457, label %461

457:                                              ; preds = %453
  %458 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* null, i8** %458, align 8
  %459 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %460 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %459, i64* %460, align 8
  br label %468

461:                                              ; preds = %453
  %462 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 0
  store %"class.WTF::StringImpl"* %455, %"class.WTF::StringImpl"** %462, align 8
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 0, i32 1
  %464 = load i32, i32* %463, align 4
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %455, i64 1
  %466 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  %467 = bitcast i8** %466 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %465, %"class.WTF::StringImpl"** %467, align 8
  br label %468

468:                                              ; preds = %461, %457
  %469 = phi i32 [ %464, %461 ], [ 0, %457 ]
  %470 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 %469, i32* %470, align 8
  %471 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm7EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %21, [7 x i8]* nonnull dereferenceable(7) @.str.4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %454) #13
  %472 = select i1 %471, i32 2, i32 0
  br label %473

473:                                              ; preds = %443, %468
  %474 = phi i32 [ 1, %443 ], [ %472, %468 ]
  store i32 %474, i32* %56, align 8
  br label %475

475:                                              ; preds = %473, %440
  %476 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names15kFormtargetAttrE, align 8
  %477 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %67, align 8
  %478 = icmp eq %"class.blink::ElementData"* %477, null
  br i1 %478, label %529, label %479

479:                                              ; preds = %475
  %480 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %477, i64 0, i32 0, i32 0, i32 0
  %481 = load i32, i32* %480, align 4
  %482 = and i32 %481, 1
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %491, label %484

484:                                              ; preds = %479
  %485 = bitcast %"class.blink::ElementData"* %477 to %"class.blink::UniqueElementData"*
  %486 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %477, i64 1, i32 1
  %487 = bitcast %"class.blink::Member.19"* %486 to %"class.blink::Attribute"**
  %488 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %487, align 8
  %489 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %485, i64 0, i32 2, i32 0, i32 0, i32 2
  %490 = load i32, i32* %489, align 4
  br label %496

491:                                              ; preds = %479
  %492 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %477, i64 1
  %493 = bitcast %"class.blink::ElementData"* %492 to %"class.blink::Attribute"*
  %494 = lshr i32 %481, 1
  %495 = and i32 %494, 268435455
  br label %496

496:                                              ; preds = %491, %484
  %497 = phi %"class.blink::Attribute"* [ %493, %491 ], [ %488, %484 ]
  %498 = phi i32 [ %495, %491 ], [ %490, %484 ]
  %499 = zext i32 %498 to i64
  %500 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %497, i64 %499
  %501 = icmp eq i32 %498, 0
  br i1 %501, label %529, label %502

502:                                              ; preds = %496
  %503 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %476, i64 0, i32 0, i32 0
  %504 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %503, align 8
  %505 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %504, i64 0, i32 3, i32 0, i32 0, i32 0
  %506 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %504, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %507

507:                                              ; preds = %522, %502
  %508 = phi %"class.blink::Attribute"* [ %497, %502 ], [ %523, %522 ]
  %509 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %508, i64 0, i32 0, i32 0, i32 0
  %510 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %509, align 8
  %511 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %510, %504
  br i1 %511, label %525, label %512

512:                                              ; preds = %507
  %513 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %510, i64 0, i32 3, i32 0, i32 0, i32 0
  %514 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %513, align 8
  %515 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %505, align 8
  %516 = icmp eq %"class.WTF::StringImpl"* %514, %515
  br i1 %516, label %517, label %522

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %510, i64 0, i32 4, i32 0, i32 0, i32 0
  %519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %518, align 8
  %520 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %506, align 8
  %521 = icmp eq %"class.WTF::StringImpl"* %519, %520
  br i1 %521, label %525, label %522

522:                                              ; preds = %517, %512
  %523 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %508, i64 1
  %524 = icmp eq %"class.blink::Attribute"* %523, %500
  br i1 %524, label %529, label %507

525:                                              ; preds = %517, %507
  %526 = icmp eq %"class.blink::Attribute"* %508, null
  br i1 %526, label %529, label %527

527:                                              ; preds = %525
  %528 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %508, i64 0, i32 1
  br label %531

529:                                              ; preds = %522, %525, %496, %475
  %530 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %531

531:                                              ; preds = %527, %529
  %532 = phi %"class.WTF::AtomicString"* [ %530, %529 ], [ %528, %527 ]
  %533 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %532, i64 0, i32 0, i32 0, i32 0
  %534 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %533, align 8
  %535 = icmp eq %"class.WTF::StringImpl"* %534, null
  br i1 %535, label %553, label %536

536:                                              ; preds = %531
  %537 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %538 = load atomic i32, i32* %537 monotonic, align 4
  %539 = and i32 %538, 2
  %540 = icmp eq i32 %539, 0
  br i1 %540, label %541, label %553

541:                                              ; preds = %536
  %542 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %534, i64 0, i32 0
  %543 = load i32, i32* %542, align 4
  %544 = zext i32 %543 to i33
  %545 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %544, i33 1) #13
  %546 = extractvalue { i33, i1 } %545, 1
  %547 = extractvalue { i33, i1 } %545, 0
  %548 = icmp slt i33 %547, 0
  %549 = or i1 %546, %548
  br i1 %549, label %550, label %551, !prof !2

550:                                              ; preds = %541
  call void @llvm.trap() #13
  unreachable

551:                                              ; preds = %541
  %552 = trunc i33 %547 to i32
  store i32 %552, i32* %542, align 4
  br label %553

553:                                              ; preds = %551, %536, %531
  %554 = ptrtoint %"class.WTF::StringImpl"* %534 to i64
  %555 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  store i64 %554, i64* %194, align 8
  %556 = icmp eq %"class.WTF::StringImpl"* %555, null
  br i1 %556, label %572, label %557

557:                                              ; preds = %553
  %558 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %555, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %559 = load atomic i32, i32* %558 monotonic, align 4
  %560 = and i32 %559, 2
  %561 = icmp eq i32 %560, 0
  %562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %555, i64 0, i32 0
  %563 = load i32, i32* %562, align 4
  br i1 %561, label %564, label %566

564:                                              ; preds = %557
  %565 = add i32 %563, -1
  store i32 %565, i32* %562, align 4
  br label %566

566:                                              ; preds = %564, %557
  %567 = phi i32 [ %565, %564 ], [ %563, %557 ]
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %569, label %570

569:                                              ; preds = %566
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %555) #13
  br label %570

570:                                              ; preds = %569, %566
  %571 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  br label %572

572:                                              ; preds = %570, %553
  %573 = phi %"class.WTF::StringImpl"* [ %571, %570 ], [ %534, %553 ]
  %574 = icmp eq %"class.WTF::StringImpl"* %573, null
  br i1 %574, label %612, label %575

575:                                              ; preds = %572
  %576 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %26, i64 0, i32 3
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %578 = load atomic i32, i32* %577 monotonic, align 4
  %579 = and i32 %578, 2
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %581, label %593

581:                                              ; preds = %575
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %573, i64 0, i32 0
  %583 = load i32, i32* %582, align 4
  %584 = zext i32 %583 to i33
  %585 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %584, i33 1) #13
  %586 = extractvalue { i33, i1 } %585, 1
  %587 = extractvalue { i33, i1 } %585, 0
  %588 = icmp slt i33 %587, 0
  %589 = or i1 %586, %588
  br i1 %589, label %590, label %591, !prof !2

590:                                              ; preds = %581
  call void @llvm.trap() #13
  unreachable

591:                                              ; preds = %581
  %592 = trunc i33 %587 to i32
  store i32 %592, i32* %582, align 4
  br label %593

593:                                              ; preds = %591, %575
  %594 = ptrtoint %"class.WTF::StringImpl"* %573 to i64
  %595 = bitcast %"class.WTF::AtomicString"* %576 to i64*
  %596 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %576, i64 0, i32 0, i32 0, i32 0
  %597 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %596, align 8
  store i64 %594, i64* %595, align 8
  %598 = icmp eq %"class.WTF::StringImpl"* %597, null
  br i1 %598, label %612, label %599

599:                                              ; preds = %593
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = load atomic i32, i32* %600 monotonic, align 4
  %602 = and i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %597, i64 0, i32 0
  %605 = load i32, i32* %604, align 4
  br i1 %603, label %606, label %608

606:                                              ; preds = %599
  %607 = add i32 %605, -1
  store i32 %607, i32* %604, align 4
  br label %608

608:                                              ; preds = %606, %599
  %609 = phi i32 [ %607, %606 ], [ %605, %599 ]
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %612

611:                                              ; preds = %608
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %597) #13
  br label %612

612:                                              ; preds = %611, %608, %593, %572
  %613 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %614 = icmp eq %"class.WTF::StringImpl"* %613, null
  br i1 %614, label %628, label %615

615:                                              ; preds = %612
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %617 = load atomic i32, i32* %616 monotonic, align 4
  %618 = and i32 %617, 2
  %619 = icmp eq i32 %618, 0
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %613, i64 0, i32 0
  %621 = load i32, i32* %620, align 4
  br i1 %619, label %622, label %624

622:                                              ; preds = %615
  %623 = add i32 %621, -1
  store i32 %623, i32* %620, align 4
  br label %624

624:                                              ; preds = %622, %615
  %625 = phi i32 [ %623, %622 ], [ %621, %615 ]
  %626 = icmp eq i32 %625, 0
  br i1 %626, label %627, label %628

627:                                              ; preds = %624
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %613) #13
  br label %628

628:                                              ; preds = %612, %624, %627
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #13
  br label %629

629:                                              ; preds = %628, %4
  %630 = load i32, i32* %56, align 8
  %631 = icmp eq i32 %630, 2
  br i1 %631, label %632, label %660

632:                                              ; preds = %629
  br i1 %62, label %633, label %658

633:                                              ; preds = %632
  %634 = bitcast %"class.WTF::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %634) #13
  %635 = bitcast %"class.blink::HTMLFormControlElement"* %3 to %"class.WTF::StringImpl"* (%"class.blink::HTMLFormControlElement"*)***
  %636 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLFormControlElement"*)**, %"class.WTF::StringImpl"* (%"class.blink::HTMLFormControlElement"*)*** %635, align 8
  %637 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLFormControlElement"*)** %636, i64 174
  %638 = load %"class.WTF::StringImpl"* (%"class.blink::HTMLFormControlElement"*)*, %"class.WTF::StringImpl"* (%"class.blink::HTMLFormControlElement"*)** %637, align 8
  %639 = call %"class.WTF::StringImpl"* %638(%"class.blink::HTMLFormControlElement"* nonnull %3) #13
  %640 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %639, %"class.WTF::StringImpl"** %640, align 8
  %641 = call %"class.blink::FormSubmission"* @_ZN5blink25MakeGarbageCollectedTraitINS_14FormSubmissionEE4CallIJN3WTF6StringEEEEPS1_DpOT_(%"class.WTF::String"* nonnull dereferenceable(8) %28) #13
  %642 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %640, align 8
  %643 = icmp eq %"class.WTF::StringImpl"* %642, null
  br i1 %643, label %657, label %644

644:                                              ; preds = %633
  %645 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %646 = load atomic i32, i32* %645 monotonic, align 4
  %647 = and i32 %646, 2
  %648 = icmp eq i32 %647, 0
  %649 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %642, i64 0, i32 0
  %650 = load i32, i32* %649, align 4
  br i1 %648, label %651, label %653

651:                                              ; preds = %644
  %652 = add i32 %650, -1
  store i32 %652, i32* %649, align 4
  br label %653

653:                                              ; preds = %651, %644
  %654 = phi i32 [ %652, %651 ], [ %650, %644 ]
  %655 = icmp eq i32 %654, 0
  br i1 %655, label %656, label %657

656:                                              ; preds = %653
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %642) #13
  br label %657

657:                                              ; preds = %633, %653, %656
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %634) #13
  br label %1725

658:                                              ; preds = %632
  %659 = call %"class.blink::FormSubmission"* @_ZN5blink25MakeGarbageCollectedTraitINS_14FormSubmissionEE4CallIJRA1_KcEEEPS1_DpOT_([1 x i8]* nonnull dereferenceable(1) @.str.6) #13
  br label %1725

660:                                              ; preds = %629
  %661 = bitcast %"class.blink::HTMLFormElement"** %24 to %"class.blink::Node"**
  %662 = load %"class.blink::Node"*, %"class.blink::Node"** %661, align 8
  %663 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %662, i64 0, i32 3, i32 0, i32 0
  %664 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %663, align 8
  %665 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %664, i64 0, i32 2, i32 0, i32 0
  %666 = load %"class.blink::Document"*, %"class.blink::Document"** %665, align 8
  %667 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %29, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %667) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %667, i8 -86, i64 112, i1 false)
  %668 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %26, i64 0, i32 2
  %669 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %668, i64 0, i32 0, i32 0
  %670 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %669, align 8
  %671 = icmp eq %"class.WTF::StringImpl"* %670, null
  br i1 %671, label %676, label %672

672:                                              ; preds = %660
  %673 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %670, i64 0, i32 1
  %674 = load i32, i32* %673, align 4
  %675 = icmp eq i32 %674, 0
  br i1 %675, label %676, label %678

676:                                              ; preds = %660, %672
  %677 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %666, i64 0, i32 19, i32 4
  br label %678

678:                                              ; preds = %672, %676
  %679 = phi %"class.WTF::String"* [ %677, %676 ], [ %668, %672 ]
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %29, %"class.blink::Document"* %666, %"class.WTF::String"* dereferenceable(8) %679) #13
  %680 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %666, i64 0, i32 12, i32 0, i32 0
  %681 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %680, align 8
  %682 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %681, i64 0, i32 1, i32 6, i32 8
  %683 = load i32, i32* %682, align 8
  %684 = and i32 %683, 1
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %723, label %686

686:                                              ; preds = %678
  %687 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %688 = bitcast %"class.WTF::StringView"* %30 to i64*
  store i64 %687, i64* %688, align 8
  %689 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i8** %689, align 8
  %690 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %30, i64 0, i32 2
  store i32 4, i32* %690, align 8
  %691 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* nonnull %29, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %30) #13
  br i1 %691, label %692, label %723

692:                                              ; preds = %686
  %693 = bitcast %class.GURL* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %693) #13
  call void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* nonnull sret %31, %"class.blink::KURL"* nonnull %29) #13
  %694 = call zeroext i1 @_ZN7network27IsUrlPotentiallyTrustworthyERK4GURL(%class.GURL* nonnull dereferenceable(120) %31) #13
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %693) #13
  br i1 %694, label %723, label %695

695:                                              ; preds = %692
  %696 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %666, i64 0, i32 2
  %697 = bitcast %"class.blink::UseCounter"* %696 to void (%"class.blink::UseCounter"*, i32)***
  %698 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %697, align 8
  %699 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %698, i64 3
  %700 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %699, align 8
  call void %700(%"class.blink::UseCounter"* %696, i32 3079) #13
  %701 = bitcast %"class.WTF::String"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %701) #13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), i64 5) #13
  %702 = call zeroext i1 @_ZN5blink4KURL11SetProtocolERKN3WTF6StringE(%"class.blink::KURL"* nonnull %29, %"class.WTF::String"* nonnull dereferenceable(8) %32) #13
  %703 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %704 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %703, align 8
  %705 = icmp eq %"class.WTF::StringImpl"* %704, null
  br i1 %705, label %719, label %706

706:                                              ; preds = %695
  %707 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %704, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %708 = load atomic i32, i32* %707 monotonic, align 4
  %709 = and i32 %708, 2
  %710 = icmp eq i32 %709, 0
  %711 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %704, i64 0, i32 0
  %712 = load i32, i32* %711, align 4
  br i1 %710, label %713, label %715

713:                                              ; preds = %706
  %714 = add i32 %712, -1
  store i32 %714, i32* %711, align 4
  br label %715

715:                                              ; preds = %713, %706
  %716 = phi i32 [ %714, %713 ], [ %712, %706 ]
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %718, label %719

718:                                              ; preds = %715
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %704) #13
  br label %719

719:                                              ; preds = %695, %715, %718
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %701) #13
  %720 = call zeroext i16 @_ZNK5blink4KURL4PortEv(%"class.blink::KURL"* nonnull %29) #13
  %721 = icmp eq i16 %720, 80
  br i1 %721, label %722, label %723

722:                                              ; preds = %719
  call void @_ZN5blink4KURL7SetPortEt(%"class.blink::KURL"* nonnull %29, i16 zeroext 443) #13
  br label %723

723:                                              ; preds = %722, %719, %678, %686, %692
  %724 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %725 = bitcast %"class.WTF::StringView"* %33 to i64*
  store i64 %724, i64* %725, align 8
  %726 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i8** %726, align 8
  %727 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %33, i64 0, i32 2
  store i32 6, i32* %727, align 8
  %728 = call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* nonnull %29, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %33) #13
  %729 = bitcast %"class.WTF::AtomicString"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %729) #13
  %730 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0, i32 0, i32 0
  %731 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %59, i64 0, i32 0, i32 0, i32 0
  %732 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %731, align 8
  store %"class.WTF::StringImpl"* %732, %"class.WTF::StringImpl"** %730, align 8
  %733 = icmp eq %"class.WTF::StringImpl"* %732, null
  br i1 %733, label %751, label %734

734:                                              ; preds = %723
  %735 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %732, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %736 = load atomic i32, i32* %735 monotonic, align 4
  %737 = and i32 %736, 2
  %738 = icmp eq i32 %737, 0
  br i1 %738, label %739, label %751

739:                                              ; preds = %734
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %732, i64 0, i32 0
  %741 = load i32, i32* %740, align 4
  %742 = zext i32 %741 to i33
  %743 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %742, i33 1) #13
  %744 = extractvalue { i33, i1 } %743, 1
  %745 = extractvalue { i33, i1 } %743, 0
  %746 = icmp slt i33 %745, 0
  %747 = or i1 %744, %746
  br i1 %747, label %748, label %749, !prof !2

748:                                              ; preds = %739
  call void @llvm.trap() #13
  unreachable

749:                                              ; preds = %739
  %750 = trunc i33 %745 to i32
  store i32 %750, i32* %740, align 4
  br label %751

751:                                              ; preds = %723, %734, %749
  %752 = load i32, i32* %56, align 8
  %753 = icmp eq i32 %752, 1
  br i1 %753, label %754, label %796

754:                                              ; preds = %751
  %755 = load i8, i8* %57, align 4, !range !3
  %756 = icmp ne i8 %755, 0
  %757 = and i1 %728, %756
  br i1 %757, label %758, label %796

758:                                              ; preds = %754
  %759 = bitcast %"class.WTF::AtomicString"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %759) #13
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %35, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.2, i64 0, i64 0), i64 33) #13
  %760 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %35, i64 0, i32 0, i32 0, i32 0
  %761 = bitcast %"class.WTF::AtomicString"* %35 to i64*
  %762 = load i64, i64* %761, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %760, align 8
  %763 = bitcast %"class.WTF::AtomicString"* %34 to i64*
  %764 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %730, align 8
  store i64 %762, i64* %763, align 8
  %765 = icmp eq %"class.WTF::StringImpl"* %764, null
  br i1 %765, label %795, label %766

766:                                              ; preds = %758
  %767 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %768 = load atomic i32, i32* %767 monotonic, align 4
  %769 = and i32 %768, 2
  %770 = icmp eq i32 %769, 0
  %771 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %764, i64 0, i32 0
  %772 = load i32, i32* %771, align 4
  br i1 %770, label %773, label %775

773:                                              ; preds = %766
  %774 = add i32 %772, -1
  store i32 %774, i32* %771, align 4
  br label %775

775:                                              ; preds = %773, %766
  %776 = phi i32 [ %774, %773 ], [ %772, %766 ]
  %777 = icmp eq i32 %776, 0
  br i1 %777, label %778, label %779

778:                                              ; preds = %775
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %764) #13
  br label %779

779:                                              ; preds = %775, %778
  %780 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %760, align 8
  %781 = icmp eq %"class.WTF::StringImpl"* %780, null
  br i1 %781, label %795, label %782

782:                                              ; preds = %779
  %783 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %780, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %784 = load atomic i32, i32* %783 monotonic, align 4
  %785 = and i32 %784, 2
  %786 = icmp eq i32 %785, 0
  %787 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %780, i64 0, i32 0
  %788 = load i32, i32* %787, align 4
  br i1 %786, label %789, label %791

789:                                              ; preds = %782
  %790 = add i32 %788, -1
  store i32 %790, i32* %787, align 4
  br label %791

791:                                              ; preds = %789, %782
  %792 = phi i32 [ %790, %789 ], [ %788, %782 ]
  %793 = icmp eq i32 %792, 0
  br i1 %793, label %794, label %795

794:                                              ; preds = %791
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %780) #13
  br label %795

795:                                              ; preds = %758, %779, %791, %794
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %759) #13
  br label %796

796:                                              ; preds = %754, %795, %751
  %797 = phi i1 [ false, %795 ], [ %756, %754 ], [ false, %751 ]
  %798 = bitcast %"class.WTF::TextEncoding"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %798) #13
  %799 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %36, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %799, align 8
  br i1 %728, label %800, label %805

800:                                              ; preds = %796
  %801 = call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() #13
  %802 = bitcast %"class.WTF::TextEncoding"* %801 to i64*
  %803 = bitcast %"class.WTF::TextEncoding"* %36 to i64*
  %804 = load i64, i64* %802, align 8
  store i64 %804, i64* %803, align 8
  br label %809

805:                                              ; preds = %796
  %806 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %26, i64 0, i32 5
  %807 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %666, i64 0, i32 95, i32 0
  %808 = call i8* @_ZN5blink15FormDataEncoder25EncodingFromAcceptCharsetERKN3WTF6StringERKNS1_12TextEncodingE(%"class.WTF::String"* dereferenceable(8) %806, %"class.WTF::TextEncoding"* dereferenceable(8) %807) #13
  store i8* %808, i8** %799, align 8
  br label %809

809:                                              ; preds = %805, %800
  %810 = load %"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormElement"** %24, align 8
  %811 = call dereferenceable(8) %"class.WTF::TextEncoding"* @_ZNK3WTF12TextEncoding25EncodingForFormSubmissionEv(%"class.WTF::TextEncoding"* nonnull %36) #13
  %812 = call %"class.blink::FormData"* @_ZN5blink15HTMLFormElement18ConstructEntryListEPNS_22HTMLFormControlElementERKN3WTF12TextEncodingE(%"class.blink::HTMLFormElement"* %810, %"class.blink::HTMLFormControlElement"* %3, %"class.WTF::TextEncoding"* dereferenceable(8) %811) #13
  %813 = bitcast %class.scoped_refptr.44* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %813) #13
  %814 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %37, i64 0, i32 0
  store %"class.blink::EncodedFormData"* null, %"class.blink::EncodedFormData"** %814, align 8
  br i1 %797, label %815, label %840

815:                                              ; preds = %809
  %816 = call %"class.blink::EncodedFormData"* @_ZN5blink8FormData23EncodeMultiPartFormDataEv(%"class.blink::FormData"* %812) #13
  %817 = ptrtoint %"class.blink::EncodedFormData"* %816 to i64
  %818 = bitcast %class.scoped_refptr.44* %37 to i64*
  %819 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %814, align 8
  store i64 %817, i64* %818, align 8
  %820 = icmp eq %"class.blink::EncodedFormData"* %819, null
  br i1 %820, label %828, label %821

821:                                              ; preds = %815
  %822 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %819, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %822) #13
  %823 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %819, i64 0, i32 0, i32 0, i32 0, i32 0
  %824 = load i32, i32* %823, align 4
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %826, label %828

826:                                              ; preds = %821
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %819) #13
  %827 = bitcast %"class.blink::EncodedFormData"* %819 to i8*
  call void @free(i8* %827) #13
  br label %828

828:                                              ; preds = %815, %821, %826
  %829 = bitcast %"class.WTF::String"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %829) #13
  %830 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %814, align 8
  %831 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %830, i64 0, i32 4, i32 0, i32 0, i32 0
  %832 = load i8*, i8** %831, align 8
  %833 = icmp eq i8* %832, null
  br i1 %833, label %836, label %834

834:                                              ; preds = %828
  %835 = call i64 @strlen(i8* nonnull %832) #14
  br label %836

836:                                              ; preds = %834, %828
  %837 = phi i64 [ %835, %834 ], [ 0, %828 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %38, i8* %832, i64 %837) #13
  %838 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 0, i32 0, i32 0
  %839 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %838, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %829) #13
  br label %1276

840:                                              ; preds = %809
  %841 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %1, i64 0, i32 0
  %842 = load i32, i32* %841, align 8
  %843 = icmp eq i32 %842, 0
  br i1 %843, label %847, label %844

844:                                              ; preds = %840
  %845 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %34, i64 0, i32 0
  %846 = call i32 @_ZN5blink15EncodedFormData17ParseEncodingTypeERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %845)
  br label %847

847:                                              ; preds = %840, %844
  %848 = phi i32 [ %846, %844 ], [ 0, %840 ]
  %849 = call %"class.blink::EncodedFormData"* @_ZN5blink8FormData14EncodeFormDataENS_15EncodedFormData12EncodingTypeE(%"class.blink::FormData"* %812, i32 %848) #13
  %850 = ptrtoint %"class.blink::EncodedFormData"* %849 to i64
  %851 = bitcast %class.scoped_refptr.44* %37 to i64*
  %852 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %814, align 8
  store i64 %850, i64* %851, align 8
  %853 = icmp eq %"class.blink::EncodedFormData"* %852, null
  br i1 %853, label %861, label %854

854:                                              ; preds = %847
  %855 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %852, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %855) #13
  %856 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %852, i64 0, i32 0, i32 0, i32 0, i32 0
  %857 = load i32, i32* %856, align 4
  %858 = icmp eq i32 %857, 0
  br i1 %858, label %859, label %861

859:                                              ; preds = %854
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %852) #13
  %860 = bitcast %"class.blink::EncodedFormData"* %852 to i8*
  call void @free(i8* %860) #13
  br label %861

861:                                              ; preds = %847, %854, %859
  %862 = load i32, i32* %56, align 8
  %863 = icmp ne i32 %862, 1
  %864 = xor i1 %728, true
  %865 = or i1 %863, %864
  br i1 %865, label %1276, label %866

866:                                              ; preds = %861
  %867 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %814, align 8
  %868 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %868) #13
  %869 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %870 = call %"class.WTF::StringImpl"* @_ZNK5blink15EncodedFormData15FlattenToStringEv(%"class.blink::EncodedFormData"* %867) #13
  store %"class.WTF::StringImpl"* %870, %"class.WTF::StringImpl"** %869, align 8
  %871 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %871) #13
  %872 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %730, align 8
  %873 = icmp eq %"class.WTF::StringImpl"* %872, null
  br i1 %873, label %874, label %878

874:                                              ; preds = %866
  %875 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %875, align 8
  %876 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %877 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %876, i64* %877, align 8
  br label %885

878:                                              ; preds = %866
  %879 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %872, %"class.WTF::StringImpl"** %879, align 8
  %880 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %872, i64 0, i32 1
  %881 = load i32, i32* %880, align 4
  %882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %872, i64 1
  %883 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %884 = bitcast i8** %883 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %882, %"class.WTF::StringImpl"** %884, align 8
  br label %885

885:                                              ; preds = %878, %874
  %886 = phi i32 [ %881, %878 ], [ 0, %874 ]
  %887 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %886, i32* %887, align 8
  %888 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [11 x i8]* nonnull dereferenceable(11) @.str.1) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %871) #13
  br i1 %888, label %889, label %1048

889:                                              ; preds = %885
  %890 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %890) #13
  %891 = bitcast %"class.WTF::StringAppend.1789"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %891) #13
  %892 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %892) #13
  %893 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %894 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %893, i64* %894, align 8
  %895 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8** %895, align 8
  %896 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 2, i32* %896, align 8
  %897 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %869, align 8
  %898 = icmp eq %"class.WTF::StringImpl"* %897, null
  br i1 %898, label %899, label %901

899:                                              ; preds = %889
  %900 = bitcast %"class.WTF::String"* %6 to i64*
  br label %991

901:                                              ; preds = %889
  %902 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %897, i16 zeroext 38, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #13
  %903 = ptrtoint %"class.WTF::StringImpl"* %902 to i64
  %904 = bitcast %"class.WTF::String"* %6 to i64*
  %905 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %869, align 8
  store i64 %903, i64* %904, align 8
  %906 = icmp eq %"class.WTF::StringImpl"* %905, null
  br i1 %906, label %922, label %907

907:                                              ; preds = %901
  %908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %905, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %909 = load atomic i32, i32* %908 monotonic, align 4
  %910 = and i32 %909, 2
  %911 = icmp eq i32 %910, 0
  %912 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %905, i64 0, i32 0
  %913 = load i32, i32* %912, align 4
  br i1 %911, label %914, label %916

914:                                              ; preds = %907
  %915 = add i32 %913, -1
  store i32 %915, i32* %912, align 4
  br label %916

916:                                              ; preds = %914, %907
  %917 = phi i32 [ %915, %914 ], [ %913, %907 ]
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %919, label %920

919:                                              ; preds = %916
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %905) #13
  br label %920

920:                                              ; preds = %919, %916
  %921 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %869, align 8
  br label %922

922:                                              ; preds = %920, %901
  %923 = phi %"class.WTF::StringImpl"* [ %921, %920 ], [ %902, %901 ]
  %924 = icmp eq %"class.WTF::StringImpl"* %923, null
  br i1 %924, label %943, label %925

925:                                              ; preds = %922
  %926 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"* nonnull %923, i16 zeroext 43, i16 zeroext 32) #13
  %927 = ptrtoint %"class.WTF::StringImpl"* %926 to i64
  %928 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %869, align 8
  store i64 %927, i64* %904, align 8
  %929 = icmp eq %"class.WTF::StringImpl"* %928, null
  br i1 %929, label %945, label %930

930:                                              ; preds = %925
  %931 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %932 = load atomic i32, i32* %931 monotonic, align 4
  %933 = and i32 %932, 2
  %934 = icmp eq i32 %933, 0
  %935 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %928, i64 0, i32 0
  %936 = load i32, i32* %935, align 4
  br i1 %934, label %937, label %939

937:                                              ; preds = %930
  %938 = add i32 %936, -1
  store i32 %938, i32* %935, align 4
  br label %939

939:                                              ; preds = %937, %930
  %940 = phi i32 [ %938, %937 ], [ %936, %930 ]
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %942, label %943

942:                                              ; preds = %939
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %928) #13
  br label %943

943:                                              ; preds = %942, %939, %922
  %944 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %869, align 8
  br label %945

945:                                              ; preds = %943, %925
  %946 = phi %"class.WTF::StringImpl"* [ %944, %943 ], [ %926, %925 ]
  %947 = icmp eq %"class.WTF::StringImpl"* %946, null
  br i1 %947, label %991, label %948

948:                                              ; preds = %945
  %949 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %946, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %950 = load atomic i32, i32* %949 monotonic, align 4
  %951 = and i32 %950, 2
  %952 = icmp eq i32 %951, 0
  %953 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %946, i64 0, i32 0
  %954 = load i32, i32* %953, align 4
  br i1 %952, label %955, label %965

955:                                              ; preds = %948
  %956 = zext i32 %954 to i33
  %957 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %956, i33 1) #13
  %958 = extractvalue { i33, i1 } %957, 1
  %959 = extractvalue { i33, i1 } %957, 0
  %960 = icmp slt i33 %959, 0
  %961 = or i1 %958, %960
  br i1 %961, label %962, label %963, !prof !2

962:                                              ; preds = %955
  call void @llvm.trap() #13
  unreachable

963:                                              ; preds = %955
  %964 = trunc i33 %959 to i32
  store i32 %964, i32* %953, align 4
  br label %965

965:                                              ; preds = %963, %948
  %966 = phi i32 [ %964, %963 ], [ %954, %948 ]
  %967 = load atomic i32, i32* %949 monotonic, align 4
  %968 = and i32 %967, 2
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %970, label %980

970:                                              ; preds = %965
  %971 = zext i32 %966 to i33
  %972 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %971, i33 1) #13
  %973 = extractvalue { i33, i1 } %972, 1
  %974 = extractvalue { i33, i1 } %972, 0
  %975 = icmp slt i33 %974, 0
  %976 = or i1 %973, %975
  br i1 %976, label %977, label %978, !prof !2

977:                                              ; preds = %970
  call void @llvm.trap() #13
  unreachable

978:                                              ; preds = %970
  %979 = trunc i33 %974 to i32
  store i32 %979, i32* %953, align 4
  br label %980

980:                                              ; preds = %978, %965
  %981 = phi i32 [ %979, %978 ], [ %966, %965 ]
  %982 = load atomic i32, i32* %949 monotonic, align 4
  %983 = and i32 %982, 2
  %984 = icmp eq i32 %983, 0
  br i1 %984, label %985, label %987

985:                                              ; preds = %980
  %986 = add i32 %981, -1
  store i32 %986, i32* %953, align 4
  br label %987

987:                                              ; preds = %985, %980
  %988 = phi i32 [ %986, %985 ], [ %981, %980 ]
  %989 = icmp eq i32 %988, 0
  br i1 %989, label %990, label %991

990:                                              ; preds = %987
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %946) #13
  br label %991

991:                                              ; preds = %990, %987, %945, %899
  %992 = phi i64* [ %900, %899 ], [ %904, %945 ], [ %904, %987 ], [ %904, %990 ]
  %993 = phi %"class.WTF::StringImpl"* [ null, %899 ], [ null, %945 ], [ %946, %987 ], [ %946, %990 ]
  %994 = getelementptr inbounds %"class.WTF::StringAppend.1789", %"class.WTF::StringAppend.1789"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %993, %"class.WTF::StringImpl"** %994, align 8
  %995 = getelementptr inbounds %"class.WTF::StringAppend.1789", %"class.WTF::StringAppend.1789"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), i8** %995, align 8
  %996 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1789"* nonnull %9) #13
  %997 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %996, %"class.WTF::StringImpl"** %997, align 8
  %998 = call %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* nonnull dereferenceable(8) %8, i32 1) #13
  %999 = ptrtoint %"class.WTF::StringImpl"* %998 to i64
  %1000 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %869, align 8
  store i64 %999, i64* %992, align 8
  %1001 = icmp eq %"class.WTF::StringImpl"* %1000, null
  br i1 %1001, label %1015, label %1002

1002:                                             ; preds = %991
  %1003 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1000, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1004 = load atomic i32, i32* %1003 monotonic, align 4
  %1005 = and i32 %1004, 2
  %1006 = icmp eq i32 %1005, 0
  %1007 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1000, i64 0, i32 0
  %1008 = load i32, i32* %1007, align 4
  br i1 %1006, label %1009, label %1011

1009:                                             ; preds = %1002
  %1010 = add i32 %1008, -1
  store i32 %1010, i32* %1007, align 4
  br label %1011

1011:                                             ; preds = %1009, %1002
  %1012 = phi i32 [ %1010, %1009 ], [ %1008, %1002 ]
  %1013 = icmp eq i32 %1012, 0
  br i1 %1013, label %1014, label %1015

1014:                                             ; preds = %1011
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1000) #13
  br label %1015

1015:                                             ; preds = %1014, %1011, %991
  %1016 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %997, align 8
  %1017 = icmp eq %"class.WTF::StringImpl"* %1016, null
  br i1 %1017, label %1031, label %1018

1018:                                             ; preds = %1015
  %1019 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1016, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1020 = load atomic i32, i32* %1019 monotonic, align 4
  %1021 = and i32 %1020, 2
  %1022 = icmp eq i32 %1021, 0
  %1023 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1016, i64 0, i32 0
  %1024 = load i32, i32* %1023, align 4
  br i1 %1022, label %1025, label %1027

1025:                                             ; preds = %1018
  %1026 = add i32 %1024, -1
  store i32 %1026, i32* %1023, align 4
  br label %1027

1027:                                             ; preds = %1025, %1018
  %1028 = phi i32 [ %1026, %1025 ], [ %1024, %1018 ]
  %1029 = icmp eq i32 %1028, 0
  br i1 %1029, label %1030, label %1031

1030:                                             ; preds = %1027
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1016) #13
  br label %1031

1031:                                             ; preds = %1030, %1027, %1015
  %1032 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %994, align 8
  %1033 = icmp eq %"class.WTF::StringImpl"* %1032, null
  br i1 %1033, label %1047, label %1034

1034:                                             ; preds = %1031
  %1035 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1032, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1036 = load atomic i32, i32* %1035 monotonic, align 4
  %1037 = and i32 %1036, 2
  %1038 = icmp eq i32 %1037, 0
  %1039 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1032, i64 0, i32 0
  %1040 = load i32, i32* %1039, align 4
  br i1 %1038, label %1041, label %1043

1041:                                             ; preds = %1034
  %1042 = add i32 %1040, -1
  store i32 %1042, i32* %1039, align 4
  br label %1043

1043:                                             ; preds = %1041, %1034
  %1044 = phi i32 [ %1042, %1041 ], [ %1040, %1034 ]
  %1045 = icmp eq i32 %1044, 0
  br i1 %1045, label %1046, label %1047

1046:                                             ; preds = %1043
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1032) #13
  br label %1047

1047:                                             ; preds = %1046, %1043, %1031
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %892) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %891) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %890) #13
  br label %1048

1048:                                             ; preds = %1047, %885
  %1049 = bitcast %"class.WTF::Vector.50"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1049) #13
  %1050 = getelementptr inbounds %"class.WTF::Vector.50", %"class.WTF::Vector.50"* %11, i64 0, i32 0, i32 0, i32 0
  %1051 = getelementptr inbounds %"class.WTF::Vector.50", %"class.WTF::Vector.50"* %11, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1049, i8 0, i64 16, i1 false) #13
  call void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.50"* nonnull %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i32 5) #13
  %1052 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1052) #13
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %12, %"class.WTF::String"* nonnull %6, i32 0) #13
  call void @_ZN5blink15FormDataEncoder22EncodeStringAsFormDataERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS0_4ModeE(%"class.WTF::Vector.50"* nonnull dereferenceable(16) %11, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %12, i32 0) #13
  %1053 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1054 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1053, i64 0, i32 1, i32 0
  %1055 = load i8, i8* %1054, align 1
  %1056 = icmp slt i8 %1055, 0
  br i1 %1056, label %1057, label %1060

1057:                                             ; preds = %1048
  %1058 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1059 = load i8*, i8** %1058, align 8
  call void @_ZdlPv(i8* %1059) #15
  br label %1060

1060:                                             ; preds = %1057, %1048
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1052) #13
  %1061 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1061) #13
  %1062 = load i8*, i8** %1050, align 8
  %1063 = load i32, i32* %1051, align 4
  call void @_ZN3WTF6StringC1EPKcj(%"class.WTF::String"* nonnull %13, i8* %1062, i32 %1063) #13
  %1064 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1064) #13
  %1065 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1066 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %1065, i64* %1066, align 8
  %1067 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.13, i64 0, i64 0), i8** %1067, align 8
  %1068 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 3, i32* %1068, align 8
  %1069 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %1070 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1069, align 8
  %1071 = icmp eq %"class.WTF::StringImpl"* %1070, null
  br i1 %1071, label %1113, label %1072

1072:                                             ; preds = %1060
  %1073 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %1070, i16 zeroext 43, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #13
  %1074 = ptrtoint %"class.WTF::StringImpl"* %1073 to i64
  %1075 = bitcast %"class.WTF::String"* %13 to i64*
  %1076 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1069, align 8
  store i64 %1074, i64* %1075, align 8
  %1077 = icmp eq %"class.WTF::StringImpl"* %1076, null
  br i1 %1077, label %1093, label %1078

1078:                                             ; preds = %1072
  %1079 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1076, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1080 = load atomic i32, i32* %1079 monotonic, align 4
  %1081 = and i32 %1080, 2
  %1082 = icmp eq i32 %1081, 0
  %1083 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1076, i64 0, i32 0
  %1084 = load i32, i32* %1083, align 4
  br i1 %1082, label %1085, label %1087

1085:                                             ; preds = %1078
  %1086 = add i32 %1084, -1
  store i32 %1086, i32* %1083, align 4
  br label %1087

1087:                                             ; preds = %1085, %1078
  %1088 = phi i32 [ %1086, %1085 ], [ %1084, %1078 ]
  %1089 = icmp eq i32 %1088, 0
  br i1 %1089, label %1090, label %1091

1090:                                             ; preds = %1087
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1076) #13
  br label %1091

1091:                                             ; preds = %1090, %1087
  %1092 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1069, align 8
  br label %1093

1093:                                             ; preds = %1091, %1072
  %1094 = phi %"class.WTF::StringImpl"* [ %1092, %1091 ], [ %1073, %1072 ]
  %1095 = icmp eq %"class.WTF::StringImpl"* %1094, null
  br i1 %1095, label %1113, label %1096

1096:                                             ; preds = %1093
  %1097 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1094, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1098 = load atomic i32, i32* %1097 monotonic, align 4
  %1099 = and i32 %1098, 2
  %1100 = icmp eq i32 %1099, 0
  br i1 %1100, label %1101, label %1113

1101:                                             ; preds = %1096
  %1102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1094, i64 0, i32 0
  %1103 = load i32, i32* %1102, align 4
  %1104 = zext i32 %1103 to i33
  %1105 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1104, i33 1) #13
  %1106 = extractvalue { i33, i1 } %1105, 1
  %1107 = extractvalue { i33, i1 } %1105, 0
  %1108 = icmp slt i33 %1107, 0
  %1109 = or i1 %1106, %1108
  br i1 %1109, label %1110, label %1111, !prof !2

1110:                                             ; preds = %1101
  call void @llvm.trap() #13
  unreachable

1111:                                             ; preds = %1101
  %1112 = trunc i33 %1107 to i32
  store i32 %1112, i32* %1102, align 4
  br label %1113

1113:                                             ; preds = %1111, %1096, %1093, %1060
  %1114 = phi %"class.WTF::StringImpl"* [ %1094, %1111 ], [ %1094, %1096 ], [ null, %1093 ], [ null, %1060 ]
  %1115 = ptrtoint %"class.WTF::StringImpl"* %1114 to i64
  %1116 = bitcast %"class.WTF::String"* %6 to i64*
  %1117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %869, align 8
  store i64 %1115, i64* %1116, align 8
  %1118 = icmp eq %"class.WTF::StringImpl"* %1117, null
  br i1 %1118, label %1132, label %1119

1119:                                             ; preds = %1113
  %1120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1121 = load atomic i32, i32* %1120 monotonic, align 4
  %1122 = and i32 %1121, 2
  %1123 = icmp eq i32 %1122, 0
  %1124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1117, i64 0, i32 0
  %1125 = load i32, i32* %1124, align 4
  br i1 %1123, label %1126, label %1128

1126:                                             ; preds = %1119
  %1127 = add i32 %1125, -1
  store i32 %1127, i32* %1124, align 4
  br label %1128

1128:                                             ; preds = %1126, %1119
  %1129 = phi i32 [ %1127, %1126 ], [ %1125, %1119 ]
  %1130 = icmp eq i32 %1129, 0
  br i1 %1130, label %1131, label %1132

1131:                                             ; preds = %1128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1117) #13
  br label %1132

1132:                                             ; preds = %1131, %1128, %1113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1064) #13
  %1133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1069, align 8
  %1134 = icmp eq %"class.WTF::StringImpl"* %1133, null
  br i1 %1134, label %1148, label %1135

1135:                                             ; preds = %1132
  %1136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1137 = load atomic i32, i32* %1136 monotonic, align 4
  %1138 = and i32 %1137, 2
  %1139 = icmp eq i32 %1138, 0
  %1140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1133, i64 0, i32 0
  %1141 = load i32, i32* %1140, align 4
  br i1 %1139, label %1142, label %1144

1142:                                             ; preds = %1135
  %1143 = add i32 %1141, -1
  store i32 %1143, i32* %1140, align 4
  br label %1144

1144:                                             ; preds = %1142, %1135
  %1145 = phi i32 [ %1143, %1142 ], [ %1141, %1135 ]
  %1146 = icmp eq i32 %1145, 0
  br i1 %1146, label %1147, label %1148

1147:                                             ; preds = %1144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1133) #13
  br label %1148

1148:                                             ; preds = %1147, %1144, %1132
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1061) #13
  %1149 = bitcast %"class.WTF::StringBuilder"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1149) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1149, i8 -86, i64 48, i1 false) #13
  %1150 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1150, align 8
  %1151 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %15, i64 0, i32 1
  %1152 = bitcast %union.anon.1790* %1151 to i8*
  store i8 0, i8* %1152, align 8
  %1153 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %15, i64 0, i32 2
  store i32 0, i32* %1153, align 8
  %1154 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %15, i64 0, i32 3
  store i8 1, i8* %1154, align 4
  %1155 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %15, i64 0, i32 4
  store i8 0, i8* %1155, align 1
  %1156 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1156) #13
  %1157 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL5QueryEv(%"class.blink::KURL"* nonnull %29) #13
  %1158 = icmp eq %"class.WTF::StringImpl"* %1157, null
  br i1 %1158, label %1159, label %1164

1159:                                             ; preds = %1148
  %1160 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %1160, align 8
  %1161 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1162 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %1161, i64* %1162, align 8
  %1163 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 0, i32* %1163, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #13
  br label %1184

1164:                                             ; preds = %1148
  %1165 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1157, %"class.WTF::StringImpl"** %1165, align 8
  %1166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1157, i64 0, i32 1
  %1167 = load i32, i32* %1166, align 4
  %1168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1157, i64 1
  %1169 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %1170 = bitcast i8** %1169 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1168, %"class.WTF::StringImpl"** %1170, align 8
  %1171 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %1167, i32* %1171, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #13
  %1172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1157, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1173 = load atomic i32, i32* %1172 monotonic, align 4
  %1174 = and i32 %1173, 2
  %1175 = icmp eq i32 %1174, 0
  %1176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1157, i64 0, i32 0
  %1177 = load i32, i32* %1176, align 4
  br i1 %1175, label %1178, label %1180

1178:                                             ; preds = %1164
  %1179 = add i32 %1177, -1
  store i32 %1179, i32* %1176, align 4
  br label %1180

1180:                                             ; preds = %1178, %1164
  %1181 = phi i32 [ %1179, %1178 ], [ %1177, %1164 ]
  %1182 = icmp eq i32 %1181, 0
  br i1 %1182, label %1183, label %1184

1183:                                             ; preds = %1180
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1157) #13
  br label %1184

1184:                                             ; preds = %1183, %1180, %1159
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1156) #13
  %1185 = load i32, i32* %1153, align 8
  %1186 = icmp eq i32 %1185, 0
  br i1 %1186, label %1188, label %1187

1187:                                             ; preds = %1184
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %15, i8 zeroext 38) #13
  br label %1188

1188:                                             ; preds = %1187, %1184
  %1189 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1189) #13
  %1190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %869, align 8
  %1191 = icmp eq %"class.WTF::StringImpl"* %1190, null
  br i1 %1191, label %1192, label %1196

1192:                                             ; preds = %1188
  %1193 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* null, i8** %1193, align 8
  %1194 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1195 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %1194, i64* %1195, align 8
  br label %1203

1196:                                             ; preds = %1188
  %1197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1190, %"class.WTF::StringImpl"** %1197, align 8
  %1198 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1190, i64 0, i32 1
  %1199 = load i32, i32* %1198, align 4
  %1200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1190, i64 1
  %1201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %1202 = bitcast i8** %1201 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1200, %"class.WTF::StringImpl"** %1202, align 8
  br label %1203

1203:                                             ; preds = %1196, %1192
  %1204 = phi i32 [ %1199, %1196 ], [ 0, %1192 ]
  %1205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %1204, i32* %1205, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %17) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1189) #13
  %1206 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1206) #13
  %1207 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %15) #13
  %1208 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1207, %"class.WTF::StringImpl"** %1208, align 8
  call void @_ZN5blink4KURL8SetQueryERKN3WTF6StringE(%"class.blink::KURL"* nonnull %29, %"class.WTF::String"* nonnull dereferenceable(8) %18) #13
  %1209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1208, align 8
  %1210 = icmp eq %"class.WTF::StringImpl"* %1209, null
  br i1 %1210, label %1224, label %1211

1211:                                             ; preds = %1203
  %1212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1213 = load atomic i32, i32* %1212 monotonic, align 4
  %1214 = and i32 %1213, 2
  %1215 = icmp eq i32 %1214, 0
  %1216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1209, i64 0, i32 0
  %1217 = load i32, i32* %1216, align 4
  br i1 %1215, label %1218, label %1220

1218:                                             ; preds = %1211
  %1219 = add i32 %1217, -1
  store i32 %1219, i32* %1216, align 4
  br label %1220

1220:                                             ; preds = %1218, %1211
  %1221 = phi i32 [ %1219, %1218 ], [ %1217, %1211 ]
  %1222 = icmp eq i32 %1221, 0
  br i1 %1222, label %1223, label %1224

1223:                                             ; preds = %1220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1209) #13
  br label %1224

1224:                                             ; preds = %1223, %1220, %1203
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1206) #13
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %15) #13
  %1225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1150, align 8
  %1226 = icmp eq %"class.WTF::StringImpl"* %1225, null
  br i1 %1226, label %1240, label %1227

1227:                                             ; preds = %1224
  %1228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1229 = load atomic i32, i32* %1228 monotonic, align 4
  %1230 = and i32 %1229, 2
  %1231 = icmp eq i32 %1230, 0
  %1232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1225, i64 0, i32 0
  %1233 = load i32, i32* %1232, align 4
  br i1 %1231, label %1234, label %1236

1234:                                             ; preds = %1227
  %1235 = add i32 %1233, -1
  store i32 %1235, i32* %1232, align 4
  br label %1236

1236:                                             ; preds = %1234, %1227
  %1237 = phi i32 [ %1235, %1234 ], [ %1233, %1227 ]
  %1238 = icmp eq i32 %1237, 0
  br i1 %1238, label %1239, label %1240

1239:                                             ; preds = %1236
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1225) #13
  br label %1240

1240:                                             ; preds = %1239, %1236, %1224
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1149) #13
  %1241 = load i8*, i8** %1050, align 8
  %1242 = icmp eq i8* %1241, null
  br i1 %1242, label %1248, label %1243, !prof !4

1243:                                             ; preds = %1240
  %1244 = load i32, i32* %1051, align 4
  %1245 = icmp eq i32 %1244, 0
  br i1 %1245, label %1247, label %1246, !prof !2

1246:                                             ; preds = %1243
  store i32 0, i32* %1051, align 4
  br label %1247

1247:                                             ; preds = %1246, %1243
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %1241) #13
  store i8* null, i8** %1050, align 8
  br label %1248

1248:                                             ; preds = %1247, %1240
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1049) #13
  %1249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %869, align 8
  %1250 = icmp eq %"class.WTF::StringImpl"* %1249, null
  br i1 %1250, label %1264, label %1251

1251:                                             ; preds = %1248
  %1252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1253 = load atomic i32, i32* %1252 monotonic, align 4
  %1254 = and i32 %1253, 2
  %1255 = icmp eq i32 %1254, 0
  %1256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1249, i64 0, i32 0
  %1257 = load i32, i32* %1256, align 4
  br i1 %1255, label %1258, label %1260

1258:                                             ; preds = %1251
  %1259 = add i32 %1257, -1
  store i32 %1259, i32* %1256, align 4
  br label %1260

1260:                                             ; preds = %1258, %1251
  %1261 = phi i32 [ %1259, %1258 ], [ %1257, %1251 ]
  %1262 = icmp eq i32 %1261, 0
  br i1 %1262, label %1263, label %1264

1263:                                             ; preds = %1260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1249) #13
  br label %1264

1264:                                             ; preds = %1248, %1260, %1263
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %868) #13
  %1265 = call %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEv() #13
  %1266 = ptrtoint %"class.blink::EncodedFormData"* %1265 to i64
  %1267 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %814, align 8
  store i64 %1266, i64* %851, align 8
  %1268 = icmp eq %"class.blink::EncodedFormData"* %1267, null
  br i1 %1268, label %1276, label %1269

1269:                                             ; preds = %1264
  %1270 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1267, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1270) #13
  %1271 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1267, i64 0, i32 0, i32 0, i32 0, i32 0
  %1272 = load i32, i32* %1271, align 4
  %1273 = icmp eq i32 %1272, 0
  br i1 %1273, label %1274, label %1276

1274:                                             ; preds = %1269
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %1267) #13
  %1275 = bitcast %"class.blink::EncodedFormData"* %1267 to i8*
  call void @free(i8* %1275) #13
  br label %1276

1276:                                             ; preds = %1274, %1269, %1264, %861, %836
  %1277 = phi %"class.WTF::StringImpl"* [ %839, %836 ], [ null, %861 ], [ null, %1264 ], [ null, %1269 ], [ null, %1274 ]
  %1278 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %814, align 8
  %1279 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL26GenerateFormDataIdentifierEvE15next_identifier to i8*) acquire, align 8
  %1280 = icmp eq i8 %1279, 0
  br i1 %1280, label %1281, label %1291, !prof !5

1281:                                             ; preds = %1276
  %1282 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL26GenerateFormDataIdentifierEvE15next_identifier) #13
  %1283 = icmp eq i32 %1282, 0
  br i1 %1283, label %1291, label %1284

1284:                                             ; preds = %1281
  %1285 = bitcast %"class.base::Time"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1285) #13
  %1286 = call i64 @_ZN4base4Time3NowEv() #13
  %1287 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %5, i64 0, i32 0, i32 0
  store i64 %1286, i64* %1287, align 8
  %1288 = call double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"* nonnull %5) #13
  %1289 = fmul double %1288, 1.000000e+06
  %1290 = fptosi double %1289 to i64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1285) #13
  store i64 %1290, i64* @_ZZN5blinkL26GenerateFormDataIdentifierEvE15next_identifier, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL26GenerateFormDataIdentifierEvE15next_identifier) #13
  br label %1291

1291:                                             ; preds = %1276, %1281, %1284
  %1292 = load i64, i64* @_ZZN5blinkL26GenerateFormDataIdentifierEvE15next_identifier, align 8
  %1293 = add nsw i64 %1292, 1
  store i64 %1293, i64* @_ZZN5blinkL26GenerateFormDataIdentifierEvE15next_identifier, align 8
  %1294 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1278, i64 0, i32 3
  store i64 %1293, i64* %1294, align 8
  %1295 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %814, align 8
  %1296 = getelementptr inbounds %"class.blink::FormData", %"class.blink::FormData"* %812, i64 0, i32 4
  %1297 = load i8, i8* %1296, align 8, !range !3
  %1298 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1295, i64 0, i32 5
  store i8 %1297, i8* %1298, align 8
  %1299 = bitcast %"class.WTF::AtomicString"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1299) #13
  %1300 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %39, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %1300, align 8
  %1301 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %1302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1301, align 8
  %1303 = icmp eq %"class.WTF::StringImpl"* %1302, null
  br i1 %1303, label %1309, label %1304

1304:                                             ; preds = %1291
  %1305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1302, i64 0, i32 1
  %1306 = load i32, i32* %1305, align 4
  %1307 = icmp eq i32 %1306, 0
  br i1 %1307, label %1309, label %1308

1308:                                             ; preds = %1304
  store %"class.WTF::StringImpl"* %1302, %"class.WTF::StringImpl"** %1300, align 8
  br label %1313

1309:                                             ; preds = %1304, %1291
  %1310 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %666, i64 0, i32 26, i32 0, i32 0, i32 0
  %1311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1310, align 8
  store %"class.WTF::StringImpl"* %1311, %"class.WTF::StringImpl"** %1300, align 8
  %1312 = icmp eq %"class.WTF::StringImpl"* %1311, null
  br i1 %1312, label %1331, label %1313

1313:                                             ; preds = %1308, %1309
  %1314 = phi %"class.WTF::StringImpl"* [ %1302, %1308 ], [ %1311, %1309 ]
  %1315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1314, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1316 = load atomic i32, i32* %1315 monotonic, align 4
  %1317 = and i32 %1316, 2
  %1318 = icmp eq i32 %1317, 0
  br i1 %1318, label %1319, label %1331

1319:                                             ; preds = %1313
  %1320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1314, i64 0, i32 0
  %1321 = load i32, i32* %1320, align 4
  %1322 = zext i32 %1321 to i33
  %1323 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1322, i33 1) #13
  %1324 = extractvalue { i33, i1 } %1323, 1
  %1325 = extractvalue { i33, i1 } %1323, 0
  %1326 = icmp slt i33 %1325, 0
  %1327 = or i1 %1324, %1326
  br i1 %1327, label %1328, label %1329, !prof !2

1328:                                             ; preds = %1319
  call void @llvm.trap() #13
  unreachable

1329:                                             ; preds = %1319
  %1330 = trunc i33 %1325 to i32
  store i32 %1330, i32* %1320, align 4
  br label %1331

1331:                                             ; preds = %1309, %1313, %1329
  %1332 = bitcast %"class.std::__1::unique_ptr.64"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1332) #13
  %1333 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %40, i64 0, i32 0, i32 0, i32 0
  %1334 = call noalias i8* @malloc(i64 1032) #13
  %1335 = bitcast i8* %1334 to %"class.blink::ResourceRequest"*
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* %1335, %"class.blink::KURL"* nonnull dereferenceable(112) %29) #13
  %1336 = bitcast %"class.std::__1::unique_ptr.64"* %40 to i8**
  store i8* %1334, i8** %1336, align 8
  %1337 = bitcast i32* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1337) #13
  store i32 0, i32* %41, align 4
  %1338 = load i32, i32* %56, align 8
  %1339 = icmp eq i32 %1338, 1
  br i1 %1339, label %1340, label %1540

1340:                                             ; preds = %1331
  store i32 1, i32* %41, align 4
  %1341 = bitcast i8* %1334 to %"class.blink::ResourceRequestHead"*
  %1342 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names5kPOSTE, align 8
  call void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"* %1341, %"class.WTF::AtomicString"* dereferenceable(8) %1342) #13
  %1343 = load %"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"** %1333, align 8
  %1344 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %814, align 8
  %1345 = icmp eq %"class.blink::EncodedFormData"* %1344, null
  br i1 %1345, label %1348, label %1346

1346:                                             ; preds = %1340
  %1347 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1344, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %1347) #13
  br label %1348

1348:                                             ; preds = %1340, %1346
  call void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"* %1343, %"class.blink::EncodedFormData"* %1344) #13
  %1349 = icmp eq %"class.WTF::StringImpl"* %1277, null
  br i1 %1349, label %1350, label %1353

1350:                                             ; preds = %1348
  %1351 = load %"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"** %1333, align 8
  %1352 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1351, i64 0, i32 0
  br label %1359

1353:                                             ; preds = %1348
  %1354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1277, i64 0, i32 1
  %1355 = load i32, i32* %1354, align 4
  %1356 = icmp eq i32 %1355, 0
  %1357 = load %"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"** %1333, align 8
  %1358 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1357, i64 0, i32 0
  br i1 %1356, label %1359, label %1362

1359:                                             ; preds = %1350, %1353
  %1360 = phi %"class.blink::ResourceRequestHead"* [ %1352, %1350 ], [ %1358, %1353 ]
  %1361 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %1360, %"class.WTF::AtomicString"* dereferenceable(8) %1361, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %34) #13
  br label %1540

1362:                                             ; preds = %1353
  %1363 = bitcast %"class.WTF::AtomicString"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1363) #13
  %1364 = bitcast %"class.WTF::StringAppend"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1364) #13
  %1365 = bitcast %"class.WTF::StringAppend.1671"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1365) #13
  %1366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %730, align 8
  %1367 = icmp eq %"class.WTF::StringImpl"* %1366, null
  br i1 %1367, label %1412, label %1368

1368:                                             ; preds = %1362
  %1369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1366, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1370 = load atomic i32, i32* %1369 monotonic, align 4
  %1371 = and i32 %1370, 2
  %1372 = icmp eq i32 %1371, 0
  %1373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1366, i64 0, i32 0
  %1374 = load i32, i32* %1373, align 4
  br i1 %1372, label %1375, label %1385

1375:                                             ; preds = %1368
  %1376 = zext i32 %1374 to i33
  %1377 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1376, i33 1) #13
  %1378 = extractvalue { i33, i1 } %1377, 1
  %1379 = extractvalue { i33, i1 } %1377, 0
  %1380 = icmp slt i33 %1379, 0
  %1381 = or i1 %1378, %1380
  br i1 %1381, label %1382, label %1383, !prof !2

1382:                                             ; preds = %1375
  call void @llvm.trap() #13
  unreachable

1383:                                             ; preds = %1375
  %1384 = trunc i33 %1379 to i32
  store i32 %1384, i32* %1373, align 4
  br label %1385

1385:                                             ; preds = %1368, %1383
  %1386 = phi i32 [ %1384, %1383 ], [ %1374, %1368 ]
  %1387 = load atomic i32, i32* %1369 monotonic, align 4
  %1388 = and i32 %1387, 2
  %1389 = icmp eq i32 %1388, 0
  %1390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1366, i64 0, i32 0
  br i1 %1389, label %1391, label %1401

1391:                                             ; preds = %1385
  %1392 = zext i32 %1386 to i33
  %1393 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1392, i33 1) #13
  %1394 = extractvalue { i33, i1 } %1393, 1
  %1395 = extractvalue { i33, i1 } %1393, 0
  %1396 = icmp slt i33 %1395, 0
  %1397 = or i1 %1394, %1396
  br i1 %1397, label %1398, label %1399, !prof !2

1398:                                             ; preds = %1391
  call void @llvm.trap() #13
  unreachable

1399:                                             ; preds = %1391
  %1400 = trunc i33 %1395 to i32
  store i32 %1400, i32* %1390, align 4
  br label %1401

1401:                                             ; preds = %1399, %1385
  %1402 = phi i32 [ %1400, %1399 ], [ %1386, %1385 ]
  %1403 = load atomic i32, i32* %1369 monotonic, align 4
  %1404 = and i32 %1403, 2
  %1405 = icmp eq i32 %1404, 0
  br i1 %1405, label %1406, label %1408

1406:                                             ; preds = %1401
  %1407 = add i32 %1402, -1
  store i32 %1407, i32* %1390, align 4
  br label %1408

1408:                                             ; preds = %1406, %1401
  %1409 = phi i32 [ %1407, %1406 ], [ %1402, %1401 ]
  %1410 = icmp eq i32 %1409, 0
  br i1 %1410, label %1411, label %1412

1411:                                             ; preds = %1408
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1366) #13
  br label %1412

1412:                                             ; preds = %1411, %1408, %1362
  %1413 = getelementptr inbounds %"class.WTF::StringAppend.1671", %"class.WTF::StringAppend.1671"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1366, %"class.WTF::StringImpl"** %1413, align 8
  %1414 = getelementptr inbounds %"class.WTF::StringAppend.1671", %"class.WTF::StringAppend.1671"* %44, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i8** %1414, align 8
  %1415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1416 = load atomic i32, i32* %1415 monotonic, align 4
  %1417 = and i32 %1416, 2
  %1418 = icmp eq i32 %1417, 0
  br i1 %1418, label %1419, label %1431

1419:                                             ; preds = %1412
  %1420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1277, i64 0, i32 0
  %1421 = load i32, i32* %1420, align 4
  %1422 = zext i32 %1421 to i33
  %1423 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1422, i33 1) #13
  %1424 = extractvalue { i33, i1 } %1423, 1
  %1425 = extractvalue { i33, i1 } %1423, 0
  %1426 = icmp slt i33 %1425, 0
  %1427 = or i1 %1424, %1426
  br i1 %1427, label %1428, label %1429, !prof !2

1428:                                             ; preds = %1419
  call void @llvm.trap() #13
  unreachable

1429:                                             ; preds = %1419
  %1430 = trunc i33 %1425 to i32
  store i32 %1430, i32* %1420, align 4
  br label %1431

1431:                                             ; preds = %1412, %1429
  call void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* nonnull sret %43, %"class.WTF::StringAppend.1671"* nonnull dereferenceable(16) %44, %"class.WTF::StringImpl"* nonnull %1277)
  %1432 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend"* nonnull %43) #13
  %1433 = icmp eq %"class.WTF::StringImpl"* %1432, null
  br i1 %1433, label %1470, label %1434

1434:                                             ; preds = %1431
  %1435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1432, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1436 = load atomic i32, i32* %1435 acquire, align 4
  %1437 = and i32 %1436, 4
  %1438 = icmp eq i32 %1437, 0
  br i1 %1438, label %1455, label %1439

1439:                                             ; preds = %1434
  %1440 = load atomic i32, i32* %1435 monotonic, align 4
  %1441 = and i32 %1440, 2
  %1442 = icmp eq i32 %1441, 0
  br i1 %1442, label %1443, label %1457

1443:                                             ; preds = %1439
  %1444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1432, i64 0, i32 0
  %1445 = load i32, i32* %1444, align 4
  %1446 = zext i32 %1445 to i33
  %1447 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1446, i33 1) #13
  %1448 = extractvalue { i33, i1 } %1447, 1
  %1449 = extractvalue { i33, i1 } %1447, 0
  %1450 = icmp slt i33 %1449, 0
  %1451 = or i1 %1448, %1450
  br i1 %1451, label %1452, label %1453, !prof !2

1452:                                             ; preds = %1443
  call void @llvm.trap() #13
  unreachable

1453:                                             ; preds = %1443
  %1454 = trunc i33 %1449 to i32
  store i32 %1454, i32* %1444, align 4
  br label %1457

1455:                                             ; preds = %1434
  %1456 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %1432) #13
  br label %1457

1457:                                             ; preds = %1455, %1453, %1439
  %1458 = phi %"class.WTF::StringImpl"* [ %1432, %1453 ], [ %1432, %1439 ], [ %1456, %1455 ]
  %1459 = load atomic i32, i32* %1435 monotonic, align 4
  %1460 = and i32 %1459, 2
  %1461 = icmp eq i32 %1460, 0
  %1462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1432, i64 0, i32 0
  %1463 = load i32, i32* %1462, align 4
  br i1 %1461, label %1464, label %1466

1464:                                             ; preds = %1457
  %1465 = add i32 %1463, -1
  store i32 %1465, i32* %1462, align 4
  br label %1466

1466:                                             ; preds = %1464, %1457
  %1467 = phi i32 [ %1465, %1464 ], [ %1463, %1457 ]
  %1468 = icmp eq i32 %1467, 0
  br i1 %1468, label %1469, label %1470

1469:                                             ; preds = %1466
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1432) #13
  br label %1470

1470:                                             ; preds = %1431, %1466, %1469
  %1471 = phi %"class.WTF::StringImpl"* [ %1458, %1466 ], [ %1458, %1469 ], [ null, %1431 ]
  %1472 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %42, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1471, %"class.WTF::StringImpl"** %1472, align 8
  %1473 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kContentTypeE, align 8
  call void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"* %1358, %"class.WTF::AtomicString"* dereferenceable(8) %1473, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %42) #13
  %1474 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1472, align 8
  %1475 = icmp eq %"class.WTF::StringImpl"* %1474, null
  br i1 %1475, label %1489, label %1476

1476:                                             ; preds = %1470
  %1477 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1474, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1478 = load atomic i32, i32* %1477 monotonic, align 4
  %1479 = and i32 %1478, 2
  %1480 = icmp eq i32 %1479, 0
  %1481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1474, i64 0, i32 0
  %1482 = load i32, i32* %1481, align 4
  br i1 %1480, label %1483, label %1485

1483:                                             ; preds = %1476
  %1484 = add i32 %1482, -1
  store i32 %1484, i32* %1481, align 4
  br label %1485

1485:                                             ; preds = %1483, %1476
  %1486 = phi i32 [ %1484, %1483 ], [ %1482, %1476 ]
  %1487 = icmp eq i32 %1486, 0
  br i1 %1487, label %1488, label %1489

1488:                                             ; preds = %1485
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1474) #13
  br label %1489

1489:                                             ; preds = %1470, %1485, %1488
  %1490 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %43, i64 0, i32 1, i32 0, i32 0
  %1491 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1490, align 8
  %1492 = icmp eq %"class.WTF::StringImpl"* %1491, null
  br i1 %1492, label %1506, label %1493

1493:                                             ; preds = %1489
  %1494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1491, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1495 = load atomic i32, i32* %1494 monotonic, align 4
  %1496 = and i32 %1495, 2
  %1497 = icmp eq i32 %1496, 0
  %1498 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1491, i64 0, i32 0
  %1499 = load i32, i32* %1498, align 4
  br i1 %1497, label %1500, label %1502

1500:                                             ; preds = %1493
  %1501 = add i32 %1499, -1
  store i32 %1501, i32* %1498, align 4
  br label %1502

1502:                                             ; preds = %1500, %1493
  %1503 = phi i32 [ %1501, %1500 ], [ %1499, %1493 ]
  %1504 = icmp eq i32 %1503, 0
  br i1 %1504, label %1505, label %1506

1505:                                             ; preds = %1502
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1491) #13
  br label %1506

1506:                                             ; preds = %1505, %1502, %1489
  %1507 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1508 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1507, align 8
  %1509 = icmp eq %"class.WTF::StringImpl"* %1508, null
  br i1 %1509, label %1523, label %1510

1510:                                             ; preds = %1506
  %1511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1508, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1512 = load atomic i32, i32* %1511 monotonic, align 4
  %1513 = and i32 %1512, 2
  %1514 = icmp eq i32 %1513, 0
  %1515 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1508, i64 0, i32 0
  %1516 = load i32, i32* %1515, align 4
  br i1 %1514, label %1517, label %1519

1517:                                             ; preds = %1510
  %1518 = add i32 %1516, -1
  store i32 %1518, i32* %1515, align 4
  br label %1519

1519:                                             ; preds = %1517, %1510
  %1520 = phi i32 [ %1518, %1517 ], [ %1516, %1510 ]
  %1521 = icmp eq i32 %1520, 0
  br i1 %1521, label %1522, label %1523

1522:                                             ; preds = %1519
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1508) #13
  br label %1523

1523:                                             ; preds = %1506, %1519, %1522
  %1524 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1413, align 8
  %1525 = icmp eq %"class.WTF::StringImpl"* %1524, null
  br i1 %1525, label %1539, label %1526

1526:                                             ; preds = %1523
  %1527 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1524, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1528 = load atomic i32, i32* %1527 monotonic, align 4
  %1529 = and i32 %1528, 2
  %1530 = icmp eq i32 %1529, 0
  %1531 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1524, i64 0, i32 0
  %1532 = load i32, i32* %1531, align 4
  br i1 %1530, label %1533, label %1535

1533:                                             ; preds = %1526
  %1534 = add i32 %1532, -1
  store i32 %1534, i32* %1531, align 4
  br label %1535

1535:                                             ; preds = %1533, %1526
  %1536 = phi i32 [ %1534, %1533 ], [ %1532, %1526 ]
  %1537 = icmp eq i32 %1536, 0
  br i1 %1537, label %1538, label %1539

1538:                                             ; preds = %1535
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1524) #13
  br label %1539

1539:                                             ; preds = %1523, %1535, %1538
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1365) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1364) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1363) #13
  br label %1540

1540:                                             ; preds = %1359, %1539, %1331
  %1541 = load %"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"** %1333, align 8
  %1542 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1541, i64 0, i32 0
  %1543 = load %"class.blink::Node"*, %"class.blink::Node"** %661, align 8
  %1544 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1543, i64 0, i32 3, i32 0, i32 0
  %1545 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1544, align 8
  %1546 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1545, i64 0, i32 2, i32 0, i32 0
  %1547 = load %"class.blink::Document"*, %"class.blink::Document"** %1546, align 8
  %1548 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1547) #13
  %1549 = call zeroext i1 @_ZN5blink10LocalFrame26HasTransientUserActivationEPS0_(%"class.blink::LocalFrame"* %1548) #13
  call void @_ZN5blink19ResourceRequestHead17SetHasUserGestureEb(%"class.blink::ResourceRequestHead"* %1542, i1 zeroext %1549) #13
  %1550 = bitcast i32* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1550) #13
  store i32 -1431655766, i32* %45, align 4
  %1551 = load %"class.blink::Event"*, %"class.blink::Event"** %25, align 8
  %1552 = icmp eq %"class.blink::Event"* %1551, null
  %1553 = ptrtoint %"class.blink::Node"* %1543 to i64
  br i1 %1552, label %1564, label %1554

1554:                                             ; preds = %1540
  %1555 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1551, i64 0, i32 2
  %1556 = load i16, i16* %1555, align 8
  %1557 = and i16 %1556, 256
  %1558 = icmp eq i16 %1557, 0
  %1559 = select i1 %1558, i32 3, i32 2
  store i32 %1559, i32* %45, align 4
  %1560 = getelementptr inbounds %"class.blink::Event", %"class.blink::Event"* %1551, i64 0, i32 8, i32 0, i32 0
  %1561 = load %"class.blink::Event"*, %"class.blink::Event"** %1560, align 8
  %1562 = icmp eq %"class.blink::Event"* %1561, null
  br i1 %1562, label %1565, label %1563

1563:                                             ; preds = %1554
  store %"class.blink::Event"* %1561, %"class.blink::Event"** %25, align 8
  br label %1565

1564:                                             ; preds = %1540
  store i32 1, i32* %45, align 4
  br label %1565

1565:                                             ; preds = %1554, %1563, %1564
  %1566 = phi i32 [ %1559, %1554 ], [ %1559, %1563 ], [ 1, %1564 ]
  %1567 = phi %"class.blink::Event"* [ %1551, %1554 ], [ %1561, %1563 ], [ null, %1564 ]
  %1568 = bitcast %"struct.blink::FrameLoadRequest"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1320, i8* nonnull %1568) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1568, i8 -86, i64 1320, i1 false)
  %1569 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1544, align 8
  %1570 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1569, i64 0, i32 2, i32 0, i32 0
  %1571 = load %"class.blink::Document"*, %"class.blink::Document"** %1570, align 8
  %1572 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1571, i64 0, i32 12, i32 0, i32 0
  %1573 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %1572, align 8
  call void @_ZN5blink16FrameLoadRequestC1EPNS_14LocalDOMWindowERKNS_15ResourceRequestE(%"struct.blink::FrameLoadRequest"* nonnull %46, %"class.blink::LocalDOMWindow"* %1573, %"class.blink::ResourceRequest"* dereferenceable(1032) %1541) #13
  %1574 = call i32 @_ZN5blink25NavigationPolicyFromEventEPKNS_5EventE(%"class.blink::Event"* %1567) #13
  %1575 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %46, i64 0, i32 4
  store i32 %1574, i32* %1575, align 4
  %1576 = load i32, i32* %41, align 4
  %1577 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %46, i64 0, i32 3
  store i32 %1576, i32* %1577, align 8
  %1578 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %46, i64 0, i32 6
  %1579 = bitcast %"class.blink::HTMLFormElement"** %1578 to i64*
  store i64 %1553, i64* %1579, align 8
  %1580 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %46, i64 0, i32 5
  store i32 %1566, i32* %1580, align 8
  %1581 = bitcast %"class.blink::Frame"** %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1581) #13
  %1582 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1544, align 8
  %1583 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1582, i64 0, i32 2, i32 0, i32 0
  %1584 = load %"class.blink::Document"*, %"class.blink::Document"** %1583, align 8
  %1585 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1584) #13
  %1586 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1585, i64 0, i32 0, i32 1
  %1587 = call { %"class.blink::Frame"*, i8 } @_ZNK5blink9FrameTree30FindOrCreateFrameForNavigationERNS_16FrameLoadRequestERKN3WTF12AtomicStringE(%"class.blink::FrameTree"* %1586, %"struct.blink::FrameLoadRequest"* nonnull dereferenceable(1320) %46, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %39) #13
  %1588 = extractvalue { %"class.blink::Frame"*, i8 } %1587, 0
  store %"class.blink::Frame"* %1588, %"class.blink::Frame"** %47, align 8
  %1589 = bitcast i32* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1589) #13
  store i32 0, i32* %48, align 4
  %1590 = icmp eq %"class.blink::Frame"* %1588, null
  br i1 %1590, label %1606, label %1591

1591:                                             ; preds = %1565
  %1592 = bitcast %"class.blink::Frame"* %1588 to i1 (%"class.blink::Frame"*)***
  %1593 = load i1 (%"class.blink::Frame"*)**, i1 (%"class.blink::Frame"*)*** %1592, align 8
  %1594 = getelementptr inbounds i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %1593, i64 3
  %1595 = load i1 (%"class.blink::Frame"*)*, i1 (%"class.blink::Frame"*)** %1594, align 8
  %1596 = call zeroext i1 %1595(%"class.blink::Frame"* nonnull %1588) #13
  %1597 = bitcast %"class.blink::Frame"* %1588 to %"class.blink::LocalFrame"*
  br i1 %1596, label %1598, label %1606

1598:                                             ; preds = %1591
  %1599 = call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %1597) #13
  %1600 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1599, i64 0, i32 85
  %1601 = load i32, i32* %1600, align 4
  %1602 = icmp sgt i32 %1601, 1
  br i1 %1602, label %1606, label %1603

1603:                                             ; preds = %1598
  %1604 = call zeroext i1 @_ZN5blink10LocalFrame26HasTransientUserActivationEPS0_(%"class.blink::LocalFrame"* nonnull %1597) #13
  br i1 %1604, label %1606, label %1605

1605:                                             ; preds = %1603
  store i32 3, i32* %48, align 4
  br label %1606

1606:                                             ; preds = %1591, %1565, %1605, %1603, %1598
  %1607 = bitcast i32* %49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1607) #13
  %1608 = load i32, i32* %56, align 8
  store i32 %1608, i32* %49, align 4
  %1609 = bitcast i32* %50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1609) #13
  %1610 = load i32, i32* %1575, align 4
  store i32 %1610, i32* %50, align 4
  %1611 = bitcast %"class.blink::LocalDOMWindow"** %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1611) #13
  %1612 = load %"class.blink::Node"*, %"class.blink::Node"** %661, align 8
  %1613 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1612, i64 0, i32 3, i32 0, i32 0
  %1614 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1613, align 8
  %1615 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1614, i64 0, i32 2, i32 0, i32 0
  %1616 = load %"class.blink::Document"*, %"class.blink::Document"** %1615, align 8
  %1617 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1616, i64 0, i32 12, i32 0, i32 0
  %1618 = bitcast %"class.blink::LocalDOMWindow"** %1617 to i64*
  %1619 = load i64, i64* %1618, align 8
  %1620 = bitcast %"class.blink::LocalDOMWindow"** %51 to i64*
  store i64 %1619, i64* %1620, align 8
  %1621 = bitcast %"class.util::TokenType"* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1621) #13
  %1622 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %1616) #13
  %1623 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1622, i64 0, i32 0, i32 30
  %1624 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %1622, i64 0, i32 0, i32 30, i32 1
  %1625 = load i32, i32* %1624, align 8, !noalias !6
  %1626 = icmp eq i32 %1625, 0
  br i1 %1626, label %1632, label %1627

1627:                                             ; preds = %1606
  %1628 = bitcast %"class.logging::CheckError"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1628) #13, !noalias !6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %19, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.23, i64 0, i64 0), i32 97, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0)) #13, !noalias !6
  %1629 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %19) #13, !noalias !6
  %1630 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %1629, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i64 0, i64 0), i64 23) #13, !noalias !6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %19) #13, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1628) #13, !noalias !6
  %1631 = load %"class.blink::Node"*, %"class.blink::Node"** %661, align 8
  br label %1632

1632:                                             ; preds = %1606, %1627
  %1633 = phi %"class.blink::Node"* [ %1612, %1606 ], [ %1631, %1627 ]
  %1634 = bitcast %"class.blink::MultiToken"* %1623 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1621, i8* align 8 %1634, i64 16, i1 false) #13
  %1635 = bitcast %"class.std::__1::unique_ptr.660"* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1635) #13
  %1636 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %1633, i64 0, i32 3, i32 0, i32 0
  %1637 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1636, align 8
  %1638 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1637, i64 0, i32 2, i32 0, i32 0
  %1639 = load %"class.blink::Document"*, %"class.blink::Document"** %1638, align 8
  %1640 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1639, i64 0, i32 12, i32 0, i32 0
  %1641 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %1640, align 8
  %1642 = icmp eq %"class.blink::LocalDOMWindow"* %1641, null
  %1643 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %1641, i64 0, i32 1
  %1644 = bitcast %"class.blink::ExecutionContext.base"* %1643 to %"class.blink::ExecutionContext"*
  %1645 = select i1 %1642, %"class.blink::ExecutionContext"* null, %"class.blink::ExecutionContext"* %1644
  %1646 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* %1645) #13
  %1647 = getelementptr inbounds %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.660"* %53, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::SourceLocation"* %1646, %"class.blink::SourceLocation"** %1647, align 8
  %1648 = bitcast %"class.mojo::PendingRemote.672"* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1648) #13
  %1649 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1636, align 8
  %1650 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1649, i64 0, i32 2, i32 0, i32 0
  %1651 = load %"class.blink::Document"*, %"class.blink::Document"** %1650, align 8
  %1652 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1651, i64 0, i32 12, i32 0, i32 0
  %1653 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %1652, align 8
  %1654 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %1653, i64 0, i32 1, i32 25, i32 0, i32 0, i32 0
  %1655 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %1654, align 8
  call void @_ZN5blink15PolicyContainer20IssueKeepAliveHandleEv(%"class.mojo::PendingRemote.672"* nonnull sret %54, %"class.blink::PolicyContainer"* %1655) #13
  %1656 = call %"class.blink::FormSubmission"* @_ZN5blink25MakeGarbageCollectedTraitINS_14FormSubmissionEE4CallIJNS1_12SubmitMethodERNS_4KURLERN3WTF12AtomicStringES9_RPNS_15HTMLFormElementE13scoped_refptrINS_15EncodedFormDataEERPKNS_5EventENS_16NavigationPolicyERNS_5mojom19TriggeringEventInfoERNS_22ClientNavigationReasonENSt3__110unique_ptrINS_15ResourceRequestENSQ_14default_deleteISS_EEEERPNS_5FrameERNS_16WebFrameLoadTypeEPNS_14LocalDOMWindowEN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENSR_INS_14SourceLocationENST_IS17_EEEEN4mojo13PendingRemoteINSL_5blink34PolicyContainerHostKeepAliveHandleEEEEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %49, %"class.blink::KURL"* nonnull dereferenceable(112) %29, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %39, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %34, %"class.blink::HTMLFormElement"** nonnull dereferenceable(8) %24, %class.scoped_refptr.44* nonnull dereferenceable(8) %37, %"class.blink::Event"** nonnull dereferenceable(8) %25, i32* nonnull dereferenceable(4) %50, i32* nonnull dereferenceable(4) %45, i32* nonnull dereferenceable(4) %41, %"class.std::__1::unique_ptr.64"* nonnull dereferenceable(8) %40, %"class.blink::Frame"** nonnull dereferenceable(8) %47, i32* nonnull dereferenceable(4) %48, %"class.blink::LocalDOMWindow"** nonnull dereferenceable(8) %51, %"class.util::TokenType"* nonnull dereferenceable(16) %52, %"class.std::__1::unique_ptr.660"* nonnull dereferenceable(8) %53, %"class.mojo::PendingRemote.672"* nonnull dereferenceable(8) %54) #13
  %1657 = getelementptr inbounds %"class.mojo::PendingRemote.672", %"class.mojo::PendingRemote.672"* %54, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %1657) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1648) #13
  %1658 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %1647, align 8
  store %"class.blink::SourceLocation"* null, %"class.blink::SourceLocation"** %1647, align 8
  %1659 = icmp eq %"class.blink::SourceLocation"* %1658, null
  br i1 %1659, label %1662, label %1660

1660:                                             ; preds = %1632
  call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %1658) #13
  %1661 = bitcast %"class.blink::SourceLocation"* %1658 to i8*
  call void @free(i8* %1661) #13
  br label %1662

1662:                                             ; preds = %1632, %1660
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1635) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1621) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1611) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1609) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1607) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1589) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1581) #13
  call void @_ZN5blink16FrameLoadRequestD2Ev(%"struct.blink::FrameLoadRequest"* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 1320, i8* nonnull %1568) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1550) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1337) #13
  %1663 = load %"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"** %1333, align 8
  store %"class.blink::ResourceRequest"* null, %"class.blink::ResourceRequest"** %1333, align 8
  %1664 = icmp eq %"class.blink::ResourceRequest"* %1663, null
  br i1 %1664, label %1667, label %1665

1665:                                             ; preds = %1662
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %1663) #13
  %1666 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %1663, i64 0, i32 0, i32 0, i32 0
  call void @free(i8* %1666) #13
  br label %1667

1667:                                             ; preds = %1662, %1665
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1332) #13
  %1668 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1300, align 8
  %1669 = icmp eq %"class.WTF::StringImpl"* %1668, null
  br i1 %1669, label %1683, label %1670

1670:                                             ; preds = %1667
  %1671 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1668, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1672 = load atomic i32, i32* %1671 monotonic, align 4
  %1673 = and i32 %1672, 2
  %1674 = icmp eq i32 %1673, 0
  %1675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1668, i64 0, i32 0
  %1676 = load i32, i32* %1675, align 4
  br i1 %1674, label %1677, label %1679

1677:                                             ; preds = %1670
  %1678 = add i32 %1676, -1
  store i32 %1678, i32* %1675, align 4
  br label %1679

1679:                                             ; preds = %1677, %1670
  %1680 = phi i32 [ %1678, %1677 ], [ %1676, %1670 ]
  %1681 = icmp eq i32 %1680, 0
  br i1 %1681, label %1682, label %1683

1682:                                             ; preds = %1679
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1668) #13
  br label %1683

1683:                                             ; preds = %1667, %1679, %1682
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1299) #13
  %1684 = icmp eq %"class.WTF::StringImpl"* %1277, null
  br i1 %1684, label %1698, label %1685

1685:                                             ; preds = %1683
  %1686 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1687 = load atomic i32, i32* %1686 monotonic, align 4
  %1688 = and i32 %1687, 2
  %1689 = icmp eq i32 %1688, 0
  %1690 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1277, i64 0, i32 0
  %1691 = load i32, i32* %1690, align 4
  br i1 %1689, label %1692, label %1694

1692:                                             ; preds = %1685
  %1693 = add i32 %1691, -1
  store i32 %1693, i32* %1690, align 4
  br label %1694

1694:                                             ; preds = %1692, %1685
  %1695 = phi i32 [ %1693, %1692 ], [ %1691, %1685 ]
  %1696 = icmp eq i32 %1695, 0
  br i1 %1696, label %1697, label %1698

1697:                                             ; preds = %1694
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1277) #13
  br label %1698

1698:                                             ; preds = %1683, %1694, %1697
  %1699 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %814, align 8
  %1700 = icmp eq %"class.blink::EncodedFormData"* %1699, null
  br i1 %1700, label %1708, label %1701

1701:                                             ; preds = %1698
  %1702 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1699, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %1702) #13
  %1703 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %1699, i64 0, i32 0, i32 0, i32 0, i32 0
  %1704 = load i32, i32* %1703, align 4
  %1705 = icmp eq i32 %1704, 0
  br i1 %1705, label %1706, label %1708

1706:                                             ; preds = %1701
  call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %1699) #13
  %1707 = bitcast %"class.blink::EncodedFormData"* %1699 to i8*
  call void @free(i8* %1707) #13
  br label %1708

1708:                                             ; preds = %1698, %1701, %1706
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %813) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %798) #13
  %1709 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %730, align 8
  %1710 = icmp eq %"class.WTF::StringImpl"* %1709, null
  br i1 %1710, label %1724, label %1711

1711:                                             ; preds = %1708
  %1712 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1709, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1713 = load atomic i32, i32* %1712 monotonic, align 4
  %1714 = and i32 %1713, 2
  %1715 = icmp eq i32 %1714, 0
  %1716 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1709, i64 0, i32 0
  %1717 = load i32, i32* %1716, align 4
  br i1 %1715, label %1718, label %1720

1718:                                             ; preds = %1711
  %1719 = add i32 %1717, -1
  store i32 %1719, i32* %1716, align 4
  br label %1720

1720:                                             ; preds = %1718, %1711
  %1721 = phi i32 [ %1719, %1718 ], [ %1717, %1711 ]
  %1722 = icmp eq i32 %1721, 0
  br i1 %1722, label %1723, label %1724

1723:                                             ; preds = %1720
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1709) #13
  br label %1724

1724:                                             ; preds = %1708, %1720, %1723
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %729) #13
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %29) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %667) #13
  br label %1725

1725:                                             ; preds = %1724, %658, %657
  %1726 = phi %"class.blink::FormSubmission"* [ %641, %657 ], [ %659, %658 ], [ %1656, %1724 ]
  call void @_ZN5blink14FormSubmission10AttributesD2Ev(%"class.blink::FormSubmission::Attributes"* nonnull %26) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %55) #13
  ret %"class.blink::FormSubmission"* %1726
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #2

declare zeroext i1 @_ZN7network27IsUrlPotentiallyTrustworthyERK4GURL(%class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* sret, %"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

declare zeroext i1 @_ZN5blink4KURL11SetProtocolERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i16 @_ZNK5blink4KURL4PortEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink4KURL7SetPortEt(%"class.blink::KURL"*, i16 zeroext) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::TextEncoding"* @_ZN3WTF12UTF8EncodingEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i8* @_ZN5blink15FormDataEncoder25EncodingFromAcceptCharsetERKN3WTF6StringERKNS1_12TextEncodingE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::TextEncoding"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::FormData"* @_ZN5blink15HTMLFormElement18ConstructEntryListEPNS_22HTMLFormControlElementERKN3WTF12TextEncodingE(%"class.blink::HTMLFormElement"*, %"class.blink::HTMLFormControlElement"*, %"class.WTF::TextEncoding"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::TextEncoding"* @_ZNK3WTF12TextEncoding25EncodingForFormSubmissionEv(%"class.WTF::TextEncoding"*) local_unnamed_addr #2

declare %"class.blink::EncodedFormData"* @_ZN5blink8FormData23EncodeMultiPartFormDataEv(%"class.blink::FormData"*) local_unnamed_addr #2

declare %"class.blink::EncodedFormData"* @_ZN5blink8FormData14EncodeFormDataENS_15EncodedFormData12EncodingTypeE(%"class.blink::FormData"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN5blink15EncodedFormData17ParseEncodingTypeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringView", align 8
  %3 = bitcast %"class.WTF::StringView"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  store i8* null, i8** %8, align 8
  %9 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %10 = bitcast %"class.WTF::StringView"* %2 to i64*
  store i64 %9, i64* %10, align 8
  br label %18

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 1
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 1
  %17 = bitcast i8** %16 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"** %17, align 8
  br label %18

18:                                               ; preds = %7, %11
  %19 = phi i32 [ %14, %11 ], [ 0, %7 ]
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %2, i64 0, i32 2
  store i32 %19, i32* %20, align 8
  %21 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %2, [11 x i8]* nonnull dereferenceable(11) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #13
  br i1 %21, label %76, label %22

22:                                               ; preds = %18
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %76, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %29 = bitcast %"class.WTF::StringImpl"* %28 to i8*
  %30 = icmp eq i32 %27, 19
  br i1 %30, label %31, label %76

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %54, label %38

36:                                               ; preds = %38
  %37 = icmp eq i64 %53, 19
  br i1 %37, label %76, label %96

38:                                               ; preds = %31, %110
  %39 = phi i64 [ %111, %110 ], [ 0, %31 ]
  %40 = getelementptr inbounds i8, i8* %29, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds [20 x i8], [20 x i8]* @.str, i64 0, i64 %39
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i64
  %49 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = sext i8 %50 to i32
  %52 = icmp eq i32 %45, %51
  %53 = or i64 %39, 1
  br i1 %52, label %36, label %76

54:                                               ; preds = %31
  %55 = bitcast %"class.WTF::StringImpl"* %28 to i16*
  br label %58

56:                                               ; preds = %58
  %57 = icmp eq i64 %75, 19
  br i1 %57, label %76, label %78

58:                                               ; preds = %94, %54
  %59 = phi i64 [ 0, %54 ], [ %95, %94 ]
  %60 = getelementptr inbounds i16, i16* %55, i64 %59
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [20 x i8], [20 x i8]* @.str, i64 0, i64 %59
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  %75 = or i64 %59, 1
  br i1 %74, label %56, label %76

76:                                               ; preds = %38, %36, %96, %58, %56, %78, %22, %25, %18
  %77 = phi i32 [ 1, %18 ], [ 0, %25 ], [ 0, %22 ], [ 0, %58 ], [ 2, %56 ], [ 0, %78 ], [ 0, %38 ], [ 2, %36 ], [ 0, %96 ]
  ret i32 %77

78:                                               ; preds = %56
  %79 = getelementptr inbounds i16, i16* %55, i64 %75
  %80 = load i16, i16* %79, align 2
  %81 = add i16 %80, -65
  %82 = icmp ult i16 %81, 26
  %83 = zext i1 %82 to i16
  %84 = shl nuw nsw i16 %83, 5
  %85 = or i16 %84, %80
  %86 = zext i16 %85 to i32
  %87 = getelementptr inbounds [20 x i8], [20 x i8]* @.str, i64 0, i64 %75
  %88 = load i8, i8* %87, align 1
  %89 = zext i8 %88 to i64
  %90 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = sext i8 %91 to i32
  %93 = icmp eq i32 %86, %92
  br i1 %93, label %94, label %76

94:                                               ; preds = %78
  %95 = add nuw nsw i64 %59, 2
  br label %58

96:                                               ; preds = %36
  %97 = getelementptr inbounds i8, i8* %29, i64 %53
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds [20 x i8], [20 x i8]* @.str, i64 0, i64 %53
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i32
  %109 = icmp eq i32 %102, %108
  br i1 %109, label %110, label %76

110:                                              ; preds = %96
  %111 = add nuw nsw i64 %39, 2
  br label %38
}

declare %"class.blink::EncodedFormData"* @_ZN5blink15EncodedFormData6CreateEv() local_unnamed_addr #2

declare void @_ZN5blink19ResourceRequestHead13SetHttpMethodERKN3WTF12AtomicStringE(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink15ResourceRequest11SetHttpBodyE13scoped_refptrINS_15EncodedFormDataEE(%"class.blink::ResourceRequest"*, %"class.blink::EncodedFormData"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12AtomicStringEPKcNS_6StringEEENS_12StringAppendINS5_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.1671"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.1671", %"class.WTF::StringAppend.1671"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #13
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #13
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.1671", %"class.WTF::StringAppend.1671"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #13
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #13
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #13
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

declare void @_ZN5blink19ResourceRequestHead17SetHasUserGestureEb(%"class.blink::ResourceRequestHead"*, i1 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink10LocalFrame26HasTransientUserActivationEPS0_(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #2

declare void @_ZN5blink16FrameLoadRequestC1EPNS_14LocalDOMWindowERKNS_15ResourceRequestE(%"struct.blink::FrameLoadRequest"*, %"class.blink::LocalDOMWindow"*, %"class.blink::ResourceRequest"* dereferenceable(1032)) unnamed_addr #2

declare i32 @_ZN5blink25NavigationPolicyFromEventEPKNS_5EventE(%"class.blink::Event"*) local_unnamed_addr #2

declare { %"class.blink::Frame"*, i8 } @_ZNK5blink9FrameTree30FindOrCreateFrameForNavigationERNS_16FrameLoadRequestERKN3WTF12AtomicStringE(%"class.blink::FrameTree"*, %"struct.blink::FrameLoadRequest"* dereferenceable(1320), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #2

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #2

declare void @_ZN5blink15PolicyContainer20IssueKeepAliveHandleEv(%"class.mojo::PendingRemote.672"* sret, %"class.blink::PolicyContainer"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16FrameLoadRequestD2Ev(%"struct.blink::FrameLoadRequest"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %3 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %2, align 8
  store %"class.blink::SourceLocation"* null, %"class.blink::SourceLocation"** %2, align 8
  %4 = icmp eq %"class.blink::SourceLocation"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %3) #13
  %6 = bitcast %"class.blink::SourceLocation"* %3 to i8*
  tail call void @free(i8* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 15, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %8) #13
  %9 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %17) #13
  store i8 0, i8* %13, align 8
  br label %18

18:                                               ; preds = %16, %12
  %19 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %19) #13
  store i8 0, i8* %9, align 8
  br label %20

20:                                               ; preds = %7, %18
  %21 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 12, i32 17, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %32, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 12, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 12, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %29) #13
  store i8 0, i8* %25, align 8
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 12, i32 17, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"* %31) #13
  store i8 0, i8* %21, align 8
  br label %32

32:                                               ; preds = %20, %30
  %33 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 9, i32 0
  %34 = load %"class.base::RefCountedData.1673"*, %"class.base::RefCountedData.1673"** %33, align 8
  %35 = icmp eq %"class.base::RefCountedData.1673"* %34, null
  br i1 %35, label %55, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.base::RefCountedData.1673", %"class.base::RefCountedData.1673"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"class.base::RefCountedData.1673", %"class.base::RefCountedData.1673"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw sub i32* %38, i32 1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %55

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1674", %"class.base::RefCountedThreadSafe.1674"* %37, i64 2
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.1674", %"class.base::RefCountedThreadSafe.1674"* %37, i64 12
  %44 = bitcast %"class.base::RefCountedThreadSafe.1674"* %43 to %"class.blink::mojom::blink::BlobURLTokenProxy"**
  %45 = load %"class.blink::mojom::blink::BlobURLTokenProxy"*, %"class.blink::mojom::blink::BlobURLTokenProxy"** %44, align 8
  store %"class.blink::mojom::blink::BlobURLTokenProxy"* null, %"class.blink::mojom::blink::BlobURLTokenProxy"** %44, align 8
  %46 = icmp eq %"class.blink::mojom::blink::BlobURLTokenProxy"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.blink::mojom::blink::BlobURLTokenProxy"* %45 to void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)***
  %49 = load void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)**, void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)*, void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)** %49, i64 1
  %51 = load void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)*, void (%"class.blink::mojom::blink::BlobURLTokenProxy"*)** %50, align 8
  tail call void %51(%"class.blink::mojom::blink::BlobURLTokenProxy"* nonnull %45) #13
  br label %52

52:                                               ; preds = %47, %41
  %53 = bitcast %"class.base::RefCountedThreadSafe.1674"* %42 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %53) #13
  %54 = bitcast %"class.base::RefCountedData.1673"* %34 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  br label %55

55:                                               ; preds = %32, %36, %52
  %56 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 8, i32 0
  %57 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %56, align 8
  %58 = icmp eq %"class.blink::DOMWrapperWorld"* %57, null
  br i1 %58, label %66, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %57, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %60) #13
  %61 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %57) #13
  %65 = bitcast %"class.blink::DOMWrapperWorld"* %57 to i8*
  tail call void @free(i8* %65) #13
  br label %66

66:                                               ; preds = %55, %59, %64
  %67 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #13
  br label %83

83:                                               ; preds = %66, %79, %82
  %84 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %0, i64 0, i32 1
  tail call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* %84) #13
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14FormSubmission10AttributesD2Ev(%"class.blink::FormSubmission::Attributes"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #13
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #13
  br label %52

52:                                               ; preds = %35, %48, %51
  %53 = getelementptr inbounds %"class.blink::FormSubmission::Attributes", %"class.blink::FormSubmission::Attributes"* %0, i64 0, i32 2, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #13
  br label %69

69:                                               ; preds = %52, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14FormSubmission5TraceEPNS_7VisitorE(%"class.blink::FormSubmission"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 11
  %15 = bitcast %"class.blink::Member.135"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv) #13
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 13
  %26 = bitcast %"class.blink::Member.137"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14LocalDOMWindowEE5TraceEPNS_7VisitorEPKv) #13
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14FormSubmission8NavigateEv(%"class.blink::FormSubmission"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"struct.blink::FrameLoadRequest", align 8
  %5 = alloca %"class.mojo::PendingRemote.672", align 4
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 112, i1 false)
  %7 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 1
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %2, %"class.blink::KURL"* dereferenceable(112) %7) #13
  %8 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %35, label %11

11:                                               ; preds = %1
  %12 = call zeroext i1 @_ZNK5blink4KURL20ProtocolIsJavaScriptEv(%"class.blink::KURL"* %7) #13
  br i1 %12, label %35, label %13

13:                                               ; preds = %11
  %14 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 5, i32 0
  %16 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %15, align 8
  %17 = call %"class.WTF::StringImpl"* @_ZNK5blink15EncodedFormData15FlattenToStringEv(%"class.blink::EncodedFormData"* %16) #13
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  call void @_ZN5blink4KURL8SetQueryERKN3WTF6StringE(%"class.blink::KURL"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #13
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #13
  br label %34

34:                                               ; preds = %13, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #13
  br label %35

35:                                               ; preds = %1, %34, %11
  %36 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %37 = load %"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %37, i64 0, i32 0
  call void @_ZN5blink19ResourceRequestHead6SetUrlERKNS_4KURLE(%"class.blink::ResourceRequestHead"* %38, %"class.blink::KURL"* nonnull dereferenceable(112) %2) #13
  %39 = bitcast %"struct.blink::FrameLoadRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1320, i8* nonnull %39) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 1320, i1 false)
  %40 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 13, i32 0, i32 0
  %41 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %40, align 8
  %42 = load %"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"** %36, align 8
  call void @_ZN5blink16FrameLoadRequestC1EPNS_14LocalDOMWindowERKNS_15ResourceRequestE(%"struct.blink::FrameLoadRequest"* nonnull %4, %"class.blink::LocalDOMWindow"* %41, %"class.blink::ResourceRequest"* dereferenceable(1032) %42) #13
  %43 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 6
  %44 = load i32, i32* %43, align 8
  %45 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %4, i64 0, i32 4
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 9
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %4, i64 0, i32 3
  store i32 %47, i32* %48, align 8
  %49 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 4, i32 0, i32 0
  %50 = bitcast %"class.blink::HTMLFormElement"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %4, i64 0, i32 6
  %53 = bitcast %"class.blink::HTMLFormElement"** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 7
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %4, i64 0, i32 5
  store i32 %55, i32* %56, align 8
  %57 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 14
  %58 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %4, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !3
  %60 = icmp eq i8 %59, 0
  %61 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %4, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %62 = bitcast %"class.util::TokenType"* %61 to i8*
  %63 = bitcast %"class.util::TokenType"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 16, i1 false) #13
  br i1 %60, label %64, label %65

64:                                               ; preds = %35
  store i8 1, i8* %58, align 8
  br label %65

65:                                               ; preds = %35, %64
  %66 = getelementptr inbounds %"class.mojo::PendingRemote.672", %"class.mojo::PendingRemote.672"* %5, i64 0, i32 0
  %67 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 16, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %66, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %67) #13
  %68 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %4, i64 0, i32 15, i32 0
  %69 = call dereferenceable(8) %"struct.mojo::internal::PendingRemoteState"* @_ZN4mojo8internal18PendingRemoteStateaSEOS1_(%"struct.mojo::internal::PendingRemoteState"* %68, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %66) #13
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %66) #13
  %70 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 15
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.660"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.660"* %70 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.blink::SourceLocation"* null, %"class.blink::SourceLocation"** %71, align 8
  %74 = getelementptr inbounds %"struct.blink::FrameLoadRequest", %"struct.blink::FrameLoadRequest"* %4, i64 0, i32 16
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.660"* %74, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %75, align 8
  %77 = bitcast %"class.std::__1::unique_ptr.660"* %74 to i64*
  store i64 %73, i64* %77, align 8
  %78 = icmp eq %"class.blink::SourceLocation"* %76, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %65
  call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %76) #13
  %80 = bitcast %"class.blink::SourceLocation"* %76 to i8*
  call void @free(i8* %80) #13
  br label %81

81:                                               ; preds = %65, %79
  %82 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 11, i32 0, i32 0
  %83 = load %"class.blink::Frame"*, %"class.blink::Frame"** %82, align 8
  %84 = icmp eq %"class.blink::Frame"* %83, null
  br i1 %84, label %98, label %85

85:                                               ; preds = %81
  %86 = call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* nonnull %83) #13
  %87 = icmp eq %"class.blink::Page"* %86, null
  br i1 %87, label %98, label %88

88:                                               ; preds = %85
  %89 = load %"class.blink::Frame"*, %"class.blink::Frame"** %82, align 8
  %90 = icmp eq %"class.blink::Frame"* %89, null
  br i1 %90, label %98, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 12
  %93 = load i32, i32* %92, align 8
  %94 = bitcast %"class.blink::Frame"* %89 to void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)***
  %95 = load void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)**, void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)*, void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)** %95, i64 5
  %97 = load void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)*, void (%"class.blink::Frame"*, %"struct.blink::FrameLoadRequest"*, i32)** %96, align 8
  call void %97(%"class.blink::Frame"* nonnull %89, %"struct.blink::FrameLoadRequest"* nonnull dereferenceable(1320) %4, i32 %93) #13
  br label %98

98:                                               ; preds = %88, %81, %91, %85
  call void @_ZN5blink16FrameLoadRequestD2Ev(%"struct.blink::FrameLoadRequest"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 1320, i8* nonnull %39) #13
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #13
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL20ProtocolIsJavaScriptEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink4KURL8SetQueryERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink15EncodedFormData15FlattenToStringEv(%"class.blink::EncodedFormData"*) local_unnamed_addr #2

declare void @_ZN5blink19ResourceRequestHead6SetUrlERKNS_4KURLE(%"class.blink::ResourceRequestHead"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #2

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare %"class.WTF::StringImpl"* @_ZN5blink24DecodeURLEscapeSequencesERKN3WTF6StringEN3url13DecodeURLModeE(%"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringEPKcEcvS1_Ev(%"class.WTF::StringAppend.1789"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.1802", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.1802", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.1802", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1789", %"class.WTF::StringAppend.1789"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = select i1 %11, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %10
  %14 = bitcast %"class.WTF::StringTypeAdapter.1802"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #13
  %15 = getelementptr inbounds %"class.WTF::StringAppend.1789", %"class.WTF::StringAppend.1789"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #13
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1802"* nonnull %6, i8* %16) #13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #13
  br i1 %20, label %81, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1789"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #13
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false) #13
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %21
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %39

33:                                               ; preds = %21
  %34 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 1
  %38 = bitcast %"class.WTF::StringImpl"* %37 to i8*
  br label %39

39:                                               ; preds = %31, %33
  %40 = phi i8* [ null, %31 ], [ %38, %33 ]
  %41 = phi i64 [ %32, %31 ], [ %34, %33 ]
  %42 = phi i32 [ 0, %31 ], [ %36, %33 ]
  %43 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %41, i64* %43, align 8
  store i8* %40, i8** %27, align 8
  store i32 %42, i32* %28, align 8
  %44 = bitcast %"class.WTF::StringTypeAdapter.1802"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 16, i1 false) #13
  %45 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1802"* nonnull %5, i8* %45) #13
  %46 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1801"* nonnull %46, i8* %25) #13
  %47 = load i32, i32* %28, align 8
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %25, i64 %48
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1802"* nonnull %5, i8* %49) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  %50 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %50, label %141, label %51

51:                                               ; preds = %39
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %68

58:                                               ; preds = %51
  %59 = zext i32 %57 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #13
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %58
  call void @llvm.trap() #13
  unreachable

66:                                               ; preds = %58
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %56, align 4
  br label %68

68:                                               ; preds = %51, %66
  %69 = phi i32 [ %67, %66 ], [ %57, %51 ]
  %70 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %71 = load atomic i32, i32* %52 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %76 = add i32 %69, -1
  store i32 %76, i32* %75, align 4
  br label %77

77:                                               ; preds = %74, %68
  %78 = phi i32 [ %76, %74 ], [ %69, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %141

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #13
  br label %141

81:                                               ; preds = %1
  %82 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %83 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1789"* %0)
  %84 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %83, i16** nonnull dereferenceable(8) %8) #13
  %85 = load i16*, i16** %8, align 8
  %86 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #13
  %87 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 24, i1 false) #13
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %99

93:                                               ; preds = %81
  %94 = ptrtoint %"class.WTF::StringImpl"* %89 to i64
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %98 = bitcast %"class.WTF::StringImpl"* %97 to i8*
  br label %99

99:                                               ; preds = %91, %93
  %100 = phi i8* [ null, %91 ], [ %98, %93 ]
  %101 = phi i64 [ %92, %91 ], [ %94, %93 ]
  %102 = phi i32 [ 0, %91 ], [ %96, %93 ]
  %103 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %101, i64* %103, align 8
  store i8* %100, i8** %87, align 8
  store i32 %102, i32* %88, align 8
  %104 = bitcast %"class.WTF::StringTypeAdapter.1802"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 16, i1 false) #13
  %105 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1802"* nonnull %3, i8* %105) #13
  %106 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1801"* nonnull %106, i16* %85) #13
  %107 = load i32, i32* %88, align 8
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i16, i16* %85, i64 %108
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1802"* nonnull %3, i16* %109) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #13
  %110 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %110, label %141, label %111

111:                                              ; preds = %99
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %128

118:                                              ; preds = %111
  %119 = zext i32 %117 to i33
  %120 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %119, i33 1) #13
  %121 = extractvalue { i33, i1 } %120, 1
  %122 = extractvalue { i33, i1 } %120, 0
  %123 = icmp slt i33 %122, 0
  %124 = or i1 %121, %123
  br i1 %124, label %125, label %126, !prof !2

125:                                              ; preds = %118
  call void @llvm.trap() #13
  unreachable

126:                                              ; preds = %118
  %127 = trunc i33 %122 to i32
  store i32 %127, i32* %116, align 4
  br label %128

128:                                              ; preds = %111, %126
  %129 = phi i32 [ %127, %126 ], [ %117, %111 ]
  %130 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %131 = load atomic i32, i32* %112 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %137

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %136 = add i32 %129, -1
  store i32 %136, i32* %135, align 4
  br label %137

137:                                              ; preds = %134, %128
  %138 = phi i32 [ %136, %134 ], [ %129, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #13
  br label %141

141:                                              ; preds = %140, %137, %99, %80, %77, %39
  %142 = phi i8* [ %22, %39 ], [ %22, %77 ], [ %22, %80 ], [ %82, %99 ], [ %82, %137 ], [ %82, %140 ]
  %143 = phi i64 [ 0, %39 ], [ %70, %77 ], [ %70, %80 ], [ 0, %99 ], [ %130, %137 ], [ %130, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #13
  %144 = inttoptr i64 %143 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIcLj0ENS_18PartitionAllocatorEE6AppendIcEEvPKT_j(%"class.WTF::Vector.50"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.50", %"class.WTF::Vector.50"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.50", %"class.WTF::Vector.50"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.50", %"class.WTF::Vector.50"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !4

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %32) #13
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %33) #13
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector.50"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !4

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #13
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #13
  %50 = bitcast %"class.WTF::Vector.50"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !4

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64 %66) #13
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64 %67) #13
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !4

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #13
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #13
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector.50"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #13
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i8* %96, i8* %97) #13
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #13
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #13
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #13
  %105 = getelementptr inbounds %"class.WTF::Vector.50", %"class.WTF::Vector.50"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !4

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #13
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

declare void @_ZN5blink15FormDataEncoder22EncodeStringAsFormDataERN3WTF6VectorIcLj0ENS1_18PartitionAllocatorEEERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEENS0_4ModeE(%"class.WTF::Vector.50"* dereferenceable(16), %"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #2

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

declare void @_ZN3WTF6StringC1EPKcj(%"class.WTF::String"*, i8*, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #13
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #13
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL5QueryEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsRKNS_10StringViewE(%"class.WTF::StringImpl"*, i16 zeroext, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEDsDs(%"class.WTF::StringImpl"*, i16 zeroext, i16 zeroext) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.1789"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1802", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1789", %"class.WTF::StringAppend.1789"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.1802"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1802", %"class.WTF::StringTypeAdapter.1802"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1789", %"class.WTF::StringAppend.1789"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.1802"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1802"* nonnull %4, i8* %21) #13
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %46, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1802"*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1801"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1802"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1801"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1802"*, i16*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator21AllocateVectorBackingIcEEPT_m(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIcEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !3
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !2

22:                                               ; preds = %15
  %23 = bitcast %union.anon.1790* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.1790* %16 to %"class.WTF::Vector.1796"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1796"* %30, i16* nonnull dereferenceable(2) %3) #13
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !3
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #13
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !2

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1791"* %41, i8* nonnull dereferenceable(1) %4) #13
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.1796"*, i16* dereferenceable(2)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1796"* %0, i32 %5) #13
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1796"* %0, i32 %5) #13
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1796"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1796"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.1796"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1796"* %0, i32 %27) #13
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1796"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.1796"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.1796"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !2

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #13
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1797"* %19, i16* nonnull %6) #13
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #13
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #13
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !4

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #13
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !4

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1797"* %53, i16* %48) #13
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.1796"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.1796", %"class.WTF::Vector.1796"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #13
  ret i64 %21
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.1797"*, i16*) local_unnamed_addr #9 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.1791"*, i8* dereferenceable(1)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1791"* %0, i32 %5) #13
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1791"* %0, i32 %5) #13
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.1791"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #13
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i8* %15, i8* %16) #13
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #13
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !4

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #13
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.1791"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.1791"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1791"* %0, i32 %27) #13
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1791"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.1791"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.1791"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !2

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #13
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1792"* %18, i8* nonnull %6) #13
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #13
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !4

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #13
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !4

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1792"* %46, i8* %42) #13
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.1791"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.1791", %"class.WTF::Vector.1791"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.20, i64 0, i64 0), i8* %11, i8* %12) #13
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.21, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #13
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #13
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #13
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.1792"*, i8*) local_unnamed_addr #9 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #13
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

declare i64 @_ZN4base4Time3NowEv() local_unnamed_addr #2

declare double @_ZNK4base4Time9ToDoubleTEv(%"class.base::Time"*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare void @_ZN5blink19ResourceRequestHead18SetHttpHeaderFieldERKN3WTF12AtomicStringES4_(%"class.blink::ResourceRequestHead"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #15
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #15
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #4

declare void @_ZN5blink17WebSecurityOrigin5ResetEv(%"class.blink::WebSecurityOrigin"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare dereferenceable(8) %"struct.mojo::internal::PendingRemoteState"* @_ZN4mojo8internal18PendingRemoteStateaSEOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormSubmission"* @_ZN5blink25MakeGarbageCollectedTraitINS_14FormSubmissionEE4CallIJN3WTF6StringEEEEPS1_DpOT_(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14FormSubmissionEEEPhm(i64 240) #13
  %3 = bitcast i8* %2 to %"class.blink::FormSubmission"*
  %4 = bitcast i8* %2 to i32*
  store i32 2, i32* %4, align 8
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = bitcast i8* %5 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %6) #13
  %7 = getelementptr inbounds i8, i8* %2, i64 120
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #13
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 160
  %11 = bitcast i8* %10 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %11, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #13
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %18
  tail call void @llvm.trap() #13
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %1, %13, %28
  %31 = getelementptr inbounds i8, i8* %2, i64 176
  %32 = getelementptr inbounds i8, i8* %2, i64 200
  %33 = bitcast i8* %32 to %"class.blink::LocalDOMWindow"**
  store %"class.blink::LocalDOMWindow"* null, %"class.blink::LocalDOMWindow"** %33, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #13
  %34 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #13
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = extractvalue { i64, i64 } %34, 1
  %37 = getelementptr inbounds i8, i8* %2, i64 208
  %38 = bitcast i8* %37 to i64*
  store i64 %35, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %2, i64 216
  %40 = bitcast i8* %39 to i64*
  store i64 %36, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %2, i64 224
  %42 = bitcast i8* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %2, i64 232
  %44 = bitcast i8* %43 to %"struct.mojo::internal::PendingRemoteState"*
  tail call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* %44) #13
  %45 = getelementptr inbounds i8, i8* %2, i64 -4
  %46 = bitcast i8* %45 to i16*
  %47 = load atomic i16, i16* %46 monotonic, align 2
  %48 = or i16 %47, 1
  store atomic i16 %48, i16* %46 release, align 2
  ret %"class.blink::FormSubmission"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14FormSubmissionEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #13
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #13
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #13
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14FormSubmissionEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14FormSubmissionEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14FormSubmissionEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #13
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #13
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.27, i64 0, i64 0), i8* %40, i8* %41) #13
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #13
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #13
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14FormSubmissionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 136
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv) #13
  br label %13

13:                                               ; preds = %7, %2
  %14 = getelementptr inbounds i8, i8* %1, i64 184
  %15 = bitcast i8* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %0, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv) #13
  br label %24

24:                                               ; preds = %18, %13
  %25 = getelementptr inbounds i8, i8* %1, i64 200
  %26 = bitcast i8* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %0, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_14LocalDOMWindowEE5TraceEPNS_7VisitorEPKv) #13
  br label %35

35:                                               ; preds = %24, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14FormSubmissionEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::FormSubmission"*
  tail call void @_ZN5blink14FormSubmissionD2Ev(%"class.blink::FormSubmission"* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14FormSubmissionEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14FormSubmissionD2Ev(%"class.blink::FormSubmission"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 16, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %2) #13
  %3 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 15, i32 0, i32 0, i32 0
  %4 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %3, align 8
  store %"class.blink::SourceLocation"* null, %"class.blink::SourceLocation"** %3, align 8
  %5 = icmp eq %"class.blink::SourceLocation"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %4) #13
  %7 = bitcast %"class.blink::SourceLocation"* %4 to i8*
  tail call void @free(i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %10 = load %"class.blink::ResourceRequest"*, %"class.blink::ResourceRequest"** %9, align 8
  store %"class.blink::ResourceRequest"* null, %"class.blink::ResourceRequest"** %9, align 8
  %11 = icmp eq %"class.blink::ResourceRequest"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %10) #13
  %13 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %10, i64 0, i32 0, i32 0, i32 0
  tail call void @free(i8* %13) #13
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 8, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #13
  br label %31

31:                                               ; preds = %14, %27, %30
  %32 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 5, i32 0
  %33 = load %"class.blink::EncodedFormData"*, %"class.blink::EncodedFormData"** %32, align 8
  %34 = icmp eq %"class.blink::EncodedFormData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #13
  %37 = getelementptr inbounds %"class.blink::EncodedFormData", %"class.blink::EncodedFormData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink15EncodedFormDataD1Ev(%"class.blink::EncodedFormData"* nonnull %33) #13
  %41 = bitcast %"class.blink::EncodedFormData"* %33 to i8*
  tail call void @free(i8* %41) #13
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #13
  br label %59

59:                                               ; preds = %42, %55, %58
  %60 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #13
  br label %76

76:                                               ; preds = %59, %72, %75
  %77 = getelementptr inbounds %"class.blink::FormSubmission", %"class.blink::FormSubmission"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %77) #13
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #2

declare { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() local_unnamed_addr #2

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormSubmission"* @_ZN5blink25MakeGarbageCollectedTraitINS_14FormSubmissionEE4CallIJRA1_KcEEEPS1_DpOT_([1 x i8]* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14FormSubmissionEEEPhm(i64 240) #13
  %4 = bitcast i8* %3 to %"class.blink::FormSubmission"*
  %5 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #13
  %6 = getelementptr inbounds [1 x i8], [1 x i8]* %0, i64 0, i64 0
  %7 = icmp eq [1 x i8]* %0, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = tail call i64 @strlen(i8* nonnull %6) #14
  br label %10

10:                                               ; preds = %1, %8
  %11 = phi i64 [ %9, %8 ], [ 0, %1 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* %6, i64 %11) #13
  %12 = bitcast i8* %3 to i32*
  store i32 2, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %3, i64 8
  %14 = bitcast i8* %13 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %14) #13
  %15 = getelementptr inbounds i8, i8* %3, i64 120
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 32, i1 false) #13
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds i8, i8* %3, i64 160
  %19 = bitcast i8* %18 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %19, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %20, label %38, label %21

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %38

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = zext i32 %28 to i33
  %30 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %29, i33 1) #13
  %31 = extractvalue { i33, i1 } %30, 1
  %32 = extractvalue { i33, i1 } %30, 0
  %33 = icmp slt i33 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %35, label %36, !prof !2

35:                                               ; preds = %26
  call void @llvm.trap() #13
  unreachable

36:                                               ; preds = %26
  %37 = trunc i33 %32 to i32
  store i32 %37, i32* %27, align 4
  br label %38

38:                                               ; preds = %10, %21, %36
  %39 = getelementptr inbounds i8, i8* %3, i64 176
  %40 = getelementptr inbounds i8, i8* %3, i64 200
  %41 = bitcast i8* %40 to %"class.blink::LocalDOMWindow"**
  store %"class.blink::LocalDOMWindow"* null, %"class.blink::LocalDOMWindow"** %41, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #13
  %42 = call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #13
  %43 = extractvalue { i64, i64 } %42, 0
  %44 = extractvalue { i64, i64 } %42, 1
  %45 = getelementptr inbounds i8, i8* %3, i64 208
  %46 = bitcast i8* %45 to i64*
  store i64 %43, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %3, i64 216
  %48 = bitcast i8* %47 to i64*
  store i64 %44, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %3, i64 224
  %50 = bitcast i8* %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %3, i64 232
  %52 = bitcast i8* %51 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* %52) #13
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %38
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #13
  br label %68

68:                                               ; preds = %38, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #13
  %69 = getelementptr inbounds i8, i8* %3, i64 -4
  %70 = bitcast i8* %69 to i16*
  %71 = load atomic i16, i16* %70 monotonic, align 2
  %72 = or i16 %71, 1
  store atomic i16 %72, i16* %70 release, align 2
  ret %"class.blink::FormSubmission"* %4
}

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEC2ES4_S5_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #13
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #13
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #13
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #13
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #13
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEEcvS5_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.1802", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.1802"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #13
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #13
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1802"* nonnull %2, i8* %14) #13
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #13
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #13
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #13
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #13
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #13
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #13
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #13
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #13
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #13
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.1671"* %8) #13
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.1671"* %8) #13
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #13
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %26, i8* %27) #13
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #13
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #13
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %41, i8* %42) #13
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #13
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #13
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #13
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1831", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1802", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.1831"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1831", %"class.WTF::StringTypeAdapter.1831"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1831", %"class.WTF::StringTypeAdapter.1831"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #13
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.1831"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.1802"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #13
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1802"* nonnull %4, i8* %48) #13
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1831", %"class.WTF::StringTypeAdapter.1831"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1801"* nonnull %49, i8* %1) #13
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.1802"* nonnull %4, i8* %52) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.1671"* %6) #13
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.1801"* nonnull %53, i8* %56) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_12AtomicStringEPKcEENS_6StringEE7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.1831", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1802", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.1831"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #13
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1831", %"class.WTF::StringTypeAdapter.1831"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1831", %"class.WTF::StringTypeAdapter.1831"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #13
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.1831"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.1802"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #13
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #13
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1802"* nonnull %4, i8* %48) #13
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1831", %"class.WTF::StringTypeAdapter.1831"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1801"* nonnull %49, i16* %1) #13
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1802"* nonnull %4, i16* %52) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #13
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.1671"* %6) #13
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.1801"* nonnull %53, i16* %56) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringEPKcE6lengthEv(%"class.WTF::StringAppend.1671"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.1802", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.1671", %"class.WTF::StringAppend.1671"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.1802"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #13
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.1802", %"class.WTF::StringTypeAdapter.1802"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.1671", %"class.WTF::StringAppend.1671"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.1802"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.1802"* nonnull %4, i8* %21) #13
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #13
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %30, i8* %31) #13
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #13
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #13
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #13
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #13
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %46, i8* %47) #13
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #13
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #13
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #13
  ret i32 %23
}

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::FormSubmission"* @_ZN5blink25MakeGarbageCollectedTraitINS_14FormSubmissionEE4CallIJNS1_12SubmitMethodERNS_4KURLERN3WTF12AtomicStringES9_RPNS_15HTMLFormElementE13scoped_refptrINS_15EncodedFormDataEERPKNS_5EventENS_16NavigationPolicyERNS_5mojom19TriggeringEventInfoERNS_22ClientNavigationReasonENSt3__110unique_ptrINS_15ResourceRequestENSQ_14default_deleteISS_EEEERPNS_5FrameERNS_16WebFrameLoadTypeEPNS_14LocalDOMWindowEN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENSR_INS_14SourceLocationENST_IS17_EEEEN4mojo13PendingRemoteINSL_5blink34PolicyContainerHostKeepAliveHandleEEEEEEPS1_DpOT_(i32* dereferenceable(4), %"class.blink::KURL"* dereferenceable(112), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::HTMLFormElement"** dereferenceable(8), %class.scoped_refptr.44* dereferenceable(8), %"class.blink::Event"** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.std::__1::unique_ptr.64"* dereferenceable(8), %"class.blink::Frame"** dereferenceable(8), i32* dereferenceable(4), %"class.blink::LocalDOMWindow"** dereferenceable(8), %"class.util::TokenType"* dereferenceable(16), %"class.std::__1::unique_ptr.660"* dereferenceable(8), %"class.mojo::PendingRemote.672"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %18 = alloca %"class.mojo::PendingRemote.672", align 4
  %19 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14FormSubmissionEEEPhm(i64 240) #13
  %20 = bitcast i8* %19 to %"class.blink::FormSubmission"*
  %21 = load i32, i32* %0, align 4
  %22 = bitcast %"class.blink::HTMLFormElement"** %4 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %class.scoped_refptr.44, %class.scoped_refptr.44* %5, i64 0, i32 0
  %25 = bitcast %class.scoped_refptr.44* %5 to i64*
  %26 = load i64, i64* %25, align 8
  store %"class.blink::EncodedFormData"* null, %"class.blink::EncodedFormData"** %24, align 8
  %27 = load i32, i32* %7, align 4
  %28 = load i32, i32* %8, align 4
  %29 = load i32, i32* %9, align 4
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64"* %10, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::unique_ptr.64"* %10 to i64*
  %32 = load i64, i64* %31, align 8
  store %"class.blink::ResourceRequest"* null, %"class.blink::ResourceRequest"** %30, align 8
  %33 = bitcast %"class.blink::Frame"** %11 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = load i32, i32* %12, align 4
  %36 = bitcast %"class.blink::LocalDOMWindow"** %13 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.660"* %15, i64 0, i32 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::unique_ptr.660"* %15 to i64*
  %40 = load i64, i64* %39, align 8
  store %"class.blink::SourceLocation"* null, %"class.blink::SourceLocation"** %38, align 8
  %41 = getelementptr inbounds %"class.mojo::PendingRemote.672", %"class.mojo::PendingRemote.672"* %18, i64 0, i32 0
  %42 = getelementptr inbounds %"class.mojo::PendingRemote.672", %"class.mojo::PendingRemote.672"* %16, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %41, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %42) #13
  %43 = bitcast i8* %19 to i32*
  store i32 %21, i32* %43, align 8
  %44 = getelementptr inbounds i8, i8* %19, i64 8
  %45 = bitcast i8* %44 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %45, %"class.blink::KURL"* dereferenceable(112) %1) #13
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = getelementptr inbounds i8, i8* %19, i64 120
  %49 = bitcast i8* %48 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %47, %"class.WTF::StringImpl"** %49, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %50, label %68, label %51

51:                                               ; preds = %17
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %68

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = zext i32 %58 to i33
  %60 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %59, i33 1) #13
  %61 = extractvalue { i33, i1 } %60, 1
  %62 = extractvalue { i33, i1 } %60, 0
  %63 = icmp slt i33 %62, 0
  %64 = or i1 %61, %63
  br i1 %64, label %65, label %66, !prof !2

65:                                               ; preds = %56
  call void @llvm.trap() #13
  unreachable

66:                                               ; preds = %56
  %67 = trunc i33 %62 to i32
  store i32 %67, i32* %57, align 4
  br label %68

68:                                               ; preds = %66, %51, %17
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = getelementptr inbounds i8, i8* %19, i64 128
  %72 = bitcast i8* %71 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %70, %"class.WTF::StringImpl"** %72, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #13
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %79
  call void @llvm.trap() #13
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %68, %74, %89
  %92 = getelementptr inbounds i8, i8* %19, i64 136
  %93 = bitcast i8* %92 to i64*
  store i64 %23, i64* %93, align 8
  %94 = getelementptr inbounds i8, i8* %19, i64 144
  %95 = bitcast i8* %94 to i64*
  store i64 %26, i64* %95, align 8
  %96 = getelementptr inbounds i8, i8* %19, i64 152
  %97 = bitcast i8* %96 to i32*
  store i32 %27, i32* %97, align 8
  %98 = getelementptr inbounds i8, i8* %19, i64 156
  %99 = bitcast i8* %98 to i32*
  store i32 %28, i32* %99, align 4
  %100 = getelementptr inbounds i8, i8* %19, i64 160
  %101 = bitcast i8* %100 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %101, align 8
  %102 = getelementptr inbounds i8, i8* %19, i64 168
  %103 = bitcast i8* %102 to i32*
  store i32 %29, i32* %103, align 8
  %104 = getelementptr inbounds i8, i8* %19, i64 176
  %105 = bitcast i8* %104 to i64*
  store i64 %32, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %19, i64 184
  %107 = bitcast i8* %106 to i64*
  store i64 %34, i64* %107, align 8
  %108 = getelementptr inbounds i8, i8* %19, i64 192
  %109 = bitcast i8* %108 to i32*
  store i32 %35, i32* %109, align 8
  %110 = getelementptr inbounds i8, i8* %19, i64 200
  %111 = bitcast i8* %110 to i64*
  store i64 %37, i64* %111, align 8
  %112 = getelementptr inbounds i8, i8* %19, i64 208
  %113 = bitcast %"class.util::TokenType"* %14 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 16, i1 false) #13
  %114 = getelementptr inbounds i8, i8* %19, i64 224
  %115 = bitcast i8* %114 to i64*
  store i64 %40, i64* %115, align 8
  %116 = getelementptr inbounds i8, i8* %19, i64 232
  %117 = bitcast i8* %116 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* %117, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %41) #13
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %41) #13
  %118 = getelementptr inbounds i8, i8* %19, i64 -4
  %119 = bitcast i8* %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = or i16 %120, 1
  store atomic i16 %121, i16* %119 release, align 2
  ret %"class.blink::FormSubmission"* %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15HTMLFormElementEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::HTMLFormElement"*
  tail call void @_ZNK5blink15HTMLFormElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormElement"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink15HTMLFormElement5TraceEPNS_7VisitorE(%"class.blink::HTMLFormElement"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_5FrameEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Frame"*
  %4 = bitcast i8* %1 to void (%"class.blink::Frame"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Frame"*, %"class.blink::Visitor"*)**, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::Frame"*, %"class.blink::Visitor"*)*, void (%"class.blink::Frame"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Frame"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14LocalDOMWindowEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LocalDOMWindow"*
  tail call void @_ZNK5blink14LocalDOMWindow5TraceEPNS_7VisitorE(%"class.blink::LocalDOMWindow"* %3, %"class.blink::Visitor"* %0) #13
  ret void
}

declare void @_ZNK5blink14LocalDOMWindow5TraceEPNS_7VisitorE(%"class.blink::LocalDOMWindow"*, %"class.blink::Visitor"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { nounwind readonly }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZNK5blink10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS2_INS_26RemoteFrameTokenTypeMarkerEEEJEE5GetAsIS4_vEET_v: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink10MultiTokenIN4util9TokenTypeINS_25LocalFrameTokenTypeMarkerEEENS2_INS_26RemoteFrameTokenTypeMarkerEEEJEE5GetAsIS4_vEET_v"}
!9 = distinct !{!9, !10, !"_ZNK5blink10LocalFrame18GetLocalFrameTokenEv: argument 0"}
!10 = distinct !{!10, !"_ZNK5blink10LocalFrame18GetLocalFrameTokenEv"}
