; ModuleID = '../../third_party/skia/modules/skottie/src/effects/MotionBlurEffect.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/MotionBlurEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.sksg::RenderNode::ScopedRenderContext" = type <{ %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext", %class.sk_sp.17, i32, [4 x i8] }>
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.5, [384 x i64], %class.sk_sp.6, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.10" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.5 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.6 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"struct.sksg::RenderNode::RenderContext" = type { %class.sk_sp.16, %class.sk_sp.17, %class.sk_sp.17, %class.SkMatrix, %class.SkMatrix, float, i32 }
%class.sk_sp.16 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkMatrix = type { [9 x float], i32 }
%class.sk_sp.17 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkPaint = type <{ %class.sk_sp.18, %class.sk_sp.17, %class.sk_sp.19, %class.sk_sp.16, %class.sk_sp.20, %struct.SkRGBA4f, float, float, %union.anon.21, [4 x i8] }>
%class.sk_sp.18 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.19 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.20 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.21 = type { %struct.anon }
%struct.anon = type { i32 }
%"class.skottie::internal::MotionBlurEffect" = type { %"class.sksg::CustomRenderNode", %class.sk_sp.4, i64, float, float, float, i64 }
%"class.sksg::CustomRenderNode" = type { %"class.sksg::RenderNode.base", %"class.std::__1::vector.1" }
%"class.sksg::RenderNode.base" = type { %"class.sksg::Node.base" }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.2*, %class.sk_sp.2*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.2* }
%class.sk_sp.4 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%class.sk_sp = type { %"class.skottie::internal::MotionBlurEffect"* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%struct.SkPoint = type { float, float }
%"class.sksg::InvalidationController" = type opaque
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.22, i32, i32 }
%class.sk_sp.22 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i64*, i64*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i64* }
%struct.SkIPoint = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%class.sk_sp.44 = type { %"class.sksg::Node"* }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%"struct.SkCanvas::SaveLayerRec" = type <{ %struct.SkRect*, %class.SkPaint*, %class.SkImageFilter*, i32, [4 x i8] }>

$_ZN7skottie8internal16MotionBlurEffectD2Ev = comdat any

$_ZN7skottie8internal16MotionBlurEffectD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

@_ZTVN7skottie8internal16MotionBlurEffectE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::MotionBlurEffect"*)* @_ZN7skottie8internal16MotionBlurEffectD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::MotionBlurEffect"*)* @_ZN7skottie8internal16MotionBlurEffectD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.skottie::internal::MotionBlurEffect"*, %"class.sksg::InvalidationController"*, %class.SkMatrix*)* @_ZN7skottie8internal16MotionBlurEffect12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrix to i8*), i8* bitcast (void (%"class.skottie::internal::MotionBlurEffect"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*)* @_ZNK7skottie8internal16MotionBlurEffect8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE to i8*), i8* bitcast (%"class.sksg::RenderNode"* (%"class.skottie::internal::MotionBlurEffect"*, %struct.SkPoint*)* @_ZNK7skottie8internal16MotionBlurEffect8onNodeAtERK7SkPoint to i8*)] }, align 8
@__const._ZNK7skottie8internal16MotionBlurEffect8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.frame_ctx = private unnamed_addr constant %"class.sksg::RenderNode::ScopedRenderContext" <{ %class.SkCanvas* inttoptr (i64 -6148914691236517206 to %class.SkCanvas*), %"struct.sksg::RenderNode::RenderContext" { %class.sk_sp.16 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.17 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.17 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 }, float 0xFFFFFFFFE0000000, i32 -1431655766 }, %class.sk_sp.17 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZNK7skottie8internal16MotionBlurEffect8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.frame_paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.18 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.17 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.19 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.16 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.20 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.21 { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8

@_ZN7skottie8internal16MotionBlurEffectC1E5sk_spINS0_8AnimatorEES2_IN4sksg10RenderNodeEEmff = hidden unnamed_addr alias void (%"class.skottie::internal::MotionBlurEffect"*, %class.sk_sp.4*, %class.sk_sp.2*, i64, float, float), void (%"class.skottie::internal::MotionBlurEffect"*, %class.sk_sp.4*, %class.sk_sp.2*, i64, float, float)* @_ZN7skottie8internal16MotionBlurEffectC2E5sk_spINS0_8AnimatorEES2_IN4sksg10RenderNodeEEmff

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal16MotionBlurEffect4MakeE5sk_spINS0_8AnimatorEES2_IN4sksg10RenderNodeEEmff(%class.sk_sp* noalias nocapture sret, %class.sk_sp.4* nocapture, %class.sk_sp.2* nocapture, i64, float, float) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.4, align 8
  %8 = alloca %class.sk_sp.2, align 8
  %9 = icmp eq i64 %3, 0
  %10 = fcmp ole float %4, 0.000000e+00
  %11 = or i1 %9, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %"class.skottie::internal::MotionBlurEffect"* null, %"class.skottie::internal::MotionBlurEffect"** %13, align 8
  br label %58

14:                                               ; preds = %6
  %15 = fdiv float %4, 3.600000e+02
  %16 = fdiv float %5, 3.600000e+02
  %17 = add i64 %3, -1
  %18 = uitofp i64 %17 to float
  %19 = fdiv float %15, %18
  %20 = tail call i8* @_Znwm(i64 112) #11
  %21 = bitcast i8* %20 to %"class.skottie::internal::MotionBlurEffect"*
  %22 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %1, i64 0, i32 0
  %23 = bitcast %class.sk_sp.4* %1 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %22, align 8
  %25 = bitcast %class.sk_sp.4* %7 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %2, i64 0, i32 0
  %27 = bitcast %class.sk_sp.2* %2 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %26, align 8
  %29 = bitcast %class.sk_sp.2* %8 to i64*
  store i64 %28, i64* %29, align 8
  call void @_ZN7skottie8internal16MotionBlurEffectC2E5sk_spINS0_8AnimatorEES2_IN4sksg10RenderNodeEEmff(%"class.skottie::internal::MotionBlurEffect"* nonnull %21, %class.sk_sp.4* nonnull %7, %class.sk_sp.2* nonnull %8, i64 %3, float %16, float %19)
  %30 = bitcast %class.sk_sp* %0 to i8**
  store i8* %20, i8** %30, align 8
  %31 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %8, i64 0, i32 0
  %32 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %31, align 8
  %33 = icmp eq %"class.sksg::RenderNode"* %32, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %32, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 -1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %"class.sksg::RenderNode"* %32 to %class.SkRefCntBase*
  %40 = bitcast %"class.sksg::RenderNode"* %32 to void (%class.SkRefCntBase*)***
  %41 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %40, align 8
  %42 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %41, i64 2
  %43 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %42, align 8
  tail call void %43(%class.SkRefCntBase* nonnull %39) #12
  br label %44

44:                                               ; preds = %14, %34, %38
  %45 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %7, i64 0, i32 0
  %46 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %45, align 8
  %47 = icmp eq %"class.skottie::internal::Animator"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %46, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %58

52:                                               ; preds = %48
  %53 = bitcast %"class.skottie::internal::Animator"* %46 to %class.SkRefCntBase*
  %54 = bitcast %"class.skottie::internal::Animator"* %46 to void (%class.SkRefCntBase*)***
  %55 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %54, align 8
  %56 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %55, i64 2
  %57 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, align 8
  tail call void %57(%class.SkRefCntBase* nonnull %53) #12
  br label %58

58:                                               ; preds = %52, %48, %44, %12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal16MotionBlurEffectC2E5sk_spINS0_8AnimatorEES2_IN4sksg10RenderNodeEEmff(%"class.skottie::internal::MotionBlurEffect"*, %class.sk_sp.4* nocapture, %class.sk_sp.2* nocapture, i64, float, float) unnamed_addr #0 align 2 {
  %7 = alloca %"class.std::__1::vector.1", align 8
  %8 = alloca [1 x %class.sk_sp.2], align 8
  %9 = bitcast %"class.std::__1::vector.1"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #12
  %10 = bitcast [1 x %class.sk_sp.2]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  %11 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %2, i64 0, i32 0
  %12 = bitcast %class.sk_sp.2* %2 to i64*
  %13 = load i64, i64* %12, align 8
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %11, align 8
  %14 = bitcast [1 x %class.sk_sp.2]* %8 to i64*
  store i64 %13, i64* %14, align 8
  %15 = tail call i8* @_Znwm(i64 8) #11
  %16 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %7, i64 0, i32 0, i32 1
  %17 = bitcast %class.sk_sp.2** %16 to i8**
  store i8* %15, i8** %17, align 8
  %18 = bitcast %"class.std::__1::vector.1"* %7 to i8**
  store i8* %15, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 8
  %20 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %class.sk_sp.2** %20 to i8**
  store i8* %19, i8** %21, align 8
  %22 = bitcast i8* %15 to %"class.sksg::RenderNode"**
  %23 = inttoptr i64 %13 to %"class.sksg::RenderNode"*
  %24 = icmp eq i64 %13, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %25, %6
  store %"class.sksg::RenderNode"* %23, %"class.sksg::RenderNode"** %22, align 8
  %29 = getelementptr inbounds i8, i8* %15, i64 8
  %30 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0
  %31 = bitcast %class.sk_sp.2** %16 to i64*
  %32 = ptrtoint i8* %29 to i64
  store i64 %32, i64* %31, align 8
  call void @_ZN4sksg16CustomRenderNodeC2EONSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE(%"class.sksg::CustomRenderNode"* %30, %"class.std::__1::vector.1"* nonnull dereferenceable(24) %7) #12
  %33 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %7, i64 0, i32 0, i32 0
  %34 = load %class.sk_sp.2*, %class.sk_sp.2** %33, align 8
  %35 = icmp eq %class.sk_sp.2* %34, null
  br i1 %35, label %64, label %36

36:                                               ; preds = %28
  %37 = bitcast %class.sk_sp.2* %34 to i8*
  %38 = load %class.sk_sp.2*, %class.sk_sp.2** %16, align 8
  %39 = icmp eq %class.sk_sp.2* %38, %34
  br i1 %39, label %60, label %40

40:                                               ; preds = %36, %56
  %41 = phi %class.sk_sp.2* [ %42, %56 ], [ %38, %36 ]
  %42 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %41, i64 -1
  %43 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %42, i64 0, i32 0
  %44 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %43, align 8
  %45 = icmp eq %"class.sksg::RenderNode"* %44, null
  br i1 %45, label %56, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %44, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 -1 acq_rel
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %50, label %56

50:                                               ; preds = %46
  %51 = bitcast %"class.sksg::RenderNode"* %44 to %class.SkRefCntBase*
  %52 = bitcast %"class.sksg::RenderNode"* %44 to void (%class.SkRefCntBase*)***
  %53 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %52, align 8
  %54 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, i64 2
  %55 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %54, align 8
  call void %55(%class.SkRefCntBase* nonnull %51) #12
  br label %56

56:                                               ; preds = %50, %46, %40
  %57 = icmp eq %class.sk_sp.2* %42, %34
  br i1 %57, label %58, label %40

58:                                               ; preds = %56
  %59 = load i8*, i8** %18, align 8
  br label %60

60:                                               ; preds = %58, %36
  %61 = phi i8* [ %59, %58 ], [ %37, %36 ]
  store %class.sk_sp.2* %34, %class.sk_sp.2** %16, align 8
  call void @_ZdlPv(i8* %61) #11
  %62 = getelementptr inbounds [1 x %class.sk_sp.2], [1 x %class.sk_sp.2]* %8, i64 0, i64 0, i32 0
  %63 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %62, align 8
  br label %64

64:                                               ; preds = %28, %60
  %65 = phi %"class.sksg::RenderNode"* [ %23, %28 ], [ %63, %60 ]
  %66 = icmp eq %"class.sksg::RenderNode"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %64
  %68 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %"class.sksg::RenderNode"* %65 to %class.SkRefCntBase*
  %73 = bitcast %"class.sksg::RenderNode"* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8
  call void %76(%class.SkRefCntBase* nonnull %72) #12
  br label %77

77:                                               ; preds = %64, %67, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #12
  %78 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal16MotionBlurEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %79 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 1
  %80 = getelementptr inbounds %class.sk_sp.4, %class.sk_sp.4* %1, i64 0, i32 0
  %81 = bitcast %class.sk_sp.4* %1 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %80, align 8
  %83 = bitcast %class.sk_sp.4* %79 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 2
  store i64 %3, i64* %84, align 8
  %85 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 3
  store float %4, float* %85, align 8
  %86 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 4
  store float %5, float* %86, align 4
  %87 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 5
  store float 0.000000e+00, float* %87, align 8
  %88 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 6
  store i64 0, i64* %88, align 8
  ret void
}

declare void @_ZN4sksg16CustomRenderNodeC2EONSt3__16vectorI5sk_spINS_10RenderNodeEENS1_9allocatorIS5_EEEE(%"class.sksg::CustomRenderNode"*, %"class.std::__1::vector.1"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.sksg::RenderNode"* @_ZNK7skottie8internal16MotionBlurEffect8onNodeAtERK7SkPoint(%"class.skottie::internal::MotionBlurEffect"* nocapture readnone, %struct.SkPoint* nocapture readnone dereferenceable(8)) unnamed_addr #4 align 2 {
  ret %"class.sksg::RenderNode"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK7skottie8internal16MotionBlurEffect12seekToSampleEmRK8SkMatrix(%"class.skottie::internal::MotionBlurEffect"* nocapture readonly, i64, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %4, align 8
  %6 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 5
  %7 = load float, float* %6, align 8
  %8 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 3
  %9 = load float, float* %8, align 8
  %10 = fadd float %7, %9
  %11 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 4
  %12 = load float, float* %11, align 4
  %13 = uitofp i64 %1 to float
  %14 = fmul float %12, %13
  %15 = fadd float %10, %14
  %16 = bitcast %"class.skottie::internal::Animator"* %5 to i1 (%"class.skottie::internal::Animator"*, float)***
  %17 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %17, i64 3
  %19 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.skottie::internal::Animator"* %5, float %15) #12
  %21 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %22 = bitcast %class.sk_sp.2** %21 to %"class.sksg::Node"***
  %23 = load %"class.sksg::Node"**, %"class.sksg::Node"*** %22, align 8
  %24 = load %"class.sksg::Node"*, %"class.sksg::Node"** %23, align 8
  %25 = tail call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %24, %"class.sksg::InvalidationController"* null, %class.SkMatrix* dereferenceable(40) %2) #12
  %26 = bitcast %struct.SkRect* %25 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 4
  %28 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %25, i64 0, i32 2
  %29 = bitcast float* %28 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4
  %31 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %27, 0
  %32 = insertvalue { <2 x float>, <2 x float> } %31, <2 x float> %30, 1
  ret { <2 x float>, <2 x float> } %32
}

declare dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"*, %"class.sksg::InvalidationController"*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZN7skottie8internal16MotionBlurEffect12onRevalidateEPN4sksg22InvalidationControllerERK8SkMatrix(%"class.skottie::internal::MotionBlurEffect"* nocapture, %"class.sksg::InvalidationController"* nocapture readnone, %class.SkMatrix* dereferenceable(40)) unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRect*
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %struct.SkRect*
  %8 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false)
  %9 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 6
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %3
  %14 = bitcast <2 x i64>* %6 to i8*
  %15 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 5
  %17 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 3
  %18 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 4
  %19 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %class.sk_sp.2** %19 to %"class.sksg::Node"***
  br label %31

21:                                               ; preds = %31
  %22 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %23 = load <2 x float>, <2 x float>* %22, align 8
  %24 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %25 = load <2 x float>, <2 x float>* %24, align 8
  br label %26

26:                                               ; preds = %21, %3
  %27 = phi <2 x float> [ %25, %21 ], [ zeroinitializer, %3 ]
  %28 = phi <2 x float> [ %23, %21 ], [ zeroinitializer, %3 ]
  %29 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %28, 0
  %30 = insertvalue { <2 x float>, <2 x float> } %29, <2 x float> %27, 1
  ret { <2 x float>, <2 x float> } %30

31:                                               ; preds = %13, %31
  %32 = phi i64 [ 0, %13 ], [ %58, %31 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #12
  %33 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %15, align 8
  %34 = load float, float* %16, align 8
  %35 = load float, float* %17, align 8
  %36 = fadd float %34, %35
  %37 = load float, float* %18, align 4
  %38 = uitofp i64 %32 to float
  %39 = fmul float %37, %38
  %40 = fadd float %36, %39
  %41 = bitcast %"class.skottie::internal::Animator"* %33 to i1 (%"class.skottie::internal::Animator"*, float)***
  %42 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %41, align 8
  %43 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %42, i64 3
  %44 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %43, align 8
  %45 = call zeroext i1 %44(%"class.skottie::internal::Animator"* %33, float %40) #12
  %46 = load %"class.sksg::Node"**, %"class.sksg::Node"*** %20, align 8
  %47 = load %"class.sksg::Node"*, %"class.sksg::Node"** %46, align 8
  %48 = call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %47, %"class.sksg::InvalidationController"* null, %class.SkMatrix* dereferenceable(40) %2) #12
  %49 = bitcast %struct.SkRect* %48 to <2 x i64>*
  %50 = load <2 x i64>, <2 x i64>* %49, align 4
  store <2 x i64> %50, <2 x i64>* %6, align 16
  call void @_ZN6SkRect4joinERKS_(%struct.SkRect* nonnull %5, %struct.SkRect* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #12
  %51 = load %class.sk_sp.2*, %class.sk_sp.2** %19, align 8
  %52 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %51, i64 0, i32 0
  %53 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %52, align 8
  %54 = call zeroext i1 @_ZNK4sksg10RenderNode9isVisibleEv(%"class.sksg::RenderNode"* %53) #12
  %55 = zext i1 %54 to i64
  %56 = load i64, i64* %9, align 8
  %57 = add i64 %56, %55
  store i64 %57, i64* %9, align 8
  %58 = add nuw i64 %32, 1
  %59 = load i64, i64* %10, align 8
  %60 = icmp ult i64 %58, %59
  br i1 %60, label %31, label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6SkRect4joinERKS_(%struct.SkRect*, %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

declare zeroext i1 @_ZNK4sksg10RenderNode9isVisibleEv(%"class.sksg::RenderNode"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal16MotionBlurEffect29renderToRaster8888Pow2SamplesEP8SkCanvasPKN4sksg10RenderNode13RenderContextE(%"class.skottie::internal::MotionBlurEffect"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) local_unnamed_addr #5 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__1::vector.28", align 8
  %8 = alloca %class.SkMatrix, align 4
  %9 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 6
  %10 = load i64, i64* %9, align 8
  %11 = trunc i64 %10 to i32
  %12 = add i32 %11, -1
  %13 = tail call i32 @llvm.ctlz.i32(i32 %12, i1 false) #12, !range !2
  %14 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %15 = load %class.sk_sp.2*, %class.sk_sp.2** %14, align 8
  %16 = icmp eq %class.SkCanvas* %1, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %3
  %18 = tail call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %1) #12
  br label %19

19:                                               ; preds = %3, %17
  %20 = phi i32 [ 0, %3 ], [ %18, %17 ]
  %21 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %22 = tail call i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas* %1, %struct.SkRect* %21, %class.SkPaint* null) #12
  %23 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #12
  %27 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  store i64 -6148914691236517206, i64* %6, align 8
  %28 = call i8* @_ZN8SkCanvas20accessTopLayerPixelsEP11SkImageInfoPmP8SkIPoint(%class.SkCanvas* %1, %struct.SkImageInfo* nonnull %5, i64* nonnull %6, %struct.SkIPoint* null) #12
  %29 = bitcast i8* %28 to i32*
  %30 = bitcast %"class.std::__1::vector.28"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %7, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %7, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %34 = load i32, i32* %25, align 8
  %35 = load i32, i32* %26, align 4
  %36 = mul nsw i32 %35, %34
  %37 = sext i32 %36 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 24, i1 false) #12
  %38 = icmp eq i32 %36, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %19
  %40 = icmp slt i32 %36, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::vector.28"* %7 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %42) #13
  unreachable

43:                                               ; preds = %39
  %44 = shl nsw i64 %37, 3
  %45 = call i8* @_Znwm(i64 %44) #11
  %46 = bitcast i8* %45 to i64*
  %47 = bitcast %"class.std::__1::vector.28"* %7 to i8**
  store i8* %45, i8** %47, align 8
  %48 = getelementptr inbounds i64, i64* %46, i64 %37
  store i64* %48, i64** %33, align 8
  %49 = bitcast i64** %32 to i64*
  %50 = ptrtoint i8* %45 to i64
  %51 = add nsw i64 %37, -1
  %52 = getelementptr i64, i64* %46, i64 %51
  %53 = ptrtoint i64* %52 to i64
  %54 = sub i64 8, %50
  %55 = add i64 %54, %53
  %56 = and i64 %55, -8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 %56, i1 false) #12
  %57 = ptrtoint i64* %48 to i64
  store i64 %57, i64* %49, align 8
  br label %58

58:                                               ; preds = %19, %43
  %59 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %76, label %62

62:                                               ; preds = %58
  %63 = bitcast %class.SkMatrix* %8 to i8*
  %64 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 5
  %66 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 3
  %67 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 4
  %68 = bitcast %class.sk_sp.2** %14 to %"class.sksg::Node"***
  %69 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %15, i64 0, i32 0
  %70 = bitcast { <2 x float>, <2 x float> }* %4 to %struct.SkRGBA4f*
  %71 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  %72 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %73 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  br label %87

74:                                               ; preds = %237
  %75 = load i32, i32* %26, align 4
  br label %76

76:                                               ; preds = %74, %58
  %77 = phi i32 [ %75, %74 ], [ %35, %58 ]
  %78 = icmp sgt i32 %77, 0
  br i1 %78, label %79, label %242

79:                                               ; preds = %76
  %80 = load i64*, i64** %31, align 8
  %81 = trunc i32 %13 to i16
  %82 = sub nsw i16 32, %81
  %83 = insertelement <16 x i16> undef, i16 %82, i32 0
  %84 = shufflevector <16 x i16> %83, <16 x i16> undef, <16 x i32> zeroinitializer
  %85 = insertelement <4 x i16> undef, i16 %82, i32 0
  %86 = shufflevector <4 x i16> %85, <4 x i16> undef, <4 x i32> zeroinitializer
  br label %261

87:                                               ; preds = %62, %237
  %88 = phi i64 [ 0, %62 ], [ %239, %237 ]
  %89 = phi i8 [ 0, %62 ], [ %238, %237 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %63) #12
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %8, %class.SkCanvas* %1) #12
  %90 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %64, align 8
  %91 = load float, float* %65, align 8
  %92 = load float, float* %66, align 8
  %93 = fadd float %91, %92
  %94 = load float, float* %67, align 4
  %95 = uitofp i64 %88 to float
  %96 = fmul float %94, %95
  %97 = fadd float %93, %96
  %98 = bitcast %"class.skottie::internal::Animator"* %90 to i1 (%"class.skottie::internal::Animator"*, float)***
  %99 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %98, align 8
  %100 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %99, i64 3
  %101 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %100, align 8
  %102 = call zeroext i1 %101(%"class.skottie::internal::Animator"* %90, float %97) #12
  %103 = load %"class.sksg::Node"**, %"class.sksg::Node"*** %68, align 8
  %104 = load %"class.sksg::Node"*, %"class.sksg::Node"** %103, align 8
  %105 = call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %104, %"class.sksg::InvalidationController"* null, %class.SkMatrix* nonnull dereferenceable(40) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %63) #12
  %106 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %69, align 8
  %107 = call zeroext i1 @_ZNK4sksg10RenderNode9isVisibleEv(%"class.sksg::RenderNode"* %106) #12
  br i1 %107, label %108, label %237

108:                                              ; preds = %87
  %109 = and i8 %89, 1
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %115, label %111

111:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #12
  %112 = call { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32 0) #12
  %113 = extractvalue { <2 x float>, <2 x float> } %112, 0
  store <2 x float> %113, <2 x float>* %72, align 8
  %114 = extractvalue { <2 x float>, <2 x float> } %112, 1
  store <2 x float> %114, <2 x float>* %73, align 8
  call void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas* %1, %struct.SkRGBA4f* nonnull dereferenceable(16) %70, i32 1) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #12
  br label %115

115:                                              ; preds = %108, %111
  %116 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %69, align 8
  call void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"* %116, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2) #12
  %117 = load i32, i32* %26, align 4
  %118 = icmp sgt i32 %117, 0
  br i1 %118, label %119, label %237

119:                                              ; preds = %115
  %120 = load i64*, i64** %31, align 8
  br label %121

121:                                              ; preds = %119, %229
  %122 = phi i32 [ %230, %229 ], [ %117, %119 ]
  %123 = phi i32 [ %235, %229 ], [ 0, %119 ]
  %124 = phi i64* [ %231, %229 ], [ %120, %119 ]
  %125 = phi i32* [ %234, %229 ], [ %29, %119 ]
  %126 = phi i8* [ %233, %229 ], [ %28, %119 ]
  %127 = load i32, i32* %25, align 8
  %128 = icmp sgt i32 %127, 3
  br i1 %128, label %129, label %160

129:                                              ; preds = %121
  %130 = add nsw i32 %127, -4
  %131 = and i32 %130, 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %149

133:                                              ; preds = %129
  %134 = bitcast i32* %125 to <8 x i8>*
  %135 = load <8 x i8>, <8 x i8>* %134, align 1
  %136 = getelementptr inbounds i32, i32* %125, i64 2
  %137 = bitcast i32* %136 to <8 x i8>*
  %138 = load <8 x i8>, <8 x i8>* %137, align 1
  %139 = shufflevector <8 x i8> %135, <8 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %140 = shufflevector <8 x i8> %138, <8 x i8> undef, <16 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %141 = shufflevector <16 x i8> %139, <16 x i8> %140, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %142 = bitcast i64* %124 to <16 x i16>*
  %143 = load <16 x i16>, <16 x i16>* %142, align 1
  %144 = zext <16 x i8> %141 to <16 x i16>
  %145 = add <16 x i16> %143, %144
  store <16 x i16> %145, <16 x i16>* %142, align 1
  %146 = getelementptr inbounds i32, i32* %125, i64 4
  %147 = getelementptr inbounds i64, i64* %124, i64 4
  %148 = add nsw i32 %127, -4
  br label %149

149:                                              ; preds = %133, %129
  %150 = phi i32 [ %148, %133 ], [ %127, %129 ]
  %151 = phi i64* [ %147, %133 ], [ %124, %129 ]
  %152 = phi i32* [ %146, %133 ], [ %125, %129 ]
  %153 = phi i32* [ %146, %133 ], [ undef, %129 ]
  %154 = phi i64* [ %147, %133 ], [ undef, %129 ]
  %155 = icmp ult i32 %130, 4
  br i1 %155, label %156, label %165

156:                                              ; preds = %165, %149
  %157 = phi i32* [ %153, %149 ], [ %195, %165 ]
  %158 = phi i64* [ %154, %149 ], [ %196, %165 ]
  %159 = and i32 %127, 3
  br label %160

160:                                              ; preds = %156, %121
  %161 = phi i32* [ %125, %121 ], [ %157, %156 ]
  %162 = phi i64* [ %124, %121 ], [ %158, %156 ]
  %163 = phi i32 [ %127, %121 ], [ %159, %156 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %229, label %199

165:                                              ; preds = %149, %165
  %166 = phi i32 [ %197, %165 ], [ %150, %149 ]
  %167 = phi i64* [ %196, %165 ], [ %151, %149 ]
  %168 = phi i32* [ %195, %165 ], [ %152, %149 ]
  %169 = bitcast i32* %168 to <8 x i8>*
  %170 = load <8 x i8>, <8 x i8>* %169, align 1
  %171 = getelementptr inbounds i32, i32* %168, i64 2
  %172 = bitcast i32* %171 to <8 x i8>*
  %173 = load <8 x i8>, <8 x i8>* %172, align 1
  %174 = shufflevector <8 x i8> %170, <8 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %175 = shufflevector <8 x i8> %173, <8 x i8> undef, <16 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %176 = shufflevector <16 x i8> %174, <16 x i8> %175, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %177 = bitcast i64* %167 to <16 x i16>*
  %178 = load <16 x i16>, <16 x i16>* %177, align 1
  %179 = zext <16 x i8> %176 to <16 x i16>
  %180 = add <16 x i16> %178, %179
  store <16 x i16> %180, <16 x i16>* %177, align 1
  %181 = getelementptr inbounds i32, i32* %168, i64 4
  %182 = getelementptr inbounds i64, i64* %167, i64 4
  %183 = bitcast i32* %181 to <8 x i8>*
  %184 = load <8 x i8>, <8 x i8>* %183, align 1
  %185 = getelementptr inbounds i32, i32* %168, i64 6
  %186 = bitcast i32* %185 to <8 x i8>*
  %187 = load <8 x i8>, <8 x i8>* %186, align 1
  %188 = shufflevector <8 x i8> %184, <8 x i8> undef, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %189 = shufflevector <8 x i8> %187, <8 x i8> undef, <16 x i32> <i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7>
  %190 = shufflevector <16 x i8> %188, <16 x i8> %189, <16 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %191 = bitcast i64* %182 to <16 x i16>*
  %192 = load <16 x i16>, <16 x i16>* %191, align 1
  %193 = zext <16 x i8> %190 to <16 x i16>
  %194 = add <16 x i16> %192, %193
  store <16 x i16> %194, <16 x i16>* %191, align 1
  %195 = getelementptr inbounds i32, i32* %168, i64 8
  %196 = getelementptr inbounds i64, i64* %167, i64 8
  %197 = add nsw i32 %166, -8
  %198 = icmp sgt i32 %197, 3
  br i1 %198, label %165, label %156

199:                                              ; preds = %160, %199
  %200 = phi i32 [ %225, %199 ], [ %163, %160 ]
  %201 = phi i64* [ %224, %199 ], [ %162, %160 ]
  %202 = phi i32* [ %223, %199 ], [ %161, %160 ]
  %203 = bitcast i32* %202 to <4 x i8>*
  %204 = load <4 x i8>, <4 x i8>* %203, align 1
  %205 = bitcast i64* %201 to <4 x i16>*
  %206 = load <4 x i16>, <4 x i16>* %205, align 1
  %207 = zext <4 x i8> %204 to <4 x i16>
  %208 = add <4 x i16> %206, %207
  %209 = extractelement <4 x i16> %208, i32 0
  %210 = extractelement <4 x i16> %208, i32 1
  %211 = extractelement <4 x i16> %208, i32 2
  %212 = extractelement <4 x i16> %208, i32 3
  %213 = zext i16 %212 to i64
  %214 = shl nuw i64 %213, 48
  %215 = zext i16 %211 to i64
  %216 = shl nuw nsw i64 %215, 32
  %217 = zext i16 %210 to i64
  %218 = shl nuw nsw i64 %217, 16
  %219 = zext i16 %209 to i64
  %220 = or i64 %218, %219
  %221 = or i64 %220, %216
  %222 = or i64 %221, %214
  store i64 %222, i64* %201, align 1
  %223 = getelementptr inbounds i32, i32* %202, i64 1
  %224 = getelementptr inbounds i64, i64* %201, i64 1
  %225 = add nsw i32 %200, -1
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %199

227:                                              ; preds = %199
  %228 = load i32, i32* %26, align 4
  br label %229

229:                                              ; preds = %227, %160
  %230 = phi i32 [ %122, %160 ], [ %228, %227 ]
  %231 = phi i64* [ %162, %160 ], [ %224, %227 ]
  %232 = load i64, i64* %6, align 8
  %233 = getelementptr inbounds i8, i8* %126, i64 %232
  %234 = bitcast i8* %233 to i32*
  %235 = add nuw nsw i32 %123, 1
  %236 = icmp slt i32 %235, %230
  br i1 %236, label %121, label %237

237:                                              ; preds = %229, %115, %87
  %238 = phi i8 [ %89, %87 ], [ 1, %115 ], [ 1, %229 ]
  %239 = add nuw i64 %88, 1
  %240 = load i64, i64* %59, align 8
  %241 = icmp ult i64 %239, %240
  br i1 %241, label %87, label %74

242:                                              ; preds = %365, %76
  %243 = load i64*, i64** %31, align 8
  %244 = icmp eq i64* %243, null
  br i1 %244, label %249, label %245

245:                                              ; preds = %242
  %246 = ptrtoint i64* %243 to i64
  %247 = bitcast i64** %32 to i64*
  store i64 %246, i64* %247, align 8
  %248 = bitcast i64* %243 to i8*
  call void @_ZdlPv(i8* %248) #11
  br label %249

249:                                              ; preds = %242, %245
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  %250 = load %class.SkColorSpace*, %class.SkColorSpace** %24, align 8
  %251 = icmp eq %class.SkColorSpace* %250, null
  br i1 %251, label %258, label %252

252:                                              ; preds = %249
  %253 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %250, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = atomicrmw add i32* %253, i32 -1 acq_rel
  %255 = icmp eq i32 %254, 1
  br i1 %255, label %256, label %258

256:                                              ; preds = %252
  %257 = bitcast %class.SkColorSpace* %250 to i8*
  call void @_ZdlPv(i8* %257) #11
  br label %258

258:                                              ; preds = %249, %252, %256
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  br i1 %16, label %260, label %259

259:                                              ; preds = %258
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %1, i32 %20) #12
  br label %260

260:                                              ; preds = %258, %259
  ret void

261:                                              ; preds = %79, %365
  %262 = phi i32 [ 0, %79 ], [ %370, %365 ]
  %263 = phi i32* [ %29, %79 ], [ %369, %365 ]
  %264 = phi i8* [ %28, %79 ], [ %368, %365 ]
  %265 = phi i64* [ %80, %79 ], [ %366, %365 ]
  %266 = load i32, i32* %25, align 8
  %267 = icmp sgt i32 %266, 3
  br i1 %267, label %268, label %300

268:                                              ; preds = %261
  %269 = add nsw i32 %266, -4
  %270 = lshr i32 %269, 2
  %271 = add nuw nsw i32 %270, 1
  %272 = and i32 %271, 3
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %289, label %274

274:                                              ; preds = %268, %274
  %275 = phi i32 [ %286, %274 ], [ %266, %268 ]
  %276 = phi i32* [ %285, %274 ], [ %263, %268 ]
  %277 = phi i64* [ %284, %274 ], [ %265, %268 ]
  %278 = phi i32 [ %287, %274 ], [ %272, %268 ]
  %279 = bitcast i64* %277 to <16 x i16>*
  %280 = load <16 x i16>, <16 x i16>* %279, align 1
  %281 = lshr <16 x i16> %280, %84
  %282 = trunc <16 x i16> %281 to <16 x i8>
  %283 = bitcast i32* %276 to <16 x i8>*
  store <16 x i8> %282, <16 x i8>* %283, align 1
  %284 = getelementptr inbounds i64, i64* %277, i64 4
  %285 = getelementptr inbounds i32, i32* %276, i64 4
  %286 = add nsw i32 %275, -4
  %287 = add i32 %278, -1
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %274, !llvm.loop !3

289:                                              ; preds = %274, %268
  %290 = phi i32 [ %266, %268 ], [ %286, %274 ]
  %291 = phi i32* [ %263, %268 ], [ %285, %274 ]
  %292 = phi i64* [ %265, %268 ], [ %284, %274 ]
  %293 = phi i64* [ undef, %268 ], [ %284, %274 ]
  %294 = phi i32* [ undef, %268 ], [ %285, %274 ]
  %295 = icmp ult i32 %269, 12
  br i1 %295, label %296, label %305

296:                                              ; preds = %305, %289
  %297 = phi i64* [ %293, %289 ], [ %335, %305 ]
  %298 = phi i32* [ %294, %289 ], [ %336, %305 ]
  %299 = and i32 %266, 3
  br label %300

300:                                              ; preds = %296, %261
  %301 = phi i64* [ %265, %261 ], [ %297, %296 ]
  %302 = phi i32* [ %263, %261 ], [ %298, %296 ]
  %303 = phi i32 [ %266, %261 ], [ %299, %296 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %365, label %339

305:                                              ; preds = %289, %305
  %306 = phi i32 [ %337, %305 ], [ %290, %289 ]
  %307 = phi i32* [ %336, %305 ], [ %291, %289 ]
  %308 = phi i64* [ %335, %305 ], [ %292, %289 ]
  %309 = bitcast i64* %308 to <16 x i16>*
  %310 = load <16 x i16>, <16 x i16>* %309, align 1
  %311 = lshr <16 x i16> %310, %84
  %312 = trunc <16 x i16> %311 to <16 x i8>
  %313 = bitcast i32* %307 to <16 x i8>*
  store <16 x i8> %312, <16 x i8>* %313, align 1
  %314 = getelementptr inbounds i64, i64* %308, i64 4
  %315 = getelementptr inbounds i32, i32* %307, i64 4
  %316 = bitcast i64* %314 to <16 x i16>*
  %317 = load <16 x i16>, <16 x i16>* %316, align 1
  %318 = lshr <16 x i16> %317, %84
  %319 = trunc <16 x i16> %318 to <16 x i8>
  %320 = bitcast i32* %315 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %320, align 1
  %321 = getelementptr inbounds i64, i64* %308, i64 8
  %322 = getelementptr inbounds i32, i32* %307, i64 8
  %323 = bitcast i64* %321 to <16 x i16>*
  %324 = load <16 x i16>, <16 x i16>* %323, align 1
  %325 = lshr <16 x i16> %324, %84
  %326 = trunc <16 x i16> %325 to <16 x i8>
  %327 = bitcast i32* %322 to <16 x i8>*
  store <16 x i8> %326, <16 x i8>* %327, align 1
  %328 = getelementptr inbounds i64, i64* %308, i64 12
  %329 = getelementptr inbounds i32, i32* %307, i64 12
  %330 = bitcast i64* %328 to <16 x i16>*
  %331 = load <16 x i16>, <16 x i16>* %330, align 1
  %332 = lshr <16 x i16> %331, %84
  %333 = trunc <16 x i16> %332 to <16 x i8>
  %334 = bitcast i32* %329 to <16 x i8>*
  store <16 x i8> %333, <16 x i8>* %334, align 1
  %335 = getelementptr inbounds i64, i64* %308, i64 16
  %336 = getelementptr inbounds i32, i32* %307, i64 16
  %337 = add nsw i32 %306, -16
  %338 = icmp sgt i32 %337, 3
  br i1 %338, label %305, label %296

339:                                              ; preds = %300, %339
  %340 = phi i32 [ %363, %339 ], [ %303, %300 ]
  %341 = phi i32* [ %362, %339 ], [ %302, %300 ]
  %342 = phi i64* [ %361, %339 ], [ %301, %300 ]
  %343 = bitcast i64* %342 to <4 x i16>*
  %344 = load <4 x i16>, <4 x i16>* %343, align 1
  %345 = lshr <4 x i16> %344, %86
  %346 = trunc <4 x i16> %345 to <4 x i8>
  %347 = extractelement <4 x i8> %346, i32 0
  %348 = extractelement <4 x i8> %346, i32 1
  %349 = extractelement <4 x i8> %346, i32 2
  %350 = extractelement <4 x i8> %346, i32 3
  %351 = zext i8 %350 to i32
  %352 = shl nuw i32 %351, 24
  %353 = zext i8 %349 to i32
  %354 = shl nuw nsw i32 %353, 16
  %355 = zext i8 %348 to i32
  %356 = shl nuw nsw i32 %355, 8
  %357 = zext i8 %347 to i32
  %358 = or i32 %356, %357
  %359 = or i32 %358, %354
  %360 = or i32 %359, %352
  store i32 %360, i32* %341, align 1
  %361 = getelementptr inbounds i64, i64* %342, i64 1
  %362 = getelementptr inbounds i32, i32* %341, i64 1
  %363 = add nsw i32 %340, -1
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %339

365:                                              ; preds = %339, %300
  %366 = phi i64* [ %301, %300 ], [ %361, %339 ]
  %367 = load i64, i64* %6, align 8
  %368 = getelementptr inbounds i8, i8* %264, i64 %367
  %369 = bitcast i8* %368 to i32*
  %370 = add nuw nsw i32 %262, 1
  %371 = load i32, i32* %26, align 4
  %372 = icmp slt i32 %370, %371
  br i1 %372, label %261, label %242
}

declare i8* @_ZN8SkCanvas20accessTopLayerPixelsEP11SkImageInfoPmP8SkIPoint(%class.SkCanvas*, %struct.SkImageInfo*, i64*, %struct.SkIPoint*) local_unnamed_addr #3

declare void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* sret, %class.SkCanvas*) local_unnamed_addr #3

declare void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal16MotionBlurEffect8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE(%"class.skottie::internal::MotionBlurEffect"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.44, align 8
  %5 = alloca %class.sk_sp.44, align 8
  %6 = alloca %class.SkPixmap, align 8
  %7 = alloca %struct.SkImageInfo, align 8
  %8 = alloca %struct.SkImageInfo, align 8
  %9 = alloca %"struct.SkCanvas::SaveLayerRec", align 8
  %10 = alloca %"class.sksg::RenderNode::ScopedRenderContext", align 16
  %11 = alloca %class.SkPaint, align 8
  %12 = alloca %class.SkMatrix, align 4
  %13 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 6
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %283, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %class.sk_sp.2*, %class.sk_sp.2** %17, align 8
  %19 = bitcast %"class.skottie::internal::MotionBlurEffect"* %0 to %"class.sksg::Node"*
  %20 = bitcast %class.sk_sp.44* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = getelementptr inbounds %class.sk_sp.2, %class.sk_sp.2* %18, i64 0, i32 0
  %22 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %21, align 8
  %23 = icmp eq %"class.sksg::RenderNode"* %22, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 1 monotonic
  br label %27

27:                                               ; preds = %24, %16
  %28 = bitcast %class.sk_sp.44* %4 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %22, %"class.sksg::RenderNode"** %28, align 8
  call void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"* %19, %class.sk_sp.44* nonnull dereferenceable(8) %4) #12
  %29 = getelementptr inbounds %class.sk_sp.44, %class.sk_sp.44* %4, i64 0, i32 0
  %30 = load %"class.sksg::Node"*, %"class.sksg::Node"** %29, align 8
  %31 = icmp eq %"class.sksg::Node"* %30, null
  br i1 %31, label %42, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %30, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %42

36:                                               ; preds = %32
  %37 = bitcast %"class.sksg::Node"* %30 to %class.SkRefCntBase*
  %38 = bitcast %"class.sksg::Node"* %30 to void (%class.SkRefCntBase*)***
  %39 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, i64 2
  %41 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %40, align 8
  call void %41(%class.SkRefCntBase* nonnull %37) #12
  br label %42

42:                                               ; preds = %27, %32, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  %43 = bitcast %class.SkPixmap* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 40, i1 false) #12
  %44 = call zeroext i1 @_ZN8SkCanvas10peekPixelsEP8SkPixmap(%class.SkCanvas* %1, %class.SkPixmap* nonnull %6) #12
  br i1 %44, label %45, label %88

45:                                               ; preds = %42
  %46 = bitcast %struct.SkImageInfo* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #12
  call void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* nonnull sret %7, %class.SkCanvas* %1) #12
  %47 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 4
  br i1 %49, label %59, label %50

50:                                               ; preds = %45
  %51 = bitcast %struct.SkImageInfo* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  call void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* nonnull sret %8, %class.SkCanvas* %1) #12
  %52 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 6
  br i1 %54, label %55, label %63

55:                                               ; preds = %50
  %56 = load i64, i64* %13, align 8
  %57 = call i64 @llvm.ctpop.i64(i64 %56) #12, !range !5
  %58 = icmp ult i64 %57, 2
  br label %63

59:                                               ; preds = %45
  %60 = load i64, i64* %13, align 8
  %61 = call i64 @llvm.ctpop.i64(i64 %60) #12, !range !5
  %62 = icmp ult i64 %61, 2
  br label %75

63:                                               ; preds = %50, %55
  %64 = phi i1 [ %58, %55 ], [ false, %50 ]
  %65 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %8, i64 0, i32 0, i32 0, i32 0
  %66 = load %class.SkColorSpace*, %class.SkColorSpace** %65, align 8
  %67 = icmp eq %class.SkColorSpace* %66, null
  br i1 %67, label %74, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = bitcast %class.SkColorSpace* %66 to i8*
  call void @_ZdlPv(i8* %73) #11
  br label %74

74:                                               ; preds = %63, %68, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  br label %75

75:                                               ; preds = %59, %74
  %76 = phi i1 [ %64, %74 ], [ %62, %59 ]
  %77 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %7, i64 0, i32 0, i32 0, i32 0
  %78 = load %class.SkColorSpace*, %class.SkColorSpace** %77, align 8
  %79 = icmp eq %class.SkColorSpace* %78, null
  br i1 %79, label %86, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = atomicrmw add i32* %81, i32 -1 acq_rel
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %84, label %86

84:                                               ; preds = %80
  %85 = bitcast %class.SkColorSpace* %78 to i8*
  call void @_ZdlPv(i8* %85) #11
  br label %86

86:                                               ; preds = %84, %80, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #12
  br i1 %76, label %87, label %88

87:                                               ; preds = %86
  call void @_ZNK7skottie8internal16MotionBlurEffect29renderToRaster8888Pow2SamplesEP8SkCanvasPKN4sksg10RenderNode13RenderContextE(%"class.skottie::internal::MotionBlurEffect"* %0, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2)
  br label %250

88:                                               ; preds = %42, %86
  %89 = icmp eq %class.SkCanvas* %1, null
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %1) #12
  br label %92

92:                                               ; preds = %88, %90
  %93 = phi i32 [ 0, %88 ], [ %91, %90 ]
  %94 = bitcast %"struct.SkCanvas::SaveLayerRec"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %94) #12
  %95 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %96 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %9, i64 0, i32 0
  store %struct.SkRect* %95, %struct.SkRect** %96, align 8
  %97 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %9, i64 0, i32 1
  %98 = getelementptr inbounds %"struct.SkCanvas::SaveLayerRec", %"struct.SkCanvas::SaveLayerRec"* %9, i64 0, i32 3
  %99 = bitcast %class.SkPaint** %97 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 16, i1 false)
  store i32 16, i32* %98, align 8
  %100 = call i32 @_ZN8SkCanvas9saveLayerERKNS_12SaveLayerRecE(%class.SkCanvas* %1, %"struct.SkCanvas::SaveLayerRec"* nonnull dereferenceable(32) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %94) #12
  %101 = load i64, i64* %13, align 8
  %102 = uitofp i64 %101 to float
  %103 = fdiv float 1.000000e+00, %102
  %104 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %104) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %104, i8* align 8 bitcast (%"class.sksg::RenderNode::ScopedRenderContext"* @__const._ZNK7skottie8internal16MotionBlurEffect8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.frame_ctx to i8*), i64 136, i1 false)
  call void @_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %10, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %2) #12
  %105 = bitcast %class.SkPaint* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %105) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %105, i8* align 8 bitcast (%class.SkPaint* @__const._ZNK7skottie8internal16MotionBlurEffect8onRenderEP8SkCanvasPKN4sksg10RenderNode13RenderContextE.frame_paint to i8*), i64 72, i1 false)
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %11) #12
  %106 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %10, i64 0, i32 1
  %107 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %10, i64 0, i32 1, i32 6
  %108 = load i32, i32* %107, align 4
  %109 = icmp ne i32 %108, 3
  br i1 %109, label %110, label %115

110:                                              ; preds = %92
  call void @_ZN7SkPaint9setAlphafEf(%class.SkPaint* nonnull %11, float %103) #12
  %111 = getelementptr inbounds %class.SkPaint, %class.SkPaint* %11, i64 0, i32 8, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, -261121
  %114 = or i32 %113, 12288
  store i32 %114, i32* %111, align 8
  br label %203

115:                                              ; preds = %92
  %116 = call dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext15modulateOpacityEf(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %10, float %103) #12
  %117 = call dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext17modulateBlendModeE11SkBlendMode(%"class.sksg::RenderNode::ScopedRenderContext"* %116, i32 12) #12
  %118 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %117, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %117 to <2 x i64>*
  %120 = load <2 x i64>, <2 x i64>* %119, align 8
  store %class.SkColorFilter* null, %class.SkColorFilter** %118, align 8
  %121 = getelementptr inbounds %"struct.sksg::RenderNode::RenderContext", %"struct.sksg::RenderNode::RenderContext"* %106, i64 0, i32 0, i32 0
  %122 = load %class.SkColorFilter*, %class.SkColorFilter** %121, align 8
  %123 = bitcast %"class.sksg::RenderNode::ScopedRenderContext"* %10 to <2 x i64>*
  store <2 x i64> %120, <2 x i64>* %123, align 16
  %124 = icmp eq %class.SkColorFilter* %122, null
  br i1 %124, label %135, label %125

125:                                              ; preds = %115
  %126 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %122, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = atomicrmw add i32* %126, i32 -1 acq_rel
  %128 = icmp eq i32 %127, 1
  br i1 %128, label %129, label %135

129:                                              ; preds = %125
  %130 = bitcast %class.SkColorFilter* %122 to %class.SkRefCntBase*
  %131 = bitcast %class.SkColorFilter* %122 to void (%class.SkRefCntBase*)***
  %132 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %131, align 8
  %133 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %132, i64 2
  %134 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %133, align 8
  call void %134(%class.SkRefCntBase* nonnull %130) #12
  br label %135

135:                                              ; preds = %129, %125, %115
  %136 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %10, i64 0, i32 1, i32 1
  %137 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %117, i64 0, i32 1, i32 1
  %138 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %137, i64 0, i32 0
  %139 = bitcast %class.sk_sp.17* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %class.SkShader* null, %class.SkShader** %138, align 8
  %141 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %136, i64 0, i32 0
  %142 = load %class.SkShader*, %class.SkShader** %141, align 8
  %143 = bitcast %class.sk_sp.17* %136 to i64*
  store i64 %140, i64* %143, align 8
  %144 = icmp eq %class.SkShader* %142, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %135
  %146 = getelementptr inbounds %class.SkShader, %class.SkShader* %142, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %class.SkShader* %142 to %class.SkRefCntBase*
  %151 = bitcast %class.SkShader* %142 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  call void %154(%class.SkRefCntBase* nonnull %150) #12
  br label %155

155:                                              ; preds = %149, %145, %135
  %156 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %10, i64 0, i32 1, i32 2
  %157 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %117, i64 0, i32 1, i32 2
  %158 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %157, i64 0, i32 0
  %159 = bitcast %class.sk_sp.17* %157 to i64*
  %160 = load i64, i64* %159, align 8
  store %class.SkShader* null, %class.SkShader** %158, align 8
  %161 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %156, i64 0, i32 0
  %162 = load %class.SkShader*, %class.SkShader** %161, align 8
  %163 = bitcast %class.sk_sp.17* %156 to i64*
  store i64 %160, i64* %163, align 8
  %164 = icmp eq %class.SkShader* %162, null
  br i1 %164, label %175, label %165

165:                                              ; preds = %155
  %166 = getelementptr inbounds %class.SkShader, %class.SkShader* %162, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %167 = atomicrmw add i32* %166, i32 -1 acq_rel
  %168 = icmp eq i32 %167, 1
  br i1 %168, label %169, label %175

169:                                              ; preds = %165
  %170 = bitcast %class.SkShader* %162 to %class.SkRefCntBase*
  %171 = bitcast %class.SkShader* %162 to void (%class.SkRefCntBase*)***
  %172 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %171, align 8
  %173 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %172, i64 2
  %174 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %173, align 8
  call void %174(%class.SkRefCntBase* nonnull %170) #12
  br label %175

175:                                              ; preds = %155, %165, %169
  %176 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %10, i64 0, i32 1, i32 3
  %177 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %117, i64 0, i32 1, i32 3
  %178 = bitcast %class.SkMatrix* %176 to i8*
  %179 = bitcast %class.SkMatrix* %177 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %179, i64 88, i1 false) #12
  %180 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %117, i64 0, i32 2
  %181 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %10, i64 0, i32 2
  %182 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %180, i64 0, i32 0
  %183 = bitcast %class.sk_sp.17* %180 to i64*
  %184 = load i64, i64* %183, align 8
  store %class.SkShader* null, %class.SkShader** %182, align 8
  %185 = getelementptr inbounds %class.sk_sp.17, %class.sk_sp.17* %181, i64 0, i32 0
  %186 = load %class.SkShader*, %class.SkShader** %185, align 8
  %187 = bitcast %class.sk_sp.17* %181 to i64*
  store i64 %184, i64* %187, align 8
  %188 = icmp eq %class.SkShader* %186, null
  br i1 %188, label %199, label %189

189:                                              ; preds = %175
  %190 = getelementptr inbounds %class.SkShader, %class.SkShader* %186, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = atomicrmw add i32* %190, i32 -1 acq_rel
  %192 = icmp eq i32 %191, 1
  br i1 %192, label %193, label %199

193:                                              ; preds = %189
  %194 = bitcast %class.SkShader* %186 to %class.SkRefCntBase*
  %195 = bitcast %class.SkShader* %186 to void (%class.SkRefCntBase*)***
  %196 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %195, align 8
  %197 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %196, i64 2
  %198 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %197, align 8
  call void %198(%class.SkRefCntBase* nonnull %194) #12
  br label %199

199:                                              ; preds = %175, %189, %193
  %200 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %117, i64 0, i32 3
  %201 = load i32, i32* %200, align 8
  %202 = getelementptr inbounds %"class.sksg::RenderNode::ScopedRenderContext", %"class.sksg::RenderNode::ScopedRenderContext"* %10, i64 0, i32 3
  store i32 %201, i32* %202, align 16
  store i32 -1, i32* %200, align 8
  br label %203

203:                                              ; preds = %199, %110
  %204 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 2
  %205 = load i64, i64* %204, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %214, label %207

207:                                              ; preds = %203
  %208 = bitcast %class.SkMatrix* %12 to i8*
  %209 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 1, i32 0
  %210 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 5
  %211 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 3
  %212 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 4
  %213 = bitcast %class.sk_sp.2** %17 to %"class.sksg::Node"***
  br label %216

214:                                              ; preds = %246, %203
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %105) #12
  call void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %104) #12
  br i1 %89, label %250, label %215

215:                                              ; preds = %214
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %1, i32 %93) #12
  br label %250

216:                                              ; preds = %207, %246
  %217 = phi i64 [ 0, %207 ], [ %247, %246 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %208) #12
  call void @_ZNK8SkCanvas14getTotalMatrixEv(%class.SkMatrix* nonnull sret %12, %class.SkCanvas* %1) #12
  %218 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %209, align 8
  %219 = load float, float* %210, align 8
  %220 = load float, float* %211, align 8
  %221 = fadd float %219, %220
  %222 = load float, float* %212, align 4
  %223 = uitofp i64 %217 to float
  %224 = fmul float %222, %223
  %225 = fadd float %221, %224
  %226 = bitcast %"class.skottie::internal::Animator"* %218 to i1 (%"class.skottie::internal::Animator"*, float)***
  %227 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %226, align 8
  %228 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %227, i64 3
  %229 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %228, align 8
  %230 = call zeroext i1 %229(%"class.skottie::internal::Animator"* %218, float %225) #12
  %231 = load %"class.sksg::Node"**, %"class.sksg::Node"*** %213, align 8
  %232 = load %"class.sksg::Node"*, %"class.sksg::Node"** %231, align 8
  %233 = call dereferenceable(16) %struct.SkRect* @_ZN4sksg4Node10revalidateEPNS_22InvalidationControllerERK8SkMatrix(%"class.sksg::Node"* %232, %"class.sksg::InvalidationController"* null, %class.SkMatrix* nonnull dereferenceable(40) %12) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %208) #12
  %234 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %21, align 8
  %235 = call zeroext i1 @_ZNK4sksg10RenderNode9isVisibleEv(%"class.sksg::RenderNode"* %234) #12
  br i1 %235, label %236, label %246

236:                                              ; preds = %216
  br i1 %89, label %239, label %237

237:                                              ; preds = %236
  %238 = call i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas* nonnull %1) #12
  br label %239

239:                                              ; preds = %236, %237
  %240 = phi i32 [ 0, %236 ], [ %238, %237 ]
  br i1 %109, label %241, label %243

241:                                              ; preds = %239
  %242 = call i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas* %1, %struct.SkRect* null, %class.SkPaint* nonnull %11) #12
  br label %243

243:                                              ; preds = %241, %239
  %244 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %21, align 8
  call void @_ZNK4sksg10RenderNode6renderEP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode"* %244, %class.SkCanvas* %1, %"struct.sksg::RenderNode::RenderContext"* %106) #12
  br i1 %89, label %246, label %245

245:                                              ; preds = %243
  call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* nonnull %1, i32 %240) #12
  br label %246

246:                                              ; preds = %245, %243, %216
  %247 = add nuw i64 %217, 1
  %248 = load i64, i64* %204, align 8
  %249 = icmp ult i64 %247, %248
  br i1 %249, label %216, label %214

250:                                              ; preds = %215, %214, %87
  %251 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %252 = load %class.SkColorSpace*, %class.SkColorSpace** %251, align 8
  %253 = icmp eq %class.SkColorSpace* %252, null
  br i1 %253, label %260, label %254

254:                                              ; preds = %250
  %255 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %252, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = atomicrmw add i32* %255, i32 -1 acq_rel
  %257 = icmp eq i32 %256, 1
  br i1 %257, label %258, label %260

258:                                              ; preds = %254
  %259 = bitcast %class.SkColorSpace* %252 to i8*
  call void @_ZdlPv(i8* %259) #11
  br label %260

260:                                              ; preds = %250, %254, %258
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #12
  %261 = bitcast %class.sk_sp.44* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261) #12
  %262 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %21, align 8
  %263 = icmp eq %"class.sksg::RenderNode"* %262, null
  br i1 %263, label %267, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %262, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = atomicrmw add i32* %265, i32 1 monotonic
  br label %267

267:                                              ; preds = %264, %260
  %268 = bitcast %class.sk_sp.44* %5 to %"class.sksg::RenderNode"**
  store %"class.sksg::RenderNode"* %262, %"class.sksg::RenderNode"** %268, align 8
  call void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"* %19, %class.sk_sp.44* nonnull dereferenceable(8) %5) #12
  %269 = getelementptr inbounds %class.sk_sp.44, %class.sk_sp.44* %5, i64 0, i32 0
  %270 = load %"class.sksg::Node"*, %"class.sksg::Node"** %269, align 8
  %271 = icmp eq %"class.sksg::Node"* %270, null
  br i1 %271, label %282, label %272

272:                                              ; preds = %267
  %273 = getelementptr inbounds %"class.sksg::Node", %"class.sksg::Node"* %270, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %274 = atomicrmw add i32* %273, i32 -1 acq_rel
  %275 = icmp eq i32 %274, 1
  br i1 %275, label %276, label %282

276:                                              ; preds = %272
  %277 = bitcast %"class.sksg::Node"* %270 to %class.SkRefCntBase*
  %278 = bitcast %"class.sksg::Node"* %270 to void (%class.SkRefCntBase*)***
  %279 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %278, align 8
  %280 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %279, i64 2
  %281 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %280, align 8
  call void %281(%class.SkRefCntBase* nonnull %277) #12
  br label %282

282:                                              ; preds = %267, %272, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261) #12
  br label %283

283:                                              ; preds = %3, %282
  ret void
}

declare zeroext i1 @_ZN8SkCanvas10peekPixelsEP8SkPixmap(%class.SkCanvas*, %class.SkPixmap*) local_unnamed_addr #3

declare void @_ZNK8SkCanvas9imageInfoEv(%struct.SkImageInfo* sret, %class.SkCanvas*) local_unnamed_addr #3

declare i32 @_ZN8SkCanvas9saveLayerERKNS_12SaveLayerRecE(%class.SkCanvas*, %"struct.SkCanvas::SaveLayerRec"* dereferenceable(32)) local_unnamed_addr #3

declare void @_ZN4sksg10RenderNode19ScopedRenderContextC1EP8SkCanvasPKNS0_13RenderContextE(%"class.sksg::RenderNode::ScopedRenderContext"*, %class.SkCanvas*, %"struct.sksg::RenderNode::RenderContext"*) unnamed_addr #3

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #3

declare void @_ZN7SkPaint9setAlphafEf(%class.SkPaint*, float) local_unnamed_addr #3

declare dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext15modulateOpacityEf(%"class.sksg::RenderNode::ScopedRenderContext"*, float) local_unnamed_addr #3

declare dereferenceable(136) %"class.sksg::RenderNode::ScopedRenderContext"* @_ZN4sksg10RenderNode19ScopedRenderContext17modulateBlendModeE11SkBlendMode(%"class.sksg::RenderNode::ScopedRenderContext"*, i32) local_unnamed_addr #3

declare i32 @_ZN8SkCanvas9saveLayerEPK6SkRectPK7SkPaint(%class.SkCanvas*, %struct.SkRect*, %class.SkPaint*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4sksg10RenderNode19ScopedRenderContextD1Ev(%"class.sksg::RenderNode::ScopedRenderContext"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7skottie8internal16MotionBlurEffectD2Ev(%"class.skottie::internal::MotionBlurEffect"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal16MotionBlurEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %3, align 8
  %5 = icmp eq %"class.skottie::internal::Animator"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.skottie::internal::Animator"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.skottie::internal::Animator"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #12
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0
  tail call void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"* %17) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN7skottie8internal16MotionBlurEffectD0Ev(%"class.skottie::internal::MotionBlurEffect"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN7skottie8internal16MotionBlurEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %3, align 8
  %5 = icmp eq %"class.skottie::internal::Animator"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %"class.skottie::internal::Animator"* %4 to %class.SkRefCntBase*
  %12 = bitcast %"class.skottie::internal::Animator"* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #12
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.skottie::internal::MotionBlurEffect", %"class.skottie::internal::MotionBlurEffect"* %0, i64 0, i32 0
  tail call void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"* %17) #12
  %18 = bitcast %"class.skottie::internal::MotionBlurEffect"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #12
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

declare i32 @_ZNK8SkCanvas12getSaveCountEv(%class.SkCanvas*) local_unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZN8SkRGBA4fIL11SkAlphaType3EE9FromColorEj(i32) local_unnamed_addr #3

declare void @_ZN8SkCanvas9drawColorERK8SkRGBA4fIL11SkAlphaType3EE11SkBlendMode(%class.SkCanvas*, %struct.SkRGBA4f* dereferenceable(16), i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #3

declare void @_ZN4sksg4Node14unobserveInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.44* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN4sksg4Node12observeInvalERK5sk_spIS0_E(%"class.sksg::Node"*, %class.sk_sp.44* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4sksg16CustomRenderNodeD2Ev(%"class.sksg::CustomRenderNode"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="256" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 0, i32 33}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{i64 0, i64 65}
