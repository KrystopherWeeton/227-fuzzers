; ModuleID = '../../third_party/blink/renderer/core/svg/svg_path.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_path.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.28", i32, [4 x i8], %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.164", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.192", %"class.std::__1::unique_ptr.198", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.15", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.107", %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.144", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.64" = type { %"struct.std::__1::__atomic_base.65" }
%"struct.std::__1::__atomic_base.65" = type { %"struct.std::__1::__atomic_base.66" }
%"struct.std::__1::__atomic_base.66" = type { %"struct.std::__1::__cxx_atomic_impl.67" }
%"struct.std::__1::__cxx_atomic_impl.67" = type { %"struct.std::__1::__cxx_atomic_base_impl.68" }
%"struct.std::__1::__cxx_atomic_base_impl.68" = type { i64 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::Worklist.103"* }
%"class.blink::Worklist.103" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.blink::Worklist.110"* }
%"class.blink::Worklist.110" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::Worklist.117"* }
%"class.blink::Worklist.117" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.64" }
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.124", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", %"class.std::__1::__compressed_pair.138", [4 x i8] }>
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126", %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { i64 }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { float }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.147", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.147" = type { %"class.std::__1::__compressed_pair.148" }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.156" }
%"class.WTF::Vector.156" = type { %"class.WTF::VectorBuffer.157" }
%"class.WTF::VectorBuffer.157" = type { %"class.WTF::VectorBufferBase.158" }
%"class.WTF::VectorBufferBase.158" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.172" }
%"class.WTF::VectorBuffer.172" = type { %"class.WTF::VectorBufferBase.173" }
%"class.WTF::VectorBufferBase.173" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.186" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.82"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.89"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.96"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.103"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.205" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.204 }
%class.scoped_refptr.204 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::SVGPath" = type { %"class.blink::SVGPropertyBase", %"class.blink::Member" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::cssvalue::CSSPathValue"* }
%"class.blink::cssvalue::CSSPathValue" = type <{ %"class.blink::CSSValue", [5 x i8], %class.scoped_refptr, i32, [4 x i8] }>
%"class.blink::CSSValue" = type { i8, i8, i8 }
%class.scoped_refptr = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.3", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.9", %"struct.std::__1::atomic.9", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.7, %class.SkTDArray.8, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.7 = type { i8*, i32, i32 }
%class.SkTDArray.8 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.14 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.9" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.14 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.15", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"class.WTF::String" = type { %class.scoped_refptr.22 }
%class.scoped_refptr.22 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::SVGElement" = type opaque
%"class.blink::SVGPathByteStreamBuilder" = type { %"class.blink::SVGPathConsumer", %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathConsumer" = type { i32 (...)** }
%"class.blink::SVGPathByteStreamSource" = type { i8*, i8* }
%"class.blink::SVGPathBlender" = type { %"class.blink::SVGPathByteStreamSource"*, %"class.blink::SVGPathByteStreamSource"*, %"class.blink::SVGPathConsumer"* }
%"struct.blink::SMILAnimationEffectParameters" = type { i8, i8, i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNK5blink7SVGPath7GetTypeEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue12CSSPathValueEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8cssvalue12CSSPathValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink7SVGPathE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::SVGPath"*)* @_ZN5blink7SVGPathD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGPath"*)* @_ZN5blink7SVGPathD0Ev to i8*), i8* bitcast (%"class.blink::SVGPropertyBase"* (%"class.blink::SVGPath"*, %"class.WTF::String"*)* @_ZNK5blink7SVGPath17CloneForAnimationERKN3WTF6StringE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGPath"*)* @_ZNK5blink7SVGPath13ValueAsStringEv to i8*), i8* bitcast (void (%"class.blink::SVGPath"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZN5blink7SVGPath3AddEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE to i8*), i8* bitcast (void (%"class.blink::SVGPath"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZN5blink7SVGPath22CalculateAnimatedValueERKNS_29SMILAnimationEffectParametersEfjPKNS_15SVGPropertyBaseES6_S6_PKNS_10SVGElementE to i8*), i8* bitcast (float (%"class.blink::SVGPath"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)* @_ZNK5blink7SVGPath17CalculateDistanceEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE to i8*), i8* bitcast (i32 (%"class.blink::SVGPath"*)* @_ZNK5blink7SVGPath7GetTypeEv to i8*), i8* bitcast (void (%"class.blink::SVGPath"*, %"class.blink::Visitor"*)* @_ZNK5blink7SVGPath5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGPropertyBase]\00", align 1
@.str = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.2 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.3 = private unnamed_addr constant [16 x i8] c"blink::CSSValue\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink7SVGPathC1Ev = hidden unnamed_addr alias void (%"class.blink::SVGPath"*), void (%"class.blink::SVGPath"*)* @_ZN5blink7SVGPathC2Ev
@_ZN5blink7SVGPathC1ERKNS_8cssvalue12CSSPathValueE = hidden unnamed_addr alias void (%"class.blink::SVGPath"*, %"class.blink::cssvalue::CSSPathValue"*), void (%"class.blink::SVGPath"*, %"class.blink::cssvalue::CSSPathValue"*)* @_ZN5blink7SVGPathC2ERKNS_8cssvalue12CSSPathValueE
@_ZN5blink7SVGPathD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGPath"*), void (%"class.blink::SVGPath"*)* @_ZN5blink7SVGPathD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7SVGPathC2Ev(%"class.blink::SVGPath"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink7SVGPathE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = tail call dereferenceable(24) %"class.blink::cssvalue::CSSPathValue"* @_ZN5blink8cssvalue12CSSPathValue14EmptyPathValueEv() #8
  %4 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::cssvalue::CSSPathValue"* %3, %"class.blink::cssvalue::CSSPathValue"** %4, align 8
  ret void
}

declare dereferenceable(24) %"class.blink::cssvalue::CSSPathValue"* @_ZN5blink8cssvalue12CSSPathValue14EmptyPathValueEv() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink7SVGPathC2ERKNS_8cssvalue12CSSPathValueE(%"class.blink::SVGPath"* nocapture, %"class.blink::cssvalue::CSSPathValue"* dereferenceable(24)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink7SVGPathE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::cssvalue::CSSPathValue"* %1, %"class.blink::cssvalue::CSSPathValue"** %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink7SVGPathD2Ev(%"class.blink::SVGPath"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink7SVGPathD0Ev(%"class.blink::SVGPath"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink7SVGPath13ValueAsStringEv(%"class.blink::SVGPath"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::cssvalue::CSSPathValue"*, %"class.blink::cssvalue::CSSPathValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::cssvalue::CSSPathValue", %"class.blink::cssvalue::CSSPathValue"* %3, i64 0, i32 2, i32 0
  %5 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %6, align 8
  %8 = tail call %"class.WTF::StringImpl"* @_ZN5blink25BuildStringFromByteStreamERKNS_17SVGPathByteStreamENS_23PathSerializationFormatE(%"class.blink::SVGPathByteStream"* dereferenceable(16) %7, i32 0) #8
  ret %"class.WTF::StringImpl"* %8
}

declare %"class.WTF::StringImpl"* @_ZN5blink25BuildStringFromByteStreamERKNS_17SVGPathByteStreamENS_23PathSerializationFormatE(%"class.blink::SVGPathByteStream"* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPath"* @_ZNK5blink7SVGPath5CloneEv(%"class.blink::SVGPath"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = bitcast %"class.blink::cssvalue::CSSPathValue"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 16) #8
  %6 = bitcast i8* %5 to %"class.blink::SVGPath"*
  %7 = bitcast i8* %5 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink7SVGPathE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 8
  %9 = bitcast i8* %8 to i64*
  store i64 %4, i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %5, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  ret %"class.blink::SVGPath"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink7SVGPath16SetValueAsStringERKN3WTF6StringE(%"class.blink::SVGPath"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = tail call noalias i8* @malloc(i64 16) #8
  %5 = bitcast i8* %4 to %"class.blink::SVGPathByteStream"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #8
  %6 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %12, i64* %13, align 8
  br label %21

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  br label %21

21:                                               ; preds = %10, %14
  %22 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = call i32 @_ZN5blink25BuildByteStreamFromStringERKN3WTF10StringViewERNS_17SVGPathByteStreamE(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.blink::SVGPathByteStream"* dereferenceable(16) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  %25 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue12CSSPathValueEEEPvm(i64 24) #8
  %26 = bitcast i8* %25 to %"class.blink::cssvalue::CSSPathValue"*
  call void @_ZN5blink8cssvalue12CSSPathValueC1ENSt3__110unique_ptrINS_17SVGPathByteStreamENS2_14default_deleteIS4_EEEENS_8WindRuleENS_23PathSerializationFormatE(%"class.blink::cssvalue::CSSPathValue"* %26, %"class.blink::SVGPathByteStream"* %5, i32 0, i32 0) #8
  %27 = getelementptr inbounds i8, i8* %25, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  %31 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 1
  %32 = ptrtoint i8* %25 to i64
  %33 = bitcast %"class.blink::Member"* %31 to i64*
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %21
  %37 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %25) #8
  br label %38

38:                                               ; preds = %36, %21
  ret i32 %24
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i32 @_ZN5blink25BuildByteStreamFromStringERKN3WTF10StringViewERNS_17SVGPathByteStreamE(%"class.WTF::StringView"* dereferenceable(24), %"class.blink::SVGPathByteStream"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPropertyBase"* @_ZNK5blink7SVGPath17CloneForAnimationERKN3WTF6StringE(%"class.blink::SVGPath"* nocapture readnone, %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = tail call noalias i8* @malloc(i64 16) #8
  %5 = bitcast i8* %4 to %"class.blink::SVGPathByteStream"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false) #8
  %6 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %12, i64* %13, align 8
  br label %21

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  br label %21

21:                                               ; preds = %14, %10
  %22 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = call i32 @_ZN5blink25BuildByteStreamFromStringERKN3WTF10StringViewERNS_17SVGPathByteStreamE(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.blink::SVGPathByteStream"* dereferenceable(16) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  %25 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue12CSSPathValueEEEPvm(i64 24) #8
  %26 = bitcast i8* %25 to %"class.blink::cssvalue::CSSPathValue"*
  call void @_ZN5blink8cssvalue12CSSPathValueC1ENSt3__110unique_ptrINS_17SVGPathByteStreamENS2_14default_deleteIS4_EEEENS_8WindRuleENS_23PathSerializationFormatE(%"class.blink::cssvalue::CSSPathValue"* %26, %"class.blink::SVGPathByteStream"* %5, i32 0, i32 0) #8
  %27 = getelementptr inbounds i8, i8* %25, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  %31 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 16) #8
  %32 = bitcast i8* %31 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink7SVGPathE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %33 = getelementptr inbounds i8, i8* %31, i64 8
  %34 = bitcast i8* %33 to i8**
  store i8* %25, i8** %34, align 8
  %35 = getelementptr inbounds i8, i8* %31, i64 -4
  %36 = bitcast i8* %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = or i16 %37, 1
  store atomic i16 %38, i16* %36 release, align 2
  %39 = bitcast i8* %31 to %"class.blink::SVGPropertyBase"*
  ret %"class.blink::SVGPropertyBase"* %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7SVGPath3AddEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE(%"class.blink::SVGPath"* nocapture, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::SVGPathByteStreamBuilder", align 8
  %5 = alloca %"class.blink::SVGPathByteStreamSource", align 8
  %6 = alloca %"class.blink::SVGPathByteStreamSource", align 8
  %7 = alloca %"class.blink::SVGPathBlender", align 8
  %8 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %1, i64 1
  %9 = bitcast %"class.blink::SVGPropertyBase"* %8 to %"class.blink::cssvalue::CSSPathValue"**
  %10 = load %"class.blink::cssvalue::CSSPathValue"*, %"class.blink::cssvalue::CSSPathValue"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::cssvalue::CSSPathValue", %"class.blink::cssvalue::CSSPathValue"* %10, i64 0, i32 2, i32 0
  %12 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %12, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::cssvalue::CSSPathValue"*, %"class.blink::cssvalue::CSSPathValue"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::cssvalue::CSSPathValue", %"class.blink::cssvalue::CSSPathValue"* %16, i64 0, i32 2, i32 0
  %18 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %18, i64 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %20, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %14, i64 0, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp ne i32 %22, %24
  %26 = icmp eq i32 %22, 0
  %27 = or i1 %26, %25
  %28 = icmp eq i32 %24, 0
  %29 = or i1 %28, %27
  br i1 %29, label %68, label %30

30:                                               ; preds = %3
  %31 = tail call noalias i8* @malloc(i64 16) #8
  %32 = bitcast i8* %31 to %"class.blink::SVGPathByteStream"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #8
  %33 = bitcast %"class.blink::SVGPathByteStreamBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false) #8
  call void @_ZN5blink24SVGPathByteStreamBuilderC1ERNS_17SVGPathByteStreamE(%"class.blink::SVGPathByteStreamBuilder"* nonnull %4, %"class.blink::SVGPathByteStream"* dereferenceable(16) %32) #8
  %34 = bitcast %"class.blink::SVGPathByteStreamSource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #8
  %35 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %5, i64 0, i32 1
  %36 = bitcast %"class.blink::SVGPathByteStream"* %20 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast %"class.blink::SVGPathByteStreamSource"* %5 to i64*
  store i64 %37, i64* %38, align 8
  %39 = inttoptr i64 %37 to i8*
  %40 = load i32, i32* %21, align 4
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds i8, i8* %39, i64 %41
  store i8* %42, i8** %35, align 8
  %43 = bitcast %"class.blink::SVGPathByteStreamSource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #8
  %44 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %6, i64 0, i32 1
  %45 = bitcast %"class.blink::SVGPathByteStream"* %14 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::SVGPathByteStreamSource"* %6 to i64*
  store i64 %46, i64* %47, align 8
  %48 = inttoptr i64 %46 to i8*
  %49 = load i32, i32* %23, align 4
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds i8, i8* %48, i64 %50
  store i8* %51, i8** %44, align 8
  %52 = bitcast %"class.blink::SVGPathBlender"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #8
  %53 = getelementptr inbounds %"class.blink::SVGPathByteStreamBuilder", %"class.blink::SVGPathByteStreamBuilder"* %4, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 24, i1 false) #8
  call void @_ZN5blink14SVGPathBlenderC1EPNS_23SVGPathByteStreamSourceES2_PNS_15SVGPathConsumerE(%"class.blink::SVGPathBlender"* nonnull %7, %"class.blink::SVGPathByteStreamSource"* nonnull %5, %"class.blink::SVGPathByteStreamSource"* nonnull %6, %"class.blink::SVGPathConsumer"* nonnull %53) #8
  %54 = call zeroext i1 @_ZN5blink14SVGPathBlender15AddAnimatedPathEj(%"class.blink::SVGPathBlender"* nonnull %7, i32 1) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #8
  %55 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue12CSSPathValueEEEPvm(i64 24) #8
  %56 = bitcast i8* %55 to %"class.blink::cssvalue::CSSPathValue"*
  call void @_ZN5blink8cssvalue12CSSPathValueC1ENSt3__110unique_ptrINS_17SVGPathByteStreamENS2_14default_deleteIS4_EEEENS_8WindRuleENS_23PathSerializationFormatE(%"class.blink::cssvalue::CSSPathValue"* %56, %"class.blink::SVGPathByteStream"* %32, i32 0, i32 0) #8
  %57 = getelementptr inbounds i8, i8* %55, i64 -4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 monotonic, align 2
  %60 = or i16 %59, 1
  store atomic i16 %60, i16* %58 release, align 2
  %61 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 1
  %62 = ptrtoint i8* %55 to i64
  %63 = bitcast %"class.blink::Member"* %61 to i64*
  store atomic i64 %62, i64* %63 monotonic, align 8
  %64 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %30
  %67 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %55) #8
  br label %68

68:                                               ; preds = %3, %30, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink7SVGPath22CalculateAnimatedValueERKNS_29SMILAnimationEffectParametersEfjPKNS_15SVGPropertyBaseES6_S6_PKNS_10SVGElementE(%"class.blink::SVGPath"* nocapture, %"struct.blink::SMILAnimationEffectParameters"* nocapture readonly dereferenceable(3), float, i32, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGPropertyBase"* nocapture readonly, %"class.blink::SVGElement"* nocapture readnone) unnamed_addr #0 align 2 {
  %9 = alloca %"class.blink::SVGPathByteStreamBuilder", align 8
  %10 = alloca %"class.blink::SVGPathByteStreamSource", align 8
  %11 = alloca %"class.blink::SVGPathByteStreamSource", align 8
  %12 = alloca %"class.blink::SVGPathBlender", align 8
  %13 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %5, i64 1
  %14 = bitcast %"class.blink::SVGPropertyBase"* %13 to %"class.blink::cssvalue::CSSPathValue"**
  %15 = load %"class.blink::cssvalue::CSSPathValue"*, %"class.blink::cssvalue::CSSPathValue"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::cssvalue::CSSPathValue", %"class.blink::cssvalue::CSSPathValue"* %15, i64 0, i32 2, i32 0
  %17 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %19, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %119, label %23

23:                                               ; preds = %8
  %24 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %4, i64 1
  %25 = bitcast %"class.blink::SVGPropertyBase"* %24 to %"class.blink::cssvalue::CSSPathValue"**
  %26 = load %"class.blink::cssvalue::CSSPathValue"*, %"class.blink::cssvalue::CSSPathValue"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::cssvalue::CSSPathValue", %"class.blink::cssvalue::CSSPathValue"* %26, i64 0, i32 2, i32 0
  %28 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %28, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %30, i64 0, i32 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %21
  %34 = icmp eq i32 %32, 0
  %35 = or i1 %33, %34
  br i1 %35, label %47, label %36

36:                                               ; preds = %23
  %37 = fcmp olt float %2, 5.000000e-01
  %38 = select i1 %37, %"class.blink::cssvalue::CSSPathValue"* %26, %"class.blink::cssvalue::CSSPathValue"* %15
  %39 = ptrtoint %"class.blink::cssvalue::CSSPathValue"* %38 to i64
  %40 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 1
  %41 = bitcast %"class.blink::Member"* %40 to i64*
  store atomic i64 %39, i64* %41 monotonic, align 8
  %42 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %119, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::cssvalue::CSSPathValue", %"class.blink::cssvalue::CSSPathValue"* %38, i64 0, i32 0, i32 0
  %46 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #8
  br label %119

47:                                               ; preds = %23
  %48 = tail call noalias i8* @malloc(i64 16) #8
  %49 = bitcast i8* %48 to %"class.blink::SVGPathByteStream"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #8
  %50 = bitcast %"class.blink::SVGPathByteStreamBuilder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false) #8
  call void @_ZN5blink24SVGPathByteStreamBuilderC1ERNS_17SVGPathByteStreamE(%"class.blink::SVGPathByteStreamBuilder"* nonnull %9, %"class.blink::SVGPathByteStream"* dereferenceable(16) %49) #8
  %51 = bitcast %"class.blink::SVGPathByteStreamSource"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #8
  %52 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %10, i64 0, i32 1
  %53 = bitcast %"class.blink::SVGPathByteStream"* %30 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.blink::SVGPathByteStreamSource"* %10 to i64*
  store i64 %54, i64* %55, align 8
  %56 = inttoptr i64 %54 to i8*
  %57 = load i32, i32* %31, align 4
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %56, i64 %58
  store i8* %59, i8** %52, align 8
  %60 = bitcast %"class.blink::SVGPathByteStreamSource"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #8
  %61 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %11, i64 0, i32 1
  %62 = bitcast %"class.blink::SVGPathByteStream"* %19 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.blink::SVGPathByteStreamSource"* %11 to i64*
  store i64 %63, i64* %64, align 8
  %65 = inttoptr i64 %63 to i8*
  %66 = load i32, i32* %20, align 4
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %65, i64 %67
  store i8* %68, i8** %61, align 8
  %69 = bitcast %"class.blink::SVGPathBlender"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #8
  %70 = getelementptr inbounds %"class.blink::SVGPathByteStreamBuilder", %"class.blink::SVGPathByteStreamBuilder"* %9, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 24, i1 false) #8
  call void @_ZN5blink14SVGPathBlenderC1EPNS_23SVGPathByteStreamSourceES2_PNS_15SVGPathConsumerE(%"class.blink::SVGPathBlender"* nonnull %12, %"class.blink::SVGPathByteStreamSource"* nonnull %10, %"class.blink::SVGPathByteStreamSource"* nonnull %11, %"class.blink::SVGPathConsumer"* nonnull %70) #8
  %71 = call zeroext i1 @_ZN5blink14SVGPathBlender17BlendAnimatedPathEf(%"class.blink::SVGPathBlender"* nonnull %12, float %2) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #8
  %72 = ptrtoint i8* %48 to i64
  %73 = icmp eq i32 %3, 0
  br i1 %73, label %88, label %74

74:                                               ; preds = %47
  %75 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 2
  %76 = load i8, i8* %75, align 1, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %88, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.blink::SVGPropertyBase", %"class.blink::SVGPropertyBase"* %6, i64 1
  %80 = bitcast %"class.blink::SVGPropertyBase"* %79 to %"class.blink::cssvalue::CSSPathValue"**
  %81 = load %"class.blink::cssvalue::CSSPathValue"*, %"class.blink::cssvalue::CSSPathValue"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::cssvalue::CSSPathValue", %"class.blink::cssvalue::CSSPathValue"* %81, i64 0, i32 2, i32 0
  %83 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %83, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %84, align 8
  %86 = call fastcc %"class.blink::SVGPathByteStream"* @_ZN5blink12_GLOBAL__N_131ConditionallyAddPathByteStreamsENSt3__110unique_ptrINS_17SVGPathByteStreamENS1_14default_deleteIS3_EEEERKS3_j(%"class.blink::SVGPathByteStream"* %49, %"class.blink::SVGPathByteStream"* dereferenceable(16) %85, i32 %3)
  %87 = ptrtoint %"class.blink::SVGPathByteStream"* %86 to i64
  br label %88

88:                                               ; preds = %74, %47, %78
  %89 = phi i64 [ %72, %47 ], [ %72, %74 ], [ %87, %78 ]
  %90 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %1, i64 0, i32 1
  %91 = load i8, i8* %90, align 1, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %103, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 1, i32 0, i32 0
  %95 = load %"class.blink::cssvalue::CSSPathValue"*, %"class.blink::cssvalue::CSSPathValue"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::cssvalue::CSSPathValue", %"class.blink::cssvalue::CSSPathValue"* %95, i64 0, i32 2, i32 0
  %97 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %96, align 8
  %98 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %97, i64 0, i32 1, i32 0, i32 0, i32 0
  %99 = load %"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"** %98, align 8
  %100 = inttoptr i64 %89 to %"class.blink::SVGPathByteStream"*
  %101 = call fastcc %"class.blink::SVGPathByteStream"* @_ZN5blink12_GLOBAL__N_131ConditionallyAddPathByteStreamsENSt3__110unique_ptrINS_17SVGPathByteStreamENS1_14default_deleteIS3_EEEERKS3_j(%"class.blink::SVGPathByteStream"* %100, %"class.blink::SVGPathByteStream"* dereferenceable(16) %99, i32 1)
  %102 = ptrtoint %"class.blink::SVGPathByteStream"* %101 to i64
  br label %103

103:                                              ; preds = %88, %93
  %104 = phi i64 [ %89, %88 ], [ %102, %93 ]
  %105 = call i8* @_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue12CSSPathValueEEEPvm(i64 24) #8
  %106 = bitcast i8* %105 to %"class.blink::cssvalue::CSSPathValue"*
  %107 = inttoptr i64 %104 to %"class.blink::SVGPathByteStream"*
  call void @_ZN5blink8cssvalue12CSSPathValueC1ENSt3__110unique_ptrINS_17SVGPathByteStreamENS2_14default_deleteIS4_EEEENS_8WindRuleENS_23PathSerializationFormatE(%"class.blink::cssvalue::CSSPathValue"* %106, %"class.blink::SVGPathByteStream"* %107, i32 0, i32 0) #8
  %108 = getelementptr inbounds i8, i8* %105, i64 -4
  %109 = bitcast i8* %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = or i16 %110, 1
  store atomic i16 %111, i16* %109 release, align 2
  %112 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 1
  %113 = ptrtoint i8* %105 to i64
  %114 = bitcast %"class.blink::Member"* %112 to i64*
  store atomic i64 %113, i64* %114 monotonic, align 8
  %115 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %119, label %117

117:                                              ; preds = %103
  %118 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #8
  br label %119

119:                                              ; preds = %103, %117, %44, %36, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::SVGPathByteStream"* @_ZN5blink12_GLOBAL__N_131ConditionallyAddPathByteStreamsENSt3__110unique_ptrINS_17SVGPathByteStreamENS1_14default_deleteIS3_EEEERKS3_j(%"class.blink::SVGPathByteStream"*, %"class.blink::SVGPathByteStream"* nocapture readonly dereferenceable(16), i32) unnamed_addr #0 {
  %4 = alloca %"class.blink::SVGPathByteStreamBuilder", align 8
  %5 = alloca %"class.blink::SVGPathByteStreamSource", align 8
  %6 = alloca %"class.blink::SVGPathByteStreamSource", align 8
  %7 = alloca %"class.blink::SVGPathBlender", align 8
  %8 = ptrtoint %"class.blink::SVGPathByteStream"* %0 to i64
  %9 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %54, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %54, label %16

16:                                               ; preds = %12
  %17 = tail call noalias i8* @malloc(i64 16) #8
  %18 = bitcast i8* %17 to %"class.blink::SVGPathByteStream"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #8
  %19 = bitcast %"class.blink::SVGPathByteStreamBuilder"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false) #8
  call void @_ZN5blink24SVGPathByteStreamBuilderC1ERNS_17SVGPathByteStreamE(%"class.blink::SVGPathByteStreamBuilder"* nonnull %4, %"class.blink::SVGPathByteStream"* dereferenceable(16) %18) #8
  %20 = bitcast %"class.blink::SVGPathByteStreamSource"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #8
  %21 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %5, i64 0, i32 1
  %22 = bitcast %"class.blink::SVGPathByteStream"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.blink::SVGPathByteStreamSource"* %5 to i64*
  store i64 %23, i64* %24, align 8
  %25 = inttoptr i64 %23 to i8*
  %26 = load i32, i32* %9, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %25, i64 %27
  store i8* %28, i8** %21, align 8
  %29 = bitcast %"class.blink::SVGPathByteStreamSource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #8
  %30 = getelementptr inbounds %"class.blink::SVGPathByteStreamSource", %"class.blink::SVGPathByteStreamSource"* %6, i64 0, i32 1
  %31 = bitcast %"class.blink::SVGPathByteStream"* %1 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.blink::SVGPathByteStreamSource"* %6 to i64*
  store i64 %32, i64* %33, align 8
  %34 = inttoptr i64 %32 to i8*
  %35 = load i32, i32* %13, align 4
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %34, i64 %36
  store i8* %37, i8** %30, align 8
  %38 = bitcast %"class.blink::SVGPathBlender"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #8
  %39 = getelementptr inbounds %"class.blink::SVGPathByteStreamBuilder", %"class.blink::SVGPathByteStreamBuilder"* %4, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false) #8
  call void @_ZN5blink14SVGPathBlenderC1EPNS_23SVGPathByteStreamSourceES2_PNS_15SVGPathConsumerE(%"class.blink::SVGPathBlender"* nonnull %7, %"class.blink::SVGPathByteStreamSource"* nonnull %5, %"class.blink::SVGPathByteStreamSource"* nonnull %6, %"class.blink::SVGPathConsumer"* nonnull %39) #8
  %40 = call zeroext i1 @_ZN5blink14SVGPathBlender15AddAnimatedPathEj(%"class.blink::SVGPathBlender"* nonnull %7, i32 %2) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #8
  %41 = ptrtoint i8* %17 to i64
  %42 = icmp eq %"class.blink::SVGPathByteStream"* %0, null
  br i1 %42, label %54, label %43

43:                                               ; preds = %16
  %44 = getelementptr inbounds %"class.blink::SVGPathByteStream", %"class.blink::SVGPathByteStream"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %52, label %47, !prof !3

47:                                               ; preds = %43
  %48 = load i32, i32* %9, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50, !prof !4

50:                                               ; preds = %47
  store i32 0, i32* %9, align 4
  br label %51

51:                                               ; preds = %50, %47
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %45) #8
  br label %52

52:                                               ; preds = %51, %43
  %53 = bitcast %"class.blink::SVGPathByteStream"* %0 to i8*
  call void @free(i8* %53) #8
  br label %54

54:                                               ; preds = %3, %12, %16, %52
  %55 = phi i64 [ %41, %16 ], [ %41, %52 ], [ %8, %12 ], [ %8, %3 ]
  %56 = inttoptr i64 %55 to %"class.blink::SVGPathByteStream"*
  ret %"class.blink::SVGPathByteStream"* %56
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZNK5blink7SVGPath17CalculateDistanceEPKNS_15SVGPropertyBaseEPKNS_10SVGElementE(%"class.blink::SVGPath"* nocapture readnone, %"class.blink::SVGPropertyBase"* nocapture readnone, %"class.blink::SVGElement"* nocapture readnone) unnamed_addr #3 align 2 {
  ret float -1.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink7SVGPath5TraceEPNS_7VisitorE(%"class.blink::SVGPath"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGPath", %"class.blink::SVGPath"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::cssvalue::CSSPathValue"*
  %9 = getelementptr inbounds %"class.blink::cssvalue::CSSPathValue", %"class.blink::cssvalue::CSSPathValue"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8cssvalue12CSSPathValueEE5TraceEPNS_7VisitorEPKv) #8
  br label %14

14:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7SVGPath7GetTypeEv(%"class.blink::SVGPath"*) unnamed_addr #0 comdat align 2 {
  ret i32 12
}

declare void @_ZN5blink24SVGPathByteStreamBuilderC1ERNS_17SVGPathByteStreamE(%"class.blink::SVGPathByteStreamBuilder"*, %"class.blink::SVGPathByteStream"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink14SVGPathBlenderC1EPNS_23SVGPathByteStreamSourceES2_PNS_15SVGPathConsumerE(%"class.blink::SVGPathBlender"*, %"class.blink::SVGPathByteStreamSource"*, %"class.blink::SVGPathByteStreamSource"*, %"class.blink::SVGPathConsumer"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink14SVGPathBlender15AddAnimatedPathEj(%"class.blink::SVGPathBlender"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14SVGPathBlender17BlendAnimatedPathEf(%"class.blink::SVGPathBlender"*, float) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.23"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.23"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #7 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.23"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_8cssvalue12CSSPathValueEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.23"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.23"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 7, i32 %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0))
  ret i8* %21
}

declare void @_ZN5blink8cssvalue12CSSPathValueC1ENSt3__110unique_ptrINS_17SVGPathByteStreamENS2_14default_deleteIS4_EEEENS_8WindRuleENS_23PathSerializationFormatE(%"class.blink::cssvalue::CSSPathValue"*, %"class.blink::SVGPathByteStream"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8cssvalue12CSSPathValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
