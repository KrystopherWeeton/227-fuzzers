; ModuleID = '../../third_party/skia/src/gpu/gl/GrGLContext.cpp'
source_filename = "../../third_party/skia/src/gpu/gl/GrGLContext.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLContext = type { %class.GrGLContextInfo }
%class.GrGLContextInfo = type { i32 (...)**, %class.sk_sp, %struct.GrGLDriverInfo, i32, %class.sk_sp.107 }
%class.sk_sp = type { %struct.GrGLInterface* }
%struct.GrGLInterface = type { %class.SkRefCnt.base, %union.anon, %class.GrGLExtensions, %"struct.GrGLInterface::Functions" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%union.anon = type { i32 }
%class.GrGLExtensions = type { i8, %class.SkTArray }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.GrGLInterface::Functions" = type { %class.GrGLFunction, %class.GrGLFunction.2, %class.GrGLFunction.2, %class.GrGLFunction.3, %class.GrGLFunction.2, %class.GrGLFunction.3, %class.GrGLFunction.4, %class.GrGLFunction.2, %class.GrGLFunction.2, %class.GrGLFunction.2, %class.GrGLFunction.2, %class.GrGLFunction, %class.GrGLFunction.5, %class.GrGLFunction.6, %class.GrGLFunction, %class.GrGLFunction.2, %class.GrGLFunction.7, %class.GrGLFunction.8, %class.GrGLFunction.9, %class.GrGLFunction.10, %class.GrGLFunction, %class.GrGLFunction.6, %class.GrGLFunction.11, %class.GrGLFunction.12, %class.GrGLFunction.13, %class.GrGLFunction.14, %class.GrGLFunction, %class.GrGLFunction.15, %class.GrGLFunction.16, %class.GrGLFunction.17, %class.GrGLFunction.18, %class.GrGLFunction.10, %class.GrGLFunction, %class.GrGLFunction.19, %class.GrGLFunction.19, %class.GrGLFunction.19, %class.GrGLFunction, %class.GrGLFunction.19, %class.GrGLFunction.19, %class.GrGLFunction.19, %class.GrGLFunction, %class.GrGLFunction.19, %class.GrGLFunction.19, %class.GrGLFunction.20, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.21, %class.GrGLFunction.22, %class.GrGLFunction.23, %class.GrGLFunction, %class.GrGLFunction.19, %class.GrGLFunction.24, %class.GrGLFunction.25, %class.GrGLFunction.26, %class.GrGLFunction.27, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction, %class.GrGLFunction.5, %class.GrGLFunction, %class.GrGLFunction.5, %class.GrGLFunction.28, %class.GrGLFunction.29, %class.GrGLFunction.30, %class.GrGLFunction.31, %class.GrGLFunction, %class.GrGLFunction.32, %class.GrGLFunction.32, %class.GrGLFunction.32, %class.GrGLFunction, %class.GrGLFunction.32, %class.GrGLFunction.32, %class.GrGLFunction.32, %class.GrGLFunction.32, %class.GrGLFunction.32, %class.GrGLFunction.33, %class.GrGLFunction.18, %class.GrGLFunction.34, %class.GrGLFunction.35, %class.GrGLFunction.36, %class.GrGLFunction.37, %class.GrGLFunction.38, %class.GrGLFunction.33, %class.GrGLFunction.39, %class.GrGLFunction.33, %class.GrGLFunction.40, %class.GrGLFunction.41, %class.GrGLFunction.33, %class.GrGLFunction.33, %class.GrGLFunction.38, %class.GrGLFunction.33, %class.GrGLFunction.42, %class.GrGLFunction.43, %class.GrGLFunction.44, %class.GrGLFunction.45, %class.GrGLFunction.46, %class.GrGLFunction.47, %class.GrGLFunction, %class.GrGLFunction.28, %class.GrGLFunction.48, %class.GrGLFunction.49, %class.GrGLFunction.50, %class.GrGLFunction.17, %class.GrGLFunction.51, %class.GrGLFunction.52, %class.GrGLFunction, %class.GrGLFunction.53, %class.GrGLFunction.54, %class.GrGLFunction.55, %class.GrGLFunction.56, %class.GrGLFunction.56, %class.GrGLFunction.57, %class.GrGLFunction.58, %class.GrGLFunction.59, %class.GrGLFunction.60, %class.GrGLFunction.61, %class.GrGLFunction.62, %class.GrGLFunction.63, %class.GrGLFunction.64, %class.GrGLFunction.50, %class.GrGLFunction.50, %class.GrGLFunction.2, %class.GrGLFunction.5, %class.GrGLFunction.47, %class.GrGLFunction.2, %class.GrGLFunction, %class.GrGLFunction.65, %class.GrGLFunction.66, %class.GrGLFunction.67, %class.GrGLFunction.67, %class.GrGLFunction.67, %class.GrGLFunction.68, %class.GrGLFunction.5, %class.GrGLFunction.54, %class.GrGLFunction.69, %class.GrGLFunction.70, %class.GrGLFunction.2, %class.GrGLFunction.71, %class.GrGLFunction.72, %class.GrGLFunction.73, %class.GrGLFunction, %class.GrGLFunction.2, %class.GrGLFunction.74, %class.GrGLFunction.29, %class.GrGLFunction.51, %class.GrGLFunction.74, %class.GrGLFunction.75, %class.GrGLFunction.76, %class.GrGLFunction.77, %class.GrGLFunction.78, %class.GrGLFunction.54, %class.GrGLFunction.69, %class.GrGLFunction.76, %class.GrGLFunction.67, %class.GrGLFunction.5, %class.GrGLFunction.48, %class.GrGLFunction.79, %class.GrGLFunction.80, %class.GrGLFunction.81, %class.GrGLFunction.82, %class.GrGLFunction.83, %class.GrGLFunction.84, %class.GrGLFunction.81, %class.GrGLFunction.82, %class.GrGLFunction.85, %class.GrGLFunction.70, %class.GrGLFunction.81, %class.GrGLFunction.82, %class.GrGLFunction.86, %class.GrGLFunction.87, %class.GrGLFunction.81, %class.GrGLFunction.82, %class.GrGLFunction.88, %class.GrGLFunction.88, %class.GrGLFunction.88, %class.GrGLFunction.51, %class.GrGLFunction.89, %class.GrGLFunction.89, %class.GrGLFunction, %class.GrGLFunction.90, %class.GrGLFunction.91, %class.GrGLFunction.91, %class.GrGLFunction.91, %class.GrGLFunction.2, %class.GrGLFunction.92, %class.GrGLFunction.93, %class.GrGLFunction.70, %class.GrGLFunction, %class.GrGLFunction.94, %class.GrGLFunction.95, %class.GrGLFunction.96, %class.GrGLFunction.97, %class.GrGLFunction.98, %class.GrGLFunction.99, %class.GrGLFunction.100, %class.GrGLFunction.101, %class.GrGLFunction.102, %class.GrGLFunction.103, %class.GrGLFunction.104, %class.GrGLFunction.5, %class.GrGLFunction.104, %class.GrGLFunction.105, %class.GrGLFunction.106, %class.GrGLFunction }
%class.GrGLFunction.3 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.4 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.7 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.8 = type { void (i8*, i32, i64, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.9 = type { void (i8*, i32, i64, i64, i8*)*, [4 x i64] }
%class.GrGLFunction.6 = type { void (i8*, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.11 = type { void (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.12 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.13 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.14 = type { void (i8*, i8, i8, i8, i8)*, [4 x i64] }
%class.GrGLFunction.15 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.16 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.10 = type { i32 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.20 = type { void (i8*, i8)*, [4 x i64] }
%class.GrGLFunction.21 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.22 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.23 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.19 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.24 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.25 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.26 = type { void (i8*, i32, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.27 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.30 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.31 = type { void (i8*, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.32 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.18 = type { i32 (i8*)*, [4 x i64] }
%class.GrGLFunction.34 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.35 = type { void (i8*, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.36 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.37 = type { void (i8*, i32, i32, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.39 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.40 = type { void (i8*, i32, i32, i64*)*, [4 x i64] }
%class.GrGLFunction.41 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.38 = type { void (i8*, i32, i32, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.33 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.42 = type { void (i8*, i32, i32, i32*, i32*)*, [4 x i64] }
%class.GrGLFunction.43 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.44 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.45 = type { void (i8*, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.46 = type { i32 (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.28 = type { void (i8*, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.49 = type { void (i8*, i32, i32, i32*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.17 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.52 = type { void (i8*, float)*, [4 x i64] }
%class.GrGLFunction.53 = type { void (i8*, i32, i32, i8*, i32)*, [4 x i64] }
%class.GrGLFunction.55 = type { i8* (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.56 = type { i8* (i8*, i32, i64, i64, i32)*, [4 x i64] }
%class.GrGLFunction.57 = type { i8* (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.58 = type { i8* (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.59 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.60 = type { void (i8*, i32, i32, i32, i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.61 = type { void (i8*, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.62 = type { void (i8*, i32, i32, i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.63 = type { void (i8*, i32, i32*, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.64 = type { void (i8*, i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, [4 x i64] }
%class.GrGLFunction.50 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.47 = type { void (i8*, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.65 = type { void (i8*, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.66 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.68 = type { void (i8*, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.71 = type { void (i8*, i32, i32, i8**, i32*)*, [4 x i64] }
%class.GrGLFunction.72 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.73 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.29 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.74 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.75 = type { void (i8*, i32, i32, i32, i64, i64)*, [4 x i64] }
%class.GrGLFunction.77 = type { void (i8*, i32, i32, float)*, [4 x i64] }
%class.GrGLFunction.78 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.54 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.69 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.76 = type { void (i8*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.67 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.48 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.79 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.80 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.83 = type { void (i8*, i32, float, float)*, [4 x i64] }
%class.GrGLFunction.84 = type { void (i8*, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.85 = type { void (i8*, i32, float, float, float)*, [4 x i64] }
%class.GrGLFunction.86 = type { void (i8*, i32, float, float, float, float)*, [4 x i64] }
%class.GrGLFunction.87 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.81 = type { void (i8*, i32, i32, float*)*, [4 x i64] }
%class.GrGLFunction.82 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.88 = type { void (i8*, i32, i32, i8, float*)*, [4 x i64] }
%class.GrGLFunction.51 = type { i8 (i8*, i32)*, [4 x i64] }
%class.GrGLFunction.89 = type { void (i8*, i8*)*, [4 x i64] }
%class.GrGLFunction.90 = type { void (i8*, i32, float)*, [4 x i64] }
%class.GrGLFunction.91 = type { void (i8*, i32, float*)*, [4 x i64] }
%class.GrGLFunction.2 = type { void (i8*, i32, i32)*, [4 x i64] }
%class.GrGLFunction.92 = type { void (i8*, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.93 = type { void (i8*, i32, i32, i32, i8, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.70 = type { void (i8*, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction.94 = type { %struct.__GLsync* (i8*, i32, i32)*, [4 x i64] }
%struct.__GLsync = type opaque
%class.GrGLFunction.95 = type { i8 (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.96 = type { i32 (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.97 = type { void (i8*, %struct.__GLsync*, i32, i64)*, [4 x i64] }
%class.GrGLFunction.98 = type { void (i8*, %struct.__GLsync*)*, [4 x i64] }
%class.GrGLFunction.99 = type { void (i8*, i32, i32, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.100 = type { void (i8*, i32, i32, i32, i32, i32*, i8)*, [4 x i64] }
%class.GrGLFunction.101 = type { void (i8*, i32, i32, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.102 = type { void (i8*, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, [4 x i64] }
%class.GrGLFunction.103 = type { i32 (i8*, i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, [4 x i64] }
%class.GrGLFunction.5 = type { void (i8*)*, [4 x i64] }
%class.GrGLFunction.104 = type { void (i8*, i32, i32, i32, i8*)*, [4 x i64] }
%class.GrGLFunction.105 = type { void (i8*, i32, i32, i32*)*, [4 x i64] }
%class.GrGLFunction.106 = type { void (i8*, i32, i32, i32, i32, i32)*, [4 x i64] }
%class.GrGLFunction = type { void (i8*, i32)*, [4 x i64] }
%struct.GrGLDriverInfo = type <{ i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i8, [7 x i8] }>
%class.sk_sp.107 = type { %class.GrGLCaps* }
%class.GrGLCaps = type <{ %class.GrCaps.base, i8, i32, [4 x i8], %class.SkTArray.109, i32, i32, i32, i32, i32, i32, i32, i40, i32, i32, [4 x i8], [24 x %"struct.GrGLCaps::FormatInfo"], [31 x i32], [4 x i8] }>
%class.GrCaps.base = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.108, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8 }>
%class.sk_sp.108 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.SkTArray.109 = type { i32*, i64 }
%"struct.GrGLCaps::FormatInfo" = type <{ i32, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], i32, %class.SkTDArray, %"class.std::__1::unique_ptr.110", i32, [4 x i8] }>
%class.SkTDArray = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"struct.GrGLCaps::ColorTypeInfo"* }
%"struct.GrGLCaps::ColorTypeInfo" = type <{ i32, i32, %class.GrSwizzle, %class.GrSwizzle, [4 x i8], %"class.std::__1::unique_ptr.113", i32, [4 x i8] }>
%class.GrSwizzle = type { i16 }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats"* }
%"struct.GrGLCaps::ColorTypeInfo::ExternalIOFormats" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.GrGLContextInfo::ConstructorArgs" = type { %class.sk_sp, %struct.GrGLDriverInfo, i32, %struct.GrContextOptions* }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>

$_ZN15GrGLContextInfoD2Ev = comdat any

$_ZN15GrGLContextInfoD0Ev = comdat any

$_ZTV15GrGLContextInfo = comdat any

@.str = private unnamed_addr constant [26 x i8] c"GL_OES_EGL_image_external\00", align 1
@.str.1 = private unnamed_addr constant [32 x i8] c"GL_OES_EGL_image_external_essl3\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"OES_EGL_image_external_essl3\00", align 1
@_ZTV15GrGLContextInfo = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLContextInfo*)* @_ZN15GrGLContextInfoD2Ev to i8*), i8* bitcast (void (%class.GrGLContextInfo*)* @_ZN15GrGLContextInfoD0Ev to i8*)] }, comdat, align 8
@_ZTV11GrGLContext = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLContext*)* @_ZN11GrGLContextD2Ev to i8*), i8* bitcast (void (%class.GrGLContext*)* @_ZN11GrGLContextD0Ev to i8*)] }, align 8

@_ZN11GrGLContextD1Ev = hidden unnamed_addr alias void (%class.GrGLContext*), void (%class.GrGLContext*)* @_ZN11GrGLContextD2Ev
@_ZN15GrGLContextInfoC1EONS_15ConstructorArgsE = hidden unnamed_addr alias void (%class.GrGLContextInfo*, %"struct.GrGLContextInfo::ConstructorArgs"*), void (%class.GrGLContextInfo*, %"struct.GrGLContextInfo::ConstructorArgs"*)* @_ZN15GrGLContextInfoC2EONS_15ConstructorArgsE

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrGLContext* @_ZN11GrGLContext4MakeE5sk_spIK13GrGLInterfaceERK16GrContextOptions(%class.sk_sp* nocapture, %struct.GrContextOptions* dereferenceable(240)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.GrGLContextInfo::ConstructorArgs", align 8
  %4 = alloca %struct.GrGLDriverInfo, align 8
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %6 = load %struct.GrGLInterface*, %struct.GrGLInterface** %5, align 8
  %7 = tail call zeroext i1 @_ZNK13GrGLInterface8validateEv(%struct.GrGLInterface* %6) #5
  br i1 %7, label %8, label %95

8:                                                ; preds = %2
  %9 = bitcast %"struct.GrGLContextInfo::ConstructorArgs"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %9) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 88, i1 false)
  %10 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 1, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 20, i1 false) #5
  store i32 7, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 1, i32 4
  store i32 36, i32* %11, align 8
  %12 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 1, i32 5
  store i32 6, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 1, i32 6
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 1, i32 7
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 0, i32 7, i32 36, i32 6>, <4 x i32>* %15, align 8
  %16 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 1, i32 11
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 1, i32 12
  store i8 0, i8* %17, align 8
  %18 = bitcast %struct.GrGLDriverInfo* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %18) #5
  %19 = load %struct.GrGLInterface*, %struct.GrGLInterface** %5, align 8
  call void @_Z17GrGLGetDriverInfoPK13GrGLInterface(%struct.GrGLDriverInfo* nonnull sret %4, %struct.GrGLInterface* %19) #5
  %20 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 1
  %21 = bitcast %struct.GrGLDriverInfo* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* nonnull align 8 %18, i64 57, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %18) #5
  %22 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 1, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %79, label %25

25:                                               ; preds = %8
  %26 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 2
  %27 = call zeroext i1 @_Z21GrGLGetGLSLGenerationRK14GrGLDriverInfoP16GrGLSLGeneration(%struct.GrGLDriverInfo* dereferenceable(64) %20, i32* %26) #5
  br i1 %27, label %28, label %79

28:                                               ; preds = %25
  %29 = load %struct.GrGLInterface*, %struct.GrGLInterface** %5, align 8
  %30 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %29, i64 0, i32 1, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %33, label %56

33:                                               ; preds = %28
  %34 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %1, i64 0, i32 18
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %56, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %struct.GrContextOptions, %struct.GrContextOptions* %1, i64 0, i32 19
  %39 = load i8, i8* %38, align 1, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %56

41:                                               ; preds = %37
  %42 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %29, i64 0, i32 2
  %43 = call zeroext i1 @_ZNK14GrGLExtensions3hasEPKc(%class.GrGLExtensions* %42, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0)) #5
  %44 = load i32, i32* %26, align 8
  %45 = icmp sgt i32 %44, 3
  %46 = and i1 %43, %45
  br i1 %46, label %47, label %56

47:                                               ; preds = %41
  %48 = load %struct.GrGLInterface*, %struct.GrGLInterface** %5, align 8
  %49 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %48, i64 0, i32 2
  %50 = call zeroext i1 @_ZNK14GrGLExtensions3hasEPKc(%class.GrGLExtensions* %49, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1, i64 0, i64 0)) #5
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = load %struct.GrGLInterface*, %struct.GrGLInterface** %5, align 8
  %53 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %52, i64 0, i32 2
  %54 = call zeroext i1 @_ZNK14GrGLExtensions3hasEPKc(%class.GrGLExtensions* %53, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0)) #5
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  store i32 0, i32* %26, align 8
  br label %56

56:                                               ; preds = %37, %33, %55, %51, %47, %41, %28
  %57 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 3
  store %struct.GrContextOptions* %1, %struct.GrContextOptions** %57, align 8
  %58 = bitcast %class.sk_sp* %0 to i64*
  %59 = load i64, i64* %58, align 8
  store %struct.GrGLInterface* null, %struct.GrGLInterface** %5, align 8
  %60 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 0, i32 0
  %61 = load %struct.GrGLInterface*, %struct.GrGLInterface** %60, align 8
  %62 = bitcast %"struct.GrGLContextInfo::ConstructorArgs"* %3 to i64*
  store i64 %59, i64* %62, align 8
  %63 = icmp eq %struct.GrGLInterface* %61, null
  br i1 %63, label %74, label %64

64:                                               ; preds = %56
  %65 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %61, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = atomicrmw add i32* %65, i32 -1 acq_rel
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64
  %69 = bitcast %struct.GrGLInterface* %61 to %class.SkRefCntBase*
  %70 = bitcast %struct.GrGLInterface* %61 to void (%class.SkRefCntBase*)***
  %71 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %70, align 8
  %72 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %71, i64 2
  %73 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %72, align 8
  call void %73(%class.SkRefCntBase* nonnull %69) #5
  br label %74

74:                                               ; preds = %56, %64, %68
  %75 = call i8* @_Znwm(i64 96) #6
  %76 = bitcast i8* %75 to %class.GrGLContextInfo*
  call void @_ZN15GrGLContextInfoC2EONS_15ConstructorArgsE(%class.GrGLContextInfo* nonnull %76, %"struct.GrGLContextInfo::ConstructorArgs"* nonnull dereferenceable(88) %3) #5
  %77 = bitcast i8* %75 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV11GrGLContext, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %78 = ptrtoint i8* %75 to i64
  br label %79

79:                                               ; preds = %25, %8, %74
  %80 = phi i64 [ %78, %74 ], [ 0, %8 ], [ 0, %25 ]
  %81 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %3, i64 0, i32 0, i32 0
  %82 = load %struct.GrGLInterface*, %struct.GrGLInterface** %81, align 8
  %83 = icmp eq %struct.GrGLInterface* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %82, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = atomicrmw add i32* %85, i32 -1 acq_rel
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %88, label %94

88:                                               ; preds = %84
  %89 = bitcast %struct.GrGLInterface* %82 to %class.SkRefCntBase*
  %90 = bitcast %struct.GrGLInterface* %82 to void (%class.SkRefCntBase*)***
  %91 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %90, align 8
  %92 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %91, i64 2
  %93 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, align 8
  call void %93(%class.SkRefCntBase* nonnull %89) #5
  br label %94

94:                                               ; preds = %79, %84, %88
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %9) #5
  br label %95

95:                                               ; preds = %2, %94
  %96 = phi i64 [ %80, %94 ], [ 0, %2 ]
  %97 = inttoptr i64 %96 to %class.GrGLContext*
  ret %class.GrGLContext* %97
}

declare zeroext i1 @_ZNK13GrGLInterface8validateEv(%struct.GrGLInterface*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_Z17GrGLGetDriverInfoPK13GrGLInterface(%struct.GrGLDriverInfo* sret, %struct.GrGLInterface*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_Z21GrGLGetGLSLGenerationRK14GrGLDriverInfoP16GrGLSLGeneration(%struct.GrGLDriverInfo* dereferenceable(64), i32*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGLContextD2Ev(%class.GrGLContext* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15GrGLContextInfo, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %0, i64 0, i32 0, i32 4, i32 0
  %4 = load %class.GrGLCaps*, %class.GrGLCaps** %3, align 8
  %5 = icmp eq %class.GrGLCaps* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrGLCaps* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrGLCaps* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #5
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %struct.GrGLInterface*, %struct.GrGLInterface** %17, align 8
  %19 = icmp eq %struct.GrGLInterface* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %struct.GrGLInterface* %18 to %class.SkRefCntBase*
  %26 = bitcast %struct.GrGLInterface* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #5
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrGLContextD0Ev(%class.GrGLContext*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15GrGLContextInfo, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %0, i64 0, i32 0, i32 4, i32 0
  %4 = load %class.GrGLCaps*, %class.GrGLCaps** %3, align 8
  %5 = icmp eq %class.GrGLCaps* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrGLCaps* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrGLCaps* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #5
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %class.GrGLContext, %class.GrGLContext* %0, i64 0, i32 0, i32 1, i32 0
  %18 = load %struct.GrGLInterface*, %struct.GrGLInterface** %17, align 8
  %19 = icmp eq %struct.GrGLInterface* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %struct.GrGLInterface* %18 to %class.SkRefCntBase*
  %26 = bitcast %struct.GrGLInterface* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #5
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %class.GrGLContext* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15GrGLContextInfo12makeNonAngleEv(%class.GrGLContextInfo* noalias nocapture sret, %class.GrGLContextInfo* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 1
  %4 = bitcast %class.sk_sp* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 88, i1 false)
  %5 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15GrGLContextInfo, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %1, i64 0, i32 1, i32 0
  %8 = load %struct.GrGLInterface*, %struct.GrGLInterface** %7, align 8
  %9 = icmp eq %struct.GrGLInterface* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  br label %13

13:                                               ; preds = %10, %2
  store %struct.GrGLInterface* %8, %struct.GrGLInterface** %6, align 8
  %14 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2
  %15 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %1, i64 0, i32 2
  %16 = bitcast %struct.GrGLDriverInfo* %14 to i8*
  %17 = bitcast %struct.GrGLDriverInfo* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 68, i1 false) #5
  %18 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 4, i32 0
  %19 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %1, i64 0, i32 4, i32 0
  %20 = load %class.GrGLCaps*, %class.GrGLCaps** %19, align 8
  %21 = icmp eq %class.GrGLCaps* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %20, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  br label %25

25:                                               ; preds = %13, %22
  store %class.GrGLCaps* %20, %class.GrGLCaps** %18, align 8
  %26 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %1, i64 0, i32 2, i32 7
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %44, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 8
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 3
  store i32 %31, i32* %32, align 4
  %33 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 10
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 5
  store i32 %34, i32* %35, align 4
  %36 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 11
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 6
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 9
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 4
  store i32 %40, i32* %41, align 8
  %42 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 7
  store i64 0, i64* %36, align 8
  %43 = bitcast i32* %42 to <4 x i32>*
  store <4 x i32> <i32 0, i32 7, i32 36, i32 6>, <4 x i32>* %43, align 8
  br label %44

44:                                               ; preds = %29, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrGLContextInfoD2Ev(%class.GrGLContextInfo*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15GrGLContextInfo, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 4, i32 0
  %4 = load %class.GrGLCaps*, %class.GrGLCaps** %3, align 8
  %5 = icmp eq %class.GrGLCaps* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrGLCaps* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrGLCaps* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #5
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 1, i32 0
  %18 = load %struct.GrGLInterface*, %struct.GrGLInterface** %17, align 8
  %19 = icmp eq %struct.GrGLInterface* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %struct.GrGLInterface* %18 to %class.SkRefCntBase*
  %26 = bitcast %struct.GrGLInterface* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #5
  br label %30

30:                                               ; preds = %16, %20, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15GrGLContextInfoC2EONS_15ConstructorArgsE(%class.GrGLContextInfo*, %"struct.GrGLContextInfo::ConstructorArgs"* nocapture dereferenceable(88)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15GrGLContextInfo, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %6 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2
  %7 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 3
  %8 = bitcast %class.sk_sp* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false)
  store i32 7, i32* %7, align 4
  %9 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 4
  store i32 36, i32* %9, align 8
  %10 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 5
  store i32 6, i32* %10, align 4
  %11 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 6
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 7
  %13 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> <i32 0, i32 7, i32 36, i32 6>, <4 x i32>* %13, align 8
  %14 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 11
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 2, i32 12
  store i8 0, i8* %15, align 8
  %16 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 4
  %17 = getelementptr inbounds %class.sk_sp.107, %class.sk_sp.107* %16, i64 0, i32 0
  store %class.GrGLCaps* null, %class.GrGLCaps** %17, align 8
  %18 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %1, i64 0, i32 0, i32 0
  %19 = bitcast %"struct.GrGLContextInfo::ConstructorArgs"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  store %struct.GrGLInterface* null, %struct.GrGLInterface** %18, align 8
  %21 = load %struct.GrGLInterface*, %struct.GrGLInterface** %5, align 8
  %22 = bitcast %class.sk_sp* %4 to i64*
  store i64 %20, i64* %22, align 8
  %23 = icmp eq %struct.GrGLInterface* %21, null
  br i1 %23, label %34, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %21, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %struct.GrGLInterface* %21 to %class.SkRefCntBase*
  %30 = bitcast %struct.GrGLInterface* %21 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8
  tail call void %33(%class.SkRefCntBase* nonnull %29) #5
  br label %34

34:                                               ; preds = %2, %24, %28
  %35 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %1, i64 0, i32 1
  %36 = bitcast %struct.GrGLDriverInfo* %6 to i8*
  %37 = bitcast %struct.GrGLDriverInfo* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 57, i1 false)
  %38 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %1, i64 0, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 3
  store i32 %39, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.GrGLContextInfo::ConstructorArgs", %"struct.GrGLContextInfo::ConstructorArgs"* %1, i64 0, i32 3
  %42 = load %struct.GrContextOptions*, %struct.GrContextOptions** %41, align 8
  %43 = load %struct.GrGLInterface*, %struct.GrGLInterface** %5, align 8
  %44 = tail call i8* @_Znwm(i64 2160) #6, !noalias !3
  %45 = bitcast i8* %44 to %class.GrGLCaps*
  tail call void @_ZN8GrGLCapsC1ERK16GrContextOptionsRK15GrGLContextInfoPK13GrGLInterface(%class.GrGLCaps* nonnull %45, %struct.GrContextOptions* dereferenceable(240) %42, %class.GrGLContextInfo* dereferenceable(96) %0, %struct.GrGLInterface* %43) #5, !noalias !3
  %46 = ptrtoint i8* %44 to i64
  %47 = load %class.GrGLCaps*, %class.GrGLCaps** %17, align 8
  %48 = bitcast %class.sk_sp.107* %16 to i64*
  store i64 %46, i64* %48, align 8
  %49 = icmp eq %class.GrGLCaps* %47, null
  br i1 %49, label %60, label %50

50:                                               ; preds = %34
  %51 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %47, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw add i32* %51, i32 -1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %60

54:                                               ; preds = %50
  %55 = bitcast %class.GrGLCaps* %47 to %class.SkRefCntBase*
  %56 = bitcast %class.GrGLCaps* %47 to void (%class.SkRefCntBase*)***
  %57 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %56, align 8
  %58 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, i64 2
  %59 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %58, align 8
  tail call void %59(%class.SkRefCntBase* nonnull %55) #5
  br label %60

60:                                               ; preds = %54, %50, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15GrGLContextInfoD0Ev(%class.GrGLContextInfo*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15GrGLContextInfo, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 4, i32 0
  %4 = load %class.GrGLCaps*, %class.GrGLCaps** %3, align 8
  %5 = icmp eq %class.GrGLCaps* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrGLCaps, %class.GrGLCaps* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = bitcast %class.GrGLCaps* %4 to %class.SkRefCntBase*
  %12 = bitcast %class.GrGLCaps* %4 to void (%class.SkRefCntBase*)***
  %13 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %12, align 8
  %14 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %13, i64 2
  %15 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, align 8
  tail call void %15(%class.SkRefCntBase* nonnull %11) #5
  br label %16

16:                                               ; preds = %10, %6, %1
  %17 = getelementptr inbounds %class.GrGLContextInfo, %class.GrGLContextInfo* %0, i64 0, i32 1, i32 0
  %18 = load %struct.GrGLInterface*, %struct.GrGLInterface** %17, align 8
  %19 = icmp eq %struct.GrGLInterface* %18, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.GrGLInterface, %struct.GrGLInterface* %18, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 -1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %20
  %25 = bitcast %struct.GrGLInterface* %18 to %class.SkRefCntBase*
  %26 = bitcast %struct.GrGLInterface* %18 to void (%class.SkRefCntBase*)***
  %27 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %26, align 8
  %28 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %27, i64 2
  %29 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %28, align 8
  tail call void %29(%class.SkRefCntBase* nonnull %25) #5
  br label %30

30:                                               ; preds = %16, %20, %24
  %31 = bitcast %class.GrGLContextInfo* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #6
  ret void
}

declare zeroext i1 @_ZNK14GrGLExtensions3hasEPKc(%class.GrGLExtensions*, i8*) local_unnamed_addr #1

declare void @_ZN8GrGLCapsC1ERK16GrContextOptionsRK15GrGLContextInfoPK13GrGLInterface(%class.GrGLCaps*, %struct.GrContextOptions* dereferenceable(240), %class.GrGLContextInfo* dereferenceable(96), %struct.GrGLInterface*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_Z10sk_make_spI8GrGLCapsJRK16GrContextOptionsR15GrGLContextInfoPK13GrGLInterfaceEE5sk_spIT_EDpOT0_: argument 0"}
!5 = distinct !{!5, !"_Z10sk_make_spI8GrGLCapsJRK16GrContextOptionsR15GrGLContextInfoPK13GrGLInterfaceEE5sk_spIT_EDpOT0_"}
