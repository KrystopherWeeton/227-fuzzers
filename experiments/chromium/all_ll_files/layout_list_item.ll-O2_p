; ModuleID = '../../third_party/blink/renderer/core/layout/layout_list_item.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_list_item.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.blink::LayoutListItem" = type <{ %"class.blink::LayoutBlockFlow", %"class.blink::ListItemOrdinal", i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1667", %"class.std::__1::unique_ptr.1677" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1623, %"class.WTF::Vector.1624", %"class.std::__1::unique_ptr.1629", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1650, %"class.blink::Persistent.1651" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2061 }
%class.scoped_refptr.2061 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2062", %"class.WTF::Vector.630", %"class.WTF::Vector.2064", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2062" = type { %"class.base::RefCounted.2063" }
%"class.base::RefCounted.2063" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2064" = type { %"class.WTF::VectorBuffer.2065" }
%"class.WTF::VectorBuffer.2065" = type { %"class.WTF::VectorBufferBase.2066" }
%"class.WTF::VectorBufferBase.2066" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2067 }
%union.anon.2067 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.2047" }
%"class.blink::Member.2047" = type { %"class.blink::MemberBase.2048" }
%"class.blink::MemberBase.2048" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2049" }
%"class.blink::Member.2049" = type { %"class.blink::MemberBase.2050" }
%"class.blink::MemberBase.2050" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2075 }
%class.scoped_refptr.2075 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.2085" }
%"class.blink::Member.2085" = type { %"class.blink::MemberBase.2086" }
%"class.blink::MemberBase.2086" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.2081" }
%"class.blink::MemberBase.2081" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2082" }
%"class.blink::MemberBase.2082" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.2083" }
%"class.blink::MemberBase.2083" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.2084" }
%"class.blink::MemberBase.2084" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2076", %"class.WTF::Vector.2076" }
%"class.WTF::Vector.2076" = type { %"class.WTF::VectorBuffer.2077" }
%"class.WTF::VectorBuffer.2077" = type { %"class.WTF::VectorBufferBase.2078" }
%"class.WTF::VectorBufferBase.2078" = type { %class.scoped_refptr.2075*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1708", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.1928", %"class.std::__1::unique_ptr.1934", %"class.std::__1::unique_ptr.1940", %class.scoped_refptr.1704, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.1946", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::UntracedMember.1708" = type { %"class.blink::MemberBase.1709" }
%"class.blink::MemberBase.1709" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1712", %"class.blink::Member.1717", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1719", i8, i32, %"class.blink::Color", %"class.absl::optional.1722", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1727", %"class.blink::Member.1729", %"class.blink::Member.1729", %"class.std::__1::unique_ptr.1732", i32, [4 x i8], %"class.WTF::HashSet.1735", %"class.blink::Member.1742", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1744", %"class.blink::HeapHashSet.1751", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1759", i8, %"class.blink::Member.1765", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1777", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1791", i8, %"class.std::__1::unique_ptr.1797", %"class.std::__1::unique_ptr.1878", %"class.WTF::Vector.1884", i32, %class.scoped_refptr.1889, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1890", %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::HeapHashSet.1896", %"class.blink::HeapHashSet.1903", %"class.std::__1::unique_ptr.1910", %"class.std::__1::unique_ptr.1917", %"class.WTF::Vector.906" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1712" = type { %"class.WTF::HashTable.1713" }
%"class.WTF::HashTable.1713" = type <{ %class.scoped_refptr.1716*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1716 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1717" = type { %"class.blink::MemberBase.1718" }
%"class.blink::MemberBase.1718" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1719" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1720", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1720" = type { %"class.blink::MemberBase.1721" }
%"class.blink::MemberBase.1721" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1722" = type { %"class.absl::optional_internal::optional_data.1723" }
%"class.absl::optional_internal::optional_data.1723" = type { %"class.absl::optional_internal::optional_data_base.1724" }
%"class.absl::optional_internal::optional_data_base.1724" = type { %"class.absl::optional_internal::optional_data_dtor_base.1725" }
%"class.absl::optional_internal::optional_data_dtor_base.1725" = type { i8, %union.anon.1726 }
%union.anon.1726 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1727" = type { %"class.blink::MemberBase.1728" }
%"class.blink::MemberBase.1728" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::HeapHashSet.1731"* }
%"class.blink::HeapHashSet.1731" = type opaque
%"class.std::__1::unique_ptr.1732" = type { %"class.std::__1::__compressed_pair.1733" }
%"class.std::__1::__compressed_pair.1733" = type { %"struct.std::__1::__compressed_pair_elem.1734" }
%"struct.std::__1::__compressed_pair_elem.1734" = type { %"class.WTF::HashSet.1735"* }
%"class.WTF::HashSet.1735" = type { %"class.WTF::HashTable.1736" }
%"class.WTF::HashTable.1736" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1742" = type { %"class.blink::MemberBase.1743" }
%"class.blink::MemberBase.1743" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1744" = type { %"class.WTF::HashSet.1747" }
%"class.WTF::HashSet.1747" = type { %"class.WTF::HashTable.1748" }
%"class.WTF::HashTable.1748" = type <{ %"class.blink::Member.1750"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1750" = type opaque
%"class.blink::HeapHashSet.1751" = type { %"class.WTF::HashSet.1754" }
%"class.WTF::HashSet.1754" = type { %"class.WTF::HashTable.1755" }
%"class.WTF::HashTable.1755" = type <{ %"class.blink::Member.1757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1963", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1973", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1965", %"class.blink::Member.1967", %"class.blink::Member.1969", %"class.blink::Member.1971", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1965" = type { %"class.blink::MemberBase.1966" }
%"class.blink::MemberBase.1966" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1969" = type { %"class.blink::MemberBase.1970" }
%"class.blink::MemberBase.1970" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.1973" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1974", { i64, i64 } }
%"class.blink::WeakMember.1974" = type { %"class.blink::MemberBase.1758" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1759" = type { %"class.std::__1::__compressed_pair.1760" }
%"class.std::__1::__compressed_pair.1760" = type { %"struct.std::__1::__compressed_pair_elem.1761" }
%"struct.std::__1::__compressed_pair_elem.1761" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1769", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1769" = type { %"class.WTF::HashTable.1770" }
%"class.WTF::HashTable.1770" = type <{ %"struct.WTF::KeyValuePair.1772"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1772" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1773", i32, i32 }
%"class.WTF::Vector.1773" = type { %"class.WTF::VectorBuffer.1774" }
%"class.WTF::VectorBuffer.1774" = type { %"class.WTF::VectorBufferBase.1775" }
%"class.WTF::VectorBufferBase.1775" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1777" = type { %"class.WTF::LinkedHashSet.1780" }
%"class.WTF::LinkedHashSet.1780" = type { %"class.WTF::HashMap.1781", %"class.WTF::VectorBackedLinkedList.1785" }
%"class.WTF::HashMap.1781" = type { %"class.WTF::HashTable.1782" }
%"class.WTF::HashTable.1782" = type <{ %"struct.WTF::KeyValuePair.1784"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1784" = type opaque
%"class.WTF::VectorBackedLinkedList.1785" = type { %"class.WTF::Vector.1786", i32, i32 }
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"class.WTF::VectorBackedLinkedListNode.1789"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1789" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1791" = type { %"class.std::__1::__compressed_pair.1792" }
%"class.std::__1::__compressed_pair.1792" = type { %"struct.std::__1::__compressed_pair_elem.1793" }
%"struct.std::__1::__compressed_pair_elem.1793" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1797" = type { %"class.std::__1::__compressed_pair.1798" }
%"class.std::__1::__compressed_pair.1798" = type { %"struct.std::__1::__compressed_pair_elem.1799" }
%"struct.std::__1::__compressed_pair_elem.1799" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1800, %class.scoped_refptr.1800, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1855", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1860", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1800 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1801", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1808" }
%"class.WTF::RefCounted.1801" = type { %"class.base::RefCounted.1802" }
%"class.base::RefCounted.1802" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1803", i32, [4 x i8] }>
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1808" = type { %"class.WTF::VectorBuffer.1809" }
%"class.WTF::VectorBuffer.1809" = type { %"class.WTF::VectorBufferBase.1810" }
%"class.WTF::VectorBufferBase.1810" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1811", %"class.std::__1::unique_ptr.1827", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1811" = type { %"class.std::__1::__compressed_pair.1812" }
%"class.std::__1::__compressed_pair.1812" = type { %"struct.std::__1::__compressed_pair_elem.1813" }
%"struct.std::__1::__compressed_pair_elem.1813" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1814", %"class.WTF::Vector.1819", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1814" = type { %"class.WTF::VectorBuffer.1815" }
%"class.WTF::VectorBuffer.1815" = type { %"class.WTF::VectorBufferBase.1816" }
%"class.WTF::VectorBufferBase.1816" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1819" = type { %"class.WTF::VectorBuffer.1820" }
%"class.WTF::VectorBuffer.1820" = type { %"class.WTF::VectorBufferBase.1821" }
%"class.WTF::VectorBufferBase.1821" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1830", %"class.absl::optional.1830" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, [3 x i8], %union.anon.1834 }
%union.anon.1834 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1808"*, %"class.absl::optional.1840", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1840" = type { %"class.absl::optional_internal::optional_data.1841" }
%"class.absl::optional_internal::optional_data.1841" = type { %"class.absl::optional_internal::optional_data_base.1842" }
%"class.absl::optional_internal::optional_data_base.1842" = type { %"class.absl::optional_internal::optional_data_dtor_base.1843" }
%"class.absl::optional_internal::optional_data_dtor_base.1843" = type { i8, %union.anon.1844 }
%union.anon.1844 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1845", %"class.WTF::Vector.1850" }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847", [128 x i8] }
%"class.WTF::VectorBufferBase.1847" = type { i32*, i32, i32 }
%"class.WTF::Vector.1850" = type { %"class.WTF::VectorBuffer.1851" }
%"class.WTF::VectorBuffer.1851" = type { %"class.WTF::VectorBufferBase.1852", [128 x i8] }
%"class.WTF::VectorBufferBase.1852" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1855" = type { %"class.WTF::VectorBuffer.1856" }
%"class.WTF::VectorBuffer.1856" = type { %"class.WTF::VectorBufferBase.1857" }
%"class.WTF::VectorBufferBase.1857" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1860" = type { %"class.WTF::HashTable.1861" }
%"class.WTF::HashTable.1861" = type <{ %"struct.WTF::KeyValuePair.1864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1864" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1865", %"class.WTF::Vector.1870" }
%"class.WTF::HashMap.1865" = type { %"class.WTF::HashTable.1866" }
%"class.WTF::HashTable.1866" = type <{ %"struct.WTF::KeyValuePair.1869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1869" = type opaque
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1889 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1896" = type { %"class.WTF::HashSet.1899" }
%"class.WTF::HashSet.1899" = type { %"class.WTF::HashTable.1900" }
%"class.WTF::HashTable.1900" = type <{ %"class.blink::WeakMember.1902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1902" = type opaque
%"class.blink::HeapHashSet.1903" = type { %"class.WTF::HashSet.1906" }
%"class.WTF::HashSet.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"class.blink::WeakMember.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1909" = type opaque
%"class.std::__1::unique_ptr.1910" = type { %"class.std::__1::__compressed_pair.1911" }
%"class.std::__1::__compressed_pair.1911" = type { %"struct.std::__1::__compressed_pair_elem.1912" }
%"struct.std::__1::__compressed_pair_elem.1912" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1913" }
%"class.base::time_internal::TimeBase.1913" = type { i64 }
%"class.std::__1::unique_ptr.1917" = type { %"class.std::__1::__compressed_pair.1918" }
%"class.std::__1::__compressed_pair.1918" = type { %"struct.std::__1::__compressed_pair_elem.1919" }
%"struct.std::__1::__compressed_pair_elem.1919" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1920", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1920" = type { %"class.absl::optional_internal::optional_data.1921" }
%"class.absl::optional_internal::optional_data.1921" = type { %"class.absl::optional_internal::optional_data_base.1922" }
%"class.absl::optional_internal::optional_data_base.1922" = type { %"class.absl::optional_internal::optional_data_dtor_base.1923" }
%"class.absl::optional_internal::optional_data_dtor_base.1923" = type { i8, %union.anon.1924 }
%union.anon.1924 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.1928" = type { %"class.std::__1::__compressed_pair.1929" }
%"class.std::__1::__compressed_pair.1929" = type { %"struct.std::__1::__compressed_pair_elem.1930" }
%"struct.std::__1::__compressed_pair_elem.1930" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.1934" = type { %"class.std::__1::__compressed_pair.1935" }
%"class.std::__1::__compressed_pair.1935" = type { %"struct.std::__1::__compressed_pair_elem.1936" }
%"struct.std::__1::__compressed_pair_elem.1936" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.1940" = type { %"class.std::__1::__compressed_pair.1941" }
%"class.std::__1::__compressed_pair.1941" = type { %"struct.std::__1::__compressed_pair_elem.1942" }
%"struct.std::__1::__compressed_pair_elem.1942" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1704 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.1946" = type { %"class.blink::PersistentBase.1947" }
%"class.blink::PersistentBase.1947" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.1950", i64 }
%"class.blink::HeapVector.1950" = type { %"class.WTF::Vector.1953" }
%"class.WTF::Vector.1953" = type { %"class.WTF::VectorBuffer.1954" }
%"class.WTF::VectorBuffer.1954" = type { %"class.WTF::VectorBufferBase.1955", [368 x i8] }
%"class.WTF::VectorBufferBase.1955" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1757", i8, %"class.blink::Member.1956", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::HeapLinkedHashSet.1958"* }
%"class.blink::HeapLinkedHashSet.1958" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.2051" }
%"class.WTF::Vector.2051" = type { %"class.WTF::VectorBuffer.2052" }
%"class.WTF::VectorBuffer.2052" = type { %"class.WTF::VectorBufferBase.2053" }
%"class.WTF::VectorBufferBase.2053" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2056", %"class.absl::optional.2056", %"class.absl::optional.2056" }
%"class.absl::optional.2056" = type { %"class.absl::optional_internal::optional_data.2057" }
%"class.absl::optional_internal::optional_data.2057" = type { %"class.absl::optional_internal::optional_data_base.2058" }
%"class.absl::optional_internal::optional_data_base.2058" = type { %"class.absl::optional_internal::optional_data_dtor_base.2059" }
%"class.absl::optional_internal::optional_data_dtor_base.2059" = type { i8, %union.anon.2060 }
%union.anon.2060 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2071" }
%"class.WTF::VectorBuffer.2071" = type { %"class.WTF::VectorBufferBase.2072", [32 x i8] }
%"class.WTF::VectorBufferBase.2072" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.1977", %"class.blink::Persistent.1983", %"class.std::__1::unique_ptr.2007", %"class.blink::CullRect", %"class.std::__1::unique_ptr.2023" }
%"class.std::__1::unique_ptr.1977" = type { %"class.std::__1::__compressed_pair.1978" }
%"class.std::__1::__compressed_pair.1978" = type { %"struct.std::__1::__compressed_pair_elem.1979" }
%"struct.std::__1::__compressed_pair_elem.1979" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.1983" = type { %"class.blink::PersistentBase.1984" }
%"class.blink::PersistentBase.1984" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1989", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.2002" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1987", %"class.blink::Member.1757", %"class.blink::Member.1757", i8, [7 x i8] }>
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1963", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1989" = type { %"class.std::__1::__compressed_pair.1990" }
%"class.std::__1::__compressed_pair.1990" = type { %"struct.std::__1::__compressed_pair_elem.1991" }
%"struct.std::__1::__compressed_pair_elem.1991" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1992", %"class.absl::optional.798", i8, i8, %"class.WTF::Vector.1819" }
%"class.WTF::HashMap.1992" = type { %"class.WTF::HashTable.1993" }
%"class.WTF::HashTable.1993" = type <{ %"struct.WTF::KeyValuePair.1996"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1996" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2000" }
%"class.blink::Member.2000" = type { %"class.blink::MemberBase.2001" }
%"class.blink::MemberBase.2001" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2000" }
%"class.absl::optional.2002" = type { %"class.absl::optional_internal::optional_data.2003" }
%"class.absl::optional_internal::optional_data.2003" = type { %"class.absl::optional_internal::optional_data_base.2004" }
%"class.absl::optional_internal::optional_data_base.2004" = type { %"class.absl::optional_internal::optional_data_dtor_base.2005" }
%"class.absl::optional_internal::optional_data_dtor_base.2005" = type { i8, %union.anon.2006 }
%union.anon.2006 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.2007" = type { %"class.std::__1::__compressed_pair.2008" }
%"class.std::__1::__compressed_pair.2008" = type { %"struct.std::__1::__compressed_pair_elem.2009" }
%"struct.std::__1::__compressed_pair_elem.2009" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.2010", %"class.WTF::Vector.2010", %"class.WTF::HashMap.2015", %"class.WTF::Vector.2010", i8, [7 x i8] }>
%"class.WTF::HashMap.2015" = type { %"class.WTF::HashTable.2016" }
%"class.WTF::HashTable.2016" = type <{ %"struct.WTF::KeyValuePair.2019"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2019" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.2010" }
%"class.WTF::Vector.2010" = type { %"class.WTF::VectorBuffer.2011" }
%"class.WTF::VectorBuffer.2011" = type { %"class.WTF::VectorBufferBase.2012" }
%"class.WTF::VectorBufferBase.2012" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.2023" = type { %"class.std::__1::__compressed_pair.2024" }
%"class.std::__1::__compressed_pair.2024" = type { %"struct.std::__1::__compressed_pair_elem.2025" }
%"struct.std::__1::__compressed_pair_elem.2025" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.2026", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.2032", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.2038", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.2026" = type { %"class.std::__1::__compressed_pair.2027" }
%"class.std::__1::__compressed_pair.2027" = type { %"struct.std::__1::__compressed_pair_elem.2028" }
%"struct.std::__1::__compressed_pair_elem.2028" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.2032" = type { %"class.std::__1::__compressed_pair.2033" }
%"class.std::__1::__compressed_pair.2033" = type { %"struct.std::__1::__compressed_pair_elem.2034" }
%"struct.std::__1::__compressed_pair_elem.2034" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.2038" = type { %"class.blink::PersistentBase.2039" }
%"class.blink::PersistentBase.2039" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.1623 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1624" = type { %"class.WTF::VectorBuffer.1625" }
%"class.WTF::VectorBuffer.1625" = type { %"class.WTF::VectorBufferBase.1626", [8 x i8] }
%"class.WTF::VectorBufferBase.1626" = type { %class.scoped_refptr.1623*, i32, i32 }
%"class.std::__1::unique_ptr.1629" = type { %"class.std::__1::__compressed_pair.1630" }
%"class.std::__1::__compressed_pair.1630" = type { %"struct.std::__1::__compressed_pair_elem.1631" }
%"struct.std::__1::__compressed_pair_elem.1631" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1632", %"class.absl::optional.1637", %"class.absl::optional.1642" }
%"class.absl::optional.1632" = type { %"class.absl::optional_internal::optional_data.1633" }
%"class.absl::optional_internal::optional_data.1633" = type { %"class.absl::optional_internal::optional_data_base.1634" }
%"class.absl::optional_internal::optional_data_base.1634" = type { %"class.absl::optional_internal::optional_data_dtor_base.1635" }
%"class.absl::optional_internal::optional_data_dtor_base.1635" = type { i8, %union.anon.1636 }
%union.anon.1636 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1637" = type { %"class.absl::optional_internal::optional_data.1638" }
%"class.absl::optional_internal::optional_data.1638" = type { %"class.absl::optional_internal::optional_data_base.1639" }
%"class.absl::optional_internal::optional_data_base.1639" = type { %"class.absl::optional_internal::optional_data_dtor_base.1640" }
%"class.absl::optional_internal::optional_data_dtor_base.1640" = type { i8, [3 x i8], %union.anon.1641 }
%union.anon.1641 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1642" = type { %"class.absl::optional_internal::optional_data.1643" }
%"class.absl::optional_internal::optional_data.1643" = type { %"class.absl::optional_internal::optional_data_base.1644" }
%"class.absl::optional_internal::optional_data_base.1644" = type { %"class.absl::optional_internal::optional_data_dtor_base.1645" }
%"class.absl::optional_internal::optional_data_dtor_base.1645" = type { i8, %union.anon.1646 }
%union.anon.1646 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1650 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1603" = type { %"class.std::__1::__compressed_pair.1604" }
%"class.std::__1::__compressed_pair.1604" = type { %"struct.std::__1::__compressed_pair_elem.1605" }
%"struct.std::__1::__compressed_pair_elem.1605" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1606", %"class.absl::optional.1615" }
%"class.absl::optional.1606" = type { %"class.absl::optional_internal::optional_data.1607" }
%"class.absl::optional_internal::optional_data.1607" = type { %"class.absl::optional_internal::optional_data_base.1608" }
%"class.absl::optional_internal::optional_data_base.1608" = type { %"class.absl::optional_internal::optional_data_dtor_base.1609" }
%"class.absl::optional_internal::optional_data_dtor_base.1609" = type { i8, %union.anon.1610 }
%union.anon.1610 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1615" = type { %"class.absl::optional_internal::optional_data.1616" }
%"class.absl::optional_internal::optional_data.1616" = type { %"class.absl::optional_internal::optional_data_base.1617" }
%"class.absl::optional_internal::optional_data_base.1617" = type { %"class.absl::optional_internal::optional_data_dtor_base.1618" }
%"class.absl::optional_internal::optional_data_dtor_base.1618" = type { i8, %union.anon.1619 }
%union.anon.1619 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1651" = type { %"class.blink::PersistentBase.1652" }
%"class.blink::PersistentBase.1652" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1655", %"struct.blink::PhysicalRect", %"class.blink::Member.1665" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.1655" = type { %"class.std::__1::__compressed_pair.1656" }
%"class.std::__1::__compressed_pair.1656" = type { %"struct.std::__1::__compressed_pair_elem.1657" }
%"struct.std::__1::__compressed_pair_elem.1657" = type { %"class.WTF::HashSet.1658"* }
%"class.WTF::HashSet.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1665" = type { %"class.blink::MemberBase.1666" }
%"class.blink::MemberBase.1666" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.1667" = type { %"class.blink::PersistentBase.1668" }
%"class.blink::PersistentBase.1668" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1671", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.1671" = type { %"class.std::__1::__compressed_pair.1672" }
%"class.std::__1::__compressed_pair.1672" = type { %"struct.std::__1::__compressed_pair_elem.1673" }
%"struct.std::__1::__compressed_pair_elem.1673" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.1677" = type { %"class.std::__1::__compressed_pair.1678" }
%"class.std::__1::__compressed_pair.1678" = type { %"struct.std::__1::__compressed_pair_elem.1679" }
%"struct.std::__1::__compressed_pair_elem.1679" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1680", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1680" = type { %"class.WTF::HashTable.1683", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1683" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1686", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1686" = type { %"class.std::__1::__compressed_pair.1687" }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1689, %"class.std::__1::unique_ptr.1690", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1603", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1689 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.1975", i16, %class.scoped_refptr.1689 }
%"class.WTF::ThreadSafeRefCounted.1975" = type { %"class.base::RefCountedThreadSafe.1976" }
%"class.base::RefCountedThreadSafe.1976" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1690" = type { %"class.std::__1::__compressed_pair.1691" }
%"class.std::__1::__compressed_pair.1691" = type { %"struct.std::__1::__compressed_pair_elem.1692" }
%"struct.std::__1::__compressed_pair_elem.1692" = type { %"class.WTF::Vector.1693"* }
%"class.WTF::Vector.1693" = type { %"class.WTF::VectorBuffer.1694" }
%"class.WTF::VectorBuffer.1694" = type { %"class.WTF::VectorBufferBase.1695" }
%"class.WTF::VectorBufferBase.1695" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1704, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::ListItemOrdinal" = type <{ i32, i8, [3 x i8] }>
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.blink::LayoutListMarker" = type <{ %"class.blink::LayoutBox", %"class.WTF::String", %"class.blink::Persistent.306", %"class.blink::LayoutUnit", [4 x i8] }>
%"class.blink::ListMarker" = type { i8, [3 x i8] }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::LayoutOutsideListMarker" = type { %"class.blink::LayoutBlockFlow", %"class.blink::LayoutUnit", %"class.blink::ListMarker" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"struct.blink::PaintInfo" = type opaque
%"class.blink::ListItemPainter" = type { %"class.blink::LayoutListItem"* }
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGTableInterface" = type opaque
%"class.blink::LayoutNGTableSectionInterface" = type opaque
%"class.blink::LayoutNGTableRowInterface" = type opaque
%"class.blink::LayoutNGTableCellInterface" = type opaque
%"class.blink::LayoutNGGridInterface" = type opaque
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.WTF::Vector.2045" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.2026", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.WTF::Vector.2046" = type opaque
%"struct.blink::PaintInvalidatorContext" = type opaque
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::NGPhysicalBoxFragment" = type opaque
%"struct.blink::NGInlineNodeData" = type opaque
%class.anon.2091 = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2105" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2105" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2092", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2092" = type { %"class.std::__1::__vector_base.2093" }
%"class.std::__1::__vector_base.2093" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2100" }
%"class.std::__1::__compressed_pair.2100" = type { %"struct.std::__1::__compressed_pair_elem.2101" }
%"struct.std::__1::__compressed_pair_elem.2101" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2094", i64, i64 }
%"class.std::__1::unique_ptr.2094" = type { %"class.std::__1::__compressed_pair.2095" }
%"class.std::__1::__compressed_pair.2095" = type { %"struct.std::__1::__compressed_pair_elem.2096" }
%"struct.std::__1::__compressed_pair_elem.2096" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }

$_ZN5blink14LayoutListItemD0Ev = comdat any

$_ZNK5blink14LayoutListItem7GetNameEv = comdat any

$_ZN5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink11LayoutBlock13IsLayoutBlockEv = comdat any

$_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv = comdat any

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink14LayoutListItem8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10PaddingTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12PaddingRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject9BorderTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12BorderBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10BorderLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11BorderRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv = comdat any

$_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink9LayoutBox13IntrinsicSizeEv = comdat any

$_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ = comdat any

$_ZNK5blink11LayoutBlock15CurrentFragmentEv = comdat any

$_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ = comdat any

$_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv = comdat any

$_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv = comdat any

$_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv = comdat any

$_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv = comdat any

$_ZThn8_N5blink14LayoutListItemD1Ev = comdat any

$_ZThn8_N5blink14LayoutListItemD0Ev = comdat any

$_ZN5blink17ComputedStyleBase9SetHeightERKNS_6LengthE = comdat any

$_ZN5blink17ComputedStyleBase8SetWidthERKNS_6LengthE = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

@_ZTVN5blink14LayoutListItemE = hidden unnamed_addr constant { [223 x i8*], [7 x i8*] } { [223 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlowD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*)* @_ZN5blink14LayoutListItemD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i8*, i32)* @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutListItem"*)* @_ZNK5blink14LayoutListItem7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow11RemoveChildEPNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink14LayoutListItem5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*)* @_ZN5blink14LayoutListItem20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*)* @_ZN5blink14LayoutListItem12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*)* @_ZN5blink14LayoutListItem16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink15LayoutBlockFlow16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2045"*, i32)* @_ZNK5blink15LayoutBlockFlow13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2046"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink15LayoutBlockFlow15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i8)* @_ZNK5blink15LayoutBlockFlow28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutListItem"*, i32)* @_ZNK5blink14LayoutListItem8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink15LayoutBlockFlow15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink14LayoutListItem14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*)* @_ZN5blink14LayoutListItem15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*)* @_ZN5blink14LayoutListItem16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*)* @_ZN5blink14LayoutListItem21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*)* @_ZN5blink15LayoutBlockFlow20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)* @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i32, i1, i32, i32)* @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2045"*, i32)* @_ZNK5blink15LayoutBlockFlow20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2045"*)* @_ZNK5blink15LayoutBlockFlow17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink15LayoutBlockFlow14MoveChildrenToEPNS_20LayoutBoxModelObjectEPNS_12LayoutObjectES4_S4_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, i32)* @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*, i32)* @_ZNK5blink15LayoutBlockFlow19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*)* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock29ComputeIntrinsicLogicalWidthsEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink15LayoutBlockFlow15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (%"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15CurrentFragmentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i1)* @_ZN5blink15LayoutBlockFlow17UpdateBlockLayoutEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i1, i32)* @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i32)* @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*, i1)* @_ZN5blink14LayoutListItem21ComputeVisualOverflowEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*, i32, i1)* @_ZN5blink15LayoutBlockFlow21ComputeLayoutOverflowENS_10LayoutUnitEb to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*)* @_ZN5blink14LayoutListItem29AddLayoutOverflowFromChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow32UpdateLogicalWidthAndColumnWidthEv to i8*), i8* bitcast (%"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv to i8*), i8* bitcast (%"struct.blink::NGInlineNodeData"* (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlockFlow"*)* @_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutBlockFlow"*, i1, %"class.blink::SubtreeLayoutScope"*)* @_ZN5blink15LayoutBlockFlow26LayoutSpecialExcludedChildEbRNS_18SubtreeLayoutScopeE to i8*), i8* bitcast (%"class.blink::RootInlineBox"* (%"class.blink::LayoutBlockFlow"*)* @_ZN5blink15LayoutBlockFlow19CreateRootInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlockFlow"*, i1)* @_ZNK5blink15LayoutBlockFlow20TextAlignmentForLineEb to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutListItem"*)* @_ZThn8_N5blink14LayoutListItemD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutListItem"*)* @_ZThn8_N5blink14LayoutListItemD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@_ZN5blink26layout_invalidation_reason16kListValueChangeE = external constant [0 x i8], align 1
@_ZN5blink10html_names6kUlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names6kOlTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@.str = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"LayoutListItem\00", align 1

@_ZN5blink14LayoutListItemC1EPNS_7ElementE = hidden unnamed_addr alias void (%"class.blink::LayoutListItem"*, %"class.blink::Element"*), void (%"class.blink::LayoutListItem"*, %"class.blink::Element"*)* @_ZN5blink14LayoutListItemC2EPNS_7ElementE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItemC2EPNS_7ElementE(%"class.blink::LayoutListItem"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlowC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlockFlow"* %3, %"class.blink::ContainerNode"* %4) #10
  %5 = bitcast %"class.blink::LayoutListItem"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink14LayoutListItemE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [223 x i8*], [7 x i8*] }, { [223 x i8*], [7 x i8*] }* @_ZTVN5blink14LayoutListItemE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 1
  tail call void @_ZN5blink15ListItemOrdinalC1Ev(%"class.blink::ListItemOrdinal"* %6) #10
  %7 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, -8796227239937
  %13 = or i96 %12, 8796093022208
  store i96 %13, i96* %10, align 4
  tail call void @_ZN5blink12LayoutObject42RegisterSubtreeChangeListenerOnDescendantsEb(%"class.blink::LayoutObject"* %8, i1 zeroext true) #10
  %14 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %17, label %24

17:                                               ; preds = %2, %17
  %18 = phi %"class.blink::LayoutObject"* [ %20, %17 ], [ %8, %2 ]
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 7
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %17, label %24

24:                                               ; preds = %17, %2
  %25 = phi %"class.blink::Node"* [ %15, %2 ], [ %22, %17 ]
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %29, i64 0, i32 113
  %31 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %31, i64 0, i32 10
  %33 = load i32, i32* %32, align 4
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 4
  ret void
}

declare void @_ZN5blink15LayoutBlockFlowC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlockFlow"*, %"class.blink::ContainerNode"*) unnamed_addr #1

declare void @_ZN5blink15ListItemOrdinalC1Ev(%"class.blink::ListItemOrdinal"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject42RegisterSubtreeChangeListenerOnDescendantsEb(%"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem15WillBeDestroyedEv(%"class.blink::LayoutListItem"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::LayoutObject"* [ %9, %6 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %1
  %14 = phi %"class.blink::Node"* [ %4, %1 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 113
  %20 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutView"* %20, null
  br i1 %21, label %41, label %22

22:                                               ; preds = %13
  br i1 %5, label %23, label %30

23:                                               ; preds = %22, %23
  %24 = phi %"class.blink::LayoutObject"* [ %26, %23 ], [ %2, %22 ]
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 7
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %23, label %30

30:                                               ; preds = %23, %22
  %31 = phi %"class.blink::Node"* [ %4, %22 ], [ %28, %23 ]
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %35, i64 0, i32 113
  %37 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %37, i64 0, i32 10
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, -1
  store i32 %40, i32* %38, align 4
  br label %41

41:                                               ; preds = %13, %30
  %42 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlow15WillBeDestroyedEv(%"class.blink::LayoutBlockFlow"* %42) #10
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow15WillBeDestroyedEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutListItem"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlow14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"* %5, i32 %1, %"class.blink::ComputedStyle"* %2) #10
  %6 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = tail call %"class.blink::StyleImage"* @_ZNK5blink13ComputedStyle14ListStyleImageEv(%"class.blink::ComputedStyle"* %7) #10
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %10 = tail call %"class.blink::ListStyleTypeData"* @_ZNK5blink13ComputedStyle16GetListStyleTypeEv(%"class.blink::ComputedStyle"* %9) #10
  %11 = icmp eq %"class.blink::ListStyleTypeData"* %10, null
  br i1 %11, label %12, label %20

12:                                               ; preds = %3
  %13 = icmp eq %"class.blink::StyleImage"* %8, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %12
  %15 = bitcast %"class.blink::StyleImage"* %8 to i1 (%"class.blink::StyleImage"*)***
  %16 = load i1 (%"class.blink::StyleImage"*)**, i1 (%"class.blink::StyleImage"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %16, i64 6
  %18 = load i1 (%"class.blink::StyleImage"*)*, i1 (%"class.blink::StyleImage"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::StyleImage"* nonnull %8) #10
  br i1 %19, label %21, label %20

20:                                               ; preds = %3, %14
  tail call void @_ZN5blink12LayoutObject21NotifyOfSubtreeChangeEv(%"class.blink::LayoutObject"* %4) #10
  br label %21

21:                                               ; preds = %12, %20, %14
  %22 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %23 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %22 to i96*
  %24 = load i96, i96* %23, align 4
  %25 = and i96 %24, 16777216
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %29 = bitcast %"class.blink::Node"** %28 to %"class.blink::Element"**
  %30 = load %"class.blink::Element"*, %"class.blink::Element"** %29, align 8
  br label %31

31:                                               ; preds = %21, %27
  %32 = phi %"class.blink::Element"* [ %30, %27 ], [ null, %21 ]
  %33 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %32, i8 zeroext 5) #10
  %34 = icmp eq %"class.blink::LayoutObject"* %33, null
  br i1 %34, label %79, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.blink::LayoutObject"* %33 to i1 (%"class.blink::LayoutObject"*, i32)***
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* nonnull %33, i32 15) #10
  %41 = bitcast %"class.blink::LayoutObject"* %33 to %"class.blink::LayoutListMarker"*
  %42 = select i1 %40, %"class.blink::LayoutListMarker"* %41, %"class.blink::LayoutListMarker"* null
  br i1 %40, label %43, label %44

43:                                               ; preds = %35
  tail call void @_ZN5blink16LayoutListMarker25UpdateMarkerImageIfNeededEPNS_10StyleImageE(%"class.blink::LayoutListMarker"* nonnull %42, %"class.blink::StyleImage"* %8) #10
  br label %46

44:                                               ; preds = %35
  %45 = tail call %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull %33) #10
  tail call void @_ZN5blink10ListMarker27UpdateMarkerContentIfNeededERNS_12LayoutObjectE(%"class.blink::ListMarker"* %45, %"class.blink::LayoutObject"* nonnull dereferenceable(88) %33) #10
  br label %46

46:                                               ; preds = %44, %43
  %47 = phi %"class.blink::ListMarker"* [ %45, %44 ], [ null, %43 ]
  %48 = icmp eq %"class.blink::ComputedStyle"* %2, null
  br i1 %48, label %79, label %49

49:                                               ; preds = %46
  %50 = tail call %"class.blink::ListStyleTypeData"* @_ZNK5blink13ComputedStyle16GetListStyleTypeEv(%"class.blink::ComputedStyle"* nonnull %2) #10
  %51 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %52 = tail call %"class.blink::ListStyleTypeData"* @_ZNK5blink13ComputedStyle16GetListStyleTypeEv(%"class.blink::ComputedStyle"* %51) #10
  %53 = icmp eq %"class.blink::ListStyleTypeData"* %50, %52
  br i1 %53, label %79, label %54

54:                                               ; preds = %49
  %55 = icmp ne %"class.blink::ListStyleTypeData"* %50, null
  %56 = icmp ne %"class.blink::ListStyleTypeData"* %52, null
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %76

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.blink::ListStyleTypeData", %"class.blink::ListStyleTypeData"* %50, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %"class.blink::ListStyleTypeData", %"class.blink::ListStyleTypeData"* %52, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %60, %62
  br i1 %63, label %64, label %76

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::ListStyleTypeData", %"class.blink::ListStyleTypeData"* %50, i64 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ListStyleTypeData", %"class.blink::ListStyleTypeData"* %52, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %66, %68
  br i1 %69, label %70, label %76

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::ListStyleTypeData", %"class.blink::ListStyleTypeData"* %50, i64 0, i32 2, i32 0, i32 0
  %72 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::ListStyleTypeData", %"class.blink::ListStyleTypeData"* %52, i64 0, i32 2, i32 0, i32 0
  %74 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %73, align 8
  %75 = icmp eq %"class.blink::TreeScope"* %72, %74
  br i1 %75, label %79, label %76

76:                                               ; preds = %70, %58, %64, %54
  br i1 %40, label %77, label %78

77:                                               ; preds = %76
  tail call void @_ZN5blink16LayoutListMarker20ListStyleTypeChangedEv(%"class.blink::LayoutListMarker"* nonnull %42) #10
  br label %79

78:                                               ; preds = %76
  tail call void @_ZN5blink10ListMarker20ListStyleTypeChangedERNS_12LayoutObjectE(%"class.blink::ListMarker"* %47, %"class.blink::LayoutObject"* nonnull dereferenceable(88) %33) #10
  br label %79

79:                                               ; preds = %70, %46, %49, %77, %78, %31
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::StyleImage"* @_ZNK5blink13ComputedStyle14ListStyleImageEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare %"class.blink::ListStyleTypeData"* @_ZNK5blink13ComputedStyle16GetListStyleTypeEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject21NotifyOfSubtreeChangeEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink16LayoutListMarker25UpdateMarkerImageIfNeededEPNS_10StyleImageE(%"class.blink::LayoutListMarker"*, %"class.blink::StyleImage"*) local_unnamed_addr #1

declare void @_ZN5blink10ListMarker27UpdateMarkerContentIfNeededERNS_12LayoutObjectE(%"class.blink::ListMarker"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare void @_ZN5blink16LayoutListMarker20ListStyleTypeChangedEv(%"class.blink::LayoutListMarker"*) local_unnamed_addr #1

declare void @_ZN5blink10ListMarker20ListStyleTypeChangedERNS_12LayoutObjectE(%"class.blink::ListMarker"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem18UpdateCounterStyleEv(%"class.blink::LayoutListItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = tail call %"class.blink::ListStyleTypeData"* @_ZNK5blink13ComputedStyle16GetListStyleTypeEv(%"class.blink::ComputedStyle"* %3) #10
  %5 = icmp eq %"class.blink::ListStyleTypeData"* %4, null
  br i1 %5, label %51, label %6

6:                                                ; preds = %1
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %8 = tail call %"class.blink::ListStyleTypeData"* @_ZNK5blink13ComputedStyle16GetListStyleTypeEv(%"class.blink::ComputedStyle"* %7) #10
  %9 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %12, label %21

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %12, %14
  %15 = phi %"class.blink::LayoutObject"* [ %17, %14 ], [ %13, %12 ]
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 7
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 6, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %14, label %21

21:                                               ; preds = %14, %6
  %22 = phi %"class.blink::Node"* [ %10, %6 ], [ %19, %14 ]
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %27 = tail call zeroext i1 @_ZNK5blink17ListStyleTypeData28IsCounterStyleReferenceValidERNS_8DocumentE(%"class.blink::ListStyleTypeData"* %8, %"class.blink::Document"* dereferenceable(2848) %26) #10
  br i1 %27, label %51, label %28

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 16777216
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::Node"** %9 to %"class.blink::Element"**
  %36 = load %"class.blink::Element"*, %"class.blink::Element"** %35, align 8
  br label %37

37:                                               ; preds = %28, %34
  %38 = phi %"class.blink::Element"* [ %36, %34 ], [ null, %28 ]
  %39 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %38, i8 zeroext 5) #10
  %40 = icmp eq %"class.blink::LayoutObject"* %39, null
  br i1 %40, label %51, label %41

41:                                               ; preds = %37
  %42 = bitcast %"class.blink::LayoutObject"* %39 to i1 (%"class.blink::LayoutObject"*, i32)***
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* nonnull %39, i32 15) #10
  br i1 %46, label %47, label %49

47:                                               ; preds = %41
  %48 = bitcast %"class.blink::LayoutObject"* %39 to %"class.blink::LayoutListMarker"*
  tail call void @_ZN5blink16LayoutListMarker19CounterStyleChangedEv(%"class.blink::LayoutListMarker"* nonnull %48) #10
  br label %51

49:                                               ; preds = %41
  %50 = tail call %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull %39) #10
  tail call void @_ZN5blink10ListMarker19CounterStyleChangedERNS_12LayoutObjectE(%"class.blink::ListMarker"* %50, %"class.blink::LayoutObject"* nonnull dereferenceable(88) %39) #10
  br label %51

51:                                               ; preds = %49, %37, %47, %1, %21
  ret void
}

declare zeroext i1 @_ZNK5blink17ListStyleTypeData28IsCounterStyleReferenceValidERNS_8DocumentE(%"class.blink::ListStyleTypeData"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #1

declare void @_ZN5blink16LayoutListMarker19CounterStyleChangedEv(%"class.blink::LayoutListMarker"*) local_unnamed_addr #1

declare void @_ZN5blink10ListMarker19CounterStyleChangedERNS_12LayoutObjectE(%"class.blink::ListMarker"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem16InsertedIntoTreeEv(%"class.blink::LayoutListItem"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"* %3) #10
  tail call void @_ZN5blink15ListItemOrdinal21ItemInsertedOrRemovedEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %2) #10
  ret void
}

declare void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink15ListItemOrdinal21ItemInsertedOrRemovedEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem21WillBeRemovedFromTreeEv(%"class.blink::LayoutListItem"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"* %3) #10
  tail call void @_ZN5blink15ListItemOrdinal21ItemInsertedOrRemovedEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %2) #10
  ret void
}

declare void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem16SubtreeDidChangeEv(%"class.blink::LayoutListItem"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 16777216
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = bitcast %"class.blink::Node"** %9 to %"class.blink::Element"**
  %11 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi %"class.blink::Element"* [ %11, %8 ], [ null, %1 ]
  %14 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %13, i8 zeroext 5) #10
  %15 = icmp eq %"class.blink::LayoutObject"* %14, null
  br i1 %15, label %36, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::LayoutObject"* %14 to i1 (%"class.blink::LayoutObject"*, i32)***
  %18 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %17, align 8
  %19 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %18, i64 92
  %20 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %19, align 8
  %21 = tail call zeroext i1 %20(%"class.blink::LayoutObject"* nonnull %14, i32 15) #10
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::LayoutObject"* %14 to %"class.blink::LayoutListMarker"*
  %24 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = tail call %"class.blink::StyleImage"* @_ZNK5blink13ComputedStyle14ListStyleImageEv(%"class.blink::ComputedStyle"* %25) #10
  tail call void @_ZN5blink16LayoutListMarker25UpdateMarkerImageIfNeededEPNS_10StyleImageE(%"class.blink::LayoutListMarker"* nonnull %23, %"class.blink::StyleImage"* %26) #10
  br label %31

27:                                               ; preds = %16
  %28 = tail call %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull %14) #10
  %29 = icmp eq %"class.blink::ListMarker"* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %27
  tail call void @_ZN5blink10ListMarker27UpdateMarkerContentIfNeededERNS_12LayoutObjectE(%"class.blink::ListMarker"* nonnull %28, %"class.blink::LayoutObject"* nonnull dereferenceable(88) %14) #10
  br label %31

31:                                               ; preds = %30, %27, %22
  %32 = tail call zeroext i1 @_ZN5blink14LayoutListItem20UpdateMarkerLocationEv(%"class.blink::LayoutListItem"* %0)
  br i1 %32, label %33, label %36

33:                                               ; preds = %31
  %34 = tail call zeroext i1 @_ZNK5blink12LayoutObject18IsInsideListMarkerEv(%"class.blink::LayoutObject"* nonnull %14) #10
  br i1 %34, label %35, label %36

35:                                               ; preds = %33
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* %2, i32 1) #10
  br label %36

36:                                               ; preds = %33, %35, %31, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14LayoutListItem20UpdateMarkerLocationEv(%"class.blink::LayoutListItem"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 16777216
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = bitcast %"class.blink::Node"** %9 to %"class.blink::Element"**
  %11 = load %"class.blink::Element"*, %"class.blink::Element"** %10, align 8
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi %"class.blink::Element"* [ %11, %8 ], [ null, %1 ]
  %14 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %13, i8 zeroext 5) #10
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 7
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = load i96, i96* %4, align 4
  %18 = and i96 %17, 16777216
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %20, label %54

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %54, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::Node"* %22 to i8 (%"class.blink::Node"*)***
  %26 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %25, align 8
  %27 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %26, i64 34
  %28 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %27, align 8
  %29 = tail call zeroext i8 %28(%"class.blink::Node"* nonnull %22) #10
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %54, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.blink::LayoutObject"* %16 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %33 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %33, i64 13
  %35 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %34, align 8
  %36 = tail call %"class.blink::LayoutObjectChildList"* %35(%"class.blink::LayoutObject"* %16) #10
  %37 = icmp eq %"class.blink::LayoutObjectChildList"* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %36, i64 0, i32 0
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  br label %41

41:                                               ; preds = %31, %38
  %42 = phi %"class.blink::LayoutObject"* [ %40, %38 ], [ null, %31 ]
  %43 = icmp eq %"class.blink::LayoutObject"* %14, %42
  br i1 %43, label %54, label %44

44:                                               ; preds = %41
  %45 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %46 = icmp eq %"class.blink::LayoutObject"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::LayoutObject"* %45 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %49 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %49, i64 18
  %51 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %50, align 8
  tail call void %51(%"class.blink::LayoutObject"* nonnull %45, %"class.blink::LayoutObject"* %14) #10
  br label %52

52:                                               ; preds = %44, %47
  %53 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlockFlow"* %53, %"class.blink::LayoutObject"* %14, %"class.blink::LayoutObject"* %42) #10
  br label %54

54:                                               ; preds = %24, %12, %20, %52, %41
  %55 = tail call zeroext i1 @_ZNK5blink12LayoutObject19IsOutsideListMarkerEv(%"class.blink::LayoutObject"* %14) #10
  br i1 %55, label %56, label %107

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  %58 = tail call fastcc %"class.blink::LayoutObject"* @_ZN5blink12_GLOBAL__N_123GetParentOfFirstLineBoxEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"* %57)
  %59 = icmp eq %"class.blink::LayoutObject"* %58, null
  br i1 %59, label %107, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 4
  %62 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %61 to i96*
  %63 = load i96, i96* %62, align 4
  %64 = and i96 %63, 8589934592
  %65 = icmp eq i96 %64, 0
  br i1 %65, label %75, label %66

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 5, i32 0
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 9
  %70 = bitcast [20 x i8]* %69 to i160*
  %71 = load i160, i160* %70, align 8
  %72 = lshr i160 %71, 74
  %73 = trunc i160 %72 to i32
  %74 = and i32 %73, 7
  switch i32 %74, label %105 [
    i32 5, label %75
    i32 2, label %75
  ]

75:                                               ; preds = %66, %66, %60
  %76 = bitcast %"class.blink::LayoutObject"* %58 to i1 (%"class.blink::LayoutObject"*)***
  %77 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %77, i64 24
  %79 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %78, align 8
  %80 = tail call zeroext i1 %79(%"class.blink::LayoutObject"* nonnull %58) #10
  br i1 %80, label %81, label %105

81:                                               ; preds = %75
  %82 = load i96, i96* %62, align 4
  %83 = and i96 %82, 67108864
  %84 = icmp eq i96 %83, 0
  br i1 %84, label %107, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 7
  %87 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %86, align 8
  %88 = icmp eq %"class.blink::LayoutObject"* %87, null
  br i1 %88, label %105, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %87, i64 0, i32 5, i32 0
  %91 = bitcast %"class.blink::ComputedStyle"** %90 to %"class.blink::ComputedStyleBase"**
  %92 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %92, i64 0, i32 9
  %94 = bitcast [20 x i8]* %93 to i160*
  %95 = load i160, i160* %94, align 8
  %96 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 5, i32 0
  %97 = bitcast %"class.blink::ComputedStyle"** %96 to %"class.blink::ComputedStyleBase"**
  %98 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %98, i64 0, i32 9
  %100 = bitcast [20 x i8]* %99 to i160*
  %101 = load i160, i160* %100, align 8
  %102 = xor i160 %101, %95
  %103 = and i160 %102, 15211807202738752817960438464512
  %104 = icmp eq i160 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %89, %66, %85, %75
  %106 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 2
  store i8 1, i8* %106, align 8
  br label %107

107:                                              ; preds = %89, %81, %56, %54, %105
  %108 = phi i1 [ true, %105 ], [ true, %89 ], [ true, %81 ], [ false, %56 ], [ false, %54 ]
  %109 = phi %"class.blink::LayoutObject"* [ %58, %105 ], [ %58, %89 ], [ %58, %81 ], [ null, %56 ], [ null, %54 ]
  %110 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 2
  %111 = load i8, i8* %110, align 8, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %115, label %113

113:                                              ; preds = %107
  %114 = tail call zeroext i1 @_ZN5blink14LayoutListItem29PrepareForBlockDirectionAlignEPKNS_12LayoutObjectE(%"class.blink::LayoutListItem"* %0, %"class.blink::LayoutObject"* %109)
  br label %251

115:                                              ; preds = %107
  br i1 %108, label %185, label %116

116:                                              ; preds = %115
  %117 = icmp eq %"class.blink::LayoutObject"* %16, null
  br i1 %117, label %190, label %118

118:                                              ; preds = %116
  %119 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 4
  %120 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %119 to i96*
  %121 = load i96, i96* %120, align 4
  %122 = and i96 %121, 16777216
  %123 = icmp eq i96 %122, 0
  br i1 %123, label %153, label %124

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 5, i32 0
  %126 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %126, i64 0, i32 0, i32 9
  %128 = bitcast [20 x i8]* %127 to i160*
  %129 = load i160, i160* %128, align 8
  %130 = lshr i160 %129, 32
  %131 = trunc i160 %130 to i32
  %132 = and i32 %131, 31
  switch i32 %132, label %153 [
    i32 1, label %133
    i32 14, label %133
  ]

133:                                              ; preds = %124, %124
  %134 = and i160 %129, 2113929216
  %135 = icmp eq i160 %134, 0
  br i1 %135, label %136, label %153

136:                                              ; preds = %133
  %137 = bitcast %"class.blink::LayoutObject"* %16 to i1 (%"class.blink::LayoutObject"*)***
  %138 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %137, align 8
  %139 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %138, i64 23
  %140 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %139, align 8
  %141 = tail call zeroext i1 %140(%"class.blink::LayoutObject"* nonnull %16) #10
  br i1 %141, label %142, label %153

142:                                              ; preds = %136
  %143 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %137, align 8
  %144 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %143, i64 25
  %145 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %144, align 8
  %146 = tail call zeroext i1 %145(%"class.blink::LayoutObject"* nonnull %16) #10
  br i1 %146, label %153, label %147

147:                                              ; preds = %142
  %148 = bitcast %"class.blink::LayoutObject"* %16 to i1 (%"class.blink::LayoutObject"*, i32)***
  %149 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %148, align 8
  %150 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %149, i64 92
  %151 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %150, align 8
  %152 = tail call zeroext i1 %151(%"class.blink::LayoutObject"* nonnull %16, i32 20) #10
  br i1 %152, label %153, label %162

153:                                              ; preds = %147, %124, %118, %133, %136, %142
  %154 = bitcast %"class.blink::LayoutObject"* %16 to i1 (%"class.blink::LayoutObject"*)***
  %155 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %154, align 8
  %156 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %155, i64 25
  %157 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %156, align 8
  %158 = tail call zeroext i1 %157(%"class.blink::LayoutObject"* nonnull %16) #10
  %159 = xor i1 %158, true
  %160 = icmp eq %"class.blink::LayoutObject"* %16, %2
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %164

162:                                              ; preds = %147
  %163 = icmp eq %"class.blink::LayoutObject"* %16, %2
  br i1 %163, label %185, label %164

164:                                              ; preds = %153, %162
  br label %165

165:                                              ; preds = %164, %183
  %166 = phi %"class.blink::LayoutObject"* [ %168, %183 ], [ %16, %164 ]
  %167 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %166, i64 0, i32 7
  %168 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %167, align 8
  %169 = icmp eq %"class.blink::LayoutObject"* %168, null
  br i1 %169, label %185, label %170

170:                                              ; preds = %165
  %171 = bitcast %"class.blink::LayoutObject"* %168 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %172 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %171, align 8
  %173 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %172, i64 13
  %174 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %173, align 8
  %175 = tail call %"class.blink::LayoutObjectChildList"* %174(%"class.blink::LayoutObject"* nonnull %168) #10
  %176 = icmp eq %"class.blink::LayoutObjectChildList"* %175, null
  br i1 %176, label %180, label %177

177:                                              ; preds = %170
  %178 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %175, i64 0, i32 0
  %179 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %178, align 8
  br label %180

180:                                              ; preds = %177, %170
  %181 = phi %"class.blink::LayoutObject"* [ %179, %177 ], [ null, %170 ]
  %182 = icmp eq %"class.blink::LayoutObject"* %166, %181
  br i1 %182, label %183, label %185

183:                                              ; preds = %180
  %184 = icmp eq %"class.blink::LayoutObject"* %168, %2
  br i1 %184, label %185, label %165

185:                                              ; preds = %180, %165, %183, %153, %162, %115
  %186 = phi %"class.blink::LayoutObject"* [ %109, %115 ], [ %2, %153 ], [ %2, %162 ], [ %16, %183 ], [ %16, %165 ], [ %2, %180 ]
  %187 = icmp ne %"class.blink::LayoutObject"* %16, null
  %188 = icmp eq %"class.blink::LayoutObject"* %16, %186
  %189 = and i1 %187, %188
  br i1 %189, label %251, label %190

190:                                              ; preds = %116, %185
  %191 = phi %"class.blink::LayoutObject"* [ %186, %185 ], [ %2, %116 ]
  %192 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %193 = icmp eq %"class.blink::LayoutObject"* %192, null
  br i1 %193, label %199, label %194

194:                                              ; preds = %190
  %195 = bitcast %"class.blink::LayoutObject"* %192 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %196 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %195, align 8
  %197 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %196, i64 18
  %198 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %197, align 8
  tail call void %198(%"class.blink::LayoutObject"* nonnull %192, %"class.blink::LayoutObject"* %14) #10
  br label %199

199:                                              ; preds = %190, %194
  %200 = bitcast %"class.blink::LayoutObject"* %191 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %201 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %200, align 8
  %202 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %201, i64 13
  %203 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %202, align 8
  %204 = tail call %"class.blink::LayoutObjectChildList"* %203(%"class.blink::LayoutObject"* %191) #10
  %205 = icmp eq %"class.blink::LayoutObjectChildList"* %204, null
  br i1 %205, label %231, label %206

206:                                              ; preds = %199
  %207 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %204, i64 0, i32 0
  %208 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %207, align 8
  %209 = icmp eq %"class.blink::LayoutObject"* %208, null
  br i1 %209, label %231, label %210

210:                                              ; preds = %206, %227
  %211 = phi %"class.blink::LayoutObject"* [ %229, %227 ], [ %208, %206 ]
  %212 = bitcast %"class.blink::LayoutObject"* %211 to i1 (%"class.blink::LayoutObject"*, i32)***
  %213 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %212, align 8
  %214 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %213, i64 92
  %215 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %214, align 8
  %216 = tail call zeroext i1 %215(%"class.blink::LayoutObject"* nonnull %211, i32 15) #10
  br i1 %216, label %227, label %217

217:                                              ; preds = %210
  %218 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %212, align 8
  %219 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %218, i64 92
  %220 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %219, align 8
  %221 = tail call zeroext i1 %220(%"class.blink::LayoutObject"* nonnull %211, i32 13) #10
  br i1 %221, label %227, label %222

222:                                              ; preds = %217
  %223 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %212, align 8
  %224 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %223, i64 92
  %225 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %224, align 8
  %226 = tail call zeroext i1 %225(%"class.blink::LayoutObject"* nonnull %211, i32 36) #10
  br i1 %226, label %227, label %231

227:                                              ; preds = %222, %217, %210
  %228 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %211, i64 0, i32 9
  %229 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %228, align 8
  %230 = icmp eq %"class.blink::LayoutObject"* %229, null
  br i1 %230, label %231, label %210

231:                                              ; preds = %222, %227, %199, %206
  %232 = phi %"class.blink::LayoutObject"* [ null, %206 ], [ null, %199 ], [ %211, %222 ], [ null, %227 ]
  %233 = bitcast %"class.blink::LayoutObject"* %191 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %234 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %233, align 8
  %235 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %234, i64 16
  %236 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %235, align 8
  tail call void %236(%"class.blink::LayoutObject"* %191, %"class.blink::LayoutObject"* %14, %"class.blink::LayoutObject"* %232) #10
  %237 = bitcast %"class.blink::LayoutObject"* %14 to i1 (%"class.blink::LayoutObject"*, i32)***
  %238 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %237, align 8
  %239 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %238, i64 92
  %240 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %239, align 8
  %241 = tail call zeroext i1 %240(%"class.blink::LayoutObject"* %14, i32 15) #10
  br i1 %241, label %242, label %244

242:                                              ; preds = %231
  %243 = bitcast %"class.blink::LayoutObject"* %14 to %"class.blink::LayoutListMarker"*
  tail call void @_ZN5blink16LayoutListMarker13UpdateMarginsEv(%"class.blink::LayoutListMarker"* %243) #10
  br label %251

244:                                              ; preds = %231
  %245 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %237, align 8
  %246 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %245, i64 92
  %247 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %246, align 8
  %248 = tail call zeroext i1 %247(%"class.blink::LayoutObject"* %14, i32 36) #10
  br i1 %248, label %249, label %251

249:                                              ; preds = %244
  %250 = bitcast %"class.blink::LayoutObject"* %14 to %"class.blink::LayoutOutsideListMarker"*
  tail call void @_ZN5blink23LayoutOutsideListMarker13UpdateMarginsEv(%"class.blink::LayoutOutsideListMarker"* %250) #10
  br label %251

251:                                              ; preds = %185, %242, %249, %244, %113
  %252 = phi i1 [ %114, %113 ], [ true, %244 ], [ true, %249 ], [ true, %242 ], [ false, %185 ]
  ret i1 %252
}

declare zeroext i1 @_ZNK5blink12LayoutObject18IsInsideListMarkerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink14LayoutListItem5ValueEv(%"class.blink::LayoutListItem"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 16777216
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  br label %11

11:                                               ; preds = %1, %8
  %12 = phi %"class.blink::Node"* [ %10, %8 ], [ null, %1 ]
  %13 = tail call i32 @_ZNK5blink15ListItemOrdinal5ValueERKNS_4NodeE(%"class.blink::ListItemOrdinal"* %2, %"class.blink::Node"* dereferenceable(64) %12) #10
  ret i32 %13
}

declare i32 @_ZNK5blink15ListItemOrdinal5ValueERKNS_4NodeE(%"class.blink::ListItemOrdinal"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink14LayoutListItem7IsEmptyEv(%"class.blink::LayoutListItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 16777216
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %11 = bitcast %"class.blink::Node"** %10 to %"class.blink::Element"**
  %12 = load %"class.blink::Element"*, %"class.blink::Element"** %11, align 8
  br label %13

13:                                               ; preds = %1, %9
  %14 = phi %"class.blink::Element"* [ %12, %9 ], [ null, %1 ]
  %15 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %14, i8 zeroext 5) #10
  %16 = icmp eq %"class.blink::LayoutObject"* %3, %15
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem24UpdateMarkerTextIfNeededEv(%"class.blink::LayoutListItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 16777216
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %9 = bitcast %"class.blink::Node"** %8 to %"class.blink::Element"**
  %10 = load %"class.blink::Element"*, %"class.blink::Element"** %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi %"class.blink::Element"* [ %10, %7 ], [ null, %1 ]
  %13 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %12, i8 zeroext 5) #10
  %14 = tail call %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* %13) #10
  %15 = icmp eq %"class.blink::ListMarker"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::ListMarker", %"class.blink::ListMarker"* %14, i64 0, i32 0
  %18 = load i8, i8* %17, align 4
  %19 = and i8 %18, 7
  %20 = icmp eq i8 %19, 1
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  tail call void @_ZN5blink10ListMarker16UpdateMarkerTextERNS_12LayoutObjectE(%"class.blink::ListMarker"* nonnull %14, %"class.blink::LayoutObject"* dereferenceable(88) %13) #10
  br label %22

22:                                               ; preds = %21, %16, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14LayoutListItem29PrepareForBlockDirectionAlignEPKNS_12LayoutObjectE(%"class.blink::LayoutListItem"*, %"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length", align 4
  %4 = alloca %"class.blink::Length", align 4
  %5 = alloca %"class.blink::Length", align 4
  %6 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 16777216
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %12, label %16

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %14 = bitcast %"class.blink::Node"** %13 to %"class.blink::Element"**
  %15 = load %"class.blink::Element"*, %"class.blink::Element"** %14, align 8
  br label %16

16:                                               ; preds = %2, %12
  %17 = phi %"class.blink::Element"* [ %15, %12 ], [ null, %2 ]
  %18 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %17, i8 zeroext 5) #10
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 7
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = tail call zeroext i1 @_ZNK5blink12LayoutObject18IsInsideListMarkerEv(%"class.blink::LayoutObject"* %18) #10
  %22 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %22, label %92, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 16777216
  %28 = icmp eq i96 %27, 0
  br i1 %28, label %203, label %29

29:                                               ; preds = %23
  %30 = icmp ne %"class.blink::LayoutObject"* %1, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = tail call zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"* nonnull %1, %"class.blink::LayoutObject"* nonnull %20) #10
  br label %33

33:                                               ; preds = %31, %29
  %34 = phi i1 [ false, %29 ], [ %32, %31 ]
  %35 = or i1 %21, %34
  br i1 %35, label %36, label %81

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8
  %42 = and i160 %41, 15211807202738752817960438464512
  %43 = icmp eq i160 %42, 0
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %38, i64 0, i32 0, i32 5, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %45, i64 0, i32 3
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %45, i64 0, i32 8
  %48 = select i1 %43, %"class.blink::Length"* %46, %"class.blink::Length"* %47
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 8
  br i1 %51, label %71, label %52

52:                                               ; preds = %36
  %53 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 3
  %54 = load i8, i8* %53, align 2, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.blink::Length"* %48 to float*
  %58 = load float, float* %57, align 4
  %59 = fcmp oeq float %58, 0.000000e+00
  br i1 %59, label %64, label %71

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %71

64:                                               ; preds = %56, %60
  %65 = bitcast %"class.blink::Length"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %65, i8 0, i64 7, i1 false) #10
  call fastcc void @_ZN5blink12_GLOBAL__N_118ForceLogicalHeightERNS_12LayoutObjectERKNS_6LengthE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %20, %"class.blink::Length"* nonnull dereferenceable(8) %3)
  %66 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, 8
  br i1 %68, label %69, label %70

69:                                               ; preds = %64
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #10
  br label %70

70:                                               ; preds = %64, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #10
  br label %71

71:                                               ; preds = %36, %56, %70, %60
  %72 = xor i1 %21, %34
  br i1 %72, label %73, label %203

73:                                               ; preds = %71
  %74 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %75 = icmp eq %"class.blink::LayoutObject"* %74, null
  br i1 %75, label %92, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.blink::LayoutObject"* %74 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %78 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %78, i64 18
  %80 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %79, align 8
  call void %80(%"class.blink::LayoutObject"* nonnull %74, %"class.blink::LayoutObject"* %18) #10
  br label %92

81:                                               ; preds = %33
  br i1 %30, label %82, label %203

82:                                               ; preds = %81
  %83 = bitcast %"class.blink::Length"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #10
  %84 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 0, i32 0
  store i32 0, i32* %84, align 4, !alias.scope !3
  %85 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 1
  store i8 0, i8* %85, align 4, !alias.scope !3
  %86 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 2
  store i8 2, i8* %86, align 1, !alias.scope !3
  %87 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %4, i64 0, i32 3
  store i8 0, i8* %87, align 2, !alias.scope !3
  call fastcc void @_ZN5blink12_GLOBAL__N_118ForceLogicalHeightERNS_12LayoutObjectERKNS_6LengthE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %20, %"class.blink::Length"* nonnull dereferenceable(8) %4)
  %88 = load i8, i8* %86, align 1
  %89 = icmp eq i8 %88, 8
  br i1 %89, label %90, label %91

90:                                               ; preds = %82
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %4) #10
  br label %91

91:                                               ; preds = %82, %90
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #10
  br label %203

92:                                               ; preds = %16, %73, %76
  %93 = bitcast %"class.blink::LayoutListItem"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %94 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %93, align 8
  %95 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %94, i64 13
  %96 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %95, align 8
  %97 = call %"class.blink::LayoutObjectChildList"* %96(%"class.blink::LayoutObject"* %6) #10
  %98 = icmp eq %"class.blink::LayoutObjectChildList"* %97, null
  br i1 %98, label %185, label %99

99:                                               ; preds = %92
  %100 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %97, i64 0, i32 0
  %101 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %100, align 8
  %102 = icmp eq %"class.blink::LayoutObject"* %101, null
  br i1 %102, label %185, label %103

103:                                              ; preds = %99, %120
  %104 = phi %"class.blink::LayoutObject"* [ %122, %120 ], [ %101, %99 ]
  %105 = bitcast %"class.blink::LayoutObject"* %104 to i1 (%"class.blink::LayoutObject"*, i32)***
  %106 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %105, align 8
  %107 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %106, i64 92
  %108 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %107, align 8
  %109 = call zeroext i1 %108(%"class.blink::LayoutObject"* nonnull %104, i32 15) #10
  br i1 %109, label %120, label %110

110:                                              ; preds = %103
  %111 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %105, align 8
  %112 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %111, i64 92
  %113 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %112, align 8
  %114 = call zeroext i1 %113(%"class.blink::LayoutObject"* nonnull %104, i32 13) #10
  br i1 %114, label %120, label %115

115:                                              ; preds = %110
  %116 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %105, align 8
  %117 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %116, i64 92
  %118 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, align 8
  %119 = call zeroext i1 %118(%"class.blink::LayoutObject"* nonnull %104, i32 36) #10
  br i1 %119, label %120, label %124

120:                                              ; preds = %115, %110, %103
  %121 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 9
  %122 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %121, align 8
  %123 = icmp eq %"class.blink::LayoutObject"* %122, null
  br i1 %123, label %185, label %103

124:                                              ; preds = %115
  br i1 %21, label %185, label %125

125:                                              ; preds = %124
  %126 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %104, i64 0, i32 4
  %127 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %126 to i96*
  %128 = load i96, i96* %127, align 4
  %129 = and i96 %128, 134217728
  %130 = icmp eq i96 %129, 0
  br i1 %130, label %131, label %185

131:                                              ; preds = %125
  %132 = call %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"* %6, i32 1) #10
  %133 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %133, label %145, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %132, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.blink::Length"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #10
  %137 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 0, i32 0
  store i32 0, i32* %137, align 4, !alias.scope !6
  %138 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 1
  store i8 0, i8* %138, align 4, !alias.scope !6
  %139 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  store i8 2, i8* %139, align 1, !alias.scope !6
  %140 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 3
  store i8 0, i8* %140, align 2, !alias.scope !6
  call fastcc void @_ZN5blink12_GLOBAL__N_118ForceLogicalHeightERNS_12LayoutObjectERKNS_6LengthE(%"class.blink::LayoutObject"* dereferenceable(88) %135, %"class.blink::Length"* nonnull dereferenceable(8) %5)
  %141 = load i8, i8* %139, align 1
  %142 = icmp eq i8 %141, 8
  br i1 %142, label %143, label %144

143:                                              ; preds = %134
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #10
  br label %144

144:                                              ; preds = %134, %143
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #10
  br label %145

145:                                              ; preds = %131, %144
  %146 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %132, i64 0, i32 0, i32 0, i32 0
  %147 = bitcast %"class.blink::LayoutBlock"* %132 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %148 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %147, align 8
  %149 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %148, i64 13
  %150 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %149, align 8
  %151 = call %"class.blink::LayoutObjectChildList"* %150(%"class.blink::LayoutObject"* %146) #10
  %152 = icmp eq %"class.blink::LayoutObjectChildList"* %151, null
  br i1 %152, label %178, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %151, i64 0, i32 0
  %155 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %154, align 8
  %156 = icmp eq %"class.blink::LayoutObject"* %155, null
  br i1 %156, label %178, label %157

157:                                              ; preds = %153, %174
  %158 = phi %"class.blink::LayoutObject"* [ %176, %174 ], [ %155, %153 ]
  %159 = bitcast %"class.blink::LayoutObject"* %158 to i1 (%"class.blink::LayoutObject"*, i32)***
  %160 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %159, align 8
  %161 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %160, i64 92
  %162 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %161, align 8
  %163 = call zeroext i1 %162(%"class.blink::LayoutObject"* nonnull %158, i32 15) #10
  br i1 %163, label %174, label %164

164:                                              ; preds = %157
  %165 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %159, align 8
  %166 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %165, i64 92
  %167 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %166, align 8
  %168 = call zeroext i1 %167(%"class.blink::LayoutObject"* nonnull %158, i32 13) #10
  br i1 %168, label %174, label %169

169:                                              ; preds = %164
  %170 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %159, align 8
  %171 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %170, i64 92
  %172 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %171, align 8
  %173 = call zeroext i1 %172(%"class.blink::LayoutObject"* nonnull %158, i32 36) #10
  br i1 %173, label %174, label %178

174:                                              ; preds = %169, %164, %157
  %175 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %158, i64 0, i32 9
  %176 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %175, align 8
  %177 = icmp eq %"class.blink::LayoutObject"* %176, null
  br i1 %177, label %178, label %157

178:                                              ; preds = %169, %174, %145, %153
  %179 = phi %"class.blink::LayoutObject"* [ null, %153 ], [ null, %145 ], [ %158, %169 ], [ null, %174 ]
  %180 = bitcast %"class.blink::LayoutBlock"* %132 to void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %181 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %181, i64 16
  %183 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %182, align 8
  call void %183(%"class.blink::LayoutBlock"* %132, %"class.blink::LayoutObject"* %18, %"class.blink::LayoutObject"* %179) #10
  %184 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  call void @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlockFlow"* %184, %"class.blink::LayoutObject"* %146, %"class.blink::LayoutObject"* nonnull %104) #10
  br label %188

185:                                              ; preds = %120, %125, %124, %92, %99
  %186 = phi %"class.blink::LayoutObject"* [ %104, %124 ], [ %104, %125 ], [ null, %99 ], [ null, %92 ], [ null, %120 ]
  %187 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  call void @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlockFlow"* %187, %"class.blink::LayoutObject"* %18, %"class.blink::LayoutObject"* %186) #10
  br label %188

188:                                              ; preds = %185, %178
  %189 = bitcast %"class.blink::LayoutObject"* %18 to i1 (%"class.blink::LayoutObject"*, i32)***
  %190 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %189, align 8
  %191 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %190, i64 92
  %192 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %191, align 8
  %193 = call zeroext i1 %192(%"class.blink::LayoutObject"* %18, i32 15) #10
  br i1 %193, label %194, label %196

194:                                              ; preds = %188
  %195 = bitcast %"class.blink::LayoutObject"* %18 to %"class.blink::LayoutListMarker"*
  call void @_ZN5blink16LayoutListMarker13UpdateMarginsEv(%"class.blink::LayoutListMarker"* %195) #10
  br label %203

196:                                              ; preds = %188
  %197 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %189, align 8
  %198 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %197, i64 92
  %199 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %198, align 8
  %200 = call zeroext i1 %199(%"class.blink::LayoutObject"* %18, i32 36) #10
  br i1 %200, label %201, label %203

201:                                              ; preds = %196
  %202 = bitcast %"class.blink::LayoutObject"* %18 to %"class.blink::LayoutOutsideListMarker"*
  call void @_ZN5blink23LayoutOutsideListMarker13UpdateMarginsEv(%"class.blink::LayoutOutsideListMarker"* %202) #10
  br label %203

203:                                              ; preds = %23, %81, %91, %71, %194, %201, %196
  %204 = phi i1 [ true, %196 ], [ true, %201 ], [ true, %194 ], [ false, %23 ], [ false, %71 ], [ false, %91 ], [ false, %81 ]
  ret i1 %204
}

declare zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_118ForceLogicalHeightERNS_12LayoutObjectERKNS_6LengthE(%"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::Length"* dereferenceable(8)) unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 5, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 3
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 8
  %14 = select i1 %9, %"class.blink::Length"* %12, %"class.blink::Length"* %13
  %15 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 2
  %16 = load i8, i8* %15, align 1
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %16, %18
  br i1 %19, label %20, label %58

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 1
  %22 = load i8, i8* %21, align 4, !range !2
  %23 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 1
  %24 = load i8, i8* %23, align 4, !range !2
  %25 = icmp eq i8 %22, %24
  br i1 %25, label %26, label %58

26:                                               ; preds = %20
  %27 = icmp eq i8 %16, 12
  br i1 %27, label %70, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 3
  %30 = load i8, i8* %29, align 2, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.blink::Length"* %14 to float*
  %34 = load float, float* %33, align 4
  br label %39

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %14, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = sitofp i32 %37 to float
  br label %39

39:                                               ; preds = %35, %32
  %40 = phi float [ %34, %32 ], [ %38, %35 ]
  %41 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %42 = load i8, i8* %41, align 2, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %39
  %45 = bitcast %"class.blink::Length"* %1 to float*
  %46 = load float, float* %45, align 4
  br label %51

47:                                               ; preds = %39
  %48 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = sitofp i32 %49 to float
  br label %51

51:                                               ; preds = %47, %44
  %52 = phi float [ %46, %44 ], [ %50, %47 ]
  %53 = fcmp oeq float %40, %52
  br i1 %53, label %70, label %54

54:                                               ; preds = %51
  %55 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %14, %"class.blink::Length"* dereferenceable(8) %1) #10
  br i1 %55, label %70, label %56

56:                                               ; preds = %54
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  br label %58

58:                                               ; preds = %56, %2, %20
  %59 = phi %"class.blink::ComputedStyle"* [ %57, %56 ], [ %4, %2 ], [ %4, %20 ]
  %60 = tail call %"class.blink::ComputedStyle"* @_ZN5blink13ComputedStyle5CloneERKS0_(%"class.blink::ComputedStyle"* dereferenceable(104) %59) #10
  %61 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 9
  %62 = bitcast [20 x i8]* %61 to i160*
  %63 = load i160, i160* %62, align 8
  %64 = and i160 %63, 15211807202738752817960438464512
  %65 = icmp eq i160 %64, 0
  %66 = bitcast %"class.blink::ComputedStyle"* %60 to %"class.blink::ComputedStyleBase"*
  br i1 %65, label %67, label %68

67:                                               ; preds = %58
  tail call void @_ZN5blink17ComputedStyleBase9SetHeightERKNS_6LengthE(%"class.blink::ComputedStyleBase"* %66, %"class.blink::Length"* dereferenceable(8) %1) #10
  br label %69

68:                                               ; preds = %58
  tail call void @_ZN5blink17ComputedStyleBase8SetWidthERKNS_6LengthE(%"class.blink::ComputedStyleBase"* %66, %"class.blink::Length"* dereferenceable(8) %1) #10
  br label %69

69:                                               ; preds = %68, %67
  tail call void @_ZN5blink12LayoutObject34SetModifiedStyleOutsideStyleRecalcE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %0, %"class.blink::ComputedStyle"* %60, i32 0) #10
  br label %70

70:                                               ; preds = %26, %51, %54, %69
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink16LayoutListMarker13UpdateMarginsEv(%"class.blink::LayoutListMarker"*) local_unnamed_addr #1

declare void @_ZN5blink23LayoutOutsideListMarker13UpdateMarginsEv(%"class.blink::LayoutOutsideListMarker"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject19IsOutsideListMarkerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::LayoutObject"* @_ZN5blink12_GLOBAL__N_123GetParentOfFirstLineBoxEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %154, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = icmp eq %"class.blink::Node"* %8, null
  br i1 %9, label %10, label %17

10:                                               ; preds = %5, %10
  %11 = phi %"class.blink::LayoutObject"* [ %13, %10 ], [ %6, %5 ]
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 7
  %13 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %13, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %10, label %17

17:                                               ; preds = %10, %5
  %18 = phi %"class.blink::Node"* [ %8, %5 ], [ %15, %10 ]
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %20, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::Document"*, %"class.blink::Document"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %22, i64 0, i32 33
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 0
  %26 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %29 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %30 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kUlTagE, align 8
  %31 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names6kOlTagE, align 8
  %33 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %32, i64 0, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %17, %150
  %35 = phi %"class.blink::LayoutObject"* [ %3, %17 ], [ %152, %150 ]
  %36 = tail call zeroext i1 @_ZNK5blink12LayoutObject19IsOutsideListMarkerEv(%"class.blink::LayoutObject"* nonnull %35) #10
  br i1 %36, label %150, label %37

37:                                               ; preds = %34
  %38 = bitcast %"class.blink::LayoutObject"* %35 to i1 (%"class.blink::LayoutObject"*)***
  %39 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %39, i64 28
  %41 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %40, align 8
  %42 = tail call zeroext i1 %41(%"class.blink::LayoutObject"* nonnull %35) #10
  br i1 %42, label %150, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 134217728
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %58, label %49

49:                                               ; preds = %43
  %50 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %38, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %50, i64 26
  %52 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.blink::LayoutObject"* nonnull %35) #10
  br i1 %53, label %54, label %154

54:                                               ; preds = %49
  %55 = tail call zeroext i1 @_ZN5blink15LayoutBlockFlow32GeneratesLineBoxesForInlineChildEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"* %0, %"class.blink::LayoutObject"* nonnull %35) #10
  br i1 %55, label %154, label %56

56:                                               ; preds = %54
  %57 = load i96, i96* %45, align 4
  br label %58

58:                                               ; preds = %56, %43
  %59 = phi i96 [ %57, %56 ], [ %46, %43 ]
  %60 = and i96 %59, 8388608
  %61 = icmp ne i96 %60, 0
  %62 = and i96 %59, 113336795588871485128704
  %63 = icmp eq i96 %62, 75557863725914323419136
  %64 = or i1 %61, %63
  br i1 %64, label %150, label %65

65:                                               ; preds = %58
  %66 = load i96, i96* %27, align 4
  %67 = and i96 %66, 8589934592
  %68 = icmp eq i96 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %65
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8
  %74 = lshr i160 %73, 74
  %75 = trunc i160 %74 to i32
  %76 = and i32 %75, 7
  switch i32 %76, label %154 [
    i32 5, label %77
    i32 2, label %77
  ]

77:                                               ; preds = %69, %69, %65
  %78 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %38, align 8
  %79 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %78, i64 24
  %80 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %79, align 8
  %81 = tail call zeroext i1 %80(%"class.blink::LayoutObject"* nonnull %35) #10
  %82 = bitcast %"class.blink::LayoutObject"* %35 to %"class.blink::LayoutBlockFlow"*
  br i1 %81, label %83, label %154

83:                                               ; preds = %77
  %84 = load i96, i96* %45, align 4
  %85 = and i96 %84, 67108864
  %86 = icmp eq i96 %85, 0
  br i1 %86, label %107, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 7
  %89 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %88, align 8
  %90 = icmp eq %"class.blink::LayoutObject"* %89, null
  br i1 %90, label %154, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %89, i64 0, i32 5, i32 0
  %93 = bitcast %"class.blink::ComputedStyle"** %92 to %"class.blink::ComputedStyleBase"**
  %94 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %94, i64 0, i32 9
  %96 = bitcast [20 x i8]* %95 to i160*
  %97 = load i160, i160* %96, align 8
  %98 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 5, i32 0
  %99 = bitcast %"class.blink::ComputedStyle"** %98 to %"class.blink::ComputedStyleBase"**
  %100 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %100, i64 0, i32 9
  %102 = bitcast [20 x i8]* %101 to i160*
  %103 = load i160, i160* %102, align 8
  %104 = xor i160 %103, %97
  %105 = and i160 %104, 15211807202738752817960438464512
  %106 = icmp eq i160 %105, 0
  br i1 %106, label %107, label %154

107:                                              ; preds = %91, %83
  %108 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %29, align 8
  %109 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %108, i64 92
  %110 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.blink::LayoutObject"* %6, i32 14) #10
  %112 = xor i1 %111, true
  %113 = or i1 %25, %112
  br i1 %113, label %147, label %114

114:                                              ; preds = %107
  %115 = load i96, i96* %45, align 4
  %116 = and i96 %115, 16777216
  %117 = icmp eq i96 %116, 0
  br i1 %117, label %118, label %147

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 6, i32 0, i32 0
  %120 = load %"class.blink::Node"*, %"class.blink::Node"** %119, align 8
  %121 = icmp eq %"class.blink::Node"* %120, null
  br i1 %121, label %147, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %120, i64 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = and i32 %124, 48
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %147

127:                                              ; preds = %122
  %128 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %31, align 8
  %129 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %120, i64 1, i32 2
  %130 = bitcast %"class.blink::Member.318"* %129 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %131 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %131, i64 0, i32 3, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %128, i64 0, i32 3, i32 0, i32 0, i32 0
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %133, %135
  br i1 %136, label %154, label %137

137:                                              ; preds = %127
  %138 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %33, align 8
  %139 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %120, i64 1, i32 2
  %140 = bitcast %"class.blink::Member.318"* %139 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %141 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 3, i32 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %138, i64 0, i32 3, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %143, %145
  br i1 %146, label %154, label %147

147:                                              ; preds = %122, %114, %107, %118, %137
  %148 = tail call fastcc %"class.blink::LayoutObject"* @_ZN5blink12_GLOBAL__N_123GetParentOfFirstLineBoxEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"* nonnull %82)
  %149 = icmp eq %"class.blink::LayoutObject"* %148, null
  br i1 %149, label %150, label %154

150:                                              ; preds = %147, %58, %37, %34
  %151 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %35, i64 0, i32 9
  %152 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %151, align 8
  %153 = icmp eq %"class.blink::LayoutObject"* %152, null
  br i1 %153, label %154, label %34

154:                                              ; preds = %137, %127, %150, %54, %49, %147, %87, %69, %77, %91, %1
  %155 = phi %"class.blink::LayoutObject"* [ null, %1 ], [ null, %137 ], [ null, %127 ], [ null, %150 ], [ %6, %54 ], [ %6, %49 ], [ %148, %147 ], [ %35, %87 ], [ %6, %69 ], [ %35, %77 ], [ %35, %91 ]
  ret %"class.blink::LayoutObject"* %155
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem20RecalcVisualOverflowEv(%"class.blink::LayoutListItem"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutListItem"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock25RecalcChildVisualOverflowEv(%"class.blink::LayoutBlock"* %2) #10
  tail call void @_ZN5blink11LayoutBlock24RecalcSelfVisualOverflowEv(%"class.blink::LayoutBlock"* %2) #10
  ret void
}

declare void @_ZN5blink11LayoutBlock25RecalcChildVisualOverflowEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock24RecalcSelfVisualOverflowEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem21ComputeVisualOverflowEb(%"class.blink::LayoutListItem"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %4) #10
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = extractvalue { i64, i64 } %5, 1
  tail call void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"* %4) #10
  %8 = bitcast %"class.blink::LayoutListItem"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock29AddVisualOverflowFromChildrenEv(%"class.blink::LayoutBlock"* %8) #10
  tail call void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"* %4) #10
  br i1 %1, label %15, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  %11 = tail call zeroext i1 @_ZNK5blink15LayoutBlockFlow27CreatesNewFormattingContextEv(%"class.blink::LayoutBlockFlow"* %10) #10
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %13) #10
  br i1 %14, label %15, label %17

15:                                               ; preds = %12, %9, %2
  %16 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlow27AddVisualOverflowFromFloatsEv(%"class.blink::LayoutBlockFlow"* %16) #10
  br label %17

17:                                               ; preds = %15, %12
  %18 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %4) #10
  %19 = extractvalue { i64, i64 } %18, 0
  %20 = extractvalue { i64, i64 } %18, 1
  %21 = trunc i64 %19 to i32
  %22 = lshr i64 %19, 32
  %23 = trunc i64 %22 to i32
  %24 = trunc i64 %6 to i32
  %25 = lshr i64 %6, 32
  %26 = trunc i64 %25 to i32
  %27 = icmp eq i32 %21, %24
  %28 = icmp eq i32 %23, %26
  %29 = and i1 %27, %28
  br i1 %29, label %30, label %40

30:                                               ; preds = %17
  %31 = trunc i64 %20 to i32
  %32 = trunc i64 %7 to i32
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = lshr i64 %7, 32
  %36 = trunc i64 %35 to i32
  %37 = lshr i64 %20, 32
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %38, %36
  br i1 %39, label %58, label %40

40:                                               ; preds = %34, %17, %30
  tail call void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"* %3) #10
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #10
  %41 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %42 = load %"class.blink::Node"*, %"class.blink::Node"** %41, align 8
  %43 = icmp eq %"class.blink::Node"* %42, null
  br i1 %43, label %44, label %51

44:                                               ; preds = %40, %44
  %45 = phi %"class.blink::LayoutObject"* [ %47, %44 ], [ %3, %40 ]
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %45, i64 0, i32 7
  %47 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %47, i64 0, i32 6, i32 0, i32 0
  %49 = load %"class.blink::Node"*, %"class.blink::Node"** %48, align 8
  %50 = icmp eq %"class.blink::Node"* %49, null
  br i1 %50, label %44, label %51

51:                                               ; preds = %44, %40
  %52 = phi %"class.blink::Node"* [ %42, %40 ], [ %49, %44 ]
  %53 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %52, i64 0, i32 3, i32 0, i32 0
  %54 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %54, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %56) #10
  tail call void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"* %57, i32 1) #10
  br label %58

58:                                               ; preds = %34, %51
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare void @_ZN5blink11LayoutBlock29AddVisualOverflowFromChildrenEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink15LayoutBlockFlow27CreatesNewFormattingContextEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow27AddVisualOverflowFromFloatsEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem29AddLayoutOverflowFromChildrenEv(%"class.blink::LayoutListItem"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutListItem"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv(%"class.blink::LayoutBlock"* %2) #10
  tail call void @_ZN5blink14LayoutListItem14UpdateOverflowEv(%"class.blink::LayoutListItem"* %0)
  ret void
}

declare void @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem14UpdateOverflowEv(%"class.blink::LayoutListItem"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::LayoutRect"*
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.blink::LayoutRect"*
  %8 = alloca { i64, i64 }, align 8
  %9 = bitcast { i64, i64 }* %8 to %"class.blink::LayoutRect"*
  %10 = alloca { i64, i64 }, align 8
  %11 = bitcast { i64, i64 }* %10 to %"class.blink::LayoutRect"*
  %12 = alloca %"class.blink::LayoutRect", align 8
  %13 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, 16777216
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %1
  %19 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %20 = bitcast %"class.blink::Node"** %19 to %"class.blink::Element"**
  %21 = load %"class.blink::Element"*, %"class.blink::Element"** %20, align 8
  br label %22

22:                                               ; preds = %1, %18
  %23 = phi %"class.blink::Element"* [ %21, %18 ], [ null, %1 ]
  %24 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %23, i8 zeroext 5) #10
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %1017, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 7
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = icmp eq %"class.blink::LayoutObject"* %28, null
  br i1 %29, label %1017, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = and i96 %33, 67108864
  %35 = icmp eq i96 %34, 0
  br i1 %35, label %1017, label %36

36:                                               ; preds = %30
  %37 = tail call zeroext i1 @_ZNK5blink12LayoutObject18IsInsideListMarkerEv(%"class.blink::LayoutObject"* nonnull %24) #10
  br i1 %37, label %1017, label %38

38:                                               ; preds = %36
  %39 = bitcast %"class.blink::LayoutObject"* %24 to %"class.blink::LayoutBox"*
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  %43 = and i96 %42, 268435456
  %44 = icmp eq i96 %43, 0
  br i1 %44, label %45, label %1017

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 2, i32 1, i32 1
  %47 = bitcast i8* %46 to %"class.blink::InlineBox"**
  %48 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %47, align 8
  %49 = icmp eq %"class.blink::InlineBox"* %48, null
  br i1 %49, label %1017, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 2
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %50
  tail call void @_ZN5blink14LayoutListItem27AlignMarkerInBlockDirectionEv(%"class.blink::LayoutListItem"* %0)
  br label %55

55:                                               ; preds = %50, %54
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 5, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8
  %61 = and i160 %60, 15211807202738752817960438464512
  %62 = icmp eq i160 %61, 0
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 1, i32 1, i32 1
  %64 = bitcast i8* %63 to i32*
  %65 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 1, i32 4
  %66 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %65 to i32*
  %67 = select i1 %62, i32* %64, i32* %66
  %68 = load i32, i32* %67, align 4
  %69 = bitcast %"class.blink::LayoutObject"** %27 to %"class.blink::LayoutBox"**
  %70 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0
  %72 = icmp eq %"class.blink::LayoutBox"* %70, %71
  br i1 %72, label %73, label %119

73:                                               ; preds = %119, %55
  %74 = phi i32 [ 0, %55 ], [ %147, %119 ]
  %75 = phi i32 [ 0, %55 ], [ %139, %119 ]
  %76 = load i96, i96* %41, align 4
  %77 = and i96 %76, 268435456
  %78 = icmp eq i96 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %73
  %80 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %47, align 8
  %81 = bitcast %"class.blink::InlineBox"* %80 to void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)***
  br label %82

82:                                               ; preds = %73, %79
  %83 = phi void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*** [ %81, %79 ], [ null, %73 ]
  %84 = phi %"class.blink::InlineBox"* [ %80, %79 ], [ null, %73 ]
  %85 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %84) #10
  %86 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %85, i64 0, i32 5, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %85, i64 0, i32 6, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = bitcast %"class.blink::LayoutObject"* %24 to i1 (%"class.blink::LayoutObject"*, i32)***
  %91 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %91, i64 92
  %93 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %92, align 8
  %94 = tail call zeroext i1 %93(%"class.blink::LayoutObject"* nonnull %24, i32 15) #10
  %95 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 3, i32 1, i32 1
  %96 = bitcast i8* %95 to i32*
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 2, i32 9
  %98 = bitcast %"class.blink::LayoutObject"** %97 to i32*
  %99 = select i1 %94, i32* %98, i32* %96
  %100 = load i32, i32* %99, align 8
  %101 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %102 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %102, i64 0, i32 0, i32 9
  %104 = bitcast [20 x i8]* %103 to i160*
  %105 = load i160, i160* %104, align 8
  %106 = and i160 %105, 41538374868278621028243970633760768
  %107 = icmp eq i160 %106, 0
  %108 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  %109 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %110 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %109, i64 0, i32 0, i32 9
  %111 = bitcast [20 x i8]* %110 to i160*
  %112 = load i160, i160* %111, align 8
  %113 = and i160 %112, 15211807202738752817960438464512
  %114 = icmp eq i160 %113, 0
  %115 = select i1 %114, i32* %66, i32* %64
  %116 = load i32, i32* %115, align 4
  %117 = bitcast %"class.blink::LayoutListItem"* %0 to %"class.blink::LayoutBlock"*
  %118 = tail call i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"* %117) #10
  br i1 %107, label %152, label %501

119:                                              ; preds = %55, %119
  %120 = phi %"class.blink::LayoutBox"* [ %150, %119 ], [ %70, %55 ]
  %121 = phi i32 [ %139, %119 ], [ 0, %55 ]
  %122 = phi i32 [ %147, %119 ], [ 0, %55 ]
  %123 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %120, i64 0, i32 0, i32 0, i32 5, i32 0
  %124 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %124, i64 0, i32 0, i32 9
  %126 = bitcast [20 x i8]* %125 to i160*
  %127 = load i160, i160* %126, align 8
  %128 = and i160 %127, 15211807202738752817960438464512
  %129 = icmp eq i160 %128, 0
  %130 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %120, i64 0, i32 2, i32 0, i32 1, i32 0
  %131 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %120, i64 0, i32 2, i32 0, i32 0, i32 0
  %132 = select i1 %129, i32* %130, i32* %131
  %133 = load i32, i32* %132, align 4
  %134 = icmp slt i32 %133, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %121, i32 %133) #10
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 %135, i32 %138, !prof !9
  %140 = select i1 %129, i32* %131, i32* %130
  %141 = load i32, i32* %140, align 4
  %142 = icmp slt i32 %141, 0
  %143 = select i1 %142, i32 -2147483648, i32 2147483647
  %144 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %122, i32 %141) #10
  %145 = extractvalue { i32, i1 } %144, 1
  %146 = extractvalue { i32, i1 } %144, 0
  %147 = select i1 %145, i32 %143, i32 %146, !prof !9
  %148 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %120, i64 0, i32 0, i32 0, i32 7
  %149 = bitcast %"class.blink::LayoutObject"** %148 to %"class.blink::LayoutBox"**
  %150 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %149, align 8
  %151 = icmp eq %"class.blink::LayoutBox"* %150, %71
  br i1 %151, label %73, label %119

152:                                              ; preds = %82
  %153 = tail call i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %108, i32 %116, i32 %118, i32 0) #10
  %154 = tail call i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %108, i32 %153, i32 0) #10
  %155 = icmp slt i32 %154, %100
  %156 = select i1 %155, i32 %154, i32 %100
  %157 = icmp sgt i32 %74, -1
  %158 = select i1 %157, i32 -2147483648, i32 2147483647
  %159 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %156, i32 %74) #10
  %160 = extractvalue { i32, i1 } %159, 1
  %161 = extractvalue { i32, i1 } %159, 0
  %162 = select i1 %160, i32 %158, i32 %161, !prof !9
  %163 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %101, align 8, !noalias !10
  %164 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %163, i64 0, i32 0, i32 9
  %165 = bitcast [20 x i8]* %164 to i160*
  %166 = load i160, i160* %165, align 8, !noalias !10
  %167 = bitcast %"class.blink::LayoutListItem"* %0 to i8*
  %168 = and i160 %166, 15211807202738752817960438464512
  %169 = icmp eq i160 %168, 0
  %170 = and i160 %166, 41538374868278621028243970633760768
  %171 = icmp eq i160 %170, 0
  %172 = select i1 %171, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %173 = select i1 %171, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %174 = select i1 %169, { i64, i64 } %173, { i64, i64 } %172
  %175 = select i1 %169, { i64, i64 } %173, { i64, i64 } %172
  %176 = extractvalue { i64, i64 } %174, 0
  %177 = extractvalue { i64, i64 } %175, 1
  %178 = getelementptr inbounds i8, i8* %167, i64 %177
  %179 = bitcast i8* %178 to %"class.blink::LayoutBoxModelObject"*
  %180 = and i64 %176, 1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %189, label %182

182:                                              ; preds = %152
  %183 = bitcast i8* %178 to i8**
  %184 = load i8*, i8** %183, align 8
  %185 = add i64 %176, -1
  %186 = getelementptr i8, i8* %184, i64 %185
  %187 = bitcast i8* %186 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %188 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %187, align 8
  br label %191

189:                                              ; preds = %152
  %190 = inttoptr i64 %176 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %191

191:                                              ; preds = %182, %189
  %192 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %188, %182 ], [ %190, %189 ]
  %193 = tail call i32 %192(%"class.blink::LayoutBoxModelObject"* %179) #10
  %194 = icmp sgt i32 %193, -1
  %195 = select i1 %194, i32 -2147483648, i32 2147483647
  %196 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %162, i32 %193) #10
  %197 = extractvalue { i32, i1 } %196, 1
  %198 = extractvalue { i32, i1 } %196, 0
  %199 = select i1 %197, i32 %195, i32 %198, !prof !9
  %200 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %101, align 8, !noalias !13
  %201 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %200, i64 0, i32 0, i32 9
  %202 = bitcast [20 x i8]* %201 to i160*
  %203 = load i160, i160* %202, align 8, !noalias !13
  %204 = and i160 %203, 15211807202738752817960438464512
  %205 = icmp eq i160 %204, 0
  %206 = and i160 %203, 41538374868278621028243970633760768
  %207 = icmp eq i160 %206, 0
  %208 = select i1 %207, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %209 = select i1 %207, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %210 = select i1 %205, { i64, i64 } %209, { i64, i64 } %208
  %211 = select i1 %205, { i64, i64 } %209, { i64, i64 } %208
  %212 = extractvalue { i64, i64 } %210, 0
  %213 = extractvalue { i64, i64 } %211, 1
  %214 = getelementptr inbounds i8, i8* %167, i64 %213
  %215 = bitcast i8* %214 to %"class.blink::LayoutBoxModelObject"*
  %216 = and i64 %212, 1
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %225, label %218

218:                                              ; preds = %191
  %219 = bitcast i8* %214 to i8**
  %220 = load i8*, i8** %219, align 8
  %221 = add i64 %212, -1
  %222 = getelementptr i8, i8* %220, i64 %221
  %223 = bitcast i8* %222 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %224 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %223, align 8
  br label %227

225:                                              ; preds = %191
  %226 = inttoptr i64 %212 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %227

227:                                              ; preds = %218, %225
  %228 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %224, %218 ], [ %226, %225 ]
  %229 = tail call i32 %228(%"class.blink::LayoutBoxModelObject"* %215) #10
  %230 = icmp sgt i32 %229, -1
  %231 = select i1 %230, i32 -2147483648, i32 2147483647
  %232 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %199, i32 %229) #10
  %233 = extractvalue { i32, i1 } %232, 1
  %234 = extractvalue { i32, i1 } %232, 0
  %235 = select i1 %233, i32 %231, i32 %234, !prof !9
  %236 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %237 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %236, i64 0, i32 0, i32 9
  %238 = bitcast [20 x i8]* %237 to i160*
  %239 = load i160, i160* %238, align 8, !noalias !16
  %240 = bitcast %"class.blink::LayoutObject"* %24 to i8*
  %241 = and i160 %239, 15211807202738752817960438464512
  %242 = icmp eq i160 %241, 0
  %243 = and i160 %239, 41538374868278621028243970633760768
  %244 = icmp eq i160 %243, 0
  %245 = select i1 %244, { i64, i64 } { i64 1017, i64 0 }, { i64, i64 } { i64 1025, i64 0 }
  %246 = select i1 %244, { i64, i64 } { i64 1033, i64 0 }, { i64, i64 } { i64 1041, i64 0 }
  %247 = select i1 %242, { i64, i64 } %246, { i64, i64 } %245
  %248 = select i1 %242, { i64, i64 } %246, { i64, i64 } %245
  %249 = extractvalue { i64, i64 } %247, 0
  %250 = extractvalue { i64, i64 } %248, 1
  %251 = getelementptr inbounds i8, i8* %240, i64 %250
  %252 = bitcast i8* %251 to %"class.blink::LayoutBoxModelObject"*
  %253 = and i64 %249, 1
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %262, label %255

255:                                              ; preds = %227
  %256 = bitcast i8* %251 to i8**
  %257 = load i8*, i8** %256, align 8
  %258 = add i64 %249, -1
  %259 = getelementptr i8, i8* %257, i64 %258
  %260 = bitcast i8* %259 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %261 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %260, align 8
  br label %264

262:                                              ; preds = %227
  %263 = inttoptr i64 %249 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %264

264:                                              ; preds = %255, %262
  %265 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %261, %255 ], [ %263, %262 ]
  %266 = tail call i32 %265(%"class.blink::LayoutBoxModelObject"* %252) #10
  %267 = icmp slt i32 %266, 0
  %268 = select i1 %267, i32 -2147483648, i32 2147483647
  %269 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %235, i32 %266) #10
  %270 = extractvalue { i32, i1 } %269, 1
  %271 = extractvalue { i32, i1 } %269, 0
  %272 = select i1 %270, i32 %268, i32 %271, !prof !9
  %273 = icmp sgt i32 %68, -1
  %274 = select i1 %273, i32 -2147483648, i32 2147483647
  %275 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %272, i32 %68) #10
  %276 = extractvalue { i32, i1 } %275, 1
  %277 = extractvalue { i32, i1 } %275, 0
  %278 = select i1 %276, i32 %274, i32 %277, !prof !9
  %279 = bitcast i64* %2 to %"class.blink::LayoutSize"*
  %280 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %280) #10
  %281 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %84, i64 0, i32 7, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = and i32 %282, 2048
  %284 = icmp eq i32 %283, 0
  %285 = zext i32 %278 to i64
  %286 = shl nuw i64 %285, 32
  %287 = select i1 %284, i64 %286, i64 %285
  store i64 %287, i64* %2, align 8
  %288 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)**, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*** %83, align 8
  %289 = getelementptr inbounds void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %288, i64 10
  %290 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %289, align 8
  call void %290(%"class.blink::InlineBox"* %84, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %279) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #10
  %291 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %84, i64 0, i32 3
  %292 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %291, align 8
  %293 = icmp eq %"class.blink::InlineFlowBox"* %292, null
  br i1 %293, label %1017, label %294

294:                                              ; preds = %264
  %295 = bitcast { i64, i64 }* %4 to i8*
  %296 = bitcast { i64, i64 }* %4 to i32*
  %297 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %298 = bitcast i64* %297 to i32*
  %299 = icmp sgt i32 %87, -1
  %300 = select i1 %299, i32 -2147483648, i32 2147483647
  %301 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %89, i32 %87) #10
  %302 = extractvalue { i32, i1 } %301, 1
  %303 = extractvalue { i32, i1 } %301, 0
  %304 = select i1 %302, i32 %300, i32 %303
  %305 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %306 = icmp sgt i32 %272, -1
  %307 = select i1 %306, i32 -2147483648, i32 2147483647
  %308 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %85, i64 0, i32 0, i32 0
  %309 = bitcast { i64, i64 }* %6 to i8*
  %310 = bitcast { i64, i64 }* %6 to i32*
  %311 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %312 = bitcast i64* %311 to i32*
  %313 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %314 = bitcast { i64, i64 }* %4 to i8*
  %315 = bitcast { i64, i64 }* %6 to i8*
  br label %316

316:                                              ; preds = %294, %496
  %317 = phi %"class.blink::InlineFlowBox"* [ %292, %294 ], [ %499, %496 ]
  %318 = phi i8 [ 0, %294 ], [ %497, %496 ]
  %319 = phi i8 [ 0, %294 ], [ %417, %496 ]
  call void @_ZN5blink13InlineFlowBox33AddReplacedChildrenVisualOverflowENS_10LayoutUnitES1_(%"class.blink::InlineFlowBox"* nonnull %317, i32 %87, i32 %89) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %295) #10
  %320 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %314, i8 -86, i64 16, i1 false)
  %321 = load %"struct.blink::SimpleOverflowModel"*, %"struct.blink::SimpleOverflowModel"** %320, align 8
  %322 = icmp eq %"struct.blink::SimpleOverflowModel"* %321, null
  br i1 %322, label %334, label %323

323:                                              ; preds = %316
  %324 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %321, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %325 = load i8, i8* %324, align 4, !range !2
  %326 = icmp eq i8 %325, 0
  br i1 %326, label %334, label %327

327:                                              ; preds = %323
  %328 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %321, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %329 = bitcast %"class.blink::LayoutRect"* %328 to i64*
  %330 = load i64, i64* %329, align 4
  %331 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %321, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %332 = bitcast %"class.blink::LayoutSize"* %331 to i64*
  %333 = load i64, i64* %332, align 4
  br label %362

334:                                              ; preds = %323, %316
  %335 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 7, i32 0
  %336 = load i32, i32* %335, align 4
  %337 = and i32 %336, 2048
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %344, label %339

339:                                              ; preds = %334
  %340 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 5, i32 0, i32 0
  %341 = load i32, i32* %340, align 4
  %342 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 6, i32 0
  %343 = load i32, i32* %342, align 8
  br label %349

344:                                              ; preds = %334
  %345 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 5, i32 1, i32 0
  %346 = load i32, i32* %345, align 4
  %347 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 6, i32 0
  %348 = load i32, i32* %347, align 8
  br label %349

349:                                              ; preds = %344, %339
  %350 = phi i32 [ %87, %339 ], [ %346, %344 ]
  %351 = phi i32 [ %341, %339 ], [ %87, %344 ]
  %352 = phi i32 [ %343, %339 ], [ %304, %344 ]
  %353 = phi i32 [ %304, %339 ], [ %348, %344 ]
  %354 = zext i32 %350 to i64
  %355 = shl nuw i64 %354, 32
  %356 = zext i32 %351 to i64
  %357 = or i64 %355, %356
  %358 = zext i32 %353 to i64
  %359 = shl nuw i64 %358, 32
  %360 = zext i32 %352 to i64
  %361 = or i64 %359, %360
  br label %362

362:                                              ; preds = %327, %349
  %363 = phi i64 [ %330, %327 ], [ %357, %349 ]
  %364 = phi i64 [ %333, %327 ], [ %361, %349 ]
  %365 = lshr i64 %363, 32
  %366 = lshr i64 %364, 32
  %367 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 4, i32 0
  %368 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %367, align 8
  %369 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %368, i64 0, i32 4
  %370 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %369 to i96*
  %371 = load i96, i96* %370, align 4
  %372 = trunc i96 %371 to i32
  %373 = icmp slt i32 %372, 0
  %374 = select i1 %373, i64 %364, i64 %366
  %375 = select i1 %373, i64 %365, i64 %363
  %376 = select i1 %373, i64 %363, i64 %365
  %377 = select i1 %373, i64 %366, i64 %364
  %378 = shl i64 %375, 32
  %379 = and i64 %376, 4294967295
  %380 = or i64 %378, %379
  %381 = shl i64 %377, 32
  %382 = and i64 %374, 4294967295
  %383 = or i64 %381, %382
  store i64 %380, i64* %305, align 8
  store i64 %383, i64* %297, align 8
  %384 = trunc i64 %376 to i32
  %385 = icmp slt i32 %272, %384
  %386 = and i8 %319, 1
  %387 = icmp eq i8 %386, 0
  %388 = and i1 %387, %385
  %389 = trunc i64 %374 to i32
  br i1 %388, label %390, label %404

390:                                              ; preds = %362
  %391 = icmp slt i32 %389, 0
  %392 = select i1 %391, i32 -2147483648, i32 2147483647
  %393 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %384, i32 %389) #10
  %394 = extractvalue { i32, i1 } %393, 1
  %395 = extractvalue { i32, i1 } %393, 0
  %396 = select i1 %394, i32 %392, i32 %395, !prof !9
  %397 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %396, i32 %272) #10
  %398 = extractvalue { i32, i1 } %397, 1
  %399 = extractvalue { i32, i1 } %397, 0
  %400 = select i1 %398, i32 %307, i32 %399, !prof !9
  store i32 %400, i32* %298, align 8
  store i32 %272, i32* %296, align 8
  %401 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0
  %402 = icmp eq %"class.blink::InlineBox"* %401, %308
  %403 = select i1 %402, i8 1, i8 %318
  br label %404

404:                                              ; preds = %362, %390
  %405 = phi i8 [ %403, %390 ], [ %318, %362 ]
  %406 = call zeroext i1 @_ZN5blink13InlineFlowBox37OverrideVisualOverflowFromLogicalRectERKNS_10LayoutRectENS_10LayoutUnitES4_(%"class.blink::InlineFlowBox"* nonnull %317, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %5, i32 %87, i32 %89) #10
  %407 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0
  %408 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %367, align 8
  %409 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %408, i64 0, i32 4
  %410 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %409 to i96*
  %411 = load i96, i96* %410, align 4
  %412 = and i96 %411, 33554432
  %413 = icmp eq i96 %412, 0
  %414 = bitcast %"class.blink::LayoutObject"* %408 to %"class.blink::LayoutBoxModelObject"*
  %415 = select i1 %413, %"class.blink::LayoutBoxModelObject"* %414, %"class.blink::LayoutBoxModelObject"* null
  %416 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %415) #10
  %417 = select i1 %416, i8 1, i8 %319
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %309) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %315, i8 -86, i64 16, i1 false)
  %418 = load %"struct.blink::SimpleOverflowModel"*, %"struct.blink::SimpleOverflowModel"** %320, align 8
  %419 = icmp eq %"struct.blink::SimpleOverflowModel"* %418, null
  br i1 %419, label %431, label %420

420:                                              ; preds = %404
  %421 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %418, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load i8, i8* %421, align 4, !range !2
  %423 = icmp eq i8 %422, 0
  br i1 %423, label %431, label %424

424:                                              ; preds = %420
  %425 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %418, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %426 = bitcast %"class.blink::LayoutRect"* %425 to i64*
  %427 = load i64, i64* %426, align 4
  %428 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %418, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %429 = bitcast %"class.blink::LayoutSize"* %428 to i64*
  %430 = load i64, i64* %429, align 4
  br label %459

431:                                              ; preds = %420, %404
  %432 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 7, i32 0
  %433 = load i32, i32* %432, align 4
  %434 = and i32 %433, 2048
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %441, label %436

436:                                              ; preds = %431
  %437 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 5, i32 0, i32 0
  %438 = load i32, i32* %437, align 4
  %439 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 6, i32 0
  %440 = load i32, i32* %439, align 8
  br label %446

441:                                              ; preds = %431
  %442 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 5, i32 1, i32 0
  %443 = load i32, i32* %442, align 4
  %444 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 6, i32 0
  %445 = load i32, i32* %444, align 8
  br label %446

446:                                              ; preds = %441, %436
  %447 = phi i32 [ %87, %436 ], [ %443, %441 ]
  %448 = phi i32 [ %438, %436 ], [ %87, %441 ]
  %449 = phi i32 [ %440, %436 ], [ %304, %441 ]
  %450 = phi i32 [ %304, %436 ], [ %445, %441 ]
  %451 = zext i32 %447 to i64
  %452 = shl nuw i64 %451, 32
  %453 = zext i32 %448 to i64
  %454 = or i64 %452, %453
  %455 = zext i32 %450 to i64
  %456 = shl nuw i64 %455, 32
  %457 = zext i32 %449 to i64
  %458 = or i64 %456, %457
  br label %459

459:                                              ; preds = %424, %446
  %460 = phi i64 [ %427, %424 ], [ %454, %446 ]
  %461 = phi i64 [ %430, %424 ], [ %458, %446 ]
  %462 = lshr i64 %460, 32
  %463 = lshr i64 %461, 32
  %464 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %367, align 8
  %465 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %464, i64 0, i32 4
  %466 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %465 to i96*
  %467 = load i96, i96* %466, align 4
  %468 = trunc i96 %467 to i32
  %469 = icmp slt i32 %468, 0
  %470 = select i1 %469, i64 %461, i64 %463
  %471 = select i1 %469, i64 %462, i64 %460
  %472 = select i1 %469, i64 %460, i64 %462
  %473 = select i1 %469, i64 %463, i64 %461
  %474 = shl i64 %471, 32
  %475 = and i64 %472, 4294967295
  %476 = or i64 %474, %475
  %477 = shl i64 %473, 32
  %478 = and i64 %470, 4294967295
  %479 = or i64 %477, %478
  store i64 %476, i64* %313, align 8
  store i64 %479, i64* %311, align 8
  %480 = trunc i64 %472 to i32
  %481 = icmp slt i32 %272, %480
  %482 = trunc i64 %470 to i32
  br i1 %481, label %483, label %496

483:                                              ; preds = %459
  %484 = icmp slt i32 %482, 0
  %485 = select i1 %484, i32 -2147483648, i32 2147483647
  %486 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %480, i32 %482) #10
  %487 = extractvalue { i32, i1 } %486, 1
  %488 = extractvalue { i32, i1 } %486, 0
  %489 = select i1 %487, i32 %485, i32 %488, !prof !9
  %490 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %489, i32 %272) #10
  %491 = extractvalue { i32, i1 } %490, 1
  %492 = extractvalue { i32, i1 } %490, 0
  %493 = select i1 %491, i32 %307, i32 %492, !prof !9
  store i32 %493, i32* %312, align 8
  store i32 %272, i32* %310, align 8
  %494 = icmp eq %"class.blink::InlineBox"* %407, %308
  %495 = select i1 %494, i8 1, i8 %405
  br label %496

496:                                              ; preds = %483, %459
  %497 = phi i8 [ %405, %459 ], [ %495, %483 ]
  call void @_ZN5blink13InlineFlowBox37OverrideLayoutOverflowFromLogicalRectERKNS_10LayoutRectENS_10LayoutUnitES4_(%"class.blink::InlineFlowBox"* nonnull %317, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %7, i32 %87, i32 %89) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %309) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %295) #10
  %498 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %317, i64 0, i32 0, i32 3
  %499 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %498, align 8
  %500 = icmp eq %"class.blink::InlineFlowBox"* %499, null
  br i1 %500, label %889, label %316

501:                                              ; preds = %82
  %502 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %71) #10
  %503 = icmp slt i32 %502, 0
  %504 = select i1 %503, i32 -2147483648, i32 2147483647
  %505 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %118, i32 %502) #10
  %506 = extractvalue { i32, i1 } %505, 1
  %507 = extractvalue { i32, i1 } %505, 0
  %508 = select i1 %506, i32 %504, i32 %507, !prof !9
  %509 = tail call i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"* %108, i32 %116, i32 %508, i32 0) #10
  %510 = tail call i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"* %108, i32 %509, i32 0) #10
  %511 = icmp slt i32 %100, %510
  %512 = select i1 %511, i32 %510, i32 %100
  %513 = icmp sgt i32 %74, -1
  %514 = select i1 %513, i32 -2147483648, i32 2147483647
  %515 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %512, i32 %74) #10
  %516 = extractvalue { i32, i1 } %515, 1
  %517 = extractvalue { i32, i1 } %515, 0
  %518 = select i1 %516, i32 %514, i32 %517, !prof !9
  %519 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %101, align 8, !noalias !19
  %520 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %519, i64 0, i32 0, i32 9
  %521 = bitcast [20 x i8]* %520 to i160*
  %522 = load i160, i160* %521, align 8, !noalias !19
  %523 = bitcast %"class.blink::LayoutListItem"* %0 to i8*
  %524 = and i160 %522, 15211807202738752817960438464512
  %525 = icmp eq i160 %524, 0
  %526 = and i160 %522, 41538374868278621028243970633760768
  %527 = icmp eq i160 %526, 0
  %528 = select i1 %527, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %529 = select i1 %527, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %530 = select i1 %525, { i64, i64 } %529, { i64, i64 } %528
  %531 = select i1 %525, { i64, i64 } %529, { i64, i64 } %528
  %532 = extractvalue { i64, i64 } %530, 0
  %533 = extractvalue { i64, i64 } %531, 1
  %534 = getelementptr inbounds i8, i8* %523, i64 %533
  %535 = bitcast i8* %534 to %"class.blink::LayoutBoxModelObject"*
  %536 = and i64 %532, 1
  %537 = icmp eq i64 %536, 0
  br i1 %537, label %545, label %538

538:                                              ; preds = %501
  %539 = bitcast i8* %534 to i8**
  %540 = load i8*, i8** %539, align 8
  %541 = add i64 %532, -1
  %542 = getelementptr i8, i8* %540, i64 %541
  %543 = bitcast i8* %542 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %544 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %543, align 8
  br label %547

545:                                              ; preds = %501
  %546 = inttoptr i64 %532 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %547

547:                                              ; preds = %538, %545
  %548 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %544, %538 ], [ %546, %545 ]
  %549 = tail call i32 %548(%"class.blink::LayoutBoxModelObject"* %535) #10
  %550 = icmp slt i32 %549, 0
  %551 = select i1 %550, i32 -2147483648, i32 2147483647
  %552 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %518, i32 %549) #10
  %553 = extractvalue { i32, i1 } %552, 1
  %554 = extractvalue { i32, i1 } %552, 0
  %555 = select i1 %553, i32 %551, i32 %554, !prof !9
  %556 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %101, align 8, !noalias !22
  %557 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %556, i64 0, i32 0, i32 9
  %558 = bitcast [20 x i8]* %557 to i160*
  %559 = load i160, i160* %558, align 8, !noalias !22
  %560 = and i160 %559, 15211807202738752817960438464512
  %561 = icmp eq i160 %560, 0
  %562 = and i160 %559, 41538374868278621028243970633760768
  %563 = icmp eq i160 %562, 0
  %564 = select i1 %563, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %565 = select i1 %563, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %566 = select i1 %561, { i64, i64 } %565, { i64, i64 } %564
  %567 = select i1 %561, { i64, i64 } %565, { i64, i64 } %564
  %568 = extractvalue { i64, i64 } %566, 0
  %569 = extractvalue { i64, i64 } %567, 1
  %570 = getelementptr inbounds i8, i8* %523, i64 %569
  %571 = bitcast i8* %570 to %"class.blink::LayoutBoxModelObject"*
  %572 = and i64 %568, 1
  %573 = icmp eq i64 %572, 0
  br i1 %573, label %581, label %574

574:                                              ; preds = %547
  %575 = bitcast i8* %570 to i8**
  %576 = load i8*, i8** %575, align 8
  %577 = add i64 %568, -1
  %578 = getelementptr i8, i8* %576, i64 %577
  %579 = bitcast i8* %578 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %580 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %579, align 8
  br label %583

581:                                              ; preds = %547
  %582 = inttoptr i64 %568 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %583

583:                                              ; preds = %574, %581
  %584 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %580, %574 ], [ %582, %581 ]
  %585 = tail call i32 %584(%"class.blink::LayoutBoxModelObject"* %571) #10
  %586 = icmp slt i32 %585, 0
  %587 = select i1 %586, i32 -2147483648, i32 2147483647
  %588 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %555, i32 %585) #10
  %589 = extractvalue { i32, i1 } %588, 1
  %590 = extractvalue { i32, i1 } %588, 0
  %591 = select i1 %589, i32 %587, i32 %590, !prof !9
  %592 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %593 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %592, i64 0, i32 0, i32 9
  %594 = bitcast [20 x i8]* %593 to i160*
  %595 = load i160, i160* %594, align 8, !noalias !25
  %596 = bitcast %"class.blink::LayoutObject"* %24 to i8*
  %597 = and i160 %595, 15211807202738752817960438464512
  %598 = icmp eq i160 %597, 0
  %599 = and i160 %595, 41538374868278621028243970633760768
  %600 = icmp eq i160 %599, 0
  %601 = select i1 %600, { i64, i64 } { i64 1025, i64 0 }, { i64, i64 } { i64 1017, i64 0 }
  %602 = select i1 %600, { i64, i64 } { i64 1041, i64 0 }, { i64, i64 } { i64 1033, i64 0 }
  %603 = select i1 %598, { i64, i64 } %602, { i64, i64 } %601
  %604 = select i1 %598, { i64, i64 } %602, { i64, i64 } %601
  %605 = extractvalue { i64, i64 } %603, 0
  %606 = extractvalue { i64, i64 } %604, 1
  %607 = getelementptr inbounds i8, i8* %596, i64 %606
  %608 = bitcast i8* %607 to %"class.blink::LayoutBoxModelObject"*
  %609 = and i64 %605, 1
  %610 = icmp eq i64 %609, 0
  br i1 %610, label %618, label %611

611:                                              ; preds = %583
  %612 = bitcast i8* %607 to i8**
  %613 = load i8*, i8** %612, align 8
  %614 = add i64 %605, -1
  %615 = getelementptr i8, i8* %613, i64 %614
  %616 = bitcast i8* %615 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %617 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %616, align 8
  br label %620

618:                                              ; preds = %583
  %619 = inttoptr i64 %605 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %620

620:                                              ; preds = %611, %618
  %621 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %617, %611 ], [ %619, %618 ]
  %622 = tail call i32 %621(%"class.blink::LayoutBoxModelObject"* %608) #10
  %623 = icmp slt i32 %622, 0
  %624 = select i1 %623, i32 -2147483648, i32 2147483647
  %625 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %591, i32 %622) #10
  %626 = extractvalue { i32, i1 } %625, 1
  %627 = extractvalue { i32, i1 } %625, 0
  %628 = select i1 %626, i32 %624, i32 %627, !prof !9
  %629 = icmp sgt i32 %68, -1
  %630 = select i1 %629, i32 -2147483648, i32 2147483647
  %631 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %628, i32 %68) #10
  %632 = extractvalue { i32, i1 } %631, 1
  %633 = extractvalue { i32, i1 } %631, 0
  %634 = select i1 %632, i32 %630, i32 %633, !prof !9
  %635 = bitcast i64* %3 to %"class.blink::LayoutSize"*
  %636 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %636) #10
  %637 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %84, i64 0, i32 7, i32 0
  %638 = load i32, i32* %637, align 4
  %639 = and i32 %638, 2048
  %640 = icmp eq i32 %639, 0
  %641 = zext i32 %634 to i64
  %642 = shl nuw i64 %641, 32
  %643 = select i1 %640, i64 %642, i64 %641
  store i64 %643, i64* %3, align 8
  %644 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)**, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*** %83, align 8
  %645 = getelementptr inbounds void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %644, i64 10
  %646 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %645, align 8
  call void %646(%"class.blink::InlineBox"* %84, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %635) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %636) #10
  %647 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %84, i64 0, i32 3
  %648 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %647, align 8
  %649 = icmp eq %"class.blink::InlineFlowBox"* %648, null
  br i1 %649, label %1017, label %650

650:                                              ; preds = %620
  %651 = bitcast { i64, i64 }* %8 to i8*
  %652 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 1
  %653 = bitcast i64* %652 to i32*
  %654 = icmp sgt i32 %87, -1
  %655 = select i1 %654, i32 -2147483648, i32 2147483647
  %656 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %89, i32 %87) #10
  %657 = extractvalue { i32, i1 } %656, 1
  %658 = extractvalue { i32, i1 } %656, 0
  %659 = select i1 %657, i32 %655, i32 %658
  %660 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %8, i64 0, i32 0
  %661 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 1, i32 4, i32 0, i64 4
  %662 = bitcast i8* %661 to i32*
  %663 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 1, i32 4, i32 0, i64 8
  %664 = bitcast i8* %663 to i32*
  %665 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %85, i64 0, i32 0, i32 0
  %666 = bitcast { i64, i64 }* %10 to i8*
  %667 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 1
  %668 = bitcast i64* %667 to i32*
  %669 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %10, i64 0, i32 0
  %670 = bitcast { i64, i64 }* %8 to i8*
  %671 = bitcast { i64, i64 }* %10 to i8*
  br label %672

672:                                              ; preds = %650, %884
  %673 = phi %"class.blink::InlineFlowBox"* [ %648, %650 ], [ %887, %884 ]
  %674 = phi i8 [ 0, %650 ], [ %885, %884 ]
  %675 = phi i8 [ 0, %650 ], [ %789, %884 ]
  call void @_ZN5blink13InlineFlowBox33AddReplacedChildrenVisualOverflowENS_10LayoutUnitES1_(%"class.blink::InlineFlowBox"* nonnull %673, i32 %87, i32 %89) #10
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %651) #10
  %676 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %670, i8 -86, i64 16, i1 false)
  %677 = load %"struct.blink::SimpleOverflowModel"*, %"struct.blink::SimpleOverflowModel"** %676, align 8
  %678 = icmp eq %"struct.blink::SimpleOverflowModel"* %677, null
  br i1 %678, label %690, label %679

679:                                              ; preds = %672
  %680 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %677, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %681 = load i8, i8* %680, align 4, !range !2
  %682 = icmp eq i8 %681, 0
  br i1 %682, label %690, label %683

683:                                              ; preds = %679
  %684 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %677, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %685 = bitcast %"class.blink::LayoutRect"* %684 to i64*
  %686 = load i64, i64* %685, align 4
  %687 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %677, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %688 = bitcast %"class.blink::LayoutSize"* %687 to i64*
  %689 = load i64, i64* %688, align 4
  br label %718

690:                                              ; preds = %679, %672
  %691 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 7, i32 0
  %692 = load i32, i32* %691, align 4
  %693 = and i32 %692, 2048
  %694 = icmp eq i32 %693, 0
  br i1 %694, label %700, label %695

695:                                              ; preds = %690
  %696 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 5, i32 0, i32 0
  %697 = load i32, i32* %696, align 4
  %698 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 6, i32 0
  %699 = load i32, i32* %698, align 8
  br label %705

700:                                              ; preds = %690
  %701 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 5, i32 1, i32 0
  %702 = load i32, i32* %701, align 4
  %703 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 6, i32 0
  %704 = load i32, i32* %703, align 8
  br label %705

705:                                              ; preds = %700, %695
  %706 = phi i32 [ %87, %695 ], [ %702, %700 ]
  %707 = phi i32 [ %697, %695 ], [ %87, %700 ]
  %708 = phi i32 [ %699, %695 ], [ %659, %700 ]
  %709 = phi i32 [ %659, %695 ], [ %704, %700 ]
  %710 = zext i32 %706 to i64
  %711 = shl nuw i64 %710, 32
  %712 = zext i32 %707 to i64
  %713 = or i64 %711, %712
  %714 = zext i32 %709 to i64
  %715 = shl nuw i64 %714, 32
  %716 = zext i32 %708 to i64
  %717 = or i64 %715, %716
  br label %718

718:                                              ; preds = %683, %705
  %719 = phi i64 [ %686, %683 ], [ %713, %705 ]
  %720 = phi i64 [ %689, %683 ], [ %717, %705 ]
  %721 = lshr i64 %719, 32
  %722 = lshr i64 %720, 32
  %723 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 4, i32 0
  %724 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %723, align 8
  %725 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %724, i64 0, i32 4
  %726 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %725 to i96*
  %727 = load i96, i96* %726, align 4
  %728 = trunc i96 %727 to i32
  %729 = icmp slt i32 %728, 0
  %730 = select i1 %729, i64 %720, i64 %722
  %731 = select i1 %729, i64 %721, i64 %719
  %732 = select i1 %729, i64 %719, i64 %721
  %733 = select i1 %729, i64 %722, i64 %720
  %734 = shl i64 %731, 32
  %735 = and i64 %732, 4294967295
  %736 = or i64 %734, %735
  %737 = shl i64 %733, 32
  %738 = and i64 %730, 4294967295
  %739 = or i64 %737, %738
  store i64 %736, i64* %660, align 8
  store i64 %739, i64* %652, align 8
  %740 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %741 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %740, i64 0, i32 0, i32 9
  %742 = bitcast [20 x i8]* %741 to i160*
  %743 = load i160, i160* %742, align 8
  %744 = and i160 %743, 15211807202738752817960438464512
  %745 = icmp eq i160 %744, 0
  %746 = select i1 %745, i32* %662, i32* %664
  %747 = load i32, i32* %746, align 4
  %748 = icmp slt i32 %747, 0
  %749 = select i1 %748, i32 -2147483648, i32 2147483647
  %750 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %628, i32 %747) #10
  %751 = extractvalue { i32, i1 } %750, 1
  %752 = extractvalue { i32, i1 } %750, 0
  %753 = select i1 %751, i32 %749, i32 %752, !prof !9
  %754 = trunc i64 %732 to i32
  %755 = trunc i64 %730 to i32
  %756 = icmp slt i32 %755, 0
  %757 = select i1 %756, i32 -2147483648, i32 2147483647
  %758 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %754, i32 %755) #10
  %759 = extractvalue { i32, i1 } %758, 1
  %760 = extractvalue { i32, i1 } %758, 0
  %761 = select i1 %759, i32 %757, i32 %760, !prof !9
  %762 = icmp sgt i32 %753, %761
  %763 = and i8 %675, 1
  %764 = icmp eq i8 %763, 0
  %765 = and i1 %764, %762
  br i1 %765, label %766, label %776

766:                                              ; preds = %718
  %767 = icmp sgt i32 %754, -1
  %768 = select i1 %767, i32 -2147483648, i32 2147483647
  %769 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %753, i32 %754) #10
  %770 = extractvalue { i32, i1 } %769, 1
  %771 = extractvalue { i32, i1 } %769, 0
  %772 = select i1 %770, i32 %768, i32 %771, !prof !9
  store i32 %772, i32* %653, align 8
  %773 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0
  %774 = icmp eq %"class.blink::InlineBox"* %773, %665
  %775 = select i1 %774, i8 1, i8 %674
  br label %776

776:                                              ; preds = %718, %766
  %777 = phi i8 [ %775, %766 ], [ %674, %718 ]
  %778 = call zeroext i1 @_ZN5blink13InlineFlowBox37OverrideVisualOverflowFromLogicalRectERKNS_10LayoutRectENS_10LayoutUnitES4_(%"class.blink::InlineFlowBox"* nonnull %673, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %9, i32 %87, i32 %89) #10
  %779 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0
  %780 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %723, align 8
  %781 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %780, i64 0, i32 4
  %782 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %781 to i96*
  %783 = load i96, i96* %782, align 4
  %784 = and i96 %783, 33554432
  %785 = icmp eq i96 %784, 0
  %786 = bitcast %"class.blink::LayoutObject"* %780 to %"class.blink::LayoutBoxModelObject"*
  %787 = select i1 %785, %"class.blink::LayoutBoxModelObject"* %786, %"class.blink::LayoutBoxModelObject"* null
  %788 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %787) #10
  %789 = select i1 %788, i8 1, i8 %675
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %666) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %671, i8 -86, i64 16, i1 false)
  %790 = load %"struct.blink::SimpleOverflowModel"*, %"struct.blink::SimpleOverflowModel"** %676, align 8
  %791 = icmp eq %"struct.blink::SimpleOverflowModel"* %790, null
  br i1 %791, label %803, label %792

792:                                              ; preds = %776
  %793 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %790, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %794 = load i8, i8* %793, align 4, !range !2
  %795 = icmp eq i8 %794, 0
  br i1 %795, label %803, label %796

796:                                              ; preds = %792
  %797 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %790, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %798 = bitcast %"class.blink::LayoutRect"* %797 to i64*
  %799 = load i64, i64* %798, align 4
  %800 = getelementptr inbounds %"struct.blink::SimpleOverflowModel", %"struct.blink::SimpleOverflowModel"* %790, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %801 = bitcast %"class.blink::LayoutSize"* %800 to i64*
  %802 = load i64, i64* %801, align 4
  br label %831

803:                                              ; preds = %792, %776
  %804 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 7, i32 0
  %805 = load i32, i32* %804, align 4
  %806 = and i32 %805, 2048
  %807 = icmp eq i32 %806, 0
  br i1 %807, label %813, label %808

808:                                              ; preds = %803
  %809 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 5, i32 0, i32 0
  %810 = load i32, i32* %809, align 4
  %811 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 6, i32 0
  %812 = load i32, i32* %811, align 8
  br label %818

813:                                              ; preds = %803
  %814 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 5, i32 1, i32 0
  %815 = load i32, i32* %814, align 4
  %816 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 6, i32 0
  %817 = load i32, i32* %816, align 8
  br label %818

818:                                              ; preds = %813, %808
  %819 = phi i32 [ %87, %808 ], [ %815, %813 ]
  %820 = phi i32 [ %810, %808 ], [ %87, %813 ]
  %821 = phi i32 [ %812, %808 ], [ %659, %813 ]
  %822 = phi i32 [ %659, %808 ], [ %817, %813 ]
  %823 = zext i32 %819 to i64
  %824 = shl nuw i64 %823, 32
  %825 = zext i32 %820 to i64
  %826 = or i64 %824, %825
  %827 = zext i32 %822 to i64
  %828 = shl nuw i64 %827, 32
  %829 = zext i32 %821 to i64
  %830 = or i64 %828, %829
  br label %831

831:                                              ; preds = %796, %818
  %832 = phi i64 [ %799, %796 ], [ %826, %818 ]
  %833 = phi i64 [ %802, %796 ], [ %830, %818 ]
  %834 = lshr i64 %832, 32
  %835 = lshr i64 %833, 32
  %836 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %723, align 8
  %837 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %836, i64 0, i32 4
  %838 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %837 to i96*
  %839 = load i96, i96* %838, align 4
  %840 = trunc i96 %839 to i32
  %841 = icmp slt i32 %840, 0
  %842 = select i1 %841, i64 %833, i64 %835
  %843 = select i1 %841, i64 %834, i64 %832
  %844 = select i1 %841, i64 %832, i64 %834
  %845 = select i1 %841, i64 %835, i64 %833
  %846 = shl i64 %843, 32
  %847 = and i64 %844, 4294967295
  %848 = or i64 %846, %847
  %849 = shl i64 %845, 32
  %850 = and i64 %842, 4294967295
  %851 = or i64 %849, %850
  store i64 %848, i64* %669, align 8
  store i64 %851, i64* %667, align 8
  %852 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %853 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %852, i64 0, i32 0, i32 9
  %854 = bitcast [20 x i8]* %853 to i160*
  %855 = load i160, i160* %854, align 8
  %856 = and i160 %855, 15211807202738752817960438464512
  %857 = icmp eq i160 %856, 0
  %858 = select i1 %857, i32* %662, i32* %664
  %859 = load i32, i32* %858, align 4
  %860 = icmp slt i32 %859, 0
  %861 = select i1 %860, i32 -2147483648, i32 2147483647
  %862 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %628, i32 %859) #10
  %863 = extractvalue { i32, i1 } %862, 1
  %864 = extractvalue { i32, i1 } %862, 0
  %865 = select i1 %863, i32 %861, i32 %864, !prof !9
  %866 = trunc i64 %844 to i32
  %867 = trunc i64 %842 to i32
  %868 = icmp slt i32 %867, 0
  %869 = select i1 %868, i32 -2147483648, i32 2147483647
  %870 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %866, i32 %867) #10
  %871 = extractvalue { i32, i1 } %870, 1
  %872 = extractvalue { i32, i1 } %870, 0
  %873 = select i1 %871, i32 %869, i32 %872, !prof !9
  %874 = icmp sgt i32 %865, %873
  br i1 %874, label %875, label %884

875:                                              ; preds = %831
  %876 = icmp sgt i32 %866, -1
  %877 = select i1 %876, i32 -2147483648, i32 2147483647
  %878 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %865, i32 %866) #10
  %879 = extractvalue { i32, i1 } %878, 1
  %880 = extractvalue { i32, i1 } %878, 0
  %881 = select i1 %879, i32 %877, i32 %880, !prof !9
  store i32 %881, i32* %668, align 8
  %882 = icmp eq %"class.blink::InlineBox"* %779, %665
  %883 = select i1 %882, i8 1, i8 %777
  br label %884

884:                                              ; preds = %875, %831
  %885 = phi i8 [ %777, %831 ], [ %883, %875 ]
  call void @_ZN5blink13InlineFlowBox37OverrideLayoutOverflowFromLogicalRectERKNS_10LayoutRectENS_10LayoutUnitES4_(%"class.blink::InlineFlowBox"* nonnull %673, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %11, i32 %87, i32 %89) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %666) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %651) #10
  %886 = getelementptr inbounds %"class.blink::InlineFlowBox", %"class.blink::InlineFlowBox"* %673, i64 0, i32 0, i32 3
  %887 = load %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"** %886, align 8
  %888 = icmp eq %"class.blink::InlineFlowBox"* %887, null
  br i1 %888, label %889, label %672

889:                                              ; preds = %884, %496
  %890 = phi i32 [ %272, %496 ], [ %628, %884 ]
  %891 = phi i8 [ %497, %496 ], [ %885, %884 ]
  %892 = and i8 %891, 1
  %893 = icmp eq i8 %892, 0
  br i1 %893, label %1017, label %894

894:                                              ; preds = %889
  %895 = bitcast %"class.blink::LayoutRect"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %895) #10
  %896 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %12, i64 0, i32 0, i32 0, i32 0
  %897 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %12, i64 0, i32 0, i32 1, i32 0
  %898 = icmp slt i32 %74, 0
  %899 = select i1 %898, i32 -2147483648, i32 2147483647
  %900 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %890, i32 %74) #10
  %901 = extractvalue { i32, i1 } %900, 1
  %902 = extractvalue { i32, i1 } %900, 0
  %903 = select i1 %901, i32 %899, i32 %902, !prof !9
  %904 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %84, i64 0, i32 7, i32 0
  %905 = load i32, i32* %904, align 4
  %906 = and i32 %905, 2048
  %907 = icmp eq i32 %906, 0
  %908 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %84, i64 0, i32 5, i32 1, i32 0
  %909 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %84, i64 0, i32 5, i32 0, i32 0
  %910 = select i1 %907, i32* %909, i32* %908
  %911 = load i32, i32* %910, align 4
  %912 = icmp slt i32 %911, 0
  %913 = select i1 %912, i32 -2147483648, i32 2147483647
  %914 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %75, i32 %911) #10
  %915 = extractvalue { i32, i1 } %914, 1
  %916 = extractvalue { i32, i1 } %914, 0
  %917 = select i1 %915, i32 %913, i32 %916, !prof !9
  %918 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 1, i32 4, i32 0, i64 4
  %919 = bitcast i8* %918 to i64*
  %920 = load i64, i64* %919, align 4
  %921 = bitcast %"class.blink::LayoutRect"* %12 to i64*
  %922 = zext i32 %917 to i64
  %923 = shl nuw i64 %922, 32
  %924 = zext i32 %903 to i64
  %925 = or i64 %923, %924
  store i64 %925, i64* %921, align 8
  %926 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %12, i64 0, i32 1
  %927 = bitcast %"class.blink::LayoutSize"* %926 to i64*
  store i64 %920, i64* %927, align 8
  %928 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %101, align 8
  %929 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %928, i64 0, i32 0, i32 9
  %930 = bitcast [20 x i8]* %929 to i160*
  %931 = load i160, i160* %930, align 8
  %932 = and i160 %931, 15211807202738752817960438464512
  %933 = icmp eq i160 %932, 0
  br i1 %933, label %941, label %934

934:                                              ; preds = %894
  %935 = lshr i64 %920, 32
  %936 = zext i32 %903 to i64
  %937 = shl nuw i64 %936, 32
  %938 = or i64 %937, %922
  %939 = shl i64 %920, 32
  %940 = or i64 %939, %935
  store i64 %938, i64* %921, align 8
  store i64 %940, i64* %927, align 8
  br label %941

941:                                              ; preds = %934, %894
  br label %942

942:                                              ; preds = %941, %999
  %943 = phi %"class.blink::LayoutBox"* [ %947, %999 ], [ %39, %941 ]
  %944 = phi i8 [ %970, %999 ], [ 0, %941 ]
  %945 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %943, i64 0, i32 0, i32 0, i32 7
  %946 = bitcast %"class.blink::LayoutObject"** %945 to %"class.blink::LayoutBox"**
  %947 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %946, align 8
  %948 = icmp eq %"class.blink::LayoutBox"* %947, null
  br i1 %948, label %961, label %949

949:                                              ; preds = %942
  %950 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %947, i64 0, i32 0, i32 0
  %951 = bitcast %"class.blink::LayoutBox"* %947 to i1 (%"class.blink::LayoutObject"*)***
  %952 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %951, align 8
  %953 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %952, i64 23
  %954 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %953, align 8
  %955 = call zeroext i1 %954(%"class.blink::LayoutObject"* %950) #10
  br i1 %955, label %956, label %961

956:                                              ; preds = %949
  %957 = and i8 %944, 1
  %958 = icmp eq i8 %957, 0
  br i1 %958, label %959, label %960

959:                                              ; preds = %956
  call void @_ZN5blink9LayoutBox25AddContentsVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* nonnull %947, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %12) #10
  br label %960

960:                                              ; preds = %956, %959
  call void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* nonnull %947, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %12) #10
  br label %961

961:                                              ; preds = %949, %942, %960
  %962 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %947, i64 0, i32 0, i32 0, i32 4
  %963 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %962 to i96*
  %964 = load i96, i96* %963, align 4
  %965 = and i96 %964, 464227514732017603087171584
  %966 = icmp eq i96 %965, 464227514732017603087171584
  br i1 %966, label %1016, label %967

967:                                              ; preds = %961
  %968 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %947, i64 0, i32 0
  %969 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %968) #10
  %970 = select i1 %969, i8 1, i8 %944
  %971 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %947, i64 0, i32 2
  %972 = bitcast %"class.blink::LayoutRect"* %971 to i64*
  %973 = load i64, i64* %972, align 4
  %974 = trunc i64 %973 to i32
  %975 = lshr i64 %973, 32
  %976 = trunc i64 %975 to i32
  %977 = call i1 @llvm.is.constant.i32(i32 %974) #10
  br i1 %977, label %978, label %982

978:                                              ; preds = %967
  %979 = sub i32 0, %974
  %980 = icmp eq i32 %979, -2147483648
  %981 = select i1 %980, i32 2147483647, i32 %979
  br label %987

982:                                              ; preds = %967
  %983 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %974) #10
  %984 = extractvalue { i32, i1 } %983, 1
  %985 = extractvalue { i32, i1 } %983, 0
  %986 = select i1 %984, i32 2147483647, i32 %985
  br label %987

987:                                              ; preds = %982, %978
  %988 = phi i32 [ %981, %978 ], [ %986, %982 ]
  %989 = call i1 @llvm.is.constant.i32(i32 %976) #10
  br i1 %989, label %990, label %994

990:                                              ; preds = %987
  %991 = sub i32 0, %976
  %992 = icmp eq i32 %991, -2147483648
  %993 = select i1 %992, i32 2147483647, i32 %991
  br label %999

994:                                              ; preds = %987
  %995 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %976) #10
  %996 = extractvalue { i32, i1 } %995, 1
  %997 = extractvalue { i32, i1 } %995, 0
  %998 = select i1 %996, i32 2147483647, i32 %997
  br label %999

999:                                              ; preds = %994, %990
  %1000 = phi i32 [ %993, %990 ], [ %998, %994 ]
  %1001 = load i32, i32* %896, align 8
  %1002 = icmp slt i32 %988, 0
  %1003 = select i1 %1002, i32 -2147483648, i32 2147483647
  %1004 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1001, i32 %988) #10
  %1005 = extractvalue { i32, i1 } %1004, 1
  %1006 = extractvalue { i32, i1 } %1004, 0
  %1007 = select i1 %1005, i32 %1003, i32 %1006, !prof !9
  store i32 %1007, i32* %896, align 8
  %1008 = load i32, i32* %897, align 4
  %1009 = icmp slt i32 %1000, 0
  %1010 = select i1 %1009, i32 -2147483648, i32 2147483647
  %1011 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1008, i32 %1000) #10
  %1012 = extractvalue { i32, i1 } %1011, 1
  %1013 = extractvalue { i32, i1 } %1011, 0
  %1014 = select i1 %1012, i32 %1010, i32 %1013, !prof !9
  store i32 %1014, i32* %897, align 4
  %1015 = icmp eq %"class.blink::LayoutBox"* %947, %71
  br i1 %1015, label %1016, label %942

1016:                                             ; preds = %961, %999
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %895) #10
  br label %1017

1017:                                             ; preds = %620, %264, %1016, %889, %30, %38, %45, %36, %22, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem27AlignMarkerInBlockDirectionEv(%"class.blink::LayoutListItem"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 16777216
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %11 = bitcast %"class.blink::Node"** %10 to %"class.blink::Element"**
  %12 = load %"class.blink::Element"*, %"class.blink::Element"** %11, align 8
  br label %13

13:                                               ; preds = %1, %9
  %14 = phi %"class.blink::Element"* [ %12, %9 ], [ null, %1 ]
  %15 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %14, i8 zeroext 5) #10
  %16 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  %17 = tail call fastcc %"class.blink::LayoutObject"* @_ZN5blink12_GLOBAL__N_123GetParentOfFirstLineBoxEPNS_15LayoutBlockFlowE(%"class.blink::LayoutBlockFlow"* %16)
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %47, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 67108864
  %24 = icmp eq i96 %23, 0
  br i1 %24, label %47, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::LayoutObject"* %17 to %"class.blink::LayoutBox"*
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 7
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = icmp eq %"class.blink::LayoutObject"* %28, null
  br i1 %29, label %46, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 5, i32 0
  %32 = bitcast %"class.blink::ComputedStyle"** %31 to %"class.blink::ComputedStyleBase"**
  %33 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %33, i64 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 5, i32 0
  %38 = bitcast %"class.blink::ComputedStyle"** %37 to %"class.blink::ComputedStyleBase"**
  %39 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %39, i64 0, i32 9
  %41 = bitcast [20 x i8]* %40 to i160*
  %42 = load i160, i160* %41, align 8
  %43 = xor i160 %42, %36
  %44 = and i160 %43, 15211807202738752817960438464512
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %47, label %46

46:                                               ; preds = %30, %25
  br label %47

47:                                               ; preds = %30, %19, %46, %13
  %48 = phi %"class.blink::LayoutBox"* [ null, %13 ], [ null, %19 ], [ %26, %30 ], [ %26, %46 ]
  %49 = phi i1 [ true, %13 ], [ true, %19 ], [ false, %30 ], [ true, %46 ]
  %50 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 4
  %51 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %50 to i96*
  %52 = load i96, i96* %51, align 4
  %53 = and i96 %52, 268435456
  %54 = icmp eq i96 %53, 0
  br i1 %54, label %55, label %60

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 2, i32 1, i32 1
  %57 = bitcast i8* %56 to %"class.blink::InlineBox"**
  %58 = load %"class.blink::InlineBox"*, %"class.blink::InlineBox"** %57, align 8
  %59 = bitcast %"class.blink::InlineBox"* %58 to void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)***
  br label %60

60:                                               ; preds = %47, %55
  %61 = phi void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*** [ %59, %55 ], [ null, %47 ]
  %62 = phi %"class.blink::InlineBox"* [ %58, %55 ], [ null, %47 ]
  %63 = tail call dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"* %62) #10
  %64 = icmp eq %"class.blink::LayoutBox"* %48, null
  br i1 %64, label %77, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %48, i64 0, i32 0, i32 0
  %67 = bitcast %"class.blink::LayoutBox"* %48 to i1 (%"class.blink::LayoutObject"*)***
  %68 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %67, align 8
  %69 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %68, i64 24
  %70 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %69, align 8
  %71 = tail call zeroext i1 %70(%"class.blink::LayoutObject"* %66) #10
  br i1 %71, label %72, label %77

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %48, i64 1, i32 0, i32 0, i32 4, i32 0, i64 4
  %74 = bitcast i8* %73 to %"class.blink::RootInlineBox"**
  %75 = load %"class.blink::RootInlineBox"*, %"class.blink::RootInlineBox"** %74, align 8
  %76 = icmp eq %"class.blink::RootInlineBox"* %75, %63
  br i1 %76, label %292, label %77

77:                                               ; preds = %60, %72, %65
  br i1 %49, label %85, label %78

78:                                               ; preds = %77
  %79 = bitcast %"class.blink::LayoutBox"* %48 to i32 (%"class.blink::LayoutBox"*)***
  %80 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %79, align 8
  %81 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %80, i64 180
  %82 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %81, align 8
  %83 = tail call i32 %82(%"class.blink::LayoutBox"* %48) #10
  %84 = icmp eq i32 %83, -64
  br i1 %84, label %85, label %94

85:                                               ; preds = %78, %77
  %86 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %15, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #10
  %87 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %86, i64 0, i32 0
  %88 = bitcast %"class.blink::LayoutBlock"* %86 to i32 (%"class.blink::LayoutBox"*)***
  %89 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %88, align 8
  %90 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %89, i64 180
  %91 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %90, align 8
  %92 = tail call i32 %91(%"class.blink::LayoutBox"* %87) #10
  %93 = icmp eq i32 %92, -64
  br i1 %93, label %292, label %94

94:                                               ; preds = %78, %85
  %95 = phi %"class.blink::LayoutBox"* [ %87, %85 ], [ %48, %78 ]
  %96 = phi i32 [ %92, %85 ], [ %83, %78 ]
  %97 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0
  %98 = icmp eq %"class.blink::LayoutBox"* %95, %97
  br i1 %98, label %99, label %106

99:                                               ; preds = %106, %94
  %100 = phi i32 [ %96, %94 ], [ %125, %106 ]
  %101 = bitcast %"class.blink::LayoutObject"* %15 to i1 (%"class.blink::LayoutObject"*, i32)***
  %102 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %101, align 8
  %103 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, i64 92
  %104 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %103, align 8
  %105 = tail call zeroext i1 %104(%"class.blink::LayoutObject"* %15, i32 15) #10
  br i1 %105, label %130, label %133

106:                                              ; preds = %94, %106
  %107 = phi i32 [ %125, %106 ], [ %96, %94 ]
  %108 = phi %"class.blink::LayoutBox"* [ %128, %106 ], [ %95, %94 ]
  %109 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %108, i64 0, i32 0, i32 0, i32 5, i32 0
  %110 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %110, i64 0, i32 0, i32 9
  %112 = bitcast [20 x i8]* %111 to i160*
  %113 = load i160, i160* %112, align 8
  %114 = and i160 %113, 15211807202738752817960438464512
  %115 = icmp eq i160 %114, 0
  %116 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %108, i64 0, i32 2, i32 0, i32 1, i32 0
  %117 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %108, i64 0, i32 2, i32 0, i32 0, i32 0
  %118 = select i1 %115, i32* %116, i32* %117
  %119 = load i32, i32* %118, align 4
  %120 = icmp slt i32 %119, 0
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %107, i32 %119) #10
  %123 = extractvalue { i32, i1 } %122, 1
  %124 = extractvalue { i32, i1 } %122, 0
  %125 = select i1 %123, i32 %121, i32 %124, !prof !9
  %126 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %108, i64 0, i32 0, i32 0, i32 7
  %127 = bitcast %"class.blink::LayoutObject"** %126 to %"class.blink::LayoutBox"**
  %128 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %127, align 8
  %129 = icmp eq %"class.blink::LayoutBox"* %128, %97
  br i1 %129, label %99, label %106

130:                                              ; preds = %99
  %131 = bitcast %"class.blink::LayoutObject"* %15 to %"class.blink::LayoutListMarker"*
  %132 = tail call zeroext i1 @_ZNK5blink16LayoutListMarker7IsImageEv(%"class.blink::LayoutListMarker"* %131) #10
  br i1 %132, label %136, label %152

133:                                              ; preds = %99
  %134 = bitcast %"class.blink::LayoutObject"* %15 to %"class.blink::LayoutOutsideListMarker"*
  %135 = tail call zeroext i1 @_ZNK5blink23LayoutOutsideListMarker13IsMarkerImageEv(%"class.blink::LayoutOutsideListMarker"* %134) #10
  br i1 %135, label %136, label %152

136:                                              ; preds = %130, %133
  %137 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %63, i64 0, i32 0, i32 6
  %138 = load i32, i32* %137, align 8
  %139 = lshr i32 %138, 5
  %140 = and i32 %139, 7
  %141 = bitcast %"class.blink::InlineBox"* %62 to i32 (%"class.blink::InlineBox"*, i32)***
  %142 = load i32 (%"class.blink::InlineBox"*, i32)**, i32 (%"class.blink::InlineBox"*, i32)*** %141, align 8
  %143 = getelementptr inbounds i32 (%"class.blink::InlineBox"*, i32)*, i32 (%"class.blink::InlineBox"*, i32)** %142, i64 23
  %144 = load i32 (%"class.blink::InlineBox"*, i32)*, i32 (%"class.blink::InlineBox"*, i32)** %143, align 8
  %145 = tail call i32 %144(%"class.blink::InlineBox"* %62, i32 %140) #10
  %146 = icmp sgt i32 %145, -1
  %147 = select i1 %146, i32 -2147483648, i32 2147483647
  %148 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %100, i32 %145) #10
  %149 = extractvalue { i32, i1 } %148, 1
  %150 = extractvalue { i32, i1 } %148, 0
  %151 = select i1 %149, i32 %147, i32 %150, !prof !9
  br label %236

152:                                              ; preds = %130, %133
  %153 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 6, i32 0, i32 0
  %154 = load %"class.blink::Node"*, %"class.blink::Node"** %153, align 8
  %155 = icmp eq %"class.blink::Node"* %154, null
  br i1 %155, label %156, label %163

156:                                              ; preds = %152, %156
  %157 = phi %"class.blink::LayoutObject"* [ %159, %156 ], [ %15, %152 ]
  %158 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %157, i64 0, i32 7
  %159 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %158, align 8
  %160 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %159, i64 0, i32 6, i32 0, i32 0
  %161 = load %"class.blink::Node"*, %"class.blink::Node"** %160, align 8
  %162 = icmp eq %"class.blink::Node"* %161, null
  br i1 %162, label %156, label %163

163:                                              ; preds = %156, %152
  %164 = phi %"class.blink::Node"* [ %154, %152 ], [ %161, %156 ]
  %165 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %164, i64 0, i32 3, i32 0, i32 0
  %166 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %165, align 8
  %167 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %166, i64 0, i32 2, i32 0, i32 0
  %168 = load %"class.blink::Document"*, %"class.blink::Document"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %168, i64 0, i32 59, i32 0, i32 0
  %170 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %170, i64 0, i32 31, i32 0, i32 0
  %172 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %171, align 8
  %173 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %172, i64 0, i32 0, i32 11
  %174 = load i8, i8* %173, align 8
  %175 = and i8 %174, 1
  %176 = icmp eq i8 %175, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %163
  %178 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #10
  %179 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #10
  br label %180

180:                                              ; preds = %177, %163
  %181 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %172, i64 0, i32 0, i32 0, i32 0
  %182 = load i8, i8* %181, align 8, !range !2
  %183 = icmp eq i8 %182, 0
  br i1 %183, label %187, label %184

184:                                              ; preds = %180
  %185 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %15) #10
  %186 = icmp eq %"class.blink::ComputedStyle"* %185, null
  br i1 %186, label %187, label %190

187:                                              ; preds = %184, %180
  %188 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 5, i32 0
  %189 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %188, align 8
  br label %190

190:                                              ; preds = %184, %187
  %191 = phi %"class.blink::ComputedStyle"* [ %189, %187 ], [ %185, %184 ]
  %192 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %191, i64 0, i32 0, i32 0, i32 0, i32 0
  %193 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %192, align 8
  %194 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %193, i64 0, i32 1, i32 0, i32 0
  %195 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %194, align 8
  %196 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %195, i64 0, i32 1
  %197 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %196) #10
  %198 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %197, i64 0, i32 2
  %199 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %198, align 8
  %200 = icmp eq %"class.blink::SimpleFontData"* %199, null
  br i1 %200, label %201, label %205

201:                                              ; preds = %190
  %202 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %196, i64 0, i32 0
  %203 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %197, %"class.blink::FontDescription"* dereferenceable(80) %202) #10
  store %"class.blink::SimpleFontData"* %203, %"class.blink::SimpleFontData"** %198, align 8
  %204 = icmp eq %"class.blink::SimpleFontData"* %203, null
  br i1 %204, label %236, label %205

205:                                              ; preds = %190, %201
  %206 = phi %"class.blink::SimpleFontData"* [ %203, %201 ], [ %199, %190 ]
  %207 = getelementptr inbounds %"class.blink::RootInlineBox", %"class.blink::RootInlineBox"* %63, i64 0, i32 0, i32 6
  %208 = load i32, i32* %207, align 8
  %209 = and i32 %208, 224
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %206, i64 0, i32 1, i32 9
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %219, label %213

213:                                              ; preds = %205
  %214 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %206, i64 0, i32 1, i32 10
  %215 = load i32, i32* %214, align 4
  %216 = add nsw i32 %215, %212
  %217 = sdiv i32 %216, 2
  %218 = sub nsw i32 %216, %217
  br label %219

219:                                              ; preds = %205, %213
  %220 = phi i32 [ %218, %213 ], [ %212, %205 ]
  %221 = icmp sgt i32 %220, 33554431
  br i1 %221, label %227, label %222

222:                                              ; preds = %219
  %223 = icmp slt i32 %220, -33554432
  br i1 %223, label %229, label %224

224:                                              ; preds = %222
  %225 = shl i32 %220, 6
  %226 = icmp sgt i32 %225, -1
  br i1 %226, label %227, label %229

227:                                              ; preds = %219, %224
  %228 = phi i32 [ %225, %224 ], [ 2147483647, %219 ]
  br label %229

229:                                              ; preds = %222, %224, %227
  %230 = phi i32 [ %228, %227 ], [ %225, %224 ], [ -2147483648, %222 ]
  %231 = phi i32 [ -2147483648, %227 ], [ 2147483647, %224 ], [ 2147483647, %222 ]
  %232 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %100, i32 %230) #10
  %233 = extractvalue { i32, i1 } %232, 1
  %234 = extractvalue { i32, i1 } %232, 0
  %235 = select i1 %233, i32 %231, i32 %234, !prof !9
  br label %236

236:                                              ; preds = %229, %201, %136
  %237 = phi i32 [ %235, %229 ], [ %100, %201 ], [ %151, %136 ]
  %238 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %62, i64 0, i32 7, i32 0
  %239 = load i32, i32* %238, align 4
  %240 = and i32 %239, 2048
  %241 = icmp eq i32 %240, 0
  %242 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %62, i64 0, i32 5, i32 1, i32 0
  %243 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %62, i64 0, i32 5, i32 0, i32 0
  %244 = select i1 %241, i32* %243, i32* %242
  %245 = load i32, i32* %244, align 4
  %246 = icmp sgt i32 %245, -1
  %247 = select i1 %246, i32 -2147483648, i32 2147483647
  %248 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %237, i32 %245) #10
  %249 = extractvalue { i32, i1 } %248, 1
  %250 = extractvalue { i32, i1 } %248, 0
  %251 = select i1 %249, i32 %247, i32 %250, !prof !9
  %252 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 7
  %253 = bitcast %"class.blink::LayoutObject"** %252 to %"class.blink::LayoutBox"**
  %254 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %253, align 8
  %255 = icmp eq %"class.blink::LayoutBox"* %254, %97
  br i1 %255, label %256, label %259

256:                                              ; preds = %259, %236
  %257 = phi i32 [ %251, %236 ], [ %278, %259 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %292, label %283

259:                                              ; preds = %236, %259
  %260 = phi i32 [ %278, %259 ], [ %251, %236 ]
  %261 = phi %"class.blink::LayoutBox"* [ %281, %259 ], [ %254, %236 ]
  %262 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %261, i64 0, i32 0, i32 0, i32 5, i32 0
  %263 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %262, align 8
  %264 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %263, i64 0, i32 0, i32 9
  %265 = bitcast [20 x i8]* %264 to i160*
  %266 = load i160, i160* %265, align 8
  %267 = and i160 %266, 15211807202738752817960438464512
  %268 = icmp eq i160 %267, 0
  %269 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %261, i64 0, i32 2, i32 0, i32 1, i32 0
  %270 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %261, i64 0, i32 2, i32 0, i32 0, i32 0
  %271 = select i1 %268, i32* %269, i32* %270
  %272 = load i32, i32* %271, align 4
  %273 = icmp sgt i32 %272, -1
  %274 = select i1 %273, i32 -2147483648, i32 2147483647
  %275 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %260, i32 %272) #10
  %276 = extractvalue { i32, i1 } %275, 1
  %277 = extractvalue { i32, i1 } %275, 0
  %278 = select i1 %276, i32 %274, i32 %277, !prof !9
  %279 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %261, i64 0, i32 0, i32 0, i32 7
  %280 = bitcast %"class.blink::LayoutObject"** %279 to %"class.blink::LayoutBox"**
  %281 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %280, align 8
  %282 = icmp eq %"class.blink::LayoutBox"* %281, %97
  br i1 %282, label %256, label %259

283:                                              ; preds = %256
  %284 = bitcast i64* %3 to %"class.blink::LayoutSize"*
  %285 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %285) #10
  %286 = zext i32 %257 to i64
  %287 = shl nuw i64 %286, 32
  %288 = select i1 %241, i64 %286, i64 %287
  store i64 %288, i64* %3, align 8
  %289 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)**, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*** %61, align 8
  %290 = getelementptr inbounds void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %289, i64 10
  %291 = load void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)*, void (%"class.blink::InlineBox"*, %"class.blink::LayoutSize"*)** %290, align 8
  call void %291(%"class.blink::InlineBox"* %62, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %284) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %285) #10
  br label %292

292:                                              ; preds = %283, %85, %256, %72
  ret void
}

declare dereferenceable(160) %"class.blink::RootInlineBox"* @_ZN5blink9InlineBox4RootEv(%"class.blink::InlineBox"*) local_unnamed_addr #1

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16LayoutListMarker7IsImageEv(%"class.blink::LayoutListMarker"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink23LayoutOutsideListMarker13IsMarkerImageEv(%"class.blink::LayoutOutsideListMarker"*) local_unnamed_addr #1

declare void @_ZN5blink13InlineFlowBox33AddReplacedChildrenVisualOverflowENS_10LayoutUnitES1_(%"class.blink::InlineFlowBox"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13InlineFlowBox37OverrideVisualOverflowFromLogicalRectERKNS_10LayoutRectENS_10LayoutUnitES4_(%"class.blink::InlineFlowBox"*, %"class.blink::LayoutRect"* dereferenceable(16), i32, i32) local_unnamed_addr #1

declare void @_ZN5blink13InlineFlowBox37OverrideLayoutOverflowFromLogicalRectERKNS_10LayoutRectENS_10LayoutUnitES4_(%"class.blink::InlineFlowBox"*, %"class.blink::LayoutRect"* dereferenceable(16), i32, i32) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox25AddContentsVisualOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink14LayoutListItem5PaintERKNS_9PaintInfoE(%"class.blink::LayoutListItem"*, %"struct.blink::PaintInfo"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::ListItemPainter", align 8
  %4 = bitcast %"class.blink::ListItemPainter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.blink::ListItemPainter", %"class.blink::ListItemPainter"* %3, i64 0, i32 0
  store %"class.blink::LayoutListItem"* %0, %"class.blink::LayoutListItem"** %5, align 8
  call void @_ZN5blink15ListItemPainter5PaintERKNS_9PaintInfoE(%"class.blink::ListItemPainter"* nonnull %3, %"struct.blink::PaintInfo"* %1) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret void
}

declare void @_ZN5blink15ListItemPainter5PaintERKNS_9PaintInfoE(%"class.blink::ListItemPainter"*, %"struct.blink::PaintInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem19OrdinalValueChangedEv(%"class.blink::LayoutListItem"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 16777216
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %9 = bitcast %"class.blink::Node"** %8 to %"class.blink::Element"**
  %10 = load %"class.blink::Element"*, %"class.blink::Element"** %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi %"class.blink::Element"* [ %10, %7 ], [ null, %1 ]
  %13 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %12, i8 zeroext 5) #10
  %14 = tail call %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* %13) #10
  %15 = icmp eq %"class.blink::ListMarker"* %14, null
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  tail call void @_ZN5blink10ListMarker19OrdinalValueChangedERNS_12LayoutObjectE(%"class.blink::ListMarker"* nonnull %14, %"class.blink::LayoutObject"* dereferenceable(88) %13) #10
  br label %20

17:                                               ; preds = %11
  %18 = icmp eq %"class.blink::LayoutObject"* %13, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* nonnull %13, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason16kListValueChangeE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #10
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* nonnull %13, i8 zeroext 3) #10
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* nonnull %13, i32 1) #10
  br label %20

20:                                               ; preds = %17, %19, %16
  ret void
}

declare void @_ZN5blink10ListMarker19OrdinalValueChangedERNS_12LayoutObjectE(%"class.blink::ListMarker"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14LayoutListItem12UpdateLayoutEv(%"class.blink::LayoutListItem"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 16777216
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %9 = bitcast %"class.blink::Node"** %8 to %"class.blink::Element"**
  %10 = load %"class.blink::Element"*, %"class.blink::Element"** %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi %"class.blink::Element"* [ %10, %7 ], [ null, %1 ]
  %13 = tail call %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"* %12, i8 zeroext 5) #10
  %14 = tail call %"class.blink::ListMarker"* @_ZN5blink10ListMarker3GetEPNS_12LayoutObjectE(%"class.blink::LayoutObject"* %13) #10
  %15 = icmp eq %"class.blink::ListMarker"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::ListMarker", %"class.blink::ListMarker"* %14, i64 0, i32 0
  %18 = load i8, i8* %17, align 4
  %19 = and i8 %18, 7
  %20 = icmp eq i8 %19, 1
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  tail call void @_ZN5blink10ListMarker16UpdateMarkerTextERNS_12LayoutObjectE(%"class.blink::ListMarker"* nonnull %14, %"class.blink::LayoutObject"* dereferenceable(88) %13) #10
  br label %22

22:                                               ; preds = %21, %16, %11
  %23 = bitcast %"class.blink::LayoutListItem"* %0 to %"class.blink::LayoutBlock"*
  tail call void @_ZN5blink11LayoutBlock12UpdateLayoutEv(%"class.blink::LayoutBlock"* %23) #10
  ret void
}

declare void @_ZN5blink11LayoutBlock12UpdateLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14LayoutListItemD0Ev(%"class.blink::LayoutListItem"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 0, i32 0
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %2) #10
  %3 = bitcast %"class.blink::LayoutListItem"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %3) #10
  ret void
}

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBlock"*, i8*, i32) unnamed_addr #1

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #1

declare i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink14LayoutListItem7GetNameEv(%"class.blink::LayoutListItem"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)
}

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #10
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #10
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow11RemoveChildEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1207959552
  %6 = icmp eq i96 %5, 1207959552
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock13IsLayoutBlockEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow17IsLayoutBlockFlowEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink15LayoutBlockFlow19VirtualContinuationEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %2) #10
  ret %"class.blink::LayoutBoxModelObject"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

declare %"class.blink::LayoutObject"* @_ZNK5blink15LayoutBlockFlow13HoverAncestorEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.1650* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1371"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink15LayoutBlockFlow14NodeForHitTestEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBlockFlow"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow26DirtyLinesFromChangedChildEPNS_12LayoutObjectENS_15MarkingBehaviorE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 1
  %6 = icmp eq i32 %2, 1
  tail call void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"* %5, %"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1, i1 zeroext %6) #10
  ret void
}

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2045"*, i32) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

declare { i64, i64 } @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2046"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutBlockFlow"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LayoutListItem8IsOfTypeENS_12LayoutObject16LayoutObjectTypeE(%"class.blink::LayoutListItem"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 14
  ret i1 %3
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBlockFlow"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !9

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #10
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !9
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #10
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !9
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox17LayerTypeRequiredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock15UpdateFromStyleEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #10
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !9
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !28

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #10
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !9
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !28

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #10
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !9

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #10
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 16
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #10
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 13
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #10
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 14
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #10
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 15
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #10
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject9BorderTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = icmp ult i16 %7, 8192
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 14
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11BorderRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 3584
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #10
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #10
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #10
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #10
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i1 zeroext, i32, i32) unnamed_addr #1

declare i32 @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i32, i1 zeroext, i32, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2045"*, i32) unnamed_addr #1

declare void @_ZNK5blink15LayoutBlockFlow17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBlockFlow"*, %"class.WTF::Vector.2045"*) unnamed_addr #1

declare i64 @_ZNK5blink15LayoutBlockFlow33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow14MoveChildrenToEPNS_20LayoutBoxModelObjectEPNS_12LayoutObjectES4_S4_b(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink15LayoutBlockFlow32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox17LocationContainerEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox14HasTopOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox15HasLeftOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink15LayoutBlockFlow21IsSelfCollapsingBlockEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow21CollapsedMarginBeforeEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  br label %48

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !29
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1033, i64 0 }, %19 ], [ { i64 1041, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1017, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #10
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %47 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %5, %40
  %49 = phi i32 [ %7, %5 ], [ %45, %40 ]
  %50 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %3, %5 ], [ %46, %40 ]
  %51 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %50, i64 0, i32 0, i32 1, i32 0
  %52 = load i32, i32* %51, align 4
  br label %100

53:                                               ; preds = %40
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8, !noalias !32
  %58 = lshr i160 %57, 102
  %59 = trunc i160 %58 to i8
  %60 = and i8 %59, 3
  switch i8 %60, label %61 [
    i8 0, label %70
    i8 1, label %62
  ]

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61, %53
  %63 = phi { i64, i64 } [ { i64 1033, i64 0 }, %61 ], [ { i64 1041, i64 0 }, %53 ]
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = getelementptr inbounds i8, i8* %18, i64 %65
  %67 = bitcast i8* %66 to %"class.blink::LayoutBoxModelObject"*
  %68 = and i64 %64, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %62, %53
  %71 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %62 ], [ %9, %53 ]
  %72 = phi i8* [ %66, %62 ], [ %18, %53 ]
  %73 = phi i64 [ %64, %62 ], [ 1017, %53 ]
  %74 = bitcast i8* %72 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = add i64 %73, -1
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %79 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %78, align 8
  br label %82

80:                                               ; preds = %62
  %81 = inttoptr i64 %64 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi %"class.blink::LayoutBoxModelObject"* [ %71, %70 ], [ %67, %80 ]
  %84 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %79, %70 ], [ %81, %80 ]
  %85 = tail call i32 %84(%"class.blink::LayoutBoxModelObject"* %83) #10
  %86 = tail call i1 @llvm.is.constant.i32(i32 %85) #10
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = sub i32 0, %85
  %89 = icmp eq i32 %88, -2147483648
  %90 = select i1 %89, i32 2147483647, i32 %88
  br label %96

91:                                               ; preds = %82
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %85) #10
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 2147483647, i32 %94
  br label %96

96:                                               ; preds = %91, %87
  %97 = phi i32 [ %90, %87 ], [ %95, %91 ]
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  br label %100

100:                                              ; preds = %48, %96
  %101 = phi i32 [ %49, %48 ], [ %45, %96 ]
  %102 = phi i32 [ %52, %48 ], [ %99, %96 ]
  %103 = icmp sgt i32 %102, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %102) #10
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !9
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15LayoutBlockFlow20CollapsedMarginAfterEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %3, i64 0, i32 0, i32 2, i32 0
  %7 = load i32, i32* %6, align 4
  br label %48

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlockFlow", %"class.blink::LayoutBlockFlow"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8, !noalias !35
  %15 = lshr i160 %14, 102
  %16 = trunc i160 %15 to i8
  %17 = and i8 %16, 3
  %18 = bitcast %"class.blink::LayoutBlockFlow"* %0 to i8*
  switch i8 %17, label %19 [
    i8 0, label %28
    i8 1, label %20
  ]

19:                                               ; preds = %8
  br label %20

20:                                               ; preds = %19, %8
  %21 = phi { i64, i64 } [ { i64 1041, i64 0 }, %19 ], [ { i64 1033, i64 0 }, %8 ]
  %22 = extractvalue { i64, i64 } %21, 0
  %23 = extractvalue { i64, i64 } %21, 1
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  %25 = bitcast i8* %24 to %"class.blink::LayoutBoxModelObject"*
  %26 = and i64 %22, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %38, label %28

28:                                               ; preds = %20, %8
  %29 = phi %"class.blink::LayoutBoxModelObject"* [ %25, %20 ], [ %9, %8 ]
  %30 = phi i8* [ %24, %20 ], [ %18, %8 ]
  %31 = phi i64 [ %22, %20 ], [ 1025, %8 ]
  %32 = bitcast i8* %30 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %31, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %37 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %36, align 8
  br label %40

38:                                               ; preds = %20
  %39 = inttoptr i64 %22 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %40

40:                                               ; preds = %28, %38
  %41 = phi %"class.blink::LayoutBoxModelObject"* [ %29, %28 ], [ %25, %38 ]
  %42 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %37, %28 ], [ %39, %38 ]
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* %41) #10
  %44 = icmp sgt i32 %43, 0
  %45 = select i1 %44, i32 %43, i32 0
  %46 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %2, align 8
  %47 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %5, %40
  %49 = phi i32 [ %7, %5 ], [ %45, %40 ]
  %50 = phi %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* [ %3, %5 ], [ %46, %40 ]
  %51 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %50, i64 0, i32 0, i32 3, i32 0
  %52 = load i32, i32* %51, align 4
  br label %100

53:                                               ; preds = %40
  %54 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 9
  %56 = bitcast [20 x i8]* %55 to i160*
  %57 = load i160, i160* %56, align 8, !noalias !38
  %58 = lshr i160 %57, 102
  %59 = trunc i160 %58 to i8
  %60 = and i8 %59, 3
  switch i8 %60, label %61 [
    i8 0, label %70
    i8 1, label %62
  ]

61:                                               ; preds = %53
  br label %62

62:                                               ; preds = %61, %53
  %63 = phi { i64, i64 } [ { i64 1041, i64 0 }, %61 ], [ { i64 1033, i64 0 }, %53 ]
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  %66 = getelementptr inbounds i8, i8* %18, i64 %65
  %67 = bitcast i8* %66 to %"class.blink::LayoutBoxModelObject"*
  %68 = and i64 %64, 1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %80, label %70

70:                                               ; preds = %62, %53
  %71 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %62 ], [ %9, %53 ]
  %72 = phi i8* [ %66, %62 ], [ %18, %53 ]
  %73 = phi i64 [ %64, %62 ], [ 1025, %53 ]
  %74 = bitcast i8* %72 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = add i64 %73, -1
  %77 = getelementptr i8, i8* %75, i64 %76
  %78 = bitcast i8* %77 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %79 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %78, align 8
  br label %82

80:                                               ; preds = %62
  %81 = inttoptr i64 %64 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi %"class.blink::LayoutBoxModelObject"* [ %71, %70 ], [ %67, %80 ]
  %84 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %79, %70 ], [ %81, %80 ]
  %85 = tail call i32 %84(%"class.blink::LayoutBoxModelObject"* %83) #10
  %86 = tail call i1 @llvm.is.constant.i32(i32 %85) #10
  br i1 %86, label %87, label %91

87:                                               ; preds = %82
  %88 = sub i32 0, %85
  %89 = icmp eq i32 %88, -2147483648
  %90 = select i1 %89, i32 2147483647, i32 %88
  br label %96

91:                                               ; preds = %82
  %92 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %85) #10
  %93 = extractvalue { i32, i1 } %92, 1
  %94 = extractvalue { i32, i1 } %92, 0
  %95 = select i1 %93, i32 2147483647, i32 %94
  br label %96

96:                                               ; preds = %91, %87
  %97 = phi i32 [ %90, %87 ], [ %95, %91 ]
  %98 = icmp sgt i32 %97, 0
  %99 = select i1 %98, i32 %97, i32 0
  br label %100

100:                                              ; preds = %48, %96
  %101 = phi i32 [ %49, %48 ], [ %45, %96 ]
  %102 = phi i32 [ %52, %48 ], [ %99, %96 ]
  %103 = icmp sgt i32 %102, -1
  %104 = select i1 %103, i32 -2147483648, i32 2147483647
  %105 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %102) #10
  %106 = extractvalue { i32, i1 } %105, 1
  %107 = extractvalue { i32, i1 } %105, 0
  %108 = select i1 %106, i32 %104, i32 %107, !prof !9
  ret i32 %108
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBlock"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  ret i1 %3
}

declare %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow10BreakAfterEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow11BreakBeforeEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow13StartPageNameEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15LayoutBlockFlow11EndPageNameEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox13IntrinsicSizeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #10
  br i1 %10, label %13, label %24

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #10
  br i1 %12, label %13, label %24

13:                                               ; preds = %9, %11
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #10
  br label %27

22:                                               ; preds = %13
  %23 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #10
  br label %27

24:                                               ; preds = %9, %11
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %22, %20, %24
  %28 = phi i32 [ %26, %24 ], [ %21, %20 ], [ %23, %22 ]
  ret i32 %28
}

declare i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #10
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow20FirstLineBoxBaselineEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlockFlow"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare i64 @_ZNK5blink11LayoutBlock29ComputeIntrinsicLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i8 @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare zeroext i1 @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN5blink15LayoutBlockFlow15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBlockFlow"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #1

declare void @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #1

declare zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink11LayoutBlock15CurrentFragmentEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::NGPhysicalBoxFragment"* null
}

declare void @_ZN5blink15LayoutBlockFlow17UpdateBlockLayoutEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE(%"class.blink::LayoutBlock"*, i1 zeroext, i1 zeroext, i32) unnamed_addr #1

declare i16 @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare void @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_(%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink15LayoutBlockFlow21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlockFlow"*, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #1

declare void @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink15LayoutBlockFlow32UpdateLogicalWidthAndColumnWidthEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGInlineNodeData"* @_ZN5blink15LayoutBlockFlow20TakeNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.blink::NGInlineNodeData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::NGInlineNodeData"* @_ZNK5blink15LayoutBlockFlow19GetNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret %"struct.blink::NGInlineNodeData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow21ResetNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow21ClearNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15LayoutBlockFlow19HasNGInlineNodeDataEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15LayoutBlockFlow18WillCollectInlinesEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink15LayoutBlockFlow26LayoutSpecialExcludedChildEbRNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlockFlow"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) unnamed_addr #1

declare %"class.blink::RootInlineBox"* @_ZN5blink15LayoutBlockFlow19CreateRootInlineBoxEv(%"class.blink::LayoutBlockFlow"*) unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow20TextAlignmentForLineEb(%"class.blink::LayoutBlockFlow"*, i1 zeroext) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink14LayoutListItemD1Ev(%"class.blink::LayoutListItem"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 -1, i32 2
  %3 = bitcast i8* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %3) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink14LayoutListItemD0Ev(%"class.blink::LayoutListItem"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutListItem", %"class.blink::LayoutListItem"* %0, i64 -1, i32 2
  %3 = bitcast i8* %2 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlowD2Ev(%"class.blink::LayoutBlockFlow"* %3) #10
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #0 align 2

declare %"class.blink::LayoutObject"* @_ZNK5blink7Element25PseudoElementLayoutObjectENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink10ListMarker16UpdateMarkerTextERNS_12LayoutObjectE(%"class.blink::ListMarker"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink13ComputedStyle5CloneERKS0_(%"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject34SetModifiedStyleOutsideStyleRecalcE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase9SetHeightERKNS_6LengthE(%"class.blink::ComputedStyleBase"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.blink::DataRef.714", %"class.blink::DataRef.714"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 3
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 3, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %8, %10
  br i1 %11, label %12, label %50

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 3, i32 1
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 1
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %14, %16
  br i1 %17, label %18, label %50

18:                                               ; preds = %12
  %19 = icmp eq i8 %8, 12
  br i1 %19, label %84, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 3, i32 3
  %22 = load i8, i8* %21, align 2, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::Length"* %6 to float*
  %26 = load float, float* %25, align 4
  br label %31

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sitofp i32 %29 to float
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi float [ %26, %24 ], [ %30, %27 ]
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %34 = load i8, i8* %33, align 2, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::Length"* %1 to float*
  %38 = load float, float* %37, align 4
  br label %43

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = sitofp i32 %41 to float
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi float [ %38, %36 ], [ %42, %39 ]
  %45 = fcmp oeq float %32, %44
  br i1 %45, label %84, label %46

46:                                               ; preds = %43
  %47 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %6, %"class.blink::Length"* dereferenceable(8) %1) #10
  br i1 %47, label %84, label %48

48:                                               ; preds = %46
  %49 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  br label %50

50:                                               ; preds = %48, %2, %12
  %51 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %49, %48 ], [ %5, %2 ], [ %5, %12 ]
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %69, label %55

55:                                               ; preds = %50
  %56 = tail call noalias i8* @malloc(i64 96) #10
  %57 = bitcast i8* %56 to %"class.blink::ComputedStyleBase::StyleBoxData"*
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleBoxData"* %57, %"class.blink::ComputedStyleBase::StyleBoxData"* dereferenceable(96) %51) #10
  %58 = ptrtoint i8* %56 to i64
  %59 = bitcast %"class.blink::DataRef.714"* %3 to i64*
  %60 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  store i64 %58, i64* %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #10
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %60) #10
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %60 to i8*
  tail call void @free(i8* %68) #10
  br label %69

69:                                               ; preds = %50, %55, %62, %67
  %70 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 3
  %72 = load i8, i8* %9, align 1
  %73 = icmp eq i8 %72, 8
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %1) #10
  br label %75

75:                                               ; preds = %74, %69
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 3, i32 2
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 8
  br i1 %78, label %79, label %80

79:                                               ; preds = %75
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #10
  br label %80

80:                                               ; preds = %75, %79
  %81 = bitcast %"class.blink::Length"* %1 to i64*
  %82 = bitcast %"class.blink::Length"* %71 to i64*
  %83 = load i64, i64* %81, align 4
  store i64 %83, i64* %82, align 4
  br label %84

84:                                               ; preds = %18, %43, %80, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase8SetWidthERKNS_6LengthE(%"class.blink::ComputedStyleBase"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.blink::DataRef.714", %"class.blink::DataRef.714"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 8, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 2
  %10 = load i8, i8* %9, align 1
  %11 = icmp eq i8 %8, %10
  br i1 %11, label %12, label %50

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 8, i32 1
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 1
  %16 = load i8, i8* %15, align 4, !range !2
  %17 = icmp eq i8 %14, %16
  br i1 %17, label %18, label %50

18:                                               ; preds = %12
  %19 = icmp eq i8 %8, 12
  br i1 %19, label %84, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %5, i64 0, i32 8, i32 3
  %22 = load i8, i8* %21, align 2, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.blink::Length"* %6 to float*
  %26 = load float, float* %25, align 4
  br label %31

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %6, i64 0, i32 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = sitofp i32 %29 to float
  br label %31

31:                                               ; preds = %27, %24
  %32 = phi float [ %26, %24 ], [ %30, %27 ]
  %33 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 3
  %34 = load i8, i8* %33, align 2, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::Length"* %1 to float*
  %38 = load float, float* %37, align 4
  br label %43

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %1, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = sitofp i32 %41 to float
  br label %43

43:                                               ; preds = %39, %36
  %44 = phi float [ %38, %36 ], [ %42, %39 ]
  %45 = fcmp oeq float %32, %44
  br i1 %45, label %84, label %46

46:                                               ; preds = %43
  %47 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %6, %"class.blink::Length"* dereferenceable(8) %1) #10
  br i1 %47, label %84, label %48

48:                                               ; preds = %46
  %49 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  br label %50

50:                                               ; preds = %48, %2, %12
  %51 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %49, %48 ], [ %5, %2 ], [ %5, %12 ]
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %69, label %55

55:                                               ; preds = %50
  %56 = tail call noalias i8* @malloc(i64 96) #10
  %57 = bitcast i8* %56 to %"class.blink::ComputedStyleBase::StyleBoxData"*
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleBoxData"* %57, %"class.blink::ComputedStyleBase::StyleBoxData"* dereferenceable(96) %51) #10
  %58 = ptrtoint i8* %56 to i64
  %59 = bitcast %"class.blink::DataRef.714"* %3 to i64*
  %60 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  store i64 %58, i64* %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #10
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %60) #10
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %60 to i8*
  tail call void @free(i8* %68) #10
  br label %69

69:                                               ; preds = %50, %55, %62, %67
  %70 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %4, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 8
  %72 = load i8, i8* %9, align 1
  %73 = icmp eq i8 %72, 8
  br i1 %73, label %74, label %75

74:                                               ; preds = %69
  tail call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* %1) #10
  br label %75

75:                                               ; preds = %74, %69
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %70, i64 0, i32 8, i32 2
  %77 = load i8, i8* %76, align 1
  %78 = icmp eq i8 %77, 8
  br i1 %78, label %79, label %80

79:                                               ; preds = %75
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #10
  br label %80

80:                                               ; preds = %75, %79
  %81 = bitcast %"class.blink::Length"* %1 to i64*
  %82 = bitcast %"class.blink::Length"* %71 to i64*
  %83 = load i64, i64* %81, align 4
  store i64 %83, i64* %82, align 4
  br label %84

84:                                               ; preds = %18, %43, %80, %46
  ret void
}

declare void @_ZN5blink17ComputedStyleBase12StyleBoxDataC1ERKS1_(%"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"* dereferenceable(96)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #5

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #10
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #10
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #10
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #10
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #10
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #10
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #10
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #10
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink15LayoutBlockFlow32GeneratesLineBoxesForInlineChildEPNS_12LayoutObjectE(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #1

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink11LayoutBlock27LogicalLeftOffsetForContentEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i32
  %6 = icmp slt i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1190036353683150593851392
  %14 = icmp eq i160 %13, 340010386766614455386112
  %15 = and i96 %4, 8589934592
  %16 = icmp eq i96 %15, 0
  %17 = or i1 %14, %16
  br i1 %6, label %18, label %78

18:                                               ; preds = %1
  br i1 %17, label %43, label %19

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %21 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #10
  %22 = icmp eq %"class.blink::PaintLayerScrollableArea"* %21, null
  br i1 %22, label %50, label %23

23:                                               ; preds = %19
  %24 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #10
  %25 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %24, i64 0, i32 6, i32 3
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %24, i64 0, i32 6, i32 1, i32 0, i32 0
  %31 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %30, align 8
  %32 = icmp eq %"class.blink::Scrollbar"* %31, null
  br i1 %32, label %33, label %50

33:                                               ; preds = %29, %23
  %34 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %20) #10
  %35 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %34, i64 0, i32 6, i32 3
  %36 = load i8, i8* %35, align 8
  %37 = and i8 %36, 2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %43, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %34, i64 0, i32 6, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %40, align 8
  %42 = icmp eq %"class.blink::Scrollbar"* %41, null
  br i1 %42, label %43, label %50

43:                                               ; preds = %39, %33, %18
  %44 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %45 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %44, i64 0, i32 0, i32 9
  %46 = bitcast [20 x i8]* %45 to i160*
  %47 = load i160, i160* %46, align 8
  %48 = and i160 %47, 270215977642229760
  %49 = icmp eq i160 %48, 0
  br label %50

50:                                               ; preds = %19, %29, %39, %43
  %51 = phi i1 [ false, %39 ], [ false, %29 ], [ false, %19 ], [ %49, %43 ]
  %52 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %53 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %54 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %55 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %54, i64 124
  %56 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %55, align 8
  %57 = tail call i32 %56(%"class.blink::LayoutBoxModelObject"* %52) #10
  br i1 %51, label %69, label %58

58:                                               ; preds = %50
  %59 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %7, i32 1, i32 0, i32 1) #10
  %60 = extractvalue { i64, i64 } %59, 1
  %61 = lshr i64 %60, 32
  %62 = trunc i64 %61 to i32
  %63 = icmp slt i32 %62, 0
  %64 = select i1 %63, i32 -2147483648, i32 2147483647
  %65 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %62) #10
  %66 = extractvalue { i32, i1 } %65, 1
  %67 = extractvalue { i32, i1 } %65, 0
  %68 = select i1 %66, i32 %64, i32 %67, !prof !9
  br label %69

69:                                               ; preds = %50, %58
  %70 = phi i32 [ %68, %58 ], [ %57, %50 ]
  %71 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %53, align 8
  %72 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %71, i64 120
  %73 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %72, align 8
  %74 = tail call i32 %73(%"class.blink::LayoutBoxModelObject"* %52) #10
  %75 = icmp slt i32 %74, 0
  %76 = select i1 %75, i32 -2147483648, i32 2147483647
  %77 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %70, i32 %74) #10
  br label %137

78:                                               ; preds = %1
  br i1 %17, label %103, label %79

79:                                               ; preds = %78
  %80 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %81 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #10
  %82 = icmp eq %"class.blink::PaintLayerScrollableArea"* %81, null
  br i1 %82, label %110, label %83

83:                                               ; preds = %79
  %84 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #10
  %85 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %84, i64 0, i32 6, i32 3
  %86 = load i8, i8* %85, align 8
  %87 = and i8 %86, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %93, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %84, i64 0, i32 6, i32 1, i32 0, i32 0
  %91 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %90, align 8
  %92 = icmp eq %"class.blink::Scrollbar"* %91, null
  br i1 %92, label %93, label %110

93:                                               ; preds = %89, %83
  %94 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %80) #10
  %95 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %94, i64 0, i32 6, i32 3
  %96 = load i8, i8* %95, align 8
  %97 = and i8 %96, 2
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %94, i64 0, i32 6, i32 2, i32 0, i32 0
  %101 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %100, align 8
  %102 = icmp eq %"class.blink::Scrollbar"* %101, null
  br i1 %102, label %103, label %110

103:                                              ; preds = %99, %93, %78
  %104 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %105 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %104, i64 0, i32 0, i32 9
  %106 = bitcast [20 x i8]* %105 to i160*
  %107 = load i160, i160* %106, align 8
  %108 = and i160 %107, 270215977642229760
  %109 = icmp eq i160 %108, 0
  br label %110

110:                                              ; preds = %79, %89, %99, %103
  %111 = phi i1 [ false, %99 ], [ false, %89 ], [ false, %79 ], [ %109, %103 ]
  %112 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %113 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %114 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %113, align 8
  %115 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %114, i64 122
  %116 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %115, align 8
  %117 = tail call i32 %116(%"class.blink::LayoutBoxModelObject"* %112) #10
  br i1 %111, label %128, label %118

118:                                              ; preds = %110
  %119 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %7, i32 1, i32 0, i32 1) #10
  %120 = extractvalue { i64, i64 } %119, 0
  %121 = trunc i64 %120 to i32
  %122 = icmp slt i32 %121, 0
  %123 = select i1 %122, i32 -2147483648, i32 2147483647
  %124 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %117, i32 %121) #10
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 %123, i32 %126, !prof !9
  br label %128

128:                                              ; preds = %110, %118
  %129 = phi i32 [ %127, %118 ], [ %117, %110 ]
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %113, align 8
  %131 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %130, i64 118
  %132 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %131, align 8
  %133 = tail call i32 %132(%"class.blink::LayoutBoxModelObject"* %112) #10
  %134 = icmp slt i32 %133, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %129, i32 %133) #10
  br label %137

137:                                              ; preds = %128, %69
  %138 = phi { i32, i1 } [ %136, %128 ], [ %77, %69 ]
  %139 = phi i32 [ %135, %128 ], [ %76, %69 ]
  %140 = extractvalue { i32, i1 } %138, 1
  %141 = extractvalue { i32, i1 } %138, 0
  %142 = select i1 %140, i32 %139, i32 %141
  ret i32 %142
}

declare i32 @_ZNK5blink15LayoutBlockFlow30AdjustLogicalLeftOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow29LogicalLeftFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"*, i32, i32, i32) local_unnamed_addr #1

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #1

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow31AdjustLogicalRightOffsetForLineENS_10LayoutUnitENS_15IndentTextOrNotE(%"class.blink::LayoutBlockFlow"*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink15LayoutBlockFlow30LogicalRightFloatOffsetForLineENS_10LayoutUnitES1_S1_(%"class.blink::LayoutBlockFlow"*, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #10
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #10
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #10
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !9
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #10
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #10
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #10
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #10
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #10
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !9
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #10
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #10
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon.2091, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #10
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !41

23:                                               ; preds = %19
  %24 = bitcast %class.anon.2091* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #10
  %25 = getelementptr inbounds %class.anon.2091, %class.anon.2091* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon.2091, %class.anon.2091* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #10
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #10
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #10
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), %class.anon.2091* nonnull dereferenceable(16) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #10
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #10
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #10
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.2091* dereferenceable(16)) local_unnamed_addr #4 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #10
  %20 = tail call i8* @_Znwm(i64 192) #11
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #10
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #10
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #10
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #10
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #10
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #10
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #10
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #10
  %38 = getelementptr inbounds %class.anon.2091, %class.anon.2091* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #10
  %40 = getelementptr inbounds %class.anon.2091, %class.anon.2091* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #10
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #10
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #10
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #10
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #10
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #10
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #11
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #10
  ret i64 %43
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !42

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !44

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !45

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #11
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #11, !noalias !46
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !46
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #11
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #3

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #1

declare void @_ZN5blink11LineBoxList26DirtyLinesFromChangedChildENS_14LineLayoutItemES1_b(%"class.blink::LineBoxList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind readnone }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!5 = distinct !{!5, !"_ZN5blink6Length5FixedIiEES0_T_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink6Length5FixedIiEES0_T_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink6Length5FixedIiEES0_T_"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!12 = distinct !{!12, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!18 = distinct !{!18, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!21 = distinct !{!21, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!28 = !{!"branch_weights", i32 4001, i32 4000000}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!31 = distinct !{!31, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!34 = distinct !{!34, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!37 = distinct !{!37, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!40 = distinct !{!40, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!41 = !{!"branch_weights", i32 2000, i32 1}
!42 = distinct !{!42, !43}
!43 = !{!"llvm.loop.unroll.disable"}
!44 = distinct !{!44, !43}
!45 = distinct !{!45, !43}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!48 = distinct !{!48, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
