; ModuleID = '../../third_party/blink/renderer/core/html/trust_token_attribute_parsing.cc'
source_filename = "../../third_party/blink/renderer/core/html/trust_token_attribute_parsing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.network::mojom::blink::TrustTokenParams"* }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector", %"class.WTF::Vector.4", %"class.WTF::String" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.WTF::Vector.4" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6" }
%"class.WTF::VectorBufferBase.6" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.WTF::StringImpl"* }
%"class.blink::JSONValue" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%class.scoped_refptr.21 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::JSONObject" = type { %"class.blink::JSONValue.base", [4 x i8], %"class.WTF::HashMap", %"class.WTF::Vector.4" }
%"class.blink::JSONValue.base" = type <{ i32 (...)**, i32 }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::JSONArray" = type { %"class.blink::JSONValue.base", %"class.WTF::Vector.16" }
%"class.WTF::Vector.16" = type { %"class.WTF::VectorBuffer.17" }
%"class.WTF::VectorBuffer.17" = type { %"class.WTF::VectorBufferBase.18" }
%"class.WTF::VectorBufferBase.18" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::JSONValue"* }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.24 }
%union.anon.24 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_IS3_EEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

@.str = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"refreshPolicy\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"signRequestData\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"includeTimestampHeader\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"issuers\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"http\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"https\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"additionalSignedHeaders\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"additionalSigningData\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"token-request\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"token-redemption\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"send-redemption-record\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.12 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"refresh\00", align 1
@.str.14 = private unnamed_addr constant [5 x i8] c"omit\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"headers-only\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"include\00", align 1
@.str.17 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.19 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.20 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14SecurityOriginEEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<const blink::SecurityOrigin>]\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8internal24TrustTokenParamsFromJsonENSt3__110unique_ptrINS_9JSONValueENS1_14default_deleteIS3_EEEE(%"class.mojo::StructPtr"* noalias nocapture sret, %"class.blink::JSONValue"*) local_unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca %"class.WTF::StringView", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.WTF::String", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.WTF::String", align 8
  %31 = alloca %"class.WTF::String", align 8
  %32 = alloca %class.scoped_refptr.21, align 8
  %33 = alloca %"class.WTF::String", align 8
  %34 = alloca %"class.WTF::String", align 8
  %35 = alloca %"class.WTF::String", align 8
  %36 = icmp eq %"class.blink::JSONValue"* %1, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %1, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 5
  %41 = bitcast %"class.blink::JSONValue"* %1 to %"class.blink::JSONObject"*
  br i1 %40, label %44, label %42

42:                                               ; preds = %37, %2
  %43 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %43, align 8
  br label %793

44:                                               ; preds = %37
  %45 = tail call i8* @_Znwm(i64 56) #10, !noalias !2
  %46 = bitcast i8* %45 to %"class.network::mojom::blink::TrustTokenParams"*
  tail call void @_ZN7network5mojom5blink16TrustTokenParamsC1Ev(%"class.network::mojom::blink::TrustTokenParams"* nonnull %46) #11, !noalias !2
  %47 = ptrtoint i8* %45 to i64
  %48 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %49, align 8
  %50 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #11
  %51 = call zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"* nonnull %41, %"class.WTF::String"* nonnull dereferenceable(8) %24, %"class.WTF::String"* nonnull %23) #11
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %44
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #11
  br label %68

68:                                               ; preds = %44, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  br i1 %51, label %71, label %69

69:                                               ; preds = %68
  %70 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %70, align 8
  br label %771

71:                                               ; preds = %68
  %72 = bitcast i8* %45 to i32*
  %73 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #11
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %76, label %80

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* null, i8** %77, align 8
  %78 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %79 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %78, i64* %79, align 8
  br label %88

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %81, align 8
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 1
  %85 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  %86 = bitcast i8** %85 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %86, align 8
  %87 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %88

88:                                               ; preds = %80, %76
  %89 = phi i64 [ %87, %80 ], [ %78, %76 ]
  %90 = phi i32 [ %83, %80 ], [ 0, %76 ]
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 %90, i32* %91, align 8
  %92 = bitcast %"class.WTF::StringView"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #11
  %93 = bitcast %"class.WTF::StringView"* %22 to i64*
  store i64 %89, i64* %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 1
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i8** %94, align 8
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %22, i64 0, i32 2
  store i32 13, i32* %95, align 8
  %96 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %21, %"class.WTF::StringView"* nonnull dereferenceable(24) %22) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #11
  br i1 %96, label %149, label %97

97:                                               ; preds = %88
  %98 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #11
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %101, label %105

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* null, i8** %102, align 8
  %103 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %104 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %103, i64* %104, align 8
  br label %113

105:                                              ; preds = %97
  %106 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 0
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %106, align 8
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 1
  %110 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  %111 = bitcast i8** %110 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %109, %"class.WTF::StringImpl"** %111, align 8
  %112 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %113

113:                                              ; preds = %105, %101
  %114 = phi i64 [ %112, %105 ], [ %103, %101 ]
  %115 = phi i32 [ %108, %105 ], [ 0, %101 ]
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 %115, i32* %116, align 8
  %117 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #11
  %118 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %114, i64* %118, align 8
  %119 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0), i8** %119, align 8
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 16, i32* %120, align 8
  %121 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %19, %"class.WTF::StringView"* nonnull dereferenceable(24) %20) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #11
  br i1 %121, label %149, label %122

122:                                              ; preds = %113
  %123 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %123) #11
  %124 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %126, label %130

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* null, i8** %127, align 8
  %128 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %129 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %128, i64* %129, align 8
  br label %138

130:                                              ; preds = %122
  %131 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 0
  store %"class.WTF::StringImpl"* %124, %"class.WTF::StringImpl"** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 1
  %133 = load i32, i32* %132, align 4
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 1
  %135 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  %136 = bitcast i8** %135 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %134, %"class.WTF::StringImpl"** %136, align 8
  %137 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %138

138:                                              ; preds = %130, %126
  %139 = phi i64 [ %137, %130 ], [ %128, %126 ]
  %140 = phi i32 [ %133, %130 ], [ 0, %126 ]
  %141 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 %140, i32* %141, align 8
  %142 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #11
  %143 = bitcast %"class.WTF::StringView"* %18 to i64*
  store i64 %139, i64* %143, align 8
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8** %144, align 8
  %145 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 22, i32* %145, align 8
  %146 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %17, %"class.WTF::StringView"* nonnull dereferenceable(24) %18) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %123) #11
  br i1 %146, label %149, label %147

147:                                              ; preds = %138
  %148 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %148, align 8
  br label %771

149:                                              ; preds = %138, %113, %88
  %150 = phi i32 [ 0, %88 ], [ 1, %113 ], [ 2, %138 ]
  store i32 %150, i32* %72, align 4
  %151 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %25, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 13) #11
  %152 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %41, %"class.WTF::String"* nonnull dereferenceable(8) %25) #11
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %149
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #11
  br label %169

169:                                              ; preds = %149, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #11
  %170 = icmp eq %"class.blink::JSONValue"* %152, null
  br i1 %170, label %256, label %171

171:                                              ; preds = %169
  %172 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %172) #11
  %173 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %173, align 8
  %174 = bitcast %"class.blink::JSONValue"* %152 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %175 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %174, align 8
  %176 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %175, i64 5
  %177 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %176, align 8
  %178 = call zeroext i1 %177(%"class.blink::JSONValue"* nonnull %152, %"class.WTF::String"* nonnull %26) #11
  br i1 %178, label %181, label %179

179:                                              ; preds = %171
  %180 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %180, align 8
  br label %237

181:                                              ; preds = %171
  %182 = getelementptr inbounds i8, i8* %45, i64 4
  %183 = bitcast i8* %182 to i32*
  %184 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %184) #11
  %185 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %186 = icmp eq %"class.WTF::StringImpl"* %185, null
  br i1 %186, label %187, label %191

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %188, align 8
  %189 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %190 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %189, i64* %190, align 8
  br label %199

191:                                              ; preds = %181
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %192, align 8
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 0, i32 1
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %185, i64 1
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %197 = bitcast i8** %196 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %195, %"class.WTF::StringImpl"** %197, align 8
  %198 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %199

199:                                              ; preds = %191, %187
  %200 = phi i64 [ %198, %191 ], [ %189, %187 ]
  %201 = phi i32 [ %194, %191 ], [ 0, %187 ]
  %202 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %201, i32* %202, align 8
  %203 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %203) #11
  %204 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %200, i64* %204, align 8
  %205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0), i8** %205, align 8
  %206 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 4, i32* %206, align 8
  %207 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %203) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %184) #11
  br i1 %207, label %208, label %209

208:                                              ; preds = %199
  store i32 0, i32* %183, align 4
  br label %237

209:                                              ; preds = %199
  %210 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %210) #11
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %213, label %217

213:                                              ; preds = %209
  %214 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %214, align 8
  %215 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %216 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %215, i64* %216, align 8
  br label %225

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %211, %"class.WTF::StringImpl"** %218, align 8
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 1
  %220 = load i32, i32* %219, align 4
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 1
  %222 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %223 = bitcast i8** %222 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %221, %"class.WTF::StringImpl"** %223, align 8
  %224 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %225

225:                                              ; preds = %217, %213
  %226 = phi i64 [ %224, %217 ], [ %215, %213 ]
  %227 = phi i32 [ %220, %217 ], [ 0, %213 ]
  %228 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %227, i32* %228, align 8
  %229 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %229) #11
  %230 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %226, i64* %230, align 8
  %231 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), i8** %231, align 8
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 7, i32* %232, align 8
  %233 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %229) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %210) #11
  br i1 %233, label %234, label %235

234:                                              ; preds = %225
  store i32 1, i32* %183, align 4
  br label %237

235:                                              ; preds = %225
  %236 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %236, align 8
  br label %237

237:                                              ; preds = %234, %208, %235, %179
  %238 = phi i32 [ 1, %235 ], [ 1, %179 ], [ 0, %208 ], [ 0, %234 ]
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #11
  br label %254

254:                                              ; preds = %237, %250, %253
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %172) #11
  %255 = icmp eq i32 %238, 0
  br i1 %255, label %256, label %771

256:                                              ; preds = %254, %169
  %257 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %257) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %27, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i64 0, i64 0), i64 15) #11
  %258 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %41, %"class.WTF::String"* nonnull dereferenceable(8) %27) #11
  %259 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %256
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #11
  br label %275

275:                                              ; preds = %256, %271, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %257) #11
  %276 = icmp eq %"class.blink::JSONValue"* %258, null
  br i1 %276, label %388, label %277

277:                                              ; preds = %275
  %278 = bitcast %"class.WTF::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %278) #11
  %279 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %279, align 8
  %280 = bitcast %"class.blink::JSONValue"* %258 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %281 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %280, align 8
  %282 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %281, i64 5
  %283 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %282, align 8
  %284 = call zeroext i1 %283(%"class.blink::JSONValue"* nonnull %258, %"class.WTF::String"* nonnull %28) #11
  br i1 %284, label %287, label %285

285:                                              ; preds = %277
  %286 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %286, align 8
  br label %369

287:                                              ; preds = %277
  %288 = getelementptr inbounds i8, i8* %45, i64 8
  %289 = bitcast i8* %288 to i32*
  %290 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %290) #11
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %293, label %297

293:                                              ; preds = %287
  %294 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %294, align 8
  %295 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %296 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %295, i64* %296, align 8
  br label %305

297:                                              ; preds = %287
  %298 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %291, %"class.WTF::StringImpl"** %298, align 8
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 1
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 1
  %302 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %303 = bitcast i8** %302 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %301, %"class.WTF::StringImpl"** %303, align 8
  %304 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %305

305:                                              ; preds = %297, %293
  %306 = phi i64 [ %304, %297 ], [ %295, %293 ]
  %307 = phi i32 [ %300, %297 ], [ 0, %293 ]
  %308 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %307, i32* %308, align 8
  %309 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %309) #11
  %310 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %306, i64* %310, align 8
  %311 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i8** %311, align 8
  %312 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 4, i32* %312, align 8
  %313 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %309) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %290) #11
  br i1 %313, label %314, label %315

314:                                              ; preds = %305
  store i32 0, i32* %289, align 4
  br label %369

315:                                              ; preds = %305
  %316 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %316) #11
  %317 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %318 = icmp eq %"class.WTF::StringImpl"* %317, null
  br i1 %318, label %319, label %323

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %320, align 8
  %321 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %322 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %321, i64* %322, align 8
  br label %331

323:                                              ; preds = %315
  %324 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %317, %"class.WTF::StringImpl"** %324, align 8
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 1
  %326 = load i32, i32* %325, align 4
  %327 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 1
  %328 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %329 = bitcast i8** %328 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %327, %"class.WTF::StringImpl"** %329, align 8
  %330 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %331

331:                                              ; preds = %323, %319
  %332 = phi i64 [ %330, %323 ], [ %321, %319 ]
  %333 = phi i32 [ %326, %323 ], [ 0, %319 ]
  %334 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %333, i32* %334, align 8
  %335 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %335) #11
  %336 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %332, i64* %336, align 8
  %337 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i8** %337, align 8
  %338 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 12, i32* %338, align 8
  %339 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %335) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %316) #11
  br i1 %339, label %340, label %341

340:                                              ; preds = %331
  store i32 1, i32* %289, align 4
  br label %369

341:                                              ; preds = %331
  %342 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %342) #11
  %343 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %344 = icmp eq %"class.WTF::StringImpl"* %343, null
  br i1 %344, label %345, label %349

345:                                              ; preds = %341
  %346 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %346, align 8
  %347 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %348 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %347, i64* %348, align 8
  br label %357

349:                                              ; preds = %341
  %350 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %343, %"class.WTF::StringImpl"** %350, align 8
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 0, i32 1
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %343, i64 1
  %354 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %355 = bitcast i8** %354 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %353, %"class.WTF::StringImpl"** %355, align 8
  %356 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %357

357:                                              ; preds = %349, %345
  %358 = phi i64 [ %356, %349 ], [ %347, %345 ]
  %359 = phi i32 [ %352, %349 ], [ 0, %345 ]
  %360 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %359, i32* %360, align 8
  %361 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %361) #11
  %362 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %358, i64* %362, align 8
  %363 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i8** %363, align 8
  %364 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 7, i32* %364, align 8
  %365 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %361) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %342) #11
  br i1 %365, label %366, label %367

366:                                              ; preds = %357
  store i32 2, i32* %289, align 4
  br label %369

367:                                              ; preds = %357
  %368 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %368, align 8
  br label %369

369:                                              ; preds = %366, %340, %314, %367, %285
  %370 = phi i32 [ 1, %367 ], [ 1, %285 ], [ 0, %314 ], [ 0, %340 ], [ 0, %366 ]
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %279, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %386, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br i1 %377, label %380, label %382

380:                                              ; preds = %373
  %381 = add i32 %379, -1
  store i32 %381, i32* %378, align 4
  br label %382

382:                                              ; preds = %380, %373
  %383 = phi i32 [ %381, %380 ], [ %379, %373 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %371) #11
  br label %386

386:                                              ; preds = %369, %382, %385
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %278) #11
  %387 = icmp eq i32 %370, 0
  br i1 %387, label %388, label %771

388:                                              ; preds = %386, %275
  %389 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %389) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %29, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i64 22) #11
  %390 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %41, %"class.WTF::String"* nonnull dereferenceable(8) %29) #11
  %391 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %391, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %392, null
  br i1 %393, label %407, label %394

394:                                              ; preds = %388
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load atomic i32, i32* %395 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %392, i64 0, i32 0
  %400 = load i32, i32* %399, align 4
  br i1 %398, label %401, label %403

401:                                              ; preds = %394
  %402 = add i32 %400, -1
  store i32 %402, i32* %399, align 4
  br label %403

403:                                              ; preds = %401, %394
  %404 = phi i32 [ %402, %401 ], [ %400, %394 ]
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %407

406:                                              ; preds = %403
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %392) #11
  br label %407

407:                                              ; preds = %388, %403, %406
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %389) #11
  %408 = icmp eq %"class.blink::JSONValue"* %390, null
  br i1 %408, label %418, label %409

409:                                              ; preds = %407
  %410 = getelementptr inbounds i8, i8* %45, i64 12
  %411 = bitcast %"class.blink::JSONValue"* %390 to i1 (%"class.blink::JSONValue"*, i8*)***
  %412 = load i1 (%"class.blink::JSONValue"*, i8*)**, i1 (%"class.blink::JSONValue"*, i8*)*** %411, align 8
  %413 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, i8*)*, i1 (%"class.blink::JSONValue"*, i8*)** %412, i64 2
  %414 = load i1 (%"class.blink::JSONValue"*, i8*)*, i1 (%"class.blink::JSONValue"*, i8*)** %413, align 8
  %415 = call zeroext i1 %414(%"class.blink::JSONValue"* nonnull %390, i8* %410) #11
  br i1 %415, label %418, label %416

416:                                              ; preds = %409
  %417 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %417, align 8
  br label %771

418:                                              ; preds = %407, %409
  %419 = bitcast %"class.WTF::String"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %419) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %30, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i64 7) #11
  %420 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %41, %"class.WTF::String"* nonnull dereferenceable(8) %30) #11
  %421 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  %422 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %421, align 8
  %423 = icmp eq %"class.WTF::StringImpl"* %422, null
  br i1 %423, label %437, label %424

424:                                              ; preds = %418
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = and i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %422, i64 0, i32 0
  %430 = load i32, i32* %429, align 4
  br i1 %428, label %431, label %433

431:                                              ; preds = %424
  %432 = add i32 %430, -1
  store i32 %432, i32* %429, align 4
  br label %433

433:                                              ; preds = %431, %424
  %434 = phi i32 [ %432, %431 ], [ %430, %424 ]
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %437

436:                                              ; preds = %433
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %422) #11
  br label %437

437:                                              ; preds = %418, %433, %436
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %419) #11
  %438 = icmp eq %"class.blink::JSONValue"* %420, null
  br i1 %438, label %646, label %439

439:                                              ; preds = %437
  %440 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %420, i64 0, i32 1
  %441 = load i32, i32* %440, align 8
  %442 = icmp eq i32 %441, 6
  %443 = bitcast %"class.blink::JSONValue"* %420 to %"class.blink::JSONArray"*
  br i1 %442, label %444, label %482

444:                                              ; preds = %439
  %445 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %420, i64 1, i32 2
  %446 = bitcast [4 x i8]* %445 to i32*
  %447 = load i32, i32* %446, align 4
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %482, label %449

449:                                              ; preds = %444
  %450 = bitcast %"class.WTF::String"* %31 to i8*
  %451 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %31, i64 0, i32 0, i32 0
  %452 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  %453 = getelementptr inbounds i8, i8* %45, i64 16
  %454 = bitcast i8* %453 to %"class.WTF::Vector"*
  %455 = bitcast %class.scoped_refptr.21* %32 to i8*
  %456 = getelementptr inbounds %class.scoped_refptr.21, %class.scoped_refptr.21* %32, i64 0, i32 0
  %457 = getelementptr inbounds i8, i8* %45, i64 28
  %458 = bitcast i8* %457 to i32*
  %459 = getelementptr inbounds i8, i8* %45, i64 24
  %460 = bitcast i8* %459 to i32*
  %461 = bitcast i8* %453 to %class.scoped_refptr**
  %462 = bitcast %"class.WTF::StringView"* %3 to i8*
  %463 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  %464 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %465 = bitcast i8** %464 to %"class.WTF::StringImpl"**
  %466 = bitcast %"class.WTF::StringView"* %3 to i64*
  %467 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  %468 = bitcast %"class.WTF::StringView"* %4 to i8*
  %469 = bitcast %"class.WTF::StringView"* %4 to i64*
  %470 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %471 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %472 = bitcast %"class.WTF::StringView"* %5 to i8*
  %473 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  %474 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %475 = bitcast i8** %474 to %"class.WTF::StringImpl"**
  %476 = bitcast %"class.WTF::StringView"* %5 to i64*
  %477 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %478 = bitcast %"class.WTF::StringView"* %6 to i8*
  %479 = bitcast %"class.WTF::StringView"* %6 to i64*
  %480 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %481 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  br label %488

482:                                              ; preds = %439, %444
  %483 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %483, align 8
  br label %771

484:                                              ; preds = %643
  %485 = load i32, i32* %446, align 4
  %486 = zext i32 %485 to i64
  %487 = icmp ult i64 %645, %486
  br i1 %487, label %488, label %646

488:                                              ; preds = %449, %484
  %489 = phi i64 [ 0, %449 ], [ %645, %484 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %450) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %451, align 8
  %490 = trunc i64 %489 to i32
  %491 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %443, i32 %490) #11
  %492 = bitcast %"class.blink::JSONValue"* %491 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %493 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %492, align 8
  %494 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %493, i64 5
  %495 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %494, align 8
  %496 = call zeroext i1 %495(%"class.blink::JSONValue"* %491, %"class.WTF::String"* nonnull %31) #11
  br i1 %496, label %497, label %625

497:                                              ; preds = %488
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %455) #11
  %498 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* nonnull dereferenceable(8) %31) #11
  store %"class.blink::SecurityOrigin"* %498, %"class.blink::SecurityOrigin"** %456, align 8
  %499 = load i32, i32* %458, align 4
  %500 = load i32, i32* %460, align 8
  %501 = icmp eq i32 %499, %500
  br i1 %501, label %510, label %502, !prof !5

502:                                              ; preds = %497
  %503 = ptrtoint %"class.blink::SecurityOrigin"* %498 to i64
  %504 = load %class.scoped_refptr*, %class.scoped_refptr** %461, align 8
  %505 = zext i32 %499 to i64
  %506 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %504, i64 %505
  %507 = bitcast %class.scoped_refptr* %506 to i64*
  store i64 %503, i64* %507, align 8
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %456, align 8
  %508 = load i32, i32* %458, align 4
  %509 = add i32 %508, 1
  store i32 %509, i32* %458, align 4
  br label %520

510:                                              ; preds = %497
  call void @_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_IS3_EEEvOT_(%"class.WTF::Vector"* %454, %class.scoped_refptr.21* nonnull dereferenceable(8) %32) #11
  %511 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %456, align 8
  %512 = icmp eq %"class.blink::SecurityOrigin"* %511, null
  br i1 %512, label %520, label %513

513:                                              ; preds = %510
  %514 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %511, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %514) #11
  %515 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %511, i64 0, i32 0, i32 0, i32 0, i32 0
  %516 = load i32, i32* %515, align 4
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %520

518:                                              ; preds = %513
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %511) #11
  %519 = bitcast %"class.blink::SecurityOrigin"* %511 to i8*
  call void @free(i8* %519) #11
  br label %520

520:                                              ; preds = %502, %510, %513, %518
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %455) #11
  %521 = load i32, i32* %458, align 4
  %522 = add i32 %521, -1
  %523 = call dereferenceable(8) %class.scoped_refptr* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %454, i32 %522) #11
  %524 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %523, i64 0, i32 0
  %525 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %524, align 8
  %526 = icmp eq %"class.blink::SecurityOrigin"* %525, null
  br i1 %526, label %625, label %527

527:                                              ; preds = %520
  %528 = call zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"* nonnull %525) #11
  br i1 %528, label %529, label %625

529:                                              ; preds = %527
  %530 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %524, align 8
  %531 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %530, i64 0, i32 1, i32 0, i32 0
  %532 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %531, align 8
  %533 = icmp eq %"class.WTF::StringImpl"* %532, null
  br i1 %533, label %551, label %534

534:                                              ; preds = %529
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %536 = load atomic i32, i32* %535 monotonic, align 4
  %537 = and i32 %536, 2
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %553

539:                                              ; preds = %534
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  %542 = zext i32 %541 to i33
  %543 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %542, i33 1) #11
  %544 = extractvalue { i33, i1 } %543, 1
  %545 = extractvalue { i33, i1 } %543, 0
  %546 = icmp slt i33 %545, 0
  %547 = or i1 %544, %546
  br i1 %547, label %548, label %549, !prof !5

548:                                              ; preds = %539
  call void @llvm.trap() #11
  unreachable

549:                                              ; preds = %539
  %550 = trunc i33 %545 to i32
  store i32 %550, i32* %540, align 4
  br label %553

551:                                              ; preds = %529
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %462) #11
  store i8* null, i8** %464, align 8
  %552 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %552, i64* %466, align 8
  br label %558

553:                                              ; preds = %534, %549
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %462) #11
  store %"class.WTF::StringImpl"* %532, %"class.WTF::StringImpl"** %463, align 8
  %554 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 1
  %555 = load i32, i32* %554, align 4
  %556 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 1
  store %"class.WTF::StringImpl"* %556, %"class.WTF::StringImpl"** %465, align 8
  %557 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %558

558:                                              ; preds = %553, %551
  %559 = phi i64 [ %557, %553 ], [ %552, %551 ]
  %560 = phi i32 [ %555, %553 ], [ 0, %551 ]
  store i32 %560, i32* %467, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %468) #11
  store i64 %559, i64* %469, align 8
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i8** %470, align 8
  store i32 4, i32* %471, align 8
  %561 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %468) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %462) #11
  br i1 %561, label %609, label %562

562:                                              ; preds = %558
  %563 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %524, align 8
  %564 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %563, i64 0, i32 1, i32 0, i32 0
  %565 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %564, align 8
  %566 = icmp eq %"class.WTF::StringImpl"* %565, null
  br i1 %566, label %584, label %567

567:                                              ; preds = %562
  %568 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %569 = load atomic i32, i32* %568 monotonic, align 4
  %570 = and i32 %569, 2
  %571 = icmp eq i32 %570, 0
  br i1 %571, label %572, label %586

572:                                              ; preds = %567
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 0
  %574 = load i32, i32* %573, align 4
  %575 = zext i32 %574 to i33
  %576 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %575, i33 1) #11
  %577 = extractvalue { i33, i1 } %576, 1
  %578 = extractvalue { i33, i1 } %576, 0
  %579 = icmp slt i33 %578, 0
  %580 = or i1 %577, %579
  br i1 %580, label %581, label %582, !prof !5

581:                                              ; preds = %572
  call void @llvm.trap() #11
  unreachable

582:                                              ; preds = %572
  %583 = trunc i33 %578 to i32
  store i32 %583, i32* %573, align 4
  br label %586

584:                                              ; preds = %562
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %472) #11
  store i8* null, i8** %474, align 8
  %585 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %585, i64* %476, align 8
  br label %591

586:                                              ; preds = %567, %582
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %472) #11
  store %"class.WTF::StringImpl"* %565, %"class.WTF::StringImpl"** %473, align 8
  %587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 1
  %588 = load i32, i32* %587, align 4
  %589 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 1
  store %"class.WTF::StringImpl"* %589, %"class.WTF::StringImpl"** %475, align 8
  %590 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %591

591:                                              ; preds = %586, %584
  %592 = phi i64 [ %590, %586 ], [ %585, %584 ]
  %593 = phi i32 [ %588, %586 ], [ 0, %584 ]
  store i32 %593, i32* %477, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %478) #11
  store i64 %592, i64* %479, align 8
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8** %480, align 8
  store i32 5, i32* %481, align 8
  %594 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %478) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %472) #11
  %595 = xor i1 %594, true
  br i1 %566, label %609, label %596

596:                                              ; preds = %591
  %597 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %598 = load atomic i32, i32* %597 monotonic, align 4
  %599 = and i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %565, i64 0, i32 0
  %602 = load i32, i32* %601, align 4
  br i1 %600, label %603, label %605

603:                                              ; preds = %596
  %604 = add i32 %602, -1
  store i32 %604, i32* %601, align 4
  br label %605

605:                                              ; preds = %603, %596
  %606 = phi i32 [ %604, %603 ], [ %602, %596 ]
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %609

608:                                              ; preds = %605
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %565) #11
  br label %609

609:                                              ; preds = %558, %608, %605, %591
  %610 = phi i1 [ false, %558 ], [ %595, %591 ], [ %595, %605 ], [ %595, %608 ]
  br i1 %533, label %624, label %611

611:                                              ; preds = %609
  %612 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %613 = load atomic i32, i32* %612 monotonic, align 4
  %614 = and i32 %613, 2
  %615 = icmp eq i32 %614, 0
  %616 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 0
  %617 = load i32, i32* %616, align 4
  br i1 %615, label %618, label %620

618:                                              ; preds = %611
  %619 = add i32 %617, -1
  store i32 %619, i32* %616, align 4
  br label %620

620:                                              ; preds = %618, %611
  %621 = phi i32 [ %619, %618 ], [ %617, %611 ]
  %622 = icmp eq i32 %621, 0
  br i1 %622, label %623, label %624

623:                                              ; preds = %620
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %532) #11
  br label %624

624:                                              ; preds = %609, %620, %623
  br i1 %610, label %625, label %626

625:                                              ; preds = %624, %527, %520, %488
  store i64 0, i64* %452, align 8
  br label %626

626:                                              ; preds = %625, %624
  %627 = phi i32 [ 0, %624 ], [ 1, %625 ]
  %628 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %451, align 8
  %629 = icmp eq %"class.WTF::StringImpl"* %628, null
  br i1 %629, label %643, label %630

630:                                              ; preds = %626
  %631 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %628, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %632 = load atomic i32, i32* %631 monotonic, align 4
  %633 = and i32 %632, 2
  %634 = icmp eq i32 %633, 0
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %628, i64 0, i32 0
  %636 = load i32, i32* %635, align 4
  br i1 %634, label %637, label %639

637:                                              ; preds = %630
  %638 = add i32 %636, -1
  store i32 %638, i32* %635, align 4
  br label %639

639:                                              ; preds = %637, %630
  %640 = phi i32 [ %638, %637 ], [ %636, %630 ]
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %642, label %643

642:                                              ; preds = %639
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %628) #11
  br label %643

643:                                              ; preds = %626, %639, %642
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %450) #11
  %644 = icmp eq i32 %627, 0
  %645 = add nuw nsw i64 %489, 1
  br i1 %644, label %484, label %771

646:                                              ; preds = %484, %437
  %647 = bitcast %"class.WTF::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %647) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %33, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i64 23) #11
  %648 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %41, %"class.WTF::String"* nonnull dereferenceable(8) %33) #11
  %649 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  %650 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %649, align 8
  %651 = icmp eq %"class.WTF::StringImpl"* %650, null
  br i1 %651, label %665, label %652

652:                                              ; preds = %646
  %653 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %654 = load atomic i32, i32* %653 monotonic, align 4
  %655 = and i32 %654, 2
  %656 = icmp eq i32 %655, 0
  %657 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %650, i64 0, i32 0
  %658 = load i32, i32* %657, align 4
  br i1 %656, label %659, label %661

659:                                              ; preds = %652
  %660 = add i32 %658, -1
  store i32 %660, i32* %657, align 4
  br label %661

661:                                              ; preds = %659, %652
  %662 = phi i32 [ %660, %659 ], [ %658, %652 ]
  %663 = icmp eq i32 %662, 0
  br i1 %663, label %664, label %665

664:                                              ; preds = %661
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %650) #11
  br label %665

665:                                              ; preds = %646, %661, %664
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %647) #11
  %666 = icmp eq %"class.blink::JSONValue"* %648, null
  br i1 %666, label %738, label %667

667:                                              ; preds = %665
  %668 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %648, i64 0, i32 1
  %669 = load i32, i32* %668, align 8
  %670 = icmp eq i32 %669, 6
  %671 = bitcast %"class.blink::JSONValue"* %648 to %"class.blink::JSONArray"*
  br i1 %670, label %672, label %689

672:                                              ; preds = %667
  %673 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %648, i64 1, i32 2
  %674 = bitcast [4 x i8]* %673 to i32*
  %675 = load i32, i32* %674, align 4
  %676 = icmp eq i32 %675, 0
  br i1 %676, label %738, label %677

677:                                              ; preds = %672
  %678 = bitcast %"class.WTF::String"* %34 to i8*
  %679 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %34, i64 0, i32 0, i32 0
  %680 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  %681 = getelementptr inbounds i8, i8* %45, i64 32
  %682 = getelementptr inbounds i8, i8* %45, i64 44
  %683 = bitcast i8* %682 to i32*
  %684 = getelementptr inbounds i8, i8* %45, i64 40
  %685 = bitcast i8* %684 to i32*
  %686 = bitcast i8* %681 to %"class.WTF::String"**
  %687 = bitcast %"class.WTF::String"* %34 to i64*
  %688 = bitcast i8* %681 to %"class.WTF::Vector.4"*
  br label %691

689:                                              ; preds = %667
  %690 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %690, align 8
  br label %771

691:                                              ; preds = %677, %733
  %692 = phi i64 [ 0, %677 ], [ %734, %733 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %678) #11
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %679, align 8
  %693 = trunc i64 %692 to i32
  %694 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %671, i32 %693) #11
  %695 = bitcast %"class.blink::JSONValue"* %694 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %696 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %695, align 8
  %697 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %696, i64 5
  %698 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %697, align 8
  %699 = call zeroext i1 %698(%"class.blink::JSONValue"* %694, %"class.WTF::String"* nonnull %34) #11
  br i1 %699, label %701, label %700

700:                                              ; preds = %691
  store i64 0, i64* %680, align 8
  br label %714

701:                                              ; preds = %691
  %702 = load i32, i32* %683, align 4
  %703 = load i32, i32* %685, align 8
  %704 = icmp eq i32 %702, %703
  br i1 %704, label %713, label %705, !prof !5

705:                                              ; preds = %701
  %706 = load %"class.WTF::String"*, %"class.WTF::String"** %686, align 8
  %707 = zext i32 %702 to i64
  %708 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %706, i64 %707
  %709 = load i64, i64* %687, align 8
  %710 = bitcast %"class.WTF::String"* %708 to i64*
  store i64 %709, i64* %710, align 8
  %711 = load i32, i32* %683, align 4
  %712 = add i32 %711, 1
  store i32 %712, i32* %683, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %678) #11
  br label %733

713:                                              ; preds = %701
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.4"* %688, %"class.WTF::String"* nonnull dereferenceable(8) %34) #11
  br label %714

714:                                              ; preds = %713, %700
  %715 = phi i32 [ 0, %713 ], [ 1, %700 ]
  %716 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %679, align 8
  %717 = icmp eq %"class.WTF::StringImpl"* %716, null
  br i1 %717, label %731, label %718

718:                                              ; preds = %714
  %719 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %716, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %720 = load atomic i32, i32* %719 monotonic, align 4
  %721 = and i32 %720, 2
  %722 = icmp eq i32 %721, 0
  %723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %716, i64 0, i32 0
  %724 = load i32, i32* %723, align 4
  br i1 %722, label %725, label %727

725:                                              ; preds = %718
  %726 = add i32 %724, -1
  store i32 %726, i32* %723, align 4
  br label %727

727:                                              ; preds = %725, %718
  %728 = phi i32 [ %726, %725 ], [ %724, %718 ]
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %730, label %731

730:                                              ; preds = %727
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %716) #11
  br label %731

731:                                              ; preds = %714, %727, %730
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %678) #11
  %732 = icmp eq i32 %715, 0
  br i1 %732, label %733, label %771

733:                                              ; preds = %705, %731
  %734 = add nuw nsw i64 %692, 1
  %735 = load i32, i32* %674, align 4
  %736 = zext i32 %735 to i64
  %737 = icmp ult i64 %734, %736
  br i1 %737, label %691, label %738

738:                                              ; preds = %733, %672, %665
  %739 = bitcast %"class.WTF::String"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %739) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %35, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0), i64 21) #11
  %740 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %41, %"class.WTF::String"* nonnull dereferenceable(8) %35) #11
  %741 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %742 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %741, align 8
  %743 = icmp eq %"class.WTF::StringImpl"* %742, null
  br i1 %743, label %757, label %744

744:                                              ; preds = %738
  %745 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %742, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %746 = load atomic i32, i32* %745 monotonic, align 4
  %747 = and i32 %746, 2
  %748 = icmp eq i32 %747, 0
  %749 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %742, i64 0, i32 0
  %750 = load i32, i32* %749, align 4
  br i1 %748, label %751, label %753

751:                                              ; preds = %744
  %752 = add i32 %750, -1
  store i32 %752, i32* %749, align 4
  br label %753

753:                                              ; preds = %751, %744
  %754 = phi i32 [ %752, %751 ], [ %750, %744 ]
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %756, label %757

756:                                              ; preds = %753
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %742) #11
  br label %757

757:                                              ; preds = %738, %753, %756
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %739) #11
  %758 = icmp eq %"class.blink::JSONValue"* %740, null
  br i1 %758, label %769, label %759

759:                                              ; preds = %757
  %760 = getelementptr inbounds i8, i8* %45, i64 48
  %761 = bitcast i8* %760 to %"class.WTF::String"*
  %762 = bitcast %"class.blink::JSONValue"* %740 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %763 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %762, align 8
  %764 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %763, i64 5
  %765 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %764, align 8
  %766 = call zeroext i1 %765(%"class.blink::JSONValue"* nonnull %740, %"class.WTF::String"* %761) #11
  br i1 %766, label %769, label %767

767:                                              ; preds = %759
  %768 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 0, i64* %768, align 8
  br label %771

769:                                              ; preds = %757, %759
  %770 = bitcast %"class.mojo::StructPtr"* %0 to i64*
  store i64 %47, i64* %770, align 8
  br label %771

771:                                              ; preds = %643, %731, %689, %482, %386, %254, %767, %416, %769, %147, %69
  %772 = phi i64 [ 0, %769 ], [ %47, %767 ], [ %47, %416 ], [ %47, %147 ], [ %47, %69 ], [ %47, %254 ], [ %47, %386 ], [ %47, %482 ], [ %47, %689 ], [ %47, %731 ], [ %47, %643 ]
  %773 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %774 = icmp eq %"class.WTF::StringImpl"* %773, null
  br i1 %774, label %788, label %775

775:                                              ; preds = %771
  %776 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %773, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %777 = load atomic i32, i32* %776 monotonic, align 4
  %778 = and i32 %777, 2
  %779 = icmp eq i32 %778, 0
  %780 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %773, i64 0, i32 0
  %781 = load i32, i32* %780, align 4
  br i1 %779, label %782, label %784

782:                                              ; preds = %775
  %783 = add i32 %781, -1
  store i32 %783, i32* %780, align 4
  br label %784

784:                                              ; preds = %782, %775
  %785 = phi i32 [ %783, %782 ], [ %781, %775 ]
  %786 = icmp eq i32 %785, 0
  br i1 %786, label %787, label %788

787:                                              ; preds = %784
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %773) #11
  br label %788

788:                                              ; preds = %771, %784, %787
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  %789 = icmp eq i64 %772, 0
  br i1 %789, label %793, label %790

790:                                              ; preds = %788
  %791 = inttoptr i64 %772 to %"class.network::mojom::blink::TrustTokenParams"*
  call void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"* nonnull %791) #11
  %792 = inttoptr i64 %772 to i8*
  call void @_ZdlPv(i8* %792) #10
  br label %793

793:                                              ; preds = %790, %788, %42
  br i1 %36, label %799, label %794

794:                                              ; preds = %793
  %795 = bitcast %"class.blink::JSONValue"* %1 to void (%"class.blink::JSONValue"*)***
  %796 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %795, align 8
  %797 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %796, i64 1
  %798 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %797, align 8
  call void %798(%"class.blink::JSONValue"* nonnull %1) #11
  br label %799

799:                                              ; preds = %793, %794
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"*, i32) local_unnamed_addr #2

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink14SecurityOrigin24IsPotentiallyTrustworthyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink16TrustTokenParamsD1Ev(%"class.network::mojom::blink::TrustTokenParams"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #11
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #11
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #11
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #11
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #11
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #11
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN7network5mojom5blink16TrustTokenParamsC1Ev(%"class.network::mojom::blink::TrustTokenParams"*) unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_IS3_EEEvOT_(%"class.WTF::Vector"*, %class.scoped_refptr.21* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  br i1 %15, label %18, label %45, !prof !6

18:                                               ; preds = %2
  %19 = icmp eq %class.scoped_refptr* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm(i64 %20) #11
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIKN5blink14SecurityOriginEEEEPKcv, i64 0, i64 0)) #11
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %class.scoped_refptr* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %class.scoped_refptr* %27 to i8*
  br i1 %30, label %32, label %38, !prof !6

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #11
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #11
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %class.scoped_refptr*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %class.scoped_refptr* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 %48
  %50 = getelementptr inbounds %class.scoped_refptr.21, %class.scoped_refptr.21* %1, i64 0, i32 0
  %51 = bitcast %class.scoped_refptr.21* %1 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %class.scoped_refptr* %49 to i64*
  store i64 %52, i64* %53, align 8
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %50, align 8
  %54 = load i32, i32* %3, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIKN5blink14SecurityOriginEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.20, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr* @_ZN3WTF6VectorI13scoped_refptrIKN5blink14SecurityOriginEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.17, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  ret %class.scoped_refptr* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.4"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !6

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !6

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.4"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !6

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !6

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.4"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.19, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.20, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN7network5mojom5blink16TrustTokenParams3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZN7network5mojom5blink16TrustTokenParams3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{!"branch_weights", i32 2000, i32 1}
