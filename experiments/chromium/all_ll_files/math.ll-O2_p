; ModuleID = '../../third_party/ots/src/src/math.cc'
source_filename = "../../third_party/ots/src/src/math.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypeMATH" = type { %"class.ots::Table.base", i8*, i64 }
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.ots::Buffer" = type { i8*, i64, i64 }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZN3ots5TableD2Ev = comdat any

$_ZN3ots12OpenTypeMATHD0Ev = comdat any

@.str = private unnamed_addr constant [17 x i8] c"bad glyph ID: %u\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"unknown part flag: %u\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"Required maxp table missing\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"bad MATH version\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"bad offset in MATH header\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"failed to parse MathConstants table\00", align 1
@.str.6 = private unnamed_addr constant [36 x i8] c"failed to parse MathGlyphInfo table\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"failed to parse MathVariants table\00", align 1
@_ZTVN3ots12OpenTypeMATHE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::Table"*)* @_ZN3ots5TableD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypeMATH"*)* @_ZN3ots12OpenTypeMATHD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeMATH"*, i8*, i64)* @_ZN3ots12OpenTypeMATH5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeMATH"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypeMATH9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::OpenTypeMATH"*)* @_ZN3ots12OpenTypeMATH15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH20ParseMathValueRecordEPNS_6BufferEPKhm(%"class.ots::OpenTypeMATH"* nocapture readonly, %"class.ots::Buffer"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 2
  %6 = load i64, i64* %5, align 8
  %7 = add i64 %6, 2
  %8 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %7, %9
  %11 = add i64 %9, -2
  %12 = icmp ugt i64 %6, %11
  %13 = or i1 %10, %12
  br i1 %13, label %35, label %14

14:                                               ; preds = %4
  store i64 %7, i64* %5, align 8
  %15 = add i64 %6, 4
  %16 = icmp ugt i64 %15, %9
  br i1 %16, label %35, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %7
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 1
  store i64 %15, i64* %5, align 8
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %17
  %25 = tail call i16 @llvm.bswap.i16(i16 %22) #6
  %26 = zext i16 %25 to i64
  %27 = icmp ult i64 %26, %3
  br i1 %27, label %28, label %35

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  %30 = load %"struct.ots::Font"*, %"struct.ots::Font"** %29, align 8
  %31 = getelementptr inbounds i8, i8* %2, i64 %26
  %32 = sub i64 %3, %26
  %33 = tail call zeroext i1 @_ZN3ots16ParseDeviceTableEPKNS_4FontEPKhm(%"struct.ots::Font"* %30, i8* %31, i64 %32) #6
  br i1 %33, label %34, label %35

34:                                               ; preds = %17, %28
  br label %35

35:                                               ; preds = %34, %24, %28, %14, %4
  %36 = phi i1 [ false, %4 ], [ true, %34 ], [ false, %24 ], [ false, %28 ], [ false, %14 ]
  ret i1 %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots16ParseDeviceTableEPKNS_4FontEPKhm(%"struct.ots::Font"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH23ParseMathConstantsTableEPKhm(%"class.ots::OpenTypeMATH"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 8
  br i1 %4, label %43, label %5

5:                                                ; preds = %3
  %6 = icmp ult i64 %2, 10
  %7 = add i64 %2, -2
  %8 = icmp ult i64 %7, 8
  %9 = or i1 %8, %6
  %10 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  br label %11

11:                                               ; preds = %33, %5
  %12 = phi i1 [ %9, %5 ], [ %38, %33 ]
  %13 = phi i64 [ 10, %5 ], [ %35, %33 ]
  %14 = phi i32 [ 0, %5 ], [ %34, %33 ]
  %15 = phi i64 [ 8, %5 ], [ %17, %33 ]
  br i1 %12, label %43, label %16

16:                                               ; preds = %11
  %17 = add nuw nsw i64 %15, 4
  %18 = icmp ugt i64 %17, %2
  br i1 %18, label %43, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %1, i64 %13
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = icmp eq i16 %22, 0
  br i1 %23, label %33, label %24

24:                                               ; preds = %19
  %25 = tail call i16 @llvm.bswap.i16(i16 %22) #6
  %26 = zext i16 %25 to i64
  %27 = icmp ult i64 %26, %2
  br i1 %27, label %28, label %43

28:                                               ; preds = %24
  %29 = load %"struct.ots::Font"*, %"struct.ots::Font"** %10, align 8
  %30 = getelementptr inbounds i8, i8* %1, i64 %26
  %31 = sub i64 %2, %26
  %32 = tail call zeroext i1 @_ZN3ots16ParseDeviceTableEPKNS_4FontEPKhm(%"struct.ots::Font"* %29, i8* %30, i64 %31) #6
  br i1 %32, label %33, label %43

33:                                               ; preds = %28, %19
  %34 = add nuw nsw i32 %14, 1
  %35 = or i64 %17, 2
  %36 = icmp ugt i64 %35, %2
  %37 = icmp ugt i64 %17, %7
  %38 = or i1 %37, %36
  %39 = icmp eq i32 %34, 51
  br i1 %39, label %40, label %11

40:                                               ; preds = %33
  %41 = or i1 %37, %36
  %42 = xor i1 %41, true
  ret i1 %42

43:                                               ; preds = %16, %28, %24, %11, %3
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH37ParseMathValueRecordSequenceForGlyphsEPNS_6BufferEPKhmt(%"class.ots::OpenTypeMATH"* nocapture readonly, %"class.ots::Buffer"* nocapture, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 2
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 2
  %9 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %8, %10
  br i1 %11, label %74, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %7
  %16 = bitcast i8* %15 to i16*
  %17 = load i16, i16* %16, align 1
  %18 = tail call i16 @llvm.bswap.i16(i16 %17) #6
  store i64 %8, i64* %6, align 8
  %19 = add i64 %7, 4
  %20 = icmp ugt i64 %19, %10
  br i1 %20, label %74, label %21

21:                                               ; preds = %12
  %22 = getelementptr inbounds i8, i8* %14, i64 %8
  %23 = bitcast i8* %22 to i16*
  %24 = load i16, i16* %23, align 1
  %25 = tail call i16 @llvm.bswap.i16(i16 %24) #6
  store i64 %19, i64* %6, align 8
  %26 = zext i16 %25 to i32
  %27 = shl nuw nsw i32 %26, 2
  %28 = add nuw nsw i32 %27, 4
  %29 = icmp ugt i32 %28, 65535
  br i1 %29, label %74, label %30

30:                                               ; preds = %21
  %31 = zext i16 %18 to i32
  %32 = icmp ule i32 %28, %31
  %33 = zext i16 %18 to i64
  %34 = icmp ult i64 %33, %3
  %35 = and i1 %34, %32
  br i1 %35, label %36, label %74

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  %38 = load %"struct.ots::Font"*, %"struct.ots::Font"** %37, align 8
  %39 = getelementptr inbounds i8, i8* %2, i64 %33
  %40 = sub i64 %3, %33
  %41 = tail call zeroext i1 @_ZN3ots18ParseCoverageTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"* %38, i8* %39, i64 %40, i16 zeroext %4, i16 zeroext %25) #6
  br i1 %41, label %42, label %74

42:                                               ; preds = %36
  %43 = icmp eq i16 %24, 0
  br i1 %43, label %74, label %44

44:                                               ; preds = %42, %71
  %45 = phi i32 [ %72, %71 ], [ 0, %42 ]
  %46 = load i64, i64* %6, align 8
  %47 = add i64 %46, 2
  %48 = load i64, i64* %9, align 8
  %49 = icmp ugt i64 %47, %48
  %50 = add i64 %48, -2
  %51 = icmp ugt i64 %46, %50
  %52 = or i1 %49, %51
  br i1 %52, label %74, label %53

53:                                               ; preds = %44
  store i64 %47, i64* %6, align 8
  %54 = add i64 %46, 4
  %55 = icmp ugt i64 %54, %48
  br i1 %55, label %74, label %56

56:                                               ; preds = %53
  %57 = load i8*, i8** %13, align 8
  %58 = getelementptr inbounds i8, i8* %57, i64 %47
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 1
  store i64 %54, i64* %6, align 8
  %61 = icmp eq i16 %60, 0
  br i1 %61, label %71, label %62

62:                                               ; preds = %56
  %63 = tail call i16 @llvm.bswap.i16(i16 %60) #6
  %64 = zext i16 %63 to i64
  %65 = icmp ult i64 %64, %3
  br i1 %65, label %66, label %74

66:                                               ; preds = %62
  %67 = load %"struct.ots::Font"*, %"struct.ots::Font"** %37, align 8
  %68 = getelementptr inbounds i8, i8* %2, i64 %64
  %69 = sub i64 %3, %64
  %70 = tail call zeroext i1 @_ZN3ots16ParseDeviceTableEPKNS_4FontEPKhm(%"struct.ots::Font"* %67, i8* %68, i64 %69) #6
  br i1 %70, label %71, label %74

71:                                               ; preds = %66, %56
  %72 = add nuw nsw i32 %45, 1
  %73 = icmp ult i32 %72, %26
  br i1 %73, label %44, label %74

74:                                               ; preds = %71, %53, %66, %62, %44, %42, %12, %5, %21, %30, %36
  %75 = phi i1 [ false, %21 ], [ false, %30 ], [ false, %36 ], [ false, %5 ], [ false, %12 ], [ true, %42 ], [ true, %71 ], [ false, %53 ], [ false, %66 ], [ false, %62 ], [ false, %44 ]
  ret i1 %75
}

declare zeroext i1 @_ZN3ots18ParseCoverageTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"*, i8*, i64, i16 zeroext, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH35ParseMathItalicsCorrectionInfoTableEPKhmt(%"class.ots::OpenTypeMATH"* nocapture readonly, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.ots::Buffer", align 8
  %6 = bitcast %"class.ots::Buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %5, i64 0, i32 2
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i64 0, i64* %9, align 8
  %10 = call zeroext i1 @_ZN3ots12OpenTypeMATH37ParseMathValueRecordSequenceForGlyphsEPNS_6BufferEPKhmt(%"class.ots::OpenTypeMATH"* %0, %"class.ots::Buffer"* nonnull %5, i8* %1, i64 %2, i16 zeroext %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH33ParseMathTopAccentAttachmentTableEPKhmt(%"class.ots::OpenTypeMATH"* nocapture readonly, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.ots::Buffer", align 8
  %6 = bitcast %"class.ots::Buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %5, i64 0, i32 2
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  store i64 0, i64* %9, align 8
  %10 = call zeroext i1 @_ZN3ots12OpenTypeMATH37ParseMathValueRecordSequenceForGlyphsEPNS_6BufferEPKhmt(%"class.ots::OpenTypeMATH"* %0, %"class.ots::Buffer"* nonnull %5, i8* %1, i64 %2, i16 zeroext %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #6
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH18ParseMathKernTableEPKhm(%"class.ots::OpenTypeMATH"* nocapture readonly, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = icmp ult i64 %2, 2
  br i1 %4, label %71, label %5

5:                                                ; preds = %3
  %6 = bitcast i8* %1 to i16*
  %7 = load i16, i16* %6, align 1
  %8 = tail call i16 @llvm.bswap.i16(i16 %7) #6
  %9 = zext i16 %8 to i32
  %10 = icmp eq i16 %7, 0
  %11 = add i64 %2, -2
  br i1 %10, label %14, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  br label %17

14:                                               ; preds = %41, %5
  %15 = phi i64 [ 2, %5 ], [ %25, %41 ]
  %16 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  br label %44

17:                                               ; preds = %12, %41
  %18 = phi i32 [ 0, %12 ], [ %42, %41 ]
  %19 = phi i64 [ 2, %12 ], [ %25, %41 ]
  %20 = add nuw nsw i64 %19, 2
  %21 = icmp ugt i64 %20, %2
  %22 = icmp ugt i64 %19, %11
  %23 = or i1 %22, %21
  br i1 %23, label %71, label %24

24:                                               ; preds = %17
  %25 = add nuw nsw i64 %19, 4
  %26 = icmp ugt i64 %25, %2
  br i1 %26, label %71, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds i8, i8* %1, i64 %20
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = icmp eq i16 %30, 0
  br i1 %31, label %41, label %32

32:                                               ; preds = %27
  %33 = tail call i16 @llvm.bswap.i16(i16 %30) #6
  %34 = zext i16 %33 to i64
  %35 = icmp ult i64 %34, %2
  br i1 %35, label %36, label %71

36:                                               ; preds = %32
  %37 = load %"struct.ots::Font"*, %"struct.ots::Font"** %13, align 8
  %38 = getelementptr inbounds i8, i8* %1, i64 %34
  %39 = sub i64 %2, %34
  %40 = tail call zeroext i1 @_ZN3ots16ParseDeviceTableEPKNS_4FontEPKhm(%"struct.ots::Font"* %37, i8* %38, i64 %39) #6
  br i1 %40, label %41, label %71

41:                                               ; preds = %36, %27
  %42 = add nuw nsw i32 %18, 1
  %43 = icmp ult i32 %42, %9
  br i1 %43, label %17, label %14

44:                                               ; preds = %14, %68
  %45 = phi i32 [ 0, %14 ], [ %69, %68 ]
  %46 = phi i64 [ %15, %14 ], [ %52, %68 ]
  %47 = add nuw nsw i64 %46, 2
  %48 = icmp ugt i64 %47, %2
  %49 = icmp ugt i64 %46, %11
  %50 = or i1 %49, %48
  br i1 %50, label %71, label %51

51:                                               ; preds = %44
  %52 = add nuw nsw i64 %46, 4
  %53 = icmp ugt i64 %52, %2
  br i1 %53, label %71, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %1, i64 %47
  %56 = bitcast i8* %55 to i16*
  %57 = load i16, i16* %56, align 1
  %58 = icmp eq i16 %57, 0
  br i1 %58, label %68, label %59

59:                                               ; preds = %54
  %60 = tail call i16 @llvm.bswap.i16(i16 %57) #6
  %61 = zext i16 %60 to i64
  %62 = icmp ult i64 %61, %2
  br i1 %62, label %63, label %71

63:                                               ; preds = %59
  %64 = load %"struct.ots::Font"*, %"struct.ots::Font"** %16, align 8
  %65 = getelementptr inbounds i8, i8* %1, i64 %61
  %66 = sub i64 %2, %61
  %67 = tail call zeroext i1 @_ZN3ots16ParseDeviceTableEPKNS_4FontEPKhm(%"struct.ots::Font"* %64, i8* %65, i64 %66) #6
  br i1 %67, label %68, label %71

68:                                               ; preds = %63, %54
  %69 = add nuw nsw i32 %45, 1
  %70 = icmp eq i32 %45, %9
  br i1 %70, label %71, label %44

71:                                               ; preds = %24, %36, %32, %17, %44, %59, %63, %51, %68, %3
  %72 = phi i1 [ false, %3 ], [ true, %68 ], [ false, %51 ], [ false, %63 ], [ false, %59 ], [ false, %44 ], [ false, %17 ], [ false, %32 ], [ false, %36 ], [ false, %24 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH22ParseMathKernInfoTableEPKhmt(%"class.ots::OpenTypeMATH"* nocapture readonly, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp ult i64 %2, 2
  br i1 %5, label %58, label %6

6:                                                ; preds = %4
  %7 = bitcast i8* %1 to i16*
  %8 = load i16, i16* %7, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #6
  %10 = icmp ult i64 %2, 4
  br i1 %10, label %58, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds i8, i8* %1, i64 2
  %13 = bitcast i8* %12 to i16*
  %14 = load i16, i16* %13, align 1
  %15 = tail call i16 @llvm.bswap.i16(i16 %14) #6
  %16 = zext i16 %15 to i32
  %17 = shl nuw nsw i32 %16, 3
  %18 = or i32 %17, 4
  %19 = icmp ugt i32 %18, 65535
  br i1 %19, label %58, label %20

20:                                               ; preds = %11
  %21 = zext i16 %9 to i32
  %22 = icmp ule i32 %18, %21
  %23 = zext i16 %9 to i64
  %24 = icmp ult i64 %23, %2
  %25 = and i1 %24, %22
  br i1 %25, label %26, label %58

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  %28 = load %"struct.ots::Font"*, %"struct.ots::Font"** %27, align 8
  %29 = getelementptr inbounds i8, i8* %1, i64 %23
  %30 = sub i64 %2, %23
  %31 = tail call zeroext i1 @_ZN3ots18ParseCoverageTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"* %28, i8* %29, i64 %30, i16 zeroext %3, i16 zeroext %15) #6
  br i1 %31, label %32, label %58

32:                                               ; preds = %26
  %33 = icmp eq i16 %14, 0
  br i1 %33, label %58, label %34

34:                                               ; preds = %32, %114
  %35 = phi i32 [ %115, %114 ], [ 0, %32 ]
  %36 = phi i64 [ %96, %114 ], [ 4, %32 ]
  %37 = or i64 %36, 2
  %38 = icmp ugt i64 %37, %2
  br i1 %38, label %58, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds i8, i8* %1, i64 %36
  %41 = bitcast i8* %40 to i16*
  %42 = load i16, i16* %41, align 1
  %43 = tail call i16 @llvm.bswap.i16(i16 %42) #6
  %44 = icmp eq i16 %42, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %39
  %46 = zext i16 %43 to i32
  %47 = icmp ugt i32 %18, %46
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = zext i16 %43 to i64
  %50 = icmp ult i64 %49, %2
  br i1 %50, label %51, label %58

51:                                               ; preds = %48
  %52 = getelementptr inbounds i8, i8* %1, i64 %49
  %53 = sub i64 %2, %49
  %54 = tail call zeroext i1 @_ZN3ots12OpenTypeMATH18ParseMathKernTableEPKhm(%"class.ots::OpenTypeMATH"* %0, i8* %52, i64 %53)
  br i1 %54, label %55, label %58

55:                                               ; preds = %39, %51
  %56 = add nuw nsw i64 %36, 4
  %57 = icmp ugt i64 %56, %2
  br i1 %57, label %58, label %60

58:                                               ; preds = %114, %34, %45, %51, %48, %55, %66, %69, %72, %76, %85, %88, %91, %95, %104, %107, %110, %32, %6, %4, %11, %20, %26
  %59 = phi i1 [ false, %11 ], [ false, %20 ], [ false, %26 ], [ false, %4 ], [ false, %6 ], [ true, %32 ], [ true, %114 ], [ false, %34 ], [ false, %45 ], [ false, %51 ], [ false, %48 ], [ false, %55 ], [ false, %66 ], [ false, %69 ], [ false, %72 ], [ false, %76 ], [ false, %85 ], [ false, %88 ], [ false, %91 ], [ false, %95 ], [ false, %104 ], [ false, %107 ], [ false, %110 ]
  ret i1 %59

60:                                               ; preds = %55
  %61 = getelementptr inbounds i8, i8* %1, i64 %37
  %62 = bitcast i8* %61 to i16*
  %63 = load i16, i16* %62, align 1
  %64 = tail call i16 @llvm.bswap.i16(i16 %63) #6
  %65 = icmp eq i16 %63, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %60
  %67 = zext i16 %64 to i32
  %68 = icmp ugt i32 %18, %67
  br i1 %68, label %58, label %69

69:                                               ; preds = %66
  %70 = zext i16 %64 to i64
  %71 = icmp ult i64 %70, %2
  br i1 %71, label %72, label %58

72:                                               ; preds = %69
  %73 = getelementptr inbounds i8, i8* %1, i64 %70
  %74 = sub i64 %2, %70
  %75 = tail call zeroext i1 @_ZN3ots12OpenTypeMATH18ParseMathKernTableEPKhm(%"class.ots::OpenTypeMATH"* %0, i8* %73, i64 %74)
  br i1 %75, label %76, label %58

76:                                               ; preds = %72, %60
  %77 = add nuw nsw i64 %36, 6
  %78 = icmp ugt i64 %77, %2
  br i1 %78, label %58, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds i8, i8* %1, i64 %56
  %81 = bitcast i8* %80 to i16*
  %82 = load i16, i16* %81, align 1
  %83 = tail call i16 @llvm.bswap.i16(i16 %82) #6
  %84 = icmp eq i16 %82, 0
  br i1 %84, label %95, label %85

85:                                               ; preds = %79
  %86 = zext i16 %83 to i32
  %87 = icmp ugt i32 %18, %86
  br i1 %87, label %58, label %88

88:                                               ; preds = %85
  %89 = zext i16 %83 to i64
  %90 = icmp ult i64 %89, %2
  br i1 %90, label %91, label %58

91:                                               ; preds = %88
  %92 = getelementptr inbounds i8, i8* %1, i64 %89
  %93 = sub i64 %2, %89
  %94 = tail call zeroext i1 @_ZN3ots12OpenTypeMATH18ParseMathKernTableEPKhm(%"class.ots::OpenTypeMATH"* %0, i8* %92, i64 %93)
  br i1 %94, label %95, label %58

95:                                               ; preds = %91, %79
  %96 = add nuw nsw i64 %36, 8
  %97 = icmp ugt i64 %96, %2
  br i1 %97, label %58, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds i8, i8* %1, i64 %77
  %100 = bitcast i8* %99 to i16*
  %101 = load i16, i16* %100, align 1
  %102 = tail call i16 @llvm.bswap.i16(i16 %101) #6
  %103 = icmp eq i16 %101, 0
  br i1 %103, label %114, label %104

104:                                              ; preds = %98
  %105 = zext i16 %102 to i32
  %106 = icmp ugt i32 %18, %105
  br i1 %106, label %58, label %107

107:                                              ; preds = %104
  %108 = zext i16 %102 to i64
  %109 = icmp ult i64 %108, %2
  br i1 %109, label %110, label %58

110:                                              ; preds = %107
  %111 = getelementptr inbounds i8, i8* %1, i64 %108
  %112 = sub i64 %2, %108
  %113 = tail call zeroext i1 @_ZN3ots12OpenTypeMATH18ParseMathKernTableEPKhm(%"class.ots::OpenTypeMATH"* %0, i8* %111, i64 %112)
  br i1 %113, label %114, label %58

114:                                              ; preds = %110, %98
  %115 = add nuw nsw i32 %35, 1
  %116 = icmp ult i32 %115, %16
  br i1 %116, label %34, label %58
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH23ParseMathGlyphInfoTableEPKhmt(%"class.ots::OpenTypeMATH"* nocapture readonly, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.ots::Buffer", align 8
  %6 = alloca %"class.ots::Buffer", align 8
  %7 = icmp ult i64 %2, 2
  br i1 %7, label %84, label %8

8:                                                ; preds = %4
  %9 = bitcast i8* %1 to i16*
  %10 = load i16, i16* %9, align 1
  %11 = tail call i16 @llvm.bswap.i16(i16 %10) #6
  %12 = icmp ult i64 %2, 4
  br i1 %12, label %84, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds i8, i8* %1, i64 2
  %15 = bitcast i8* %14 to i16*
  %16 = load i16, i16* %15, align 1
  %17 = tail call i16 @llvm.bswap.i16(i16 %16) #6
  %18 = icmp ult i64 %2, 6
  br i1 %18, label %84, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds i8, i8* %1, i64 4
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 1
  %23 = tail call i16 @llvm.bswap.i16(i16 %22) #6
  %24 = icmp ult i64 %2, 8
  br i1 %24, label %84, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds i8, i8* %1, i64 6
  %27 = bitcast i8* %26 to i16*
  %28 = load i16, i16* %27, align 1
  %29 = tail call i16 @llvm.bswap.i16(i16 %28) #6
  %30 = icmp eq i16 %10, 0
  br i1 %30, label %44, label %31

31:                                               ; preds = %25
  %32 = zext i16 %11 to i64
  %33 = icmp uge i64 %32, %2
  %34 = icmp ult i16 %11, 8
  %35 = or i1 %34, %33
  br i1 %35, label %84, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds i8, i8* %1, i64 %32
  %38 = sub i64 %2, %32
  %39 = bitcast %"class.ots::Buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #6
  %40 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %5, i64 0, i32 0
  %41 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %5, i64 0, i32 1
  %42 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %5, i64 0, i32 2
  store i8* %37, i8** %40, align 8
  store i64 %38, i64* %41, align 8
  store i64 0, i64* %42, align 8
  %43 = call zeroext i1 @_ZN3ots12OpenTypeMATH37ParseMathValueRecordSequenceForGlyphsEPNS_6BufferEPKhmt(%"class.ots::OpenTypeMATH"* %0, %"class.ots::Buffer"* nonnull %5, i8* %37, i64 %38, i16 zeroext %3) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #6
  br i1 %43, label %44, label %84

44:                                               ; preds = %25, %36
  %45 = icmp eq i16 %16, 0
  br i1 %45, label %59, label %46

46:                                               ; preds = %44
  %47 = zext i16 %17 to i64
  %48 = icmp uge i64 %47, %2
  %49 = icmp ult i16 %17, 8
  %50 = or i1 %49, %48
  br i1 %50, label %84, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds i8, i8* %1, i64 %47
  %53 = sub i64 %2, %47
  %54 = bitcast %"class.ots::Buffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #6
  %55 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %6, i64 0, i32 0
  %56 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %6, i64 0, i32 1
  %57 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %6, i64 0, i32 2
  store i8* %52, i8** %55, align 8
  store i64 %53, i64* %56, align 8
  store i64 0, i64* %57, align 8
  %58 = call zeroext i1 @_ZN3ots12OpenTypeMATH37ParseMathValueRecordSequenceForGlyphsEPNS_6BufferEPKhmt(%"class.ots::OpenTypeMATH"* %0, %"class.ots::Buffer"* nonnull %6, i8* %52, i64 %53, i16 zeroext %3) #6
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #6
  br i1 %58, label %59, label %84

59:                                               ; preds = %44, %51
  %60 = icmp eq i16 %22, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %59
  %62 = zext i16 %23 to i64
  %63 = icmp uge i64 %62, %2
  %64 = icmp ult i16 %23, 8
  %65 = or i1 %64, %63
  br i1 %65, label %84, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  %68 = load %"struct.ots::Font"*, %"struct.ots::Font"** %67, align 8
  %69 = getelementptr inbounds i8, i8* %1, i64 %62
  %70 = sub i64 %2, %62
  %71 = tail call zeroext i1 @_ZN3ots18ParseCoverageTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"* %68, i8* %69, i64 %70, i16 zeroext %3, i16 zeroext 0) #6
  br i1 %71, label %72, label %84

72:                                               ; preds = %59, %66
  %73 = icmp eq i16 %28, 0
  br i1 %73, label %83, label %74

74:                                               ; preds = %72
  %75 = zext i16 %29 to i64
  %76 = icmp uge i64 %75, %2
  %77 = icmp ult i16 %29, 8
  %78 = or i1 %77, %76
  br i1 %78, label %84, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds i8, i8* %1, i64 %75
  %81 = sub i64 %2, %75
  %82 = tail call zeroext i1 @_ZN3ots12OpenTypeMATH22ParseMathKernInfoTableEPKhmt(%"class.ots::OpenTypeMATH"* %0, i8* %80, i64 %81, i16 zeroext %3)
  br i1 %82, label %83, label %84

83:                                               ; preds = %72, %79
  br label %84

84:                                               ; preds = %19, %13, %8, %4, %79, %74, %66, %61, %51, %46, %36, %31, %83
  %85 = phi i1 [ true, %83 ], [ false, %31 ], [ false, %36 ], [ false, %46 ], [ false, %51 ], [ false, %61 ], [ false, %66 ], [ false, %74 ], [ false, %79 ], [ false, %4 ], [ false, %8 ], [ false, %13 ], [ false, %19 ]
  ret i1 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH23ParseGlyphAssemblyTableEPKhmt(%"class.ots::OpenTypeMATH"*, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp ult i64 %2, 4
  br i1 %5, label %75, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %1, i64 2
  %8 = bitcast i8* %7 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = icmp eq i16 %9, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %6
  %12 = tail call i16 @llvm.bswap.i16(i16 %9) #6
  %13 = zext i16 %12 to i64
  %14 = icmp ult i64 %13, %2
  br i1 %14, label %15, label %75

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  %17 = load %"struct.ots::Font"*, %"struct.ots::Font"** %16, align 8
  %18 = getelementptr inbounds i8, i8* %1, i64 %13
  %19 = sub i64 %2, %13
  %20 = tail call zeroext i1 @_ZN3ots16ParseDeviceTableEPKNS_4FontEPKhm(%"struct.ots::Font"* %17, i8* %18, i64 %19) #6
  %21 = xor i1 %20, true
  %22 = icmp ult i64 %2, 6
  %23 = or i1 %22, %21
  br i1 %23, label %75, label %26

24:                                               ; preds = %6
  %25 = icmp ult i64 %2, 6
  br i1 %25, label %75, label %26

26:                                               ; preds = %15, %24
  %27 = getelementptr inbounds i8, i8* %1, i64 4
  %28 = bitcast i8* %27 to i16*
  %29 = load i16, i16* %28, align 1
  %30 = tail call i16 @llvm.bswap.i16(i16 %29) #6
  %31 = zext i16 %30 to i32
  %32 = mul nuw nsw i32 %31, 10
  %33 = icmp ugt i32 %32, 65529
  br i1 %33, label %75, label %34

34:                                               ; preds = %26
  %35 = icmp eq i16 %29, 0
  br i1 %35, label %75, label %36

36:                                               ; preds = %34
  %37 = add i64 %2, -6
  br label %40

38:                                               ; preds = %63
  %39 = icmp ult i32 %71, %31
  br i1 %39, label %40, label %75

40:                                               ; preds = %36, %38
  %41 = phi i32 [ 0, %36 ], [ %71, %38 ]
  %42 = phi i64 [ 6, %36 ], [ %55, %38 ]
  %43 = add nuw nsw i64 %42, 2
  %44 = icmp ugt i64 %43, %2
  br i1 %44, label %75, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds i8, i8* %1, i64 %42
  %47 = bitcast i8* %46 to i16*
  %48 = load i16, i16* %47, align 1
  %49 = tail call i16 @llvm.bswap.i16(i16 %48) #6
  %50 = add nuw nsw i64 %42, 8
  %51 = icmp ugt i64 %50, %2
  %52 = icmp ugt i64 %43, %37
  %53 = or i1 %51, %52
  br i1 %53, label %75, label %54

54:                                               ; preds = %45
  %55 = add nuw nsw i64 %42, 10
  %56 = icmp ugt i64 %55, %2
  br i1 %56, label %75, label %57

57:                                               ; preds = %54
  %58 = icmp ult i16 %49, %3
  br i1 %58, label %63, label %59

59:                                               ; preds = %57
  %60 = zext i16 %49 to i32
  %61 = bitcast %"class.ots::OpenTypeMATH"* %0 to %"class.ots::Table"*
  %62 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %61, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 %60) #6
  br label %75

63:                                               ; preds = %57
  %64 = getelementptr inbounds i8, i8* %1, i64 %50
  %65 = bitcast i8* %64 to i16*
  %66 = load i16, i16* %65, align 1
  %67 = tail call i16 @llvm.bswap.i16(i16 %66) #6
  %68 = zext i16 %67 to i32
  %69 = and i32 %68, 65534
  %70 = icmp eq i32 %69, 0
  %71 = add nuw nsw i32 %41, 1
  br i1 %70, label %38, label %72

72:                                               ; preds = %63
  %73 = bitcast %"class.ots::OpenTypeMATH"* %0 to %"class.ots::Table"*
  %74 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %73, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i32 %68) #6
  br label %75

75:                                               ; preds = %38, %54, %45, %40, %34, %15, %11, %4, %59, %72, %24, %26
  %76 = phi i1 [ false, %26 ], [ false, %24 ], [ %74, %72 ], [ %62, %59 ], [ false, %4 ], [ false, %11 ], [ false, %15 ], [ true, %34 ], [ true, %38 ], [ false, %54 ], [ false, %45 ], [ false, %40 ]
  ret i1 %76
}

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH31ParseMathGlyphConstructionTableEPKhmt(%"class.ots::OpenTypeMATH"*, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp ult i64 %2, 2
  br i1 %5, label %59, label %6

6:                                                ; preds = %4
  %7 = bitcast i8* %1 to i16*
  %8 = load i16, i16* %7, align 1
  %9 = tail call i16 @llvm.bswap.i16(i16 %8) #6
  %10 = icmp ult i64 %2, 4
  br i1 %10, label %59, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds i8, i8* %1, i64 2
  %13 = bitcast i8* %12 to i16*
  %14 = load i16, i16* %13, align 1
  %15 = tail call i16 @llvm.bswap.i16(i16 %14) #6
  %16 = zext i16 %15 to i32
  %17 = shl nuw nsw i32 %16, 2
  %18 = add nuw nsw i32 %17, 4
  %19 = icmp ugt i32 %18, 65535
  br i1 %19, label %59, label %20

20:                                               ; preds = %11
  %21 = icmp eq i16 %8, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %20
  %23 = zext i16 %9 to i64
  %24 = icmp uge i64 %23, %2
  %25 = zext i16 %9 to i32
  %26 = icmp ugt i32 %18, %25
  %27 = or i1 %24, %26
  br i1 %27, label %59, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds i8, i8* %1, i64 %23
  %30 = sub i64 %2, %23
  %31 = tail call zeroext i1 @_ZN3ots12OpenTypeMATH23ParseGlyphAssemblyTableEPKhmt(%"class.ots::OpenTypeMATH"* %0, i8* %29, i64 %30, i16 zeroext %3)
  br i1 %31, label %32, label %59

32:                                               ; preds = %20, %28
  %33 = icmp eq i16 %14, 0
  br i1 %33, label %59, label %34

34:                                               ; preds = %32
  %35 = add i64 %2, -2
  br label %38

36:                                               ; preds = %52
  %37 = icmp ult i32 %54, %16
  br i1 %37, label %38, label %59

38:                                               ; preds = %34, %36
  %39 = phi i32 [ 0, %34 ], [ %54, %36 ]
  %40 = phi i64 [ 4, %34 ], [ %48, %36 ]
  %41 = or i64 %40, 2
  %42 = icmp ugt i64 %41, %2
  br i1 %42, label %59, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds i8, i8* %1, i64 %40
  %45 = bitcast i8* %44 to i16*
  %46 = load i16, i16* %45, align 1
  %47 = tail call i16 @llvm.bswap.i16(i16 %46) #6
  %48 = add nuw nsw i64 %40, 4
  %49 = icmp ugt i64 %48, %2
  %50 = icmp ugt i64 %41, %35
  %51 = or i1 %49, %50
  br i1 %51, label %59, label %52

52:                                               ; preds = %43
  %53 = icmp ult i16 %47, %3
  %54 = add nuw nsw i32 %39, 1
  br i1 %53, label %36, label %55

55:                                               ; preds = %52
  %56 = zext i16 %47 to i32
  %57 = bitcast %"class.ots::OpenTypeMATH"* %0 to %"class.ots::Table"*
  %58 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %57, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i32 %56) #6
  br label %59

59:                                               ; preds = %36, %43, %38, %32, %55, %6, %4, %11, %22, %28
  %60 = phi i1 [ false, %11 ], [ false, %22 ], [ false, %28 ], [ false, %4 ], [ false, %6 ], [ %58, %55 ], [ true, %32 ], [ true, %36 ], [ false, %43 ], [ false, %38 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH34ParseMathGlyphConstructionSequenceEPNS_6BufferEPKhmtttj(%"class.ots::OpenTypeMATH"*, %"class.ots::Buffer"* nocapture, i8*, i64, i16 zeroext, i16 zeroext, i16 zeroext, i32) local_unnamed_addr #0 align 2 {
  %9 = icmp eq i16 %6, 0
  br i1 %9, label %51, label %10

10:                                               ; preds = %8
  %11 = zext i16 %5 to i32
  %12 = icmp ult i32 %11, %7
  br i1 %12, label %51, label %13

13:                                               ; preds = %10
  %14 = zext i16 %5 to i64
  %15 = icmp ult i64 %14, %3
  br i1 %15, label %16, label %51

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  %18 = load %"struct.ots::Font"*, %"struct.ots::Font"** %17, align 8
  %19 = getelementptr inbounds i8, i8* %2, i64 %14
  %20 = sub i64 %3, %14
  %21 = tail call zeroext i1 @_ZN3ots18ParseCoverageTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"* %18, i8* %19, i64 %20, i16 zeroext %4, i16 zeroext %6) #6
  br i1 %21, label %22, label %51

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 2
  %24 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 0
  %25 = zext i16 %6 to i32
  %26 = getelementptr inbounds %"class.ots::Buffer", %"class.ots::Buffer"* %1, i64 0, i32 1
  br label %29

27:                                               ; preds = %46
  %28 = icmp eq i32 %50, %25
  br i1 %28, label %51, label %29

29:                                               ; preds = %27, %22
  %30 = phi i32 [ 0, %22 ], [ %50, %27 ]
  %31 = load i64, i64* %23, align 8
  %32 = add i64 %31, 2
  %33 = load i64, i64* %26, align 8
  %34 = icmp ugt i64 %32, %33
  br i1 %34, label %51, label %35

35:                                               ; preds = %29
  %36 = load i8*, i8** %24, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 %31
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = tail call i16 @llvm.bswap.i16(i16 %39) #6
  store i64 %32, i64* %23, align 8
  %41 = zext i16 %40 to i32
  %42 = icmp ult i32 %41, %7
  br i1 %42, label %51, label %43

43:                                               ; preds = %35
  %44 = zext i16 %40 to i64
  %45 = icmp ult i64 %44, %3
  br i1 %45, label %46, label %51

46:                                               ; preds = %43
  %47 = getelementptr inbounds i8, i8* %2, i64 %44
  %48 = sub i64 %3, %44
  %49 = tail call zeroext i1 @_ZN3ots12OpenTypeMATH31ParseMathGlyphConstructionTableEPKhmt(%"class.ots::OpenTypeMATH"* %0, i8* %47, i64 %48, i16 zeroext %4)
  %50 = add nuw nsw i32 %30, 1
  br i1 %49, label %27, label %51

51:                                               ; preds = %43, %35, %46, %29, %27, %8, %13, %10, %16
  %52 = phi i1 [ true, %8 ], [ false, %13 ], [ false, %10 ], [ false, %16 ], [ false, %43 ], [ false, %35 ], [ false, %46 ], [ false, %29 ], [ true, %27 ]
  ret i1 %52
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH22ParseMathVariantsTableEPKhmt(%"class.ots::OpenTypeMATH"*, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp ult i64 %2, 4
  br i1 %5, label %109, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %1, i64 2
  %8 = bitcast i8* %7 to i16*
  %9 = load i16, i16* %8, align 1
  %10 = tail call i16 @llvm.bswap.i16(i16 %9) #6
  %11 = icmp ult i64 %2, 6
  br i1 %11, label %109, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds i8, i8* %1, i64 4
  %14 = bitcast i8* %13 to i16*
  %15 = load i16, i16* %14, align 1
  %16 = tail call i16 @llvm.bswap.i16(i16 %15) #6
  %17 = icmp ult i64 %2, 8
  br i1 %17, label %109, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds i8, i8* %1, i64 6
  %20 = bitcast i8* %19 to i16*
  %21 = load i16, i16* %20, align 1
  %22 = tail call i16 @llvm.bswap.i16(i16 %21) #6
  %23 = icmp ult i64 %2, 10
  br i1 %23, label %109, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds i8, i8* %1, i64 8
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 1
  %28 = tail call i16 @llvm.bswap.i16(i16 %27) #6
  %29 = zext i16 %22 to i32
  %30 = shl nuw nsw i32 %29, 1
  %31 = add nuw nsw i32 %30, 10
  %32 = zext i16 %28 to i32
  %33 = shl nuw nsw i32 %32, 1
  %34 = add nuw nsw i32 %31, %33
  %35 = icmp ugt i32 %34, 65535
  br i1 %35, label %109, label %36

36:                                               ; preds = %24
  %37 = icmp eq i16 %21, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %36
  %39 = zext i16 %10 to i32
  %40 = icmp ugt i32 %34, %39
  br i1 %40, label %109, label %41

41:                                               ; preds = %38
  %42 = zext i16 %10 to i64
  %43 = icmp ult i64 %42, %2
  br i1 %43, label %44, label %109

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  %46 = load %"struct.ots::Font"*, %"struct.ots::Font"** %45, align 8
  %47 = getelementptr inbounds i8, i8* %1, i64 %42
  %48 = sub i64 %2, %42
  %49 = tail call zeroext i1 @_ZN3ots18ParseCoverageTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"* %46, i8* %47, i64 %48, i16 zeroext %3, i16 zeroext %22) #6
  br i1 %49, label %52, label %109

50:                                               ; preds = %67
  %51 = icmp eq i32 %71, %29
  br i1 %51, label %72, label %52

52:                                               ; preds = %44, %50
  %53 = phi i64 [ %55, %50 ], [ 10, %44 ]
  %54 = phi i32 [ %71, %50 ], [ 0, %44 ]
  %55 = add nuw nsw i64 %53, 2
  %56 = icmp ugt i64 %55, %2
  br i1 %56, label %109, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds i8, i8* %1, i64 %53
  %59 = bitcast i8* %58 to i16*
  %60 = load i16, i16* %59, align 1
  %61 = tail call i16 @llvm.bswap.i16(i16 %60) #6
  %62 = zext i16 %61 to i32
  %63 = icmp ugt i32 %34, %62
  br i1 %63, label %109, label %64

64:                                               ; preds = %57
  %65 = zext i16 %61 to i64
  %66 = icmp ult i64 %65, %2
  br i1 %66, label %67, label %109

67:                                               ; preds = %64
  %68 = getelementptr inbounds i8, i8* %1, i64 %65
  %69 = sub i64 %2, %65
  %70 = tail call zeroext i1 @_ZN3ots12OpenTypeMATH31ParseMathGlyphConstructionTableEPKhmt(%"class.ots::OpenTypeMATH"* %0, i8* %68, i64 %69, i16 zeroext %3) #6
  %71 = add nuw nsw i32 %54, 1
  br i1 %70, label %50, label %109

72:                                               ; preds = %50, %36
  %73 = phi i64 [ 10, %36 ], [ %55, %50 ]
  %74 = icmp eq i16 %27, 0
  br i1 %74, label %109, label %75

75:                                               ; preds = %72
  %76 = zext i16 %16 to i32
  %77 = icmp ugt i32 %34, %76
  br i1 %77, label %109, label %78

78:                                               ; preds = %75
  %79 = zext i16 %16 to i64
  %80 = icmp ult i64 %79, %2
  br i1 %80, label %81, label %109

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  %83 = load %"struct.ots::Font"*, %"struct.ots::Font"** %82, align 8
  %84 = getelementptr inbounds i8, i8* %1, i64 %79
  %85 = sub i64 %2, %79
  %86 = tail call zeroext i1 @_ZN3ots18ParseCoverageTableEPKNS_4FontEPKhmtt(%"struct.ots::Font"* %83, i8* %84, i64 %85, i16 zeroext %3, i16 zeroext %28) #6
  br i1 %86, label %89, label %109

87:                                               ; preds = %104
  %88 = icmp eq i32 %108, %32
  br i1 %88, label %109, label %89

89:                                               ; preds = %81, %87
  %90 = phi i64 [ %92, %87 ], [ %73, %81 ]
  %91 = phi i32 [ %108, %87 ], [ 0, %81 ]
  %92 = add nuw nsw i64 %90, 2
  %93 = icmp ugt i64 %92, %2
  br i1 %93, label %109, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds i8, i8* %1, i64 %90
  %96 = bitcast i8* %95 to i16*
  %97 = load i16, i16* %96, align 1
  %98 = tail call i16 @llvm.bswap.i16(i16 %97) #6
  %99 = zext i16 %98 to i32
  %100 = icmp ugt i32 %34, %99
  br i1 %100, label %109, label %101

101:                                              ; preds = %94
  %102 = zext i16 %98 to i64
  %103 = icmp ult i64 %102, %2
  br i1 %103, label %104, label %109

104:                                              ; preds = %101
  %105 = getelementptr inbounds i8, i8* %1, i64 %102
  %106 = sub i64 %2, %102
  %107 = tail call zeroext i1 @_ZN3ots12OpenTypeMATH31ParseMathGlyphConstructionTableEPKhmt(%"class.ots::OpenTypeMATH"* %0, i8* %105, i64 %106, i16 zeroext %3) #6
  %108 = add nuw nsw i32 %91, 1
  br i1 %107, label %87, label %109

109:                                              ; preds = %52, %67, %57, %64, %89, %104, %94, %101, %87, %4, %81, %75, %78, %44, %38, %41, %72, %18, %12, %6, %24
  %110 = phi i1 [ false, %24 ], [ false, %6 ], [ false, %12 ], [ false, %18 ], [ true, %72 ], [ false, %41 ], [ false, %38 ], [ false, %44 ], [ false, %78 ], [ false, %75 ], [ false, %81 ], [ false, %4 ], [ false, %89 ], [ false, %104 ], [ false, %94 ], [ false, %101 ], [ true, %87 ], [ false, %64 ], [ false, %57 ], [ false, %67 ], [ false, %52 ]
  ret i1 %110
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH5ParseEPKhm(%"class.ots::OpenTypeMATH"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.ots::OpenTypeMATH"* %0 to %"class.ots::Table"*
  %5 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 0, i32 3
  %6 = load %"struct.ots::Font"*, %"struct.ots::Font"** %5, align 8
  %7 = tail call %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"* %6, i32 1835104368) #6
  %8 = icmp eq %"class.ots::Table"* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #6
  br label %113

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.ots::Table", %"class.ots::Table"* %7, i64 0, i32 5, i64 1
  %13 = bitcast i8* %12 to i16*
  %14 = load i16, i16* %13, align 2
  %15 = icmp ult i64 %2, 4
  br i1 %15, label %113, label %16

16:                                               ; preds = %11
  %17 = bitcast i8* %1 to i32*
  %18 = load i32, i32* %17, align 1
  %19 = icmp eq i32 %18, 256
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.3, i64 0, i64 0)) #6
  br label %113

22:                                               ; preds = %16
  %23 = icmp ult i64 %2, 6
  br i1 %23, label %113, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds i8, i8* %1, i64 4
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 1
  %28 = tail call i16 @llvm.bswap.i16(i16 %27) #6
  %29 = icmp ult i64 %2, 8
  br i1 %29, label %113, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds i8, i8* %1, i64 6
  %32 = bitcast i8* %31 to i16*
  %33 = load i16, i16* %32, align 1
  %34 = tail call i16 @llvm.bswap.i16(i16 %33) #6
  %35 = icmp ult i64 %2, 10
  br i1 %35, label %113, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds i8, i8* %1, i64 8
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = tail call i16 @llvm.bswap.i16(i16 %39) #6
  %41 = zext i16 %28 to i64
  %42 = icmp uge i64 %41, %2
  %43 = icmp ult i16 %28, 10
  %44 = or i1 %43, %42
  br i1 %44, label %55, label %45

45:                                               ; preds = %36
  %46 = zext i16 %34 to i64
  %47 = icmp uge i64 %46, %2
  %48 = icmp ult i16 %34, 10
  %49 = or i1 %48, %47
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = zext i16 %40 to i64
  %52 = icmp uge i64 %51, %2
  %53 = icmp ult i16 %40, 10
  %54 = or i1 %53, %52
  br i1 %54, label %55, label %57

55:                                               ; preds = %50, %45, %36
  %56 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0)) #6
  br label %113

57:                                               ; preds = %50
  %58 = getelementptr inbounds i8, i8* %1, i64 %41
  %59 = sub i64 %2, %41
  %60 = icmp ult i64 %59, 8
  br i1 %60, label %96, label %61

61:                                               ; preds = %57
  %62 = icmp ult i64 %59, 10
  %63 = add i64 %59, -2
  %64 = icmp ult i64 %63, 8
  %65 = or i1 %62, %64
  br label %66

66:                                               ; preds = %88, %61
  %67 = phi i1 [ %65, %61 ], [ %93, %88 ]
  %68 = phi i64 [ 10, %61 ], [ %90, %88 ]
  %69 = phi i32 [ 0, %61 ], [ %89, %88 ]
  %70 = phi i64 [ 8, %61 ], [ %72, %88 ]
  br i1 %67, label %96, label %71

71:                                               ; preds = %66
  %72 = add nuw nsw i64 %70, 4
  %73 = icmp ugt i64 %72, %59
  br i1 %73, label %96, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds i8, i8* %58, i64 %68
  %76 = bitcast i8* %75 to i16*
  %77 = load i16, i16* %76, align 1
  %78 = icmp eq i16 %77, 0
  br i1 %78, label %88, label %79

79:                                               ; preds = %74
  %80 = tail call i16 @llvm.bswap.i16(i16 %77) #6
  %81 = zext i16 %80 to i64
  %82 = icmp ugt i64 %59, %81
  br i1 %82, label %83, label %96

83:                                               ; preds = %79
  %84 = load %"struct.ots::Font"*, %"struct.ots::Font"** %5, align 8
  %85 = getelementptr inbounds i8, i8* %58, i64 %81
  %86 = sub i64 %59, %81
  %87 = tail call zeroext i1 @_ZN3ots16ParseDeviceTableEPKNS_4FontEPKhm(%"struct.ots::Font"* %84, i8* %85, i64 %86) #6
  br i1 %87, label %88, label %96

88:                                               ; preds = %83, %74
  %89 = add nuw nsw i32 %69, 1
  %90 = or i64 %72, 2
  %91 = icmp ugt i64 %90, %59
  %92 = icmp ugt i64 %72, %63
  %93 = or i1 %92, %91
  %94 = icmp eq i32 %89, 51
  br i1 %94, label %95, label %66

95:                                               ; preds = %88
  br i1 %93, label %96, label %98

96:                                               ; preds = %66, %71, %79, %83, %95, %57
  %97 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0)) #6
  br label %113

98:                                               ; preds = %95
  %99 = getelementptr inbounds i8, i8* %1, i64 %46
  %100 = sub i64 %2, %46
  %101 = tail call zeroext i1 @_ZN3ots12OpenTypeMATH23ParseMathGlyphInfoTableEPKhmt(%"class.ots::OpenTypeMATH"* %0, i8* %99, i64 %100, i16 zeroext %14)
  br i1 %101, label %104, label %102

102:                                              ; preds = %98
  %103 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0)) #6
  br label %113

104:                                              ; preds = %98
  %105 = getelementptr inbounds i8, i8* %1, i64 %51
  %106 = sub i64 %2, %51
  %107 = tail call zeroext i1 @_ZN3ots12OpenTypeMATH22ParseMathVariantsTableEPKhmt(%"class.ots::OpenTypeMATH"* %0, i8* %105, i64 %106, i16 zeroext %14)
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"* %4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0)) #6
  br label %113

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 1
  store i8* %1, i8** %111, align 8
  %112 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 2
  store i64 %2, i64* %112, align 8
  br label %113

113:                                              ; preds = %20, %11, %30, %24, %22, %110, %108, %102, %96, %55, %9
  %114 = phi i1 [ %10, %9 ], [ %21, %20 ], [ false, %11 ], [ %56, %55 ], [ true, %110 ], [ %109, %108 ], [ %103, %102 ], [ %97, %96 ], [ false, %22 ], [ false, %24 ], [ false, %30 ]
  ret i1 %114
}

declare %"class.ots::Table"* @_ZNK3ots4Font13GetTypedTableEj(%"struct.ots::Font"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots5Table4DropEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypeMATH"* nocapture readonly, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %113, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %12 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %11, align 8
  %13 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %12, i64 4
  %14 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %13, align 8
  %15 = tail call i64 %14(%"class.ots::OTSStream"* %1) #6
  %16 = and i64 %15, 3
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %30, label %18

18:                                               ; preds = %10
  %19 = sub nuw nsw i64 4, %16
  %20 = icmp ult i64 %19, %8
  %21 = select i1 %20, i64 %19, i64 %8
  %22 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #6
  store i32 0, i32* %3, align 4
  %23 = getelementptr inbounds i8, i8* %22, i64 %16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 1 %6, i64 %21, i1 false) #6
  %24 = load i32, i32* %3, align 4
  %25 = tail call i32 @llvm.bswap.i32(i32 %24) #6
  %26 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = add i32 %27, %25
  store i32 %28, i32* %26, align 8
  %29 = sub i64 %8, %21
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #6
  br label %30

30:                                               ; preds = %18, %10
  %31 = phi i64 [ %8, %10 ], [ %29, %18 ]
  %32 = phi i64 [ 0, %10 ], [ %21, %18 ]
  %33 = icmp ugt i64 %31, 3
  br i1 %33, label %34, label %95

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = add i64 %31, -4
  %38 = lshr i64 %37, 2
  %39 = add nuw nsw i64 %38, 1
  %40 = and i64 %39, 3
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %34, %42
  %43 = phi i32 [ %51, %42 ], [ %36, %34 ]
  %44 = phi i64 [ %53, %42 ], [ %32, %34 ]
  %45 = phi i64 [ %52, %42 ], [ %31, %34 ]
  %46 = phi i64 [ %54, %42 ], [ %40, %34 ]
  %47 = getelementptr inbounds i8, i8* %6, i64 %44
  %48 = bitcast i8* %47 to i32*
  %49 = load i32, i32* %48, align 1
  %50 = tail call i32 @llvm.bswap.i32(i32 %49) #6
  %51 = add i32 %50, %43
  store i32 %51, i32* %35, align 8
  %52 = add i64 %45, -4
  %53 = add i64 %44, 4
  %54 = add i64 %46, -1
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %56, label %42, !llvm.loop !2

56:                                               ; preds = %42, %34
  %57 = phi i32 [ %36, %34 ], [ %51, %42 ]
  %58 = phi i64 [ %32, %34 ], [ %53, %42 ]
  %59 = phi i64 [ %31, %34 ], [ %52, %42 ]
  %60 = phi i64 [ undef, %34 ], [ %53, %42 ]
  %61 = icmp ult i64 %37, 12
  br i1 %61, label %92, label %62

62:                                               ; preds = %56, %62
  %63 = phi i32 [ %88, %62 ], [ %57, %56 ]
  %64 = phi i64 [ %90, %62 ], [ %58, %56 ]
  %65 = phi i64 [ %89, %62 ], [ %59, %56 ]
  %66 = getelementptr inbounds i8, i8* %6, i64 %64
  %67 = bitcast i8* %66 to i32*
  %68 = load i32, i32* %67, align 1
  %69 = tail call i32 @llvm.bswap.i32(i32 %68) #6
  %70 = add i32 %69, %63
  store i32 %70, i32* %35, align 8
  %71 = add i64 %64, 4
  %72 = getelementptr inbounds i8, i8* %6, i64 %71
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 1
  %75 = tail call i32 @llvm.bswap.i32(i32 %74) #6
  %76 = add i32 %75, %70
  store i32 %76, i32* %35, align 8
  %77 = add i64 %64, 8
  %78 = getelementptr inbounds i8, i8* %6, i64 %77
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 1
  %81 = tail call i32 @llvm.bswap.i32(i32 %80) #6
  %82 = add i32 %81, %76
  store i32 %82, i32* %35, align 8
  %83 = add i64 %64, 12
  %84 = getelementptr inbounds i8, i8* %6, i64 %83
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 1
  %87 = tail call i32 @llvm.bswap.i32(i32 %86) #6
  %88 = add i32 %87, %82
  store i32 %88, i32* %35, align 8
  %89 = add i64 %65, -16
  %90 = add i64 %64, 16
  %91 = icmp ugt i64 %89, 3
  br i1 %91, label %62, label %92

92:                                               ; preds = %62, %56
  %93 = phi i64 [ %60, %56 ], [ %90, %62 ]
  %94 = and i64 %31, 3
  br label %95

95:                                               ; preds = %92, %30
  %96 = phi i64 [ %31, %30 ], [ %94, %92 ]
  %97 = phi i64 [ %32, %30 ], [ %93, %92 ]
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %95
  %100 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100)
  store i32 0, i32* %4, align 4
  %101 = getelementptr inbounds i8, i8* %6, i64 %97
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %100, i8* align 1 %101, i64 %96, i1 false) #6
  %102 = load i32, i32* %4, align 4
  %103 = tail call i32 @llvm.bswap.i32(i32 %102) #6
  %104 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = add i32 %105, %103
  store i32 %106, i32* %104, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100)
  br label %107

107:                                              ; preds = %95, %99
  %108 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %109 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %108, align 8
  %110 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %109, i64 2
  %111 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %110, align 8
  %112 = tail call zeroext i1 %111(%"class.ots::OTSStream"* %1, i8* %6, i64 %8) #6
  ret i1 %112

113:                                              ; preds = %2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypeMATH15ShouldSerializeEv(%"class.ots::OpenTypeMATH"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.ots::OpenTypeMATH"* %0 to %"class.ots::Table"*
  %3 = tail call zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"* %2) #6
  br i1 %3, label %4, label %8

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.ots::OpenTypeMATH", %"class.ots::OpenTypeMATH"* %0, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br label %8

8:                                                ; preds = %4, %1
  %9 = phi i1 [ false, %1 ], [ %7, %4 ]
  ret i1 %9
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots5TableD2Ev(%"class.ots::Table"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypeMATHD0Ev(%"class.ots::OpenTypeMATH"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.ots::OpenTypeMATH"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
