; ModuleID = '../../v8/src/objects/contexts.cc'
source_filename = "../../v8/src/objects/contexts.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.543" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.141", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.21", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.21", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.21", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.21", i64, i64, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.31", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.163", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.21", i64, i8, %"struct.std::__1::atomic.21", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.167", %"class.std::__1::vector.167", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.436", %"class.std::__1::unique_ptr.446", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.452", %"class.std::__1::unique_ptr.458", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.476", %"class.std::__1::shared_ptr.482", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.505", %"class.std::__1::unique_ptr.531", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.537", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.550", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.332", i8, [7 x i8], %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.582", %"class.std::__1::unordered_map.556", %"class.std::__1::unordered_map.606", %"class.std::__1::vector.634", i8, %"class.std::__1::unique_ptr.641", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.4", %"class.std::__1::__compressed_pair.11", %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.18", [4 x i8] }>
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6", %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { i64 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.26" }
%"struct.std::__1::atomic.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl.29" }
%"struct.std::__1::__cxx_atomic_impl.29" = type { %"struct.std::__1::__cxx_atomic_base_impl.30" }
%"struct.std::__1::__cxx_atomic_base_impl.30" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.647", %"class.std::__1::unique_ptr.668", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.678", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.817", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.830", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.840", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.851", %"struct.std::__1::atomic.154", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.926", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.969"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.977", i32, i8, i8, i32, i32, %"class.std::__1::vector.983", %"class.std::__1::vector.983", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.990", i64, %"class.std::__1::unordered_map.991", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.543", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.162", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1047", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1085", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1119", %"class.std::__1::vector.1123", %"class.std::__1::vector.1123", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.1", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.1" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.647" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.141", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.648", %"class.std::__1::unique_ptr.662" }
%"class.std::__1::unique_ptr.648" = type { %"class.std::__1::__compressed_pair.649" }
%"class.std::__1::__compressed_pair.649" = type { %"struct.std::__1::__compressed_pair_elem.650" }
%"struct.std::__1::__compressed_pair_elem.650" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.651" }
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.std::__1::unique_ptr.653"*, %"class.std::__1::unique_ptr.653"*, %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.1147" }
%"class.std::__1::__compressed_pair.1147" = type { %"struct.std::__1::__compressed_pair_elem.1148" }
%"struct.std::__1::__compressed_pair_elem.1148" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.std::__1::unique_ptr.653"* }
%"class.std::__1::unique_ptr.662" = type { %"class.std::__1::__compressed_pair.663" }
%"class.std::__1::__compressed_pair.663" = type { %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.668" = type { %"class.std::__1::__compressed_pair.669" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem.670" }
%"struct.std::__1::__compressed_pair_elem.670" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.671", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.671" = type { %"struct.std::__1::__atomic_base.672" }
%"struct.std::__1::__atomic_base.672" = type { %"struct.std::__1::__cxx_atomic_impl.673" }
%"struct.std::__1::__cxx_atomic_impl.673" = type { %"struct.std::__1::__cxx_atomic_base_impl.674" }
%"struct.std::__1::__cxx_atomic_base_impl.674" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.678" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.679", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.679" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.680", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.680" = type { %"class.std::__1::__vector_base.681" }
%"class.std::__1::__vector_base.681" = type { %"class.std::__1::unique_ptr.682"*, %"class.std::__1::unique_ptr.682"*, %"class.std::__1::__compressed_pair.683" }
%"class.std::__1::unique_ptr.682" = type opaque
%"class.std::__1::__compressed_pair.683" = type { %"struct.std::__1::__compressed_pair_elem.684" }
%"struct.std::__1::__compressed_pair_elem.684" = type { %"class.std::__1::unique_ptr.682"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.688", %"class.std::__1::unique_ptr.694", %"struct.std::__1::atomic.154", %"class.std::__1::unique_ptr.700", %"class.std::__1::unique_ptr.706", %"class.std::__1::unique_ptr.712", %"class.std::__1::unique_ptr.718", %"class.std::__1::unique_ptr.724", %"class.std::__1::set.730", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.688" = type { %"class.std::__1::__compressed_pair.689" }
%"class.std::__1::__compressed_pair.689" = type { %"struct.std::__1::__compressed_pair_elem.690" }
%"struct.std::__1::__compressed_pair_elem.690" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.706" = type { %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.712" = type { %"class.std::__1::__compressed_pair.713" }
%"class.std::__1::__compressed_pair.713" = type { %"struct.std::__1::__compressed_pair_elem.714" }
%"struct.std::__1::__compressed_pair_elem.714" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.718" = type { %"class.std::__1::__compressed_pair.719" }
%"class.std::__1::__compressed_pair.719" = type { %"struct.std::__1::__compressed_pair_elem.720" }
%"struct.std::__1::__compressed_pair_elem.720" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.730" = type { %"class.std::__1::__tree.731" }
%"class.std::__1::__tree.731" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.732", %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.732" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.739" }
%"class.v8::internal::TaggedImpl.739" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.738" }
%"class.v8::internal::TaggedImpl.738" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.746", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.746" = type { %"class.std::__1::__compressed_pair.747" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.748" }
%"struct.std::__1::__compressed_pair_elem.748" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.752", %"class.v8::internal::DetachableVector.753", %"class.v8::internal::DetachableVector.752", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.753" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.752" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.std::__1::unique_ptr.740", %"class.std::__1::unique_ptr.483" }
%"class.std::__1::unique_ptr.740" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.742" }
%"struct.std::__1::__compressed_pair_elem.742" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.486", %"class.std::__1::set.494" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.486" = type { %"class.std::__1::__tree.487" }
%"class.std::__1::__tree.487" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::set.494" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.754", %"class.std::__1::vector.760", %"class.std::__1::unique_ptr.767", %"class.std::__1::vector.774", %"class.std::__1::unique_ptr.781", i64, %"class.std::__1::vector.787", %"class.std::__1::vector.795", %"class.std::__1::vector.803", i8, i8, i32 }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.760" = type { %"class.std::__1::__vector_base.761" }
%"class.std::__1::__vector_base.761" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.762" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.762" = type { %"struct.std::__1::__compressed_pair_elem.763" }
%"struct.std::__1::__compressed_pair_elem.763" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.769" }
%"struct.std::__1::__compressed_pair_elem.769" = type { %"class.v8::internal::GlobalHandles::NodeSpace.770"* }
%"class.v8::internal::GlobalHandles::NodeSpace.770" = type opaque
%"class.std::__1::vector.774" = type { %"class.std::__1::__vector_base.775" }
%"class.std::__1::__vector_base.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.776" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.776" = type { %"struct.std::__1::__compressed_pair_elem.777" }
%"struct.std::__1::__compressed_pair_elem.777" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.781" = type { %"class.std::__1::__compressed_pair.782" }
%"class.std::__1::__compressed_pair.782" = type { %"struct.std::__1::__compressed_pair_elem.783" }
%"struct.std::__1::__compressed_pair_elem.783" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.787" = type { %"class.std::__1::__vector_base.788" }
%"class.std::__1::__vector_base.788" = type { %"struct.std::__1::pair.789"*, %"struct.std::__1::pair.789"*, %"class.std::__1::__compressed_pair.790" }
%"struct.std::__1::pair.789" = type opaque
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.791" }
%"struct.std::__1::__compressed_pair_elem.791" = type { %"struct.std::__1::pair.789"* }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"struct.std::__1::pair.797"*, %"struct.std::__1::pair.797"*, %"class.std::__1::__compressed_pair.798" }
%"struct.std::__1::pair.797" = type opaque
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"struct.std::__1::pair.797"* }
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.805" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.810", %"class.std::__1::vector.817" }
%"class.std::__1::vector.810" = type { %"class.std::__1::__vector_base.811" }
%"class.std::__1::__vector_base.811" = type { i64**, i64**, %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.824" }
%"class.std::__1::unique_ptr.824" = type { %"class.std::__1::__compressed_pair.825" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { i32*, i32*, %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.830" = type { %"struct.std::__1::__atomic_base.831" }
%"struct.std::__1::__atomic_base.831" = type { %"struct.std::__1::__cxx_atomic_impl.832" }
%"struct.std::__1::__cxx_atomic_impl.832" = type { %"struct.std::__1::__cxx_atomic_base_impl.833" }
%"struct.std::__1::__cxx_atomic_base_impl.833" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.840" = type { %"struct.std::__1::__atomic_base.841" }
%"struct.std::__1::__atomic_base.841" = type { %"struct.std::__1::__cxx_atomic_impl.842" }
%"struct.std::__1::__cxx_atomic_impl.842" = type { %"struct.std::__1::__cxx_atomic_base_impl.843" }
%"struct.std::__1::__cxx_atomic_base_impl.843" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.847 }
%union.anon.847 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.851" = type { %"class.std::__1::__hash_table.852" }
%"class.std::__1::__hash_table.852" = type <{ %"class.std::__1::unique_ptr.853", %"class.std::__1::__compressed_pair.863", %"class.std::__1::__compressed_pair.868", %"class.std::__1::__compressed_pair.871", [4 x i8] }>
%"class.std::__1::unique_ptr.853" = type { %"class.std::__1::__compressed_pair.854" }
%"class.std::__1::__compressed_pair.854" = type { %"struct.std::__1::__compressed_pair_elem.855", %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"struct.std::__1::__hash_node_base.856"** }
%"struct.std::__1::__hash_node_base.856" = type { %"struct.std::__1::__hash_node_base.856"* }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"class.std::__1::__bucket_list_deallocator.858" }
%"class.std::__1::__bucket_list_deallocator.858" = type { %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"struct.std::__1::__hash_node_base.856" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.154" = type { %"struct.std::__1::__atomic_base.155" }
%"struct.std::__1::__atomic_base.155" = type { %"struct.std::__1::__cxx_atomic_impl.156" }
%"struct.std::__1::__cxx_atomic_impl.156" = type { %"struct.std::__1::__cxx_atomic_base_impl.157" }
%"struct.std::__1::__cxx_atomic_base_impl.157" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.877", %"class.v8::internal::Handle.883", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.884", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.883" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.884" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.885", %"class.std::__1::vector.891", %"class.std::__1::unique_ptr.899", %"class.std::__1::unique_ptr.905", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.911", %"class.std::__1::vector.917", %"struct.std::__1::pair.925" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.885" = type { %"class.std::__1::__compressed_pair.886" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.887" }
%"struct.std::__1::__compressed_pair_elem.887" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.891" = type { %"class.std::__1::__vector_base.892" }
%"class.std::__1::__vector_base.892" = type { %"class.std::__1::unique_ptr.893"*, %"class.std::__1::unique_ptr.893"*, %"class.std::__1::__compressed_pair.894" }
%"class.std::__1::unique_ptr.893" = type opaque
%"class.std::__1::__compressed_pair.894" = type { %"struct.std::__1::__compressed_pair_elem.895" }
%"struct.std::__1::__compressed_pair_elem.895" = type { %"class.std::__1::unique_ptr.893"* }
%"class.std::__1::unique_ptr.899" = type { %"class.std::__1::__compressed_pair.900" }
%"class.std::__1::__compressed_pair.900" = type { %"struct.std::__1::__compressed_pair_elem.901" }
%"struct.std::__1::__compressed_pair_elem.901" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.905" = type { %"class.std::__1::__compressed_pair.906" }
%"class.std::__1::__compressed_pair.906" = type { %"struct.std::__1::__compressed_pair_elem.907" }
%"struct.std::__1::__compressed_pair_elem.907" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.911" = type { %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.917" = type { %"class.std::__1::__vector_base.918" }
%"class.std::__1::__vector_base.918" = type { %"struct.std::__1::pair.919"*, %"struct.std::__1::pair.919"*, %"class.std::__1::__compressed_pair.920" }
%"struct.std::__1::pair.919" = type opaque
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"struct.std::__1::pair.919"* }
%"struct.std::__1::pair.925" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.2"*, i16, i8*)*, i8* }
%"class.v8::Local.2" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.926" = type { %"class.std::__1::__compressed_pair.927" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.929", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.929" = type { %"class.std::__1::__hash_table.930" }
%"class.std::__1::__hash_table.930" = type <{ %"class.std::__1::unique_ptr.931", %"class.std::__1::__compressed_pair.941", %"class.std::__1::__compressed_pair.946", %"class.std::__1::__compressed_pair.950", [4 x i8] }>
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933", %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"struct.std::__1::__hash_node_base.934"** }
%"struct.std::__1::__hash_node_base.934" = type { %"struct.std::__1::__hash_node_base.934"* }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.std::__1::__bucket_list_deallocator.936" }
%"class.std::__1::__bucket_list_deallocator.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.941" = type { %"struct.std::__1::__compressed_pair_elem.942" }
%"struct.std::__1::__compressed_pair_elem.942" = type { %"struct.std::__1::__hash_node_base.934" }
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.964" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"struct.std::__1::pair.958"**, %"class.std::__1::__compressed_pair.959" }
%"struct.std::__1::pair.958" = type opaque
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.std::__1::pair.958"** }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.969" = type { %"class.std::__1::__vector_base.970" }
%"class.std::__1::__vector_base.970" = type { %"class.v8::internal::Handle.971"*, %"class.v8::internal::Handle.971"*, %"class.std::__1::__compressed_pair.972" }
%"class.v8::internal::Handle.971" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.v8::internal::Handle.971"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.835", i32, %"class.v8::Local.2" }
%"class.v8::Local.835" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.977" = type { %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.810", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.983" = type { %"class.std::__1::__vector_base.984" }
%"class.std::__1::__vector_base.984" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.985" }
%"class.std::__1::__compressed_pair.985" = type { %"struct.std::__1::__compressed_pair_elem.986" }
%"struct.std::__1::__compressed_pair_elem.986" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.990" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.991" = type { %"class.std::__1::__hash_table.992" }
%"class.std::__1::__hash_table.992" = type <{ %"class.std::__1::unique_ptr.993", %"class.std::__1::__compressed_pair.1003", %"class.std::__1::__compressed_pair.1008", %"class.std::__1::__compressed_pair.1011", [4 x i8] }>
%"class.std::__1::unique_ptr.993" = type { %"class.std::__1::__compressed_pair.994" }
%"class.std::__1::__compressed_pair.994" = type { %"struct.std::__1::__compressed_pair_elem.995", %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"struct.std::__1::__hash_node_base.996"** }
%"struct.std::__1::__hash_node_base.996" = type { %"struct.std::__1::__hash_node_base.996"* }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"class.std::__1::__bucket_list_deallocator.998" }
%"class.std::__1::__bucket_list_deallocator.998" = type { %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"struct.std::__1::__hash_node_base.996" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1011" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.162" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1015", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1044", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1045", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1015" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1040, %union.anon.1042, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1040 = type { i64 }
%union.anon.1042 = type { i64 }
%"class.std::__1::weak_ptr.1044" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.21", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.162" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1045" = type { %"class.v8::PersistentBase.1046" }
%"class.v8::PersistentBase.1046" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1016", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1016" = type { %"class.std::__1::__hash_table.1017" }
%"class.std::__1::__hash_table.1017" = type <{ %"class.std::__1::unique_ptr.1018", %"class.std::__1::__compressed_pair.1028", %"class.std::__1::__compressed_pair.1033", %"class.std::__1::__compressed_pair.1036", [4 x i8] }>
%"class.std::__1::unique_ptr.1018" = type { %"class.std::__1::__compressed_pair.1019" }
%"class.std::__1::__compressed_pair.1019" = type { %"struct.std::__1::__compressed_pair_elem.1020", %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"struct.std::__1::__hash_node_base.1021"** }
%"struct.std::__1::__hash_node_base.1021" = type { %"struct.std::__1::__hash_node_base.1021"* }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"class.std::__1::__bucket_list_deallocator.1023" }
%"class.std::__1::__bucket_list_deallocator.1023" = type { %"class.std::__1::__compressed_pair.1024" }
%"class.std::__1::__compressed_pair.1024" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1028" = type { %"struct.std::__1::__compressed_pair_elem.1029" }
%"struct.std::__1::__compressed_pair_elem.1029" = type { %"struct.std::__1::__hash_node_base.1021" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1047" = type { %"class.std::__1::__compressed_pair.1048" }
%"class.std::__1::__compressed_pair.1048" = type { %"struct.std::__1::__compressed_pair_elem.1049" }
%"struct.std::__1::__compressed_pair_elem.1049" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1076", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1052", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1056", %"class.std::__1::unique_ptr.1062", %"class.std::__1::unique_ptr.476", %"class.std::__1::vector.1068", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1052" = type { %"struct.std::__1::__atomic_base.1053" }
%"struct.std::__1::__atomic_base.1053" = type { %"struct.std::__1::__cxx_atomic_impl.1054" }
%"struct.std::__1::__cxx_atomic_impl.1054" = type { %"struct.std::__1::__cxx_atomic_base_impl.1055" }
%"struct.std::__1::__cxx_atomic_base_impl.1055" = type { i32 }
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.810" }
%"class.std::__1::unique_ptr.1062" = type { %"class.std::__1::__compressed_pair.1063" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.1064" }
%"struct.std::__1::__compressed_pair_elem.1064" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1068" = type { %"class.std::__1::__vector_base.1069" }
%"class.std::__1::__vector_base.1069" = type { %"struct.std::__1::pair.1070"*, %"struct.std::__1::pair.1070"*, %"class.std::__1::__compressed_pair.1071" }
%"struct.std::__1::pair.1070" = type opaque
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.1072" }
%"struct.std::__1::__compressed_pair_elem.1072" = type { %"struct.std::__1::pair.1070"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.21"*, %"class.std::__1::unique_ptr.99" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.40", %"class.std::__1::vector.40", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.40" = type { %"class.std::__1::__vector_base.41" }
%"class.std::__1::__vector_base.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.42" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.47" }
%"class.std::__1::__hash_table.47" = type <{ %"class.std::__1::unique_ptr.48", %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.65", [4 x i8] }>
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base.51"** }
%"struct.std::__1::__hash_node_base.51" = type { %"struct.std::__1::__hash_node_base.51"* }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__bucket_list_deallocator.53" }
%"class.std::__1::__bucket_list_deallocator.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.std::__1::__hash_node_base.51" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.26", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.88", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.21"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.26", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.26", %"struct.std::__1::atomic.70", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.74" }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.76" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::atomic.88" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl.90" }
%"struct.std::__1::__cxx_atomic_impl.90" = type { %"struct.std::__1::__cxx_atomic_base_impl.91" }
%"struct.std::__1::__cxx_atomic_base_impl.91" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.92", i8, [7 x i8] }>
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { i64*, i64*, %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.21", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.836", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.836" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1093" }
%"class.std::__1::unordered_map.1093" = type { %"class.std::__1::__hash_table.1094" }
%"class.std::__1::__hash_table.1094" = type <{ %"class.std::__1::unique_ptr.1095", %"class.std::__1::__compressed_pair.1105", %"class.std::__1::__compressed_pair.1110", %"class.std::__1::__compressed_pair.1113", [4 x i8] }>
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097", %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"struct.std::__1::__hash_node_base.1098"** }
%"struct.std::__1::__hash_node_base.1098" = type { %"struct.std::__1::__hash_node_base.1098"* }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"class.std::__1::__bucket_list_deallocator.1100" }
%"class.std::__1::__bucket_list_deallocator.1100" = type { %"class.std::__1::__compressed_pair.1101" }
%"class.std::__1::__compressed_pair.1101" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"struct.std::__1::__hash_node_base.1098" }
%"class.std::__1::__compressed_pair.1110" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::atomic.1119" = type { %"struct.std::__1::__atomic_base.1120" }
%"struct.std::__1::__atomic_base.1120" = type { %"struct.std::__1::__cxx_atomic_impl.1121" }
%"struct.std::__1::__cxx_atomic_impl.1121" = type { %"struct.std::__1::__cxx_atomic_base_impl.1122" }
%"struct.std::__1::__cxx_atomic_base_impl.1122" = type { %"class.std::__1::vector.1123"* }
%"class.std::__1::vector.1123" = type { %"class.std::__1::__vector_base.1124" }
%"class.std::__1::__vector_base.1124" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1125" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.31" = type { %"struct.std::__1::__atomic_base.32" }
%"struct.std::__1::__atomic_base.32" = type { %"struct.std::__1::__cxx_atomic_impl.33" }
%"struct.std::__1::__cxx_atomic_impl.33" = type { %"struct.std::__1::__cxx_atomic_base_impl.34" }
%"struct.std::__1::__cxx_atomic_base_impl.34" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.35" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.105" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"struct.std::__1::pair.107"*, %"struct.std::__1::pair.107"*, %"class.std::__1::__compressed_pair.108" }
%"struct.std::__1::pair.107" = type { i32, i64 }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.std::__1::pair.107"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.21", i32, %"struct.std::__1::atomic.21", %"class.v8::base::Mutex", %"struct.std::__1::atomic.21" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.113" }
%"class.std::__1::unordered_map.113" = type { %"class.std::__1::__hash_table.114" }
%"class.std::__1::__hash_table.114" = type <{ %"class.std::__1::unique_ptr.115", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.130", %"class.std::__1::__compressed_pair.135", [4 x i8] }>
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117", %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"struct.std::__1::__hash_node_base.118"** }
%"struct.std::__1::__hash_node_base.118" = type { %"struct.std::__1::__hash_node_base.118"* }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.std::__1::__bucket_list_deallocator.120" }
%"class.std::__1::__bucket_list_deallocator.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.std::__1::__hash_node_base.118" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.154", %"struct.std::__1::atomic.158", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.21" }
%"struct.std::__1::atomic.158" = type { %"struct.std::__1::__atomic_base.159" }
%"struct.std::__1::__atomic_base.159" = type { %"struct.std::__1::__cxx_atomic_impl.160" }
%"struct.std::__1::__cxx_atomic_impl.160" = type { %"struct.std::__1::__cxx_atomic_base_impl.161" }
%"struct.std::__1::__cxx_atomic_base_impl.161" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.163" = type { %"struct.std::__1::__atomic_base.164" }
%"struct.std::__1::__atomic_base.164" = type { %"struct.std::__1::__cxx_atomic_impl.165" }
%"struct.std::__1::__cxx_atomic_impl.165" = type { %"struct.std::__1::__cxx_atomic_base_impl.166" }
%"struct.std::__1::__cxx_atomic_base_impl.166" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.167" = type { %"class.std::__1::__vector_base.168" }
%"class.std::__1::__vector_base.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.169" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.289", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.183", %"class.std::__1::vector.184", %"class.std::__1::vector.191", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.183" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.186" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211", %"class.v8::internal::Worklist.213" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"class.v8::internal::Worklist.213" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.21" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.215", i8, i64 }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.231" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.183"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.231" = type { %"class.std::__1::__hash_table.232" }
%"class.std::__1::__hash_table.232" = type <{ %"class.std::__1::unique_ptr.233", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.236"** }
%"struct.std::__1::__hash_node_base.236" = type { %"struct.std::__1::__hash_node_base.236"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator.238" }
%"class.std::__1::__bucket_list_deallocator.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.236" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.258" }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.std::__1::pair.291"*, %"struct.std::__1::pair.291"*, %"class.std::__1::__compressed_pair.292" }
%"struct.std::__1::pair.291" = type opaque
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::pair.291"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.297", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.282"], [3 x %"class.std::__1::vector.282"], i8, %"struct.std::__1::atomic.154", [6 x i8], %"class.std::__1::vector.282", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.307"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.307" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.21", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.332", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.325"], %"class.std::__1::unique_ptr.297" }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.364", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.368", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.373" }
%"struct.std::__1::atomic.364" = type { %"struct.std::__1::__atomic_base.365" }
%"struct.std::__1::__atomic_base.365" = type { %"struct.std::__1::__cxx_atomic_impl.366" }
%"struct.std::__1::__cxx_atomic_impl.366" = type { %"struct.std::__1::__cxx_atomic_base_impl.367" }
%"struct.std::__1::__cxx_atomic_base_impl.367" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.368" = type { %"struct.std::__1::__atomic_base.369" }
%"struct.std::__1::__atomic_base.369" = type { %"struct.std::__1::__cxx_atomic_impl.370" }
%"struct.std::__1::__cxx_atomic_impl.370" = type { %"struct.std::__1::__cxx_atomic_base_impl.371" }
%"struct.std::__1::__cxx_atomic_base_impl.371" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.393", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.297", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.21", %"struct.std::__1::atomic.154", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.403", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.439" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::unique_ptr.446" = type { %"class.std::__1::__compressed_pair.447" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.448" }
%"struct.std::__1::__compressed_pair_elem.448" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.452" = type { %"class.std::__1::__compressed_pair.453" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.458" = type { %"class.std::__1::__compressed_pair.459" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.476" = type { %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.482" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.501", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.483", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.501" = type { %"struct.std::__1::__atomic_base.502" }
%"struct.std::__1::__atomic_base.502" = type { %"struct.std::__1::__cxx_atomic_impl.503" }
%"struct.std::__1::__cxx_atomic_impl.503" = type { %"struct.std::__1::__cxx_atomic_base_impl.504" }
%"struct.std::__1::__cxx_atomic_base_impl.504" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.505" = type { %"class.std::__1::__hash_table.506" }
%"class.std::__1::__hash_table.506" = type <{ %"class.std::__1::unique_ptr.507", %"class.std::__1::__compressed_pair.517", %"class.std::__1::__compressed_pair.522", %"class.std::__1::__compressed_pair.525", [4 x i8] }>
%"class.std::__1::unique_ptr.507" = type { %"class.std::__1::__compressed_pair.508" }
%"class.std::__1::__compressed_pair.508" = type { %"struct.std::__1::__compressed_pair_elem.509", %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"struct.std::__1::__hash_node_base.510"** }
%"struct.std::__1::__hash_node_base.510" = type { %"struct.std::__1::__hash_node_base.510"* }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.std::__1::__bucket_list_deallocator.512" }
%"class.std::__1::__bucket_list_deallocator.512" = type { %"class.std::__1::__compressed_pair.513" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.517" = type { %"struct.std::__1::__compressed_pair_elem.518" }
%"struct.std::__1::__compressed_pair_elem.518" = type { %"struct.std::__1::__hash_node_base.510" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unique_ptr.531" = type { %"class.std::__1::__compressed_pair.532" }
%"class.std::__1::__compressed_pair.532" = type { %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.537" = type { %"class.std::__1::__compressed_pair.538" }
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.543", %"class.std::__1::vector.543" }
%"class.std::__1::unique_ptr.550" = type { %"class.std::__1::__compressed_pair.551" }
%"class.std::__1::__compressed_pair.551" = type { %"struct.std::__1::__compressed_pair_elem.552" }
%"struct.std::__1::__compressed_pair_elem.552" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.332" = type { %"class.std::__1::__hash_table.333" }
%"class.std::__1::__hash_table.333" = type <{ %"class.std::__1::unique_ptr.334", %"class.std::__1::__compressed_pair.344", %"class.std::__1::__compressed_pair.349", %"class.std::__1::__compressed_pair.353", [4 x i8] }>
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336", %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"struct.std::__1::__hash_node_base.337"** }
%"struct.std::__1::__hash_node_base.337" = type { %"struct.std::__1::__hash_node_base.337"* }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.std::__1::__bucket_list_deallocator.339" }
%"class.std::__1::__bucket_list_deallocator.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"struct.std::__1::__hash_node_base.337" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.582" = type { %"class.std::__1::__hash_table.583" }
%"class.std::__1::__hash_table.583" = type <{ %"class.std::__1::unique_ptr.584", %"class.std::__1::__compressed_pair.594", %"class.std::__1::__compressed_pair.599", %"class.std::__1::__compressed_pair.602", [4 x i8] }>
%"class.std::__1::unique_ptr.584" = type { %"class.std::__1::__compressed_pair.585" }
%"class.std::__1::__compressed_pair.585" = type { %"struct.std::__1::__compressed_pair_elem.586", %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"struct.std::__1::__hash_node_base.587"** }
%"struct.std::__1::__hash_node_base.587" = type { %"struct.std::__1::__hash_node_base.587"* }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.std::__1::__bucket_list_deallocator.589" }
%"class.std::__1::__bucket_list_deallocator.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"struct.std::__1::__hash_node_base.587" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.556" = type { %"class.std::__1::__hash_table.557" }
%"class.std::__1::__hash_table.557" = type <{ %"class.std::__1::unique_ptr.558", %"class.std::__1::__compressed_pair.568", %"class.std::__1::__compressed_pair.573", %"class.std::__1::__compressed_pair.576", [4 x i8] }>
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560", %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"struct.std::__1::__hash_node_base.561"** }
%"struct.std::__1::__hash_node_base.561" = type { %"struct.std::__1::__hash_node_base.561"* }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.std::__1::__bucket_list_deallocator.563" }
%"class.std::__1::__bucket_list_deallocator.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"struct.std::__1::__hash_node_base.561" }
%"class.std::__1::__compressed_pair.573" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::unordered_map.606" = type { %"class.std::__1::__hash_table.607" }
%"class.std::__1::__hash_table.607" = type <{ %"class.std::__1::unique_ptr.608", %"class.std::__1::__compressed_pair.618", %"class.std::__1::__compressed_pair.623", %"class.std::__1::__compressed_pair.628", [4 x i8] }>
%"class.std::__1::unique_ptr.608" = type { %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.610", %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"struct.std::__1::__hash_node_base.611"** }
%"struct.std::__1::__hash_node_base.611" = type { %"struct.std::__1::__hash_node_base.611"* }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"class.std::__1::__bucket_list_deallocator.613" }
%"class.std::__1::__bucket_list_deallocator.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"struct.std::__1::__hash_node_base.611" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"class.std::__1::vector.634" = type { %"class.std::__1::__vector_base.635" }
%"class.std::__1::__vector_base.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl.24" }
%"struct.std::__1::__cxx_atomic_impl.24" = type { %"struct.std::__1::__cxx_atomic_base_impl.25" }
%"struct.std::__1::__cxx_atomic_base_impl.25" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.21", i64, %"struct.std::__1::atomic.21" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.143" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.543" = type { %"class.std::__1::__vector_base.544" }
%"class.std::__1::__vector_base.544" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::ScopeInfo" = type { %"class.v8::internal::TorqueGeneratedScopeInfo" }
%"class.v8::internal::TorqueGeneratedScopeInfo" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::VariableLookupResult" = type { i32, i32, i8, i8, i8, i8, i8 }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1137", %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1134", %"class.v8::internal::Handle.1136", %"class.v8::internal::Handle.1134", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1137" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1136" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1134" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::Handle<v8::internal::Object>::ObjectRef" = type { %"class.v8::internal::Object" }
%"class.v8::internal::StringSet" = type { %"class.v8::internal::HashTable" }
%"class.v8::internal::HashTable" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"class.v8::internal::LookupIterator::Key" = type { %"class.v8::internal::Handle.1137", i64 }
%"class.v8::internal::NativeContext" = type { %"class.v8::internal::Context" }
%"class.v8::internal::Vector.1181" = type { i8*, i64 }
%"class.v8::internal::Handle<v8::internal::String>::ObjectRef" = type { %"class.v8::internal::String" }
%"class.v8::internal::MessageLocation" = type { %"class.v8::internal::Handle.1144", i32, i32, i32, %"class.v8::internal::Handle.1145" }
%"class.v8::internal::Handle.1144" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1145" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::SharedStringAccessGuardIfNeeded" = type { %"class.v8::base::Optional.1171" }
%"class.v8::base::Optional.1171" = type { %"class.v8::base::internal::OptionalBase.1172" }
%"class.v8::base::internal::OptionalBase.1172" = type { %"struct.v8::base::internal::OptionalStorage.1173" }
%"struct.v8::base::internal::OptionalStorage.1173" = type { %"struct.v8::base::internal::OptionalStorageBase.1174" }
%"struct.v8::base::internal::OptionalStorageBase.1174" = type { i8, %union.anon.1175 }
%union.anon.1175 = type { %"class.v8::base::SharedMutexGuard" }
%"class.v8::base::SharedMutexGuard" = type { %"class.v8::base::SharedMutex"* }
%"class.v8::String::ExternalOneByteStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i8* }
%"class.v8::String::ExternalStringResourceBase" = type { i32 (...)** }
%"class.v8::String::ExternalStringResource" = type { %"class.v8::String::ExternalStringResourceBase", i16* }
%"class.v8::internal::ConsStringIterator" = type <{ [32 x %"class.v8::internal::ConsString"], %"class.v8::internal::ConsString", i32, i32, i32, [4 x i8] }>
%"class.v8::internal::ConsString" = type { %"class.v8::internal::TorqueGeneratedConsString" }
%"class.v8::internal::TorqueGeneratedConsString" = type { %"class.v8::internal::String" }

$_ZN2v88internal10JSReceiver24GetOwnPropertyAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEE = comdat any

$_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE = comdat any

$_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE = comdat any

$_ZN2v88internal6String23IsConsStringEqualToImplIcEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE = comdat any

@.str = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.1 = private unnamed_addr constant [41 x i8] c"used >= 0 && length > 0 && used < length\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"length < Smi::kMaxValue / 2\00", align 1
@.str.3 = private unnamed_addr constant [57 x i8] c"Code generation from strings disallowed for this context\00", align 1
@.str.4 = private unnamed_addr constant [24 x i8] c"generator_next_internal\00", align 1
@.str.5 = private unnamed_addr constant [31 x i8] c"async_module_evaluate_internal\00", align 1
@.str.6 = private unnamed_addr constant [14 x i8] c"object_create\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"reflect_apply\00", align 1
@.str.8 = private unnamed_addr constant [18 x i8] c"reflect_construct\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"math_floor\00", align 1
@.str.10 = private unnamed_addr constant [9 x i8] c"math_pow\00", align 1
@.str.11 = private unnamed_addr constant [29 x i8] c"promise_internal_constructor\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"promise_then\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"function_prototype_apply\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.15 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@switch.table._ZN2v88internal13NativeContext14RunPromiseHookENS_15PromiseHookTypeENS0_6HandleINS0_9JSPromiseEEENS3_INS0_6ObjectEEE = private unnamed_addr constant [4 x i64] [i64 579, i64 591, i64 583, i64 587], align 8

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal18ScriptContextTable6ExtendENS0_6HandleIS1_EENS2_INS0_7ContextEEE(i64*, i64*) local_unnamed_addr #0 align 2 {
  %3 = load i64, i64* %0, align 8
  %4 = add i64 %3, 7
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = ashr i32 %6, 1
  %8 = add i64 %3, 3
  %9 = inttoptr i64 %8 to i32*
  %10 = load i32, i32* %9, align 4
  %11 = ashr i32 %10, 1
  %12 = icmp slt i32 %6, 0
  %13 = icmp slt i32 %10, 2
  %14 = icmp sge i32 %7, %11
  %15 = or i1 %12, %13
  %16 = or i1 %14, %15
  br i1 %16, label %17, label %18, !prof !2

17:                                               ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

18:                                               ; preds = %2
  %19 = add nsw i32 %7, 1
  %20 = icmp eq i32 %19, %11
  br i1 %20, label %21, label %55

21:                                               ; preds = %18
  %22 = icmp sgt i32 %10, 1073741821
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %21
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

24:                                               ; preds = %21
  %25 = load i64, i64* %1, align 8
  %26 = and i64 %25, -262144
  %27 = or i64 %26, 16
  %28 = inttoptr i64 %27 to i64*
  %29 = load i64, i64* %28, align 16
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = inttoptr i64 %30 to %"class.v8::internal::Factory"*
  %33 = tail call i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"* %32, i64* %0, i32 %11) #8
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 36
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %34, -1
  %38 = inttoptr i64 %37 to i32*
  %39 = trunc i64 %36 to i32
  store atomic volatile i32 %39, i32* %38 monotonic, align 4
  %40 = icmp eq i32 %39, 0
  %41 = and i64 %36, 1
  %42 = icmp eq i64 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %55, label %44

44:                                               ; preds = %24
  %45 = and i64 %34, -262144
  %46 = or i64 %45, 8
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = and i64 %48, 262144
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %55, label %51

51:                                               ; preds = %44
  %52 = or i64 %45, 16
  %53 = inttoptr i64 %52 to %"class.v8::internal::Heap"**
  %54 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %53, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %54, i64 %34, i64 0, i64 %36) #8
  br label %55

55:                                               ; preds = %51, %44, %24, %18
  %56 = phi i64* [ %0, %18 ], [ %33, %24 ], [ %33, %44 ], [ %33, %51 ]
  %57 = load i64, i64* %56, align 8
  %58 = load i64, i64* %1, align 8
  %59 = shl i32 %19, 2
  %60 = sext i32 %59 to i64
  %61 = add nsw i64 %60, 7
  %62 = add i64 %61, %57
  %63 = inttoptr i64 %62 to i32*
  %64 = trunc i64 %58 to i32
  store atomic volatile i32 %64, i32* %63 monotonic, align 4
  %65 = and i64 %58, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %90, label %67

67:                                               ; preds = %55
  %68 = and i64 %57, -262144
  %69 = or i64 %68, 8
  %70 = inttoptr i64 %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = and i64 %71, 262144
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %67
  %75 = or i64 %68, 16
  %76 = inttoptr i64 %75 to %"class.v8::internal::Heap"**
  %77 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %76, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %77, i64 %57, i64 %62, i64 %58) #8
  br label %78

78:                                               ; preds = %74, %67
  %79 = and i64 %58, -262144
  %80 = or i64 %79, 8
  %81 = inttoptr i64 %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = and i64 %82, 24
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %90, label %85

85:                                               ; preds = %78
  %86 = load i64, i64* %70, align 8
  %87 = and i64 %86, 24
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %85
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %57, i64 %62, i64 %58) #8
  br label %90

90:                                               ; preds = %55, %78, %85, %89
  %91 = load i64, i64* %56, align 8
  %92 = shl i32 %19, 1
  %93 = add i64 %91, 7
  %94 = inttoptr i64 %93 to i32*
  store atomic volatile i32 %92, i32* %94 release, align 4
  ret i64* %56
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #2

declare i64* @_ZN2v88internal7Factory21CopyFixedArrayAndGrowENS0_6HandleINS0_10FixedArrayEEEi(%"class.v8::internal::Factory"*, i64*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal7Context10InitializeEPNS0_7IsolateE(%"class.v8::internal::Context"* nocapture readonly, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::ScopeInfo", align 8
  %4 = bitcast %"class.v8::internal::ScopeInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = add i64 %6, 7
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = zext i32 %10 to i64
  %12 = or i64 %7, %11
  %13 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  %14 = call i32 @_ZNK2v88internal9ScopeInfo19ContextHeaderLengthEv(%"class.v8::internal::ScopeInfo"* nonnull %3) #8
  %15 = load i64, i64* %13, align 8
  %16 = add i64 %15, 11
  %17 = inttoptr i64 %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 5
  br label %23

22:                                               ; preds = %73, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8
  ret void

23:                                               ; preds = %20, %73
  %24 = phi i64 [ 0, %20 ], [ %74, %73 ]
  %25 = trunc i64 %24 to i32
  %26 = call zeroext i8 @_ZNK2v88internal9ScopeInfo20ContextLocalInitFlagEi(%"class.v8::internal::ScopeInfo"* nonnull %3, i32 %25) #8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %73

28:                                               ; preds = %23
  %29 = load i64, i64* %21, align 8
  %30 = trunc i64 %24 to i32
  %31 = add i32 %14, %30
  %32 = shl i32 %31, 2
  %33 = load i64, i64* %5, align 8
  %34 = sext i32 %32 to i64
  %35 = add nsw i64 %34, 7
  %36 = add i64 %33, %35
  %37 = inttoptr i64 %36 to i32*
  %38 = trunc i64 %29 to i32
  store atomic volatile i32 %38, i32* %37 monotonic, align 4
  %39 = load i64, i64* %5, align 8
  %40 = add i64 %39, %35
  %41 = and i64 %29, 1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %73, label %43

43:                                               ; preds = %28
  %44 = and i64 %39, -262144
  %45 = or i64 %44, 8
  %46 = inttoptr i64 %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = and i64 %47, 262144
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %56, label %50

50:                                               ; preds = %43
  %51 = or i64 %44, 16
  %52 = inttoptr i64 %51 to %"class.v8::internal::Heap"**
  %53 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %52, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %53, i64 %39, i64 %40, i64 %29) #8
  %54 = load i64, i64* %5, align 8
  %55 = add i64 %54, %35
  br label %56

56:                                               ; preds = %50, %43
  %57 = phi i64 [ %55, %50 ], [ %40, %43 ]
  %58 = phi i64 [ %54, %50 ], [ %39, %43 ]
  %59 = and i64 %29, -262144
  %60 = or i64 %59, 8
  %61 = inttoptr i64 %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 24
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %73, label %65

65:                                               ; preds = %56
  %66 = and i64 %58, -262144
  %67 = or i64 %66, 8
  %68 = inttoptr i64 %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = and i64 %69, 24
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %65
  call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %58, i64 %57, i64 %29) #8
  br label %73

73:                                               ; preds = %72, %65, %56, %28, %23
  %74 = add nuw nsw i64 %24, 1
  %75 = load i64, i64* %13, align 8
  %76 = add i64 %75, 11
  %77 = inttoptr i64 %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = ashr i32 %78, 1
  %80 = sext i32 %79 to i64
  %81 = icmp slt i64 %74, %80
  br i1 %81, label %23, label %22
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7Context10scope_infoEv(%"class.v8::internal::Context"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 7
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  ret i64 %9
}

declare i32 @_ZNK2v88internal9ScopeInfo19ContextHeaderLengthEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #3

declare zeroext i8 @_ZNK2v88internal9ScopeInfo20ContextLocalInitFlagEi(%"class.v8::internal::ScopeInfo"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal18ScriptContextTable6LookupEPNS0_7IsolateES1_NS0_6StringEPNS0_20VariableLookupResultE(%"class.v8::internal::Isolate"* nocapture readnone, i64, i64, %"struct.v8::internal::VariableLookupResult"*) local_unnamed_addr #0 align 2 {
  %5 = add i64 %1, 7
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = icmp sgt i32 %7, 1
  br i1 %8, label %9, label %39

9:                                                ; preds = %4
  %10 = and i64 %1, -4294967296
  br label %11

11:                                               ; preds = %9, %29
  %12 = phi i64 [ 0, %9 ], [ %30, %29 ]
  %13 = trunc i64 %12 to i32
  %14 = shl i32 %13, 2
  %15 = add i32 %14, 4
  %16 = sext i32 %15 to i64
  %17 = add i64 %5, %16
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %10, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %10, %25
  %27 = tail call i32 @_ZN2v88internal9ScopeInfo16ContextSlotIndexES1_NS0_6StringEPNS0_20VariableLookupResultE(i64 %26, i64 %2, %"struct.v8::internal::VariableLookupResult"* %3) #8
  %28 = icmp sgt i32 %27, -1
  br i1 %28, label %35, label %29

29:                                               ; preds = %11
  %30 = add nuw nsw i64 %12, 1
  %31 = load atomic i32, i32* %6 monotonic, align 4
  %32 = ashr i32 %31, 1
  %33 = sext i32 %32 to i64
  %34 = icmp slt i64 %30, %33
  br i1 %34, label %11, label %39

35:                                               ; preds = %11
  %36 = trunc i64 %12 to i32
  %37 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %3, i64 0, i32 0
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %3, i64 0, i32 1
  store i32 %27, i32* %38, align 4
  br label %39

39:                                               ; preds = %29, %4, %35
  %40 = phi i1 [ true, %35 ], [ false, %4 ], [ false, %29 ]
  ret i1 %40
}

declare i32 @_ZN2v88internal9ScopeInfo16ContextSlotIndexES1_NS0_6StringEPNS0_20VariableLookupResultE(i64, i64, %"struct.v8::internal::VariableLookupResult"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal7Context22is_declaration_contextEv(%"class.v8::internal::Context"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::ScopeInfo", align 8
  %3 = alloca %"class.v8::internal::ScopeInfo", align 8
  %4 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, -4294967296
  %7 = add i64 %5, -1
  %8 = inttoptr i64 %7 to i32*
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = zext i32 %9 to i64
  %11 = or i64 %6, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = icmp eq i16 %14, 142
  br i1 %15, label %74, label %16

16:                                               ; preds = %1
  %17 = load atomic i32, i32* %8 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %6, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 144
  br i1 %23, label %74, label %24

24:                                               ; preds = %16
  %25 = load atomic i32, i32* %8 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %6, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 145
  br i1 %31, label %74, label %32

32:                                               ; preds = %24
  %33 = load atomic i32, i32* %8 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %6, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 143
  br i1 %39, label %74, label %40

40:                                               ; preds = %32
  %41 = load atomic i32, i32* %8 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %6, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp eq i16 %46, 141
  br i1 %47, label %48, label %57

48:                                               ; preds = %40
  %49 = bitcast %"class.v8::internal::ScopeInfo"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #8
  %50 = add i64 %5, 7
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %6, %53
  %55 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %54, i64* %55, align 8
  %56 = call zeroext i1 @_ZNK2v88internal9ScopeInfo13language_modeEv(%"class.v8::internal::ScopeInfo"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #8
  br label %74

57:                                               ; preds = %40
  %58 = load atomic i32, i32* %8 monotonic, align 4
  %59 = zext i32 %58 to i64
  %60 = or i64 %6, %59
  %61 = add i64 %60, 7
  %62 = inttoptr i64 %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = icmp eq i16 %63, 138
  br i1 %64, label %65, label %74

65:                                               ; preds = %57
  %66 = bitcast %"class.v8::internal::ScopeInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #8
  %67 = add i64 %5, 7
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %6, %70
  %72 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %71, i64* %72, align 8
  %73 = call zeroext i1 @_ZNK2v88internal9ScopeInfo20is_declaration_scopeEv(%"class.v8::internal::ScopeInfo"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #8
  br label %74

74:                                               ; preds = %57, %1, %16, %24, %32, %65, %48
  %75 = phi i1 [ %56, %48 ], [ %73, %65 ], [ true, %32 ], [ true, %24 ], [ true, %16 ], [ true, %1 ], [ false, %57 ]
  ret i1 %75
}

declare zeroext i1 @_ZNK2v88internal9ScopeInfo13language_modeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal9ScopeInfo20is_declaration_scopeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7Context19declaration_contextEv(%"class.v8::internal::Context"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Context", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = call zeroext i1 @_ZN2v88internal7Context22is_declaration_contextEv(%"class.v8::internal::Context"* nonnull %2)
  br i1 %6, label %16, label %7

7:                                                ; preds = %1, %7
  %8 = phi i64 [ %14, %7 ], [ %5, %1 ]
  %9 = and i64 %8, -4294967296
  %10 = add i64 %8, 11
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  store i64 %14, i64* %4, align 8
  %15 = call zeroext i1 @_ZN2v88internal7Context22is_declaration_contextEv(%"class.v8::internal::Context"* nonnull %2)
  br i1 %15, label %16, label %7

16:                                               ; preds = %7, %1
  %17 = phi i64 [ %5, %1 ], [ %14, %7 ]
  ret i64 %17
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7Context15closure_contextEv(%"class.v8::internal::Context"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp eq i16 %12, 142
  br i1 %13, label %63, label %14

14:                                               ; preds = %1, %48
  %15 = phi i32* [ %55, %48 ], [ %6, %1 ]
  %16 = phi i64 [ %53, %48 ], [ %3, %1 ]
  %17 = load atomic i32, i32* %15 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  %20 = add i64 %19, 7
  %21 = inttoptr i64 %20 to i16*
  %22 = load atomic i16, i16* %21 monotonic, align 2
  %23 = icmp eq i16 %22, 145
  br i1 %23, label %63, label %24

24:                                               ; preds = %14
  %25 = load atomic i32, i32* %15 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %4, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp eq i16 %30, 143
  br i1 %31, label %63, label %32

32:                                               ; preds = %24
  %33 = load atomic i32, i32* %15 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %4, %34
  %36 = add i64 %35, 7
  %37 = inttoptr i64 %36 to i16*
  %38 = load atomic i16, i16* %37 monotonic, align 2
  %39 = icmp eq i16 %38, 144
  br i1 %39, label %63, label %40

40:                                               ; preds = %32
  %41 = load atomic i32, i32* %15 monotonic, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %4, %42
  %44 = add i64 %43, 7
  %45 = inttoptr i64 %44 to i16*
  %46 = load atomic i16, i16* %45 monotonic, align 2
  %47 = icmp eq i16 %46, 141
  br i1 %47, label %63, label %48

48:                                               ; preds = %40
  %49 = add i64 %16, 11
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %4, %52
  %54 = add i64 %53, -1
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %4, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = icmp eq i16 %61, 142
  br i1 %62, label %63, label %14

63:                                               ; preds = %32, %24, %14, %48, %40, %1
  %64 = phi i64 [ %3, %1 ], [ %16, %40 ], [ %53, %48 ], [ %16, %14 ], [ %16, %24 ], [ %16, %32 ]
  ret i64 %64
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7Context16extension_objectEv(%"class.v8::internal::Context"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 15
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %11 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 0, i32 1
  %14 = load i8, i8* %13, align 8, !range !3
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %10, i64 0, i32 1, i64 0
  br label %26

18:                                               ; preds = %12, %1
  %19 = and i64 %9, -262144
  %20 = or i64 %19, 16
  %21 = inttoptr i64 %20 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to %"class.v8::internal::Isolate"*
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %24, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %26

26:                                               ; preds = %16, %18
  %27 = phi i64* [ %25, %18 ], [ %17, %16 ]
  %28 = getelementptr inbounds i64, i64* %27, i64 4
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  %31 = icmp eq i32 %7, %30
  %32 = select i1 %31, i64 0, i64 %9
  ret i64 %32
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7Context18extension_receiverEv(%"class.v8::internal::Context"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp eq i16 %12, 146
  %14 = add i64 %3, 15
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %4, %17
  br i1 %13, label %43, label %19

19:                                               ; preds = %1
  %20 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %21 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %20, i64 0, i32 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %20, i64 0, i32 1, i64 0
  br label %36

28:                                               ; preds = %22, %19
  %29 = and i64 %18, -262144
  %30 = or i64 %29, 16
  %31 = inttoptr i64 %30 to i64*
  %32 = load i64, i64* %31, align 16
  %33 = add i64 %32, -41416
  %34 = inttoptr i64 %33 to %"class.v8::internal::Isolate"*
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %36

36:                                               ; preds = %26, %28
  %37 = phi i64* [ %35, %28 ], [ %27, %26 ]
  %38 = getelementptr inbounds i64, i64* %37, i64 4
  %39 = load i64, i64* %38, align 8
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %16, %40
  %42 = select i1 %41, i64 0, i64 %18
  br label %43

43:                                               ; preds = %1, %36
  %44 = phi i64 [ %42, %36 ], [ %18, %1 ]
  ret i64 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7Context6moduleEv(%"class.v8::internal::Context"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp eq i16 %12, 143
  br i1 %13, label %30, label %14

14:                                               ; preds = %1, %14
  %15 = phi i64 [ %20, %14 ], [ %3, %1 ]
  %16 = add i64 %15, 11
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %4, %19
  %21 = add i64 %20, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %4, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = icmp eq i16 %28, 143
  br i1 %29, label %30, label %14

30:                                               ; preds = %14, %1
  %31 = phi i64 [ %3, %1 ], [ %20, %14 ]
  %32 = add i64 %31, 15
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = zext i32 %34 to i64
  %36 = or i64 %4, %35
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7Context13global_objectEv(%"class.v8::internal::Context"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 19
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  %15 = add i64 %14, 15
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  ret i64 %19
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7Context14script_contextEv(%"class.v8::internal::Context"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 7
  %11 = inttoptr i64 %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = icmp eq i16 %12, 145
  br i1 %13, label %30, label %14

14:                                               ; preds = %1, %14
  %15 = phi i64 [ %20, %14 ], [ %3, %1 ]
  %16 = add i64 %15, 11
  %17 = inttoptr i64 %16 to i32*
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = zext i32 %18 to i64
  %20 = or i64 %4, %19
  %21 = add i64 %20, -1
  %22 = inttoptr i64 %21 to i32*
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = zext i32 %23 to i64
  %25 = or i64 %4, %24
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = icmp eq i16 %28, 145
  br i1 %29, label %30, label %14

30:                                               ; preds = %14, %1
  %31 = phi i64 [ %3, %1 ], [ %20, %14 ]
  ret i64 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal7Context12global_proxyEv(%"class.v8::internal::Context"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, -1
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  %10 = add i64 %9, 19
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %4, %13
  %15 = add i64 %14, 19
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = zext i32 %17 to i64
  %19 = or i64 %4, %18
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal7Context6LookupENS0_6HandleIS1_EENS2_INS0_6StringEEENS0_18ContextLookupFlagsEPiPNS0_18PropertyAttributesEPNS0_18InitializationFlagEPNS0_12VariableModeEPb(i64*, i64*, i32, i32* nocapture, i32* nocapture, i8* nocapture, i8* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.v8::internal::ScopeInfo", align 8
  %10 = alloca %"class.v8::internal::LookupIterator", align 8
  %11 = alloca %"class.v8::internal::LookupIterator", align 8
  %12 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %13 = alloca %"struct.v8::internal::VariableLookupResult", align 4
  %14 = alloca %"class.v8::internal::LookupIterator", align 8
  %15 = alloca %"class.v8::internal::ScopeInfo", align 8
  %16 = alloca %"struct.v8::internal::VariableLookupResult", align 4
  %17 = alloca i8, align 1
  %18 = alloca i8, align 1
  %19 = alloca i8, align 1
  %20 = alloca %"class.v8::internal::LookupIterator", align 8
  %21 = alloca %"class.v8::internal::ScopeInfo", align 8
  %22 = alloca %"class.v8::internal::StringSet", align 8
  %23 = load i64, i64* %0, align 8
  %24 = and i64 %23, -262144
  %25 = or i64 %24, 16
  %26 = inttoptr i64 %25 to i64*
  %27 = load i64, i64* %26, align 16
  %28 = add i64 %27, -41416
  %29 = inttoptr i64 %28 to %"class.v8::internal::Isolate"*
  %30 = and i32 %2, 1
  %31 = icmp ne i32 %30, 0
  store i32 -1, i32* %3, align 4
  store i32 64, i32* %4, align 4
  store i8 1, i8* %5, align 1
  store i8 2, i8* %6, align 1
  %32 = icmp ne i8* %7, null
  br i1 %32, label %33, label %34

33:                                               ; preds = %8
  store i8 0, i8* %7, align 1
  br label %34

34:                                               ; preds = %33, %8
  %35 = bitcast %"class.v8::internal::ScopeInfo"* %9 to i8*
  %36 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 4
  %38 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 31, i32 1
  %40 = bitcast %"struct.v8::internal::VariableLookupResult"* %13 to i8*
  %41 = and i32 %2, 2
  %42 = icmp eq i32 %41, 0
  %43 = bitcast %"class.v8::internal::LookupIterator"* %14 to i8*
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 0
  %45 = icmp eq i64* %1, null
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 4
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 1
  %48 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 2
  %49 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 3
  %50 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 4, i32 0
  %51 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 5
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 6, i32 0, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 7, i32 0, i32 0
  %54 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 8, i32 0, i32 0
  %55 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 9, i32 0, i32 0
  %56 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 10
  %57 = bitcast %"class.v8::internal::Handle.1134"* %56 to i64*
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %14, i64 0, i32 11
  %59 = bitcast i64* %58 to i8*
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %61 = bitcast %"class.v8::internal::LookupIterator"* %10 to i8*
  %62 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 0
  %63 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 1
  %64 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 2
  %65 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 3
  %66 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 4, i32 0
  %67 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 5
  %68 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 6, i32 0, i32 0
  %69 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 7, i32 0, i32 0
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 8, i32 0, i32 0
  %71 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 9, i32 0, i32 0
  %72 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 10
  %73 = bitcast %"class.v8::internal::Handle.1134"* %72 to i64*
  %74 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %10, i64 0, i32 11
  %75 = bitcast i64* %74 to i8*
  %76 = bitcast %"class.v8::internal::Isolate"** %67 to %"class.v8::internal::Factory"**
  %77 = bitcast %"class.v8::internal::LookupIterator"* %11 to i8*
  %78 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 0
  %79 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 1
  %80 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 2
  %81 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 3
  %82 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 4, i32 0
  %83 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 5
  %84 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 6, i32 0, i32 0
  %85 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 7, i32 0, i32 0
  %86 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 8, i32 0, i32 0
  %87 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 9, i32 0, i32 0
  %88 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 10
  %89 = bitcast %"class.v8::internal::Handle.1134"* %88 to i64*
  %90 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %11, i64 0, i32 11
  %91 = bitcast i64* %90 to i8*
  %92 = bitcast %"class.v8::internal::Isolate"** %83 to %"class.v8::internal::Factory"**
  %93 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %12 to i8*
  %94 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %12, i64 0, i32 0, i32 0, i32 0
  %95 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %12, i64 0, i32 0
  %96 = bitcast %"class.v8::internal::LookupIterator"* %20 to i8*
  %97 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 0
  %98 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 1
  %99 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 2
  %100 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 3
  %101 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 4, i32 0
  %102 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 5
  %103 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 6, i32 0, i32 0
  %104 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 7, i32 0, i32 0
  %105 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 8, i32 0, i32 0
  %106 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 9, i32 0, i32 0
  %107 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 10
  %108 = bitcast %"class.v8::internal::Handle.1134"* %107 to i64*
  %109 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %20, i64 0, i32 11
  %110 = bitcast i64* %109 to i8*
  %111 = bitcast %"class.v8::internal::ScopeInfo"* %21 to i8*
  %112 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.v8::internal::StringSet"* %22 to i8*
  %114 = getelementptr inbounds %"class.v8::internal::StringSet", %"class.v8::internal::StringSet"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.v8::internal::ScopeInfo"* %15 to i8*
  %116 = getelementptr inbounds %"class.v8::internal::ScopeInfo", %"class.v8::internal::ScopeInfo"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = bitcast %"struct.v8::internal::VariableLookupResult"* %16 to i8*
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %29, i64 0, i32 0, i32 7, i32 0, i64 5
  br label %119

119:                                              ; preds = %1029, %34
  %120 = phi i64* [ %0, %34 ], [ %1030, %1029 ]
  %121 = load i64, i64* %120, align 8
  %122 = and i64 %121, -4294967296
  %123 = add i64 %121, -1
  %124 = inttoptr i64 %123 to i32*
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %122, %126
  %128 = add i64 %127, 7
  %129 = inttoptr i64 %128 to i16*
  %130 = load atomic i16, i16* %129 monotonic, align 2
  %131 = icmp eq i16 %130, 144
  br i1 %131, label %156, label %132

132:                                              ; preds = %119
  %133 = load atomic i32, i32* %124 monotonic, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %122, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i16*
  %138 = load atomic i16, i16* %137 monotonic, align 2
  %139 = icmp eq i16 %138, 146
  br i1 %139, label %156, label %140

140:                                              ; preds = %132
  %141 = load atomic i32, i32* %124 monotonic, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %122, %142
  %144 = add i64 %143, 7
  %145 = inttoptr i64 %144 to i16*
  %146 = load atomic i16, i16* %145 monotonic, align 2
  %147 = icmp eq i16 %146, 142
  br i1 %147, label %156, label %148

148:                                              ; preds = %140
  %149 = load atomic i32, i32* %124 monotonic, align 4
  %150 = zext i32 %149 to i64
  %151 = or i64 %122, %150
  %152 = add i64 %151, 7
  %153 = inttoptr i64 %152 to i16*
  %154 = load atomic i16, i16* %153 monotonic, align 2
  %155 = icmp eq i16 %154, 138
  br i1 %155, label %156, label %624

156:                                              ; preds = %148, %140, %132, %119
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %157 = add i64 %121, 7
  %158 = inttoptr i64 %157 to i32*
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = zext i32 %159 to i64
  %161 = or i64 %122, %160
  store i64 %161, i64* %36, align 8
  %162 = call zeroext i1 @_ZNK2v88internal9ScopeInfo23HasContextExtensionSlotEv(%"class.v8::internal::ScopeInfo"* nonnull %9) #8
  br i1 %162, label %164, label %163

163:                                              ; preds = %156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  br label %624

164:                                              ; preds = %156
  %165 = add i64 %121, 15
  %166 = inttoptr i64 %165 to i32*
  %167 = load atomic i32, i32* %166 monotonic, align 4
  %168 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %169 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %168, null
  br i1 %169, label %176, label %170

170:                                              ; preds = %164
  %171 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %168, i64 0, i32 0, i32 1
  %172 = load i8, i8* %171, align 8, !range !3
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %168, i64 0, i32 1, i64 0
  br label %186

176:                                              ; preds = %170, %164
  %177 = and i32 %167, -262144
  %178 = zext i32 %177 to i64
  %179 = or i64 %122, %178
  %180 = or i64 %179, 16
  %181 = inttoptr i64 %180 to i64*
  %182 = load i64, i64* %181, align 16
  %183 = add i64 %182, -41416
  %184 = inttoptr i64 %183 to %"class.v8::internal::Isolate"*
  %185 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %184, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %186

186:                                              ; preds = %174, %176
  %187 = phi i64* [ %185, %176 ], [ %175, %174 ]
  %188 = getelementptr inbounds i64, i64* %187, i64 4
  %189 = load i64, i64* %188, align 8
  %190 = trunc i64 %189 to i32
  %191 = icmp eq i32 %167, %190
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  br i1 %191, label %624, label %192

192:                                              ; preds = %186
  %193 = load i64, i64* %120, align 8
  %194 = and i64 %193, -4294967296
  %195 = add i64 %193, -1
  %196 = inttoptr i64 %195 to i32*
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = zext i32 %197 to i64
  %199 = or i64 %194, %198
  %200 = add i64 %199, 7
  %201 = inttoptr i64 %200 to i16*
  %202 = load atomic i16, i16* %201 monotonic, align 2
  %203 = icmp eq i16 %202, 146
  %204 = add i64 %193, 15
  %205 = inttoptr i64 %204 to i32*
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = zext i32 %206 to i64
  %208 = or i64 %194, %207
  br i1 %203, label %231, label %209

209:                                              ; preds = %192
  br i1 %169, label %216, label %210

210:                                              ; preds = %209
  %211 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %168, i64 0, i32 0, i32 1
  %212 = load i8, i8* %211, align 8, !range !3
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %168, i64 0, i32 1, i64 0
  br label %224

216:                                              ; preds = %210, %209
  %217 = and i64 %208, -262144
  %218 = or i64 %217, 16
  %219 = inttoptr i64 %218 to i64*
  %220 = load i64, i64* %219, align 16
  %221 = add i64 %220, -41416
  %222 = inttoptr i64 %221 to %"class.v8::internal::Isolate"*
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %222, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %224

224:                                              ; preds = %216, %214
  %225 = phi i64* [ %223, %216 ], [ %215, %214 ]
  %226 = getelementptr inbounds i64, i64* %225, i64 4
  %227 = load i64, i64* %226, align 8
  %228 = trunc i64 %227 to i32
  %229 = icmp eq i32 %206, %228
  %230 = select i1 %229, i64 0, i64 %208
  br label %231

231:                                              ; preds = %192, %224
  %232 = phi i64 [ %230, %224 ], [ %208, %192 ]
  %233 = trunc i64 %232 to i32
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %624, label %235

235:                                              ; preds = %231
  %236 = load atomic i32, i32* %196 monotonic, align 4
  %237 = zext i32 %236 to i64
  %238 = or i64 %194, %237
  %239 = add i64 %238, 7
  %240 = inttoptr i64 %239 to i16*
  %241 = load atomic i16, i16* %240 monotonic, align 2
  %242 = icmp eq i16 %241, 146
  %243 = load atomic i32, i32* %205 monotonic, align 4
  %244 = zext i32 %243 to i64
  %245 = or i64 %194, %244
  br i1 %242, label %268, label %246

246:                                              ; preds = %235
  br i1 %169, label %253, label %247

247:                                              ; preds = %246
  %248 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %168, i64 0, i32 0, i32 1
  %249 = load i8, i8* %248, align 8, !range !3
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %168, i64 0, i32 1, i64 0
  br label %261

253:                                              ; preds = %247, %246
  %254 = and i64 %245, -262144
  %255 = or i64 %254, 16
  %256 = inttoptr i64 %255 to i64*
  %257 = load i64, i64* %256, align 16
  %258 = add i64 %257, -41416
  %259 = inttoptr i64 %258 to %"class.v8::internal::Isolate"*
  %260 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %259, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %261

261:                                              ; preds = %253, %251
  %262 = phi i64* [ %260, %253 ], [ %252, %251 ]
  %263 = getelementptr inbounds i64, i64* %262, i64 4
  %264 = load i64, i64* %263, align 8
  %265 = trunc i64 %264 to i32
  %266 = icmp eq i32 %243, %265
  %267 = select i1 %266, i64 0, i64 %245
  br label %268

268:                                              ; preds = %235, %261
  %269 = phi i64 [ %267, %261 ], [ %245, %235 ]
  %270 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %271 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %270, null
  br i1 %271, label %274, label %272

272:                                              ; preds = %268
  %273 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %270, i64 %269) #8
  br label %285

274:                                              ; preds = %268
  %275 = load i64*, i64** %38, align 8
  %276 = load i64*, i64** %39, align 8
  %277 = icmp eq i64* %275, %276
  br i1 %277, label %278, label %280

278:                                              ; preds = %274
  %279 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #8
  br label %280

280:                                              ; preds = %278, %274
  %281 = phi i64* [ %279, %278 ], [ %275, %274 ]
  %282 = ptrtoint i64* %281 to i64
  %283 = add i64 %282, 8
  %284 = inttoptr i64 %283 to i64*
  store i64* %284, i64** %38, align 8
  store i64 %269, i64* %281, align 8
  br label %285

285:                                              ; preds = %272, %280
  %286 = phi i64* [ %273, %272 ], [ %281, %280 ]
  %287 = load i64, i64* %120, align 8
  %288 = and i64 %287, -4294967296
  %289 = add i64 %287, -1
  %290 = inttoptr i64 %289 to i32*
  %291 = load atomic i32, i32* %290 monotonic, align 4
  %292 = zext i32 %291 to i64
  %293 = or i64 %288, %292
  %294 = add i64 %293, 7
  %295 = inttoptr i64 %294 to i16*
  %296 = load atomic i16, i16* %295 monotonic, align 2
  %297 = icmp eq i16 %296, 144
  br i1 %297, label %298, label %386

298:                                              ; preds = %285
  %299 = load atomic i32, i32* %290 monotonic, align 4
  %300 = zext i32 %299 to i64
  %301 = or i64 %288, %300
  %302 = add i64 %301, 19
  %303 = inttoptr i64 %302 to i32*
  %304 = load i32, i32* %303, align 4
  %305 = zext i32 %304 to i64
  %306 = or i64 %288, %305
  %307 = add i64 %306, 15
  %308 = inttoptr i64 %307 to i32*
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = zext i32 %309 to i64
  %311 = or i64 %288, %310
  %312 = add i64 %311, 11
  %313 = inttoptr i64 %312 to i32*
  %314 = load i32, i32* %313, align 4
  %315 = zext i32 %314 to i64
  %316 = or i64 %288, %315
  %317 = add i64 %316, 683
  %318 = inttoptr i64 %317 to i32*
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = zext i32 %319 to i64
  %321 = or i64 %288, %320
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #8
  %322 = load i64, i64* %1, align 8
  %323 = add i64 %321, 7
  %324 = inttoptr i64 %323 to i32*
  %325 = load atomic i32, i32* %324 monotonic, align 4
  %326 = icmp sgt i32 %325, 1
  br i1 %326, label %327, label %385

327:                                              ; preds = %298, %345
  %328 = phi i64 [ %346, %345 ], [ 0, %298 ]
  %329 = trunc i64 %328 to i32
  %330 = shl i32 %329, 2
  %331 = add i32 %330, 4
  %332 = sext i32 %331 to i64
  %333 = add i64 %323, %332
  %334 = inttoptr i64 %333 to i32*
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = zext i32 %335 to i64
  %337 = or i64 %288, %336
  %338 = add i64 %337, 7
  %339 = inttoptr i64 %338 to i32*
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = zext i32 %340 to i64
  %342 = or i64 %288, %341
  %343 = call i32 @_ZN2v88internal9ScopeInfo16ContextSlotIndexES1_NS0_6StringEPNS0_20VariableLookupResultE(i64 %342, i64 %322, %"struct.v8::internal::VariableLookupResult"* nonnull %13) #8
  %344 = icmp sgt i32 %343, -1
  br i1 %344, label %351, label %345

345:                                              ; preds = %327
  %346 = add nuw nsw i64 %328, 1
  %347 = load atomic i32, i32* %324 monotonic, align 4
  %348 = ashr i32 %347, 1
  %349 = sext i32 %348 to i64
  %350 = icmp slt i64 %346, %349
  br i1 %350, label %327, label %385

351:                                              ; preds = %327
  %352 = trunc i64 %328 to i32
  %353 = inttoptr i64 %333 to i32*
  %354 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %13, i64 0, i32 0
  store i32 %352, i32* %354, align 4
  %355 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %13, i64 0, i32 1
  store i32 %343, i32* %355, align 4
  %356 = load atomic i32, i32* %353 monotonic, align 4
  %357 = zext i32 %356 to i64
  %358 = or i64 %288, %357
  store i32 %343, i32* %3, align 4
  %359 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %13, i64 0, i32 4
  %360 = load i8, i8* %359, align 2
  store i8 %360, i8* %6, align 1
  %361 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %13, i64 0, i32 5
  %362 = load i8, i8* %361, align 1
  store i8 %362, i8* %5, align 1
  %363 = icmp eq i8 %360, 1
  %364 = add i8 %360, -7
  %365 = icmp ult i8 %364, 4
  %366 = or i1 %363, %365
  %367 = zext i1 %366 to i32
  store i32 %367, i32* %4, align 4
  %368 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %369 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %368, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %351
  %371 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %368, i64 %358) #8
  br label %383

372:                                              ; preds = %351
  %373 = load i64*, i64** %38, align 8
  %374 = load i64*, i64** %39, align 8
  %375 = icmp eq i64* %373, %374
  br i1 %375, label %376, label %378

376:                                              ; preds = %372
  %377 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #8
  br label %378

378:                                              ; preds = %376, %372
  %379 = phi i64* [ %377, %376 ], [ %373, %372 ]
  %380 = ptrtoint i64* %379 to i64
  %381 = add i64 %380, 8
  %382 = inttoptr i64 %381 to i64*
  store i64* %382, i64** %38, align 8
  store i64 %358, i64* %379, align 8
  br label %383

383:                                              ; preds = %370, %378
  %384 = phi i64* [ %379, %378 ], [ %371, %370 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #8
  br label %1031

385:                                              ; preds = %345, %298
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #8
  br label %386

386:                                              ; preds = %385, %285
  br i1 %42, label %399, label %387

387:                                              ; preds = %386
  %388 = load i64, i64* %286, align 8
  %389 = and i64 %388, -4294967296
  %390 = add i64 %388, -1
  %391 = inttoptr i64 %390 to i32*
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = zext i32 %392 to i64
  %394 = or i64 %389, %393
  %395 = add i64 %394, 7
  %396 = inttoptr i64 %395 to i16*
  %397 = load atomic i16, i16* %396 monotonic, align 2
  %398 = icmp eq i16 %397, 1090
  br i1 %398, label %399, label %404

399:                                              ; preds = %386, %387
  %400 = call i64 @_ZN2v88internal10JSReceiver24GetOwnPropertyAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64* %286, i64* %1)
  %401 = trunc i64 %400 to i8
  %402 = lshr i64 %400, 32
  %403 = trunc i64 %402 to i32
  br label %618

404:                                              ; preds = %387
  %405 = load i64, i64* %1, align 8
  %406 = call zeroext i1 @_ZN2v88internal9ScopeInfo19VariableIsSyntheticENS0_6StringE(i64 %405) #8
  br i1 %406, label %407, label %408

407:                                              ; preds = %404
  store i32 64, i32* %4, align 4
  br label %624

408:                                              ; preds = %404
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %43) #8
  %409 = ptrtoint i64* %286 to i64
  br i1 %45, label %410, label %414

410:                                              ; preds = %408
  %411 = load i64, i64* null, align 536870912
  %412 = add i64 %411, -1
  %413 = inttoptr i64 %412 to i32*
  br label %434

414:                                              ; preds = %408
  %415 = load i64, i64* %1, align 8
  %416 = load i64, i64* %46, align 8
  %417 = add i64 %415, -1
  %418 = inttoptr i64 %417 to i32*
  %419 = load atomic i32, i32* %418 monotonic, align 4
  %420 = and i64 %416, 4294967295
  %421 = icmp eq i64 %420, 0
  call void @llvm.assume(i1 %421) #8
  %422 = zext i32 %419 to i64
  %423 = or i64 %416, %422
  %424 = add i64 %423, 7
  %425 = inttoptr i64 %424 to i16*
  %426 = load atomic i16, i16* %425 monotonic, align 2
  %427 = icmp eq i16 %426, 64
  br i1 %427, label %428, label %434

428:                                              ; preds = %414
  %429 = add i64 %415, 7
  %430 = inttoptr i64 %429 to i32*
  %431 = load i32, i32* %430, align 4
  %432 = and i32 %431, 1
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %434, label %437

434:                                              ; preds = %410, %428, %414
  %435 = phi i32* [ %413, %410 ], [ %418, %428 ], [ %418, %414 ]
  %436 = phi i64 [ %411, %410 ], [ %415, %428 ], [ %415, %414 ]
  br label %437

437:                                              ; preds = %434, %428
  %438 = phi i32* [ %435, %434 ], [ %418, %428 ]
  %439 = phi i64 [ %436, %434 ], [ %415, %428 ]
  %440 = phi i32 [ 3, %434 ], [ 0, %428 ]
  store i32 %440, i32* %44, align 8
  store i32 4, i32* %47, align 4
  store i8 0, i8* %48, align 8
  store i32 0, i32* %49, align 4
  store i32 0, i32* %50, align 8
  store %"class.v8::internal::Isolate"* %29, %"class.v8::internal::Isolate"** %51, align 8
  store i64* %1, i64** %52, align 8
  store i64* null, i64** %53, align 8
  store i64* %286, i64** %54, align 8
  store i64* null, i64** %55, align 8
  store i64 %409, i64* %57, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 -1, i64 16, i1 false) #8
  %441 = and i64 %439, -4294967296
  %442 = load atomic i32, i32* %438 monotonic, align 4
  %443 = zext i32 %442 to i64
  %444 = or i64 %441, %443
  %445 = add i64 %444, 7
  %446 = inttoptr i64 %445 to i16*
  %447 = load atomic i16, i16* %446 monotonic, align 2
  %448 = and i16 %447, -32
  %449 = icmp eq i16 %448, 32
  br i1 %449, label %450, label %453

450:                                              ; preds = %437
  %451 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %60, align 8
  %452 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %451, %"class.v8::internal::Isolate"* %29, i64* %1) #8
  br label %453

453:                                              ; preds = %437, %450
  %454 = phi i64* [ %452, %450 ], [ %1, %437 ]
  store i64* %454, i64** %52, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %14) #8
  %455 = load i64, i64* %120, align 8
  %456 = and i64 %455, -4294967296
  %457 = add i64 %455, -1
  %458 = inttoptr i64 %457 to i32*
  %459 = load atomic i32, i32* %458 monotonic, align 4
  %460 = zext i32 %459 to i64
  %461 = or i64 %456, %460
  %462 = add i64 %461, 7
  %463 = inttoptr i64 %462 to i16*
  %464 = load atomic i16, i16* %463 monotonic, align 2
  %465 = icmp eq i16 %464, 146
  %466 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %51, align 8
  %467 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %14) #8
  %468 = trunc i16 %467 to i8
  %469 = icmp ne i8 %468, 0
  %470 = and i1 %465, %469
  %471 = icmp ugt i16 %467, 255
  %472 = and i1 %471, %470
  br i1 %472, label %473, label %609

473:                                              ; preds = %453
  %474 = load i64*, i64** %54, align 8
  %475 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %466, i64 0, i32 0, i32 7, i32 0, i64 519
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %61) #8
  %476 = ptrtoint i64* %474 to i64
  %477 = load i64, i64* %475, align 8
  %478 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %466, i64 0, i32 0, i32 4
  %479 = load i64, i64* %478, align 8
  %480 = add i64 %477, -1
  %481 = inttoptr i64 %480 to i32*
  %482 = load atomic i32, i32* %481 monotonic, align 4
  %483 = and i64 %479, 4294967295
  %484 = icmp eq i64 %483, 0
  call void @llvm.assume(i1 %484) #8
  %485 = zext i32 %482 to i64
  %486 = or i64 %479, %485
  %487 = add i64 %486, 7
  %488 = inttoptr i64 %487 to i16*
  %489 = load atomic i16, i16* %488 monotonic, align 2
  %490 = icmp eq i16 %489, 64
  br i1 %490, label %491, label %497

491:                                              ; preds = %473
  %492 = add i64 %477, 7
  %493 = inttoptr i64 %492 to i32*
  %494 = load i32, i32* %493, align 4
  %495 = and i32 %494, 1
  %496 = icmp eq i32 %495, 0
  br i1 %496, label %497, label %498

497:                                              ; preds = %491, %473
  br label %498

498:                                              ; preds = %497, %491
  %499 = phi i32 [ 3, %497 ], [ 0, %491 ]
  store i32 %499, i32* %62, align 8
  store i32 4, i32* %63, align 4
  store i8 0, i8* %64, align 8
  store i32 0, i32* %65, align 4
  store i32 0, i32* %66, align 8
  store %"class.v8::internal::Isolate"* %466, %"class.v8::internal::Isolate"** %67, align 8
  store i64* %475, i64** %68, align 8
  store i64* null, i64** %69, align 8
  store i64* %474, i64** %70, align 8
  store i64* null, i64** %71, align 8
  store i64 %476, i64* %73, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 -1, i64 16, i1 false) #8
  %500 = and i64 %477, -4294967296
  %501 = load atomic i32, i32* %481 monotonic, align 4
  %502 = zext i32 %501 to i64
  %503 = or i64 %500, %502
  %504 = add i64 %503, 7
  %505 = inttoptr i64 %504 to i16*
  %506 = load atomic i16, i16* %505 monotonic, align 2
  %507 = and i16 %506, -32
  %508 = icmp eq i16 %507, 32
  br i1 %508, label %509, label %513

509:                                              ; preds = %498
  %510 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %466, i64 0, i32 5, i32 0, i32 0, i32 0
  %511 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %510, align 8
  %512 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %511, %"class.v8::internal::Isolate"* %466, i64* %475) #8
  br label %513

513:                                              ; preds = %509, %498
  %514 = phi i64* [ %512, %509 ], [ %475, %498 ]
  store i64* %514, i64** %68, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %10) #8
  %515 = load i32, i32* %63, align 4
  %516 = icmp eq i32 %515, 4
  br i1 %516, label %517, label %521

517:                                              ; preds = %513
  %518 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %76, align 8
  %519 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %518, i64 160
  %520 = bitcast %"class.v8::internal::Factory"* %519 to i64*
  br label %523

521:                                              ; preds = %513
  %522 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %10, i1 zeroext false) #8
  br label %523

523:                                              ; preds = %521, %517
  %524 = phi i64* [ %522, %521 ], [ %520, %517 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %61) #8
  %525 = icmp eq i64* %524, null
  br i1 %525, label %615, label %526

526:                                              ; preds = %523
  %527 = ptrtoint i64* %524 to i64
  %528 = load i64, i64* %524, align 8
  %529 = and i64 %528, 1
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %614, label %531

531:                                              ; preds = %526
  %532 = and i64 %528, -4294967296
  %533 = add i64 %528, -1
  %534 = inttoptr i64 %533 to i32*
  %535 = load atomic i32, i32* %534 monotonic, align 4
  %536 = zext i32 %535 to i64
  %537 = or i64 %532, %536
  %538 = add i64 %537, 7
  %539 = inttoptr i64 %538 to i16*
  %540 = load atomic i16, i16* %539 monotonic, align 2
  %541 = icmp ugt i16 %540, 185
  br i1 %541, label %542, label %614

542:                                              ; preds = %531
  %543 = load i64*, i64** %52, align 8
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %77) #8
  %544 = icmp eq i64* %543, null
  br i1 %544, label %545, label %549

545:                                              ; preds = %542
  %546 = load i64, i64* null, align 536870912
  %547 = add i64 %546, -1
  %548 = inttoptr i64 %547 to i32*
  br label %569

549:                                              ; preds = %542
  %550 = load i64, i64* %543, align 8
  %551 = load i64, i64* %478, align 8
  %552 = add i64 %550, -1
  %553 = inttoptr i64 %552 to i32*
  %554 = load atomic i32, i32* %553 monotonic, align 4
  %555 = and i64 %551, 4294967295
  %556 = icmp eq i64 %555, 0
  call void @llvm.assume(i1 %556) #8
  %557 = zext i32 %554 to i64
  %558 = or i64 %551, %557
  %559 = add i64 %558, 7
  %560 = inttoptr i64 %559 to i16*
  %561 = load atomic i16, i16* %560 monotonic, align 2
  %562 = icmp eq i16 %561, 64
  br i1 %562, label %563, label %569

563:                                              ; preds = %549
  %564 = add i64 %550, 7
  %565 = inttoptr i64 %564 to i32*
  %566 = load i32, i32* %565, align 4
  %567 = and i32 %566, 1
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %569, label %572

569:                                              ; preds = %563, %549, %545
  %570 = phi i32* [ %548, %545 ], [ %553, %563 ], [ %553, %549 ]
  %571 = phi i64 [ %546, %545 ], [ %550, %563 ], [ %550, %549 ]
  br label %572

572:                                              ; preds = %569, %563
  %573 = phi i32* [ %570, %569 ], [ %553, %563 ]
  %574 = phi i64 [ %571, %569 ], [ %550, %563 ]
  %575 = phi i32 [ 3, %569 ], [ 0, %563 ]
  store i32 %575, i32* %78, align 8
  store i32 4, i32* %79, align 4
  store i8 0, i8* %80, align 8
  store i32 0, i32* %81, align 4
  store i32 0, i32* %82, align 8
  store %"class.v8::internal::Isolate"* %466, %"class.v8::internal::Isolate"** %83, align 8
  store i64* %543, i64** %84, align 8
  store i64* null, i64** %85, align 8
  store i64* %524, i64** %86, align 8
  store i64* null, i64** %87, align 8
  store i64 %527, i64* %89, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 -1, i64 16, i1 false) #8
  %576 = and i64 %574, -4294967296
  %577 = load atomic i32, i32* %573 monotonic, align 4
  %578 = zext i32 %577 to i64
  %579 = or i64 %576, %578
  %580 = add i64 %579, 7
  %581 = inttoptr i64 %580 to i16*
  %582 = load atomic i16, i16* %581 monotonic, align 2
  %583 = and i16 %582, -32
  %584 = icmp eq i16 %583, 32
  br i1 %584, label %585, label %589

585:                                              ; preds = %572
  %586 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %466, i64 0, i32 5, i32 0, i32 0, i32 0
  %587 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %586, align 8
  %588 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %587, %"class.v8::internal::Isolate"* %466, i64* %543) #8
  br label %589

589:                                              ; preds = %585, %572
  %590 = phi i64* [ %588, %585 ], [ %543, %572 ]
  store i64* %590, i64** %84, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %11) #8
  %591 = load i32, i32* %79, align 4
  %592 = icmp eq i32 %591, 4
  br i1 %592, label %593, label %597

593:                                              ; preds = %589
  %594 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %92, align 8
  %595 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %594, i64 160
  %596 = bitcast %"class.v8::internal::Factory"* %595 to i64*
  br label %599

597:                                              ; preds = %589
  %598 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %11, i1 zeroext false) #8
  br label %599

599:                                              ; preds = %597, %593
  %600 = phi i64* [ %598, %597 ], [ %596, %593 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %77) #8
  %601 = icmp eq i64* %600, null
  br i1 %601, label %615, label %602

602:                                              ; preds = %599
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #8
  %603 = load i64, i64* %600, align 8
  store i64 %603, i64* %94, align 8
  %604 = call zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"* nonnull %95, %"class.v8::internal::Isolate"* %466) #8
  %605 = xor i1 %604, true
  %606 = zext i1 %605 to i16
  %607 = shl nuw nsw i16 %606, 8
  %608 = or i16 %607, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #8
  br label %611

609:                                              ; preds = %453
  %610 = icmp eq i8 %468, 0
  br i1 %610, label %615, label %611

611:                                              ; preds = %602, %609
  %612 = phi i16 [ %608, %602 ], [ %467, %609 ]
  %613 = icmp ugt i16 %612, 255
  br i1 %613, label %614, label %615

614:                                              ; preds = %531, %526, %611
  br label %615

615:                                              ; preds = %614, %611, %599, %523, %609
  %616 = phi i8 [ 0, %609 ], [ 0, %523 ], [ 0, %599 ], [ 1, %611 ], [ 1, %614 ]
  %617 = phi i32 [ 0, %609 ], [ 0, %523 ], [ 0, %599 ], [ 64, %611 ], [ 0, %614 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %43) #8
  br label %618

618:                                              ; preds = %615, %399
  %619 = phi i8 [ %401, %399 ], [ %616, %615 ]
  %620 = phi i32 [ %403, %399 ], [ %617, %615 ]
  %621 = icmp eq i8 %619, 0
  br i1 %621, label %1031, label %622

622:                                              ; preds = %618
  store i32 %620, i32* %4, align 4
  %623 = icmp eq i32 %620, 64
  br i1 %623, label %624, label %1031

624:                                              ; preds = %231, %186, %148, %163, %407, %622
  %625 = load i64, i64* %120, align 8
  %626 = and i64 %625, -4294967296
  %627 = add i64 %625, -1
  %628 = inttoptr i64 %627 to i32*
  %629 = load atomic i32, i32* %628 monotonic, align 4
  %630 = zext i32 %629 to i64
  %631 = or i64 %626, %630
  %632 = add i64 %631, 7
  %633 = inttoptr i64 %632 to i16*
  %634 = load atomic i16, i16* %633 monotonic, align 2
  %635 = icmp eq i16 %634, 142
  br i1 %635, label %676, label %636

636:                                              ; preds = %624
  %637 = load atomic i32, i32* %628 monotonic, align 4
  %638 = zext i32 %637 to i64
  %639 = or i64 %626, %638
  %640 = add i64 %639, 7
  %641 = inttoptr i64 %640 to i16*
  %642 = load atomic i16, i16* %641 monotonic, align 2
  %643 = icmp eq i16 %642, 138
  br i1 %643, label %676, label %644

644:                                              ; preds = %636
  %645 = load atomic i32, i32* %628 monotonic, align 4
  %646 = zext i32 %645 to i64
  %647 = or i64 %626, %646
  %648 = add i64 %647, 7
  %649 = inttoptr i64 %648 to i16*
  %650 = load atomic i16, i16* %649 monotonic, align 2
  %651 = icmp eq i16 %650, 145
  br i1 %651, label %676, label %652

652:                                              ; preds = %644
  %653 = load atomic i32, i32* %628 monotonic, align 4
  %654 = zext i32 %653 to i64
  %655 = or i64 %626, %654
  %656 = add i64 %655, 7
  %657 = inttoptr i64 %656 to i16*
  %658 = load atomic i16, i16* %657 monotonic, align 2
  %659 = icmp eq i16 %658, 141
  br i1 %659, label %676, label %660

660:                                              ; preds = %652
  %661 = load atomic i32, i32* %628 monotonic, align 4
  %662 = zext i32 %661 to i64
  %663 = or i64 %626, %662
  %664 = add i64 %663, 7
  %665 = inttoptr i64 %664 to i16*
  %666 = load atomic i16, i16* %665 monotonic, align 2
  %667 = icmp eq i16 %666, 143
  br i1 %667, label %676, label %668

668:                                              ; preds = %660
  %669 = load atomic i32, i32* %628 monotonic, align 4
  %670 = zext i32 %669 to i64
  %671 = or i64 %626, %670
  %672 = add i64 %671, 7
  %673 = inttoptr i64 %672 to i16*
  %674 = load atomic i16, i16* %673 monotonic, align 2
  %675 = icmp eq i16 %674, 139
  br i1 %675, label %676, label %838

676:                                              ; preds = %624, %636, %644, %652, %660, %668
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #8
  %677 = add i64 %625, 7
  %678 = inttoptr i64 %677 to i32*
  %679 = load atomic i32, i32* %678 monotonic, align 4
  %680 = zext i32 %679 to i64
  %681 = or i64 %626, %680
  store i64 %681, i64* %116, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #8
  %682 = load i64, i64* %1, align 8
  %683 = call i32 @_ZN2v88internal9ScopeInfo16ContextSlotIndexES1_NS0_6StringEPNS0_20VariableLookupResultE(i64 %681, i64 %682, %"struct.v8::internal::VariableLookupResult"* nonnull %16) #8
  %684 = icmp sgt i32 %683, -1
  br i1 %684, label %685, label %730

685:                                              ; preds = %676
  %686 = call zeroext i1 @_ZNK2v88internal9ScopeInfo15IsReplModeScopeEv(%"class.v8::internal::ScopeInfo"* nonnull %15) #8
  br i1 %686, label %687, label %720

687:                                              ; preds = %685
  %688 = load i64, i64* %120, align 8
  %689 = shl i32 %683, 2
  %690 = sext i32 %689 to i64
  %691 = add nsw i64 %690, 7
  %692 = add i64 %691, %688
  %693 = inttoptr i64 %692 to i32*
  %694 = load atomic i32, i32* %693 monotonic, align 4
  %695 = load i64, i64* %118, align 8
  %696 = trunc i64 %695 to i32
  %697 = icmp eq i32 %694, %696
  br i1 %697, label %698, label %720

698:                                              ; preds = %687
  %699 = and i64 %688, -4294967296
  %700 = add i64 %688, 11
  %701 = inttoptr i64 %700 to i32*
  %702 = load atomic i32, i32* %701 monotonic, align 4
  %703 = zext i32 %702 to i64
  %704 = or i64 %699, %703
  %705 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %706 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %705, null
  br i1 %706, label %709, label %707

707:                                              ; preds = %698
  %708 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %705, i64 %704) #8
  br label %836

709:                                              ; preds = %698
  %710 = load i64*, i64** %38, align 8
  %711 = load i64*, i64** %39, align 8
  %712 = icmp eq i64* %710, %711
  br i1 %712, label %713, label %715

713:                                              ; preds = %709
  %714 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #8
  br label %715

715:                                              ; preds = %713, %709
  %716 = phi i64* [ %714, %713 ], [ %710, %709 ]
  %717 = ptrtoint i64* %716 to i64
  %718 = add i64 %717, 8
  %719 = inttoptr i64 %718 to i64*
  store i64* %719, i64** %38, align 8
  store i64 %704, i64* %716, align 8
  br label %836

720:                                              ; preds = %685, %687
  store i32 %683, i32* %3, align 4
  %721 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %16, i64 0, i32 4
  %722 = load i8, i8* %721, align 2
  store i8 %722, i8* %6, align 1
  %723 = getelementptr inbounds %"struct.v8::internal::VariableLookupResult", %"struct.v8::internal::VariableLookupResult"* %16, i64 0, i32 5
  %724 = load i8, i8* %723, align 1
  store i8 %724, i8* %5, align 1
  %725 = icmp eq i8 %722, 1
  %726 = add i8 %722, -7
  %727 = icmp ult i8 %726, 4
  %728 = or i1 %725, %727
  %729 = zext i1 %728 to i32
  store i32 %729, i32* %4, align 4
  br label %834

730:                                              ; preds = %676
  br i1 %31, label %731, label %751

731:                                              ; preds = %730
  %732 = load i64, i64* %120, align 8
  %733 = and i64 %732, -4294967296
  %734 = add i64 %732, -1
  %735 = inttoptr i64 %734 to i32*
  %736 = load atomic i32, i32* %735 monotonic, align 4
  %737 = zext i32 %736 to i64
  %738 = or i64 %733, %737
  %739 = add i64 %738, 7
  %740 = inttoptr i64 %739 to i16*
  %741 = load atomic i16, i16* %740 monotonic, align 2
  %742 = icmp eq i16 %741, 142
  br i1 %742, label %743, label %751

743:                                              ; preds = %731
  %744 = load i64, i64* %1, align 8
  %745 = call i32 @_ZNK2v88internal9ScopeInfo24FunctionContextSlotIndexENS0_6StringE(%"class.v8::internal::ScopeInfo"* nonnull %15, i64 %744) #8
  %746 = icmp sgt i32 %745, -1
  br i1 %746, label %747, label %751

747:                                              ; preds = %743
  store i32 %745, i32* %3, align 4
  store i32 1, i32* %4, align 4
  store i8 1, i8* %5, align 1
  store i8 1, i8* %6, align 1
  br i1 %32, label %748, label %834

748:                                              ; preds = %747
  %749 = call zeroext i1 @_ZNK2v88internal9ScopeInfo13language_modeEv(%"class.v8::internal::ScopeInfo"* nonnull %15) #8
  br i1 %749, label %834, label %750

750:                                              ; preds = %748
  store i8 1, i8* %7, align 1
  br label %834

751:                                              ; preds = %730, %743, %731
  %752 = load i64, i64* %120, align 8
  %753 = and i64 %752, -4294967296
  %754 = add i64 %752, -1
  %755 = inttoptr i64 %754 to i32*
  %756 = load atomic i32, i32* %755 monotonic, align 4
  %757 = zext i32 %756 to i64
  %758 = or i64 %753, %757
  %759 = add i64 %758, 7
  %760 = inttoptr i64 %759 to i16*
  %761 = load atomic i16, i16* %760 monotonic, align 2
  %762 = icmp eq i16 %761, 143
  br i1 %762, label %763, label %831

763:                                              ; preds = %751
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %18) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #8
  %764 = load i64, i64* %1, align 8
  %765 = call i32 @_ZN2v88internal9ScopeInfo11ModuleIndexENS0_6StringEPNS0_12VariableModeEPNS0_18InitializationFlagEPNS0_17MaybeAssignedFlagE(%"class.v8::internal::ScopeInfo"* nonnull %15, i64 %764, i8* nonnull %17, i8* nonnull %18, i8* nonnull %19) #8
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %830, label %767

767:                                              ; preds = %763
  store i32 %765, i32* %3, align 4
  %768 = load i8, i8* %17, align 1
  store i8 %768, i8* %6, align 1
  %769 = load i8, i8* %18, align 1
  store i8 %769, i8* %5, align 1
  %770 = call i32 @_ZN2v88internal26SourceTextModuleDescriptor16GetCellIndexKindEi(i32 %765) #8
  %771 = icmp eq i32 %770, 1
  br i1 %771, label %772, label %779

772:                                              ; preds = %767
  %773 = load i8, i8* %17, align 1
  %774 = icmp eq i8 %773, 1
  %775 = add i8 %773, -7
  %776 = icmp ult i8 %775, 4
  %777 = or i1 %774, %776
  %778 = zext i1 %777 to i32
  br label %779

779:                                              ; preds = %767, %772
  %780 = phi i32 [ %778, %772 ], [ 1, %767 ]
  store i32 %780, i32* %4, align 4
  %781 = load i64, i64* %120, align 8
  %782 = and i64 %781, -4294967296
  %783 = add i64 %781, -1
  %784 = inttoptr i64 %783 to i32*
  %785 = load atomic i32, i32* %784 monotonic, align 4
  %786 = zext i32 %785 to i64
  %787 = or i64 %782, %786
  %788 = add i64 %787, 7
  %789 = inttoptr i64 %788 to i16*
  %790 = load atomic i16, i16* %789 monotonic, align 2
  %791 = icmp eq i16 %790, 143
  br i1 %791, label %808, label %792

792:                                              ; preds = %779, %792
  %793 = phi i64 [ %798, %792 ], [ %781, %779 ]
  %794 = add i64 %793, 11
  %795 = inttoptr i64 %794 to i32*
  %796 = load atomic i32, i32* %795 monotonic, align 4
  %797 = zext i32 %796 to i64
  %798 = or i64 %782, %797
  %799 = add i64 %798, -1
  %800 = inttoptr i64 %799 to i32*
  %801 = load atomic i32, i32* %800 monotonic, align 4
  %802 = zext i32 %801 to i64
  %803 = or i64 %782, %802
  %804 = add i64 %803, 7
  %805 = inttoptr i64 %804 to i16*
  %806 = load atomic i16, i16* %805 monotonic, align 2
  %807 = icmp eq i16 %806, 143
  br i1 %807, label %808, label %792

808:                                              ; preds = %792, %779
  %809 = phi i64 [ %781, %779 ], [ %798, %792 ]
  %810 = add i64 %809, 15
  %811 = inttoptr i64 %810 to i32*
  %812 = load atomic i32, i32* %811 monotonic, align 4
  %813 = zext i32 %812 to i64
  %814 = or i64 %782, %813
  %815 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %816 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %815, null
  br i1 %816, label %819, label %817

817:                                              ; preds = %808
  %818 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %815, i64 %814) #8
  br label %832

819:                                              ; preds = %808
  %820 = load i64*, i64** %38, align 8
  %821 = load i64*, i64** %39, align 8
  %822 = icmp eq i64* %820, %821
  br i1 %822, label %823, label %825

823:                                              ; preds = %819
  %824 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #8
  br label %825

825:                                              ; preds = %823, %819
  %826 = phi i64* [ %824, %823 ], [ %820, %819 ]
  %827 = ptrtoint i64* %826 to i64
  %828 = add i64 %827, 8
  %829 = inttoptr i64 %828 to i64*
  store i64* %829, i64** %38, align 8
  store i64 %814, i64* %826, align 8
  br label %832

830:                                              ; preds = %763
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #8
  br label %831

831:                                              ; preds = %830, %751
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #8
  br label %994

832:                                              ; preds = %817, %825
  %833 = phi i64* [ %826, %825 ], [ %818, %817 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #8
  br label %834

834:                                              ; preds = %832, %748, %720, %750, %747
  %835 = phi i64* [ %120, %720 ], [ %120, %750 ], [ %120, %748 ], [ %120, %747 ], [ %833, %832 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #8
  br label %1031

836:                                              ; preds = %715, %707
  %837 = phi i64* [ %708, %707 ], [ %716, %715 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #8
  br label %1029

838:                                              ; preds = %668
  %839 = load atomic i32, i32* %628 monotonic, align 4
  %840 = zext i32 %839 to i64
  %841 = or i64 %626, %840
  %842 = add i64 %841, 7
  %843 = inttoptr i64 %842 to i16*
  %844 = load atomic i16, i16* %843 monotonic, align 2
  %845 = icmp eq i16 %844, 140
  br i1 %845, label %846, label %996

846:                                              ; preds = %838
  %847 = add i64 %625, 15
  %848 = inttoptr i64 %847 to i32*
  %849 = load atomic i32, i32* %848 monotonic, align 4
  %850 = zext i32 %849 to i64
  %851 = or i64 %626, %850
  %852 = and i64 %850, 1
  %853 = icmp eq i64 %852, 0
  br i1 %853, label %938, label %854

854:                                              ; preds = %846
  %855 = add i64 %851, -1
  %856 = inttoptr i64 %855 to i32*
  %857 = load atomic i32, i32* %856 monotonic, align 4
  %858 = zext i32 %857 to i64
  %859 = or i64 %626, %858
  %860 = add i64 %859, 7
  %861 = inttoptr i64 %860 to i16*
  %862 = load atomic i16, i16* %861 monotonic, align 2
  %863 = icmp ugt i16 %862, 185
  br i1 %863, label %864, label %938

864:                                              ; preds = %854
  %865 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %866 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %865, null
  br i1 %866, label %870, label %867

867:                                              ; preds = %864
  %868 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %865, i64 %851) #8
  %869 = ptrtoint i64* %868 to i64
  br label %881

870:                                              ; preds = %864
  %871 = load i64*, i64** %38, align 8
  %872 = load i64*, i64** %39, align 8
  %873 = icmp eq i64* %871, %872
  br i1 %873, label %874, label %876

874:                                              ; preds = %870
  %875 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #8
  br label %876

876:                                              ; preds = %874, %870
  %877 = phi i64* [ %875, %874 ], [ %871, %870 ]
  %878 = ptrtoint i64* %877 to i64
  %879 = add i64 %878, 8
  %880 = inttoptr i64 %879 to i64*
  store i64* %880, i64** %38, align 8
  store i64 %851, i64* %877, align 8
  br label %881

881:                                              ; preds = %867, %876
  %882 = phi i64 [ %869, %867 ], [ %878, %876 ]
  %883 = phi i64* [ %868, %867 ], [ %877, %876 ]
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %96) #8
  br i1 %45, label %884, label %888

884:                                              ; preds = %881
  %885 = load i64, i64* null, align 536870912
  %886 = add i64 %885, -1
  %887 = inttoptr i64 %886 to i32*
  br label %908

888:                                              ; preds = %881
  %889 = load i64, i64* %1, align 8
  %890 = load i64, i64* %46, align 8
  %891 = add i64 %889, -1
  %892 = inttoptr i64 %891 to i32*
  %893 = load atomic i32, i32* %892 monotonic, align 4
  %894 = and i64 %890, 4294967295
  %895 = icmp eq i64 %894, 0
  call void @llvm.assume(i1 %895) #8
  %896 = zext i32 %893 to i64
  %897 = or i64 %890, %896
  %898 = add i64 %897, 7
  %899 = inttoptr i64 %898 to i16*
  %900 = load atomic i16, i16* %899 monotonic, align 2
  %901 = icmp eq i16 %900, 64
  br i1 %901, label %902, label %908

902:                                              ; preds = %888
  %903 = add i64 %889, 7
  %904 = inttoptr i64 %903 to i32*
  %905 = load i32, i32* %904, align 4
  %906 = and i32 %905, 1
  %907 = icmp eq i32 %906, 0
  br i1 %907, label %908, label %911

908:                                              ; preds = %884, %902, %888
  %909 = phi i32* [ %887, %884 ], [ %892, %902 ], [ %892, %888 ]
  %910 = phi i64 [ %885, %884 ], [ %889, %902 ], [ %889, %888 ]
  br label %911

911:                                              ; preds = %908, %902
  %912 = phi i32* [ %909, %908 ], [ %892, %902 ]
  %913 = phi i64 [ %910, %908 ], [ %889, %902 ]
  %914 = phi i32 [ 3, %908 ], [ 0, %902 ]
  store i32 %914, i32* %97, align 8
  store i32 4, i32* %98, align 4
  store i8 0, i8* %99, align 8
  store i32 0, i32* %100, align 4
  store i32 0, i32* %101, align 8
  store %"class.v8::internal::Isolate"* %29, %"class.v8::internal::Isolate"** %102, align 8
  store i64* %1, i64** %103, align 8
  store i64* null, i64** %104, align 8
  store i64* %883, i64** %105, align 8
  store i64* null, i64** %106, align 8
  store i64 %882, i64* %108, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 -1, i64 16, i1 false) #8
  %915 = and i64 %913, -4294967296
  %916 = load atomic i32, i32* %912 monotonic, align 4
  %917 = zext i32 %916 to i64
  %918 = or i64 %915, %917
  %919 = add i64 %918, 7
  %920 = inttoptr i64 %919 to i16*
  %921 = load atomic i16, i16* %920 monotonic, align 2
  %922 = and i16 %921, -32
  %923 = icmp eq i16 %922, 32
  br i1 %923, label %924, label %927

924:                                              ; preds = %911
  %925 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %60, align 8
  %926 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %925, %"class.v8::internal::Isolate"* %29, i64* %1) #8
  br label %927

927:                                              ; preds = %911, %924
  %928 = phi i64* [ %926, %924 ], [ %1, %911 ]
  store i64* %928, i64** %103, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %20) #8
  %929 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %20) #8
  %930 = trunc i16 %929 to i8
  %931 = icmp ne i8 %930, 0
  %932 = icmp ugt i16 %929, 255
  %933 = and i1 %932, %931
  br i1 %933, label %937, label %934

934:                                              ; preds = %927
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %96) #8
  %935 = load i64, i64* %120, align 8
  %936 = and i64 %935, -4294967296
  br label %938

937:                                              ; preds = %927
  store i32 0, i32* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %96) #8
  br label %1031

938:                                              ; preds = %846, %934, %854
  %939 = phi i64 [ %626, %846 ], [ %936, %934 ], [ %626, %854 ]
  %940 = phi i64 [ %625, %846 ], [ %935, %934 ], [ %625, %854 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #8
  %941 = add i64 %940, 7
  %942 = inttoptr i64 %941 to i32*
  %943 = load atomic i32, i32* %942 monotonic, align 4
  %944 = zext i32 %943 to i64
  %945 = or i64 %939, %944
  store i64 %945, i64* %112, align 8
  %946 = call zeroext i1 @_ZNK2v88internal9ScopeInfo18HasLocalsBlockListEv(%"class.v8::internal::ScopeInfo"* nonnull %21) #8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #8
  br i1 %946, label %947, label %951

947:                                              ; preds = %938
  %948 = call i64 @_ZNK2v88internal9ScopeInfo15LocalsBlockListEv(%"class.v8::internal::ScopeInfo"* nonnull %21) #8
  store i64 %948, i64* %114, align 8
  %949 = call zeroext i1 @_ZN2v88internal9StringSet3HasEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringSet"* nonnull %22, %"class.v8::internal::Isolate"* %29, i64* %1) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #8
  br i1 %949, label %950, label %952

950:                                              ; preds = %947
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #8
  br label %1031

951:                                              ; preds = %938
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #8
  br label %952

952:                                              ; preds = %951, %947
  %953 = load i64, i64* %120, align 8
  %954 = and i64 %953, -4294967296
  %955 = add i64 %953, 19
  %956 = inttoptr i64 %955 to i32*
  %957 = load atomic i32, i32* %956 monotonic, align 4
  %958 = zext i32 %957 to i64
  %959 = or i64 %954, %958
  %960 = and i64 %958, 1
  %961 = icmp eq i64 %960, 0
  br i1 %961, label %994, label %962

962:                                              ; preds = %952
  %963 = add i64 %959, -1
  %964 = inttoptr i64 %963 to i32*
  %965 = load atomic i32, i32* %964 monotonic, align 4
  %966 = zext i32 %965 to i64
  %967 = or i64 %954, %966
  %968 = add i64 %967, 7
  %969 = inttoptr i64 %968 to i16*
  %970 = load atomic i16, i16* %969 monotonic, align 2
  %971 = add i16 %970, -137
  %972 = icmp ult i16 %971, 10
  br i1 %972, label %973, label %994

973:                                              ; preds = %962
  %974 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %975 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %974, null
  br i1 %975, label %978, label %976

976:                                              ; preds = %973
  %977 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %974, i64 %959) #8
  br label %989

978:                                              ; preds = %973
  %979 = load i64*, i64** %38, align 8
  %980 = load i64*, i64** %39, align 8
  %981 = icmp eq i64* %979, %980
  br i1 %981, label %982, label %984

982:                                              ; preds = %978
  %983 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #8
  br label %984

984:                                              ; preds = %982, %978
  %985 = phi i64* [ %983, %982 ], [ %979, %978 ]
  %986 = ptrtoint i64* %985 to i64
  %987 = add i64 %986, 8
  %988 = inttoptr i64 %987 to i64*
  store i64* %988, i64** %38, align 8
  store i64 %959, i64* %985, align 8
  br label %989

989:                                              ; preds = %976, %984
  %990 = phi i64* [ %977, %976 ], [ %985, %984 ]
  %991 = call i64* @_ZN2v88internal7Context6LookupENS0_6HandleIS1_EENS2_INS0_6StringEEENS0_18ContextLookupFlagsEPiPNS0_18PropertyAttributesEPNS0_18InitializationFlagEPNS0_12VariableModeEPb(i64* %990, i64* %1, i32 0, i32* %3, i32* %4, i8* %5, i8* %6, i8* null)
  %992 = icmp eq i64* %991, null
  br i1 %992, label %994, label %993

993:                                              ; preds = %989
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #8
  br label %1031

994:                                              ; preds = %952, %989, %962, %831
  %995 = phi i8* [ %115, %831 ], [ %111, %962 ], [ %111, %989 ], [ %111, %952 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %995) #8
  br label %996

996:                                              ; preds = %994, %838
  %997 = load i64, i64* %120, align 8
  %998 = and i64 %997, -4294967296
  %999 = add i64 %997, -1
  %1000 = inttoptr i64 %999 to i32*
  %1001 = load atomic i32, i32* %1000 monotonic, align 4
  %1002 = zext i32 %1001 to i64
  %1003 = or i64 %998, %1002
  %1004 = add i64 %1003, 7
  %1005 = inttoptr i64 %1004 to i16*
  %1006 = load atomic i16, i16* %1005 monotonic, align 2
  %1007 = icmp eq i16 %1006, 144
  br i1 %1007, label %1031, label %1008

1008:                                             ; preds = %996
  %1009 = add i64 %997, 11
  %1010 = inttoptr i64 %1009 to i32*
  %1011 = load atomic i32, i32* %1010 monotonic, align 4
  %1012 = zext i32 %1011 to i64
  %1013 = or i64 %998, %1012
  %1014 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %37, align 8
  %1015 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %1014, null
  br i1 %1015, label %1018, label %1016

1016:                                             ; preds = %1008
  %1017 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %1014, i64 %1013) #8
  br label %1029

1018:                                             ; preds = %1008
  %1019 = load i64*, i64** %38, align 8
  %1020 = load i64*, i64** %39, align 8
  %1021 = icmp eq i64* %1019, %1020
  br i1 %1021, label %1022, label %1024

1022:                                             ; preds = %1018
  %1023 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %29) #8
  br label %1024

1024:                                             ; preds = %1022, %1018
  %1025 = phi i64* [ %1023, %1022 ], [ %1019, %1018 ]
  %1026 = ptrtoint i64* %1025 to i64
  %1027 = add i64 %1026, 8
  %1028 = inttoptr i64 %1027 to i64*
  store i64* %1028, i64** %38, align 8
  store i64 %1013, i64* %1025, align 8
  br label %1029

1029:                                             ; preds = %1024, %1016, %836
  %1030 = phi i64* [ %837, %836 ], [ %1017, %1016 ], [ %1025, %1024 ]
  br i1 %31, label %119, label %1031

1031:                                             ; preds = %1029, %996, %622, %618, %950, %993, %383, %937, %834
  %1032 = phi i64* [ %991, %993 ], [ %835, %834 ], [ %883, %937 ], [ %384, %383 ], [ null, %950 ], [ null, %1029 ], [ null, %996 ], [ %286, %622 ], [ null, %618 ]
  ret i64* %1032
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal10JSReceiver24GetOwnPropertyAttributesENS0_6HandleIS1_EENS2_INS0_4NameEEE(i64*, i64*) local_unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.v8::internal::String", align 8
  %4 = alloca %"class.v8::internal::LookupIterator::Key", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = load i64, i64* %0, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #8
  %14 = ptrtoint i64* %1 to i64
  %15 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 0, i32 0, i32 0
  store i64* null, i64** %15, align 8
  %16 = load i64, i64* %1, align 8
  %17 = getelementptr inbounds %"class.v8::internal::LookupIterator::Key", %"class.v8::internal::LookupIterator::Key"* %4, i64 0, i32 1
  %18 = and i64 %16, -4294967296
  %19 = add i64 %16, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %18, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp ult i16 %26, 64
  %28 = bitcast %"class.v8::internal::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #8
  br i1 %27, label %29, label %43

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %16, i64* %30, align 8
  %31 = add i64 %16, 3
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, -536870910
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %29
  %37 = lshr i32 %33, 2
  %38 = and i32 %37, 16777215
  %39 = zext i32 %38 to i64
  store i64 %39, i64* %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %51

40:                                               ; preds = %29
  %41 = and i32 %33, 3
  %42 = icmp eq i32 %41, 2
  br i1 %42, label %43, label %44

43:                                               ; preds = %40, %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br label %53

44:                                               ; preds = %40
  %45 = call zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"* nonnull %3, i64* %17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #8
  br i1 %45, label %51, label %46

46:                                               ; preds = %44
  %47 = load i64, i64* %1, align 8
  %48 = and i64 %47, -4294967296
  %49 = add i64 %47, -1
  %50 = inttoptr i64 %49 to i32*
  br label %53

51:                                               ; preds = %44, %36
  %52 = bitcast %"class.v8::internal::LookupIterator::Key"* %4 to i64*
  store i64 %14, i64* %52, align 8
  br label %70

53:                                               ; preds = %46, %43
  %54 = phi i32* [ %50, %46 ], [ %20, %43 ]
  %55 = phi i64 [ %48, %46 ], [ %18, %43 ]
  store i64 -1, i64* %17, align 8
  %56 = load atomic i32, i32* %54 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, -32
  %63 = icmp eq i16 %62, 32
  br i1 %63, label %64, label %68

64:                                               ; preds = %53
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 5, i32 0, i32 0, i32 0
  %66 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %65, align 8
  %67 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %66, %"class.v8::internal::Isolate"* %12, i64* %1) #8
  br label %68

68:                                               ; preds = %64, %53
  %69 = phi i64* [ %67, %64 ], [ %1, %53 ]
  store i64* %69, i64** %15, align 8
  br label %70

70:                                               ; preds = %51, %68
  %71 = phi i64* [ %1, %51 ], [ %69, %68 ]
  %72 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %72) #8
  %73 = load i64, i64* %17, align 8
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* %12, i64* %0, i64* %71, i64 %73, i64* %0, i32 1) #8
  %74 = call i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %72) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #8
  ret i64 %74
}

declare zeroext i1 @_ZN2v88internal9ScopeInfo19VariableIsSyntheticENS0_6StringE(i64) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal9ScopeInfo15IsReplModeScopeEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #3

declare i32 @_ZNK2v88internal9ScopeInfo24FunctionContextSlotIndexENS0_6StringE(%"class.v8::internal::ScopeInfo"*, i64) local_unnamed_addr #3

declare i32 @_ZN2v88internal9ScopeInfo11ModuleIndexENS0_6StringEPNS0_12VariableModeEPNS0_18InitializationFlagEPNS0_17MaybeAssignedFlagE(%"class.v8::internal::ScopeInfo"*, i64, i8*, i8*, i8*) local_unnamed_addr #3

declare i32 @_ZN2v88internal26SourceTextModuleDescriptor16GetCellIndexKindEi(i32) local_unnamed_addr #3

declare i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal9ScopeInfo18HasLocalsBlockListEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #3

declare i64 @_ZNK2v88internal9ScopeInfo15LocalsBlockListEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal9StringSet3HasEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringSet"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13NativeContext16AddOptimizedCodeENS0_4CodeE(%"class.v8::internal::NativeContext"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::NativeContext", %"class.v8::internal::NativeContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 1015
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = and i64 %1, -4294967296
  %12 = add i64 %1, 15
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 acquire, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = add i64 %16, 3
  %18 = inttoptr i64 %17 to i32*
  store atomic volatile i32 %8, i32* %18 monotonic, align 4
  %19 = and i64 %9, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %44, label %21

21:                                               ; preds = %2
  %22 = and i64 %16, -262144
  %23 = or i64 %22, 8
  %24 = inttoptr i64 %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, 262144
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %21
  %29 = or i64 %22, 16
  %30 = inttoptr i64 %29 to %"class.v8::internal::Heap"**
  %31 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %30, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %31, i64 %16, i64 %17, i64 %10) #8
  br label %32

32:                                               ; preds = %28, %21
  %33 = and i64 %10, -262144
  %34 = or i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 24
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %32
  %40 = load i64, i64* %24, align 8
  %41 = and i64 %40, 24
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %16, i64 %17, i64 %10) #8
  br label %44

44:                                               ; preds = %2, %32, %39, %43
  %45 = load i64, i64* %3, align 8
  %46 = add i64 %45, 1015
  %47 = inttoptr i64 %46 to i32*
  %48 = trunc i64 %1 to i32
  store atomic volatile i32 %48, i32* %47 release, align 4
  %49 = and i64 %1, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %68, label %51

51:                                               ; preds = %44
  %52 = load i64, i64* %3, align 8
  %53 = add i64 %52, 1015
  %54 = and i64 %1, -262144
  %55 = or i64 %54, 8
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = and i64 %57, 24
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %68, label %60

60:                                               ; preds = %51
  %61 = and i64 %52, -262144
  %62 = or i64 %61, 8
  %63 = inttoptr i64 %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, 24
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %60
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %52, i64 %53, i64 %1) #8
  br label %68

68:                                               ; preds = %44, %51, %60, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13NativeContext24SetOptimizedCodeListHeadENS0_6ObjectE(%"class.v8::internal::NativeContext"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::NativeContext", %"class.v8::internal::NativeContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 1015
  %6 = inttoptr i64 %5 to i32*
  %7 = trunc i64 %1 to i32
  store atomic volatile i32 %7, i32* %6 release, align 4
  %8 = and i64 %1, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = load i64, i64* %3, align 8
  %12 = add i64 %11, 1015
  %13 = and i64 %1, -262144
  %14 = or i64 %13, 8
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 24
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %10
  %20 = and i64 %11, -262144
  %21 = or i64 %20, 8
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 24
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %19
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %11, i64 %12, i64 %1) #8
  br label %27

27:                                               ; preds = %2, %10, %19, %26
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN2v88internal13NativeContext21OptimizedCodeListHeadEv(%"class.v8::internal::NativeContext"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::NativeContext", %"class.v8::internal::NativeContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 1015
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13NativeContext26SetDeoptimizedCodeListHeadENS0_6ObjectE(%"class.v8::internal::NativeContext"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::NativeContext", %"class.v8::internal::NativeContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = add i64 %4, 1019
  %6 = inttoptr i64 %5 to i32*
  %7 = trunc i64 %1 to i32
  store atomic volatile i32 %7, i32* %6 release, align 4
  %8 = and i64 %1, 1
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = load i64, i64* %3, align 8
  %12 = add i64 %11, 1019
  %13 = and i64 %1, -262144
  %14 = or i64 %13, 8
  %15 = inttoptr i64 %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, 24
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %10
  %20 = and i64 %11, -262144
  %21 = or i64 %20, 8
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 24
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %19
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %11, i64 %12, i64 %1) #8
  br label %27

27:                                               ; preds = %2, %10, %19, %26
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN2v88internal13NativeContext23DeoptimizedCodeListHeadEv(%"class.v8::internal::NativeContext"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::NativeContext", %"class.v8::internal::NativeContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4294967296
  %5 = add i64 %3, 1019
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = zext i32 %7 to i64
  %9 = or i64 %4, %8
  ret i64 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal7Context40ErrorMessageForCodeGenerationFromStringsEv(%"class.v8::internal::Context"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Vector.1181", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Context", %"class.v8::internal::Context"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, -262144
  %6 = or i64 %5, 16
  %7 = inttoptr i64 %6 to i64*
  %8 = load i64, i64* %7, align 16
  %9 = add i64 %8, -41416
  %10 = inttoptr i64 %9 to %"class.v8::internal::Isolate"*
  %11 = and i64 %4, -4294967296
  %12 = add i64 %4, 267
  %13 = inttoptr i64 %12 to i32*
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = zext i32 %14 to i64
  %16 = or i64 %11, %15
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 4
  %18 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %17, align 8
  %19 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %1
  %21 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %18, i64 %16) #8
  %22 = load i64, i64* %21, align 8
  br label %36

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 0
  %25 = load i64*, i64** %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 31, i32 1
  %27 = load i64*, i64** %26, align 8
  %28 = icmp eq i64* %25, %27
  br i1 %28, label %29, label %31

29:                                               ; preds = %23
  %30 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %10) #8
  br label %31

31:                                               ; preds = %29, %23
  %32 = phi i64* [ %30, %29 ], [ %25, %23 ]
  %33 = ptrtoint i64* %32 to i64
  %34 = add i64 %33, 8
  %35 = inttoptr i64 %34 to i64*
  store i64* %35, i64** %24, align 8
  store i64 %16, i64* %32, align 8
  br label %36

36:                                               ; preds = %20, %31
  %37 = phi i64 [ %22, %20 ], [ %16, %31 ]
  %38 = phi i64* [ %21, %20 ], [ %32, %31 ]
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 0, i32 7, i32 0, i64 4
  %40 = load i64, i64* %39, align 8
  %41 = trunc i64 %37 to i32
  %42 = trunc i64 %40 to i32
  %43 = icmp eq i32 %41, %42
  br i1 %43, label %44, label %53

44:                                               ; preds = %36
  %45 = inttoptr i64 %9 to %"class.v8::internal::Factory"*
  %46 = bitcast %"class.v8::internal::Vector.1181"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #8
  %47 = getelementptr inbounds %"class.v8::internal::Vector.1181", %"class.v8::internal::Vector.1181"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.3, i64 0, i64 0), i8** %47, align 8
  %48 = getelementptr inbounds %"class.v8::internal::Vector.1181", %"class.v8::internal::Vector.1181"* %2, i64 0, i32 1
  store i64 56, i64* %48, align 8
  %49 = call i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"* %45, %"class.v8::internal::Vector.1181"* nonnull dereferenceable(16) %2, i8 zeroext 0) #8
  %50 = icmp eq i64* %49, null
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %44
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #11
  unreachable

52:                                               ; preds = %44
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #8
  br label %53

53:                                               ; preds = %36, %52
  %54 = phi i64* [ %49, %52 ], [ %38, %36 ]
  ret i64* %54
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal7Context21IntrinsicIndexForNameENS0_6HandleINS0_6StringEEE(i64*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %3 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", align 8
  %12 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #8
  %13 = load i64, i64* %0, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %2, i64 0, i32 0
  %16 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %15, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i64 23) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #8
  br i1 %16, label %72, label %17

17:                                               ; preds = %1
  %18 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #8
  %19 = load i64, i64* %0, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %3, i64 0, i32 0
  %22 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0), i64 30) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #8
  br i1 %22, label %72, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = load i64, i64* %0, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %4, i64 0, i32 0
  %28 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %27, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i64 13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  br i1 %28, label %72, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %31 = load i64, i64* %0, align 8
  %32 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %5, i64 0, i32 0
  %34 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i64 13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  br i1 %34, label %72, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  %37 = load i64, i64* %0, align 8
  %38 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %37, i64* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %6, i64 0, i32 0
  %40 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %39, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i64 17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  br i1 %40, label %72, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #8
  %43 = load i64, i64* %0, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %43, i64* %44, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %7, i64 0, i32 0
  %46 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %45, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i64 10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #8
  br i1 %46, label %72, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #8
  %49 = load i64, i64* %0, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %8, i64 0, i32 0
  %52 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %51, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #8
  br i1 %52, label %72, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #8
  %55 = load i64, i64* %0, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %9, i64 0, i32 0
  %58 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %57, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i64 28) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #8
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  %61 = load i64, i64* %0, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %10, i64 0, i32 0
  %64 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %63, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i64 12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  br i1 %64, label %72, label %65

65:                                               ; preds = %59
  %66 = bitcast %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #8
  %67 = load i64, i64* %0, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::String>::ObjectRef", %"class.v8::internal::Handle<v8::internal::String>::ObjectRef"* %11, i64 0, i32 0
  %70 = call zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"* nonnull %69, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i64 24) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #8
  %71 = select i1 %70, i32 15, i32 -1
  br label %72

72:                                               ; preds = %65, %59, %53, %47, %41, %35, %29, %23, %17, %1
  %73 = phi i32 [ 6, %1 ], [ 7, %17 ], [ 8, %23 ], [ 9, %29 ], [ 10, %35 ], [ 11, %41 ], [ 12, %47 ], [ 13, %53 ], [ 14, %59 ], [ %71, %65 ]
  ret i32 %73
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN2v88internal7Context21IntrinsicIndexForNameEPKhi(i8* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  switch i32 %1, label %33 [
    i32 23, label %3
    i32 30, label %6
    i32 13, label %9
    i32 17, label %15
    i32 10, label %18
    i32 8, label %21
    i32 28, label %24
    i32 12, label %27
    i32 24, label %30
  ]

3:                                                ; preds = %2
  %4 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.4, i64 0, i64 0), i64 23) #12
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %34, label %33

6:                                                ; preds = %2
  %7 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.5, i64 0, i64 0), i64 30) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %34, label %33

9:                                                ; preds = %2
  %10 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i64 0, i64 0), i64 13) #12
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %34, label %12

12:                                               ; preds = %9
  %13 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i64 13) #12
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %33

15:                                               ; preds = %2
  %16 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.8, i64 0, i64 0), i64 17) #12
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %34, label %33

18:                                               ; preds = %2
  %19 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i64 10) #12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %34, label %33

21:                                               ; preds = %2
  %22 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.10, i64 0, i64 0), i64 8) #12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %34, label %33

24:                                               ; preds = %2
  %25 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.11, i64 0, i64 0), i64 28) #12
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %33

27:                                               ; preds = %2
  %28 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0), i64 12) #12
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %33

30:                                               ; preds = %2
  %31 = tail call i32 @strncmp(i8* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i64 24) #12
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %2, %18, %15, %12, %6, %3, %24, %21, %27, %30
  br label %34

34:                                               ; preds = %3, %6, %9, %12, %15, %18, %21, %24, %27, %30, %33
  %35 = phi i32 [ -1, %33 ], [ 15, %30 ], [ 6, %3 ], [ 7, %6 ], [ 8, %9 ], [ 9, %12 ], [ 10, %15 ], [ 11, %18 ], [ 12, %21 ], [ 13, %24 ], [ 14, %27 ]
  ret i32 %35
}

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal13NativeContext17ResetErrorsThrownEv(%"class.v8::internal::NativeContext"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::NativeContext", %"class.v8::internal::NativeContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 271
  %5 = inttoptr i64 %4 to i32*
  store atomic volatile i32 0, i32* %5 release, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13NativeContext21IncrementErrorsThrownEv(%"class.v8::internal::NativeContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::NativeContext", %"class.v8::internal::NativeContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 271
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = add i32 %6, 2
  %8 = and i32 %7, -2
  store atomic volatile i32 %8, i32* %5 release, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal13NativeContext15GetErrorsThrownEv(%"class.v8::internal::NativeContext"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::NativeContext", %"class.v8::internal::NativeContext"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = add i64 %3, 271
  %5 = inttoptr i64 %4 to i32*
  %6 = load atomic i32, i32* %5 monotonic, align 4
  %7 = ashr i32 %6, 1
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal13NativeContext14RunPromiseHookENS_15PromiseHookTypeENS0_6HandleINS0_9JSPromiseEEENS3_INS0_6ObjectEEE(%"class.v8::internal::NativeContext"* nocapture readnone, i32, i64*, i64*) local_unnamed_addr #0 align 2 {
  %5 = alloca [2 x %"class.v8::internal::Handle.1134"], align 16
  %6 = load i64, i64* %2, align 8
  %7 = and i64 %6, -262144
  %8 = or i64 %7, 16
  %9 = inttoptr i64 %8 to i64*
  %10 = load i64, i64* %9, align 16
  %11 = add i64 %10, -41416
  %12 = inttoptr i64 %11 to %"class.v8::internal::Isolate"*
  %13 = icmp ult i32 %1, 4
  br i1 %13, label %15, label %14

14:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #11
  unreachable

15:                                               ; preds = %4
  %16 = sext i32 %1 to i64
  %17 = getelementptr inbounds [4 x i64], [4 x i64]* @switch.table._ZN2v88internal13NativeContext14RunPromiseHookENS_15PromiseHookTypeENS0_6HandleINS0_9JSPromiseEEENS3_INS0_6ObjectEEE, i64 0, i64 %16
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 9, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, -4294967296
  %22 = add i64 %20, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 19
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %21, %30
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 4
  %33 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %32, align 8
  %34 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %15
  %36 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %33, i64 %31) #8
  %37 = load i64, i64* %36, align 8
  br label %51

38:                                               ; preds = %15
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %40 = load i64*, i64** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %42 = load i64*, i64** %41, align 8
  %43 = icmp eq i64* %40, %42
  br i1 %43, label %44, label %46

44:                                               ; preds = %38
  %45 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #8
  br label %46

46:                                               ; preds = %44, %38
  %47 = phi i64* [ %45, %44 ], [ %40, %38 ]
  %48 = ptrtoint i64* %47 to i64
  %49 = add i64 %48, 8
  %50 = inttoptr i64 %49 to i64*
  store i64* %50, i64** %39, align 8
  store i64 %31, i64* %47, align 8
  br label %51

51:                                               ; preds = %35, %46
  %52 = phi i64 [ %37, %35 ], [ %31, %46 ]
  %53 = and i64 %52, -4294967296
  %54 = add i64 %52, %18
  %55 = inttoptr i64 %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %53, %57
  %59 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %32, align 8
  %60 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %59, null
  br i1 %60, label %64, label %61

61:                                               ; preds = %51
  %62 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %59, i64 %58) #8
  %63 = load i64, i64* %62, align 8
  br label %77

64:                                               ; preds = %51
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %66 = load i64*, i64** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %68 = load i64*, i64** %67, align 8
  %69 = icmp eq i64* %66, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %64
  %71 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #8
  br label %72

72:                                               ; preds = %70, %64
  %73 = phi i64* [ %71, %70 ], [ %66, %64 ]
  %74 = ptrtoint i64* %73 to i64
  %75 = add i64 %74, 8
  %76 = inttoptr i64 %75 to i64*
  store i64* %76, i64** %65, align 8
  store i64 %58, i64* %73, align 8
  br label %77

77:                                               ; preds = %61, %72
  %78 = phi i64 [ %63, %61 ], [ %58, %72 ]
  %79 = phi i64* [ %62, %61 ], [ %73, %72 ]
  %80 = and i64 %78, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %106, label %82

82:                                               ; preds = %77
  %83 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %84 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %83, null
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %83, i64 0, i32 0, i32 1
  %87 = load i8, i8* %86, align 8, !range !3
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %83, i64 0, i32 1, i64 0
  br label %99

91:                                               ; preds = %85, %82
  %92 = and i64 %78, -262144
  %93 = or i64 %92, 16
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 16
  %96 = add i64 %95, -41416
  %97 = inttoptr i64 %96 to %"class.v8::internal::Isolate"*
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %99

99:                                               ; preds = %89, %91
  %100 = phi i64* [ %98, %91 ], [ %90, %89 ]
  %101 = getelementptr inbounds i64, i64* %100, i64 4
  %102 = load i64, i64* %101, align 8
  %103 = trunc i64 %78 to i32
  %104 = trunc i64 %102 to i32
  %105 = icmp eq i32 %103, %104
  br i1 %105, label %177, label %106

106:                                              ; preds = %77, %99
  %107 = icmp eq i32 %1, 0
  %108 = select i1 %107, i32 2, i32 1
  %109 = bitcast [2 x %"class.v8::internal::Handle.1134"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #8
  %110 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1134"], [2 x %"class.v8::internal::Handle.1134"]* %5, i64 0, i64 0
  %111 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1134"], [2 x %"class.v8::internal::Handle.1134"]* %5, i64 0, i64 0, i32 0, i32 0
  store i64* %2, i64** %111, align 16
  %112 = getelementptr inbounds [2 x %"class.v8::internal::Handle.1134"], [2 x %"class.v8::internal::Handle.1134"]* %5, i64 0, i64 1, i32 0, i32 0
  store i64* %3, i64** %112, align 8
  %113 = load i64, i64* %19, align 8
  %114 = and i64 %113, -4294967296
  %115 = add i64 %113, -1
  %116 = inttoptr i64 %115 to i32*
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %114, %118
  %120 = add i64 %119, 19
  %121 = inttoptr i64 %120 to i32*
  %122 = load i32, i32* %121, align 4
  %123 = zext i32 %122 to i64
  %124 = or i64 %114, %123
  %125 = add i64 %124, 19
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %114, %128
  %130 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %32, align 8
  %131 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %130, null
  br i1 %131, label %134, label %132

132:                                              ; preds = %106
  %133 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %130, i64 %129) #8
  br label %147

134:                                              ; preds = %106
  %135 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %136 = load i64*, i64** %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %138 = load i64*, i64** %137, align 8
  %139 = icmp eq i64* %136, %138
  br i1 %139, label %140, label %142

140:                                              ; preds = %134
  %141 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #8
  br label %142

142:                                              ; preds = %140, %134
  %143 = phi i64* [ %141, %140 ], [ %136, %134 ]
  %144 = ptrtoint i64* %143 to i64
  %145 = add i64 %144, 8
  %146 = inttoptr i64 %145 to i64*
  store i64* %146, i64** %135, align 8
  store i64 %129, i64* %143, align 8
  br label %147

147:                                              ; preds = %132, %142
  %148 = phi i64* [ %133, %132 ], [ %143, %142 ]
  %149 = call i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"* %12, i64* %79, i64* %148, i32 %108, %"class.v8::internal::Handle.1134"* nonnull %110) #8
  %150 = icmp eq i64* %149, null
  br i1 %150, label %151, label %176

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 9, i32 4, i32 0, i32 0
  %153 = load i64, i64* %152, align 8
  %154 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %32, align 8
  %155 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %151
  %157 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %154, i64 %153) #8
  br label %171

158:                                              ; preds = %151
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 0
  %160 = load i64*, i64** %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 31, i32 1
  %162 = load i64*, i64** %161, align 8
  %163 = icmp eq i64* %160, %162
  br i1 %163, label %164, label %166

164:                                              ; preds = %158
  %165 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %12) #8
  br label %166

166:                                              ; preds = %164, %158
  %167 = phi i64* [ %165, %164 ], [ %160, %158 ]
  %168 = ptrtoint i64* %167 to i64
  %169 = add i64 %168, 8
  %170 = inttoptr i64 %169 to i64*
  store i64* %170, i64** %159, align 8
  store i64 %153, i64* %167, align 8
  br label %171

171:                                              ; preds = %156, %166
  %172 = phi i64* [ %157, %156 ], [ %167, %166 ]
  %173 = call i64* @_ZN2v88internal7Isolate20CreateMessageOrAbortENS0_6HandleINS0_6ObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"* %12, i64* %172, %"class.v8::internal::MessageLocation"* null) #8
  call void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"* %12, %"class.v8::internal::MessageLocation"* null, i64* %173) #8
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %12, i64 0, i32 0, i32 7, i32 0, i64 5
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %152, align 8
  br label %176

176:                                              ; preds = %171, %147
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #8
  br label %177

177:                                              ; preds = %99, %176
  ret void
}

declare i64* @_ZN2v88internal9Execution4CallEPNS0_7IsolateENS0_6HandleINS0_6ObjectEEES6_iPS6_(%"class.v8::internal::Isolate"*, i64*, i64*, i32, %"class.v8::internal::Handle.1134"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Isolate20CreateMessageOrAbortENS0_6HandleINS0_6ObjectEEEPNS0_15MessageLocationE(%"class.v8::internal::Isolate"*, i64*, %"class.v8::internal::MessageLocation"*) local_unnamed_addr #3

declare void @_ZN2v88internal14MessageHandler13ReportMessageEPNS0_7IsolateEPKNS0_15MessageLocationENS0_6HandleINS0_15JSMessageObjectEEE(%"class.v8::internal::Isolate"*, %"class.v8::internal::MessageLocation"*, i64*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @llvm.assume(i1) #8

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #3

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #3

declare zeroext i1 @_ZNK2v88internal9ScopeInfo23HasContextExtensionSlotEv(%"class.v8::internal::ScopeInfo"*) local_unnamed_addr #3

declare i64 @_ZN2v88internal10JSReceiver21GetPropertyAttributesEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal6String18SlowAsIntegerIndexEPm(%"class.v8::internal::String"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i32) unnamed_addr #5 comdat align 2 {
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %10 = icmp eq i64* %3, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #8
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 64
  br i1 %25, label %26, label %32

26:                                               ; preds = %11
  %27 = add i64 %12, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %11, %7
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i32 [ %6, %32 ], [ 0, %26 ]
  store i32 %34, i32* %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::Handle.1134"* %44 to i64*
  store i64 %8, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  store i64 %4, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %115, label %49

49:                                               ; preds = %33
  %50 = icmp ugt i64 %4, 4294967294
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %114, label %99

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %72, label %78

59:                                               ; preds = %53
  %60 = and i64 %54, -4294967296
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1080
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %69, label %98, label %71

71:                                               ; preds = %59
  br i1 %10, label %72, label %78

72:                                               ; preds = %57, %71
  %73 = phi %"class.v8::internal::Handle.1137"* [ %58, %57 ], [ %70, %71 ]
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %75 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %4, i1 zeroext true) #8
  %76 = ptrtoint i64* %75 to i64
  %77 = bitcast %"class.v8::internal::Handle.1137"* %73 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %57, %72, %71
  %79 = phi i64* [ %3, %57 ], [ %75, %72 ], [ %3, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = and i16 %89, -32
  %91 = icmp eq i16 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %93, align 8
  %95 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %94, %"class.v8::internal::Isolate"* %1, i64* %79) #8
  br label %96

96:                                               ; preds = %78, %92
  %97 = phi i64* [ %95, %92 ], [ %79, %78 ]
  store i64* %97, i64** %40, align 8
  br label %114

98:                                               ; preds = %59
  br i1 %10, label %114, label %99

99:                                               ; preds = %51, %98
  %100 = phi %"class.v8::internal::Handle.1137"* [ %52, %51 ], [ %70, %98 ]
  %101 = load i64, i64* %3, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 32
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.v8::internal::Handle.1137"* %100 to i64*
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %98, %51, %99, %112, %96
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #8
  br label %134

115:                                              ; preds = %33
  %116 = load i64, i64* %3, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, -32
  %127 = icmp eq i16 %126, 32
  br i1 %127, label %128, label %132

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %129, align 8
  %131 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %130, %"class.v8::internal::Isolate"* %1, i64* %3) #8
  br label %132

132:                                              ; preds = %115, %128
  %133 = phi i64* [ %131, %128 ], [ %3, %115 ]
  store i64* %133, i64** %40, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #8
  br label %134

134:                                              ; preds = %132, %114
  ret void
}

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal6Object12BooleanValueEPNS0_7IsolateE(%"class.v8::internal::Object"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2v88internal6String9IsEqualToILNS1_12EqualityTypeE0EcEEbNS0_6VectorIKT0_EE(%"class.v8::internal::String"*, i8*, i64) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.v8::internal::SharedStringAccessGuardIfNeeded", align 8
  %5 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, -4294967296
  %8 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #8, !alias.scope !4
  %9 = add i64 %6, 7
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = icmp eq i64 %12, %2
  br i1 %13, label %14, label %162

14:                                               ; preds = %3, %148
  %15 = phi i64 [ %154, %148 ], [ %6, %3 ]
  %16 = phi i32 [ %149, %148 ], [ 0, %3 ]
  %17 = add i64 %15, -1
  %18 = inttoptr i64 %17 to i32*
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = zext i32 %19 to i64
  %21 = or i64 %7, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = and i16 %24, 15
  %26 = zext i16 %25 to i32
  switch i32 %26, label %147 [
    i32 8, label %27
    i32 0, label %34
    i32 10, label %53
    i32 2, label %91
    i32 11, label %141
    i32 3, label %141
    i32 9, label %155
    i32 1, label %155
    i32 13, label %148
    i32 5, label %148
  ]

27:                                               ; preds = %14
  %28 = add i64 %15, 11
  %29 = inttoptr i64 %28 to i8*
  %30 = sext i32 %16 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = tail call i32 @bcmp(i8* %31, i8* %1, i64 %2) #8
  %33 = icmp eq i32 %32, 0
  br label %162

34:                                               ; preds = %14
  %35 = add i64 %15, 11
  %36 = inttoptr i64 %35 to i16*
  %37 = sext i32 %16 to i64
  %38 = getelementptr inbounds i16, i16* %36, i64 %37
  %39 = getelementptr inbounds i16, i16* %38, i64 %2
  %40 = icmp sgt i64 %2, 0
  br i1 %40, label %41, label %162

41:                                               ; preds = %34, %49
  %42 = phi i16* [ %50, %49 ], [ %38, %34 ]
  %43 = phi i8* [ %51, %49 ], [ %1, %34 ]
  %44 = load i16, i16* %42, align 2
  %45 = zext i16 %44 to i32
  %46 = load i8, i8* %43, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %162

49:                                               ; preds = %41
  %50 = getelementptr inbounds i16, i16* %42, i64 1
  %51 = getelementptr inbounds i8, i8* %43, i64 1
  %52 = icmp ult i16* %50, %39
  br i1 %52, label %41, label %162

53:                                               ; preds = %14
  %54 = inttoptr i64 %17 to i32*
  %55 = and i64 %15, -4294967296
  %56 = load atomic i32, i32* %54 monotonic, align 4
  %57 = zext i32 %56 to i64
  %58 = or i64 %55, %57
  %59 = add i64 %58, 7
  %60 = inttoptr i64 %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = and i16 %61, 16
  %63 = icmp eq i16 %62, 0
  %64 = add i64 %15, 11
  %65 = inttoptr i64 %64 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %63, label %78, label %66

66:                                               ; preds = %53
  %67 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  %68 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %67, i64 0, i32 0
  %69 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %67 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %70 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %69, align 8
  %71 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %70, i64 2
  %72 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %71, align 8
  %73 = tail call zeroext i1 %72(%"class.v8::String::ExternalStringResourceBase"* %68) #8
  br i1 %73, label %74, label %78

74:                                               ; preds = %66
  %75 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  tail call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %75) #8
  %76 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %75, i64 0, i32 1
  %77 = load i8*, i8** %76, align 8
  br label %85

78:                                               ; preds = %66, %53
  %79 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %65, align 1
  %80 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %79 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %81 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %80, align 8
  %82 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %81, i64 6
  %83 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %82, align 8
  %84 = tail call i8* %83(%"class.v8::String::ExternalOneByteStringResource"* %79) #8
  br label %85

85:                                               ; preds = %78, %74
  %86 = phi i8* [ %77, %74 ], [ %84, %78 ]
  %87 = sext i32 %16 to i64
  %88 = getelementptr inbounds i8, i8* %86, i64 %87
  %89 = tail call i32 @bcmp(i8* %88, i8* %1, i64 %2) #8
  %90 = icmp eq i32 %89, 0
  br label %162

91:                                               ; preds = %14
  %92 = inttoptr i64 %17 to i32*
  %93 = and i64 %15, -4294967296
  %94 = load atomic i32, i32* %92 monotonic, align 4
  %95 = zext i32 %94 to i64
  %96 = or i64 %93, %95
  %97 = add i64 %96, 7
  %98 = inttoptr i64 %97 to i16*
  %99 = load atomic i16, i16* %98 monotonic, align 2
  %100 = and i16 %99, 16
  %101 = icmp eq i16 %100, 0
  %102 = add i64 %15, 11
  %103 = inttoptr i64 %102 to %"class.v8::String::ExternalStringResource"**
  br i1 %101, label %116, label %104

104:                                              ; preds = %91
  %105 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  %106 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %105, i64 0, i32 0
  %107 = bitcast %"class.v8::String::ExternalStringResource"* %105 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %108 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %107, align 8
  %109 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %108, i64 2
  %110 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %109, align 8
  %111 = tail call zeroext i1 %110(%"class.v8::String::ExternalStringResourceBase"* %106) #8
  br i1 %111, label %112, label %116

112:                                              ; preds = %104
  %113 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  tail call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %113) #8
  %114 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %113, i64 0, i32 1
  %115 = load i16*, i16** %114, align 8
  br label %123

116:                                              ; preds = %104, %91
  %117 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %103, align 1
  %118 = bitcast %"class.v8::String::ExternalStringResource"* %117 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %119 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %118, align 8
  %120 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %119, i64 6
  %121 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %120, align 8
  %122 = tail call i16* %121(%"class.v8::String::ExternalStringResource"* %117) #8
  br label %123

123:                                              ; preds = %116, %112
  %124 = phi i16* [ %115, %112 ], [ %122, %116 ]
  %125 = sext i32 %16 to i64
  %126 = getelementptr inbounds i16, i16* %124, i64 %125
  %127 = getelementptr inbounds i16, i16* %126, i64 %2
  %128 = icmp sgt i64 %2, 0
  br i1 %128, label %129, label %162

129:                                              ; preds = %123, %137
  %130 = phi i16* [ %138, %137 ], [ %126, %123 ]
  %131 = phi i8* [ %139, %137 ], [ %1, %123 ]
  %132 = load i16, i16* %130, align 2
  %133 = zext i16 %132 to i32
  %134 = load i8, i8* %131, align 1
  %135 = zext i8 %134 to i32
  %136 = icmp eq i32 %133, %135
  br i1 %136, label %137, label %162

137:                                              ; preds = %129
  %138 = getelementptr inbounds i16, i16* %130, i64 1
  %139 = getelementptr inbounds i8, i8* %131, i64 1
  %140 = icmp ult i16* %138, %127
  br i1 %140, label %129, label %162

141:                                              ; preds = %14, %14
  %142 = add i64 %15, 15
  %143 = inttoptr i64 %142 to i32*
  %144 = load i32, i32* %143, align 4
  %145 = ashr i32 %144, 1
  %146 = add nsw i32 %145, %16
  br label %148

147:                                              ; preds = %14
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #11
  unreachable

148:                                              ; preds = %141, %14, %14
  %149 = phi i32 [ %146, %141 ], [ %16, %14 ], [ %16, %14 ]
  %150 = add i64 %15, 11
  %151 = inttoptr i64 %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = zext i32 %152 to i64
  %154 = or i64 %7, %153
  br label %14

155:                                              ; preds = %14, %14
  %156 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIcEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %15, i32 %16, i8* %1, i64 %2, i64 %7, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* nonnull dereferenceable(16) %4) #8
  %157 = load i8, i8* %8, align 8, !range !3
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %162, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"class.v8::internal::SharedStringAccessGuardIfNeeded", %"class.v8::internal::SharedStringAccessGuardIfNeeded"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %161 = load %"class.v8::base::SharedMutex"*, %"class.v8::base::SharedMutex"** %160, align 8
  call void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"* %161) #8
  br label %162

162:                                              ; preds = %129, %137, %41, %49, %85, %27, %34, %123, %3, %155, %159
  %163 = phi i1 [ %156, %155 ], [ %156, %159 ], [ %90, %85 ], [ %33, %27 ], [ true, %34 ], [ true, %123 ], [ false, %3 ], [ false, %41 ], [ true, %49 ], [ false, %129 ], [ true, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret i1 %163
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIcEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64, i32, i8*, i64, i64, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16)) local_unnamed_addr #9 comdat align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::ConsStringIterator", align 8
  store i32 %1, i32* %7, align 4
  %9 = bitcast %"class.v8::internal::ConsStringIterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %9) #8
  %10 = trunc i64 %0 to i32
  %11 = icmp eq i32 %10, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 268, i1 false) #8
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %189

13:                                               ; preds = %6
  call void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i64 %0, i32 %1) #8
  %14 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  store i32 0, i32* %7, align 4
  %17 = getelementptr inbounds %"class.v8::internal::ConsStringIterator", %"class.v8::internal::ConsStringIterator"* %8, i64 0, i32 2
  br i1 %16, label %189, label %18

18:                                               ; preds = %13
  %19 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #8
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %189, label %22

22:                                               ; preds = %18
  %23 = and i64 %4, 4294967295
  %24 = icmp eq i64 %23, 0
  call void @llvm.assume(i1 %24) #8
  br label %25

25:                                               ; preds = %22, %185
  %26 = phi i64 [ %3, %22 ], [ %180, %185 ]
  %27 = phi i64 [ %19, %22 ], [ %186, %185 ]
  %28 = phi i8* [ %2, %22 ], [ %179, %185 ]
  %29 = add i64 %27, 7
  %30 = inttoptr i64 %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = icmp ult i64 %26, %32
  %34 = select i1 %33, i64 %26, i64 %32
  br label %35

35:                                               ; preds = %169, %25
  %36 = phi i64 [ %27, %25 ], [ %175, %169 ]
  %37 = phi i32 [ 0, %25 ], [ %170, %169 ]
  %38 = add i64 %36, -1
  %39 = inttoptr i64 %38 to i32*
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = zext i32 %40 to i64
  %42 = or i64 %41, %4
  %43 = add i64 %42, 7
  %44 = inttoptr i64 %43 to i16*
  %45 = load atomic i16, i16* %44 monotonic, align 2
  %46 = and i16 %45, 15
  %47 = zext i16 %46 to i32
  switch i32 %47, label %168 [
    i32 8, label %48
    i32 0, label %55
    i32 10, label %74
    i32 2, label %112
    i32 11, label %162
    i32 3, label %162
    i32 9, label %176
    i32 1, label %176
    i32 13, label %169
    i32 5, label %169
  ]

48:                                               ; preds = %35
  %49 = add i64 %36, 11
  %50 = inttoptr i64 %49 to i8*
  %51 = sext i32 %37 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = call i32 @bcmp(i8* %52, i8* %28, i64 %34) #8
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %178, label %189

55:                                               ; preds = %35
  %56 = add i64 %36, 11
  %57 = inttoptr i64 %56 to i16*
  %58 = sext i32 %37 to i64
  %59 = getelementptr inbounds i16, i16* %57, i64 %58
  %60 = getelementptr inbounds i16, i16* %59, i64 %34
  %61 = icmp sgt i64 %34, 0
  br i1 %61, label %62, label %178

62:                                               ; preds = %55, %70
  %63 = phi i16* [ %71, %70 ], [ %59, %55 ]
  %64 = phi i8* [ %72, %70 ], [ %28, %55 ]
  %65 = load i16, i16* %63, align 2
  %66 = zext i16 %65 to i32
  %67 = load i8, i8* %64, align 1
  %68 = zext i8 %67 to i32
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %189

70:                                               ; preds = %62
  %71 = getelementptr inbounds i16, i16* %63, i64 1
  %72 = getelementptr inbounds i8, i8* %64, i64 1
  %73 = icmp ult i16* %71, %60
  br i1 %73, label %62, label %178

74:                                               ; preds = %35
  %75 = inttoptr i64 %38 to i32*
  %76 = and i64 %36, -4294967296
  %77 = load atomic i32, i32* %75 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %76, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = and i16 %82, 16
  %84 = icmp eq i16 %83, 0
  %85 = add i64 %36, 11
  %86 = inttoptr i64 %85 to %"class.v8::String::ExternalOneByteStringResource"**
  br i1 %84, label %99, label %87

87:                                               ; preds = %74
  %88 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  %89 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %88, i64 0, i32 0
  %90 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %88 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %91 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %90, align 8
  %92 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %91, i64 2
  %93 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %92, align 8
  %94 = call zeroext i1 %93(%"class.v8::String::ExternalStringResourceBase"* %89) #8
  br i1 %94, label %95, label %99

95:                                               ; preds = %87
  %96 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  call void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"* %96) #8
  %97 = getelementptr inbounds %"class.v8::String::ExternalOneByteStringResource", %"class.v8::String::ExternalOneByteStringResource"* %96, i64 0, i32 1
  %98 = load i8*, i8** %97, align 8
  br label %106

99:                                               ; preds = %74, %87
  %100 = load %"class.v8::String::ExternalOneByteStringResource"*, %"class.v8::String::ExternalOneByteStringResource"** %86, align 1
  %101 = bitcast %"class.v8::String::ExternalOneByteStringResource"* %100 to i8* (%"class.v8::String::ExternalOneByteStringResource"*)***
  %102 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)**, i8* (%"class.v8::String::ExternalOneByteStringResource"*)*** %101, align 8
  %103 = getelementptr inbounds i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %102, i64 6
  %104 = load i8* (%"class.v8::String::ExternalOneByteStringResource"*)*, i8* (%"class.v8::String::ExternalOneByteStringResource"*)** %103, align 8
  %105 = call i8* %104(%"class.v8::String::ExternalOneByteStringResource"* %100) #8
  br label %106

106:                                              ; preds = %99, %95
  %107 = phi i8* [ %98, %95 ], [ %105, %99 ]
  %108 = sext i32 %37 to i64
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = call i32 @bcmp(i8* %109, i8* %28, i64 %34) #8
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %178, label %189

112:                                              ; preds = %35
  %113 = inttoptr i64 %38 to i32*
  %114 = and i64 %36, -4294967296
  %115 = load atomic i32, i32* %113 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %114, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = and i16 %120, 16
  %122 = icmp eq i16 %121, 0
  %123 = add i64 %36, 11
  %124 = inttoptr i64 %123 to %"class.v8::String::ExternalStringResource"**
  br i1 %122, label %137, label %125

125:                                              ; preds = %112
  %126 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  %127 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %126, i64 0, i32 0
  %128 = bitcast %"class.v8::String::ExternalStringResource"* %126 to i1 (%"class.v8::String::ExternalStringResourceBase"*)***
  %129 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)**, i1 (%"class.v8::String::ExternalStringResourceBase"*)*** %128, align 8
  %130 = getelementptr inbounds i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %129, i64 2
  %131 = load i1 (%"class.v8::String::ExternalStringResourceBase"*)*, i1 (%"class.v8::String::ExternalStringResourceBase"*)** %130, align 8
  %132 = call zeroext i1 %131(%"class.v8::String::ExternalStringResourceBase"* %127) #8
  br i1 %132, label %133, label %137

133:                                              ; preds = %125
  %134 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  call void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"* %134) #8
  %135 = getelementptr inbounds %"class.v8::String::ExternalStringResource", %"class.v8::String::ExternalStringResource"* %134, i64 0, i32 1
  %136 = load i16*, i16** %135, align 8
  br label %144

137:                                              ; preds = %112, %125
  %138 = load %"class.v8::String::ExternalStringResource"*, %"class.v8::String::ExternalStringResource"** %124, align 1
  %139 = bitcast %"class.v8::String::ExternalStringResource"* %138 to i16* (%"class.v8::String::ExternalStringResource"*)***
  %140 = load i16* (%"class.v8::String::ExternalStringResource"*)**, i16* (%"class.v8::String::ExternalStringResource"*)*** %139, align 8
  %141 = getelementptr inbounds i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %140, i64 6
  %142 = load i16* (%"class.v8::String::ExternalStringResource"*)*, i16* (%"class.v8::String::ExternalStringResource"*)** %141, align 8
  %143 = call i16* %142(%"class.v8::String::ExternalStringResource"* %138) #8
  br label %144

144:                                              ; preds = %137, %133
  %145 = phi i16* [ %136, %133 ], [ %143, %137 ]
  %146 = sext i32 %37 to i64
  %147 = getelementptr inbounds i16, i16* %145, i64 %146
  %148 = getelementptr inbounds i16, i16* %147, i64 %34
  %149 = icmp sgt i64 %34, 0
  br i1 %149, label %150, label %178

150:                                              ; preds = %144, %158
  %151 = phi i16* [ %159, %158 ], [ %147, %144 ]
  %152 = phi i8* [ %160, %158 ], [ %28, %144 ]
  %153 = load i16, i16* %151, align 2
  %154 = zext i16 %153 to i32
  %155 = load i8, i8* %152, align 1
  %156 = zext i8 %155 to i32
  %157 = icmp eq i32 %154, %156
  br i1 %157, label %158, label %189

158:                                              ; preds = %150
  %159 = getelementptr inbounds i16, i16* %151, i64 1
  %160 = getelementptr inbounds i8, i8* %152, i64 1
  %161 = icmp ult i16* %159, %148
  br i1 %161, label %150, label %178

162:                                              ; preds = %35, %35
  %163 = add i64 %36, 15
  %164 = inttoptr i64 %163 to i32*
  %165 = load i32, i32* %164, align 4
  %166 = ashr i32 %165, 1
  %167 = add nsw i32 %166, %37
  br label %169

168:                                              ; preds = %35
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #11
  unreachable

169:                                              ; preds = %35, %35, %162
  %170 = phi i32 [ %167, %162 ], [ %37, %35 ], [ %37, %35 ]
  %171 = add i64 %36, 11
  %172 = inttoptr i64 %171 to i32*
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i64
  %175 = or i64 %174, %4
  br label %35

176:                                              ; preds = %35, %35
  %177 = call zeroext i1 @_ZN2v88internal6String23IsConsStringEqualToImplIcEEbNS0_10ConsStringEiNS0_6VectorIKT_EENS0_16PtrComprCageBaseERKNS0_31SharedStringAccessGuardIfNeededE(i64 %36, i32 %37, i8* %28, i64 %34, i64 %4, %"class.v8::internal::SharedStringAccessGuardIfNeeded"* dereferenceable(16) %5) #8
  br i1 %177, label %178, label %189

178:                                              ; preds = %158, %70, %55, %144, %106, %48, %176
  %179 = getelementptr inbounds i8, i8* %28, i64 %34
  %180 = sub i64 %26, %34
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %189, label %182

182:                                              ; preds = %178
  store i32 0, i32* %7, align 4
  %183 = load i32, i32* %17, align 8
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %189, label %185

185:                                              ; preds = %182
  %186 = call i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"* nonnull %8, i32* nonnull %7) #8
  %187 = trunc i64 %186 to i32
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %25

189:                                              ; preds = %182, %178, %185, %106, %48, %176, %150, %62, %12, %13, %18
  %190 = phi i1 [ true, %18 ], [ true, %13 ], [ true, %12 ], [ false, %62 ], [ false, %150 ], [ true, %182 ], [ true, %178 ], [ true, %185 ], [ false, %106 ], [ false, %48 ], [ false, %176 ]
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %9) #8
  ret i1 %190
}

declare void @_ZNK2v86String29ExternalOneByteStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalOneByteStringResource"*) local_unnamed_addr #3

declare void @_ZNK2v86String22ExternalStringResource25CheckCachedDataInvariantsEv(%"class.v8::String::ExternalStringResource"*) local_unnamed_addr #3

declare void @_ZN2v88internal18ConsStringIterator10InitializeENS0_10ConsStringEi(%"class.v8::internal::ConsStringIterator"*, i64, i32) local_unnamed_addr #3

declare i64 @_ZN2v88internal18ConsStringIterator8ContinueEPi(%"class.v8::internal::ConsStringIterator"*, i32*) local_unnamed_addr #3

declare void @_ZN2v84base11SharedMutex12UnlockSharedEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory20NewStringFromOneByteERKNS0_6VectorIKhEENS0_14AllocationTypeE(%"class.v8::internal::Factory"*, %"class.v8::internal::Vector.1181"* dereferenceable(16), i8 zeroext) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly }
attributes #11 = { noreturn nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv: argument 0"}
!6 = distinct !{!6, !"_ZN2v88internal31SharedStringAccessGuardIfNeeded9NotNeededEv"}
