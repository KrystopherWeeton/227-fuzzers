; ModuleID = '../../third_party/webrtc/media/engine/fake_video_codec_factory.cc'
source_filename = "../../third_party/webrtc/media/engine/fake_video_codec_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::FakeVideoEncoderFactory" = type { %"class.webrtc::VideoEncoderFactory" }
%"class.webrtc::VideoEncoderFactory" = type { i32 (...)** }
%"class.webrtc::FakeVideoDecoderFactory" = type { %"class.webrtc::VideoDecoderFactory" }
%"class.webrtc::VideoDecoderFactory" = type { i32 (...)** }
%"class.webrtc::VideoEncoder" = type { i32 (...)** }
%"class.webrtc::Clock" = type { i32 (...)** }
%"class.webrtc::test::FakeEncoder" = type { %"class.webrtc::VideoEncoder", %"struct.webrtc::test::FakeEncoder::FrameInfo", %"class.webrtc::Clock"*, %"class.webrtc::VideoCodec", %"class.webrtc::EncodedImageCallback"*, %"struct.webrtc::VideoEncoder::RateControlParameters", i32, i8, i32, %"class.webrtc::Mutex", [3 x i8], %"class.absl::optional", i64 }
%"struct.webrtc::test::FakeEncoder::FrameInfo" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"class.std::__1::__compressed_pair.4" }
%"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer" = type { i32, i32 }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* }
%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.9 }
%union.anon.9 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::EncodedImageCallback" = type { i32 (...)** }
%"struct.webrtc::VideoEncoder::RateControlParameters" = type { i32 (...)**, %"class.webrtc::VideoBitrateAllocation", %"class.webrtc::VideoBitrateAllocation", double, %"class.webrtc::DataRate" }
%"class.webrtc::VideoBitrateAllocation" = type <{ i32, [5 x [4 x %"class.absl::optional.13"]], i8, [3 x i8] }>
%"class.absl::optional.13" = type { %"class.absl::optional_internal::optional_data.14" }
%"class.absl::optional_internal::optional_data.14" = type { %"class.absl::optional_internal::optional_data_base.15" }
%"class.absl::optional_internal::optional_data_base.15" = type { %"class.absl::optional_internal::optional_data_dtor_base.16" }
%"class.absl::optional_internal::optional_data_dtor_base.16" = type { i8, %union.anon.17 }
%union.anon.17 = type { i32 }
%"class.webrtc::DataRate" = type { %"class.webrtc::rtc_units_impl::RelativeUnit" }
%"class.webrtc::rtc_units_impl::RelativeUnit" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"*, %"class.std::__1::__compressed_pair.31" }
%"struct.webrtc::SdpVideoFormat" = type { %"class.std::__1::basic_string", %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i64 }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.webrtc::SdpVideoFormat"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webrtc::VideoDecoder" = type { i32 (...)** }
%"class.webrtc::test::FakeDecoder" = type <{ %"class.webrtc::VideoDecoder", %"class.webrtc::DecodedImageCallback"*, i32, i32, %"class.std::__1::unique_ptr.45", %"class.webrtc::TaskQueueFactory"*, i32, [4 x i8] }>
%"class.webrtc::DecodedImageCallback" = type { i32 (...)** }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.rtc::TaskQueue"* }
%"class.rtc::TaskQueue" = type { %"class.webrtc::TaskQueueBase"* }
%"class.webrtc::TaskQueueBase" = type { i32 (...)** }
%"class.webrtc::TaskQueueFactory" = type { i32 (...)** }
%"class.absl::optional.54" = type { %"class.absl::optional_internal::optional_data.55" }
%"class.absl::optional_internal::optional_data.55" = type { %"class.absl::optional_internal::optional_data_base.56" }
%"class.absl::optional_internal::optional_data_base.56" = type { %"class.absl::optional_internal::optional_data_dtor_base.57" }
%"class.absl::optional_internal::optional_data_dtor_base.57" = type { i8, %union.anon.58 }
%union.anon.58 = type { %"class.std::__1::basic_string" }
%"class.webrtc::VideoEncoderFactory::EncoderSelectorInterface" = type { i32 (...)** }

$_ZNK6webrtc19VideoEncoderFactory18GetImplementationsEv = comdat any

$_ZNK6webrtc19VideoEncoderFactory17QueryVideoEncoderERKNS_14SdpVideoFormatE = comdat any

$_ZNK6webrtc19VideoEncoderFactory17QueryCodecSupportERKNS_14SdpVideoFormatEN4absl8optionalINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEE = comdat any

$_ZNK6webrtc19VideoEncoderFactory18GetEncoderSelectorEv = comdat any

$_ZN6webrtc19VideoEncoderFactoryD2Ev = comdat any

$_ZN6webrtc23FakeVideoEncoderFactoryD0Ev = comdat any

$_ZNK6webrtc19VideoDecoderFactory17QueryCodecSupportERKNS_14SdpVideoFormatEN4absl8optionalINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEE = comdat any

$_ZN6webrtc23FakeVideoDecoderFactoryD0Ev = comdat any

$_ZN6webrtc19VideoDecoderFactoryD2Ev = comdat any

@_ZTVN6webrtc23FakeVideoEncoderFactoryE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::vector.21"*, %"class.webrtc::FakeVideoEncoderFactory"*)* @_ZNK6webrtc23FakeVideoEncoderFactory19GetSupportedFormatsEv to i8*), i8* bitcast (void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoEncoderFactory"*)* @_ZNK6webrtc19VideoEncoderFactory18GetImplementationsEv to i8*), i8* bitcast (i8 (%"class.webrtc::VideoEncoderFactory"*, %"struct.webrtc::SdpVideoFormat"*)* @_ZNK6webrtc19VideoEncoderFactory17QueryVideoEncoderERKNS_14SdpVideoFormatE to i8*), i8* bitcast (i16 (%"class.webrtc::VideoEncoderFactory"*, %"struct.webrtc::SdpVideoFormat"*, %"class.absl::optional.54"*)* @_ZNK6webrtc19VideoEncoderFactory17QueryCodecSupportERKNS_14SdpVideoFormatEN4absl8optionalINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEE to i8*), i8* bitcast (%"class.webrtc::VideoEncoder"* (%"class.webrtc::FakeVideoEncoderFactory"*, %"struct.webrtc::SdpVideoFormat"*)* @_ZN6webrtc23FakeVideoEncoderFactory18CreateVideoEncoderERKNS_14SdpVideoFormatE to i8*), i8* bitcast (%"class.webrtc::VideoEncoderFactory::EncoderSelectorInterface"* (%"class.webrtc::VideoEncoderFactory"*)* @_ZNK6webrtc19VideoEncoderFactory18GetEncoderSelectorEv to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoderFactory"*)* @_ZN6webrtc19VideoEncoderFactoryD2Ev to i8*), i8* bitcast (void (%"class.webrtc::FakeVideoEncoderFactory"*)* @_ZN6webrtc23FakeVideoEncoderFactoryD0Ev to i8*)] }, align 8
@_ZN12_GLOBAL__N_126kFakeCodecFactoryCodecNameE = internal unnamed_addr constant [10 x i8] c"FakeCodec\00", align 1
@_ZTVN6webrtc23FakeVideoDecoderFactoryE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.std::__1::vector.21"*, %"class.webrtc::FakeVideoDecoderFactory"*)* @_ZNK6webrtc23FakeVideoDecoderFactory19GetSupportedFormatsEv to i8*), i8* bitcast (i16 (%"class.webrtc::VideoDecoderFactory"*, %"struct.webrtc::SdpVideoFormat"*, %"class.absl::optional.54"*)* @_ZNK6webrtc19VideoDecoderFactory17QueryCodecSupportERKNS_14SdpVideoFormatEN4absl8optionalINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEE to i8*), i8* bitcast (%"class.webrtc::VideoDecoder"* (%"class.webrtc::FakeVideoDecoderFactory"*, %"struct.webrtc::SdpVideoFormat"*)* @_ZN6webrtc23FakeVideoDecoderFactory18CreateVideoDecoderERKNS_14SdpVideoFormatE to i8*), i8* bitcast (void (%"class.webrtc::VideoDecoderFactory"*)* @_ZN6webrtc19VideoDecoderFactoryD2Ev to i8*), i8* bitcast (void (%"class.webrtc::FakeVideoDecoderFactory"*)* @_ZN6webrtc23FakeVideoDecoderFactoryD0Ev to i8*)] }, align 8

@_ZN6webrtc23FakeVideoEncoderFactoryC1Ev = hidden unnamed_addr alias void (%"class.webrtc::FakeVideoEncoderFactory"*), void (%"class.webrtc::FakeVideoEncoderFactory"*)* @_ZN6webrtc23FakeVideoEncoderFactoryC2Ev
@_ZN6webrtc23FakeVideoDecoderFactoryC1Ev = hidden unnamed_addr alias void (%"class.webrtc::FakeVideoDecoderFactory"*), void (%"class.webrtc::FakeVideoDecoderFactory"*)* @_ZN6webrtc23FakeVideoDecoderFactoryC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc23FakeVideoEncoderFactoryC2Ev(%"class.webrtc::FakeVideoEncoderFactory"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FakeVideoEncoderFactory", %"class.webrtc::FakeVideoEncoderFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN6webrtc23FakeVideoEncoderFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::VideoEncoder"* @_ZN6webrtc23FakeVideoEncoderFactory18CreateVideoEncoderEv() local_unnamed_addr #1 align 2 {
  %1 = tail call %"class.webrtc::Clock"* @_ZN6webrtc5Clock16GetRealTimeClockEv() #8
  %2 = tail call i8* @_Znwm(i64 872) #9
  %3 = bitcast i8* %2 to %"class.webrtc::test::FakeEncoder"*
  tail call void @_ZN6webrtc4test11FakeEncoderC1EPNS_5ClockE(%"class.webrtc::test::FakeEncoder"* nonnull %3, %"class.webrtc::Clock"* %1) #8
  %4 = bitcast i8* %2 to %"class.webrtc::VideoEncoder"*
  ret %"class.webrtc::VideoEncoder"* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.webrtc::Clock"* @_ZN6webrtc5Clock16GetRealTimeClockEv() local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc23FakeVideoEncoderFactory19GetSupportedFormatsEv(%"class.std::__1::vector.21"* noalias nocapture sret, %"class.webrtc::FakeVideoEncoderFactory"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = alloca %"struct.webrtc::SdpVideoFormat", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"struct.webrtc::SdpVideoFormat"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 9, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN12_GLOBAL__N_126kFakeCodecFactoryCodecNameE, i64 0, i64 0), i64 9, i1 false) #8
  %9 = getelementptr inbounds i8, i8* %6, i64 9
  store i8 0, i8* %9, align 1
  call void @_ZN6webrtc14SdpVideoFormatC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.webrtc::SdpVideoFormat"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #8
  %10 = call i8* @_Znwm(i64 48) #9
  %11 = bitcast i8* %10 to %"struct.webrtc::SdpVideoFormat"*
  %12 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::vector.21"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.webrtc::SdpVideoFormat"** %15 to i8**
  store i8* %14, i8** %16, align 8
  call void @_ZN6webrtc14SdpVideoFormatC1ERKS0_(%"struct.webrtc::SdpVideoFormat"* nonnull %11, %"struct.webrtc::SdpVideoFormat"* nonnull dereferenceable(48) %3) #8
  %17 = bitcast %"struct.webrtc::SdpVideoFormat"** %12 to i64*
  %18 = ptrtoint i8* %14 to i64
  store i64 %18, i64* %17, align 8
  call void @_ZN6webrtc14SdpVideoFormatD1Ev(%"struct.webrtc::SdpVideoFormat"* nonnull %3) #8
  %19 = load i8, i8* %8, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #9
  br label %24

24:                                               ; preds = %2, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #8
  ret void
}

declare void @_ZN6webrtc14SdpVideoFormatC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.webrtc::SdpVideoFormat"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6webrtc14SdpVideoFormatD1Ev(%"struct.webrtc::SdpVideoFormat"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::VideoEncoder"* @_ZN6webrtc23FakeVideoEncoderFactory18CreateVideoEncoderERKNS_14SdpVideoFormatE(%"class.webrtc::FakeVideoEncoderFactory"* nocapture readnone, %"struct.webrtc::SdpVideoFormat"* nocapture readnone dereferenceable(48)) unnamed_addr #1 align 2 {
  %3 = tail call %"class.webrtc::Clock"* @_ZN6webrtc5Clock16GetRealTimeClockEv() #8
  %4 = tail call i8* @_Znwm(i64 872) #9
  %5 = bitcast i8* %4 to %"class.webrtc::test::FakeEncoder"*
  tail call void @_ZN6webrtc4test11FakeEncoderC1EPNS_5ClockE(%"class.webrtc::test::FakeEncoder"* nonnull %5, %"class.webrtc::Clock"* %3) #8
  %6 = bitcast i8* %4 to %"class.webrtc::VideoEncoder"*
  ret %"class.webrtc::VideoEncoder"* %6
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc23FakeVideoDecoderFactoryC2Ev(%"class.webrtc::FakeVideoDecoderFactory"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::FakeVideoDecoderFactory", %"class.webrtc::FakeVideoDecoderFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN6webrtc23FakeVideoDecoderFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::VideoDecoder"* @_ZN6webrtc23FakeVideoDecoderFactory18CreateVideoDecoderEv() local_unnamed_addr #1 align 2 {
  %1 = tail call i8* @_Znwm(i64 48) #9
  %2 = bitcast i8* %1 to %"class.webrtc::test::FakeDecoder"*
  tail call void @_ZN6webrtc4test11FakeDecoderC1Ev(%"class.webrtc::test::FakeDecoder"* nonnull %2) #8
  %3 = bitcast i8* %1 to %"class.webrtc::VideoDecoder"*
  ret %"class.webrtc::VideoDecoder"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc23FakeVideoDecoderFactory19GetSupportedFormatsEv(%"class.std::__1::vector.21"* noalias nocapture sret, %"class.webrtc::FakeVideoDecoderFactory"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = alloca %"struct.webrtc::SdpVideoFormat", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"struct.webrtc::SdpVideoFormat"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #8
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 9, i8* %8, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @_ZN12_GLOBAL__N_126kFakeCodecFactoryCodecNameE, i64 0, i64 0), i64 9, i1 false) #8
  %9 = getelementptr inbounds i8, i8* %6, i64 9
  store i8 0, i8* %9, align 1
  call void @_ZN6webrtc14SdpVideoFormatC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"struct.webrtc::SdpVideoFormat"* nonnull %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #8
  %10 = call i8* @_Znwm(i64 48) #9
  %11 = bitcast i8* %10 to %"struct.webrtc::SdpVideoFormat"*
  %12 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::vector.21"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.webrtc::SdpVideoFormat"** %15 to i8**
  store i8* %14, i8** %16, align 8
  call void @_ZN6webrtc14SdpVideoFormatC1ERKS0_(%"struct.webrtc::SdpVideoFormat"* nonnull %11, %"struct.webrtc::SdpVideoFormat"* nonnull dereferenceable(48) %3) #8
  %17 = bitcast %"struct.webrtc::SdpVideoFormat"** %12 to i64*
  %18 = ptrtoint i8* %14 to i64
  store i64 %18, i64* %17, align 8
  call void @_ZN6webrtc14SdpVideoFormatD1Ev(%"struct.webrtc::SdpVideoFormat"* nonnull %3) #8
  %19 = load i8, i8* %8, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #9
  br label %24

24:                                               ; preds = %2, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.webrtc::VideoDecoder"* @_ZN6webrtc23FakeVideoDecoderFactory18CreateVideoDecoderERKNS_14SdpVideoFormatE(%"class.webrtc::FakeVideoDecoderFactory"* nocapture readnone, %"struct.webrtc::SdpVideoFormat"* nocapture readnone dereferenceable(48)) unnamed_addr #1 align 2 {
  %3 = tail call i8* @_Znwm(i64 48) #9
  %4 = bitcast i8* %3 to %"class.webrtc::test::FakeDecoder"*
  tail call void @_ZN6webrtc4test11FakeDecoderC1Ev(%"class.webrtc::test::FakeDecoder"* nonnull %4) #8
  %5 = bitcast i8* %3 to %"class.webrtc::VideoDecoder"*
  ret %"class.webrtc::VideoDecoder"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6webrtc19VideoEncoderFactory18GetImplementationsEv(%"class.std::__1::vector.21"* noalias sret, %"class.webrtc::VideoEncoderFactory"*) unnamed_addr #1 comdat align 2 {
  %3 = bitcast %"class.webrtc::VideoEncoderFactory"* %1 to void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoEncoderFactory"*)***
  %4 = load void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoEncoderFactory"*)**, void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoEncoderFactory"*)*** %3, align 8
  %5 = load void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoEncoderFactory"*)*, void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoEncoderFactory"*)** %4, align 8
  tail call void %5(%"class.std::__1::vector.21"* sret %0, %"class.webrtc::VideoEncoderFactory"* %1) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8 @_ZNK6webrtc19VideoEncoderFactory17QueryVideoEncoderERKNS_14SdpVideoFormatE(%"class.webrtc::VideoEncoderFactory"*, %"struct.webrtc::SdpVideoFormat"* dereferenceable(48)) unnamed_addr #1 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16 @_ZNK6webrtc19VideoEncoderFactory17QueryCodecSupportERKNS_14SdpVideoFormatEN4absl8optionalINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEE(%"class.webrtc::VideoEncoderFactory"*, %"struct.webrtc::SdpVideoFormat"* dereferenceable(48), %"class.absl::optional.54"*) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.21", align 8
  %5 = getelementptr inbounds %"class.absl::optional.54", %"class.absl::optional.54"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %41

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::vector.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8
  %10 = bitcast %"class.webrtc::VideoEncoderFactory"* %0 to void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoEncoderFactory"*)***
  %11 = load void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoEncoderFactory"*)**, void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoEncoderFactory"*)*** %10, align 8
  %12 = load void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoEncoderFactory"*)*, void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoEncoderFactory"*)** %11, align 8
  call void %12(%"class.std::__1::vector.21"* nonnull sret %4, %"class.webrtc::VideoEncoderFactory"* %0) #8
  %13 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %4, i64 0, i32 0, i32 0
  %14 = load %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %4, i64 0, i32 0, i32 1
  %16 = bitcast %"struct.webrtc::SdpVideoFormat"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"struct.webrtc::SdpVideoFormat"* %14 to i64
  %19 = sub i64 %17, %18
  %20 = sdiv exact i64 %19, 48
  %21 = icmp eq i64 %19, 0
  %22 = select i1 %21, %"struct.webrtc::SdpVideoFormat"* null, %"struct.webrtc::SdpVideoFormat"* %14
  %23 = call zeroext i1 @_ZNK6webrtc14SdpVideoFormat13IsCodecInListEN3rtc9ArrayViewIKS0_Lln4711EEE(%"struct.webrtc::SdpVideoFormat"* %1, %"struct.webrtc::SdpVideoFormat"* %22, i64 %20) #8
  %24 = load %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"** %13, align 8
  %25 = icmp eq %"struct.webrtc::SdpVideoFormat"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %8
  %27 = bitcast %"struct.webrtc::SdpVideoFormat"* %24 to i8*
  %28 = load %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"** %15, align 8
  %29 = icmp eq %"struct.webrtc::SdpVideoFormat"* %28, %24
  br i1 %29, label %37, label %30

30:                                               ; preds = %26, %30
  %31 = phi %"struct.webrtc::SdpVideoFormat"* [ %32, %30 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.webrtc::SdpVideoFormat", %"struct.webrtc::SdpVideoFormat"* %31, i64 -1
  call void @_ZN6webrtc14SdpVideoFormatD1Ev(%"struct.webrtc::SdpVideoFormat"* %32) #8
  %33 = icmp eq %"struct.webrtc::SdpVideoFormat"* %32, %24
  br i1 %33, label %34, label %30

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::vector.21"* %4 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %26
  %38 = phi i8* [ %36, %34 ], [ %27, %26 ]
  store %"struct.webrtc::SdpVideoFormat"* %24, %"struct.webrtc::SdpVideoFormat"** %15, align 8
  call void @_ZdlPv(i8* %38) #9
  br label %39

39:                                               ; preds = %8, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8
  %40 = zext i1 %23 to i16
  br label %41

41:                                               ; preds = %3, %39
  %42 = phi i16 [ 0, %3 ], [ %40, %39 ]
  ret i16 %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.webrtc::VideoEncoderFactory::EncoderSelectorInterface"* @_ZNK6webrtc19VideoEncoderFactory18GetEncoderSelectorEv(%"class.webrtc::VideoEncoderFactory"*) unnamed_addr #1 comdat align 2 {
  ret %"class.webrtc::VideoEncoderFactory::EncoderSelectorInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc19VideoEncoderFactoryD2Ev(%"class.webrtc::VideoEncoderFactory"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc23FakeVideoEncoderFactoryD0Ev(%"class.webrtc::FakeVideoEncoderFactory"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.webrtc::FakeVideoEncoderFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16 @_ZNK6webrtc19VideoDecoderFactory17QueryCodecSupportERKNS_14SdpVideoFormatEN4absl8optionalINSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEEEE(%"class.webrtc::VideoDecoderFactory"*, %"struct.webrtc::SdpVideoFormat"* dereferenceable(48), %"class.absl::optional.54"*) unnamed_addr #1 comdat align 2 {
  %4 = alloca %"class.std::__1::vector.21", align 8
  %5 = getelementptr inbounds %"class.absl::optional.54", %"class.absl::optional.54"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %41

8:                                                ; preds = %3
  %9 = bitcast %"class.std::__1::vector.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8
  %10 = bitcast %"class.webrtc::VideoDecoderFactory"* %0 to void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoDecoderFactory"*)***
  %11 = load void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoDecoderFactory"*)**, void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoDecoderFactory"*)*** %10, align 8
  %12 = load void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoDecoderFactory"*)*, void (%"class.std::__1::vector.21"*, %"class.webrtc::VideoDecoderFactory"*)** %11, align 8
  call void %12(%"class.std::__1::vector.21"* nonnull sret %4, %"class.webrtc::VideoDecoderFactory"* %0) #8
  %13 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %4, i64 0, i32 0, i32 0
  %14 = load %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %4, i64 0, i32 0, i32 1
  %16 = bitcast %"struct.webrtc::SdpVideoFormat"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"struct.webrtc::SdpVideoFormat"* %14 to i64
  %19 = sub i64 %17, %18
  %20 = sdiv exact i64 %19, 48
  %21 = icmp eq i64 %19, 0
  %22 = select i1 %21, %"struct.webrtc::SdpVideoFormat"* null, %"struct.webrtc::SdpVideoFormat"* %14
  %23 = call zeroext i1 @_ZNK6webrtc14SdpVideoFormat13IsCodecInListEN3rtc9ArrayViewIKS0_Lln4711EEE(%"struct.webrtc::SdpVideoFormat"* %1, %"struct.webrtc::SdpVideoFormat"* %22, i64 %20) #8
  %24 = load %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"** %13, align 8
  %25 = icmp eq %"struct.webrtc::SdpVideoFormat"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %8
  %27 = bitcast %"struct.webrtc::SdpVideoFormat"* %24 to i8*
  %28 = load %"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"** %15, align 8
  %29 = icmp eq %"struct.webrtc::SdpVideoFormat"* %28, %24
  br i1 %29, label %37, label %30

30:                                               ; preds = %26, %30
  %31 = phi %"struct.webrtc::SdpVideoFormat"* [ %32, %30 ], [ %28, %26 ]
  %32 = getelementptr inbounds %"struct.webrtc::SdpVideoFormat", %"struct.webrtc::SdpVideoFormat"* %31, i64 -1
  call void @_ZN6webrtc14SdpVideoFormatD1Ev(%"struct.webrtc::SdpVideoFormat"* %32) #8
  %33 = icmp eq %"struct.webrtc::SdpVideoFormat"* %32, %24
  br i1 %33, label %34, label %30

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::vector.21"* %4 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %26
  %38 = phi i8* [ %36, %34 ], [ %27, %26 ]
  store %"struct.webrtc::SdpVideoFormat"* %24, %"struct.webrtc::SdpVideoFormat"** %15, align 8
  call void @_ZdlPv(i8* %38) #9
  br label %39

39:                                               ; preds = %8, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8
  %40 = zext i1 %23 to i16
  br label %41

41:                                               ; preds = %3, %39
  %42 = phi i16 [ 0, %3 ], [ %40, %39 ]
  ret i16 %42
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc23FakeVideoDecoderFactoryD0Ev(%"class.webrtc::FakeVideoDecoderFactory"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.webrtc::FakeVideoDecoderFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc19VideoDecoderFactoryD2Ev(%"class.webrtc::VideoDecoderFactory"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK6webrtc14SdpVideoFormat13IsCodecInListEN3rtc9ArrayViewIKS0_Lln4711EEE(%"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"*, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN6webrtc4test11FakeEncoderC1EPNS_5ClockE(%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::Clock"*) unnamed_addr #3

declare void @_ZN6webrtc14SdpVideoFormatC1ERKS0_(%"struct.webrtc::SdpVideoFormat"*, %"struct.webrtc::SdpVideoFormat"* dereferenceable(48)) unnamed_addr #3

declare void @_ZN6webrtc4test11FakeDecoderC1Ev(%"class.webrtc::test::FakeDecoder"*) unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
