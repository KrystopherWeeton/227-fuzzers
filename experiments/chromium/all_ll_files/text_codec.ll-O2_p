; ModuleID = '../../third_party/blink/renderer/platform/wtf/text/text_codec.cc'
source_filename = "../../third_party/blink/renderer/platform/wtf/text/text_codec.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::TextCodec" = type { i32 (...)** }

$_ZN3WTF9TextCodec10EncodeIntoEPKhjPhm = comdat any

$_ZN3WTF9TextCodec10EncodeIntoEPKDsjPhm = comdat any

@.str = private unnamed_addr constant [6 x i8] c"&#%u;\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"%%26%%23%u%%3B\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"\5C%x \00", align 1
@_ZTVN3WTF9TextCodecE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.WTF::TextCodec"*)* @_ZN3WTF9TextCodecD2Ev to i8*), i8* bitcast (void (%"class.WTF::TextCodec"*)* @_ZN3WTF9TextCodecD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast ({ i32, i64 } (%"class.WTF::TextCodec"*, i8*, i32, i8*, i64)* @_ZN3WTF9TextCodec10EncodeIntoEPKhjPhm to i8*), i8* bitcast ({ i32, i64 } (%"class.WTF::TextCodec"*, i16*, i32, i8*, i64)* @_ZN3WTF9TextCodec10EncodeIntoEPKDsjPhm to i8*)] }, align 8

@_ZN3WTF9TextCodecD1Ev = hidden unnamed_addr alias void (%"class.WTF::TextCodec"*), void (%"class.WTF::TextCodec"*)* @_ZN3WTF9TextCodecD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3WTF9TextCodecD2Ev(%"class.WTF::TextCodec"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3WTF9TextCodecD0Ev(%"class.WTF::TextCodec"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nofree nounwind ssp uwtable
define hidden i32 @_ZN3WTF9TextCodec25GetUnencodableReplacementEjNS_19UnencodableHandlingEPc(i32, i32, i8* nocapture) local_unnamed_addr #3 align 2 {
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %8
    i32 2, label %12
  ]

4:                                                ; preds = %3
  %5 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i64 0, i64 0), i32 %0) #8
  %6 = tail call i64 @strlen(i8* %2) #9
  %7 = trunc i64 %6 to i32
  br label %17

8:                                                ; preds = %3
  %9 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 32, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 %0) #8
  %10 = tail call i64 @strlen(i8* %2) #9
  %11 = trunc i64 %10 to i32
  br label %17

12:                                               ; preds = %3
  %13 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 32, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i32 %0) #8
  %14 = tail call i64 @strlen(i8* %2) #9
  %15 = trunc i64 %14 to i32
  br label %17

16:                                               ; preds = %3
  store i8 0, i8* %2, align 1
  br label %17

17:                                               ; preds = %16, %12, %8, %4
  %18 = phi i32 [ 0, %16 ], [ %15, %12 ], [ %11, %8 ], [ %7, %4 ]
  ret i32 %18
}

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32, i64 } @_ZN3WTF9TextCodec10EncodeIntoEPKhjPhm(%"class.WTF::TextCodec"*, i8*, i32, i8*, i64) unnamed_addr #6 comdat align 2 {
  ret { i32, i64 } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32, i64 } @_ZN3WTF9TextCodec10EncodeIntoEPKDsjPhm(%"class.WTF::TextCodec"*, i16*, i32, i8*, i64) unnamed_addr #6 comdat align 2 {
  ret { i32, i64 } zeroinitializer
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
