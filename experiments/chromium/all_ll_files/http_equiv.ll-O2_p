; ModuleID = '../../third_party/blink/renderer/core/loader/http_equiv.cc'
source_filename = "../../third_party/blink/renderer/core/loader/http_equiv.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.751", i32, [4 x i8], %"class.std::__1::unique_ptr.889", %"class.std::__1::unique_ptr.889", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque.895", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.901", %"class.std::__1::unique_ptr.907", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.919", %"class.std::__1::unique_ptr.925", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.196", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.760", %"class.std::__1::unique_ptr.766", %"class.std::__1::unique_ptr.772", %"class.std::__1::unique_ptr.778", %"class.std::__1::unique_ptr.784", %"class.std::__1::unique_ptr.795", %"class.std::__1::unique_ptr.802", %"class.std::__1::unique_ptr.802", %"class.std::__1::unique_ptr.809", %"class.std::__1::unique_ptr.816", %"class.std::__1::unique_ptr.823", %"class.std::__1::unique_ptr.823", %"class.std::__1::unique_ptr.830", %"class.std::__1::unique_ptr.837", %"class.std::__1::unique_ptr.844", %"class.std::__1::unique_ptr.869", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.772" = type { %"class.std::__1::__compressed_pair.773" }
%"class.std::__1::__compressed_pair.773" = type { %"struct.std::__1::__compressed_pair_elem.774" }
%"struct.std::__1::__compressed_pair_elem.774" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.787" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.787" = type { %"struct.std::__1::__atomic_base.788" }
%"struct.std::__1::__atomic_base.788" = type { %"struct.std::__1::__atomic_base.789" }
%"struct.std::__1::__atomic_base.789" = type { %"struct.std::__1::__cxx_atomic_impl.790" }
%"struct.std::__1::__cxx_atomic_impl.790" = type { %"struct.std::__1::__cxx_atomic_base_impl.791" }
%"struct.std::__1::__cxx_atomic_base_impl.791" = type { i64 }
%"class.std::__1::unique_ptr.795" = type { %"class.std::__1::__compressed_pair.796" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"class.blink::Worklist.798"* }
%"class.blink::Worklist.798" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.787" }
%"class.std::__1::unique_ptr.802" = type { %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.blink::Worklist.805"* }
%"class.blink::Worklist.805" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.787" }
%"class.std::__1::unique_ptr.809" = type { %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { %"class.blink::Worklist.812"* }
%"class.blink::Worklist.812" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.787" }
%"class.std::__1::unique_ptr.816" = type { %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { %"class.blink::Worklist.819"* }
%"class.blink::Worklist.819" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.787" }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.blink::Worklist.826"* }
%"class.blink::Worklist.826" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.787" }
%"class.std::__1::unique_ptr.830" = type { %"class.std::__1::__compressed_pair.831" }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.blink::Worklist.833"* }
%"class.blink::Worklist.833" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.787" }
%"class.std::__1::unique_ptr.837" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"class.blink::Worklist.840"* }
%"class.blink::Worklist.840" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.787" }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.847", %"class.std::__1::__compressed_pair.855", %"class.std::__1::__compressed_pair.860", %"class.std::__1::__compressed_pair.862", [4 x i8] }>
%"class.std::__1::unique_ptr.847" = type { %"class.std::__1::__compressed_pair.848" }
%"class.std::__1::__compressed_pair.848" = type { %"struct.std::__1::__compressed_pair_elem.849", %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.849" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.851" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { i64 }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { float }
%"class.std::__1::unique_ptr.869" = type { %"class.std::__1::__compressed_pair.870" }
%"class.std::__1::__compressed_pair.870" = type { %"struct.std::__1::__compressed_pair_elem.871" }
%"struct.std::__1::__compressed_pair_elem.871" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.872", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.872" = type { %"class.std::__1::__compressed_pair.873" }
%"class.std::__1::__compressed_pair.873" = type { %"struct.std::__1::__compressed_pair_elem.874" }
%"struct.std::__1::__compressed_pair_elem.874" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.881" }
%"class.WTF::Vector.881" = type { %"class.WTF::VectorBuffer.882" }
%"class.WTF::VectorBuffer.882" = type { %"class.WTF::VectorBufferBase.883" }
%"class.WTF::VectorBufferBase.883" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque.895" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.898" }
%"class.WTF::VectorBuffer.898" = type { %"class.WTF::VectorBufferBase.899" }
%"class.WTF::VectorBufferBase.899" = type { %"struct.std::__1::pair.900"*, i32, i32 }
%"struct.std::__1::pair.900" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.901" = type { %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.907" = type { %"class.std::__1::__compressed_pair.908" }
%"class.std::__1::__compressed_pair.908" = type { %"struct.std::__1::__compressed_pair_elem.909" }
%"struct.std::__1::__compressed_pair_elem.909" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.913" }
%"class.std::__1::unique_ptr.913" = type { %"class.std::__1::__compressed_pair.914" }
%"class.std::__1::__compressed_pair.914" = type { %"struct.std::__1::__compressed_pair_elem.915" }
%"struct.std::__1::__compressed_pair_elem.915" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.798"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.805"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.812"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.819"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.826"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1495", i64 }
%"class.std::__1::vector.1495" = type { %"class.std::__1::__vector_base.1496" }
%"class.std::__1::__vector_base.1496" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1497" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1497" = type { %"struct.std::__1::__compressed_pair_elem.1498" }
%"struct.std::__1::__compressed_pair_elem.1498" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.931 }
%class.scoped_refptr.931 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__cxx_atomic_impl.198" }
%"struct.std::__1::__cxx_atomic_impl.198" = type { %"struct.std::__1::__cxx_atomic_base_impl.199" }
%"struct.std::__1::__cxx_atomic_base_impl.199" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.115", %"class.WTF::Vector.115", i8, i32, %"class.blink::Member.126", %"class.blink::Member.406", %"class.blink::Member.700", %"class.blink::Member.702", %"class.blink::Member.713", %"class.blink::Member.715", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.723", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.729", %"class.blink::Member.731", %"class.blink::Member.61", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.734", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.21", %"class.blink::Member.676", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::Member.21", %"class.blink::UserActionElementSet", %"class.blink::Member.944", double, double, i64, i64, %"class.blink::HeapHashSet.946", %"class.blink::HeapHashSet.953", i16, i8, %"class.blink::Member.960", %"class.blink::Member.962", %"class.blink::Member.1294", %"class.blink::Member.1296", %"class.blink::TextLinkColors", %"class.blink::Member.1298", i8, [7 x i8], %"class.blink::HeapHashMap.1300", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.21", %"class.WTF::Vector.1307", %"class.blink::Member.1312", %"class.blink::Member.1314", i8, %"class.blink::Member.21", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1316", %"class.blink::HeapVector.1318", %"class.std::__1::unique_ptr.1326", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1332", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1345", %"class.WTF::Vector.1347", i8, i8, %"class.std::__1::unique_ptr.1352", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1358", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1366", i8, i32, %"class.blink::Member.1368", %"class.blink::Member.1370", %"class.blink::Member.1372", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1374", %"class.WTF::HashMap.1376", %"class.blink::Member.1381", %"class.blink::Member.1383", %"class.blink::Member.1385", %"class.blink::Member.1387", %"class.blink::Member.8", %"class.blink::Member.8", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1389", i8, i32, %"class.blink::Member.1396", %"class.blink::Member.1398", i32, %"class.blink::Member.1400", %"class.blink::Member.1402", %"class.blink::Member.1404", %"class.std::__1::unique_ptr.1406", i64, %"class.std::__1::unique_ptr.1412", i32, i32, %"class.blink::Member.1418", %"class.blink::Member.1420", %"class.blink::Member.1422", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1424", %"class.WTF::Vector.687", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1426", %"class.blink::Member.1433", %"class.std::__1::unique_ptr.1435", %"class.blink::Member.1441", i8, i8, %"class.WTF::String", %"class.blink::Member.1443", i8, [7 x i8], %"class.blink::HeapHashMap.1445", %"class.blink::HeapObserverSet.1452", %"class.blink::Member.1460", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1462", i32, i8, i8, %"class.blink::WeakMember.1464", %"class.blink::Member.1465" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.6", %"class.blink::Member.8", %"class.blink::Member.0", %"class.blink::Member.10", %"class.blink::Member.10", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.53", %"class.blink::HeapVector.55" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.17" }
%"class.blink::Member.17" = type { %"class.blink::MemberBase.18" }
%"class.blink::MemberBase.18" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.21", i32, %"class.blink::HeapVector" }
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::HeapHashMap.52"* }
%"class.blink::HeapHashMap.52" = type opaque
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.55" = type { %"class.WTF::Vector.58" }
%"class.WTF::Vector.58" = type { %"class.WTF::VectorBuffer.59" }
%"class.WTF::VectorBuffer.59" = type { %"class.WTF::VectorBufferBase.60" }
%"class.WTF::VectorBufferBase.60" = type { %"class.blink::Member.61"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.108" }
%"class.blink::HeapHashMap.108" = type { %"class.WTF::HashMap.111" }
%"class.WTF::HashMap.111" = type { %"class.WTF::HashTable.112" }
%"class.WTF::HashTable.112" = type <{ %"struct.WTF::KeyValuePair.114"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.114" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.115" = type { %"class.WTF::VectorBuffer.116" }
%"class.WTF::VectorBuffer.116" = type { %"class.WTF::VectorBufferBase.117" }
%"class.WTF::VectorBufferBase.117" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.119" }
%"struct.std::__1::atomic.119" = type { %"struct.std::__1::__atomic_base.120" }
%"struct.std::__1::__atomic_base.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__cxx_atomic_impl.122" }
%"struct.std::__1::__cxx_atomic_impl.122" = type { %"struct.std::__1::__cxx_atomic_base_impl.123" }
%"struct.std::__1::__cxx_atomic_base_impl.123" = type { i32 }
%"class.blink::Member.126" = type { %"class.blink::MemberBase.127" }
%"class.blink::MemberBase.127" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type { %"class.blink::DOMWindow", %"class.blink::ExecutionContext.base", %"class.blink::Supplementable.528", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.536", %"class.blink::Member.8", %"class.blink::Member.538", i8, %"class.blink::Member.540", %"class.blink::Member.542", %"class.blink::Member.544", %"class.blink::Member.544", %"class.blink::Member.544", %"class.blink::Member.544", %"class.blink::Member.544", %"class.blink::Member.544", %"class.blink::Member.546", %"class.blink::Member.548", %"class.blink::Member.550", %"class.blink::Member.552", %"class.blink::Member.554", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.463", %"class.blink::Member.556", %class.scoped_refptr.558, %"class.blink::HeapHashSet.620", %"class.blink::Member.627", %"class.blink::HeapHashMap.640", %"class.std::__1::unique_ptr.647", %"class.blink::Member.659", %"class.blink::Member.680", %"class.blink::Member.682", %"class.blink::Member.684", %"class.WTF::Vector.687", %"class.util::TokenType", %"class.WTF::HashSet.692", %"class.WTF::Deque" }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.148", %"class.blink::Member.150", %"class.blink::Member.152", %"class.blink::Member.154", i8, %"class.WTF::Vector.156" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.141" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.130" }
%"class.blink::HeapVector.130" = type { %"class.WTF::Vector.133" }
%"class.WTF::Vector.133" = type { %"class.WTF::VectorBuffer.134" }
%"class.WTF::VectorBuffer.134" = type { %"class.WTF::VectorBufferBase.135", [32 x i8] }
%"class.WTF::VectorBufferBase.135" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.136" }
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::HeapVector.138"* }
%"class.blink::HeapVector.138" = type opaque
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.WTF::Vector.144"* }
%"class.WTF::Vector.144" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1514", %"class.blink::Member.1516", %"class.blink::Member.1518", i8, i32, i8, i32, %"class.blink::Member.1520", %"class.blink::Member.150", %"class.blink::FrameLifecycle", %"class.blink::Member.148", %"class.blink::Member.148", %"class.blink::Member.148", %"class.blink::Member.148", %"class.blink::Member.148", %"class.blink::Member.148", %"class.blink::Member.665", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map.1522", %"class.blink::Member.1532", i8, %"class.base::UnguessableToken", %"class.absl::optional.1534", %"class.absl::optional.1539", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.148", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1514" = type { %"class.blink::MemberBase.1515" }
%"class.blink::MemberBase.1515" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1516" = type { %"class.blink::MemberBase.1517" }
%"class.blink::MemberBase.1517" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1518" = type { %"class.blink::MemberBase.1519" }
%"class.blink::MemberBase.1519" = type { %"class.blink::DOMWindow"* }
%"class.blink::Member.1520" = type { %"class.blink::MemberBase.1521" }
%"class.blink::MemberBase.1521" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.665" = type { %"class.blink::MemberBase.666" }
%"class.blink::MemberBase.666" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1551", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1559", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1567", %"class.blink::FrameLoader", %"class.blink::Member.1588", %"class.blink::Member.21", %"class.blink::Member.1590", %"class.blink::Member.1592", %"class.blink::Member.1594", %"class.blink::Member.1596", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1598", %class.scoped_refptr.1600, %"class.blink::Member.1601", %"class.blink::Member.1603", %"class.blink::Member.1605", %"class.blink::Member.1607", %"class.blink::Member.1609", %"class.blink::Member.1611", %"class.blink::Member.1613", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote.1615", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1618", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1624", %"class.std::__1::unique_ptr.1625", %"class.absl::optional.1539", i32, [4 x i8], %"class.std::__1::unique_ptr.1631", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1639", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1644", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1649", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1652", %"class.blink::Member.1654", %"class.blink::Member.1656", %"class.blink::Member.1658", %"class.mojo::StructPtr.1661", %"class.blink::Member.1670", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1672", i8, [7 x i8] }>
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1551" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1552" }
%"class.blink::HeapHashMap.1552" = type { %"class.WTF::HashMap.1555" }
%"class.WTF::HashMap.1555" = type { %"class.WTF::HashTable.1556" }
%"class.WTF::HashTable.1556" = type <{ %"struct.WTF::KeyValuePair.1558"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1558" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1559" = type { %"class.std::__1::__compressed_pair.1560" }
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.650", %"class.base::WeakPtrFactory.655" }
%"class.WTF::HashMap.650" = type { %"class.WTF::HashTable.651" }
%"class.WTF::HashTable.651" = type <{ %"struct.WTF::KeyValuePair.654"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.654" = type opaque
%"class.base::WeakPtrFactory.655" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.178 }
%class.scoped_refptr.178 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.179", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.179" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.180" }
%"struct.std::__1::atomic.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__atomic_base.182" }
%"struct.std::__1::__atomic_base.182" = type { %"struct.std::__1::__cxx_atomic_impl.183" }
%"struct.std::__1::__cxx_atomic_impl.183" = type { %"struct.std::__1::__cxx_atomic_base_impl.184" }
%"struct.std::__1::__cxx_atomic_base_impl.184" = type { i8 }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1565" }
%"class.blink::Member.1565" = type { %"class.blink::MemberBase.1566" }
%"class.blink::MemberBase.1566" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.663" }
%"class.blink::WeakMember.663" = type { %"class.blink::MemberBase.664" }
%"class.blink::MemberBase.664" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.343" }
%"class.blink::HeapHashSet.343" = type { %"class.WTF::HashSet.346" }
%"class.WTF::HashSet.346" = type { %"class.WTF::HashTable.347" }
%"class.WTF::HashTable.347" = type <{ %"class.blink::WeakMember.349"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.349" = type opaque
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback.280", %"class.base::RepeatingCallback.2309", i64, %"class.std::__1::map.2310", i8*, i64, %"class.base::WeakPtrFactory.2319" }
%"class.base::RepeatingCallback.280" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.2309" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2310" = type { %"class.std::__1::__tree.2311" }
%"class.std::__1::__tree.2311" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2312", %"class.std::__1::__compressed_pair.2316" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.2312" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2316" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::WeakPtrFactory.2319" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1567" = type { %"class.WTF::HashSet.1570" }
%"class.WTF::HashSet.1570" = type { %"class.WTF::HashTable.1571" }
%"class.WTF::HashTable.1571" = type <{ %"class.blink::WeakMember.1573"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1573" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.665", %"class.blink::Member.1574", %"class.blink::Member.1576", %"class.std::__1::unique_ptr.1578", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1584" }
%"class.blink::Member.1574" = type { %"class.blink::MemberBase.1575" }
%"class.blink::MemberBase.1575" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1576" = type { %"class.blink::MemberBase.1577" }
%"class.blink::MemberBase.1577" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.1966", %"class.blink::Member.1971", %"class.std::__1::unique_ptr.1973", %"class.std::__1::unique_ptr.433", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.2157, %"class.WTF::AtomicString", i32, %"class.absl::optional.2048", %class.scoped_refptr.366, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.2013", i8, %"class.absl::optional.2020", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.665", %"class.blink::Member.2158", %"class.blink::Member.702", %"class.blink::Member.2169", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.2171", %class.scoped_refptr.358, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.2184", %"class.std::__1::unique_ptr.2025", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.2186", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.2191, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.2205, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.2206", %"class.blink::Member.2221", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.2234", %"class.WTF::Vector.463", i8, i8, i8, %"class.blink::WebVector.2146", %"class.blink::WebVector.2146", %"class.mojo::Remote.2239" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.1966" = type { %"class.WTF::VectorBuffer.1967" }
%"class.WTF::VectorBuffer.1967" = type { %"class.WTF::VectorBufferBase.1968" }
%"class.WTF::VectorBufferBase.1968" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.1973" = type { %"class.std::__1::__compressed_pair.1974" }
%"class.std::__1::__compressed_pair.1974" = type { %"struct.std::__1::__compressed_pair_elem.1975" }
%"struct.std::__1::__compressed_pair_elem.1975" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.2013", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.2020", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.2025", %"class.base::UnguessableToken", %"class.blink::WebVector.2031", %"class.base::TickClock"*, %"class.blink::WebVector.2040", %"class.absl::optional.2048", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.2061", %"class.blink::WebVector.2053", i8, %"class.blink::WebVector.2080", i8, %"class.std::__1::unique_ptr.2088", %"class.blink::WebVector.2146", %"class.blink::WebVector.2146" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector.1977" }
%"class.std::__1::vector.1977" = type { %"class.std::__1::__vector_base.1978" }
%"class.std::__1::__vector_base.1978" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.2008" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.2008" = type { %"struct.std::__1::__compressed_pair_elem.2009" }
%"struct.std::__1::__compressed_pair_elem.2009" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.1979", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.1979" = type { %"class.std::__1::__compressed_pair.1980" }
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.1981" }
%"struct.std::__1::__compressed_pair_elem.1981" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.2019", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.2019" = type { i8* }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.1976" }
%"class.blink::WebPrivatePtr.1976" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.2031" = type { %"class.std::__1::vector.2032" }
%"class.std::__1::vector.2032" = type { %"class.std::__1::__vector_base.2033" }
%"class.std::__1::__vector_base.2033" = type { %"class.std::__1::unique_ptr.2034"*, %"class.std::__1::unique_ptr.2034"*, %"class.std::__1::__compressed_pair.2035" }
%"class.std::__1::unique_ptr.2034" = type opaque
%"class.std::__1::__compressed_pair.2035" = type { %"struct.std::__1::__compressed_pair_elem.2036" }
%"struct.std::__1::__compressed_pair_elem.2036" = type { %"class.std::__1::unique_ptr.2034"* }
%"class.blink::WebVector.2040" = type { %"class.std::__1::vector.2041" }
%"class.std::__1::vector.2041" = type { %"class.std::__1::__vector_base.2042" }
%"class.std::__1::__vector_base.2042" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2043" }
%"class.std::__1::__compressed_pair.2043" = type { %"struct.std::__1::__compressed_pair_elem.2044" }
%"struct.std::__1::__compressed_pair_elem.2044" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.absl::optional.2061" = type { %"class.absl::optional_internal::optional_data.2062" }
%"class.absl::optional_internal::optional_data.2062" = type { %"class.absl::optional_internal::optional_data_base.2063" }
%"class.absl::optional_internal::optional_data_base.2063" = type { %"class.absl::optional_internal::optional_data_dtor_base.2064" }
%"class.absl::optional_internal::optional_data_dtor_base.2064" = type { i8, [7 x i8], %union.anon.2065 }
%union.anon.2065 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.2053" = type { %"class.std::__1::vector.2054" }
%"class.std::__1::vector.2054" = type { %"class.std::__1::__vector_base.2055" }
%"class.std::__1::__vector_base.2055" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.2056" }
%"class.std::__1::__compressed_pair.2056" = type { %"struct.std::__1::__compressed_pair_elem.2057" }
%"struct.std::__1::__compressed_pair_elem.2057" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.2080" = type { %"class.std::__1::vector.2081" }
%"class.std::__1::vector.2081" = type { %"class.std::__1::__vector_base.2082" }
%"class.std::__1::__vector_base.2082" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2083" }
%"class.std::__1::__compressed_pair.2083" = type { %"struct.std::__1::__compressed_pair_elem.2084" }
%"struct.std::__1::__compressed_pair_elem.2084" = type { i32* }
%"class.std::__1::unique_ptr.2088" = type { %"class.std::__1::__compressed_pair.2089" }
%"class.std::__1::__compressed_pair.2089" = type { %"struct.std::__1::__compressed_pair_elem.2090" }
%"struct.std::__1::__compressed_pair_elem.2090" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.2091" }
%"class.blink::WebVector.2091" = type { %"class.std::__1::vector.2092" }
%"class.std::__1::vector.2092" = type { %"class.std::__1::__vector_base.2093" }
%"class.std::__1::__vector_base.2093" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.2138" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.2094", %"class.blink::WebVector.2102", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.2053", i32, [4 x i8], %"class.absl::optional.2133", %"class.blink::WebVector.2053" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.2094" = type { %"class.std::__1::vector.2095" }
%"class.std::__1::vector.2095" = type { %"class.std::__1::__vector_base.2096" }
%"class.std::__1::__vector_base.2096" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.2097" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.2097" = type { %"struct.std::__1::__compressed_pair_elem.2098" }
%"struct.std::__1::__compressed_pair_elem.2098" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.2102" = type { %"class.std::__1::vector.2103" }
%"class.std::__1::vector.2103" = type { %"class.std::__1::__vector_base.2104" }
%"class.std::__1::__vector_base.2104" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.2128" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.2105", %"class.blink::WebVector.2053", %"class.blink::WebVector.2113", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.2105" = type { %"class.std::__1::vector.2106" }
%"class.std::__1::vector.2106" = type { %"class.std::__1::__vector_base.2107" }
%"class.std::__1::__vector_base.2107" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.2108" }
%"class.std::__1::__compressed_pair.2108" = type { %"struct.std::__1::__compressed_pair_elem.2109" }
%"struct.std::__1::__compressed_pair_elem.2109" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.2113" = type { %"class.std::__1::vector.2114" }
%"class.std::__1::vector.2114" = type { %"class.std::__1::__vector_base.2115" }
%"class.std::__1::__vector_base.2115" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.2123" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.2116" }
%"class.blink::WebVector.2116" = type { %"class.std::__1::vector.2117" }
%"class.std::__1::vector.2117" = type { %"class.std::__1::__vector_base.2118" }
%"class.std::__1::__vector_base.2118" = type { i8*, i8*, %"class.std::__1::__compressed_pair.2119" }
%"class.std::__1::__compressed_pair.2119" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { i8* }
%"class.std::__1::__compressed_pair.2123" = type { %"struct.std::__1::__compressed_pair_elem.2124" }
%"struct.std::__1::__compressed_pair_elem.2124" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.2128" = type { %"struct.std::__1::__compressed_pair_elem.2129" }
%"struct.std::__1::__compressed_pair_elem.2129" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.2133" = type { %"class.absl::optional_internal::optional_data.2134" }
%"class.absl::optional_internal::optional_data.2134" = type { %"class.absl::optional_internal::optional_data_base.2135" }
%"class.absl::optional_internal::optional_data_base.2135" = type { %"class.absl::optional_internal::optional_data_dtor_base.2136" }
%"class.absl::optional_internal::optional_data_dtor_base.2136" = type { i8, [7 x i8], %union.anon.2137 }
%union.anon.2137 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.2053", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.2138" = type { %"struct.std::__1::__compressed_pair_elem.2139" }
%"struct.std::__1::__compressed_pair_elem.2139" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.293 }
%class.scoped_refptr.293 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.436" }
%"class.std::__1::unique_ptr.436" = type { %"class.std::__1::__compressed_pair.437" }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.439" }
%"class.WTF::Vector.439" = type { %"class.WTF::VectorBuffer.440" }
%"class.WTF::VectorBuffer.440" = type { %"class.WTF::VectorBufferBase.441" }
%"class.WTF::VectorBufferBase.441" = type { %"class.mojo::StructPtr.442"*, i32, i32 }
%"class.mojo::StructPtr.442" = type { %"class.std::__1::unique_ptr.443" }
%"class.std::__1::unique_ptr.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.446", %"class.WTF::HashMap.453", %"class.WTF::HashMap.458", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.463", i32, %"class.mojo::StructPtr.468", %"class.WTF::Vector.463" }
%"class.mojo::StructPtr.446" = type { %"class.std::__1::unique_ptr.447" }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.453" = type { %"class.WTF::HashTable.454" }
%"class.WTF::HashTable.454" = type <{ %"struct.WTF::KeyValuePair.457"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.457" = type { i32, %"class.WTF::String" }
%"class.WTF::HashMap.458" = type { %"class.WTF::HashTable.459" }
%"class.WTF::HashTable.459" = type <{ %"struct.WTF::KeyValuePair.462"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.462" = type { i32, %"class.mojo::StructPtr.2409" }
%"class.mojo::StructPtr.2409" = type { %"class.std::__1::unique_ptr.2410" }
%"class.std::__1::unique_ptr.2410" = type { %"class.std::__1::__compressed_pair.2411" }
%"class.std::__1::__compressed_pair.2411" = type { %"struct.std::__1::__compressed_pair_elem.2412" }
%"struct.std::__1::__compressed_pair_elem.2412" = type { %"class.network::mojom::blink::CSPSourceList"* }
%"class.network::mojom::blink::CSPSourceList" = type <{ %"class.WTF::Vector.2413", %"class.WTF::Vector.463", %"class.WTF::Vector.2418", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.WTF::Vector.2413" = type { %"class.WTF::VectorBuffer.2414" }
%"class.WTF::VectorBuffer.2414" = type { %"class.WTF::VectorBufferBase.2415" }
%"class.WTF::VectorBufferBase.2415" = type { %"class.mojo::StructPtr.446"*, i32, i32 }
%"class.WTF::Vector.2418" = type { %"class.WTF::VectorBuffer.2419" }
%"class.WTF::VectorBuffer.2419" = type { %"class.WTF::VectorBufferBase.2420" }
%"class.WTF::VectorBufferBase.2420" = type { %"class.mojo::StructPtr.2421"*, i32, i32 }
%"class.mojo::StructPtr.2421" = type { %"class.std::__1::unique_ptr.2422" }
%"class.std::__1::unique_ptr.2422" = type { %"class.std::__1::__compressed_pair.2423" }
%"class.std::__1::__compressed_pair.2423" = type { %"struct.std::__1::__compressed_pair_elem.2424" }
%"struct.std::__1::__compressed_pair_elem.2424" = type { %"class.network::mojom::blink::CSPHashSource"* }
%"class.network::mojom::blink::CSPHashSource" = type { i32, %"class.WTF::Vector.2376" }
%"class.WTF::Vector.2376" = type { %"class.WTF::VectorBuffer.2377" }
%"class.WTF::VectorBuffer.2377" = type { %"class.WTF::VectorBufferBase.2370" }
%"class.WTF::VectorBufferBase.2370" = type { i8*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.468" = type { %"class.std::__1::unique_ptr.469" }
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.463", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.483" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.277", i32 }>
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.280", %"class.base::OnceCallback.281", %"class.absl::optional.282", %"class.absl::optional.287", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.294", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.302", %"class.std::__1::map.313", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.322", i8, %class.scoped_refptr.161, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.323" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::OnceCallback.281" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.282" = type { %"class.absl::optional_internal::optional_data.283" }
%"class.absl::optional_internal::optional_data.283" = type { %"class.absl::optional_internal::optional_data_base.284" }
%"class.absl::optional_internal::optional_data_base.284" = type { %"class.absl::optional_internal::optional_data_dtor_base.285" }
%"class.absl::optional_internal::optional_data_dtor_base.285" = type { i8, %union.anon.286 }
%union.anon.286 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.287" = type { %"class.absl::optional_internal::optional_data.288" }
%"class.absl::optional_internal::optional_data.288" = type { %"class.absl::optional_internal::optional_data_base.289" }
%"class.absl::optional_internal::optional_data_base.289" = type { %"class.absl::optional_internal::optional_data_dtor_base.290" }
%"class.absl::optional_internal::optional_data_dtor_base.290" = type { i8, %union.anon.291 }
%union.anon.291 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.161, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.292" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.292" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.236 }
%class.scoped_refptr.236 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2247", [4 x i8], %"class.base::RepeatingCallback.280", %class.scoped_refptr.161, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.2247" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.297", %class.scoped_refptr.298 }
%"class.base::RepeatingCallback.297" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.298 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.160", [4 x i8] }>
%"class.base::RefCountedThreadSafe.160" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.302" = type { %"class.std::__1::__tree.303" }
%"class.std::__1::__tree.303" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.304", %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.313" = type { %"class.std::__1::__tree.314" }
%"class.std::__1::__tree.314" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.315", %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::OnceCallback.322" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.161 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.162" }>
%"class.base::RefCountedThreadSafe.162" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.323" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%class.scoped_refptr.2157 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.2048" = type { %"class.absl::optional_internal::optional_data.2049" }
%"class.absl::optional_internal::optional_data.2049" = type { %"class.absl::optional_internal::optional_data_base.2050" }
%"class.absl::optional_internal::optional_data_base.2050" = type { %"class.absl::optional_internal::optional_data_dtor_base.2051" }
%"class.absl::optional_internal::optional_data_dtor_base.2051" = type { i8, %union.anon.2052 }
%union.anon.2052 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.2053", %"class.blink::WebString", %"class.blink::WebVector.2053", %"class.blink::WebVector.2053" }
%class.scoped_refptr.366 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.359", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.361", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.366 }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.361" = type { %"class.absl::optional_internal::optional_data.362" }
%"class.absl::optional_internal::optional_data.362" = type { %"class.absl::optional_internal::optional_data_base.363" }
%"class.absl::optional_internal::optional_data_base.363" = type { %"class.absl::optional_internal::optional_data_dtor_base.364" }
%"class.absl::optional_internal::optional_data_dtor_base.364" = type { i8, %union.anon.365 }
%union.anon.365 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2013" = type { %"class.std::__1::__compressed_pair.2014" }
%"class.std::__1::__compressed_pair.2014" = type { %"struct.std::__1::__compressed_pair_elem.2015" }
%"struct.std::__1::__compressed_pair_elem.2015" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.2020" = type { %"class.absl::optional_internal::optional_data.2021" }
%"class.absl::optional_internal::optional_data.2021" = type { %"class.absl::optional_internal::optional_data_base.2022" }
%"class.absl::optional_internal::optional_data_base.2022" = type { %"class.absl::optional_internal::optional_data_dtor_base.2023" }
%"class.absl::optional_internal::optional_data_dtor_base.2023" = type { i8, %union.anon.2024 }
%union.anon.2024 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.2066", %"class.base::flat_map.1522", i8, [7 x i8] }>
%"class.std::__1::vector.2066" = type { %"class.std::__1::__vector_base.2067" }
%"class.std::__1::__vector_base.2067" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.2075" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.2068", i8, i8, [6 x i8] }>
%"class.std::__1::vector.2068" = type { %"class.std::__1::__vector_base.2069" }
%"class.std::__1::__vector_base.2069" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.2070" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.361" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.2070" = type { %"struct.std::__1::__compressed_pair_elem.2071" }
%"struct.std::__1::__compressed_pair_elem.2071" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.2075" = type { %"struct.std::__1::__compressed_pair_elem.2076" }
%"struct.std::__1::__compressed_pair_elem.2076" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.2158" = type { %"class.blink::MemberBase.2159" }
%"class.blink::MemberBase.2159" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.463", %"class.blink::Member.2162", %"class.absl::optional.2164", i64, i64, i32, %class.scoped_refptr.558, %class.scoped_refptr.2157, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.558 }
%"class.blink::Member.2162" = type { %"class.blink::MemberBase.2163" }
%"class.blink::MemberBase.2163" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.absl::optional.2164" = type { %"class.absl::optional_internal::optional_data.2165" }
%"class.absl::optional_internal::optional_data.2165" = type { %"class.absl::optional_internal::optional_data_base.2166" }
%"class.absl::optional_internal::optional_data_base.2166" = type { %"class.absl::optional_internal::optional_data_dtor_base.2167" }
%"class.absl::optional_internal::optional_data_dtor_base.2167" = type { i8, %union.anon.2168 }
%union.anon.2168 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"class.blink::FloatSize" = type { float, float }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.gfx::PointF" = type { float, float }
%"class.blink::Member.2169" = type { %"class.blink::MemberBase.2170" }
%"class.blink::MemberBase.2170" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.1988", %class.scoped_refptr.1998, %class.scoped_refptr.1999, %"struct.blink::CacheControlHeader", %"class.absl::optional.282", %"class.absl::optional.1920", %"class.absl::optional.1920", %"class.absl::optional.1920", i64, %"class.blink::KURL", %"class.WTF::Vector.1966", %"class.WTF::String", %"class.WTF::Vector.463", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.1539", %"class.WTF::Vector.463", %"class.blink::KURL", %"class.absl::optional.2000" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.1982" }
%"class.WTF::HashMap.1982" = type { %"class.WTF::HashTable.1983" }
%"class.WTF::HashTable.1983" = type <{ %"struct.WTF::KeyValuePair.1986"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1986" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array.1987", i8 }
%"struct.std::__1::array.1987" = type { [16 x i8] }
%"class.absl::optional.1988" = type { %"class.absl::optional_internal::optional_data.1989" }
%"class.absl::optional_internal::optional_data.1989" = type { %"class.absl::optional_internal::optional_data_base.1990" }
%"class.absl::optional_internal::optional_data_base.1990" = type { %"class.absl::optional_internal::optional_data_dtor_base.1991" }
%"class.absl::optional_internal::optional_data_dtor_base.1991" = type { i8, %union.anon.1992 }
%union.anon.1992 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.463", %"class.WTF::String", i64, i64, %"class.WTF::Vector.1121", %"class.WTF::Vector.1993" }
%"class.WTF::Vector.1121" = type { %"class.WTF::VectorBuffer.1122" }
%"class.WTF::VectorBuffer.1122" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.1993" = type { %"class.WTF::VectorBuffer.1994" }
%"class.WTF::VectorBuffer.1994" = type { %"class.WTF::VectorBufferBase.1995" }
%"class.WTF::VectorBufferBase.1995" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1998 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.1999 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.282", %"class.absl::optional.282" }
%"class.absl::optional.1920" = type { %"class.absl::optional_internal::optional_data.1921" }
%"class.absl::optional_internal::optional_data.1921" = type { %"class.absl::optional_internal::optional_data_base.1922" }
%"class.absl::optional_internal::optional_data_base.1922" = type { %"class.absl::optional_internal::optional_data_dtor_base.1923" }
%"class.absl::optional_internal::optional_data_dtor_base.1923" = type { i8, %union.anon.1924 }
%union.anon.1924 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1913" }
%"class.base::time_internal::TimeBase.1913" = type { i64 }
%"class.absl::optional.2000" = type { %"class.absl::optional_internal::optional_data.2001" }
%"class.absl::optional_internal::optional_data.2001" = type { %"class.absl::optional_internal::optional_data_base.2002" }
%"class.absl::optional_internal::optional_data_base.2002" = type { %"class.absl::optional_internal::optional_data_dtor_base.2003" }
%"class.absl::optional_internal::optional_data_dtor_base.2003" = type { i8, %union.anon.2004 }
%union.anon.2004 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.2171" = type { %"class.mojo::internal::InterfacePtrState.2172" }
%"class.mojo::internal::InterfacePtrState.2172" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2173" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.159, %"class.std::__1::unique_ptr.277", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.161, i32 }>
%class.scoped_refptr.159 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.161, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.239", %"class.absl::optional.244", %"class.absl::optional.200", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.268", i8, [7 x i8], %class.scoped_refptr.161, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.160" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.161, %"class.std::__1::unique_ptr.185", %"class.absl::optional", %"struct.std::__1::atomic.196", i8, i8, i8, i8, i32, i32, %"class.absl::optional.200", %"class.std::__1::unique_ptr.205", i8, i64, %class.scoped_refptr.235, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.238" }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.161, i8, %"class.mojo::ScopedHandleBase.188", %class.scoped_refptr.189, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.190" }
%"class.mojo::ScopedHandleBase.188" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.189 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.190" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.194 }
%union.anon.194 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.195", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.195" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.208", i8, i64, %class.scoped_refptr.209, %class.scoped_refptr.231 }
%"class.base::RepeatingCallback.208" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.209 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.210", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.220", i8, [7 x i8] }>
%"class.base::RefCounted.210" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.211 }
%class.scoped_refptr.211 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.220" = type { %"class.std::__1::__tree.221" }
%"class.std::__1::__tree.221" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%class.scoped_refptr.231 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.235 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.238" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.239" = type { %"class.absl::optional_internal::optional_data.240" }
%"class.absl::optional_internal::optional_data.240" = type { %"class.absl::optional_internal::optional_data_base.241" }
%"class.absl::optional_internal::optional_data_base.241" = type { %"class.absl::optional_internal::optional_data_dtor_base.242" }
%"class.absl::optional_internal::optional_data_dtor_base.242" = type { i8, %union.anon.243 }
%union.anon.243 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.244" = type { %"class.absl::optional_internal::optional_data.245" }
%"class.absl::optional_internal::optional_data.245" = type { %"class.absl::optional_internal::optional_data_base.246" }
%"class.absl::optional_internal::optional_data_base.246" = type { %"class.absl::optional_internal::optional_data_dtor_base.247" }
%"class.absl::optional_internal::optional_data_dtor_base.247" = type { i8, [7 x i8], %union.anon.248 }
%union.anon.248 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.200" = type { %"class.absl::optional_internal::optional_data.201" }
%"class.absl::optional_internal::optional_data.201" = type { %"class.absl::optional_internal::optional_data_base.202" }
%"class.absl::optional_internal::optional_data_base.202" = type { %"class.absl::optional_internal::optional_data_dtor_base.203" }
%"class.absl::optional_internal::optional_data_dtor_base.203" = type { i8, %union.anon.204 }
%union.anon.204 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.253 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.253 = type { %"class.std::__1::map.256" }
%"class.std::__1::map.256" = type { %"class.std::__1::__tree.257" }
%"class.std::__1::__tree.257" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.258", %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.267"*, i64 }
%"class.std::__1::unique_ptr.267" = type opaque
%"class.std::__1::map.268" = type { %"class.std::__1::__tree.269" }
%"class.std::__1::__tree.269" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2173" = type { %"class.std::__1::__compressed_pair.2174" }
%"class.std::__1::__compressed_pair.2174" = type { %"struct.std::__1::__compressed_pair_elem.2175" }
%"struct.std::__1::__compressed_pair_elem.2175" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%class.scoped_refptr.358 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.282", %"class.absl::optional.282", %"class.absl::optional.282", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.2179", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.1576" }
%"class.WTF::Vector.2179" = type { %"class.WTF::VectorBuffer.2180" }
%"class.WTF::VectorBuffer.2180" = type { %"class.WTF::VectorBufferBase.2181" }
%"class.WTF::VectorBufferBase.2181" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.2184" = type { %"class.blink::MemberBase.2185" }
%"class.blink::MemberBase.2185" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.2025" = type { %"class.std::__1::__compressed_pair.2026" }
%"class.std::__1::__compressed_pair.2026" = type { %"struct.std::__1::__compressed_pair_elem.2027" }
%"struct.std::__1::__compressed_pair_elem.2027" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map.1522", %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair.397"*, %"struct.std::__1::pair.397"*, %"class.std::__1::__compressed_pair.398" }
%"struct.std::__1::pair.397" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"struct.std::__1::pair.397"* }
%"class.WTF::Vector.2186" = type { %"class.WTF::VectorBuffer.2187" }
%"class.WTF::VectorBuffer.2187" = type { %"class.WTF::VectorBufferBase.2188" }
%"class.WTF::VectorBufferBase.2188" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.2191 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.2192", i64, %"class.WTF::Vector.2194", %"class.WTF::Vector.2199" }
%"class.WTF::RefCounted.2192" = type { %"class.base::RefCounted.2193" }
%"class.base::RefCounted.2193" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2194" = type { %"class.WTF::VectorBuffer.2195" }
%"class.WTF::VectorBuffer.2195" = type { %"class.WTF::VectorBufferBase.2196" }
%"class.WTF::VectorBufferBase.2196" = type { i8*, i32, i32 }
%"class.WTF::Vector.2199" = type { %"class.WTF::VectorBuffer.2200" }
%"class.WTF::VectorBuffer.2200" = type { %"class.WTF::VectorBufferBase.2201" }
%"class.WTF::VectorBufferBase.2201" = type { %"class.std::__1::unique_ptr.2202"*, i32, i32 }
%"class.std::__1::unique_ptr.2202" = type opaque
%class.scoped_refptr.2205 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.2210", %"class.std::__1::unique_ptr.2215", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.2210" = type { %"class.WTF::HashTable.2211" }
%"class.WTF::HashTable.2211" = type <{ %"struct.WTF::KeyValuePair.2214"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2214" = type { %"class.WTF::Vector.2368", %class.scoped_refptr.2373 }
%"class.WTF::Vector.2368" = type { %"class.WTF::VectorBuffer.2369" }
%"class.WTF::VectorBuffer.2369" = type { %"class.WTF::VectorBufferBase.2370", [32 x i8] }
%class.scoped_refptr.2373 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.2374", %"class.WTF::Vector.2376", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.2374" = type { %"class.base::RefCounted.2375" }
%"class.base::RefCounted.2375" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2380", i64, %"class.absl::optional.2385" }
%"class.std::__1::unique_ptr.2380" = type { %"class.std::__1::__compressed_pair.2381" }
%"class.std::__1::__compressed_pair.2381" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"class.absl::optional.2385" = type { %"class.absl::optional_internal::optional_data.2386" }
%"class.absl::optional_internal::optional_data.2386" = type { %"class.absl::optional_internal::optional_data_base.2387" }
%"class.absl::optional_internal::optional_data_base.2387" = type { %"class.absl::optional_internal::optional_data_dtor_base.2388" }
%"class.absl::optional_internal::optional_data_dtor_base.2388" = type { i8, %union.anon.2389 }
%union.anon.2389 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.2390", %"class.std::__1::unique_ptr.2391" }
%"class.mojo::ScopedHandleBase.2390" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2391" = type { %"class.std::__1::__compressed_pair.2392" }
%"class.std::__1::__compressed_pair.2392" = type { %"struct.std::__1::__compressed_pair_elem.2393" }
%"struct.std::__1::__compressed_pair_elem.2393" = type { i8* }
%"class.std::__1::unique_ptr.2215" = type { %"class.std::__1::__compressed_pair.2216" }
%"class.std::__1::__compressed_pair.2216" = type { %"struct.std::__1::__compressed_pair_elem.2217" }
%"struct.std::__1::__compressed_pair_elem.2217" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Member.2221" = type { %"class.blink::MemberBase.2222" }
%"class.blink::MemberBase.2222" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.2227" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.2223", %"class.std::__1::bitset.2223", %"class.std::__1::bitset.2225" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2223" = type { %"class.std::__1::__bitset.2224" }
%"class.std::__1::__bitset.2224" = type { [11 x i64] }
%"class.std::__1::bitset.2225" = type { %"class.std::__1::__bitset.2226" }
%"class.std::__1::__bitset.2226" = type { [2 x i64] }
%"class.blink::HeapHashSet.2227" = type { %"class.WTF::HashSet.2230" }
%"class.WTF::HashSet.2230" = type { %"class.WTF::HashTable.2231" }
%"class.WTF::HashTable.2231" = type <{ %"class.blink::Member.2233"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2233" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.WTF::Vector.2234" = type { %"class.WTF::VectorBuffer.2235" }
%"class.WTF::VectorBuffer.2235" = type { %"class.WTF::VectorBufferBase.2236" }
%"class.WTF::VectorBufferBase.2236" = type { i32*, i32, i32 }
%"class.blink::WebVector.2146" = type { %"class.std::__1::vector.2147" }
%"class.std::__1::vector.2147" = type { %"class.std::__1::__vector_base.2148" }
%"class.std::__1::__vector_base.2148" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.2149" }
%"class.std::__1::__compressed_pair.2149" = type { %"struct.std::__1::__compressed_pair_elem.2150" }
%"struct.std::__1::__compressed_pair_elem.2150" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.2239" = type { %"class.mojo::internal::InterfacePtrState.2240" }
%"class.mojo::internal::InterfacePtrState.2240" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2241" }
%"class.std::__1::unique_ptr.2241" = type { %"class.std::__1::__compressed_pair.2242" }
%"class.std::__1::__compressed_pair.2242" = type { %"struct.std::__1::__compressed_pair_elem.2243" }
%"struct.std::__1::__compressed_pair_elem.2243" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1578" = type { %"class.std::__1::__compressed_pair.1579" }
%"class.std::__1::__compressed_pair.1579" = type { %"struct.std::__1::__compressed_pair_elem.1580" }
%"struct.std::__1::__compressed_pair_elem.1580" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.WTF::HashSet.1584" = type { %"class.WTF::HashTable.1585" }
%"class.WTF::HashTable.1585" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1588" = type { %"class.blink::MemberBase.1589" }
%"class.blink::MemberBase.1589" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1679", %"class.blink::Member.665", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1684", i8, i32, %"class.blink::Color", %"class.absl::optional.1686", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1691", %"class.blink::Member.1693", %"class.blink::Member.1693", %"class.std::__1::unique_ptr.1696", i32, [4 x i8], %"class.WTF::HashSet.1699", %"class.blink::Member.1706", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1708", %"class.blink::HeapHashSet.1715", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1723", i8, %"class.blink::Member.1729", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1741", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1755", i8, %"class.std::__1::unique_ptr.1761", %"class.std::__1::unique_ptr.1878", %"class.WTF::Vector.1884", i32, %class.scoped_refptr.1889, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1890", %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::HeapHashSet.1896", %"class.blink::HeapHashSet.1903", %"class.std::__1::unique_ptr.1910", %"class.std::__1::unique_ptr.1917", %"class.WTF::Vector.115" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1679" = type { %"class.WTF::HashTable.1680" }
%"class.WTF::HashTable.1680" = type <{ %class.scoped_refptr.1683*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1683 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1684" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1685", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.934, %"class.base::WeakPtrFactory.935" }
%class.scoped_refptr.934 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory.935" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1685" = type { %"class.blink::MemberBase.1589" }
%"class.blink::Color" = type { i32 }
%"class.absl::optional.1686" = type { %"class.absl::optional_internal::optional_data.1687" }
%"class.absl::optional_internal::optional_data.1687" = type { %"class.absl::optional_internal::optional_data_base.1688" }
%"class.absl::optional_internal::optional_data_base.1688" = type { %"class.absl::optional_internal::optional_data_dtor_base.1689" }
%"class.absl::optional_internal::optional_data_dtor_base.1689" = type { i8, %union.anon.1690 }
%union.anon.1690 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1691" = type { %"class.blink::MemberBase.1692" }
%"class.blink::MemberBase.1692" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1693" = type { %"class.blink::MemberBase.1694" }
%"class.blink::MemberBase.1694" = type { %"class.blink::HeapHashSet.1695"* }
%"class.blink::HeapHashSet.1695" = type opaque
%"class.std::__1::unique_ptr.1696" = type { %"class.std::__1::__compressed_pair.1697" }
%"class.std::__1::__compressed_pair.1697" = type { %"struct.std::__1::__compressed_pair_elem.1698" }
%"struct.std::__1::__compressed_pair_elem.1698" = type { %"class.WTF::HashSet.1699"* }
%"class.WTF::HashSet.1699" = type { %"class.WTF::HashTable.1700" }
%"class.WTF::HashTable.1700" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::Member.1706" = type { %"class.blink::MemberBase.1707" }
%"class.blink::MemberBase.1707" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1708" = type { %"class.WTF::HashSet.1711" }
%"class.WTF::HashSet.1711" = type { %"class.WTF::HashTable.1712" }
%"class.WTF::HashTable.1712" = type <{ %"class.blink::Member.1714"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1714" = type opaque
%"class.blink::HeapHashSet.1715" = type { %"class.WTF::HashSet.1718" }
%"class.WTF::HashSet.1718" = type { %"class.WTF::HashTable.1719" }
%"class.WTF::HashTable.1719" = type <{ %"class.blink::Member.1721"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1721" = type { %"class.blink::MemberBase.1722" }
%"class.blink::MemberBase.1722" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1951", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1962", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.21" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.1953", %"class.blink::Member.1954", %"class.blink::Member.1956", %"class.blink::Member.1958", %"class.blink::Member.1960", %"class.WTF::Vector.115", i16, %class.scoped_refptr.934 }
%"class.blink::ThreadState::PrefinalizerRegistration.1953" = type { i8 }
%"class.blink::Member.1954" = type { %"class.blink::MemberBase.1955" }
%"class.blink::MemberBase.1955" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1956" = type { %"class.blink::MemberBase.1957" }
%"class.blink::MemberBase.1957" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1958" = type { %"class.blink::MemberBase.1959" }
%"class.blink::MemberBase.1959" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1960" = type { %"class.blink::MemberBase.1961" }
%"class.blink::MemberBase.1961" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type opaque
%"class.blink::HeapTaskRunnerTimer.1962" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1963", { i64, i64 } }
%"class.blink::WeakMember.1963" = type { %"class.blink::MemberBase.1722" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1723" = type { %"class.std::__1::__compressed_pair.1724" }
%"class.std::__1::__compressed_pair.1724" = type { %"struct.std::__1::__compressed_pair_elem.1725" }
%"struct.std::__1::__compressed_pair_elem.1725" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1729" = type { %"class.blink::MemberBase.1730" }
%"class.blink::MemberBase.1730" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1733", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1733" = type { %"class.WTF::HashTable.1734" }
%"class.WTF::HashTable.1734" = type <{ %"struct.WTF::KeyValuePair.1736"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1736" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1737", i32, i32 }
%"class.WTF::Vector.1737" = type { %"class.WTF::VectorBuffer.1738" }
%"class.WTF::VectorBuffer.1738" = type { %"class.WTF::VectorBufferBase.1739" }
%"class.WTF::VectorBufferBase.1739" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1741" = type { %"class.WTF::LinkedHashSet.1744" }
%"class.WTF::LinkedHashSet.1744" = type { %"class.WTF::HashMap.1745", %"class.WTF::VectorBackedLinkedList.1749" }
%"class.WTF::HashMap.1745" = type { %"class.WTF::HashTable.1746" }
%"class.WTF::HashTable.1746" = type <{ %"struct.WTF::KeyValuePair.1748"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1748" = type opaque
%"class.WTF::VectorBackedLinkedList.1749" = type { %"class.WTF::Vector.1750", i32, i32 }
%"class.WTF::Vector.1750" = type { %"class.WTF::VectorBuffer.1751" }
%"class.WTF::VectorBuffer.1751" = type { %"class.WTF::VectorBufferBase.1752" }
%"class.WTF::VectorBufferBase.1752" = type { %"class.WTF::VectorBackedLinkedListNode.1753"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1753" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1755" = type { %"class.std::__1::__compressed_pair.1756" }
%"class.std::__1::__compressed_pair.1756" = type { %"struct.std::__1::__compressed_pair_elem.1757" }
%"struct.std::__1::__compressed_pair_elem.1757" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1761" = type { %"class.std::__1::__compressed_pair.1762" }
%"class.std::__1::__compressed_pair.1762" = type { %"struct.std::__1::__compressed_pair_elem.1763" }
%"struct.std::__1::__compressed_pair_elem.1763" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1764, %class.scoped_refptr.1764, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1855", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1860", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1764 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1765", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1772" }
%"class.WTF::RefCounted.1765" = type { %"class.base::RefCounted.1766" }
%"class.base::RefCounted.1766" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1767", i32, [4 x i8] }>
%"class.WTF::Vector.1767" = type { %"class.WTF::VectorBuffer.1768" }
%"class.WTF::VectorBuffer.1768" = type { %"class.WTF::VectorBufferBase.1769" }
%"class.WTF::VectorBufferBase.1769" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1772" = type { %"class.WTF::VectorBuffer.1773" }
%"class.WTF::VectorBuffer.1773" = type { %"class.WTF::VectorBufferBase.1774" }
%"class.WTF::VectorBufferBase.1774" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1778", %"class.std::__1::unique_ptr.1827", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1775, %class.scoped_refptr.1776, %class.scoped_refptr.1777 }
%class.scoped_refptr.1775 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1791", i8, i8, %class.scoped_refptr.1775, i32, i32 }
%"class.WTF::RefCounted.1791" = type { %"class.base::RefCounted.1792" }
%"class.base::RefCounted.1792" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1776 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1946" }
%"class.blink::PaintPropertyNode.1946" = type { %"class.WTF::RefCounted.1947", i8, i8, %class.scoped_refptr.1776, i32, i32 }
%"class.WTF::RefCounted.1947" = type { %"class.base::RefCounted.1948" }
%"class.base::RefCounted.1948" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1777 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1943" }
%"class.blink::PaintPropertyNode.1943" = type { %"class.WTF::RefCounted.1944", i8, i8, %class.scoped_refptr.1777, i32, i32 }
%"class.WTF::RefCounted.1944" = type { %"class.base::RefCounted.1945" }
%"class.base::RefCounted.1945" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1778" = type { %"class.std::__1::__compressed_pair.1779" }
%"class.std::__1::__compressed_pair.1779" = type { %"struct.std::__1::__compressed_pair_elem.1780" }
%"struct.std::__1::__compressed_pair_elem.1780" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1781", %"class.WTF::Vector.1786", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1781" = type { %"class.WTF::VectorBuffer.1782" }
%"class.WTF::VectorBuffer.1782" = type { %"class.WTF::VectorBufferBase.1783" }
%"class.WTF::VectorBufferBase.1783" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.1786" = type { %"class.WTF::VectorBuffer.1787" }
%"class.WTF::VectorBuffer.1787" = type { %"class.WTF::VectorBufferBase.1788" }
%"class.WTF::VectorBufferBase.1788" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1806" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1799, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1800", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1793" }
%"class.std::__1::unique_ptr.1793" = type { %"class.std::__1::__compressed_pair.1794" }
%"class.std::__1::__compressed_pair.1794" = type { %"struct.std::__1::__compressed_pair_elem.1795" }
%"struct.std::__1::__compressed_pair_elem.1795" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1799 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1928", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1928" = type { %"class.WTF::RefCounted.1929", i8, i8, %class.scoped_refptr.1799, i32, i32 }
%"class.WTF::RefCounted.1929" = type { %"class.base::RefCounted.1930" }
%"class.base::RefCounted.1930" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1931" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1931" = type { %"class.absl::optional_internal::optional_data.1932" }
%"class.absl::optional_internal::optional_data.1932" = type { %"class.absl::optional_internal::optional_data_base.1933" }
%"class.absl::optional_internal::optional_data_base.1933" = type { %"class.absl::optional_internal::optional_data_dtor_base.1934" }
%"class.absl::optional_internal::optional_data_dtor_base.1934" = type { i8, %union.anon.1935 }
%union.anon.1935 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1936", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1936" = type { %"class.std::__1::__vector_base.1937" }
%"class.std::__1::__vector_base.1937" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1938" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1938" = type { %"struct.std::__1::__compressed_pair_elem.1939" }
%"struct.std::__1::__compressed_pair_elem.1939" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1800" = type { %"class.std::__1::__compressed_pair.1801" }
%"class.std::__1::__compressed_pair.1801" = type { %"struct.std::__1::__compressed_pair_elem.1802" }
%"struct.std::__1::__compressed_pair_elem.1802" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1806" = type { %"class.std::__1::__compressed_pair.1807" }
%"class.std::__1::__compressed_pair.1807" = type { %"struct.std::__1::__compressed_pair_elem.1808" }
%"struct.std::__1::__compressed_pair_elem.1808" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1809", %"class.std::__1::unique_ptr.1815", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1809" = type { %"class.std::__1::__compressed_pair.1810" }
%"class.std::__1::__compressed_pair.1810" = type { %"struct.std::__1::__compressed_pair_elem.1811" }
%"struct.std::__1::__compressed_pair_elem.1811" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1815" = type { %"class.std::__1::__compressed_pair.1816" }
%"class.std::__1::__compressed_pair.1816" = type { %"struct.std::__1::__compressed_pair_elem.1817" }
%"struct.std::__1::__compressed_pair_elem.1817" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1827" = type { %"class.std::__1::__compressed_pair.1828" }
%"class.std::__1::__compressed_pair.1828" = type { %"struct.std::__1::__compressed_pair_elem.1829" }
%"struct.std::__1::__compressed_pair_elem.1829" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1830", %"class.absl::optional.1830" }
%"class.absl::optional.1830" = type { %"class.absl::optional_internal::optional_data.1831" }
%"class.absl::optional_internal::optional_data.1831" = type { %"class.absl::optional_internal::optional_data_base.1832" }
%"class.absl::optional_internal::optional_data_base.1832" = type { %"class.absl::optional_internal::optional_data_dtor_base.1833" }
%"class.absl::optional_internal::optional_data_dtor_base.1833" = type { i8, [3 x i8], %union.anon.1834 }
%union.anon.1834 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1772"*, %"class.absl::optional.1840", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1840" = type { %"class.absl::optional_internal::optional_data.1841" }
%"class.absl::optional_internal::optional_data.1841" = type { %"class.absl::optional_internal::optional_data_base.1842" }
%"class.absl::optional_internal::optional_data_base.1842" = type { %"class.absl::optional_internal::optional_data_dtor_base.1843" }
%"class.absl::optional_internal::optional_data_dtor_base.1843" = type { i8, %union.anon.1844 }
%union.anon.1844 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1845", %"class.WTF::Vector.1850" }
%"class.WTF::Vector.1845" = type { %"class.WTF::VectorBuffer.1846" }
%"class.WTF::VectorBuffer.1846" = type { %"class.WTF::VectorBufferBase.1847", [128 x i8] }
%"class.WTF::VectorBufferBase.1847" = type { i32*, i32, i32 }
%"class.WTF::Vector.1850" = type { %"class.WTF::VectorBuffer.1851" }
%"class.WTF::VectorBuffer.1851" = type { %"class.WTF::VectorBufferBase.1852", [128 x i8] }
%"class.WTF::VectorBufferBase.1852" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1855" = type { %"class.WTF::VectorBuffer.1856" }
%"class.WTF::VectorBuffer.1856" = type { %"class.WTF::VectorBufferBase.1857" }
%"class.WTF::VectorBufferBase.1857" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1860" = type { %"class.WTF::HashTable.1861" }
%"class.WTF::HashTable.1861" = type <{ %"struct.WTF::KeyValuePair.1864"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1864" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1865", %"class.WTF::Vector.1870" }
%"class.WTF::HashMap.1865" = type { %"class.WTF::HashTable.1866" }
%"class.WTF::HashTable.1866" = type <{ %"struct.WTF::KeyValuePair.1869"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1869" = type opaque
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1884" = type { %"class.WTF::VectorBuffer.1885" }
%"class.WTF::VectorBuffer.1885" = type { %"class.WTF::VectorBufferBase.1886" }
%"class.WTF::VectorBufferBase.1886" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1889 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1890" = type { %"class.blink::MemberBase.1891" }
%"class.blink::MemberBase.1891" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1896" = type { %"class.WTF::HashSet.1899" }
%"class.WTF::HashSet.1899" = type { %"class.WTF::HashTable.1900" }
%"class.WTF::HashTable.1900" = type <{ %"class.blink::WeakMember.1902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1902" = type opaque
%"class.blink::HeapHashSet.1903" = type { %"class.WTF::HashSet.1906" }
%"class.WTF::HashSet.1906" = type { %"class.WTF::HashTable.1907" }
%"class.WTF::HashTable.1907" = type <{ %"class.blink::WeakMember.1909"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1909" = type opaque
%"class.std::__1::unique_ptr.1910" = type { %"class.std::__1::__compressed_pair.1911" }
%"class.std::__1::__compressed_pair.1911" = type { %"struct.std::__1::__compressed_pair_elem.1912" }
%"struct.std::__1::__compressed_pair_elem.1912" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.1917" = type { %"class.std::__1::__compressed_pair.1918" }
%"class.std::__1::__compressed_pair.1918" = type { %"struct.std::__1::__compressed_pair_elem.1919" }
%"struct.std::__1::__compressed_pair_elem.1919" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1920", i32, i32, i32, i8, [3 x i8] }>
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1594" = type { %"class.blink::MemberBase.1595" }
%"class.blink::MemberBase.1595" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1596" = type { %"class.blink::MemberBase.1597" }
%"class.blink::MemberBase.1597" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1598" = type { %"class.blink::MemberBase.1599" }
%"class.blink::MemberBase.1599" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type opaque
%class.scoped_refptr.1600 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1607" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1609" = type { %"class.blink::MemberBase.1610" }
%"class.blink::MemberBase.1610" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type opaque
%"class.blink::Member.1611" = type { %"class.blink::MemberBase.1612" }
%"class.blink::MemberBase.1612" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1613" = type { %"class.blink::MemberBase.1614" }
%"class.blink::MemberBase.1614" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote.1615" = type { %"class.blink::Member.1616" }
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.2322" }
%"class.mojo::Remote.2322" = type { %"class.mojo::internal::InterfacePtrState.2323" }
%"class.mojo::internal::InterfacePtrState.2323" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2324" }
%"class.std::__1::unique_ptr.2324" = type { %"class.std::__1::__compressed_pair.2325" }
%"class.std::__1::__compressed_pair.2325" = type { %"struct.std::__1::__compressed_pair_elem.2326" }
%"struct.std::__1::__compressed_pair_elem.2326" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1618" = type { %"class.std::__1::__compressed_pair.1619" }
%"class.std::__1::__compressed_pair.1619" = type { %"struct.std::__1::__compressed_pair_elem.1620" }
%"struct.std::__1::__compressed_pair_elem.1620" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1624" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1625" = type { %"class.std::__1::__compressed_pair.1626" }
%"class.std::__1::__compressed_pair.1626" = type { %"struct.std::__1::__compressed_pair_elem.1627" }
%"struct.std::__1::__compressed_pair_elem.1627" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.std::__1::unique_ptr.1631" = type { %"class.std::__1::__compressed_pair.1632" }
%"class.std::__1::__compressed_pair.1632" = type { %"struct.std::__1::__compressed_pair_elem.1633" }
%"struct.std::__1::__compressed_pair_elem.1633" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1637" }
%"class.blink::Member.1637" = type { %"class.blink::MemberBase.1638" }
%"class.blink::MemberBase.1638" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2332" }
%"class.mojo::AssociatedRemote.2332" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2333" }
%"class.mojo::internal::AssociatedInterfacePtrState.2333" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2334" }
%"class.std::__1::unique_ptr.2334" = type { %"class.std::__1::__compressed_pair.2335" }
%"class.std::__1::__compressed_pair.2335" = type { %"struct.std::__1::__compressed_pair_elem.2336" }
%"struct.std::__1::__compressed_pair_elem.2336" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1639" = type { %"class.blink::Member.1640" }
%"class.blink::Member.1640" = type { %"class.blink::MemberBase.1641" }
%"class.blink::MemberBase.1641" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2342" }
%"class.mojo::AssociatedRemote.2342" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2343" }
%"class.mojo::internal::AssociatedInterfacePtrState.2343" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2344" }
%"class.std::__1::unique_ptr.2344" = type { %"class.std::__1::__compressed_pair.2345" }
%"class.std::__1::__compressed_pair.2345" = type { %"struct.std::__1::__compressed_pair_elem.2346" }
%"struct.std::__1::__compressed_pair_elem.2346" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1642" }
%"class.blink::Member.1642" = type { %"class.blink::MemberBase.1643" }
%"class.blink::MemberBase.1643" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2352", %"class.blink::Member.665", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2352" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2353" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.277" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2353" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1644" = type { %"class.blink::Member.1645" }
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2356", %"class.blink::Member.665", %"class.mojo::AssociatedReceiver.2357" }
%"class.blink::ThreadState::PrefinalizerRegistration.2356" = type { i8 }
%"class.mojo::AssociatedReceiver.2357" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2358" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2358" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1647" }
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2361", %"class.blink::Member.665", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2361" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.159, %"class.std::__1::unique_ptr.277", %"class.base::WeakPtrFactory.2362" }
%"class.base::WeakPtrFactory.2362" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1649" = type { %"class.blink::Member.1650" }
%"class.blink::Member.1650" = type { %"class.blink::MemberBase.1651" }
%"class.blink::MemberBase.1651" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2365", %"class.blink::Member.665", %"class.mojo::AssociatedReceiver.2366" }
%"class.blink::ThreadState::PrefinalizerRegistration.2365" = type { i8 }
%"class.mojo::AssociatedReceiver.2366" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2367" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2367" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1652" = type { %"class.blink::MemberBase.1653" }
%"class.blink::MemberBase.1653" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1658" = type { %"class.blink::MemberBase.1659" }
%"class.blink::MemberBase.1659" = type { %"class.blink::HeapHashMap.1660"* }
%"class.blink::HeapHashMap.1660" = type opaque
%"class.mojo::StructPtr.1661" = type { %"class.std::__1::unique_ptr.1662" }
%"class.std::__1::unique_ptr.1662" = type { %"class.std::__1::__compressed_pair.1663" }
%"class.std::__1::__compressed_pair.1663" = type { %"struct.std::__1::__compressed_pair_elem.1664" }
%"struct.std::__1::__compressed_pair_elem.1664" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1665", %"class.mojo::InlinedStructPtr.1666" }
%"class.mojo::InlinedStructPtr.1665" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1666" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1670" = type { %"class.blink::MemberBase.1671" }
%"class.blink::MemberBase.1671" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.1672" = type { %"class.absl::optional_internal::optional_data.1673" }
%"class.absl::optional_internal::optional_data.1673" = type { %"class.absl::optional_internal::optional_data_base.1674" }
%"class.absl::optional_internal::optional_data_base.1674" = type { %"class.absl::optional_internal::optional_data_dtor_base.1675" }
%"class.absl::optional_internal::optional_data_dtor_base.1675" = type { i8, %union.anon.1676 }
%union.anon.1676 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.148", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map.1522" = type { %"class.base::internal::flat_tree.1523" }
%"class.base::internal::flat_tree.1523" = type { %"class.std::__1::vector.1524" }
%"class.std::__1::vector.1524" = type { %"class.std::__1::__vector_base.1525" }
%"class.std::__1::__vector_base.1525" = type { %"struct.std::__1::pair.1526"*, %"struct.std::__1::pair.1526"*, %"class.std::__1::__compressed_pair.1527" }
%"struct.std::__1::pair.1526" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1527" = type { %"struct.std::__1::__compressed_pair_elem.1528" }
%"struct.std::__1::__compressed_pair_elem.1528" = type { %"struct.std::__1::pair.1526"* }
%"class.blink::Member.1532" = type { %"class.blink::MemberBase.1533" }
%"class.blink::MemberBase.1533" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.1534" = type { %"class.absl::optional_internal::optional_data.1535" }
%"class.absl::optional_internal::optional_data.1535" = type { %"class.absl::optional_internal::optional_data_base.1536" }
%"class.absl::optional_internal::optional_data_base.1536" = type { %"class.absl::optional_internal::optional_data_dtor_base.1537" }
%"class.absl::optional_internal::optional_data_dtor_base.1537" = type { i8, %union.anon.1538 }
%union.anon.1538 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1539" = type { %"class.absl::optional_internal::optional_data.1540" }
%"class.absl::optional_internal::optional_data.1540" = type { %"class.absl::optional_internal::optional_data_base.1541" }
%"class.absl::optional_internal::optional_data_base.1541" = type { %"class.absl::optional_internal::optional_data_dtor_base.1542" }
%"class.absl::optional_internal::optional_data_dtor_base.1542" = type { i8, %union.anon.1543 }
%union.anon.1543 = type { %"class.base::UnguessableToken" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1544" }
%"class.blink::HeapHashSet.1544" = type { %"class.WTF::HashSet.1547" }
%"class.WTF::HashSet.1547" = type { %"class.WTF::HashTable.1548" }
%"class.WTF::HashTable.1548" = type <{ %"class.blink::WeakMember.1550"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1550" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.156" = type { %"class.WTF::VectorBuffer.157" }
%"class.WTF::VectorBuffer.157" = type { %"class.WTF::VectorBufferBase.158" }
%"class.WTF::VectorBufferBase.158" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.327" }
%"class.std::__1::unique_ptr.327" = type { %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::ExecutionContext.base" = type <{ %"class.blink::Supplementable.335", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.412", i32, i8, [3 x i8], %"class.blink::HeapVector.414", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.422", %"class.blink::Member.424", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.433", %"class.blink::Member.492", %"class.blink::Member.516", i8 }>
%"class.blink::Supplementable.335" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.336" }
%"class.blink::HeapHashMap.336" = type { %"class.WTF::HashMap.339" }
%"class.WTF::HashMap.339" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"struct.WTF::KeyValuePair.342"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.342" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.350" }
%"class.blink::Supplementable.350" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.351" }
%"class.blink::HeapHashMap.351" = type { %"class.WTF::HashMap.354" }
%"class.WTF::HashMap.354" = type { %"class.WTF::HashTable.355" }
%"class.WTF::HashTable.355" = type <{ %"struct.WTF::KeyValuePair.357"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.357" = type { i8*, %"class.blink::Member.2291" }
%"class.blink::Member.2291" = type { %"class.blink::MemberBase.2292" }
%"class.blink::MemberBase.2292" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2293" }
%"class.blink::Member.2293" = type { %"class.blink::MemberBase.2294" }
%"class.blink::MemberBase.2294" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.358, %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.394", %"class.std::__1::unique_ptr.394", %"class.blink::Member.406", i32, [4 x i8], %"class.WTF::HashSet.408", i32, i32 }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.370", %"class.std::__1::map.381", %"class.std::__1::map.390"* }
%"class.std::__1::map.370" = type { %"class.std::__1::__tree.371" }
%"class.std::__1::__tree.371" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.372", %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.381" = type { %"class.std::__1::__tree.382" }
%"class.std::__1::__tree.382" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::map.390" = type opaque
%"class.std::__1::unique_ptr.394" = type { %"class.std::__1::__compressed_pair.395" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array", %"class.base::flat_map" }
%"struct.std::__1::array" = type { [14 x %"class.blink::PolicyValue"] }
%"class.WTF::HashSet.408" = type { %"class.WTF::HashTable.409" }
%"class.WTF::HashTable.409" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.414" = type { %"class.WTF::Vector.417" }
%"class.WTF::Vector.417" = type { %"class.WTF::VectorBuffer.418" }
%"class.WTF::VectorBuffer.418" = type { %"class.WTF::VectorBufferBase.419" }
%"class.WTF::VectorBufferBase.419" = type { %"class.blink::Member.420"*, i32, i32 }
%"class.blink::Member.420" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.426", i32, i32 }
%"class.blink::HeapHashMap.426" = type { %"class.WTF::HashMap.429" }
%"class.WTF::HashMap.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"struct.WTF::KeyValuePair.432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.432" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type { %"class.WTF::HashSet.496", %"class.WTF::HashSet.496", %"class.WTF::HashSet.496", %"class.WTF::HashMap.500", %"class.std::__1::unique_ptr.505", %"class.blink::Member.406", %"class.WTF::HashMap.511" }
%"class.WTF::HashSet.496" = type { %"class.WTF::HashTable.497" }
%"class.WTF::HashTable.497" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.500" = type { %"class.WTF::HashTable.501" }
%"class.WTF::HashTable.501" = type <{ %"struct.WTF::KeyValuePair.504"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.504" = type opaque
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.blink::TrialTokenValidator"* }
%"class.blink::TrialTokenValidator" = type { i32 (...)** }
%"class.WTF::HashMap.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type { %"class.WTF::String", %"struct.blink::OriginTrialResult" }
%"struct.blink::OriginTrialResult" = type { %"class.WTF::String", i32, %"class.WTF::Vector.2399" }
%"class.WTF::Vector.2399" = type { %"class.WTF::VectorBuffer.2400" }
%"class.WTF::VectorBuffer.2400" = type { %"class.WTF::VectorBufferBase.2401" }
%"class.WTF::VectorBufferBase.2401" = type { %"struct.blink::OriginTrialTokenResult"*, i32, i32 }
%"struct.blink::OriginTrialTokenResult" = type { %"class.WTF::String", i32, %"class.absl::optional.2402" }
%"class.absl::optional.2402" = type { %"class.absl::optional_internal::optional_data.2403" }
%"class.absl::optional_internal::optional_data.2403" = type { %"class.absl::optional_internal::optional_data_base.2404" }
%"class.absl::optional_internal::optional_data_base.2404" = type { %"class.absl::optional_internal::optional_data_dtor_base.2405" }
%"class.absl::optional_internal::optional_data_dtor_base.2405" = type { i8, %union.anon.2406 }
%union.anon.2406 = type { %"class.blink::TrialToken" }
%"class.blink::TrialToken" = type { %"class.url::Origin", i8, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", i8, i32 }
%"class.blink::Member.516" = type { %"class.blink::MemberBase.517" }
%"class.blink::MemberBase.517" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.424", i8, [7 x i8], %"class.WTF::Vector.439", %"class.blink::HeapVector.520", i8, [7 x i8], %"class.WTF::HashSet.408", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.520" = type { %"class.WTF::Vector.523" }
%"class.WTF::Vector.523" = type { %"class.WTF::VectorBuffer.524" }
%"class.WTF::VectorBuffer.524" = type { %"class.WTF::VectorBufferBase.525" }
%"class.WTF::VectorBufferBase.525" = type { %"class.blink::Member.526"*, i32, i32 }
%"class.blink::Member.526" = type opaque
%"class.blink::Supplementable.528" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.529" }
%"class.blink::HeapHashMap.529" = type { %"class.WTF::HashMap.532" }
%"class.WTF::HashMap.532" = type { %"class.WTF::HashTable.533" }
%"class.WTF::HashTable.533" = type <{ %"struct.WTF::KeyValuePair.535"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.535" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::ScriptController"* }
%"class.blink::ScriptController" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::DOMVisualViewport"* }
%"class.blink::DOMVisualViewport" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::Screen"* }
%"class.blink::Screen" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::History"* }
%"class.blink::History" = type opaque
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::BarProp"* }
%"class.blink::BarProp" = type opaque
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::Navigator"* }
%"class.blink::Navigator" = type opaque
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::StyleMedia"* }
%"class.blink::StyleMedia" = type opaque
%"class.blink::Member.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::CustomElementRegistry"* }
%"class.blink::CustomElementRegistry" = type opaque
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::Modulator"* }
%"class.blink::Modulator" = type opaque
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::External"* }
%"class.blink::External" = type opaque
%"class.WTF::Vector.463" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::ApplicationCache"* }
%"class.blink::ApplicationCache" = type opaque
%class.scoped_refptr.558 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.560", i64, %"class.WTF::Vector.564", %"class.WTF::Vector.569", %"class.WTF::Vector.575", %"class.WTF::Vector.593", %class.scoped_refptr.358, %"class.WTF::HashMap.599", %"class.WTF::Vector.604", %"class.WTF::Vector.564", %"class.WTF::Vector.610", %"class.WTF::HashMap.615", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.559" }
%"class.base::RefCountedThreadSafe.559" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"class.WTF::Vector.569" = type { %"class.WTF::VectorBuffer.570" }
%"class.WTF::VectorBuffer.570" = type { %"class.WTF::VectorBufferBase.571", [8 x i8] }
%"class.WTF::VectorBufferBase.571" = type { %class.scoped_refptr.572*, i32, i32 }
%class.scoped_refptr.572 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.575" = type { %"class.WTF::VectorBuffer.576" }
%"class.WTF::VectorBuffer.576" = type { %"class.WTF::VectorBufferBase.577" }
%"class.WTF::VectorBufferBase.577" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.579", %"class.std::__1::unique_ptr.585" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.578 }
%class.scoped_refptr.578 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.579" = type { %"class.std::__1::__compressed_pair.580" }
%"class.std::__1::__compressed_pair.580" = type { %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.593" = type { %"class.WTF::VectorBuffer.594" }
%"class.WTF::VectorBuffer.594" = type { %"class.WTF::VectorBufferBase.595" }
%"class.WTF::VectorBufferBase.595" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.596", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.596" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.599" = type { %"class.WTF::HashTable.600" }
%"class.WTF::HashTable.600" = type <{ %"struct.WTF::KeyValuePair.603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.603" = type opaque
%"class.WTF::Vector.604" = type { %"class.WTF::VectorBuffer.605" }
%"class.WTF::VectorBuffer.605" = type { %"class.WTF::VectorBufferBase.606" }
%"class.WTF::VectorBufferBase.606" = type { %"class.mojo::ScopedHandleBase.607"*, i32, i32 }
%"class.mojo::ScopedHandleBase.607" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.564" = type { %"class.WTF::VectorBuffer.565" }
%"class.WTF::VectorBuffer.565" = type { %"class.WTF::VectorBufferBase.566", [16 x i8] }
%"class.WTF::VectorBufferBase.566" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.610" = type { %"class.WTF::VectorBuffer.611" }
%"class.WTF::VectorBuffer.611" = type { %"class.WTF::VectorBufferBase.612" }
%"class.WTF::VectorBufferBase.612" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.615" = type { %"class.WTF::HashTable.616" }
%"class.WTF::HashTable.616" = type <{ %"struct.WTF::KeyValuePair.619"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.619" = type { i8**, %"class.std::__1::unique_ptr.2301" }
%"class.std::__1::unique_ptr.2301" = type { %"class.std::__1::__compressed_pair.2302" }
%"class.std::__1::__compressed_pair.2302" = type { %"struct.std::__1::__compressed_pair_elem.2303" }
%"struct.std::__1::__compressed_pair_elem.2303" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::HeapHashSet.620" = type { %"class.WTF::HashSet.623" }
%"class.WTF::HashSet.623" = type { %"class.WTF::HashTable.624" }
%"class.WTF::HashTable.624" = type <{ %"class.blink::WeakMember.626"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.626" = type opaque
%"class.blink::Member.627" = type { %"class.blink::MemberBase.628" }
%"class.blink::MemberBase.628" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.634", %"class.blink::Member.634", %"class.blink::Member.636", %"class.blink::Member.638", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.629" }
%"class.absl::optional.629" = type { %"class.absl::optional_internal::optional_data.630" }
%"class.absl::optional_internal::optional_data.630" = type { %"class.absl::optional_internal::optional_data_base.631" }
%"class.absl::optional_internal::optional_data_base.631" = type { %"class.absl::optional_internal::optional_data_dtor_base.632" }
%"class.absl::optional_internal::optional_data_dtor_base.632" = type { i8, %union.anon.633 }
%union.anon.633 = type { i64 }
%"class.blink::Member.634" = type { %"class.blink::MemberBase.635" }
%"class.blink::MemberBase.635" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.636" = type { %"class.blink::MemberBase.637" }
%"class.blink::MemberBase.637" = type { %"class.blink::Event"* }
%"class.blink::Member.638" = type { %"class.blink::MemberBase.639" }
%"class.blink::MemberBase.639" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::HeapHashMap.640" = type { %"class.WTF::HashMap.643" }
%"class.WTF::HashMap.643" = type { %"class.WTF::HashTable.644" }
%"class.WTF::HashTable.644" = type <{ %"struct.WTF::KeyValuePair.646"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.646" = type opaque
%"class.std::__1::unique_ptr.647" = type { %"class.std::__1::__compressed_pair.648" }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.blink::FrameOrWorkerScheduler"* }
%"class.blink::Member.659" = type { %"class.blink::MemberBase.660" }
%"class.blink::MemberBase.660" = type { %"class.blink::InputMethodController"* }
%"class.blink::InputMethodController" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::Member.665", %"class.blink::CachedTextInputInfo", %"class.blink::Member.676", %"class.blink::Member.678", i8, i32 }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CachedTextInputInfo" = type { %"class.blink::Member.667", %"class.blink::LayoutObject"*, %"class.blink::HeapHashMap.669", %"class.WTF::String", %"class.blink::CachedTextInputInfo::CachedPlainTextRange", %"class.blink::CachedTextInputInfo::CachedPlainTextRange" }
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::ContainerNode"* }
%"class.blink::HeapHashMap.669" = type { %"class.WTF::HashMap.672" }
%"class.WTF::HashMap.672" = type { %"class.WTF::HashTable.673" }
%"class.WTF::HashTable.673" = type <{ %"struct.WTF::KeyValuePair.675"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.675" = type opaque
%"class.blink::CachedTextInputInfo::CachedPlainTextRange" = type { %"class.blink::PositionTemplate", %"class.blink::PositionTemplate", i32, i32 }
%"class.blink::PositionTemplate" = type { %"class.blink::Member", i32, i32 }
%"class.blink::Member.678" = type { %"class.blink::MemberBase.679" }
%"class.blink::MemberBase.679" = type { %"class.blink::EditContext"* }
%"class.blink::EditContext" = type opaque
%"class.blink::Member.680" = type { %"class.blink::MemberBase.681" }
%"class.blink::MemberBase.681" = type { %"class.blink::SpellChecker"* }
%"class.blink::SpellChecker" = type { %"class.blink::Member.126", %"class.blink::Member.1508", %"class.blink::Member.1510" }
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::SpellCheckRequester"* }
%"class.blink::SpellCheckRequester" = type opaque
%"class.blink::Member.1510" = type { %"class.blink::MemberBase.1511" }
%"class.blink::MemberBase.1511" = type { %"class.blink::IdleSpellCheckController"* }
%"class.blink::IdleSpellCheckController" = type opaque
%"class.blink::Member.682" = type { %"class.blink::MemberBase.683" }
%"class.blink::MemberBase.683" = type { %"class.blink::TextSuggestionController"* }
%"class.blink::TextSuggestionController" = type { i32 (...)**, i8, %"class.blink::Member.126", %"class.blink::HeapMojoRemote" }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1504" }
%"class.blink::Member.1504" = type { %"class.blink::MemberBase.1505" }
%"class.blink::MemberBase.1505" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::TextSuggestionHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.684" = type { %"class.blink::MemberBase.685" }
%"class.blink::MemberBase.685" = type { %"class.blink::HeapHashMap.686"* }
%"class.blink::HeapHashMap.686" = type opaque
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashSet.692" = type { %"class.WTF::HashTable.693" }
%"class.WTF::HashTable.693" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Deque" = type { %"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<long, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.698" }
%"class.WTF::VectorBuffer.698" = type { %"class.WTF::VectorBufferBase.699" }
%"class.WTF::VectorBufferBase.699" = type { i64*, i32, i32 }
%"class.blink::Member.406" = type { %"class.blink::MemberBase.407" }
%"class.blink::MemberBase.407" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.335", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.412", i32, i8, [3 x i8], %"class.blink::HeapVector.414", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.422", %"class.blink::Member.424", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.433", %"class.blink::Member.492", %"class.blink::Member.516", i8, [7 x i8] }>
%"class.blink::Member.700" = type { %"class.blink::MemberBase.701" }
%"class.blink::MemberBase.701" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.702" = type { %"class.blink::MemberBase.703" }
%"class.blink::MemberBase.703" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member.8", %"class.blink::HeapHashSet.706" }
%"class.blink::HeapHashSet.706" = type { %"class.WTF::HashSet.709" }
%"class.WTF::HashSet.709" = type { %"class.WTF::HashTable.710" }
%"class.WTF::HashTable.710" = type <{ %"class.blink::WeakMember.712"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.712" = type opaque
%"class.blink::Member.713" = type { %"class.blink::MemberBase.714" }
%"class.blink::MemberBase.714" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.717" }
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.blink::KURL"* }
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.61" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.63", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.65, %"class.WTF::Vector.79", %"class.WTF::Vector.79", %"class.blink::Member", %"class.blink::Member.84", %"class.blink::HeapHashSet", %"class.blink::Member.8", %"class.WTF::HashSet.92", %"class.WTF::TextPosition", %"class.blink::Member.96", %"class.blink::HeapVector.98", %"class.blink::Member.105" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.65 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.66", %"class.WTF::Vector.68" }
%"class.WTF::RefCounted.66" = type { %"class.base::RefCounted.67" }
%"class.base::RefCounted.67" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70" }
%"class.WTF::VectorBufferBase.70" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.71", %"class.WTF::String" }
%"class.WTF::Vector.71" = type { %"class.WTF::VectorBuffer.72" }
%"class.WTF::VectorBuffer.72" = type { %"class.WTF::VectorBufferBase.73" }
%"class.WTF::VectorBufferBase.73" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.79" = type { %"class.WTF::VectorBuffer.80" }
%"class.WTF::VectorBuffer.80" = type { %"class.WTF::VectorBufferBase.81" }
%"class.WTF::VectorBufferBase.81" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.86" }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.90" }
%"class.WTF::HashTable.90" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.92" = type { %"class.WTF::HashTable.93" }
%"class.WTF::HashTable.93" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.65, %"class.blink::Member.61", %"class.blink::Member.84" }
%"class.blink::HeapVector.98" = type { %"class.WTF::Vector.101" }
%"class.WTF::Vector.101" = type { %"class.WTF::VectorBuffer.102" }
%"class.WTF::VectorBuffer.102" = type { %"class.WTF::VectorBufferBase.103" }
%"class.WTF::VectorBufferBase.103" = type { %"class.blink::Member.84"*, i32, i32 }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.733 }
%class.scoped_refptr.733 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.734" = type { %"class.WTF::VectorBuffer.735" }
%"class.WTF::VectorBuffer.735" = type { %"class.WTF::VectorBufferBase.736" }
%"class.WTF::VectorBufferBase.736" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.737 }
%class.scoped_refptr.737 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.738", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.738" = type { %"class.base::RefCounted.739" }
%"class.base::RefCounted.739" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.742" }
%"class.blink::HeapHashMap.742" = type { %"class.WTF::HashMap.745" }
%"class.WTF::HashMap.745" = type { %"class.WTF::HashTable.746" }
%"class.WTF::HashTable.746" = type <{ %"struct.WTF::KeyValuePair.748"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.748" = type { %"class.blink::WeakMember.749", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.749" = type { %"class.blink::MemberBase.750" }
%"class.blink::MemberBase.750" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.8", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member", %"class.blink::Member", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.937" }
%"class.blink::HeapHashMap.937" = type { %"class.WTF::HashMap.940" }
%"class.WTF::HashMap.940" = type { %"class.WTF::HashTable.941" }
%"class.WTF::HashTable.941" = type <{ %"struct.WTF::KeyValuePair.943"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.943" = type opaque
%"class.blink::Member.944" = type { %"class.blink::MemberBase.945" }
%"class.blink::MemberBase.945" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.946" = type { %"class.WTF::HashSet.949" }
%"class.WTF::HashSet.949" = type { %"class.WTF::HashTable.950" }
%"class.WTF::HashTable.950" = type <{ %"class.blink::WeakMember.952"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.952" = type opaque
%"class.blink::HeapHashSet.953" = type { %"class.WTF::HashSet.956" }
%"class.WTF::HashSet.956" = type { %"class.WTF::HashTable.957" }
%"class.WTF::HashTable.957" = type <{ %"class.blink::WeakMember.959"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.959" = type opaque
%"class.blink::Member.960" = type { %"class.blink::MemberBase.961" }
%"class.blink::MemberBase.961" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.8", i32, i32, i32, %"class.blink::Member.61", %"class.blink::Member.966", %"class.blink::Member.993", %"class.blink::HeapHashMap.995", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1002", %"class.blink::HeapHashSet.1002", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1008", %"class.blink::Member.1022", %"class.blink::Member.1052", %"class.blink::Member.1054", %"class.blink::Member.1060", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1226", %"class.blink::Member.1232", %"class.blink::HeapHashMap.1234", %"class.blink::HeapHashMap.1241", %"class.std::__1::unique_ptr.1248", i32, %"class.blink::HeapVector.1254", %"class.blink::HeapVector.1254", %"class.blink::HeapVector.978", %"class.blink::HeapHashSet.1262", %"class.blink::HeapHashMap.1269", %"class.blink::Member.1276", %"class.blink::HeapHashMap.1278", %class.scoped_refptr.1285, %class.scoped_refptr.1286, %"class.blink::Member.1190", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1287", %"class.blink::Member.21" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.966" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.0", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.970", %"class.blink::HeapVector.978", i8 }>
%"class.blink::HeapVector.970" = type { %"class.WTF::Vector.973" }
%"class.WTF::Vector.973" = type { %"class.WTF::VectorBuffer.974" }
%"class.WTF::VectorBuffer.974" = type { %"class.WTF::VectorBufferBase.975" }
%"class.WTF::VectorBufferBase.975" = type { %"class.blink::Member.976"*, i32, i32 }
%"class.blink::Member.976" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.989", %"class.blink::Member.991", %"class.blink::Member.991", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.989" = type <{ %"class.blink::Member.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.991" = type { %"class.blink::MemberBase.992" }
%"class.blink::MemberBase.992" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member", %"class.blink::Member.991", %"class.blink::Member.991" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.993" = type { %"class.blink::MemberBase.994" }
%"class.blink::MemberBase.994" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.995" = type { %"class.WTF::HashMap.998" }
%"class.WTF::HashMap.998" = type { %"class.WTF::HashTable.999" }
%"class.WTF::HashTable.999" = type <{ %"struct.WTF::KeyValuePair.1001"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1001" = type opaque
%"class.blink::HeapHashSet.1002" = type { %"class.WTF::HashSet.1005" }
%"class.WTF::HashSet.1005" = type { %"class.WTF::HashTable.1006" }
%"class.WTF::HashTable.1006" = type <{ %"class.blink::Member.0"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1012", %"class.blink::Member.1014" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1018", %"class.blink::Member.1020" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Member.1018" = type { %"class.blink::MemberBase.1019" }
%"class.blink::MemberBase.1019" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1020" = type { %"class.blink::MemberBase.1021" }
%"class.blink::MemberBase.1021" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1480", %"class.blink::Member.1014", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.1480" = type { %"class.WTF::Vector.1483" }
%"class.WTF::Vector.1483" = type { %"class.WTF::VectorBuffer.1484" }
%"class.WTF::VectorBuffer.1484" = type { %"class.WTF::VectorBufferBase.1485" }
%"class.WTF::VectorBufferBase.1485" = type { %"class.blink::Member.1020"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1487, i32, %"class.absl::optional.1488", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.119" }>
%class.sk_sp.1487 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1488" = type { %"class.absl::optional_internal::optional_data.1489" }
%"class.absl::optional_internal::optional_data.1489" = type { %"class.absl::optional_internal::optional_data_base.1490" }
%"class.absl::optional_internal::optional_data_base.1490" = type { %"class.absl::optional_internal::optional_data_dtor_base.1491" }
%"class.absl::optional_internal::optional_data_dtor_base.1491" = type { i8, %union.anon.1492 }
%union.anon.1492 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1022" = type { %"class.blink::MemberBase.1023" }
%"class.blink::MemberBase.1023" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.8", %class.scoped_refptr.1033, %"class.blink::SelectorFilter", %"class.blink::Member.993", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1026" }
%"class.blink::HeapHashMap.1026" = type { %"class.WTF::HashMap.1029" }
%"class.WTF::HashMap.1029" = type { %"class.WTF::HashTable.1030" }
%"class.WTF::HashTable.1030" = type <{ %"struct.WTF::KeyValuePair.1032"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1032" = type opaque
%class.scoped_refptr.1033 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1034", %"class.std::__1::unique_ptr.1046" }
%"class.blink::HeapVector.1034" = type { %"class.WTF::Vector.1037" }
%"class.WTF::Vector.1037" = type { %"class.WTF::VectorBuffer.1038" }
%"class.WTF::VectorBuffer.1038" = type { %"class.WTF::VectorBufferBase.1039" }
%"class.WTF::VectorBufferBase.1039" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.21", %"class.WTF::Vector.1040" }
%"class.WTF::Vector.1040" = type { %"class.WTF::VectorBuffer.1041" }
%"class.WTF::VectorBuffer.1041" = type { %"class.WTF::VectorBufferBase.1042", [16 x i8] }
%"class.WTF::VectorBufferBase.1042" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1046" = type { %"class.std::__1::__compressed_pair.1047" }
%"class.std::__1::__compressed_pair.1047" = type { %"struct.std::__1::__compressed_pair_elem.1048" }
%"struct.std::__1::__compressed_pair_elem.1048" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1058", i8, [7 x i8] }>
%"class.blink::Member.1058" = type { %"class.blink::MemberBase.1059" }
%"class.blink::MemberBase.1059" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1060" = type { %"class.blink::MemberBase.1061" }
%"class.blink::MemberBase.1061" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1082", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1064", %"class.WTF::HashMap.1064", %"class.WTF::HashMap.1064", %"class.WTF::HashMap.1069", %class.scoped_refptr.1074, %class.scoped_refptr.1081, %class.scoped_refptr.1080, %"class.WTF::Vector.79", %"class.WTF::Vector.79", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1064" = type { %"class.WTF::HashTable.1065" }
%"class.WTF::HashTable.1065" = type <{ %"struct.WTF::KeyValuePair.1068"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1068" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2285 }
%class.scoped_refptr.2285 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1075", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1077", %"union.blink::InvalidationSet::Backing.1078", %"union.blink::InvalidationSet::Backing.1079", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1075" = type { %"class.base::RefCounted.1076" }
%"class.base::RefCounted.1076" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1077" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1078" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1079" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1069" = type { %"class.WTF::HashTable.1070" }
%"class.WTF::HashTable.1070" = type <{ %"struct.WTF::KeyValuePair.1073"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1073" = type opaque
%class.scoped_refptr.1074 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1080, %class.scoped_refptr.1080 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1075", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1077", %"union.blink::InvalidationSet::Backing.1078", %"union.blink::InvalidationSet::Backing.1079", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1081 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1080 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1082" = type { %"class.blink::MemberBase.1083" }
%"class.blink::MemberBase.1083" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1086", %"class.blink::HeapHashMap.1086", %"class.blink::HeapHashMap.1086", %"class.blink::HeapHashMap.1086", %"class.blink::HeapVector.1093", %"class.blink::HeapVector.1093", %"class.blink::HeapVector.1093", %"class.blink::HeapVector.1093", %"class.blink::HeapVector.1093", %"class.blink::HeapVector.1093", %"class.blink::HeapVector.1093", %"class.blink::HeapVector.1093", %"class.blink::HeapVector.1093", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1133", %"class.blink::HeapVector.1141", %"class.blink::HeapVector.1149", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1182", %"class.blink::HeapVector.1195", %"class.WTF::Vector.1202", i32, %"class.blink::Member.1208" }
%"class.blink::HeapHashMap.1086" = type { %"class.WTF::HashMap.1089" }
%"class.WTF::HashMap.1089" = type { %"class.WTF::HashTable.1090" }
%"class.WTF::HashTable.1090" = type <{ %"struct.WTF::KeyValuePair.1092"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1092" = type { %"class.WTF::AtomicString", %"class.blink::Member.2299" }
%"class.blink::Member.2299" = type { %"class.blink::MemberBase.2300" }
%"class.blink::MemberBase.2300" = type { %"class.blink::HeapVector.1093"* }
%"class.blink::HeapVector.1093" = type { %"class.WTF::Vector.1096" }
%"class.WTF::Vector.1096" = type { %"class.WTF::VectorBuffer.1097" }
%"class.WTF::VectorBuffer.1097" = type { %"class.WTF::VectorBufferBase.1098" }
%"class.WTF::VectorBufferBase.1098" = type { %"class.blink::Member.1099"*, i32, i32 }
%"class.blink::Member.1099" = type { %"class.blink::MemberBase.1100" }
%"class.blink::MemberBase.1100" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1103", i64, [4 x i32] }
%"class.blink::Member.1103" = type { %"class.blink::MemberBase.1104" }
%"class.blink::MemberBase.1104" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.30", %"class.blink::Member.1128" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1133" = type { %"class.WTF::Vector.1136" }
%"class.WTF::Vector.1136" = type { %"class.WTF::VectorBuffer.1137" }
%"class.WTF::VectorBuffer.1137" = type { %"class.WTF::VectorBufferBase.1138" }
%"class.WTF::VectorBufferBase.1138" = type { %"class.blink::Member.1139"*, i32, i32 }
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.2295" }
%"class.blink::MemberBase.2295" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.30", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1141" = type { %"class.WTF::Vector.1144" }
%"class.WTF::Vector.1144" = type { %"class.WTF::VectorBuffer.1145" }
%"class.WTF::VectorBuffer.1145" = type { %"class.WTF::VectorBufferBase.1146" }
%"class.WTF::VectorBufferBase.1146" = type { %"class.blink::Member.1147"*, i32, i32 }
%"class.blink::Member.1147" = type { %"class.blink::MemberBase.2296" }
%"class.blink::MemberBase.2296" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.30" }
%"class.blink::HeapVector.1149" = type { %"class.WTF::Vector.1152" }
%"class.WTF::Vector.1152" = type { %"class.WTF::VectorBuffer.1153" }
%"class.WTF::VectorBuffer.1153" = type { %"class.WTF::VectorBufferBase.1154" }
%"class.WTF::VectorBufferBase.1154" = type { %"class.blink::Member.1155"*, i32, i32 }
%"class.blink::Member.1155" = type { %"class.blink::MemberBase.1156" }
%"class.blink::MemberBase.1156" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1157", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1157" = type { %"class.WTF::Vector.1160" }
%"class.WTF::Vector.1160" = type { %"class.WTF::VectorBuffer.1161" }
%"class.WTF::VectorBuffer.1161" = type { %"class.WTF::VectorBufferBase.1162" }
%"class.WTF::VectorBufferBase.1162" = type { %"class.blink::Member.1163"*, i32, i32 }
%"class.blink::Member.1163" = type opaque
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.2297" }
%"class.blink::MemberBase.2297" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.30" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.2298" }
%"class.blink::MemberBase.2298" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1190", %"class.blink::Member.1190", %"class.blink::Member.1190", %"class.blink::Member.1190", %"class.blink::Member.1190", %"class.blink::Member.1190", %"class.blink::Member.1190", %"class.blink::Member.1190", %"class.blink::Member.1190", %"class.blink::Member.1190", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type { %"class.blink::MemberBase.1189" }
%"class.blink::MemberBase.1189" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1190", %"class.blink::Member.1190", %"class.blink::Member.1190", %"class.blink::Member.1190", %"class.blink::Member.1190" }
%"class.blink::HeapVector.1195" = type { %"class.WTF::Vector.1198" }
%"class.WTF::Vector.1198" = type { %"class.WTF::VectorBuffer.1199" }
%"class.WTF::VectorBuffer.1199" = type { %"class.WTF::VectorBufferBase.1200" }
%"class.WTF::VectorBufferBase.1200" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1103", i32, i32 }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1205, i8, [7 x i8] }>
%class.scoped_refptr.1205 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1208" = type { %"class.blink::MemberBase.1209" }
%"class.blink::MemberBase.1209" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1212", %"class.blink::HeapHashMap.1212", %"class.blink::HeapHashMap.1212", %"class.blink::HeapHashMap.1212" }
%"class.blink::HeapHashMap.1212" = type { %"class.WTF::HashMap.1215" }
%"class.WTF::HashMap.1215" = type { %"class.WTF::HashTable.1216" }
%"class.WTF::HashTable.1216" = type <{ %"struct.WTF::KeyValuePair.1218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1218" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1219" }
%"class.blink::HeapHashMap.1219" = type { %"class.WTF::HashMap.1222" }
%"class.WTF::HashMap.1222" = type { %"class.WTF::HashTable.1223" }
%"class.WTF::HashTable.1223" = type <{ %"struct.WTF::KeyValuePair.1225"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1225" = type { %"class.blink::Member.6", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2286", %"class.WTF::Vector.2286" }
%"class.WTF::Vector.2286" = type { %"class.WTF::VectorBuffer.2287" }
%"class.WTF::VectorBuffer.2287" = type { %"class.WTF::VectorBufferBase.2288" }
%"class.WTF::VectorBufferBase.2288" = type { %class.scoped_refptr.2285*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1226" = type { %"class.WTF::HashSet.1229" }
%"class.WTF::HashSet.1229" = type { %"class.WTF::HashTable.1230" }
%"class.WTF::HashTable.1230" = type <{ %"class.blink::Member.21"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1232" = type { %"class.blink::MemberBase.1233" }
%"class.blink::MemberBase.1233" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1234" = type { %"class.WTF::HashMap.1237" }
%"class.WTF::HashMap.1237" = type { %"class.WTF::HashTable.1238" }
%"class.WTF::HashTable.1238" = type <{ %"struct.WTF::KeyValuePair.1240"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1240" = type opaque
%"class.blink::HeapHashMap.1241" = type { %"class.WTF::HashMap.1244" }
%"class.WTF::HashMap.1244" = type { %"class.WTF::HashTable.1245" }
%"class.WTF::HashTable.1245" = type <{ %"struct.WTF::KeyValuePair.1247"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1247" = type opaque
%"class.std::__1::unique_ptr.1248" = type { %"class.std::__1::__compressed_pair.1249" }
%"class.std::__1::__compressed_pair.1249" = type { %"struct.std::__1::__compressed_pair_elem.1250" }
%"struct.std::__1::__compressed_pair_elem.1250" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1254" = type { %"class.WTF::Vector.1257" }
%"class.WTF::Vector.1257" = type { %"class.WTF::VectorBuffer.1258" }
%"class.WTF::VectorBuffer.1258" = type { %"class.WTF::VectorBufferBase.1259" }
%"class.WTF::VectorBufferBase.1259" = type { %"struct.std::__1::pair.1260"*, i32, i32 }
%"struct.std::__1::pair.1260" = type opaque
%"class.blink::HeapVector.978" = type { %"class.WTF::Vector.981" }
%"class.WTF::Vector.981" = type { %"class.WTF::VectorBuffer.982" }
%"class.WTF::VectorBuffer.982" = type { %"class.WTF::VectorBufferBase.983" }
%"class.WTF::VectorBufferBase.983" = type { %"struct.std::__1::pair.984"*, i32, i32 }
%"struct.std::__1::pair.984" = type opaque
%"class.blink::HeapHashSet.1262" = type { %"class.WTF::HashSet.1265" }
%"class.WTF::HashSet.1265" = type { %"class.WTF::HashTable.1266" }
%"class.WTF::HashTable.1266" = type <{ %"class.blink::WeakMember.1268"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1268" = type { %"class.blink::MemberBase.62" }
%"class.blink::HeapHashMap.1269" = type { %"class.WTF::HashMap.1272" }
%"class.WTF::HashMap.1272" = type { %"class.WTF::HashTable.1273" }
%"class.WTF::HashTable.1273" = type <{ %"struct.WTF::KeyValuePair.1275"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1275" = type { %"class.WTF::AtomicString", %"class.blink::Member.1155" }
%"class.blink::Member.1276" = type { %"class.blink::MemberBase.1277" }
%"class.blink::MemberBase.1277" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1278" = type { %"class.WTF::HashMap.1281" }
%"class.WTF::HashMap.1281" = type { %"class.WTF::HashTable.1282" }
%"class.WTF::HashTable.1282" = type <{ %"struct.WTF::KeyValuePair.1284"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1284" = type opaque
%class.scoped_refptr.1285 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.1286 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Member.1190" = type { %"class.blink::MemberBase.1191" }
%"class.blink::MemberBase.1191" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::Member.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1293" = type opaque
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.1295" }
%"class.blink::MemberBase.1295" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.0", %"class.blink::HeapVector.55" }
%"class.blink::Member.1296" = type { %"class.blink::MemberBase.1297" }
%"class.blink::MemberBase.1297" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1298" = type { %"class.blink::MemberBase.1299" }
%"class.blink::MemberBase.1299" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1300" = type { %"class.WTF::HashMap.1303" }
%"class.WTF::HashMap.1303" = type { %"class.WTF::HashTable.1304" }
%"class.WTF::HashTable.1304" = type <{ %"struct.WTF::KeyValuePair.1306"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1306" = type opaque
%"class.WTF::Vector.1307" = type { %"class.WTF::VectorBuffer.1308" }
%"class.WTF::VectorBuffer.1308" = type { %"class.WTF::VectorBufferBase.1309" }
%"class.WTF::VectorBufferBase.1309" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1312" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1314" = type { %"class.blink::MemberBase.1315" }
%"class.blink::MemberBase.1315" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::Element"* }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1318" = type { %"class.WTF::Vector.1321" }
%"class.WTF::Vector.1321" = type { %"class.WTF::VectorBuffer.1322" }
%"class.WTF::VectorBuffer.1322" = type { %"class.WTF::VectorBufferBase.1323" }
%"class.WTF::VectorBufferBase.1323" = type { %"class.blink::Member.1324"*, i32, i32 }
%"class.blink::Member.1324" = type opaque
%"class.std::__1::unique_ptr.1326" = type { %"class.std::__1::__compressed_pair.1327" }
%"class.std::__1::__compressed_pair.1327" = type { %"struct.std::__1::__compressed_pair_elem.1328" }
%"struct.std::__1::__compressed_pair_elem.1328" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1332" = type { %"class.WTF::HashSet.1335" }
%"class.WTF::HashSet.1335" = type { %"class.WTF::HashTable.1336" }
%"class.WTF::HashTable.1336" = type <{ %"class.blink::WeakMember.1338"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1338" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1339", i32, [4 x i8] }>
%"class.WTF::Vector.1339" = type { %"class.WTF::VectorBuffer.1340" }
%"class.WTF::VectorBuffer.1340" = type { %"class.WTF::VectorBufferBase.1341" }
%"class.WTF::VectorBufferBase.1341" = type { %"struct.std::__1::pair.1342"*, i32, i32 }
%"struct.std::__1::pair.1342" = type opaque
%"class.blink::Member.1345" = type { %"class.blink::MemberBase.1346" }
%"class.blink::MemberBase.1346" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1347" = type { %"class.WTF::VectorBuffer.1348" }
%"class.WTF::VectorBuffer.1348" = type { %"class.WTF::VectorBufferBase.1349" }
%"class.WTF::VectorBufferBase.1349" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.21"*, i32, i32 }
%"class.blink::HeapVector.1358" = type { %"class.WTF::Vector.1361" }
%"class.WTF::Vector.1361" = type { %"class.WTF::VectorBuffer.1362" }
%"class.WTF::VectorBuffer.1362" = type { %"class.WTF::VectorBufferBase.1363" }
%"class.WTF::VectorBufferBase.1363" = type { %"class.blink::Member.1364"*, i32, i32 }
%"class.blink::Member.1364" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.8" }
%"class.blink::Member.1366" = type { %"class.blink::MemberBase.1367" }
%"class.blink::MemberBase.1367" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1368" = type { %"class.blink::MemberBase.1369" }
%"class.blink::MemberBase.1369" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1370" = type { %"class.blink::MemberBase.1371" }
%"class.blink::MemberBase.1371" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1376" = type { %"class.WTF::HashTable.1377" }
%"class.WTF::HashTable.1377" = type <{ %"struct.WTF::KeyValuePair.1380"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1380" = type opaque
%"class.blink::Member.1381" = type { %"class.blink::MemberBase.1382" }
%"class.blink::MemberBase.1382" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1383" = type { %"class.blink::MemberBase.1384" }
%"class.blink::MemberBase.1384" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.936", { i64, i64 } }
%"class.blink::WeakMember.936" = type { %"class.blink::MemberBase.9" }
%"class.blink::HeapHashSet.1389" = type { %"class.WTF::HashSet.1392" }
%"class.WTF::HashSet.1392" = type { %"class.WTF::HashTable.1393" }
%"class.WTF::HashTable.1393" = type <{ %"class.blink::Member.1395"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1395" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1400" = type { %"class.blink::MemberBase.1401" }
%"class.blink::MemberBase.1401" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1402" = type { %"class.blink::MemberBase.1403" }
%"class.blink::MemberBase.1403" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1404" = type { %"class.blink::MemberBase.1405" }
%"class.blink::MemberBase.1405" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1406" = type { %"class.std::__1::__compressed_pair.1407" }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.1408" }
%"struct.std::__1::__compressed_pair_elem.1408" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1412" = type { %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1414" }
%"struct.std::__1::__compressed_pair_elem.1414" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1418" = type { %"class.blink::MemberBase.1419" }
%"class.blink::MemberBase.1419" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.687" = type { %"class.WTF::VectorBuffer.688" }
%"class.WTF::VectorBuffer.688" = type { %"class.WTF::VectorBufferBase.689" }
%"class.WTF::VectorBufferBase.689" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1426" = type { %"class.WTF::HashMap.1429" }
%"class.WTF::HashMap.1429" = type { %"class.WTF::HashTable.1430" }
%"class.WTF::HashTable.1430" = type <{ %"struct.WTF::KeyValuePair.1432"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1432" = type opaque
%"class.blink::Member.1433" = type { %"class.blink::MemberBase.1434" }
%"class.blink::MemberBase.1434" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1435" = type { %"class.std::__1::__compressed_pair.1436" }
%"class.std::__1::__compressed_pair.1436" = type { %"struct.std::__1::__compressed_pair_elem.1437" }
%"struct.std::__1::__compressed_pair_elem.1437" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1441" = type { %"class.blink::MemberBase.1442" }
%"class.blink::MemberBase.1442" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1443" = type { %"class.blink::MemberBase.1444" }
%"class.blink::MemberBase.1444" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1445" = type { %"class.WTF::HashMap.1448" }
%"class.WTF::HashMap.1448" = type { %"class.WTF::HashTable.1449" }
%"class.WTF::HashTable.1449" = type <{ %"struct.WTF::KeyValuePair.1451"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1451" = type opaque
%"class.blink::HeapObserverSet.1452" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1453" }
%"class.blink::HeapHashSet.1453" = type { %"class.WTF::HashSet.1456" }
%"class.WTF::HashSet.1456" = type { %"class.WTF::HashTable.1457" }
%"class.WTF::HashTable.1457" = type <{ %"class.blink::WeakMember.1459"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1459" = type opaque
%"class.blink::Member.1460" = type { %"class.blink::MemberBase.1461" }
%"class.blink::MemberBase.1461" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1462" = type { %"class.blink::MemberBase.1463" }
%"class.blink::MemberBase.1463" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.8", %"class.blink::HeapHashSet.1469", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1476", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1469" = type { %"class.WTF::HashSet.1472" }
%"class.WTF::HashSet.1472" = type { %"class.WTF::HashTable.1473" }
%"class.WTF::HashTable.1473" = type <{ %"class.blink::Member.1475"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1475" = type opaque
%"class.blink::HeapTaskRunnerTimer.1476" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1477", { i64, i64 } }
%"class.blink::WeakMember.1477" = type { %"class.blink::MemberBase.1463" }
%"class.blink::WeakMember.1464" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1465" = type { %"class.blink::MemberBase.1466" }
%"class.blink::MemberBase.1466" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.24" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.23 }
%class.scoped_refptr.23 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.24" = type { %"class.blink::MemberBase.25" }
%"class.blink::MemberBase.25" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.28", %"class.blink::Member.30", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.28" = type { %"class.WTF::SingleThreadedBitField.29" }
%"class.WTF::SingleThreadedBitField.29" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.35", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ConsoleMessage" = type { i32, i32, %"class.WTF::String", %"class.std::__1::unique_ptr.2250", %"class.WTF::String", double, %"class.WTF::String", %"class.blink::WeakMember.2262", %"class.WTF::Vector.2263" }
%"class.std::__1::unique_ptr.2250" = type { %"class.std::__1::__compressed_pair.2251" }
%"class.std::__1::__compressed_pair.2251" = type { %"struct.std::__1::__compressed_pair_elem.2252" }
%"struct.std::__1::__compressed_pair_elem.2252" = type { %"class.blink::SourceLocation"* }
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.2253", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2253" = type { %"class.std::__1::__compressed_pair.2254" }
%"class.std::__1::__compressed_pair.2254" = type { %"struct.std::__1::__compressed_pair_elem.2255" }
%"struct.std::__1::__compressed_pair_elem.2255" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::WeakMember.2262" = type { %"class.blink::MemberBase.666" }
%"class.WTF::Vector.2263" = type { %"class.WTF::VectorBuffer.2264" }
%"class.WTF::VectorBuffer.2264" = type { %"class.WTF::VectorBufferBase.1847" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::FrameClientHintsPreferencesContext" = type { %"class.blink::ClientHintsPreferences::Context", %"class.blink::LocalFrame"* }
%"class.blink::ClientHintsPreferences::Context" = type { i32 (...)** }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2267" }
%"class.std::__1::unique_ptr.2267" = type { %"class.std::__1::__compressed_pair.2268" }
%"class.std::__1::__compressed_pair.2268" = type { %"struct.std::__1::__compressed_pair_elem.2269" }
%"struct.std::__1::__compressed_pair_elem.2269" = type { %"class.blink::Settings"* }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.2273", %"class.WTF::HashMap.2273", %"class.WTF::HashMap.2273", %"class.WTF::HashMap.2273", %"class.WTF::HashMap.2273", %"class.WTF::HashMap.2273", %"class.WTF::HashMap.2273", %"class.std::__1::unique_ptr.2278" }
%"class.WTF::HashMap.2273" = type { %"class.WTF::HashTable.2274" }
%"class.WTF::HashTable.2274" = type <{ %"struct.WTF::KeyValuePair.2277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2277" = type opaque
%"class.std::__1::unique_ptr.2278" = type { %"class.std::__1::__compressed_pair.2279" }
%"class.std::__1::__compressed_pair.2279" = type { %"struct.std::__1::__compressed_pair_elem.2280" }
%"struct.std::__1::__compressed_pair_elem.2280" = type { %"class.WTF::Vector.2281"* }
%"class.WTF::Vector.2281" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN3WTF22EqualIgnoringASCIICaseILm14EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA112_KcEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_ = comdat any

$_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_ = comdat any

$_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_ = comdat any

$_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v = comdat any

$_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [14 x i8] c"default-style\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"refresh\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c"set-cookie\00", align 1
@.str.3 = private unnamed_addr constant [17 x i8] c"content-language\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"x-dns-prefetch-control\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"x-frame-options\00", align 1
@.str.6 = private unnamed_addr constant [112 x i8] c"X-Frame-Options may only be set via an HTTP header sent along with a document. It may not be set inside <meta>.\00", align 1
@_ZN5blink10http_names9kAcceptCHE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.7 = private unnamed_addr constant [24 x i8] c"content-security-policy\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"content-security-policy-report-only\00", align 1
@_ZN5blink10http_names12kOriginTrialE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.9 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.10 = private unnamed_addr constant [53 x i8] c"Blocked setting the `%s` cookie from a `<meta>` tag.\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase37is_third_party_origin_trials_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.13 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.16 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.17 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::ContentSecurityPolicy>]\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.19 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, WTF::String>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<network::mojom::CSPDirectiveName, mojo::StructPtr<network::mojom::blink::CSPSourceList> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<network::mojom::blink::CSPHashSource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9HttpEquiv7ProcessERNS_8DocumentERKN3WTF12AtomicStringES6_bPNS_7ElementE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), i1 zeroext, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %25

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %22, align 8
  %23 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %24 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %23, i64* %24, align 8
  br label %32

25:                                               ; preds = %5
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %31 = bitcast i8** %30 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %31, align 8
  br label %32

32:                                               ; preds = %21, %25
  %33 = phi i32 [ %28, %25 ], [ 0, %21 ]
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %33, i32* %34, align 8
  %35 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm14EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, [14 x i8]* nonnull dereferenceable(14) @.str)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 59, i32 0, i32 0
  %38 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  call void @_ZN5blink11StyleEngine19SetHttpDefaultStyleERKN3WTF6StringE(%"class.blink::StyleEngine"* %38, %"class.WTF::String"* dereferenceable(8) %39) #11
  br label %403

40:                                               ; preds = %32
  %41 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %48

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %45, align 8
  %46 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %47 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %46, i64* %47, align 8
  br label %55

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %49, align 8
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %54 = bitcast i8** %53 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %52, %"class.WTF::StringImpl"** %54, align 8
  br label %55

55:                                               ; preds = %44, %48
  %56 = phi i32 [ %51, %48 ], [ 0, %44 ]
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %56, i32* %57, align 8
  %58 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, [8 x i8]* nonnull dereferenceable(8) @.str.1)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  br i1 %58, label %59, label %62

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 12, i32 0, i32 0
  %61 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %60, align 8
  call void @_ZN5blink9HttpEquiv23ProcessHttpEquivRefreshEPNS_14LocalDOMWindowERKN3WTF12AtomicStringEPNS_7ElementE(%"class.blink::LocalDOMWindow"* %61, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::Element"* %4)
  br label %403

62:                                               ; preds = %55
  %63 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #11
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %66, label %70

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %67, align 8
  %68 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %69 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %68, i64* %69, align 8
  br label %77

70:                                               ; preds = %62
  %71 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %71, align 8
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 1
  %75 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %76 = bitcast i8** %75 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %76, align 8
  br label %77

77:                                               ; preds = %66, %70
  %78 = phi i32 [ %73, %70 ], [ 0, %66 ]
  %79 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %78, i32* %79, align 8
  %80 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, [11 x i8]* nonnull dereferenceable(11) @.str.2)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #11
  br i1 %80, label %81, label %82

81:                                               ; preds = %77
  call void @_ZN5blink9HttpEquiv25ProcessHttpEquivSetCookieERNS_8DocumentERKN3WTF12AtomicStringEPNS_7ElementE(%"class.blink::Document"* dereferenceable(2848) %0, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::Element"* undef)
  br label %403

82:                                               ; preds = %77
  %83 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %83) #11
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %86, label %90

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %87, align 8
  %88 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %89 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %88, i64* %89, align 8
  br label %97

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %91, align 8
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 1
  %95 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %96 = bitcast i8** %95 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %96, align 8
  br label %97

97:                                               ; preds = %86, %90
  %98 = phi i32 [ %93, %90 ], [ 0, %86 ]
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %98, i32* %99, align 8
  %100 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, [17 x i8]* nonnull dereferenceable(17) @.str.3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %83) #11
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  call void @_ZN5blink8Document18SetContentLanguageERKN3WTF12AtomicStringE(%"class.blink::Document"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %2) #11
  br label %403

102:                                              ; preds = %97
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %190, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 1
  %109 = bitcast %"class.WTF::StringImpl"* %108 to i8*
  %110 = icmp eq i32 %107, 22
  br i1 %110, label %113, label %111

111:                                              ; preds = %105
  %112 = bitcast %"class.WTF::StringView"* %10 to i8*
  br label %195

113:                                              ; preds = %105
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %149, label %133

118:                                              ; preds = %133
  %119 = getelementptr inbounds i8, i8* %109, i64 %148
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i64
  %122 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %121
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.4, i64 0, i64 %148
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = sext i8 %129 to i32
  %131 = icmp eq i32 %124, %130
  %132 = add nuw nsw i64 %134, 2
  br i1 %131, label %474, label %188

133:                                              ; preds = %113, %474
  %134 = phi i64 [ %132, %474 ], [ 0, %113 ]
  %135 = getelementptr inbounds i8, i8* %109, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i64
  %138 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.4, i64 0, i64 %134
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i64
  %144 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %143
  %145 = load i8, i8* %144, align 1
  %146 = sext i8 %145 to i32
  %147 = icmp eq i32 %140, %146
  %148 = or i64 %134, 1
  br i1 %147, label %118, label %188

149:                                              ; preds = %113
  %150 = bitcast %"class.WTF::StringImpl"* %108 to i16*
  br label %168

151:                                              ; preds = %168
  %152 = getelementptr inbounds i16, i16* %150, i64 %185
  %153 = load i16, i16* %152, align 2
  %154 = add i16 %153, -65
  %155 = icmp ult i16 %154, 26
  %156 = zext i1 %155 to i16
  %157 = shl nuw nsw i16 %156, 5
  %158 = or i16 %157, %153
  %159 = zext i16 %158 to i32
  %160 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.4, i64 0, i64 %185
  %161 = load i8, i8* %160, align 1
  %162 = zext i8 %161 to i64
  %163 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %162
  %164 = load i8, i8* %163, align 1
  %165 = sext i8 %164 to i32
  %166 = icmp eq i32 %159, %165
  %167 = add nuw nsw i64 %169, 2
  br i1 %166, label %472, label %188

168:                                              ; preds = %472, %149
  %169 = phi i64 [ 0, %149 ], [ %167, %472 ]
  %170 = getelementptr inbounds i16, i16* %150, i64 %169
  %171 = load i16, i16* %170, align 2
  %172 = add i16 %171, -65
  %173 = icmp ult i16 %172, 26
  %174 = zext i1 %173 to i16
  %175 = shl nuw nsw i16 %174, 5
  %176 = or i16 %175, %171
  %177 = zext i16 %176 to i32
  %178 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.4, i64 0, i64 %169
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %177, %183
  %185 = or i64 %169, 1
  br i1 %184, label %151, label %188

186:                                              ; preds = %474, %472
  %187 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  call void @_ZN5blink8Document29ParseDNSPrefetchControlHeaderERKN3WTF6StringE(%"class.blink::Document"* %0, %"class.WTF::String"* dereferenceable(8) %187) #11
  br label %403

188:                                              ; preds = %133, %118, %168, %151
  %189 = bitcast %"class.WTF::StringView"* %10 to i8*
  br label %195

190:                                              ; preds = %102
  %191 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %191) #11
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %192, align 8
  %193 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %194 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %193, i64* %194, align 8
  br label %201

195:                                              ; preds = %188, %111
  %196 = phi i8* [ %189, %188 ], [ %112, %111 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %196) #11
  %197 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %197, align 8
  %198 = load i32, i32* %106, align 4
  %199 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %200 = bitcast i8** %199 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %200, align 8
  br label %201

201:                                              ; preds = %190, %195
  %202 = phi i8* [ %196, %195 ], [ %191, %190 ]
  %203 = phi i32 [ %198, %195 ], [ 0, %190 ]
  %204 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %203, i32* %204, align 8
  %205 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, [16 x i8]* nonnull dereferenceable(16) @.str.5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %202) #11
  br i1 %205, label %206, label %210

206:                                              ; preds = %201
  %207 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207) #11
  store i32 7, i32* %11, align 4
  %208 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %208) #11
  store i32 3, i32* %12, align 4
  %209 = call %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA112_KcEEEPS1_DpOT_(i32* nonnull dereferenceable(4) %11, i32* nonnull dereferenceable(4) %12, [112 x i8]* nonnull dereferenceable(112) @.str.6) #11
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %0, %"class.blink::ConsoleMessage"* %209, i1 zeroext false) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %208) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207) #11
  br label %403

210:                                              ; preds = %201
  %211 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %211) #11
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %214, label %218

214:                                              ; preds = %210
  %215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* null, i8** %215, align 8
  %216 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %217 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %216, i64* %217, align 8
  br label %225

218:                                              ; preds = %210
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %212, %"class.WTF::StringImpl"** %219, align 8
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 1
  %221 = load i32, i32* %220, align 4
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 1
  %223 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %224 = bitcast i8** %223 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %222, %"class.WTF::StringImpl"** %224, align 8
  br label %225

225:                                              ; preds = %214, %218
  %226 = phi i32 [ %221, %218 ], [ 0, %214 ]
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %226, i32* %227, align 8
  %228 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #11
  %229 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names9kAcceptCHE, align 8
  %230 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %231, null
  br i1 %232, label %233, label %237

233:                                              ; preds = %225
  %234 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %234, align 8
  %235 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %236 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %235, i64* %236, align 8
  br label %244

237:                                              ; preds = %225
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %231, %"class.WTF::StringImpl"** %238, align 8
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 1
  %242 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %243 = bitcast i8** %242 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %241, %"class.WTF::StringImpl"** %243, align 8
  br label %244

244:                                              ; preds = %233, %237
  %245 = phi i32 [ %240, %237 ], [ 0, %233 ]
  %246 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %245, i32* %246, align 8
  %247 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %13, %"class.WTF::StringView"* nonnull dereferenceable(24) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %211) #11
  br i1 %247, label %248, label %249

248:                                              ; preds = %244
  call void @_ZN5blink9HttpEquiv24ProcessHttpEquivAcceptCHERNS_8DocumentERKN3WTF12AtomicStringE(%"class.blink::Document"* dereferenceable(2848) %0, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  br label %403

249:                                              ; preds = %244
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %251, label %364, label %252

252:                                              ; preds = %249
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 1
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 1
  %256 = bitcast %"class.WTF::StringImpl"* %255 to i8*
  switch i32 %254, label %304 [
    i32 23, label %257
    i32 35, label %306
  ]

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %280, label %264

262:                                              ; preds = %264
  %263 = icmp eq i64 %279, 23
  br i1 %263, label %351, label %456

264:                                              ; preds = %257, %470
  %265 = phi i64 [ %471, %470 ], [ 0, %257 ]
  %266 = getelementptr inbounds i8, i8* %256, i64 %265
  %267 = load i8, i8* %266, align 1
  %268 = zext i8 %267 to i64
  %269 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %268
  %270 = load i8, i8* %269, align 1
  %271 = zext i8 %270 to i32
  %272 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.7, i64 0, i64 %265
  %273 = load i8, i8* %272, align 1
  %274 = zext i8 %273 to i64
  %275 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %274
  %276 = load i8, i8* %275, align 1
  %277 = sext i8 %276 to i32
  %278 = icmp eq i32 %271, %277
  %279 = or i64 %265, 1
  br i1 %278, label %262, label %302

280:                                              ; preds = %257
  %281 = bitcast %"class.WTF::StringImpl"* %255 to i16*
  br label %284

282:                                              ; preds = %284
  %283 = icmp eq i64 %301, 23
  br i1 %283, label %351, label %438

284:                                              ; preds = %454, %280
  %285 = phi i64 [ 0, %280 ], [ %455, %454 ]
  %286 = getelementptr inbounds i16, i16* %281, i64 %285
  %287 = load i16, i16* %286, align 2
  %288 = add i16 %287, -65
  %289 = icmp ult i16 %288, 26
  %290 = zext i1 %289 to i16
  %291 = shl nuw nsw i16 %290, 5
  %292 = or i16 %291, %287
  %293 = zext i16 %292 to i32
  %294 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.7, i64 0, i64 %285
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i64
  %297 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %296
  %298 = load i8, i8* %297, align 1
  %299 = sext i8 %298 to i32
  %300 = icmp eq i32 %293, %299
  %301 = or i64 %285, 1
  br i1 %300, label %282, label %302

302:                                              ; preds = %264, %456, %284, %438
  %303 = icmp eq i32 %254, 35
  br i1 %303, label %306, label %304

304:                                              ; preds = %252, %302
  %305 = bitcast %"class.WTF::StringView"* %15 to i8*
  br label %369

306:                                              ; preds = %252, %302
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = and i32 %308, 1
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %329, label %313

311:                                              ; preds = %313
  %312 = icmp eq i64 %328, 35
  br i1 %312, label %351, label %422

313:                                              ; preds = %306, %436
  %314 = phi i64 [ %437, %436 ], [ 0, %306 ]
  %315 = getelementptr inbounds i8, i8* %256, i64 %314
  %316 = load i8, i8* %315, align 1
  %317 = zext i8 %316 to i64
  %318 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %317
  %319 = load i8, i8* %318, align 1
  %320 = zext i8 %319 to i32
  %321 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.8, i64 0, i64 %314
  %322 = load i8, i8* %321, align 1
  %323 = zext i8 %322 to i64
  %324 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %323
  %325 = load i8, i8* %324, align 1
  %326 = sext i8 %325 to i32
  %327 = icmp eq i32 %320, %326
  %328 = or i64 %314, 1
  br i1 %327, label %311, label %362

329:                                              ; preds = %306
  %330 = bitcast %"class.WTF::StringImpl"* %255 to i16*
  br label %333

331:                                              ; preds = %333
  %332 = icmp eq i64 %350, 35
  br i1 %332, label %351, label %404

333:                                              ; preds = %420, %329
  %334 = phi i64 [ 0, %329 ], [ %421, %420 ]
  %335 = getelementptr inbounds i16, i16* %330, i64 %334
  %336 = load i16, i16* %335, align 2
  %337 = add i16 %336, -65
  %338 = icmp ult i16 %337, 26
  %339 = zext i1 %338 to i16
  %340 = shl nuw nsw i16 %339, 5
  %341 = or i16 %340, %336
  %342 = zext i16 %341 to i32
  %343 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.8, i64 0, i64 %334
  %344 = load i8, i8* %343, align 1
  %345 = zext i8 %344 to i64
  %346 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %345
  %347 = load i8, i8* %346, align 1
  %348 = sext i8 %347 to i32
  %349 = icmp eq i32 %342, %348
  %350 = or i64 %334, 1
  br i1 %349, label %331, label %362

351:                                              ; preds = %262, %282, %311, %331
  %352 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 12, i32 0, i32 0
  %353 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %352, align 8
  br i1 %3, label %354, label %355

354:                                              ; preds = %351
  call void @_ZN5blink9HttpEquiv37ProcessHttpEquivContentSecurityPolicyEPNS_14LocalDOMWindowERKN3WTF12AtomicStringES6_(%"class.blink::LocalDOMWindow"* %353, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  br label %403

355:                                              ; preds = %351
  %356 = icmp eq %"class.blink::LocalDOMWindow"* %353, null
  br i1 %356, label %403, label %357

357:                                              ; preds = %355
  %358 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %353, i64 0, i32 1
  %359 = bitcast %"class.blink::ExecutionContext.base"* %358 to %"class.blink::ExecutionContext"*
  %360 = call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %359) #11
  %361 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  call void @_ZN5blink21ContentSecurityPolicy21ReportMetaOutsideHeadERKN3WTF6StringE(%"class.blink::ContentSecurityPolicy"* %360, %"class.WTF::String"* dereferenceable(8) %361) #11
  br label %403

362:                                              ; preds = %313, %422, %333, %404
  %363 = bitcast %"class.WTF::StringView"* %15 to i8*
  br label %369

364:                                              ; preds = %249
  %365 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %365) #11
  %366 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* null, i8** %366, align 8
  %367 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %368 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %367, i64* %368, align 8
  br label %375

369:                                              ; preds = %362, %304
  %370 = phi i8* [ %363, %362 ], [ %305, %304 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %370) #11
  %371 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 0
  store %"class.WTF::StringImpl"* %250, %"class.WTF::StringImpl"** %371, align 8
  %372 = load i32, i32* %253, align 4
  %373 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %374 = bitcast i8** %373 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %255, %"class.WTF::StringImpl"** %374, align 8
  br label %375

375:                                              ; preds = %364, %369
  %376 = phi i8* [ %370, %369 ], [ %365, %364 ]
  %377 = phi i32 [ %372, %369 ], [ 0, %364 ]
  %378 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 %377, i32* %378, align 8
  %379 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %379) #11
  %380 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink10http_names12kOriginTrialE, align 8
  %381 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %380, i64 0, i32 0, i32 0, i32 0
  %382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %381, align 8
  %383 = icmp eq %"class.WTF::StringImpl"* %382, null
  br i1 %383, label %384, label %388

384:                                              ; preds = %375
  %385 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %385, align 8
  %386 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %387 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %386, i64* %387, align 8
  br label %395

388:                                              ; preds = %375
  %389 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %382, %"class.WTF::StringImpl"** %389, align 8
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 1
  %391 = load i32, i32* %390, align 4
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 1
  %393 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %394 = bitcast i8** %393 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %392, %"class.WTF::StringImpl"** %394, align 8
  br label %395

395:                                              ; preds = %384, %388
  %396 = phi i32 [ %391, %388 ], [ 0, %384 ]
  %397 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %396, i32* %397, align 8
  %398 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %15, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %379) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %376) #11
  %399 = and i1 %398, %3
  br i1 %399, label %400, label %403

400:                                              ; preds = %395
  %401 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 12, i32 0, i32 0
  %402 = load %"class.blink::LocalDOMWindow"*, %"class.blink::LocalDOMWindow"** %401, align 8
  call void @_ZN5blink9HttpEquiv27ProcessHttpEquivOriginTrialEPNS_14LocalDOMWindowERKN3WTF12AtomicStringE(%"class.blink::LocalDOMWindow"* %402, %"class.WTF::AtomicString"* dereferenceable(8) %2)
  br label %403

403:                                              ; preds = %395, %357, %355, %59, %101, %206, %354, %400, %248, %186, %81, %36
  ret void

404:                                              ; preds = %331
  %405 = getelementptr inbounds i16, i16* %330, i64 %350
  %406 = load i16, i16* %405, align 2
  %407 = add i16 %406, -65
  %408 = icmp ult i16 %407, 26
  %409 = zext i1 %408 to i16
  %410 = shl nuw nsw i16 %409, 5
  %411 = or i16 %410, %406
  %412 = zext i16 %411 to i32
  %413 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.8, i64 0, i64 %350
  %414 = load i8, i8* %413, align 1
  %415 = zext i8 %414 to i64
  %416 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %415
  %417 = load i8, i8* %416, align 1
  %418 = sext i8 %417 to i32
  %419 = icmp eq i32 %412, %418
  br i1 %419, label %420, label %362

420:                                              ; preds = %404
  %421 = add nuw nsw i64 %334, 2
  br label %333

422:                                              ; preds = %311
  %423 = getelementptr inbounds i8, i8* %256, i64 %328
  %424 = load i8, i8* %423, align 1
  %425 = zext i8 %424 to i64
  %426 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %425
  %427 = load i8, i8* %426, align 1
  %428 = zext i8 %427 to i32
  %429 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.8, i64 0, i64 %328
  %430 = load i8, i8* %429, align 1
  %431 = zext i8 %430 to i64
  %432 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %431
  %433 = load i8, i8* %432, align 1
  %434 = sext i8 %433 to i32
  %435 = icmp eq i32 %428, %434
  br i1 %435, label %436, label %362

436:                                              ; preds = %422
  %437 = add nuw nsw i64 %314, 2
  br label %313

438:                                              ; preds = %282
  %439 = getelementptr inbounds i16, i16* %281, i64 %301
  %440 = load i16, i16* %439, align 2
  %441 = add i16 %440, -65
  %442 = icmp ult i16 %441, 26
  %443 = zext i1 %442 to i16
  %444 = shl nuw nsw i16 %443, 5
  %445 = or i16 %444, %440
  %446 = zext i16 %445 to i32
  %447 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.7, i64 0, i64 %301
  %448 = load i8, i8* %447, align 1
  %449 = zext i8 %448 to i64
  %450 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %449
  %451 = load i8, i8* %450, align 1
  %452 = sext i8 %451 to i32
  %453 = icmp eq i32 %446, %452
  br i1 %453, label %454, label %302

454:                                              ; preds = %438
  %455 = add nuw nsw i64 %285, 2
  br label %284

456:                                              ; preds = %262
  %457 = getelementptr inbounds i8, i8* %256, i64 %279
  %458 = load i8, i8* %457, align 1
  %459 = zext i8 %458 to i64
  %460 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %459
  %461 = load i8, i8* %460, align 1
  %462 = zext i8 %461 to i32
  %463 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.7, i64 0, i64 %279
  %464 = load i8, i8* %463, align 1
  %465 = zext i8 %464 to i64
  %466 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %465
  %467 = load i8, i8* %466, align 1
  %468 = sext i8 %467 to i32
  %469 = icmp eq i32 %462, %468
  br i1 %469, label %470, label %302

470:                                              ; preds = %456
  %471 = add nuw nsw i64 %265, 2
  br label %264

472:                                              ; preds = %151
  %473 = icmp eq i64 %167, 22
  br i1 %473, label %186, label %168

474:                                              ; preds = %118
  %475 = icmp eq i64 %132, 22
  br i1 %475, label %186, label %133
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm14EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [14 x i8]* dereferenceable(14)) local_unnamed_addr #1 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 13
  br i1 %5, label %6, label %65

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %65

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %67, label %65

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %47

45:                                               ; preds = %47
  %46 = icmp eq i64 %64, 13
  br i1 %46, label %65, label %221

47:                                               ; preds = %237, %42
  %48 = phi i64 [ 0, %42 ], [ %238, %237 ]
  %49 = getelementptr inbounds i16, i16* %44, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = add i16 %50, -65
  %52 = icmp ult i16 %51, 26
  %53 = zext i1 %52 to i16
  %54 = shl nuw nsw i16 %53, 5
  %55 = or i16 %54, %50
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 %48
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 %56, %62
  %64 = or i64 %48, 1
  br i1 %63, label %45, label %65

65:                                               ; preds = %47, %45, %221, %14, %28, %67, %81, %95, %109, %123, %137, %151, %165, %179, %193, %2
  %66 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %67 ], [ false, %81 ], [ false, %95 ], [ false, %109 ], [ false, %123 ], [ false, %137 ], [ false, %151 ], [ false, %165 ], [ false, %179 ], [ false, %193 ], [ false, %47 ], [ true, %45 ], [ false, %221 ]
  ret i1 %66

67:                                               ; preds = %28
  %68 = getelementptr inbounds i8, i8* %15, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %73, %79
  br i1 %80, label %81, label %65

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %15, i64 3
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 3
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = icmp eq i32 %87, %93
  br i1 %94, label %95, label %65

95:                                               ; preds = %81
  %96 = getelementptr inbounds i8, i8* %15, i64 4
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 4
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %65

109:                                              ; preds = %95
  %110 = getelementptr inbounds i8, i8* %15, i64 5
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 5
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %65

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 6
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 6
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br i1 %136, label %137, label %65

137:                                              ; preds = %123
  %138 = getelementptr inbounds i8, i8* %15, i64 7
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i64
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 7
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i64
  %147 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  %150 = icmp eq i32 %143, %149
  br i1 %150, label %151, label %65

151:                                              ; preds = %137
  %152 = getelementptr inbounds i8, i8* %15, i64 8
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i64
  %155 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 8
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = sext i8 %162 to i32
  %164 = icmp eq i32 %157, %163
  br i1 %164, label %165, label %65

165:                                              ; preds = %151
  %166 = getelementptr inbounds i8, i8* %15, i64 9
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 9
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = icmp eq i32 %171, %177
  br i1 %178, label %179, label %65

179:                                              ; preds = %165
  %180 = getelementptr inbounds i8, i8* %15, i64 10
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 10
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = sext i8 %190 to i32
  %192 = icmp eq i32 %185, %191
  br i1 %192, label %193, label %65

193:                                              ; preds = %179
  %194 = getelementptr inbounds i8, i8* %15, i64 11
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 11
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = sext i8 %204 to i32
  %206 = icmp eq i32 %199, %205
  br i1 %206, label %207, label %65

207:                                              ; preds = %193
  %208 = getelementptr inbounds i8, i8* %15, i64 12
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 12
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = sext i8 %218 to i32
  %220 = icmp eq i32 %213, %219
  ret i1 %220

221:                                              ; preds = %45
  %222 = getelementptr inbounds i16, i16* %44, i64 %64
  %223 = load i16, i16* %222, align 2
  %224 = add i16 %223, -65
  %225 = icmp ult i16 %224, 26
  %226 = zext i1 %225 to i16
  %227 = shl nuw nsw i16 %226, 5
  %228 = or i16 %227, %223
  %229 = zext i16 %228 to i32
  %230 = getelementptr inbounds [14 x i8], [14 x i8]* %1, i64 0, i64 %64
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = sext i8 %234 to i32
  %236 = icmp eq i32 %229, %235
  br i1 %236, label %237, label %65

237:                                              ; preds = %221
  %238 = add nuw nsw i64 %48, 2
  br label %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9HttpEquiv28ProcessHttpEquivDefaultStyleERNS_8DocumentERKN3WTF12AtomicStringE(%"class.blink::Document"* nocapture readonly dereferenceable(2848), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 59, i32 0, i32 0
  %4 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  tail call void @_ZN5blink11StyleEngine19SetHttpDefaultStyleERKN3WTF6StringE(%"class.blink::StyleEngine"* %4, %"class.WTF::String"* dereferenceable(8) %5) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm8EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [8 x i8]* dereferenceable(8)) local_unnamed_addr #1 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 7
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %157, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %213, %14, %28, %157, %171, %185, %199, %42, %59, %77, %93, %109, %125, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %14 ], [ false, %28 ], [ false, %157 ], [ false, %171 ], [ false, %185 ], [ false, %199 ], [ %226, %213 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  ret i1 %156

157:                                              ; preds = %28
  %158 = getelementptr inbounds i8, i8* %15, i64 2
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 2
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i64
  %167 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %166
  %168 = load i8, i8* %167, align 1
  %169 = sext i8 %168 to i32
  %170 = icmp eq i32 %163, %169
  br i1 %170, label %171, label %75

171:                                              ; preds = %157
  %172 = getelementptr inbounds i8, i8* %15, i64 3
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i32
  %178 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 3
  %179 = load i8, i8* %178, align 1
  %180 = zext i8 %179 to i64
  %181 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %180
  %182 = load i8, i8* %181, align 1
  %183 = sext i8 %182 to i32
  %184 = icmp eq i32 %177, %183
  br i1 %184, label %185, label %75

185:                                              ; preds = %171
  %186 = getelementptr inbounds i8, i8* %15, i64 4
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 4
  %193 = load i8, i8* %192, align 1
  %194 = zext i8 %193 to i64
  %195 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %194
  %196 = load i8, i8* %195, align 1
  %197 = sext i8 %196 to i32
  %198 = icmp eq i32 %191, %197
  br i1 %198, label %199, label %75

199:                                              ; preds = %185
  %200 = getelementptr inbounds i8, i8* %15, i64 5
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 5
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = sext i8 %210 to i32
  %212 = icmp eq i32 %205, %211
  br i1 %212, label %213, label %75

213:                                              ; preds = %199
  %214 = getelementptr inbounds i8, i8* %15, i64 6
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = zext i8 %218 to i32
  %220 = getelementptr inbounds [8 x i8], [8 x i8]* %1, i64 0, i64 6
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = sext i8 %224 to i32
  %226 = icmp eq i32 %219, %225
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9HttpEquiv23ProcessHttpEquivRefreshEPNS_14LocalDOMWindowERKN3WTF12AtomicStringEPNS_7ElementE(%"class.blink::LocalDOMWindow"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::OrdinalNumber", align 4
  %7 = icmp eq %"class.blink::LocalDOMWindow"* %0, null
  br i1 %7, label %70, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %0, i64 0, i32 1, i32 3
  %10 = icmp eq %"class.blink::UseCounter"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %8
  %12 = bitcast %"class.blink::UseCounter"* %9 to void (%"class.blink::UseCounter"*, i32)***
  %13 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %13, i64 3
  %15 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %14, align 8
  tail call void %15(%"class.blink::UseCounter"* nonnull %9, i32 1548) #11
  br label %16

16:                                               ; preds = %8, %11
  %17 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %0, i64 0, i32 1
  %18 = bitcast %"class.blink::ExecutionContext.base"* %17 to %"class.blink::ExecutionContext"*
  %19 = tail call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %18) #11
  %20 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), i64 0) #11
  %21 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.9, i64 0, i64 0), i64 0) #11
  %22 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() #11
  %23 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %22, i64 0, i32 4
  %24 = bitcast %"class.WTF::OrdinalNumber"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber"* %6, i64 0, i32 0
  store i32 0, i32* %25, align 4
  %26 = call zeroext i1 @_ZN5blink21ContentSecurityPolicy11AllowInlineENS0_10InlineTypeEPNS_7ElementERKN3WTF6StringES7_S7_RKNS4_13OrdinalNumberENS_20ReportingDispositionE(%"class.blink::ContentSecurityPolicy"* %19, i32 1, %"class.blink::Element"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* dereferenceable(8) %23, %"class.WTF::OrdinalNumber"* nonnull dereferenceable(4) %6, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #11
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %16
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #11
  br label %43

43:                                               ; preds = %16, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #11
  br label %60

60:                                               ; preds = %43, %56, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %61 = or i1 %10, %26
  br i1 %61, label %67, label %62

62:                                               ; preds = %60
  %63 = bitcast %"class.blink::UseCounter"* %9 to void (%"class.blink::UseCounter"*, i32)***
  %64 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %64, i64 3
  %66 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %65, align 8
  call void %66(%"class.blink::UseCounter"* nonnull %9, i32 1550) #11
  br label %67

67:                                               ; preds = %60, %62
  %68 = call %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"* nonnull %0) #11
  %69 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  call void @_ZN5blink8Document22MaybeHandleHttpRefreshERKN3WTF6StringENS0_15HttpRefreshTypeE(%"class.blink::Document"* %68, %"class.WTF::String"* dereferenceable(8) %69, i32 1) #11
  br label %70

70:                                               ; preds = %3, %67
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [11 x i8]* dereferenceable(11)) local_unnamed_addr #1 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 10
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %205, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %303, %14, %28, %205, %219, %233, %247, %261, %275, %289, %42, %59, %77, %93, %109, %125, %141, %157, %173, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %173 ], [ false, %14 ], [ false, %28 ], [ false, %205 ], [ false, %219 ], [ false, %233 ], [ false, %247 ], [ false, %261 ], [ false, %275 ], [ false, %289 ], [ %316, %303 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  br i1 %188, label %189, label %75

189:                                              ; preds = %173
  %190 = getelementptr inbounds i16, i16* %44, i64 9
  %191 = load i16, i16* %190, align 2
  %192 = add i16 %191, -65
  %193 = icmp ult i16 %192, 26
  %194 = zext i1 %193 to i16
  %195 = shl nuw nsw i16 %194, 5
  %196 = or i16 %195, %191
  %197 = zext i16 %196 to i32
  %198 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i64
  %201 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = sext i8 %202 to i32
  %204 = icmp eq i32 %197, %203
  ret i1 %204

205:                                              ; preds = %28
  %206 = getelementptr inbounds i8, i8* %15, i64 2
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i64
  %215 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = sext i8 %216 to i32
  %218 = icmp eq i32 %211, %217
  br i1 %218, label %219, label %75

219:                                              ; preds = %205
  %220 = getelementptr inbounds i8, i8* %15, i64 3
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i64
  %229 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = sext i8 %230 to i32
  %232 = icmp eq i32 %225, %231
  br i1 %232, label %233, label %75

233:                                              ; preds = %219
  %234 = getelementptr inbounds i8, i8* %15, i64 4
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i64
  %237 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i64
  %243 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = sext i8 %244 to i32
  %246 = icmp eq i32 %239, %245
  br i1 %246, label %247, label %75

247:                                              ; preds = %233
  %248 = getelementptr inbounds i8, i8* %15, i64 5
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i64
  %251 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %250
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = sext i8 %258 to i32
  %260 = icmp eq i32 %253, %259
  br i1 %260, label %261, label %75

261:                                              ; preds = %247
  %262 = getelementptr inbounds i8, i8* %15, i64 6
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i64
  %265 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i64
  %271 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = sext i8 %272 to i32
  %274 = icmp eq i32 %267, %273
  br i1 %274, label %275, label %75

275:                                              ; preds = %261
  %276 = getelementptr inbounds i8, i8* %15, i64 7
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i64
  %279 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i64
  %285 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = sext i8 %286 to i32
  %288 = icmp eq i32 %281, %287
  br i1 %288, label %289, label %75

289:                                              ; preds = %275
  %290 = getelementptr inbounds i8, i8* %15, i64 8
  %291 = load i8, i8* %290, align 1
  %292 = zext i8 %291 to i64
  %293 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %292
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  %296 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i64
  %299 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %298
  %300 = load i8, i8* %299, align 1
  %301 = sext i8 %300 to i32
  %302 = icmp eq i32 %295, %301
  br i1 %302, label %303, label %75

303:                                              ; preds = %289
  %304 = getelementptr inbounds i8, i8* %15, i64 9
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i64
  %307 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %306
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i64
  %313 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = sext i8 %314 to i32
  %316 = icmp eq i32 %309, %315
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9HttpEquiv25ProcessHttpEquivSetCookieERNS_8DocumentERKN3WTF12AtomicStringEPNS_7ElementE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"* nocapture readnone) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %8, i32 0) #11
  %9 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = select i1 %12, i8* %14, i8* %7
  %16 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0), i8* %15) #11
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #11
  %19 = bitcast i8* %18 to %"class.blink::ConsoleMessage"*
  %20 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #11
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %19, i32 7, i32 3, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %20) #11
  %21 = getelementptr inbounds i8, i8* %18, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  call void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"* %0, %"class.blink::ConsoleMessage"* %19, i1 zeroext false) #11
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #11
  br label %40

40:                                               ; preds = %3, %36, %39
  %41 = load i8, i8* %10, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %45

43:                                               ; preds = %40
  %44 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %40, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm17EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [17 x i8]* dereferenceable(17)) local_unnamed_addr #1 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 16
  br i1 %5, label %6, label %80

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %80

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %82, label %80

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %62

45:                                               ; preds = %62
  %46 = getelementptr inbounds i16, i16* %44, i64 %79
  %47 = load i16, i16* %46, align 2
  %48 = add i16 %47, -65
  %49 = icmp ult i16 %48, 26
  %50 = zext i1 %49 to i16
  %51 = shl nuw nsw i16 %50, 5
  %52 = or i16 %51, %47
  %53 = zext i16 %52 to i32
  %54 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 %79
  %55 = load i8, i8* %54, align 1
  %56 = zext i8 %55 to i64
  %57 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %56
  %58 = load i8, i8* %57, align 1
  %59 = sext i8 %58 to i32
  %60 = icmp eq i32 %53, %59
  %61 = add nuw nsw i64 %63, 2
  br i1 %60, label %278, label %80

62:                                               ; preds = %278, %42
  %63 = phi i64 [ 0, %42 ], [ %61, %278 ]
  %64 = getelementptr inbounds i16, i16* %44, i64 %63
  %65 = load i16, i16* %64, align 2
  %66 = add i16 %65, -65
  %67 = icmp ult i16 %66, 26
  %68 = zext i1 %67 to i16
  %69 = shl nuw nsw i16 %68, 5
  %70 = or i16 %69, %65
  %71 = zext i16 %70 to i32
  %72 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 %63
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i64
  %75 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %74
  %76 = load i8, i8* %75, align 1
  %77 = sext i8 %76 to i32
  %78 = icmp eq i32 %71, %77
  %79 = or i64 %63, 1
  br i1 %78, label %45, label %80

80:                                               ; preds = %62, %45, %278, %14, %28, %82, %96, %110, %124, %138, %152, %166, %180, %194, %208, %222, %236, %250, %2
  %81 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %82 ], [ false, %96 ], [ false, %110 ], [ false, %124 ], [ false, %138 ], [ false, %152 ], [ false, %166 ], [ false, %180 ], [ false, %194 ], [ false, %208 ], [ false, %222 ], [ false, %236 ], [ false, %250 ], [ false, %62 ], [ false, %45 ], [ true, %278 ]
  ret i1 %81

82:                                               ; preds = %28
  %83 = getelementptr inbounds i8, i8* %15, i64 2
  %84 = load i8, i8* %83, align 1
  %85 = zext i8 %84 to i64
  %86 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %85
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  %89 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 2
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i64
  %92 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = sext i8 %93 to i32
  %95 = icmp eq i32 %88, %94
  br i1 %95, label %96, label %80

96:                                               ; preds = %82
  %97 = getelementptr inbounds i8, i8* %15, i64 3
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i64
  %100 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %99
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 3
  %104 = load i8, i8* %103, align 1
  %105 = zext i8 %104 to i64
  %106 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %105
  %107 = load i8, i8* %106, align 1
  %108 = sext i8 %107 to i32
  %109 = icmp eq i32 %102, %108
  br i1 %109, label %110, label %80

110:                                              ; preds = %96
  %111 = getelementptr inbounds i8, i8* %15, i64 4
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i64
  %114 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %113
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 4
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i64
  %120 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = sext i8 %121 to i32
  %123 = icmp eq i32 %116, %122
  br i1 %123, label %124, label %80

124:                                              ; preds = %110
  %125 = getelementptr inbounds i8, i8* %15, i64 5
  %126 = load i8, i8* %125, align 1
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 5
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i64
  %134 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %133
  %135 = load i8, i8* %134, align 1
  %136 = sext i8 %135 to i32
  %137 = icmp eq i32 %130, %136
  br i1 %137, label %138, label %80

138:                                              ; preds = %124
  %139 = getelementptr inbounds i8, i8* %15, i64 6
  %140 = load i8, i8* %139, align 1
  %141 = zext i8 %140 to i64
  %142 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = zext i8 %143 to i32
  %145 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 6
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = sext i8 %149 to i32
  %151 = icmp eq i32 %144, %150
  br i1 %151, label %152, label %80

152:                                              ; preds = %138
  %153 = getelementptr inbounds i8, i8* %15, i64 7
  %154 = load i8, i8* %153, align 1
  %155 = zext i8 %154 to i64
  %156 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %155
  %157 = load i8, i8* %156, align 1
  %158 = zext i8 %157 to i32
  %159 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 7
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i64
  %162 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = sext i8 %163 to i32
  %165 = icmp eq i32 %158, %164
  br i1 %165, label %166, label %80

166:                                              ; preds = %152
  %167 = getelementptr inbounds i8, i8* %15, i64 8
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i64
  %170 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %169
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 8
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i64
  %176 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %175
  %177 = load i8, i8* %176, align 1
  %178 = sext i8 %177 to i32
  %179 = icmp eq i32 %172, %178
  br i1 %179, label %180, label %80

180:                                              ; preds = %166
  %181 = getelementptr inbounds i8, i8* %15, i64 9
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i64
  %184 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %183
  %185 = load i8, i8* %184, align 1
  %186 = zext i8 %185 to i32
  %187 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 9
  %188 = load i8, i8* %187, align 1
  %189 = zext i8 %188 to i64
  %190 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %189
  %191 = load i8, i8* %190, align 1
  %192 = sext i8 %191 to i32
  %193 = icmp eq i32 %186, %192
  br i1 %193, label %194, label %80

194:                                              ; preds = %180
  %195 = getelementptr inbounds i8, i8* %15, i64 10
  %196 = load i8, i8* %195, align 1
  %197 = zext i8 %196 to i64
  %198 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %197
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i32
  %201 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 10
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i64
  %204 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %203
  %205 = load i8, i8* %204, align 1
  %206 = sext i8 %205 to i32
  %207 = icmp eq i32 %200, %206
  br i1 %207, label %208, label %80

208:                                              ; preds = %194
  %209 = getelementptr inbounds i8, i8* %15, i64 11
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i64
  %212 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i32
  %215 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 11
  %216 = load i8, i8* %215, align 1
  %217 = zext i8 %216 to i64
  %218 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %217
  %219 = load i8, i8* %218, align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %214, %220
  br i1 %221, label %222, label %80

222:                                              ; preds = %208
  %223 = getelementptr inbounds i8, i8* %15, i64 12
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i64
  %226 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i32
  %229 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 12
  %230 = load i8, i8* %229, align 1
  %231 = zext i8 %230 to i64
  %232 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %231
  %233 = load i8, i8* %232, align 1
  %234 = sext i8 %233 to i32
  %235 = icmp eq i32 %228, %234
  br i1 %235, label %236, label %80

236:                                              ; preds = %222
  %237 = getelementptr inbounds i8, i8* %15, i64 13
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i64
  %240 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %239
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i32
  %243 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 13
  %244 = load i8, i8* %243, align 1
  %245 = zext i8 %244 to i64
  %246 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %245
  %247 = load i8, i8* %246, align 1
  %248 = sext i8 %247 to i32
  %249 = icmp eq i32 %242, %248
  br i1 %249, label %250, label %80

250:                                              ; preds = %236
  %251 = getelementptr inbounds i8, i8* %15, i64 14
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i64
  %254 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %253
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i32
  %257 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 14
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i64
  %260 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %259
  %261 = load i8, i8* %260, align 1
  %262 = sext i8 %261 to i32
  %263 = icmp eq i32 %256, %262
  br i1 %263, label %264, label %80

264:                                              ; preds = %250
  %265 = getelementptr inbounds i8, i8* %15, i64 15
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i64
  %268 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %267
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i32
  %271 = getelementptr inbounds [17 x i8], [17 x i8]* %1, i64 0, i64 15
  %272 = load i8, i8* %271, align 1
  %273 = zext i8 %272 to i64
  %274 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %273
  %275 = load i8, i8* %274, align 1
  %276 = sext i8 %275 to i32
  %277 = icmp eq i32 %270, %276
  ret i1 %277

278:                                              ; preds = %45
  %279 = icmp eq i64 %61, 16
  br i1 %279, label %80, label %62
}

declare void @_ZN5blink8Document18SetContentLanguageERKN3WTF12AtomicStringE(%"class.blink::Document"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink8Document29ParseDNSPrefetchControlHeaderERKN3WTF6StringE(%"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm16EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [16 x i8]* dereferenceable(16)) local_unnamed_addr #1 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 15
  br i1 %5, label %6, label %65

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %65

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %67, label %65

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  br label %47

45:                                               ; preds = %47
  %46 = icmp eq i64 %64, 15
  br i1 %46, label %65, label %249

47:                                               ; preds = %265, %42
  %48 = phi i64 [ 0, %42 ], [ %266, %265 ]
  %49 = getelementptr inbounds i16, i16* %44, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = add i16 %50, -65
  %52 = icmp ult i16 %51, 26
  %53 = zext i1 %52 to i16
  %54 = shl nuw nsw i16 %53, 5
  %55 = or i16 %54, %50
  %56 = zext i16 %55 to i32
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 %48
  %58 = load i8, i8* %57, align 1
  %59 = zext i8 %58 to i64
  %60 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = sext i8 %61 to i32
  %63 = icmp eq i32 %56, %62
  %64 = or i64 %48, 1
  br i1 %63, label %45, label %65

65:                                               ; preds = %47, %45, %249, %14, %28, %67, %81, %95, %109, %123, %137, %151, %165, %179, %193, %207, %221, %2
  %66 = phi i1 [ false, %2 ], [ false, %14 ], [ false, %28 ], [ false, %67 ], [ false, %81 ], [ false, %95 ], [ false, %109 ], [ false, %123 ], [ false, %137 ], [ false, %151 ], [ false, %165 ], [ false, %179 ], [ false, %193 ], [ false, %207 ], [ false, %221 ], [ false, %47 ], [ true, %45 ], [ false, %249 ]
  ret i1 %66

67:                                               ; preds = %28
  %68 = getelementptr inbounds i8, i8* %15, i64 2
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = zext i8 %72 to i32
  %74 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = zext i8 %75 to i64
  %77 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %76
  %78 = load i8, i8* %77, align 1
  %79 = sext i8 %78 to i32
  %80 = icmp eq i32 %73, %79
  br i1 %80, label %81, label %65

81:                                               ; preds = %67
  %82 = getelementptr inbounds i8, i8* %15, i64 3
  %83 = load i8, i8* %82, align 1
  %84 = zext i8 %83 to i64
  %85 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 3
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i64
  %91 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = sext i8 %92 to i32
  %94 = icmp eq i32 %87, %93
  br i1 %94, label %95, label %65

95:                                               ; preds = %81
  %96 = getelementptr inbounds i8, i8* %15, i64 4
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i64
  %99 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 4
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %65

109:                                              ; preds = %95
  %110 = getelementptr inbounds i8, i8* %15, i64 5
  %111 = load i8, i8* %110, align 1
  %112 = zext i8 %111 to i64
  %113 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 5
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i64
  %119 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = sext i8 %120 to i32
  %122 = icmp eq i32 %115, %121
  br i1 %122, label %123, label %65

123:                                              ; preds = %109
  %124 = getelementptr inbounds i8, i8* %15, i64 6
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i64
  %127 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 6
  %131 = load i8, i8* %130, align 1
  %132 = zext i8 %131 to i64
  %133 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %132
  %134 = load i8, i8* %133, align 1
  %135 = sext i8 %134 to i32
  %136 = icmp eq i32 %129, %135
  br i1 %136, label %137, label %65

137:                                              ; preds = %123
  %138 = getelementptr inbounds i8, i8* %15, i64 7
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i64
  %141 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %140
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 7
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i64
  %147 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = sext i8 %148 to i32
  %150 = icmp eq i32 %143, %149
  br i1 %150, label %151, label %65

151:                                              ; preds = %137
  %152 = getelementptr inbounds i8, i8* %15, i64 8
  %153 = load i8, i8* %152, align 1
  %154 = zext i8 %153 to i64
  %155 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %154
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 8
  %159 = load i8, i8* %158, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = sext i8 %162 to i32
  %164 = icmp eq i32 %157, %163
  br i1 %164, label %165, label %65

165:                                              ; preds = %151
  %166 = getelementptr inbounds i8, i8* %15, i64 9
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 9
  %173 = load i8, i8* %172, align 1
  %174 = zext i8 %173 to i64
  %175 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %174
  %176 = load i8, i8* %175, align 1
  %177 = sext i8 %176 to i32
  %178 = icmp eq i32 %171, %177
  br i1 %178, label %179, label %65

179:                                              ; preds = %165
  %180 = getelementptr inbounds i8, i8* %15, i64 10
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = zext i8 %184 to i32
  %186 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 10
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i64
  %189 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %188
  %190 = load i8, i8* %189, align 1
  %191 = sext i8 %190 to i32
  %192 = icmp eq i32 %185, %191
  br i1 %192, label %193, label %65

193:                                              ; preds = %179
  %194 = getelementptr inbounds i8, i8* %15, i64 11
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = zext i8 %198 to i32
  %200 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 11
  %201 = load i8, i8* %200, align 1
  %202 = zext i8 %201 to i64
  %203 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %202
  %204 = load i8, i8* %203, align 1
  %205 = sext i8 %204 to i32
  %206 = icmp eq i32 %199, %205
  br i1 %206, label %207, label %65

207:                                              ; preds = %193
  %208 = getelementptr inbounds i8, i8* %15, i64 12
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = zext i8 %212 to i32
  %214 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 12
  %215 = load i8, i8* %214, align 1
  %216 = zext i8 %215 to i64
  %217 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %216
  %218 = load i8, i8* %217, align 1
  %219 = sext i8 %218 to i32
  %220 = icmp eq i32 %213, %219
  br i1 %220, label %221, label %65

221:                                              ; preds = %207
  %222 = getelementptr inbounds i8, i8* %15, i64 13
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = zext i8 %226 to i32
  %228 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 13
  %229 = load i8, i8* %228, align 1
  %230 = zext i8 %229 to i64
  %231 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %230
  %232 = load i8, i8* %231, align 1
  %233 = sext i8 %232 to i32
  %234 = icmp eq i32 %227, %233
  br i1 %234, label %235, label %65

235:                                              ; preds = %221
  %236 = getelementptr inbounds i8, i8* %15, i64 14
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = zext i8 %240 to i32
  %242 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 14
  %243 = load i8, i8* %242, align 1
  %244 = zext i8 %243 to i64
  %245 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %244
  %246 = load i8, i8* %245, align 1
  %247 = sext i8 %246 to i32
  %248 = icmp eq i32 %241, %247
  ret i1 %248

249:                                              ; preds = %45
  %250 = getelementptr inbounds i16, i16* %44, i64 %64
  %251 = load i16, i16* %250, align 2
  %252 = add i16 %251, -65
  %253 = icmp ult i16 %252, 26
  %254 = zext i1 %253 to i16
  %255 = shl nuw nsw i16 %254, 5
  %256 = or i16 %255, %251
  %257 = zext i16 %256 to i32
  %258 = getelementptr inbounds [16 x i8], [16 x i8]* %1, i64 0, i64 %64
  %259 = load i8, i8* %258, align 1
  %260 = zext i8 %259 to i64
  %261 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %260
  %262 = load i8, i8* %261, align 1
  %263 = sext i8 %262 to i32
  %264 = icmp eq i32 %257, %263
  br i1 %264, label %265, label %65

265:                                              ; preds = %249
  %266 = add nuw nsw i64 %48, 2
  br label %47
}

declare void @_ZNK5blink8Document17AddConsoleMessageEPNS_14ConsoleMessageEb(%"class.blink::Document"*, %"class.blink::ConsoleMessage"*, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9HttpEquiv24ProcessHttpEquivAcceptCHERNS_8DocumentERKN3WTF12AtomicStringE(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebURL", align 8
  %4 = alloca %"class.blink::FrameClientHintsPreferencesContext", align 8
  %5 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #11
  %6 = icmp eq %"class.blink::LocalFrame"* %5, null
  br i1 %6, label %49, label %7

7:                                                ; preds = %2
  %8 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #11
  %9 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %8, i64 0, i32 0
  %10 = tail call zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"* %9) #11
  br i1 %10, label %11, label %49

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 19
  %13 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #11
  %14 = tail call %"class.blink::WebContentSettingsClient"* @_ZN5blink10LocalFrame24GetContentSettingsClientEv(%"class.blink::LocalFrame"* %13) #11
  %15 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %0) #11
  %16 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %15, i64 0, i32 0
  %17 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %16) #11
  %18 = icmp eq %"class.blink::Settings"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %17, i64 0, i32 71
  %21 = bitcast [14 x i8]* %20 to i112*
  %22 = load i112, i112* %21, align 8
  %23 = and i112 %22, 1180591620717411303424
  %24 = icmp ne i112 %23, 0
  br label %25

25:                                               ; preds = %19, %11
  %26 = phi i1 [ true, %11 ], [ %24, %19 ]
  %27 = icmp eq %"class.blink::WebContentSettingsClient"* %14, null
  br i1 %27, label %37, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.blink::WebURL"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %29) #11
  call void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"* nonnull %3, %"class.blink::KURL"* dereferenceable(112) %12) #11
  %30 = bitcast %"class.blink::WebContentSettingsClient"* %14 to i1 (%"class.blink::WebContentSettingsClient"*, i1, %"class.blink::WebURL"*)***
  %31 = load i1 (%"class.blink::WebContentSettingsClient"*, i1, %"class.blink::WebURL"*)**, i1 (%"class.blink::WebContentSettingsClient"*, i1, %"class.blink::WebURL"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::WebContentSettingsClient"*, i1, %"class.blink::WebURL"*)*, i1 (%"class.blink::WebContentSettingsClient"*, i1, %"class.blink::WebURL"*)** %31, i64 5
  %33 = load i1 (%"class.blink::WebContentSettingsClient"*, i1, %"class.blink::WebURL"*)*, i1 (%"class.blink::WebContentSettingsClient"*, i1, %"class.blink::WebURL"*)** %32, align 8
  %34 = call zeroext i1 %33(%"class.blink::WebContentSettingsClient"* nonnull %14, i1 zeroext %26, %"class.blink::WebURL"* nonnull dereferenceable(96) %3) #11
  %35 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %3, i64 0, i32 1
  call void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"* %35) #11
  %36 = getelementptr inbounds %"class.blink::WebURL", %"class.blink::WebURL"* %3, i64 0, i32 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %36) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %29) #11
  br i1 %34, label %38, label %49

37:                                               ; preds = %25
  br i1 %26, label %38, label %49

38:                                               ; preds = %28, %37
  %39 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 2
  %40 = bitcast %"class.blink::UseCounter"* %39 to void (%"class.blink::UseCounter"*, i32)***
  %41 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %41, i64 3
  %43 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %42, align 8
  call void %43(%"class.blink::UseCounter"* %39, i32 904) #11
  %44 = bitcast %"class.blink::FrameClientHintsPreferencesContext"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #11
  %45 = bitcast %"class.blink::FrameClientHintsPreferencesContext"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false)
  call void @_ZN5blink34FrameClientHintsPreferencesContextC1EPNS_10LocalFrameE(%"class.blink::FrameClientHintsPreferencesContext"* nonnull %4, %"class.blink::LocalFrame"* nonnull %5) #11
  %46 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %5, i64 0, i32 36
  %47 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::FrameClientHintsPreferencesContext", %"class.blink::FrameClientHintsPreferencesContext"* %4, i64 0, i32 0
  call void @_ZN5blink22ClientHintsPreferences27UpdateFromHttpEquivAcceptCHERKN3WTF6StringERKNS_4KURLEPNS0_7ContextE(%"class.blink::ClientHintsPreferences"* %46, %"class.WTF::String"* dereferenceable(8) %47, %"class.blink::KURL"* dereferenceable(112) %12, %"class.blink::ClientHintsPreferences::Context"* nonnull %48) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #11
  br label %49

49:                                               ; preds = %28, %37, %7, %2, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9HttpEquiv37ProcessHttpEquivContentSecurityPolicyEPNS_14LocalDOMWindowERKN3WTF12AtomicStringES6_(%"class.blink::LocalDOMWindow"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.439", align 8
  %5 = alloca %"class.WTF::Vector.439", align 8
  %6 = alloca %"class.WTF::Vector.439", align 8
  %7 = icmp eq %"class.blink::LocalDOMWindow"* %0, null
  br i1 %7, label %226, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = bitcast %"class.blink::Frame"** %9 to %"class.blink::LocalFrame"**
  %11 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %10, align 8
  %12 = icmp eq %"class.blink::LocalFrame"* %11, null
  br i1 %12, label %226, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %11, i64 0, i32 0
  %15 = tail call %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"* %14) #11
  %16 = getelementptr inbounds %"class.blink::Settings", %"class.blink::Settings"* %15, i64 0, i32 71
  %17 = bitcast [14 x i8]* %16 to i112*
  %18 = load i112, i112* %17, align 8
  %19 = and i112 %18, 1048576
  %20 = icmp eq i112 %19, 0
  br i1 %20, label %21, label %226

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %226, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %29 = bitcast %"class.WTF::StringImpl"* %28 to i8*
  switch i32 %27, label %226 [
    i32 23, label %30
    i32 35, label %176
  ]

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %53, label %37

35:                                               ; preds = %37
  %36 = icmp eq i64 %52, 23
  br i1 %36, label %75, label %279

37:                                               ; preds = %30, %293
  %38 = phi i64 [ %294, %293 ], [ 0, %30 ]
  %39 = getelementptr inbounds i8, i8* %29, i64 %38
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i64
  %42 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.7, i64 0, i64 %38
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = sext i8 %49 to i32
  %51 = icmp eq i32 %44, %50
  %52 = or i64 %38, 1
  br i1 %51, label %35, label %174

53:                                               ; preds = %30
  %54 = bitcast %"class.WTF::StringImpl"* %28 to i16*
  br label %57

55:                                               ; preds = %57
  %56 = icmp eq i64 %74, 23
  br i1 %56, label %75, label %261

57:                                               ; preds = %277, %53
  %58 = phi i64 [ 0, %53 ], [ %278, %277 ]
  %59 = getelementptr inbounds i16, i16* %54, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = add i16 %60, -65
  %62 = icmp ult i16 %61, 26
  %63 = zext i1 %62 to i16
  %64 = shl nuw nsw i16 %63, 5
  %65 = or i16 %64, %60
  %66 = zext i16 %65 to i32
  %67 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.7, i64 0, i64 %58
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i64
  %70 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %69
  %71 = load i8, i8* %70, align 1
  %72 = sext i8 %71 to i32
  %73 = icmp eq i32 %66, %72
  %74 = or i64 %58, 1
  br i1 %73, label %55, label %174

75:                                               ; preds = %35, %55
  %76 = bitcast %"class.WTF::Vector.439"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #11
  %77 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %4, i64 0, i32 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %4, i64 0, i32 0, i32 0, i32 1
  %79 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %4, i64 0, i32 0, i32 0, i32 2
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  %81 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %0, i64 0, i32 1
  %82 = bitcast %"class.blink::ExecutionContext.base"* %81 to %"class.blink::ExecutionContext"*
  %83 = bitcast %"class.WTF::Vector.439"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %83, i8 -86, i64 16, i1 false)
  %84 = tail call %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"* %82) #11
  call void @_ZN5blink28ParseContentSecurityPoliciesERKN3WTF6StringEN7network5mojom25ContentSecurityPolicyTypeENS5_27ContentSecurityPolicySourceERKNS_14SecurityOriginE(%"class.WTF::Vector.439"* nonnull sret %4, %"class.WTF::String"* dereferenceable(8) %80, i32 1, i32 1, %"class.blink::SecurityOrigin"* dereferenceable(96) %84) #11
  %85 = call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %82) #11
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.439"* nonnull sret %5, %"class.WTF::Vector.439"* nonnull dereferenceable(16) %4) #11
  call void @_ZN5blink21ContentSecurityPolicy11AddPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ContentSecurityPolicy"* %85, %"class.WTF::Vector.439"* nonnull %5) #11
  %86 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %5, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.mojo::StructPtr.442"*, %"class.mojo::StructPtr.442"** %86, align 8
  %88 = icmp eq %"class.mojo::StructPtr.442"* %87, null
  br i1 %88, label %112, label %89, !prof !2

89:                                               ; preds = %75
  %90 = bitcast %"class.mojo::StructPtr.442"* %87 to i8*
  %91 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %5, i64 0, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %110, label %94, !prof !3

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %87, i64 %95
  br label %97

97:                                               ; preds = %104, %94
  %98 = phi %"class.mojo::StructPtr.442"* [ %105, %104 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %98, i64 0, i32 0, i32 0, i32 0, i32 0
  %100 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %99, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %99, align 8
  %101 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %100, null
  br i1 %101, label %104, label %102

102:                                              ; preds = %97
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %100) #11
  %103 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %100 to i8*
  call void @_ZdlPv(i8* %103) #12
  br label %104

104:                                              ; preds = %102, %97
  %105 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %98, i64 1
  %106 = icmp eq %"class.mojo::StructPtr.442"* %105, %96
  br i1 %106, label %107, label %97

107:                                              ; preds = %104
  store i32 0, i32* %91, align 4
  %108 = bitcast %"class.WTF::Vector.439"* %5 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %107, %89
  %111 = phi i8* [ %109, %107 ], [ %90, %89 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #11
  store %"class.mojo::StructPtr.442"* null, %"class.mojo::StructPtr.442"** %86, align 8
  br label %112

112:                                              ; preds = %75, %110
  %113 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %0, i64 0, i32 1, i32 25, i32 0, i32 0, i32 0
  %114 = load %"class.blink::PolicyContainer"*, %"class.blink::PolicyContainer"** %113, align 8
  %115 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %6, i64 0, i32 0, i32 0, i32 1
  %116 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %6, i64 0, i32 0, i32 0, i32 2
  %117 = bitcast %"class.WTF::Vector.439"* %4 to i64*
  %118 = bitcast %"class.WTF::Vector.439"* %6 to i64*
  store i64 0, i64* %118, align 8
  %119 = load i64, i64* %117, align 8
  %120 = bitcast %"class.WTF::Vector.439"* %6 to i64*
  store atomic i64 0, i64* %117 monotonic, align 8
  store atomic i64 %119, i64* %120 monotonic, align 8
  %121 = load i32, i32* %78, align 8
  store i32 %121, i32* %115, align 8
  store i32 0, i32* %78, align 8
  %122 = load i32, i32* %79, align 4
  store i32 %122, i32* %116, align 4
  store i32 0, i32* %79, align 4
  call void @_ZN5blink15PolicyContainer26AddContentSecurityPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::PolicyContainer"* %114, %"class.WTF::Vector.439"* nonnull %6) #11
  %123 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %6, i64 0, i32 0, i32 0, i32 0
  %124 = load %"class.mojo::StructPtr.442"*, %"class.mojo::StructPtr.442"** %123, align 8
  %125 = icmp eq %"class.mojo::StructPtr.442"* %124, null
  br i1 %125, label %148, label %126, !prof !2

126:                                              ; preds = %112
  %127 = bitcast %"class.mojo::StructPtr.442"* %124 to i8*
  %128 = load i32, i32* %116, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %146, label %130, !prof !3

130:                                              ; preds = %126
  %131 = zext i32 %128 to i64
  %132 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %124, i64 %131
  br label %133

133:                                              ; preds = %140, %130
  %134 = phi %"class.mojo::StructPtr.442"* [ %141, %140 ], [ %124, %130 ]
  %135 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %135, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %135, align 8
  %137 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %133
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %136) #11
  %139 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %136 to i8*
  call void @_ZdlPv(i8* %139) #12
  br label %140

140:                                              ; preds = %138, %133
  %141 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %134, i64 1
  %142 = icmp eq %"class.mojo::StructPtr.442"* %141, %132
  br i1 %142, label %143, label %133

143:                                              ; preds = %140
  store i32 0, i32* %116, align 4
  %144 = bitcast %"class.WTF::Vector.439"* %6 to i8**
  %145 = load i8*, i8** %144, align 8
  br label %146

146:                                              ; preds = %143, %126
  %147 = phi i8* [ %145, %143 ], [ %127, %126 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %147) #11
  store %"class.mojo::StructPtr.442"* null, %"class.mojo::StructPtr.442"** %123, align 8
  br label %148

148:                                              ; preds = %112, %146
  %149 = load %"class.mojo::StructPtr.442"*, %"class.mojo::StructPtr.442"** %77, align 8
  %150 = icmp eq %"class.mojo::StructPtr.442"* %149, null
  br i1 %150, label %173, label %151, !prof !2

151:                                              ; preds = %148
  %152 = bitcast %"class.mojo::StructPtr.442"* %149 to i8*
  %153 = load i32, i32* %79, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %171, label %155, !prof !3

155:                                              ; preds = %151
  %156 = zext i32 %153 to i64
  %157 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %149, i64 %156
  br label %158

158:                                              ; preds = %165, %155
  %159 = phi %"class.mojo::StructPtr.442"* [ %166, %165 ], [ %149, %155 ]
  %160 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %159, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %160, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %160, align 8
  %162 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %161, null
  br i1 %162, label %165, label %163

163:                                              ; preds = %158
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %161) #11
  %164 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %161 to i8*
  call void @_ZdlPv(i8* %164) #12
  br label %165

165:                                              ; preds = %163, %158
  %166 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %159, i64 1
  %167 = icmp eq %"class.mojo::StructPtr.442"* %166, %157
  br i1 %167, label %168, label %158

168:                                              ; preds = %165
  store i32 0, i32* %79, align 4
  %169 = bitcast %"class.WTF::Vector.439"* %4 to i8**
  %170 = load i8*, i8** %169, align 8
  br label %171

171:                                              ; preds = %168, %151
  %172 = phi i8* [ %170, %168 ], [ %152, %151 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %172) #11
  store %"class.mojo::StructPtr.442"* null, %"class.mojo::StructPtr.442"** %77, align 8
  br label %173

173:                                              ; preds = %148, %171
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #11
  br label %226

174:                                              ; preds = %37, %279, %57, %261
  %175 = icmp eq i32 %27, 35
  br i1 %175, label %176, label %226

176:                                              ; preds = %25, %174
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 1
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %199, label %183

181:                                              ; preds = %183
  %182 = icmp eq i64 %198, 35
  br i1 %182, label %221, label %245

183:                                              ; preds = %176, %259
  %184 = phi i64 [ %260, %259 ], [ 0, %176 ]
  %185 = getelementptr inbounds i8, i8* %29, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = zext i8 %186 to i64
  %188 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %187
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i32
  %191 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.8, i64 0, i64 %184
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i64
  %194 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %193
  %195 = load i8, i8* %194, align 1
  %196 = sext i8 %195 to i32
  %197 = icmp eq i32 %190, %196
  %198 = or i64 %184, 1
  br i1 %197, label %181, label %226

199:                                              ; preds = %176
  %200 = bitcast %"class.WTF::StringImpl"* %28 to i16*
  br label %203

201:                                              ; preds = %203
  %202 = icmp eq i64 %220, 35
  br i1 %202, label %221, label %227

203:                                              ; preds = %243, %199
  %204 = phi i64 [ 0, %199 ], [ %244, %243 ]
  %205 = getelementptr inbounds i16, i16* %200, i64 %204
  %206 = load i16, i16* %205, align 2
  %207 = add i16 %206, -65
  %208 = icmp ult i16 %207, 26
  %209 = zext i1 %208 to i16
  %210 = shl nuw nsw i16 %209, 5
  %211 = or i16 %210, %206
  %212 = zext i16 %211 to i32
  %213 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.8, i64 0, i64 %204
  %214 = load i8, i8* %213, align 1
  %215 = zext i8 %214 to i64
  %216 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %215
  %217 = load i8, i8* %216, align 1
  %218 = sext i8 %217 to i32
  %219 = icmp eq i32 %212, %218
  %220 = or i64 %204, 1
  br i1 %219, label %201, label %226

221:                                              ; preds = %181, %201
  %222 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %0, i64 0, i32 1
  %223 = bitcast %"class.blink::ExecutionContext.base"* %222 to %"class.blink::ExecutionContext"*
  %224 = tail call %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"* %223) #11
  %225 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0
  tail call void @_ZN5blink21ContentSecurityPolicy22ReportReportOnlyInMetaERKN3WTF6StringE(%"class.blink::ContentSecurityPolicy"* %224, %"class.WTF::String"* dereferenceable(8) %225) #11
  br label %226

226:                                              ; preds = %183, %245, %203, %227, %25, %13, %21, %174, %8, %3, %221, %173
  ret void

227:                                              ; preds = %201
  %228 = getelementptr inbounds i16, i16* %200, i64 %220
  %229 = load i16, i16* %228, align 2
  %230 = add i16 %229, -65
  %231 = icmp ult i16 %230, 26
  %232 = zext i1 %231 to i16
  %233 = shl nuw nsw i16 %232, 5
  %234 = or i16 %233, %229
  %235 = zext i16 %234 to i32
  %236 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.8, i64 0, i64 %220
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %226

243:                                              ; preds = %227
  %244 = add nuw nsw i64 %204, 2
  br label %203

245:                                              ; preds = %181
  %246 = getelementptr inbounds i8, i8* %29, i64 %198
  %247 = load i8, i8* %246, align 1
  %248 = zext i8 %247 to i64
  %249 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %248
  %250 = load i8, i8* %249, align 1
  %251 = zext i8 %250 to i32
  %252 = getelementptr inbounds [36 x i8], [36 x i8]* @.str.8, i64 0, i64 %198
  %253 = load i8, i8* %252, align 1
  %254 = zext i8 %253 to i64
  %255 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %254
  %256 = load i8, i8* %255, align 1
  %257 = sext i8 %256 to i32
  %258 = icmp eq i32 %251, %257
  br i1 %258, label %259, label %226

259:                                              ; preds = %245
  %260 = add nuw nsw i64 %184, 2
  br label %183

261:                                              ; preds = %55
  %262 = getelementptr inbounds i16, i16* %54, i64 %74
  %263 = load i16, i16* %262, align 2
  %264 = add i16 %263, -65
  %265 = icmp ult i16 %264, 26
  %266 = zext i1 %265 to i16
  %267 = shl nuw nsw i16 %266, 5
  %268 = or i16 %267, %263
  %269 = zext i16 %268 to i32
  %270 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.7, i64 0, i64 %74
  %271 = load i8, i8* %270, align 1
  %272 = zext i8 %271 to i64
  %273 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %272
  %274 = load i8, i8* %273, align 1
  %275 = sext i8 %274 to i32
  %276 = icmp eq i32 %269, %275
  br i1 %276, label %277, label %174

277:                                              ; preds = %261
  %278 = add nuw nsw i64 %58, 2
  br label %57

279:                                              ; preds = %35
  %280 = getelementptr inbounds i8, i8* %29, i64 %52
  %281 = load i8, i8* %280, align 1
  %282 = zext i8 %281 to i64
  %283 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %282
  %284 = load i8, i8* %283, align 1
  %285 = zext i8 %284 to i32
  %286 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.7, i64 0, i64 %52
  %287 = load i8, i8* %286, align 1
  %288 = zext i8 %287 to i64
  %289 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %288
  %290 = load i8, i8* %289, align 1
  %291 = sext i8 %290 to i32
  %292 = icmp eq i32 %285, %291
  br i1 %292, label %293, label %174

293:                                              ; preds = %279
  %294 = add nuw nsw i64 %38, 2
  br label %37
}

declare %"class.blink::ContentSecurityPolicy"* @_ZNK5blink16ExecutionContext24GetContentSecurityPolicyEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare void @_ZN5blink21ContentSecurityPolicy21ReportMetaOutsideHeadERKN3WTF6StringE(%"class.blink::ContentSecurityPolicy"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9HttpEquiv27ProcessHttpEquivOriginTrialEPNS_14LocalDOMWindowERKN3WTF12AtomicStringE(%"class.blink::LocalDOMWindow"* readonly, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = icmp eq %"class.blink::LocalDOMWindow"* %0, null
  br i1 %5, label %50, label %6

6:                                                ; preds = %2
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase37is_third_party_origin_trials_enabled_E, align 1, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %46, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 112, i1 false)
  %11 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink19GetCurrentScriptUrlEi(i32 1) #11
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %13, align 8
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #11
  br label %29

29:                                               ; preds = %9, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %30 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %3) #11
  br i1 %30, label %31, label %45

31:                                               ; preds = %29
  %32 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* nonnull dereferenceable(112) %3) #11
  %33 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %0, i64 0, i32 1, i32 26, i32 0, i32 0
  %34 = load %"class.blink::OriginTrialContext"*, %"class.blink::OriginTrialContext"** %33, align 8
  %35 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  call void @_ZN5blink18OriginTrialContext26AddTokenFromExternalScriptERKN3WTF6StringEPKNS_14SecurityOriginE(%"class.blink::OriginTrialContext"* %34, %"class.WTF::String"* dereferenceable(8) %35, %"class.blink::SecurityOrigin"* %32) #11
  %36 = icmp eq %"class.blink::SecurityOrigin"* %32, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %32, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %38) #11
  %39 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %32) #11
  %43 = bitcast %"class.blink::SecurityOrigin"* %32 to i8*
  call void @free(i8* %43) #11
  br label %44

44:                                               ; preds = %31, %37, %42
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #11
  br label %50

45:                                               ; preds = %29
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #11
  br label %46

46:                                               ; preds = %6, %45
  %47 = getelementptr inbounds %"class.blink::LocalDOMWindow", %"class.blink::LocalDOMWindow"* %0, i64 0, i32 1, i32 26, i32 0, i32 0
  %48 = load %"class.blink::OriginTrialContext"*, %"class.blink::OriginTrialContext"** %47, align 8
  %49 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0
  call void @_ZN5blink18OriginTrialContext8AddTokenERKN3WTF6StringE(%"class.blink::OriginTrialContext"* %48, %"class.WTF::String"* dereferenceable(8) %49) #11
  br label %50

50:                                               ; preds = %44, %2, %46
  ret void
}

declare %"class.blink::Settings"* @_ZNK5blink5Frame11GetSettingsEv(%"class.blink::Frame"*) local_unnamed_addr #3

declare void @_ZN5blink28ParseContentSecurityPoliciesERKN3WTF6StringEN7network5mojom25ContentSecurityPolicyTypeENS5_27ContentSecurityPolicySourceERKNS_14SecurityOriginE(%"class.WTF::Vector.439"* sret, %"class.WTF::String"* dereferenceable(8), i32, i32, %"class.blink::SecurityOrigin"* dereferenceable(96)) local_unnamed_addr #3

declare %"class.blink::SecurityOrigin"* @_ZNK5blink16ExecutionContext17GetSecurityOriginEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare void @_ZN5blink21ContentSecurityPolicy11AddPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ContentSecurityPolicy"*, %"class.WTF::Vector.439"*) local_unnamed_addr #3

declare void @_ZN5blink15PolicyContainer26AddContentSecurityPoliciesEN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::PolicyContainer"*, %"class.WTF::Vector.439"*) local_unnamed_addr #3

declare void @_ZN5blink21ContentSecurityPolicy22ReportReportOnlyInMetaERKN3WTF6StringE(%"class.blink::ContentSecurityPolicy"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink5Frame11IsMainFrameEv(%"class.blink::Frame"*) local_unnamed_addr #3

declare %"class.blink::WebContentSettingsClient"* @_ZN5blink10LocalFrame24GetContentSettingsClientEv(%"class.blink::LocalFrame"*) local_unnamed_addr #3

declare void @_ZN5blink34FrameClientHintsPreferencesContextC1EPNS_10LocalFrameE(%"class.blink::FrameClientHintsPreferencesContext"*, %"class.blink::LocalFrame"*) unnamed_addr #3

declare void @_ZN5blink22ClientHintsPreferences27UpdateFromHttpEquivAcceptCHERKN3WTF6StringERKNS_4KURLEPNS0_7ContextE(%"class.blink::ClientHintsPreferences"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"class.blink::ClientHintsPreferences::Context"*) local_unnamed_addr #3

declare void @_ZN5blink11StyleEngine19SetHttpDefaultStyleERKN3WTF6StringE(%"class.blink::StyleEngine"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.WTF::StringImpl"* @_ZN5blink19GetCurrentScriptUrlEi(i32) local_unnamed_addr #3

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #3

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin6CreateERKNS_4KURLE(%"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #3

declare void @_ZN5blink18OriginTrialContext26AddTokenFromExternalScriptERKN3WTF6StringEPKNS_14SecurityOriginE(%"class.blink::OriginTrialContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::SecurityOrigin"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare void @_ZN5blink18OriginTrialContext8AddTokenERKN3WTF6StringE(%"class.blink::OriginTrialContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink21ContentSecurityPolicy11AllowInlineENS0_10InlineTypeEPNS_7ElementERKN3WTF6StringES7_S7_RKNS4_13OrdinalNumberENS_20ReportingDispositionE(%"class.blink::ContentSecurityPolicy"*, i32, %"class.blink::Element"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::OrdinalNumber"* dereferenceable(4), i32) local_unnamed_addr #3

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink7NullURLEv() local_unnamed_addr #3

declare %"class.blink::Document"* @_ZNK5blink14LocalDOMWindow8documentEv(%"class.blink::LocalDOMWindow"*) local_unnamed_addr #3

declare void @_ZN5blink8Document22MaybeHandleHttpRefreshERKN3WTF6StringENS0_15HttpRefreshTypeE(%"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare void @_ZN5blink6WebURLC1ERKNS_4KURLE(%"class.blink::WebURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3url6ParsedD1Ev(%"struct.url::Parsed"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #11
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #11
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #11
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #11
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #11
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #11
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ConsoleMessage"* @_ZN5blink25MakeGarbageCollectedTraitINS_14ConsoleMessageEE4CallIJNS_5mojom20ConsoleMessageSourceENS4_19ConsoleMessageLevelERA112_KcEEEPS1_DpOT_(i32* dereferenceable(4), i32* dereferenceable(4), [112 x i8]* dereferenceable(112)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64 72) #11
  %6 = bitcast i8* %5 to %"class.blink::ConsoleMessage"*
  %7 = load i32, i32* %0, align 4
  %8 = load i32, i32* %1, align 4
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds [112 x i8], [112 x i8]* %2, i64 0, i64 0
  %11 = icmp eq [112 x i8]* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = tail call i64 @strlen(i8* nonnull %10) #13
  br label %14

14:                                               ; preds = %3, %12
  %15 = phi i64 [ %13, %12 ], [ 0, %3 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %10, i64 %15) #11
  %16 = call %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"* null) #11
  call void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"* %6, i32 %7, i32 %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::SourceLocation"* %16) #11
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #11
  br label %33

33:                                               ; preds = %14, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  %34 = getelementptr inbounds i8, i8* %5, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  ret %"class.blink::ConsoleMessage"* %6
}

declare %"class.blink::SourceLocation"* @_ZN5blink14SourceLocation7CaptureEPNS_16ExecutionContextE(%"class.blink::ExecutionContext"*) local_unnamed_addr #3

declare void @_ZN5blink14ConsoleMessageC1ENS_5mojom20ConsoleMessageSourceENS1_19ConsoleMessageLevelERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEE(%"class.blink::ConsoleMessage"*, i32, i32, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14ConsoleMessageEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14ConsoleMessageEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #11
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %40, i8* %41) #11
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #11
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14ConsoleMessageEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ConsoleMessage"*
  tail call void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_14ConsoleMessageEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ConsoleMessage"*
  tail call void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14ConsoleMessageEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

declare void @_ZNK5blink14ConsoleMessage5TraceEPNS_7VisitorE(%"class.blink::ConsoleMessage"*, %"class.blink::Visitor"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14ConsoleMessageD1Ev(%"class.blink::ConsoleMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.439"* noalias sret, %"class.WTF::Vector.439"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.442", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.439"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #11
  %8 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !3

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %12) #11
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #11
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.439"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.442"*, %"class.mojo::StructPtr.442"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.442"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.442"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.442"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %31 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %31, align 8, !noalias !5
  %33 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !5
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.442"* nonnull sret %3, %"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %32) #11
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !3

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.442"*, %"class.mojo::StructPtr.442"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.442"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.439"* %0, %"class.mojo::StructPtr.442"* nonnull dereferenceable(8) %3) #11
  %50 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %50 to i8*
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %50) #11
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %55 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.442"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.439"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.442"*, %"class.mojo::StructPtr.442"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.442"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.439"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.442"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.442"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.442"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.442"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !12

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.442"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.442"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.442"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.442"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.442"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.442"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.442"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.442"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.442"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.442"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.442"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.442"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.442"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #11
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %73) #11
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #11
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.442"*, %"class.mojo::StructPtr.442"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.442"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.442"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.442"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.442"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.442"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.442"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !14

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.442"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.442"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.442"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.442"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.442"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.442"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.442"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.442"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.442"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.442"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.442"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.442"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.442"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.439"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #11
  %149 = bitcast %"class.WTF::Vector.439"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.439"*, %"class.mojo::StructPtr.442"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.442"*, %"class.mojo::StructPtr.442"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.442"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.442"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.442"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.439"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.442"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.439"* %0, i32 %22) #11
  %36 = load %"class.mojo::StructPtr.442"*, %"class.mojo::StructPtr.442"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.442"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.442"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.439", %"class.WTF::Vector.439"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.442"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEmm(i64 %55) #11
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEEPKcv, i64 0, i64 0)) #11
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.439"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.442"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.439"* %0, i32 %50) #11
  %64 = load %"class.mojo::StructPtr.442"*, %"class.mojo::StructPtr.442"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.442"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.442"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.442"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.442"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.442", %"class.mojo::StructPtr.442"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.442"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink21ContentSecurityPolicy5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.442"* noalias sret, %"class.network::mojom::blink::ContentSecurityPolicy"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.mojo::StructPtr.446", align 8
  %5 = alloca %"class.WTF::HashMap.453", align 8
  %6 = alloca %"class.WTF::HashMap.458", align 8
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i32, align 4
  %11 = alloca %"class.mojo::InlinedStructPtr", align 8
  %12 = alloca i8, align 1
  %13 = alloca %"class.WTF::Vector.463", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.mojo::StructPtr.468", align 8
  %16 = alloca %"class.WTF::Vector.463", align 8
  %17 = bitcast %"class.mojo::StructPtr.446"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %18, align 8, !noalias !15
  %20 = icmp eq %"class.network::mojom::blink::CSPSource"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.mojo::StructPtr.446"* %4 to i64*
  store i64 0, i64* %22, align 8, !alias.scope !15
  br label %24

23:                                               ; preds = %2
  call void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.446"* nonnull sret %4, %"class.network::mojom::blink::CSPSource"* nonnull %19) #11
  br label %24

24:                                               ; preds = %21, %23
  %25 = bitcast %"class.WTF::HashMap.453"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 1
  call void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_(%"class.WTF::HashMap.453"* nonnull sret %5, %"class.WTF::HashMap.453"* dereferenceable(24) %26) #11
  %27 = bitcast %"class.WTF::HashMap.458"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 2
  call void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_(%"class.WTF::HashMap.458"* nonnull sret %6, %"class.WTF::HashMap.458"* dereferenceable(24) %28) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  %29 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 3
  %30 = load i8, i8* %29, align 1, !range !4
  store i8 %30, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  %31 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 4
  %32 = load i8, i8* %31, align 1, !range !4
  store i8 %32, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #11
  %33 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 5
  %34 = load i8, i8* %33, align 1, !range !4
  store i8 %34, i8* %9, align 1
  %35 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 6
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %10, align 4
  %38 = bitcast %"class.mojo::InlinedStructPtr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #11
  %39 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 1
  %40 = load i32, i32* %39, align 8, !noalias !22
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #11, !alias.scope !22
  %43 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %43) #11
  %44 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 1
  store i32 0, i32* %44, align 8, !alias.scope !22
  br label %91

45:                                               ; preds = %24
  %46 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11, !noalias !29
  %47 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8, !noalias !29
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #11
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !3

64:                                               ; preds = %55
  call void @llvm.trap() #11
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %65, %50, %45
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %68, align 8, !noalias !29
  %69 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 1
  %70 = load i32, i32* %69, align 4, !noalias !29
  %71 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 7, i32 0, i32 2
  %72 = load i32, i32* %71, align 4, !noalias !29
  %73 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %73, %"class.WTF::String"* nonnull dereferenceable(8) %3, i32 %70, i32 %72) #11
  %74 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 1
  store i32 1, i32* %74, align 8, !alias.scope !32
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8, !noalias !29
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %67
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #11
  br label %90

90:                                               ; preds = %67, %86, %89
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11, !noalias !29
  br label %91

91:                                               ; preds = %42, %90
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #11
  %92 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 8
  %93 = load i8, i8* %92, align 1, !range !4
  store i8 %93, i8* %12, align 1
  %94 = bitcast %"class.WTF::Vector.463"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 9
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.463"* nonnull sret %13, %"class.WTF::Vector.463"* dereferenceable(16) %95) #11
  %96 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %96) #11
  %97 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 10
  %98 = load i32, i32* %97, align 4
  store i32 %98, i32* %14, align 4
  %99 = bitcast %"class.mojo::StructPtr.468"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #11
  %100 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %101 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %100, align 8, !noalias !35
  %102 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %91
  %104 = bitcast %"class.mojo::StructPtr.468"* %15 to i64*
  store i64 0, i64* %104, align 8, !alias.scope !35
  br label %106

105:                                              ; preds = %91
  call void @_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.468"* nonnull sret %15, %"class.network::mojom::blink::CSPTrustedTypes"* nonnull %101) #11
  br label %106

106:                                              ; preds = %103, %105
  %107 = bitcast %"class.WTF::Vector.463"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %107) #11
  %108 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicy", %"class.network::mojom::blink::ContentSecurityPolicy"* %1, i64 0, i32 12
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.463"* nonnull sret %16, %"class.WTF::Vector.463"* dereferenceable(16) %108) #11
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.442"* %0, %"class.mojo::StructPtr.446"* nonnull dereferenceable(8) %4, %"class.WTF::HashMap.453"* nonnull dereferenceable(24) %5, %"class.WTF::HashMap.458"* nonnull dereferenceable(24) %6, i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %9, i32* nonnull dereferenceable(4) %10, %"class.mojo::InlinedStructPtr"* nonnull dereferenceable(24) %11, i8* nonnull dereferenceable(1) %12, %"class.WTF::Vector.463"* nonnull dereferenceable(16) %13, i32* nonnull dereferenceable(4) %14, %"class.mojo::StructPtr.468"* nonnull dereferenceable(8) %15, %"class.WTF::Vector.463"* nonnull dereferenceable(16) %16) #11
  %109 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %16, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::String"*, %"class.WTF::String"** %109, align 8
  %111 = icmp eq %"class.WTF::String"* %110, null
  br i1 %111, label %146, label %112, !prof !2

112:                                              ; preds = %106
  %113 = bitcast %"class.WTF::String"* %110 to i8*
  %114 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %16, i64 0, i32 0, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %144, label %117, !prof !3

117:                                              ; preds = %112
  %118 = zext i32 %115 to i64
  %119 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 %118
  br label %120

120:                                              ; preds = %138, %117
  %121 = phi %"class.WTF::String"* [ %139, %138 ], [ %110, %117 ]
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #11
  br label %138

138:                                              ; preds = %137, %134, %120
  %139 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %121, i64 1
  %140 = icmp eq %"class.WTF::String"* %139, %119
  br i1 %140, label %141, label %120

141:                                              ; preds = %138
  store i32 0, i32* %114, align 4
  %142 = bitcast %"class.WTF::Vector.463"* %16 to i8**
  %143 = load i8*, i8** %142, align 8
  br label %144

144:                                              ; preds = %141, %112
  %145 = phi i8* [ %143, %141 ], [ %113, %112 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %145) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %109, align 8
  br label %146

146:                                              ; preds = %106, %144
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %107) #11
  %147 = getelementptr inbounds %"class.mojo::StructPtr.468", %"class.mojo::StructPtr.468"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %148 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %147, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %147, align 8
  %149 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %148, null
  br i1 %149, label %152, label %150

150:                                              ; preds = %146
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %148) #11
  %151 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %148 to i8*
  call void @_ZdlPv(i8* %151) #12
  br label %152

152:                                              ; preds = %146, %150
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %96) #11
  %153 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %13, i64 0, i32 0, i32 0, i32 0
  %154 = load %"class.WTF::String"*, %"class.WTF::String"** %153, align 8
  %155 = icmp eq %"class.WTF::String"* %154, null
  br i1 %155, label %190, label %156, !prof !2

156:                                              ; preds = %152
  %157 = bitcast %"class.WTF::String"* %154 to i8*
  %158 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %13, i64 0, i32 0, i32 0, i32 2
  %159 = load i32, i32* %158, align 4
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %188, label %161, !prof !3

161:                                              ; preds = %156
  %162 = zext i32 %159 to i64
  %163 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %154, i64 %162
  br label %164

164:                                              ; preds = %182, %161
  %165 = phi %"class.WTF::String"* [ %183, %182 ], [ %154, %161 ]
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #11
  br label %182

182:                                              ; preds = %181, %178, %164
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %165, i64 1
  %184 = icmp eq %"class.WTF::String"* %183, %163
  br i1 %184, label %185, label %164

185:                                              ; preds = %182
  store i32 0, i32* %158, align 4
  %186 = bitcast %"class.WTF::Vector.463"* %13 to i8**
  %187 = load i8*, i8** %186, align 8
  br label %188

188:                                              ; preds = %185, %156
  %189 = phi i8* [ %187, %185 ], [ %157, %156 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %189) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %153, align 8
  br label %190

190:                                              ; preds = %152, %188
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #11
  %191 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %11, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %191) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  %192 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %6, i64 0, i32 0, i32 0
  %193 = load %"struct.WTF::KeyValuePair.462"*, %"struct.WTF::KeyValuePair.462"** %192, align 8
  %194 = icmp eq %"struct.WTF::KeyValuePair.462"* %193, null
  br i1 %194, label %217, label %195, !prof !2

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %6, i64 0, i32 0, i32 1
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %215, label %199

199:                                              ; preds = %195
  %200 = zext i32 %197 to i64
  br label %201

201:                                              ; preds = %212, %199
  %202 = phi i64 [ 0, %199 ], [ %213, %212 ]
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %193, i64 %202, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %204, -1000001
  br i1 %205, label %212, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %193, i64 %202, i32 1, i32 0, i32 0, i32 0, i32 0
  %208 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %207, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %207, align 8
  %209 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %208, null
  br i1 %209, label %212, label %210

210:                                              ; preds = %206
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %208) #11
  %211 = bitcast %"class.network::mojom::blink::CSPSourceList"* %208 to i8*
  call void @_ZdlPv(i8* %211) #12
  br label %212

212:                                              ; preds = %210, %206, %201
  %213 = add nuw nsw i64 %202, 1
  %214 = icmp eq i64 %213, %200
  br i1 %214, label %215, label %201

215:                                              ; preds = %212, %195
  %216 = bitcast %"struct.WTF::KeyValuePair.462"* %193 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %216) #11
  store %"struct.WTF::KeyValuePair.462"* null, %"struct.WTF::KeyValuePair.462"** %192, align 8
  br label %217

217:                                              ; preds = %190, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  %218 = getelementptr inbounds %"class.WTF::HashMap.453", %"class.WTF::HashMap.453"* %5, i64 0, i32 0, i32 0
  %219 = load %"struct.WTF::KeyValuePair.457"*, %"struct.WTF::KeyValuePair.457"** %218, align 8
  %220 = icmp eq %"struct.WTF::KeyValuePair.457"* %219, null
  br i1 %220, label %254, label %221, !prof !2

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.WTF::HashMap.453", %"class.WTF::HashMap.453"* %5, i64 0, i32 0, i32 1
  %223 = load i32, i32* %222, align 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %252, label %225

225:                                              ; preds = %221
  %226 = zext i32 %223 to i64
  br label %227

227:                                              ; preds = %249, %225
  %228 = phi i64 [ 0, %225 ], [ %250, %249 ]
  %229 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %219, i64 %228, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, -1000001
  br i1 %231, label %249, label %232

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %219, i64 %228, i32 1, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #11
  br label %249

249:                                              ; preds = %248, %245, %232, %227
  %250 = add nuw nsw i64 %228, 1
  %251 = icmp eq i64 %250, %226
  br i1 %251, label %252, label %227

252:                                              ; preds = %249, %221
  %253 = bitcast %"struct.WTF::KeyValuePair.457"* %219 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %253) #11
  store %"struct.WTF::KeyValuePair.457"* null, %"struct.WTF::KeyValuePair.457"** %218, align 8
  br label %254

254:                                              ; preds = %217, %252
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #11
  %255 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %256 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %255, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %255, align 8
  %257 = icmp eq %"class.network::mojom::blink::CSPSource"* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %256) #11
  %259 = bitcast %"class.network::mojom::blink::CSPSource"* %256 to i8*
  call void @_ZdlPv(i8* %259) #12
  br label %260

260:                                              ; preds = %254, %258
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEC2IJNS0_INS3_9CSPSourceEEEN3WTF7HashMapINS2_16CSPDirectiveNameENS9_6StringENS9_7IntHashISB_EENS9_10HashTraitsISB_EENSF_ISC_EENS9_18PartitionAllocatorEEENSA_ISB_NS0_INS3_13CSPSourceListEEESE_SG_NSF_ISL_EESI_EEbbbNS2_15WebSandboxFlagsENS_16InlinedStructPtrINS3_27ContentSecurityPolicyHeaderEEEbNS9_6VectorISC_Lj0ESI_EENS2_25CSPRequireTrustedTypesForENS0_INS3_15CSPTrustedTypesEEEST_EEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.442"*, %"class.mojo::StructPtr.446"* dereferenceable(8), %"class.WTF::HashMap.453"* dereferenceable(24), %"class.WTF::HashMap.458"* dereferenceable(24), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i32* dereferenceable(4), %"class.mojo::InlinedStructPtr"* dereferenceable(24), i8* dereferenceable(1), %"class.WTF::Vector.463"* dereferenceable(16), i32* dereferenceable(4), %"class.mojo::StructPtr.468"* dereferenceable(8), %"class.WTF::Vector.463"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %15 = alloca %"class.mojo::StructPtr.446", align 8
  %16 = alloca %"class.WTF::HashMap.458", align 8
  %17 = alloca %"class.mojo::InlinedStructPtr", align 8
  %18 = alloca %"class.WTF::Vector.463", align 8
  %19 = alloca %"class.mojo::StructPtr.468", align 8
  %20 = alloca %"class.WTF::Vector.463", align 8
  %21 = tail call i8* @_Znwm(i64 144) #12
  %22 = bitcast i8* %21 to %"class.network::mojom::blink::ContentSecurityPolicy"*
  %23 = bitcast %"class.mojo::StructPtr.446"* %15 to i64*
  %24 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = bitcast %"class.mojo::StructPtr.446"* %1 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 0, i64* %25, align 8
  %27 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %16, i64 0, i32 0, i32 1
  %28 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %16, i64 0, i32 0, i32 2
  %29 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %16, i64 0, i32 0, i32 3
  %30 = bitcast %"class.WTF::HashMap.458"* %3 to i64*
  %31 = bitcast %"class.WTF::HashMap.458"* %16 to i64*
  store i64 0, i64* %31, align 8
  %32 = load i64, i64* %30, align 8
  %33 = bitcast %"class.WTF::HashMap.458"* %16 to i64*
  store atomic i64 0, i64* %30 monotonic, align 8
  store atomic i64 %32, i64* %33 monotonic, align 8
  %34 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %3, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %27, align 8
  store i32 0, i32* %34, align 4
  %36 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %3, i64 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %28, align 4
  store i32 0, i32* %36, align 4
  %38 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %3, i64 0, i32 0, i32 3
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 2147483647
  store i32 %40, i32* %29, align 8
  %41 = and i32 %39, -2147483648
  store i32 %41, i32* %38, align 8
  %42 = load i8, i8* %4, align 1, !range !4
  %43 = icmp ne i8 %42, 0
  %44 = load i8, i8* %5, align 1, !range !4
  %45 = icmp ne i8 %44, 0
  %46 = load i8, i8* %6, align 1, !range !4
  %47 = icmp ne i8 %46, 0
  %48 = load i32, i32* %7, align 4
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 0
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #11
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %17, i64 0, i32 1
  store i32 0, i32* %50, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #11
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #11
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 0
  call void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull dereferenceable(16) %49, %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16) %51) #11
  %52 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %8, i64 0, i32 1
  %53 = load i32, i32* %50, align 8
  %54 = load i32, i32* %52, align 4
  store i32 %54, i32* %50, align 8
  store i32 %53, i32* %52, align 4
  %55 = load i8, i8* %9, align 1, !range !4
  %56 = icmp ne i8 %55, 0
  %57 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %18, i64 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %18, i64 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.WTF::Vector.463"* %10 to i64*
  %60 = bitcast %"class.WTF::Vector.463"* %18 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.WTF::Vector.463"* %18 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %10, i64 0, i32 0, i32 0, i32 1
  %64 = load i32, i32* %63, align 4
  store i32 %64, i32* %57, align 8
  store i32 0, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %10, i64 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  store i32 %66, i32* %58, align 4
  store i32 0, i32* %65, align 4
  %67 = load i32, i32* %11, align 4
  %68 = bitcast %"class.mojo::StructPtr.468"* %19 to i64*
  %69 = getelementptr inbounds %"class.mojo::StructPtr.468", %"class.mojo::StructPtr.468"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.mojo::StructPtr.468"* %12 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %68, align 8
  store i64 0, i64* %70, align 8
  %72 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %20, i64 0, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %20, i64 0, i32 0, i32 0, i32 2
  %74 = bitcast %"class.WTF::Vector.463"* %13 to i64*
  %75 = bitcast %"class.WTF::Vector.463"* %20 to i64*
  store i64 0, i64* %75, align 8
  %76 = load i64, i64* %74, align 8
  %77 = bitcast %"class.WTF::Vector.463"* %20 to i64*
  store atomic i64 0, i64* %74 monotonic, align 8
  store atomic i64 %76, i64* %77 monotonic, align 8
  %78 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %13, i64 0, i32 0, i32 0, i32 1
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %72, align 8
  store i32 0, i32* %78, align 4
  %80 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %13, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  store i32 %81, i32* %73, align 4
  store i32 0, i32* %80, align 4
  call void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %22, %"class.mojo::StructPtr.446"* nonnull %15, %"class.WTF::HashMap.453"* dereferenceable(24) %2, %"class.WTF::HashMap.458"* nonnull %16, i1 zeroext %43, i1 zeroext %45, i1 zeroext %47, i32 %48, %"class.mojo::InlinedStructPtr"* nonnull %17, i1 zeroext %56, %"class.WTF::Vector.463"* nonnull %18, i32 %67, %"class.mojo::StructPtr.468"* nonnull %19, %"class.WTF::Vector.463"* nonnull %20) #11
  %82 = ptrtoint i8* %21 to i64
  %83 = bitcast %"class.mojo::StructPtr.442"* %0 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %20, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::String"*, %"class.WTF::String"** %84, align 8
  %86 = icmp eq %"class.WTF::String"* %85, null
  br i1 %86, label %120, label %87, !prof !2

87:                                               ; preds = %14
  %88 = bitcast %"class.WTF::String"* %85 to i8*
  %89 = load i32, i32* %73, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %118, label %91, !prof !3

91:                                               ; preds = %87
  %92 = zext i32 %89 to i64
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 %92
  br label %94

94:                                               ; preds = %112, %91
  %95 = phi %"class.WTF::String"* [ %113, %112 ], [ %85, %91 ]
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #11
  br label %112

112:                                              ; preds = %111, %108, %94
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %95, i64 1
  %114 = icmp eq %"class.WTF::String"* %113, %93
  br i1 %114, label %115, label %94

115:                                              ; preds = %112
  store i32 0, i32* %73, align 4
  %116 = bitcast %"class.WTF::Vector.463"* %20 to i8**
  %117 = load i8*, i8** %116, align 8
  br label %118

118:                                              ; preds = %115, %87
  %119 = phi i8* [ %117, %115 ], [ %88, %87 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %119) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %84, align 8
  br label %120

120:                                              ; preds = %14, %118
  %121 = load %"class.network::mojom::blink::CSPTrustedTypes"*, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  store %"class.network::mojom::blink::CSPTrustedTypes"* null, %"class.network::mojom::blink::CSPTrustedTypes"** %69, align 8
  %122 = icmp eq %"class.network::mojom::blink::CSPTrustedTypes"* %121, null
  br i1 %122, label %125, label %123

123:                                              ; preds = %120
  call void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %121) #11
  %124 = bitcast %"class.network::mojom::blink::CSPTrustedTypes"* %121 to i8*
  call void @_ZdlPv(i8* %124) #12
  br label %125

125:                                              ; preds = %120, %123
  %126 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %18, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::String"*, %"class.WTF::String"** %126, align 8
  %128 = icmp eq %"class.WTF::String"* %127, null
  br i1 %128, label %162, label %129, !prof !2

129:                                              ; preds = %125
  %130 = bitcast %"class.WTF::String"* %127 to i8*
  %131 = load i32, i32* %58, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %160, label %133, !prof !3

133:                                              ; preds = %129
  %134 = zext i32 %131 to i64
  %135 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 %134
  br label %136

136:                                              ; preds = %154, %133
  %137 = phi %"class.WTF::String"* [ %155, %154 ], [ %127, %133 ]
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #11
  br label %154

154:                                              ; preds = %153, %150, %136
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %137, i64 1
  %156 = icmp eq %"class.WTF::String"* %155, %135
  br i1 %156, label %157, label %136

157:                                              ; preds = %154
  store i32 0, i32* %58, align 4
  %158 = bitcast %"class.WTF::Vector.463"* %18 to i8**
  %159 = load i8*, i8** %158, align 8
  br label %160

160:                                              ; preds = %157, %129
  %161 = phi i8* [ %159, %157 ], [ %130, %129 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %161) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %126, align 8
  br label %162

162:                                              ; preds = %125, %160
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %49) #11
  %163 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %16, i64 0, i32 0, i32 0
  %164 = load %"struct.WTF::KeyValuePair.462"*, %"struct.WTF::KeyValuePair.462"** %163, align 8
  %165 = icmp eq %"struct.WTF::KeyValuePair.462"* %164, null
  br i1 %165, label %187, label %166, !prof !2

166:                                              ; preds = %162
  %167 = load i32, i32* %27, align 8
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %185, label %169

169:                                              ; preds = %166
  %170 = zext i32 %167 to i64
  br label %171

171:                                              ; preds = %182, %169
  %172 = phi i64 [ 0, %169 ], [ %183, %182 ]
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %164, i64 %172, i32 0
  %174 = load i32, i32* %173, align 4
  %175 = icmp eq i32 %174, -1000001
  br i1 %175, label %182, label %176

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %164, i64 %172, i32 1, i32 0, i32 0, i32 0, i32 0
  %178 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %177, align 8
  %179 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %178, null
  br i1 %179, label %182, label %180

180:                                              ; preds = %176
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %178) #11
  %181 = bitcast %"class.network::mojom::blink::CSPSourceList"* %178 to i8*
  call void @_ZdlPv(i8* %181) #12
  br label %182

182:                                              ; preds = %180, %176, %171
  %183 = add nuw nsw i64 %172, 1
  %184 = icmp eq i64 %183, %170
  br i1 %184, label %185, label %171

185:                                              ; preds = %182, %166
  %186 = bitcast %"struct.WTF::KeyValuePair.462"* %164 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %186) #11
  store %"struct.WTF::KeyValuePair.462"* null, %"struct.WTF::KeyValuePair.462"** %163, align 8
  br label %187

187:                                              ; preds = %162, %185
  %188 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %24, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %24, align 8
  %189 = icmp eq %"class.network::mojom::blink::CSPSource"* %188, null
  br i1 %189, label %192, label %190

190:                                              ; preds = %187
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %188) #11
  %191 = bitcast %"class.network::mojom::blink::CSPSource"* %188 to i8*
  call void @_ZdlPv(i8* %191) #12
  br label %192

192:                                              ; preds = %187, %190
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

declare void @_ZN7network5mojom5blink21ContentSecurityPolicyC1EN4mojo9StructPtrINS1_9CSPSourceEEERKN3WTF7HashMapINS0_16CSPDirectiveNameENS7_6StringENS7_7IntHashIS9_EENS7_10HashTraitsIS9_EENSD_ISA_EENS7_18PartitionAllocatorEEENS8_IS9_NS4_INS1_13CSPSourceListEEESC_SE_NSD_ISL_EESG_EEbbbNS0_15WebSandboxFlagsENS3_16InlinedStructPtrINS1_27ContentSecurityPolicyHeaderEEEbNS7_6VectorISA_Lj0ESG_EENS0_25CSPRequireTrustedTypesForENS4_INS1_15CSPTrustedTypesEEEST_(%"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.mojo::StructPtr.446"*, %"class.WTF::HashMap.453"* dereferenceable(24), %"class.WTF::HashMap.458"*, i1 zeroext, i1 zeroext, i1 zeroext, i32, %"class.mojo::InlinedStructPtr"*, i1 zeroext, %"class.WTF::Vector.463"*, i32, %"class.mojo::StructPtr.468"*, %"class.WTF::Vector.463"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"*) unnamed_addr #4

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN7network5mojom5blink27ContentSecurityPolicyHeaderEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16), %"class.network::mojom::blink::ContentSecurityPolicyHeader"* dereferenceable(16)) local_unnamed_addr #1 comdat {
  %3 = alloca %"class.network::mojom::blink::ContentSecurityPolicyHeader", align 8
  %4 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %3, i64 0, i32 1
  %9 = bitcast i32* %8 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"** %5, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #11
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #11
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %2, %12, %27
  %30 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0, i64 0, i32 1
  %31 = bitcast i32* %30 to i64*
  %32 = bitcast i32* %6 to i64*
  %33 = load i64, i64* %31, align 8
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %54, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %54

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #11
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !3

51:                                               ; preds = %42
  tail call void @llvm.trap() #11
  unreachable

52:                                               ; preds = %42
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %43, align 4
  br label %54

54:                                               ; preds = %52, %37, %29
  %55 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %56 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %0 to i64*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %55, i64* %56, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #11
  br label %72

72:                                               ; preds = %54, %68, %71
  %73 = getelementptr inbounds %"class.network::mojom::blink::ContentSecurityPolicyHeader", %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1, i64 0, i32 1
  %74 = bitcast i32* %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %31, align 8
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %95, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %95

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = zext i32 %85 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #11
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %83
  tail call void @llvm.trap() #11
  unreachable

93:                                               ; preds = %83
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %84, align 4
  br label %95

95:                                               ; preds = %93, %78, %72
  %96 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  %97 = bitcast %"class.network::mojom::blink::ContentSecurityPolicyHeader"* %1 to i64*
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %96, i64* %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %95, %109, %112
  %114 = load i64, i64* %32, align 8
  store i64 %114, i64* %74, align 8
  call void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderD1Ev(%"class.network::mojom::blink::ContentSecurityPolicyHeader"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink15CSPTrustedTypesD1Ev(%"class.network::mojom::blink::CSPTrustedTypes"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.446"* noalias sret, %"class.network::mojom::blink::CSPSource"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #11
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %15
  tail call void @llvm.trap() #11
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %28, align 8
  %29 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 1, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #11
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %38
  tail call void @llvm.trap() #11
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %27, %33, %48
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %51, align 8
  %52 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #11
  %55 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 4, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #11
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %63
  tail call void @llvm.trap() #11
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %50, %58, %73
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %76, align 8
  %77 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 5
  %78 = load i8, i8* %77, align 1, !range !4
  %79 = icmp ne i8 %78, 0
  %80 = getelementptr inbounds %"class.network::mojom::blink::CSPSource", %"class.network::mojom::blink::CSPSource"* %1, i64 0, i32 6
  %81 = load i8, i8* %80, align 1, !range !4
  %82 = icmp ne i8 %81, 0
  %83 = tail call i8* @_Znwm(i64 40) #12, !noalias !42
  %84 = bitcast i8* %83 to %"class.network::mojom::blink::CSPSource"*
  call void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"* nonnull %84, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 %53, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext %79, i1 zeroext %82) #11, !noalias !42
  %85 = ptrtoint i8* %83 to i64
  %86 = bitcast %"class.mojo::StructPtr.446"* %0 to i64*
  store i64 %85, i64* %86, align 8, !alias.scope !42
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %102, label %89

89:                                               ; preds = %75
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %95 = load i32, i32* %94, align 4
  br i1 %93, label %96, label %98

96:                                               ; preds = %89
  %97 = add i32 %95, -1
  store i32 %97, i32* %94, align 4
  br label %98

98:                                               ; preds = %96, %89
  %99 = phi i32 [ %97, %96 ], [ %95, %89 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #11
  br label %102

102:                                              ; preds = %75, %98, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #11
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #11
  br label %118

118:                                              ; preds = %102, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #11
  br label %134

134:                                              ; preds = %118, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  ret void
}

declare void @_ZN7network5mojom5blink9CSPSourceC1ERKN3WTF6StringES6_iS6_bb(%"class.network::mojom::blink::CSPSource"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS1_6StringENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENS9_IS6_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSD_(%"class.WTF::HashMap.453"* noalias sret, %"class.WTF::HashMap.453"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::HashMap.453"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap.453"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #11
  %7 = getelementptr inbounds %"class.WTF::HashMap.453", %"class.WTF::HashMap.453"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.453", %"class.WTF::HashMap.453"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.457"*, %"struct.WTF::KeyValuePair.457"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.453", %"class.WTF::HashMap.453"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %11, i64 %14
  br i1 %9, label %33, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.457"* [ %23, %22 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %25 [
    i32 -1000001, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.457"* %23, %15
  br i1 %24, label %33, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.457"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.457"* %26, %15
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = bitcast i32* %3 to i8*
  %30 = bitcast %"class.WTF::String"* %4 to i8*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.WTF::HashMap.453", %"class.WTF::HashMap.453"* %0, i64 0, i32 0
  br label %34

33:                                               ; preds = %22, %75, %85, %82, %2, %25
  ret void

34:                                               ; preds = %28, %85
  %35 = phi %"struct.WTF::KeyValuePair.457"* [ %26, %28 ], [ %79, %85 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #11
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %35, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %35, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #11
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  call void @llvm.trap() #11
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %34, %41, %56
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %31, align 8
  %59 = call { %"struct.WTF::KeyValuePair.457"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.454"* %32, i32* nonnull dereferenceable(4) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %75

75:                                               ; preds = %58, %71, %74
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #11
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %35, i64 1
  %77 = icmp eq %"struct.WTF::KeyValuePair.457"* %76, %15
  br i1 %77, label %33, label %78

78:                                               ; preds = %75, %82
  %79 = phi %"struct.WTF::KeyValuePair.457"* [ %83, %82 ], [ %76, %75 ]
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %79, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  switch i32 %81, label %85 [
    i32 -1000001, label %82
    i32 0, label %82
  ]

82:                                               ; preds = %78, %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %79, i64 1
  %84 = icmp eq %"struct.WTF::KeyValuePair.457"* %83, %15
  br i1 %84, label %33, label %78

85:                                               ; preds = %78
  %86 = icmp eq %"struct.WTF::KeyValuePair.457"* %79, %15
  br i1 %86, label %33, label %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.457"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES3_S5_EENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.454"*, i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.454", %"class.WTF::HashTable.454"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.457"*, %"struct.WTF::KeyValuePair.457"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.457"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.457"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.454"* %0, %"struct.WTF::KeyValuePair.457"* null)
  %9 = load %"struct.WTF::KeyValuePair.457"*, %"struct.WTF::KeyValuePair.457"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.457"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.454", %"class.WTF::HashTable.454"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.457"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.457"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %118, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.457"* %52, %"struct.WTF::KeyValuePair.457"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.457"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %59, i64 0, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.454", %"class.WTF::HashTable.454"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.457"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %87 = bitcast %"class.WTF::String"* %2 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %86, align 8
  %89 = bitcast %"class.WTF::String"* %85 to i64*
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  store i64 %88, i64* %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %81
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #11
  br label %106

106:                                              ; preds = %81, %102, %105
  %107 = getelementptr inbounds %"class.WTF::HashTable.454", %"class.WTF::HashTable.454"* %0, i64 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %107, align 4
  %110 = getelementptr inbounds %"class.WTF::HashTable.454", %"class.WTF::HashTable.454"* %0, i64 0, i32 3
  %111 = load i32, i32* %110, align 8
  %112 = add i32 %111, %109
  %113 = shl i32 %112, 1
  %114 = load i32, i32* %12, align 8
  %115 = icmp ult i32 %113, %114
  br i1 %115, label %118, label %116

116:                                              ; preds = %106
  %117 = tail call %"struct.WTF::KeyValuePair.457"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.454"* %0, %"struct.WTF::KeyValuePair.457"* %83)
  br label %118

118:                                              ; preds = %50, %106, %116
  %119 = phi i8 [ 1, %106 ], [ 1, %116 ], [ 0, %50 ]
  %120 = phi %"struct.WTF::KeyValuePair.457"* [ %83, %106 ], [ %117, %116 ], [ %52, %50 ]
  %121 = insertvalue { %"struct.WTF::KeyValuePair.457"*, i8 } undef, %"struct.WTF::KeyValuePair.457"* %120, 0
  %122 = insertvalue { %"struct.WTF::KeyValuePair.457"*, i8 } %121, i8 %119, 1
  ret { %"struct.WTF::KeyValuePair.457"*, i8 } %122
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.457"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.454"*, %"struct.WTF::KeyValuePair.457"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.454", %"class.WTF::HashTable.454"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.454", %"class.WTF::HashTable.454"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameENS_6StringEEEEEPKcv, i64 0, i64 0)) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.457"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %36, i64 %45, i32 1
  %49 = bitcast %"class.WTF::String"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %36, i64 %50, i32 1
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %36, i64 %54, i32 1
  %57 = bitcast %"class.WTF::String"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %36, i64 %58, i32 1
  %61 = bitcast %"class.WTF::String"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %36, i64 %69, i32 1
  %73 = bitcast %"class.WTF::String"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !45

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.457"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.454"* %0, %"struct.WTF::KeyValuePair.457"* %36, i32 %32, %"struct.WTF::KeyValuePair.457"* %1) #11
  ret %"struct.WTF::KeyValuePair.457"* %78
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.457"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSB_IS5_EEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.454"*, %"struct.WTF::KeyValuePair.457"*, i32, %"struct.WTF::KeyValuePair.457"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.457"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.454", %"class.WTF::HashTable.454"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.454", %"class.WTF::HashTable.454"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.454"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.457"*, %"struct.WTF::KeyValuePair.457"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.457"* %16 to i64
  br label %62

18:                                               ; preds = %168
  %19 = bitcast %"class.WTF::HashTable.454"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %169, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.457"* [ null, %10 ], [ %172, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %170, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.457"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %58, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %53, %29
  %32 = phi i64 [ 0, %29 ], [ %54, %53 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %53, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %25, i64 %32, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #11
  br label %53

53:                                               ; preds = %52, %49, %36, %31
  %54 = add nuw nsw i64 %32, 1
  %55 = icmp eq i64 %54, %30
  br i1 %55, label %56, label %31

56:                                               ; preds = %53, %27
  %57 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #11
  br label %58

58:                                               ; preds = %20, %56
  %59 = getelementptr inbounds %"class.WTF::HashTable.454", %"class.WTF::HashTable.454"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, -2147483648
  store i32 %61, i32* %59, align 8
  ret %"struct.WTF::KeyValuePair.457"* %23

62:                                               ; preds = %13, %168
  %63 = phi i64 [ %17, %13 ], [ %169, %168 ]
  %64 = phi i32 [ %7, %13 ], [ %170, %168 ]
  %65 = phi %"struct.WTF::KeyValuePair.457"* [ %16, %13 ], [ %171, %168 ]
  %66 = phi %"struct.WTF::KeyValuePair.457"* [ null, %13 ], [ %172, %168 ]
  %67 = phi i32 [ 0, %13 ], [ %173, %168 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %65, i64 %68, i32 0
  %70 = load i32, i32* %69, align 4
  switch i32 %70, label %71 [
    i32 -1000001, label %168
    i32 0, label %168
  ]

71:                                               ; preds = %62
  %72 = shl i32 %70, 15
  %73 = xor i32 %72, -1
  %74 = add i32 %70, %73
  %75 = lshr i32 %74, 10
  %76 = xor i32 %75, %74
  %77 = mul i32 %76, 9
  %78 = lshr i32 %77, 6
  %79 = xor i32 %78, %77
  %80 = shl i32 %79, 11
  %81 = xor i32 %80, -1
  %82 = add i32 %79, %81
  %83 = lshr i32 %82, 16
  %84 = xor i32 %83, %82
  %85 = and i32 %84, %14
  %86 = zext i32 %85 to i64
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %1, i64 %86
  %88 = ptrtoint %"struct.WTF::KeyValuePair.457"* %87 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %87, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %109, label %92

92:                                               ; preds = %71
  %93 = xor i32 %84, -1
  %94 = lshr i32 %82, 23
  %95 = add i32 %94, %93
  %96 = shl i32 %95, 12
  %97 = xor i32 %96, %95
  %98 = lshr i32 %97, 7
  %99 = xor i32 %98, %97
  %100 = shl i32 %99, 2
  %101 = xor i32 %100, %99
  %102 = lshr i32 %101, 20
  %103 = xor i32 %102, %101
  %104 = or i32 %103, 1
  %105 = zext i32 %104 to i64
  br label %115

106:                                              ; preds = %122
  %107 = ptrtoint %"struct.WTF::KeyValuePair.457"* %129 to i64
  %108 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.457"*
  br label %109

109:                                              ; preds = %106, %71
  %110 = phi i64 [ %107, %106 ], [ %88, %71 ]
  %111 = phi %"struct.WTF::KeyValuePair.457"* [ %108, %106 ], [ null, %71 ]
  %112 = icmp eq %"struct.WTF::KeyValuePair.457"* %111, null
  %113 = ptrtoint %"struct.WTF::KeyValuePair.457"* %111 to i64
  %114 = select i1 %112, i64 %110, i64 %113
  br label %134

115:                                              ; preds = %122, %92
  %116 = phi i64 [ 0, %92 ], [ %124, %122 ]
  %117 = phi i32 [ %90, %92 ], [ %132, %122 ]
  %118 = phi i64 [ %88, %92 ], [ %130, %122 ]
  %119 = phi i64 [ %86, %92 ], [ %128, %122 ]
  %120 = phi i64 [ 0, %92 ], [ %126, %122 ]
  %121 = icmp eq i32 %117, %70
  br i1 %121, label %134, label %122

122:                                              ; preds = %115
  %123 = icmp eq i32 %117, -1000001
  %124 = select i1 %123, i64 %118, i64 %116
  %125 = icmp eq i64 %120, 0
  %126 = select i1 %125, i64 %105, i64 %120
  %127 = add i64 %126, %119
  %128 = and i64 %127, %15
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %1, i64 %128
  %130 = ptrtoint %"struct.WTF::KeyValuePair.457"* %129 to i64
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %129, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %106, label %115

134:                                              ; preds = %115, %109
  %135 = phi i64 [ %114, %109 ], [ %118, %115 ]
  %136 = inttoptr i64 %135 to %"struct.WTF::KeyValuePair.457"*
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %136, i64 0, i32 1, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %153

152:                                              ; preds = %149
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #11
  br label %153

153:                                              ; preds = %134, %149, %152
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %136, i64 0, i32 0
  %155 = load i32, i32* %69, align 8
  store i32 %155, i32* %154, align 8
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %136, i64 0, i32 1
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %65, i64 %68, i32 1
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %157, i64 0, i32 0, i32 0
  %159 = bitcast %"class.WTF::String"* %157 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.WTF::String"* %156 to i64*
  store i64 %160, i64* %161, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %158, align 8
  %162 = load %"struct.WTF::KeyValuePair.457"*, %"struct.WTF::KeyValuePair.457"** %9, align 8
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.457", %"struct.WTF::KeyValuePair.457"* %162, i64 %68
  %164 = icmp eq %"struct.WTF::KeyValuePair.457"* %163, %3
  %165 = select i1 %164, %"struct.WTF::KeyValuePair.457"* %136, %"struct.WTF::KeyValuePair.457"* %66
  %166 = load i32, i32* %6, align 8
  %167 = ptrtoint %"struct.WTF::KeyValuePair.457"* %162 to i64
  br label %168

168:                                              ; preds = %62, %62, %153
  %169 = phi i64 [ %63, %62 ], [ %167, %153 ], [ %63, %62 ]
  %170 = phi i32 [ %64, %62 ], [ %166, %153 ], [ %64, %62 ]
  %171 = phi %"struct.WTF::KeyValuePair.457"* [ %65, %62 ], [ %162, %153 ], [ %65, %62 ]
  %172 = phi %"struct.WTF::KeyValuePair.457"* [ %66, %62 ], [ %165, %153 ], [ %66, %62 ]
  %173 = add i32 %67, 1
  %174 = icmp eq i32 %173, %170
  br i1 %174, label %18, label %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF7HashMapIN7network5mojom16CSPDirectiveNameENS_9StructPtrINS4_5blink13CSPSourceListEEENS1_7IntHashIS5_EENS1_10HashTraitsIS5_EENSC_IS9_EENS1_18PartitionAllocatorEEELb0EE5CloneERKSG_(%"class.WTF::HashMap.458"* noalias sret, %"class.WTF::HashMap.458"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.mojo::StructPtr.2409", align 8
  %5 = bitcast %"class.WTF::HashMap.458"* %0 to i8*
  %6 = bitcast %"class.WTF::HashMap.458"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #11
  %7 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %1, i64 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %1, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.462"*, %"struct.WTF::KeyValuePair.462"** %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %1, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %11, i64 %14
  br i1 %9, label %34, label %16

16:                                               ; preds = %2
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %16, %22
  %19 = phi %"struct.WTF::KeyValuePair.462"* [ %23, %22 ], [ %11, %16 ]
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  switch i32 %21, label %25 [
    i32 -1000001, label %22
    i32 0, label %22
  ]

22:                                               ; preds = %18, %18
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %19, i64 1
  %24 = icmp eq %"struct.WTF::KeyValuePair.462"* %23, %15
  br i1 %24, label %34, label %18

25:                                               ; preds = %18, %16
  %26 = phi %"struct.WTF::KeyValuePair.462"* [ %11, %16 ], [ %19, %18 ]
  %27 = icmp eq %"struct.WTF::KeyValuePair.462"* %26, %15
  br i1 %27, label %34, label %28

28:                                               ; preds = %25
  %29 = bitcast i32* %3 to i8*
  %30 = bitcast %"class.mojo::StructPtr.2409"* %4 to i8*
  %31 = bitcast %"class.mojo::StructPtr.2409"* %4 to i64*
  %32 = getelementptr inbounds %"class.WTF::HashMap.458", %"class.WTF::HashMap.458"* %0, i64 0, i32 0
  %33 = getelementptr inbounds %"class.mojo::StructPtr.2409", %"class.mojo::StructPtr.2409"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %35

34:                                               ; preds = %22, %50, %60, %57, %2, %25
  ret void

35:                                               ; preds = %28, %60
  %36 = phi %"struct.WTF::KeyValuePair.462"* [ %26, %28 ], [ %54, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #11
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %3, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %39, align 8, !noalias !46
  %41 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %35
  store i64 0, i64* %31, align 8, !alias.scope !46
  br label %44

43:                                               ; preds = %35
  call void @_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2409"* nonnull sret %4, %"class.network::mojom::blink::CSPSourceList"* nonnull %40) #11
  br label %44

44:                                               ; preds = %42, %43
  %45 = call { %"struct.WTF::KeyValuePair.462"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.459"* %32, i32* nonnull dereferenceable(4) %3, %"class.mojo::StructPtr.2409"* nonnull dereferenceable(8) %4) #11
  %46 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %33, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %33, align 8
  %47 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %46) #11
  %49 = bitcast %"class.network::mojom::blink::CSPSourceList"* %46 to i8*
  call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #11
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 1
  %52 = icmp eq %"struct.WTF::KeyValuePair.462"* %51, %15
  br i1 %52, label %34, label %53

53:                                               ; preds = %50, %57
  %54 = phi %"struct.WTF::KeyValuePair.462"* [ %58, %57 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  switch i32 %56, label %60 [
    i32 -1000001, label %57
    i32 0, label %57
  ]

57:                                               ; preds = %53, %53
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %54, i64 1
  %59 = icmp eq %"struct.WTF::KeyValuePair.462"* %58, %15
  br i1 %59, label %34, label %53

60:                                               ; preds = %53
  %61 = icmp eq %"struct.WTF::KeyValuePair.462"* %54, %15
  br i1 %61, label %34, label %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.462"*, i8 } @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EES3_S9_EENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.459"*, i32* dereferenceable(4), %"class.mojo::StructPtr.2409"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.459", %"class.WTF::HashTable.459"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.462"*, %"struct.WTF::KeyValuePair.462"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.462"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.462"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.459"* %0, %"struct.WTF::KeyValuePair.462"* null)
  %9 = load %"struct.WTF::KeyValuePair.462"*, %"struct.WTF::KeyValuePair.462"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.462"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.459", %"class.WTF::HashTable.459"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %81, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.462"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.462"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %111, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1000001
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.462"* %52, %"struct.WTF::KeyValuePair.462"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.462"* %59, null
  br i1 %69, label %81, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %59, i64 0, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %59, i64 0, i32 1
  %73 = bitcast %"class.mojo::StructPtr.2409"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.459", %"class.WTF::HashTable.459"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = load i32, i32* %1, align 4
  br label %81

81:                                               ; preds = %10, %68, %70
  %82 = phi i32 [ %80, %70 ], [ %16, %68 ], [ %16, %10 ]
  %83 = phi %"struct.WTF::KeyValuePair.462"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %83, i64 0, i32 0
  store i32 %82, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %83, i64 0, i32 1
  %86 = getelementptr inbounds %"class.mojo::StructPtr.2409", %"class.mojo::StructPtr.2409"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %87 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %86, align 8
  %88 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %87, null
  br i1 %88, label %89, label %91

89:                                               ; preds = %81
  %90 = bitcast %"class.mojo::StructPtr.2409"* %85 to i64*
  br label %95

91:                                               ; preds = %81
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %87) #11
  %92 = bitcast %"class.network::mojom::blink::CSPSourceList"* %87 to i8*
  tail call void @_ZdlPv(i8* %92) #12
  %93 = bitcast %"class.mojo::StructPtr.2409"* %85 to i64*
  %94 = load i64, i64* %93, align 8
  br label %95

95:                                               ; preds = %89, %91
  %96 = phi i64* [ %90, %89 ], [ %93, %91 ]
  %97 = phi i64 [ 0, %89 ], [ %94, %91 ]
  %98 = bitcast %"class.mojo::StructPtr.2409"* %2 to i64*
  %99 = load i64, i64* %98, align 8
  store i64 %99, i64* %96, align 8
  store i64 %97, i64* %98, align 8
  %100 = getelementptr inbounds %"class.WTF::HashTable.459", %"class.WTF::HashTable.459"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.WTF::HashTable.459", %"class.WTF::HashTable.459"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %102
  %106 = shl i32 %105, 1
  %107 = load i32, i32* %12, align 8
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %95
  %110 = tail call %"struct.WTF::KeyValuePair.462"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.459"* %0, %"struct.WTF::KeyValuePair.462"* %83)
  br label %111

111:                                              ; preds = %50, %95, %109
  %112 = phi i8 [ 1, %95 ], [ 1, %109 ], [ 0, %50 ]
  %113 = phi %"struct.WTF::KeyValuePair.462"* [ %83, %95 ], [ %110, %109 ], [ %52, %50 ]
  %114 = insertvalue { %"struct.WTF::KeyValuePair.462"*, i8 } undef, %"struct.WTF::KeyValuePair.462"* %113, 0
  %115 = insertvalue { %"struct.WTF::KeyValuePair.462"*, i8 } %114, i8 %112, 1
  ret { %"struct.WTF::KeyValuePair.462"*, i8 } %115
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.462"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.459"*, %"struct.WTF::KeyValuePair.462"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.459", %"class.WTF::HashTable.459"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.459", %"class.WTF::HashTable.459"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIN7network5mojom16CSPDirectiveNameEN4mojo9StructPtrINS3_5blink13CSPSourceListEEEEEEEPKcv, i64 0, i64 0)) #11
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.462"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %77, label %38

38:                                               ; preds = %31
  %39 = add nsw i64 %33, -1
  %40 = and i64 %33, 3
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %65, label %42

42:                                               ; preds = %38
  %43 = sub nsw i64 %33, %40
  br label %44

44:                                               ; preds = %44, %42
  %45 = phi i64 [ 0, %42 ], [ %62, %44 ]
  %46 = phi i64 [ %43, %42 ], [ %63, %44 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 %45, i32 0
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 %45, i32 1
  %49 = bitcast %"class.mojo::StructPtr.2409"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = or i64 %45, 1
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 %50, i32 0
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 %50, i32 1
  %53 = bitcast %"class.mojo::StructPtr.2409"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = or i64 %45, 2
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 %54, i32 0
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 %54, i32 1
  %57 = bitcast %"class.mojo::StructPtr.2409"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = or i64 %45, 3
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 %58, i32 0
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 %58, i32 1
  %61 = bitcast %"class.mojo::StructPtr.2409"* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = add nuw nsw i64 %45, 4
  %63 = add i64 %46, -4
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %44

65:                                               ; preds = %44, %38
  %66 = phi i64 [ 0, %38 ], [ %62, %44 ]
  %67 = icmp eq i64 %40, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %65, %68
  %69 = phi i64 [ %74, %68 ], [ %66, %65 ]
  %70 = phi i64 [ %75, %68 ], [ %40, %65 ]
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 %69, i32 0
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %36, i64 %69, i32 1
  %73 = bitcast %"class.mojo::StructPtr.2409"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = add nuw nsw i64 %69, 1
  %75 = add i64 %70, -1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %68, !llvm.loop !53

77:                                               ; preds = %65, %68, %31
  %78 = call %"struct.WTF::KeyValuePair.462"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.459"* %0, %"struct.WTF::KeyValuePair.462"* %36, i32 %32, %"struct.WTF::KeyValuePair.462"* %1) #11
  ret %"struct.WTF::KeyValuePair.462"* %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.462"* @_ZN3WTF9HashTableIN7network5mojom16CSPDirectiveNameENS_12KeyValuePairIS3_N4mojo9StructPtrINS2_5blink13CSPSourceListEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSF_IS9_EEEESG_NS_18PartitionAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.459"*, %"struct.WTF::KeyValuePair.462"*, i32, %"struct.WTF::KeyValuePair.462"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.462"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.459", %"class.WTF::HashTable.459"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.459", %"class.WTF::HashTable.459"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.459"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.462"*, %"struct.WTF::KeyValuePair.462"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.462"* %16 to i64
  br label %51

18:                                               ; preds = %146
  %19 = bitcast %"class.WTF::HashTable.459"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %147, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.462"* [ null, %10 ], [ %150, %18 ]
  %24 = phi i32 [ 0, %10 ], [ %148, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %25 = inttoptr i64 %22 to %"struct.WTF::KeyValuePair.462"*
  %26 = icmp eq i64 %22, 0
  br i1 %26, label %47, label %27

27:                                               ; preds = %20
  %28 = icmp eq i32 %24, 0
  br i1 %28, label %45, label %29

29:                                               ; preds = %27
  %30 = zext i32 %24 to i64
  br label %31

31:                                               ; preds = %42, %29
  %32 = phi i64 [ 0, %29 ], [ %43, %42 ]
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %25, i64 %32, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1000001
  br i1 %35, label %42, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %25, i64 %32, i32 1, i32 0, i32 0, i32 0, i32 0
  %38 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %37, align 8
  %39 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %36
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %38) #11
  %41 = bitcast %"class.network::mojom::blink::CSPSourceList"* %38 to i8*
  tail call void @_ZdlPv(i8* %41) #12
  br label %42

42:                                               ; preds = %40, %36, %31
  %43 = add nuw nsw i64 %32, 1
  %44 = icmp eq i64 %43, %30
  br i1 %44, label %45, label %31

45:                                               ; preds = %42, %27
  %46 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %46) #11
  br label %47

47:                                               ; preds = %20, %45
  %48 = getelementptr inbounds %"class.WTF::HashTable.459", %"class.WTF::HashTable.459"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = and i32 %49, -2147483648
  store i32 %50, i32* %48, align 8
  ret %"struct.WTF::KeyValuePair.462"* %23

51:                                               ; preds = %13, %146
  %52 = phi i64 [ %17, %13 ], [ %147, %146 ]
  %53 = phi i32 [ %7, %13 ], [ %148, %146 ]
  %54 = phi %"struct.WTF::KeyValuePair.462"* [ %16, %13 ], [ %149, %146 ]
  %55 = phi %"struct.WTF::KeyValuePair.462"* [ null, %13 ], [ %150, %146 ]
  %56 = phi i32 [ 0, %13 ], [ %151, %146 ]
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %54, i64 %57, i32 0
  %59 = load i32, i32* %58, align 4
  switch i32 %59, label %60 [
    i32 -1000001, label %146
    i32 0, label %146
  ]

60:                                               ; preds = %51
  %61 = shl i32 %59, 15
  %62 = xor i32 %61, -1
  %63 = add i32 %59, %62
  %64 = lshr i32 %63, 10
  %65 = xor i32 %64, %63
  %66 = mul i32 %65, 9
  %67 = lshr i32 %66, 6
  %68 = xor i32 %67, %66
  %69 = shl i32 %68, 11
  %70 = xor i32 %69, -1
  %71 = add i32 %68, %70
  %72 = lshr i32 %71, 16
  %73 = xor i32 %72, %71
  %74 = and i32 %73, %14
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %1, i64 %75
  %77 = ptrtoint %"struct.WTF::KeyValuePair.462"* %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %76, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %98, label %81

81:                                               ; preds = %60
  %82 = xor i32 %73, -1
  %83 = lshr i32 %71, 23
  %84 = add i32 %83, %82
  %85 = shl i32 %84, 12
  %86 = xor i32 %85, %84
  %87 = lshr i32 %86, 7
  %88 = xor i32 %87, %86
  %89 = shl i32 %88, 2
  %90 = xor i32 %89, %88
  %91 = lshr i32 %90, 20
  %92 = xor i32 %91, %90
  %93 = or i32 %92, 1
  %94 = zext i32 %93 to i64
  br label %104

95:                                               ; preds = %111
  %96 = ptrtoint %"struct.WTF::KeyValuePair.462"* %118 to i64
  %97 = inttoptr i64 %113 to %"struct.WTF::KeyValuePair.462"*
  br label %98

98:                                               ; preds = %95, %60
  %99 = phi i64 [ %96, %95 ], [ %77, %60 ]
  %100 = phi %"struct.WTF::KeyValuePair.462"* [ %97, %95 ], [ null, %60 ]
  %101 = icmp eq %"struct.WTF::KeyValuePair.462"* %100, null
  %102 = ptrtoint %"struct.WTF::KeyValuePair.462"* %100 to i64
  %103 = select i1 %101, i64 %99, i64 %102
  br label %123

104:                                              ; preds = %111, %81
  %105 = phi i64 [ 0, %81 ], [ %113, %111 ]
  %106 = phi i32 [ %79, %81 ], [ %121, %111 ]
  %107 = phi i64 [ %77, %81 ], [ %119, %111 ]
  %108 = phi i64 [ %75, %81 ], [ %117, %111 ]
  %109 = phi i64 [ 0, %81 ], [ %115, %111 ]
  %110 = icmp eq i32 %106, %59
  br i1 %110, label %123, label %111

111:                                              ; preds = %104
  %112 = icmp eq i32 %106, -1000001
  %113 = select i1 %112, i64 %107, i64 %105
  %114 = icmp eq i64 %109, 0
  %115 = select i1 %114, i64 %94, i64 %109
  %116 = add i64 %115, %108
  %117 = and i64 %116, %15
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %1, i64 %117
  %119 = ptrtoint %"struct.WTF::KeyValuePair.462"* %118 to i64
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %118, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %95, label %104

123:                                              ; preds = %104, %98
  %124 = phi i64 [ %103, %98 ], [ %107, %104 ]
  %125 = inttoptr i64 %124 to %"struct.WTF::KeyValuePair.462"*
  %126 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %125, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %127 = load %"class.network::mojom::blink::CSPSourceList"*, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %126, align 8
  %128 = icmp eq %"class.network::mojom::blink::CSPSourceList"* %127, null
  br i1 %128, label %131, label %129

129:                                              ; preds = %123
  tail call void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"* nonnull %127) #11
  %130 = bitcast %"class.network::mojom::blink::CSPSourceList"* %127 to i8*
  tail call void @_ZdlPv(i8* %130) #12
  br label %131

131:                                              ; preds = %123, %129
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %125, i64 0, i32 0
  %133 = load i32, i32* %58, align 8
  store i32 %133, i32* %132, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %125, i64 0, i32 1
  %135 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %54, i64 %57, i32 1
  %136 = bitcast %"class.mojo::StructPtr.2409"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.2409", %"class.mojo::StructPtr.2409"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSourceList"* null, %"class.network::mojom::blink::CSPSourceList"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.2409"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  store i64 0, i64* %138, align 8
  %140 = load %"struct.WTF::KeyValuePair.462"*, %"struct.WTF::KeyValuePair.462"** %9, align 8
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.462", %"struct.WTF::KeyValuePair.462"* %140, i64 %57
  %142 = icmp eq %"struct.WTF::KeyValuePair.462"* %141, %3
  %143 = select i1 %142, %"struct.WTF::KeyValuePair.462"* %125, %"struct.WTF::KeyValuePair.462"* %55
  %144 = load i32, i32* %6, align 8
  %145 = ptrtoint %"struct.WTF::KeyValuePair.462"* %140 to i64
  br label %146

146:                                              ; preds = %51, %51, %131
  %147 = phi i64 [ %52, %51 ], [ %145, %131 ], [ %52, %51 ]
  %148 = phi i32 [ %53, %51 ], [ %144, %131 ], [ %53, %51 ]
  %149 = phi %"struct.WTF::KeyValuePair.462"* [ %54, %51 ], [ %140, %131 ], [ %54, %51 ]
  %150 = phi %"struct.WTF::KeyValuePair.462"* [ %55, %51 ], [ %143, %131 ], [ %55, %51 ]
  %151 = add i32 %56, 1
  %152 = icmp eq i32 %151, %148
  br i1 %152, label %18, label %51
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPSourceListD1Ev(%"class.network::mojom::blink::CSPSourceList"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink13CSPSourceList5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2409"* noalias sret, %"class.network::mojom::blink::CSPSourceList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.2413", align 8
  %4 = alloca %"class.WTF::Vector.463", align 8
  %5 = alloca %"class.WTF::Vector.2418", align 8
  %6 = alloca i8, align 1
  %7 = alloca i8, align 1
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = bitcast %"class.WTF::Vector.2413"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2413"* nonnull sret %3, %"class.WTF::Vector.2413"* dereferenceable(16) %16) #11
  %17 = bitcast %"class.WTF::Vector.463"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 1
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.463"* nonnull sret %4, %"class.WTF::Vector.463"* dereferenceable(16) %18) #11
  %19 = bitcast %"class.WTF::Vector.2418"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 2
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2418"* nonnull sret %5, %"class.WTF::Vector.2418"* dereferenceable(16) %20) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #11
  %21 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 3
  %22 = load i8, i8* %21, align 1, !range !4
  store i8 %22, i8* %6, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #11
  %23 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 4
  %24 = load i8, i8* %23, align 1, !range !4
  store i8 %24, i8* %7, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #11
  %25 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 5
  %26 = load i8, i8* %25, align 1, !range !4
  store i8 %26, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #11
  %27 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 6
  %28 = load i8, i8* %27, align 1, !range !4
  store i8 %28, i8* %9, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  %29 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 7
  %30 = load i8, i8* %29, align 1, !range !4
  store i8 %30, i8* %10, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #11
  %31 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 8
  %32 = load i8, i8* %31, align 1, !range !4
  store i8 %32, i8* %11, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #11
  %33 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 9
  %34 = load i8, i8* %33, align 1, !range !4
  store i8 %34, i8* %12, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #11
  %35 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 10
  %36 = load i8, i8* %35, align 1, !range !4
  store i8 %36, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #11
  %37 = getelementptr inbounds %"class.network::mojom::blink::CSPSourceList", %"class.network::mojom::blink::CSPSourceList"* %1, i64 0, i32 11
  %38 = load i8, i8* %37, align 1, !range !4
  store i8 %38, i8* %14, align 1
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.2409"* %0, %"class.WTF::Vector.2413"* nonnull dereferenceable(16) %3, %"class.WTF::Vector.463"* nonnull dereferenceable(16) %4, %"class.WTF::Vector.2418"* nonnull dereferenceable(16) %5, i8* nonnull dereferenceable(1) %6, i8* nonnull dereferenceable(1) %7, i8* nonnull dereferenceable(1) %8, i8* nonnull dereferenceable(1) %9, i8* nonnull dereferenceable(1) %10, i8* nonnull dereferenceable(1) %11, i8* nonnull dereferenceable(1) %12, i8* nonnull dereferenceable(1) %13, i8* nonnull dereferenceable(1) %14) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #11
  %39 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %5, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.mojo::StructPtr.2421"*, %"class.mojo::StructPtr.2421"** %39, align 8
  %41 = icmp eq %"class.mojo::StructPtr.2421"* %40, null
  br i1 %41, label %65, label %42, !prof !2

42:                                               ; preds = %2
  %43 = bitcast %"class.mojo::StructPtr.2421"* %40 to i8*
  %44 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %5, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %63, label %47, !prof !3

47:                                               ; preds = %42
  %48 = zext i32 %45 to i64
  %49 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %40, i64 %48
  br label %50

50:                                               ; preds = %57, %47
  %51 = phi %"class.mojo::StructPtr.2421"* [ %58, %57 ], [ %40, %47 ]
  %52 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %52, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %52, align 8
  %54 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %53, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %50
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %53) #11
  %56 = bitcast %"class.network::mojom::blink::CSPHashSource"* %53 to i8*
  call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %55, %50
  %58 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %51, i64 1
  %59 = icmp eq %"class.mojo::StructPtr.2421"* %58, %49
  br i1 %59, label %60, label %50

60:                                               ; preds = %57
  store i32 0, i32* %44, align 4
  %61 = bitcast %"class.WTF::Vector.2418"* %5 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %42
  %64 = phi i8* [ %62, %60 ], [ %43, %42 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #11
  store %"class.mojo::StructPtr.2421"* null, %"class.mojo::StructPtr.2421"** %39, align 8
  br label %65

65:                                               ; preds = %2, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #11
  %66 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %4, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::String"*, %"class.WTF::String"** %66, align 8
  %68 = icmp eq %"class.WTF::String"* %67, null
  br i1 %68, label %103, label %69, !prof !2

69:                                               ; preds = %65
  %70 = bitcast %"class.WTF::String"* %67 to i8*
  %71 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %4, i64 0, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %101, label %74, !prof !3

74:                                               ; preds = %69
  %75 = zext i32 %72 to i64
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 %75
  br label %77

77:                                               ; preds = %95, %74
  %78 = phi %"class.WTF::String"* [ %96, %95 ], [ %67, %74 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #11
  br label %95

95:                                               ; preds = %94, %91, %77
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 1
  %97 = icmp eq %"class.WTF::String"* %96, %76
  br i1 %97, label %98, label %77

98:                                               ; preds = %95
  store i32 0, i32* %71, align 4
  %99 = bitcast %"class.WTF::Vector.463"* %4 to i8**
  %100 = load i8*, i8** %99, align 8
  br label %101

101:                                              ; preds = %98, %69
  %102 = phi i8* [ %100, %98 ], [ %70, %69 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %102) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %66, align 8
  br label %103

103:                                              ; preds = %65, %101
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #11
  %104 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %3, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.mojo::StructPtr.446"*, %"class.mojo::StructPtr.446"** %104, align 8
  %106 = icmp eq %"class.mojo::StructPtr.446"* %105, null
  br i1 %106, label %130, label %107, !prof !2

107:                                              ; preds = %103
  %108 = bitcast %"class.mojo::StructPtr.446"* %105 to i8*
  %109 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %3, i64 0, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %128, label %112, !prof !3

112:                                              ; preds = %107
  %113 = zext i32 %110 to i64
  %114 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %105, i64 %113
  br label %115

115:                                              ; preds = %122, %112
  %116 = phi %"class.mojo::StructPtr.446"* [ %123, %122 ], [ %105, %112 ]
  %117 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %116, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %117, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %117, align 8
  %119 = icmp eq %"class.network::mojom::blink::CSPSource"* %118, null
  br i1 %119, label %122, label %120

120:                                              ; preds = %115
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %118) #11
  %121 = bitcast %"class.network::mojom::blink::CSPSource"* %118 to i8*
  call void @_ZdlPv(i8* %121) #12
  br label %122

122:                                              ; preds = %120, %115
  %123 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %116, i64 1
  %124 = icmp eq %"class.mojo::StructPtr.446"* %123, %114
  br i1 %124, label %125, label %115

125:                                              ; preds = %122
  store i32 0, i32* %109, align 4
  %126 = bitcast %"class.WTF::Vector.2413"* %3 to i8**
  %127 = load i8*, i8** %126, align 8
  br label %128

128:                                              ; preds = %125, %107
  %129 = phi i8* [ %127, %125 ], [ %108, %107 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %129) #11
  store %"class.mojo::StructPtr.446"* null, %"class.mojo::StructPtr.446"** %104, align 8
  br label %130

130:                                              ; preds = %103, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEEC2IJN3WTF6VectorINS0_INS3_9CSPSourceEEELj0ENS7_18PartitionAllocatorEEENS8_INS7_6StringELj0ESB_EENS8_INS0_INS3_13CSPHashSourceEEELj0ESB_EEbbbbbbbbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.2409"*, %"class.WTF::Vector.2413"* dereferenceable(16), %"class.WTF::Vector.463"* dereferenceable(16), %"class.WTF::Vector.2418"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %14 = alloca %"class.WTF::Vector.2413", align 8
  %15 = alloca %"class.WTF::Vector.463", align 8
  %16 = alloca %"class.WTF::Vector.2418", align 8
  %17 = tail call i8* @_Znwm(i64 64) #12
  %18 = bitcast i8* %17 to %"class.network::mojom::blink::CSPSourceList"*
  %19 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %14, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %14, i64 0, i32 0, i32 0, i32 2
  %21 = bitcast %"class.WTF::Vector.2413"* %1 to i64*
  %22 = bitcast %"class.WTF::Vector.2413"* %14 to i64*
  store i64 0, i64* %22, align 8
  %23 = load i64, i64* %21, align 8
  %24 = bitcast %"class.WTF::Vector.2413"* %14 to i64*
  store atomic i64 0, i64* %21 monotonic, align 8
  store atomic i64 %23, i64* %24 monotonic, align 8
  %25 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  store i32 %26, i32* %19, align 8
  store i32 0, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %1, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %20, align 4
  store i32 0, i32* %27, align 4
  %29 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %15, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %15, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.WTF::Vector.463"* %2 to i64*
  %32 = bitcast %"class.WTF::Vector.463"* %15 to i64*
  store i64 0, i64* %32, align 8
  %33 = load i64, i64* %31, align 8
  %34 = bitcast %"class.WTF::Vector.463"* %15 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %2, i64 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %29, align 8
  store i32 0, i32* %35, align 4
  %37 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %2, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %30, align 4
  store i32 0, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %16, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %16, i64 0, i32 0, i32 0, i32 2
  %41 = bitcast %"class.WTF::Vector.2418"* %3 to i64*
  %42 = bitcast %"class.WTF::Vector.2418"* %16 to i64*
  store i64 0, i64* %42, align 8
  %43 = load i64, i64* %41, align 8
  %44 = bitcast %"class.WTF::Vector.2418"* %16 to i64*
  store atomic i64 0, i64* %41 monotonic, align 8
  store atomic i64 %43, i64* %44 monotonic, align 8
  %45 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %3, i64 0, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %39, align 8
  store i32 0, i32* %45, align 4
  %47 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %3, i64 0, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %40, align 4
  store i32 0, i32* %47, align 4
  %49 = load i8, i8* %4, align 1, !range !4
  %50 = icmp ne i8 %49, 0
  %51 = load i8, i8* %5, align 1, !range !4
  %52 = icmp ne i8 %51, 0
  %53 = load i8, i8* %6, align 1, !range !4
  %54 = icmp ne i8 %53, 0
  %55 = load i8, i8* %7, align 1, !range !4
  %56 = icmp ne i8 %55, 0
  %57 = load i8, i8* %8, align 1, !range !4
  %58 = icmp ne i8 %57, 0
  %59 = load i8, i8* %9, align 1, !range !4
  %60 = icmp ne i8 %59, 0
  %61 = load i8, i8* %10, align 1, !range !4
  %62 = icmp ne i8 %61, 0
  %63 = load i8, i8* %11, align 1, !range !4
  %64 = icmp ne i8 %63, 0
  %65 = load i8, i8* %12, align 1, !range !4
  %66 = icmp ne i8 %65, 0
  call void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"* nonnull %18, %"class.WTF::Vector.2413"* nonnull %14, %"class.WTF::Vector.463"* nonnull %15, %"class.WTF::Vector.2418"* nonnull %16, i1 zeroext %50, i1 zeroext %52, i1 zeroext %54, i1 zeroext %56, i1 zeroext %58, i1 zeroext %60, i1 zeroext %62, i1 zeroext %64, i1 zeroext %66) #11
  %67 = ptrtoint i8* %17 to i64
  %68 = bitcast %"class.mojo::StructPtr.2409"* %0 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %16, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.mojo::StructPtr.2421"*, %"class.mojo::StructPtr.2421"** %69, align 8
  %71 = icmp eq %"class.mojo::StructPtr.2421"* %70, null
  br i1 %71, label %94, label %72, !prof !2

72:                                               ; preds = %13
  %73 = bitcast %"class.mojo::StructPtr.2421"* %70 to i8*
  %74 = load i32, i32* %40, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %92, label %76, !prof !3

76:                                               ; preds = %72
  %77 = zext i32 %74 to i64
  %78 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %70, i64 %77
  br label %79

79:                                               ; preds = %86, %76
  %80 = phi %"class.mojo::StructPtr.2421"* [ %87, %86 ], [ %70, %76 ]
  %81 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %80, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %81, align 8
  %83 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %79
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %82) #11
  %85 = bitcast %"class.network::mojom::blink::CSPHashSource"* %82 to i8*
  call void @_ZdlPv(i8* %85) #12
  br label %86

86:                                               ; preds = %84, %79
  %87 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %80, i64 1
  %88 = icmp eq %"class.mojo::StructPtr.2421"* %87, %78
  br i1 %88, label %89, label %79

89:                                               ; preds = %86
  store i32 0, i32* %40, align 4
  %90 = bitcast %"class.WTF::Vector.2418"* %16 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %89, %72
  %93 = phi i8* [ %91, %89 ], [ %73, %72 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %93) #11
  store %"class.mojo::StructPtr.2421"* null, %"class.mojo::StructPtr.2421"** %69, align 8
  br label %94

94:                                               ; preds = %13, %92
  %95 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %15, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::String"*, %"class.WTF::String"** %95, align 8
  %97 = icmp eq %"class.WTF::String"* %96, null
  br i1 %97, label %131, label %98, !prof !2

98:                                               ; preds = %94
  %99 = bitcast %"class.WTF::String"* %96 to i8*
  %100 = load i32, i32* %30, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %129, label %102, !prof !3

102:                                              ; preds = %98
  %103 = zext i32 %100 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 %103
  br label %105

105:                                              ; preds = %123, %102
  %106 = phi %"class.WTF::String"* [ %124, %123 ], [ %96, %102 ]
  %107 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #11
  br label %123

123:                                              ; preds = %122, %119, %105
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %106, i64 1
  %125 = icmp eq %"class.WTF::String"* %124, %104
  br i1 %125, label %126, label %105

126:                                              ; preds = %123
  store i32 0, i32* %30, align 4
  %127 = bitcast %"class.WTF::Vector.463"* %15 to i8**
  %128 = load i8*, i8** %127, align 8
  br label %129

129:                                              ; preds = %126, %98
  %130 = phi i8* [ %128, %126 ], [ %99, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %130) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %95, align 8
  br label %131

131:                                              ; preds = %94, %129
  %132 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %14, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.mojo::StructPtr.446"*, %"class.mojo::StructPtr.446"** %132, align 8
  %134 = icmp eq %"class.mojo::StructPtr.446"* %133, null
  br i1 %134, label %157, label %135, !prof !2

135:                                              ; preds = %131
  %136 = bitcast %"class.mojo::StructPtr.446"* %133 to i8*
  %137 = load i32, i32* %20, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %155, label %139, !prof !3

139:                                              ; preds = %135
  %140 = zext i32 %137 to i64
  %141 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %133, i64 %140
  br label %142

142:                                              ; preds = %149, %139
  %143 = phi %"class.mojo::StructPtr.446"* [ %150, %149 ], [ %133, %139 ]
  %144 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %143, i64 0, i32 0, i32 0, i32 0, i32 0
  %145 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %144, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %144, align 8
  %146 = icmp eq %"class.network::mojom::blink::CSPSource"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %142
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %145) #11
  %148 = bitcast %"class.network::mojom::blink::CSPSource"* %145 to i8*
  call void @_ZdlPv(i8* %148) #12
  br label %149

149:                                              ; preds = %147, %142
  %150 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %143, i64 1
  %151 = icmp eq %"class.mojo::StructPtr.446"* %150, %141
  br i1 %151, label %152, label %142

152:                                              ; preds = %149
  store i32 0, i32* %20, align 4
  %153 = bitcast %"class.WTF::Vector.2413"* %14 to i8**
  %154 = load i8*, i8** %153, align 8
  br label %155

155:                                              ; preds = %152, %135
  %156 = phi i8* [ %154, %152 ], [ %136, %135 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %156) #11
  store %"class.mojo::StructPtr.446"* null, %"class.mojo::StructPtr.446"** %132, align 8
  br label %157

157:                                              ; preds = %131, %155
  ret void
}

declare void @_ZN7network5mojom5blink13CSPSourceListC1EN3WTF6VectorIN4mojo9StructPtrINS1_9CSPSourceEEELj0ENS3_18PartitionAllocatorEEENS4_INS3_6StringELj0ES9_EENS4_INS6_INS1_13CSPHashSourceEEELj0ES9_EEbbbbbbbbb(%"class.network::mojom::blink::CSPSourceList"*, %"class.WTF::Vector.2413"*, %"class.WTF::Vector.463"*, %"class.WTF::Vector.2418"*, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2413"* noalias sret, %"class.WTF::Vector.2413"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.446", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.2413"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #11
  %8 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !3

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %12) #11
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #11
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.2413"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.446"*, %"class.mojo::StructPtr.446"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.446"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.446"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.446"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %31 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %31, align 8, !noalias !54
  %33 = icmp eq %"class.network::mojom::blink::CSPSource"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !54
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink9CSPSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.446"* nonnull sret %3, %"class.network::mojom::blink::CSPSource"* nonnull %32) #11
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !3

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.446"*, %"class.mojo::StructPtr.446"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.446"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2413"* %0, %"class.mojo::StructPtr.446"* nonnull dereferenceable(8) %3) #11
  %50 = load %"class.network::mojom::blink::CSPSource"*, %"class.network::mojom::blink::CSPSource"** %28, align 8
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::CSPSource"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::CSPSource"* %50 to i8*
  call void @_ZN7network5mojom5blink9CSPSourceD1Ev(%"class.network::mojom::blink::CSPSource"* nonnull %50) #11
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %55 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.446"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2413"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.446"*, %"class.mojo::StructPtr.446"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.446"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.2413"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.446"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.446"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.446"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.446"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !61

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.446"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.446"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.446"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.446"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.446"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.446"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.446"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.446"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.446"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.446"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.446"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.446"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.446"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #11
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %73) #11
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #11
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.446"*, %"class.mojo::StructPtr.446"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.446"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.446"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.446"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.446"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.446"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.446"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !62

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.446"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.446"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.446"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.446"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.446"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.446"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.446"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.446"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.446"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.446"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.446"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.446"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.446"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.2413"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #11
  %149 = bitcast %"class.WTF::Vector.2413"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2413"*, %"class.mojo::StructPtr.446"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.446"*, %"class.mojo::StructPtr.446"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.446"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.446"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.446"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2413"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.446"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2413"* %0, i32 %22) #11
  %36 = load %"class.mojo::StructPtr.446"*, %"class.mojo::StructPtr.446"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.446"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.446"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.2413", %"class.WTF::Vector.2413"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.446"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEmm(i64 %55) #11
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEEEEPKcv, i64 0, i64 0)) #11
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2413"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.446"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink9CSPSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2413"* %0, i32 %50) #11
  %64 = load %"class.mojo::StructPtr.446"*, %"class.mojo::StructPtr.446"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.446"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.446"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.446"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.446"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.446", %"class.mojo::StructPtr.446"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPSource"* null, %"class.network::mojom::blink::CSPSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.446"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKSA_(%"class.WTF::Vector.2418"* noalias sret, %"class.WTF::Vector.2418"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.mojo::StructPtr.2421", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.2418"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #11
  %8 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %57, label %11, !prof !3

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %12) #11
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #11
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.2418"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.mojo::StructPtr.2421"*, %"class.mojo::StructPtr.2421"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.mojo::StructPtr.2421"* %3 to i8*
  %27 = bitcast %"class.mojo::StructPtr.2421"* %3 to i64*
  %28 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %29

29:                                               ; preds = %25, %54
  %30 = phi %"class.mojo::StructPtr.2421"* [ %21, %25 ], [ %55, %54 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %31 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %31, align 8, !noalias !63
  %33 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %32, null
  br i1 %33, label %34, label %35

34:                                               ; preds = %29
  store i64 0, i64* %27, align 8, !alias.scope !63
  br label %36

35:                                               ; preds = %29
  call void @_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2421"* nonnull sret %3, %"class.network::mojom::blink::CSPHashSource"* nonnull %32) #11
  br label %36

36:                                               ; preds = %34, %35
  %37 = load i32, i32* %6, align 4
  %38 = load i32, i32* %5, align 8
  %39 = icmp eq i32 %37, %38
  br i1 %39, label %49, label %40, !prof !3

40:                                               ; preds = %36
  %41 = load %"class.mojo::StructPtr.2421"*, %"class.mojo::StructPtr.2421"** %4, align 8
  %42 = zext i32 %37 to i64
  %43 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %41, i64 %42
  %44 = bitcast %"class.mojo::StructPtr.2421"* %43 to i64*
  %45 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %45, align 8
  %46 = load i64, i64* %27, align 8
  store i64 %46, i64* %44, align 8
  %47 = load i32, i32* %6, align 4
  %48 = add i32 %47, 1
  store i32 %48, i32* %6, align 4
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  br label %54

49:                                               ; preds = %36
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2418"* %0, %"class.mojo::StructPtr.2421"* nonnull dereferenceable(8) %3) #11
  %50 = load %"class.network::mojom::blink::CSPHashSource"*, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %28, align 8
  %51 = icmp eq %"class.network::mojom::blink::CSPHashSource"* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %49
  %53 = bitcast %"class.network::mojom::blink::CSPHashSource"* %50 to i8*
  call void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"* nonnull %50) #11
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %40, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %55 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %30, i64 1
  %56 = icmp eq %"class.mojo::StructPtr.2421"* %55, %23
  br i1 %56, label %57, label %29

57:                                               ; preds = %54, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2418"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.2421"*, %"class.mojo::StructPtr.2421"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.2421"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.2418"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.2421"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.2421"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.2421"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.2421"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !70

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.2421"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.2421"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.2421"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.2421"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.2421"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.2421"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.2421"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.2421"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.2421"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.2421"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.2421"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.2421"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.2421"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #11
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %73) #11
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #11
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.2421"*, %"class.mojo::StructPtr.2421"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.2421"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.2421"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.2421"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.2421"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.2421"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.2421"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !71

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.2421"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.2421"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.2421"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.2421"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.2421"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.2421"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.2421"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.2421"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.2421"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.2421"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.2421"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.2421"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.2421"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.2418"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #11
  %149 = bitcast %"class.WTF::Vector.2418"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink13CSPHashSourceD1Ev(%"class.network::mojom::blink::CSPHashSource"*) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2418"*, %"class.mojo::StructPtr.2421"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.2421"*, %"class.mojo::StructPtr.2421"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.2421"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.2421"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.2421"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.2418"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.2421"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2418"* %0, i32 %22) #11
  %36 = load %"class.mojo::StructPtr.2421"*, %"class.mojo::StructPtr.2421"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.2421"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.2421"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.2418", %"class.WTF::Vector.2418"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.2421"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEmm(i64 %55) #11
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEEPKcv, i64 0, i64 0)) #11
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.2418"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.2421"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.2418"* %0, i32 %50) #11
  %64 = load %"class.mojo::StructPtr.2421"*, %"class.mojo::StructPtr.2421"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.2421"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.2421"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.2421"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.2421"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.2421", %"class.mojo::StructPtr.2421"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.network::mojom::blink::CSPHashSource"* null, %"class.network::mojom::blink::CSPHashSource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.2421"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink13CSPHashSource5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.2421"* noalias sret, %"class.network::mojom::blink::CSPHashSource"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.2376", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.WTF::Vector.2376", align 8
  %6 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = bitcast %"class.WTF::Vector.2376"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.WTF::Vector.2376", %"class.WTF::Vector.2376"* %5, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.2376", %"class.WTF::Vector.2376"* %5, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.2376", %"class.WTF::Vector.2376"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #11, !alias.scope !72
  %12 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4, !noalias !72
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %28, label %15, !prof !3

15:                                               ; preds = %2
  %16 = zext i32 %13 to i64
  %17 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %16) #11
  %18 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %17, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %19 = ptrtoint i8* %18 to i64
  %20 = bitcast %"class.WTF::Vector.2376"* %5 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load i32, i32* %12, align 4, !noalias !72
  %22 = trunc i64 %17 to i32
  store i32 %22, i32* %10, align 8
  %23 = getelementptr inbounds %"class.network::mojom::blink::CSPHashSource", %"class.network::mojom::blink::CSPHashSource"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8, !noalias !72
  %25 = zext i32 %21 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  %27 = icmp eq i32 %21, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %2, %15
  %29 = phi i32 [ %22, %15 ], [ 0, %2 ]
  %30 = phi i64 [ %19, %15 ], [ 0, %2 ]
  %31 = bitcast %"class.WTF::Vector.2376"* %5 to i64*
  br label %56

32:                                               ; preds = %15, %48
  %33 = phi i32 [ %50, %48 ], [ %22, %15 ]
  %34 = phi i32 [ %49, %48 ], [ 0, %15 ]
  %35 = phi i8* [ %46, %48 ], [ %24, %15 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11, !noalias !72
  %36 = load i8, i8* %35, align 1
  store i8 %36, i8* %4, align 1, !noalias !72
  %37 = icmp eq i32 %34, %33
  br i1 %37, label %44, label %38, !prof !3

38:                                               ; preds = %32
  %39 = load i8*, i8** %9, align 8, !alias.scope !72
  %40 = zext i32 %34 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 %40
  store i8 %36, i8* %41, align 1
  %42 = load i32, i32* %11, align 4, !alias.scope !72
  %43 = add i32 %42, 1
  store i32 %43, i32* %11, align 4, !alias.scope !72
  br label %45

44:                                               ; preds = %32
  call void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector.2376"* nonnull %5, i8* nonnull dereferenceable(1) %4) #11
  br label %45

45:                                               ; preds = %44, %38
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11, !noalias !72
  %46 = getelementptr inbounds i8, i8* %35, i64 1
  %47 = icmp eq i8* %46, %26
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = load i32, i32* %11, align 4, !alias.scope !72
  %50 = load i32, i32* %10, align 8, !alias.scope !72
  br label %32

51:                                               ; preds = %45
  %52 = bitcast %"class.WTF::Vector.2376"* %5 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !77
  %54 = load i32, i32* %10, align 8, !noalias !77
  %55 = load i32, i32* %11, align 4, !noalias !77
  br label %56

56:                                               ; preds = %28, %51
  %57 = phi i64* [ %31, %28 ], [ %52, %51 ]
  %58 = phi i32 [ 0, %28 ], [ %55, %51 ]
  %59 = phi i32 [ %29, %28 ], [ %54, %51 ]
  %60 = phi i64 [ %30, %28 ], [ %53, %51 ]
  %61 = bitcast %"class.WTF::Vector.2376"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #11, !noalias !77
  %62 = call i8* @_Znwm(i64 24) #12, !noalias !77
  %63 = bitcast i8* %62 to %"class.network::mojom::blink::CSPHashSource"*
  %64 = getelementptr inbounds %"class.WTF::Vector.2376", %"class.WTF::Vector.2376"* %3, i64 0, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"class.WTF::Vector.2376", %"class.WTF::Vector.2376"* %3, i64 0, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.2376"* %3 to i64*
  store i64 0, i64* %66, align 8, !noalias !77
  store atomic i64 0, i64* %57 monotonic, align 8, !noalias !77
  store atomic i64 %60, i64* %66 monotonic, align 8, !noalias !77
  store i32 %59, i32* %64, align 8, !noalias !77
  store i32 0, i32* %10, align 8, !noalias !77
  store i32 %58, i32* %65, align 4, !noalias !77
  store i32 0, i32* %11, align 4, !noalias !77
  call void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"* nonnull %63, i32 %7, %"class.WTF::Vector.2376"* nonnull %3) #11, !noalias !77
  %67 = ptrtoint i8* %62 to i64
  %68 = bitcast %"class.mojo::StructPtr.2421"* %0 to i64*
  store i64 %67, i64* %68, align 8, !alias.scope !77
  %69 = getelementptr inbounds %"class.WTF::Vector.2376", %"class.WTF::Vector.2376"* %3, i64 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8, !noalias !77
  %71 = icmp eq i8* %70, null
  br i1 %71, label %77, label %72, !prof !2

72:                                               ; preds = %56
  %73 = load i32, i32* %65, align 4, !noalias !77
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %72
  store i32 0, i32* %65, align 4, !noalias !77
  br label %76

76:                                               ; preds = %75, %72
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #11, !noalias !77
  store i8* null, i8** %69, align 8, !noalias !77
  br label %77

77:                                               ; preds = %56, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #11, !noalias !77
  %78 = load i8*, i8** %9, align 8
  %79 = icmp eq i8* %78, null
  br i1 %79, label %85, label %80, !prof !2

80:                                               ; preds = %77
  %81 = load i32, i32* %11, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !3

83:                                               ; preds = %80
  store i32 0, i32* %11, align 4
  br label %84

84:                                               ; preds = %83, %80
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #11
  store i8* null, i8** %9, align 8
  br label %85

85:                                               ; preds = %77, %84
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #11
  ret void
}

declare void @_ZN7network5mojom5blink13CSPHashSourceC1ENS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS4_18PartitionAllocatorEEE(%"class.network::mojom::blink::CSPHashSource"*, i32, %"class.WTF::Vector.2376"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIhEEvOT_(%"class.WTF::Vector.2376"*, i8* dereferenceable(1)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2376", %"class.WTF::Vector.2376"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2376", %"class.WTF::Vector.2376"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %46, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2376", %"class.WTF::Vector.2376"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %83, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i8* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %29 = ptrtoint i8* %28 to i64
  br i1 %25, label %30, label %33

30:                                               ; preds = %24
  %31 = bitcast %"class.WTF::Vector.2376"* %0 to i64*
  store atomic i64 %29, i64* %31 monotonic, align 8
  %32 = trunc i64 %27 to i32
  store i32 %32, i32* %14, align 8
  br label %83

33:                                               ; preds = %24
  %34 = load i8*, i8** %6, align 8
  %35 = icmp ne i8* %28, null
  %36 = icmp ne i8* %34, null
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %42, !prof !2

38:                                               ; preds = %33
  %39 = load i32, i32* %3, align 4
  %40 = zext i32 %39 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* nonnull align 1 %34, i64 %40, i1 false) #11
  %41 = load i8*, i8** %6, align 8
  br label %42

42:                                               ; preds = %38, %33
  %43 = phi i8* [ %34, %33 ], [ %41, %38 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #11
  %44 = bitcast %"class.WTF::Vector.2376"* %0 to i64*
  store atomic i64 %29, i64* %44 monotonic, align 8
  %45 = trunc i64 %27 to i32
  store i32 %45, i32* %14, align 8
  br label %83

46:                                               ; preds = %9
  %47 = ptrtoint i8* %1 to i64
  %48 = ptrtoint i8* %7 to i64
  %49 = sub i64 %47, %48
  %50 = getelementptr inbounds %"class.WTF::Vector.2376", %"class.WTF::Vector.2376"* %0, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = lshr i32 %51, 2
  %53 = add i32 %51, 1
  %54 = add i32 %53, %52
  %55 = icmp ugt i32 %54, 4
  %56 = select i1 %55, i32 %54, i32 4
  %57 = icmp ugt i32 %56, %5
  %58 = select i1 %57, i32 %56, i32 %5
  %59 = icmp ult i32 %51, %58
  br i1 %59, label %60, label %80, !prof !2

60:                                               ; preds = %46
  %61 = icmp eq i8* %7, null
  %62 = zext i32 %58 to i64
  %63 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %62) #11
  %64 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %63, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #11
  %65 = ptrtoint i8* %64 to i64
  br i1 %61, label %77, label %66

66:                                               ; preds = %60
  %67 = load i8*, i8** %6, align 8
  %68 = icmp ne i8* %64, null
  %69 = icmp ne i8* %67, null
  %70 = and i1 %68, %69
  br i1 %70, label %71, label %75, !prof !2

71:                                               ; preds = %66
  %72 = load i32, i32* %3, align 4
  %73 = zext i32 %72 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %64, i8* nonnull align 1 %67, i64 %73, i1 false) #11
  %74 = load i8*, i8** %6, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi i8* [ %67, %66 ], [ %74, %71 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #11
  br label %77

77:                                               ; preds = %60, %75
  %78 = bitcast %"class.WTF::Vector.2376"* %0 to i64*
  store atomic i64 %65, i64* %78 monotonic, align 8
  %79 = trunc i64 %63 to i32
  store i32 %79, i32* %50, align 8
  br label %80

80:                                               ; preds = %77, %46
  %81 = phi i8* [ %7, %46 ], [ %64, %77 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 %49
  br label %83

83:                                               ; preds = %42, %30, %13, %80
  %84 = phi i8* [ %81, %80 ], [ %7, %13 ], [ %28, %30 ], [ %28, %42 ]
  %85 = phi i8* [ %82, %80 ], [ %1, %13 ], [ %1, %30 ], [ %1, %42 ]
  %86 = load i32, i32* %3, align 4
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds i8, i8* %84, i64 %87
  %89 = load i8, i8* %85, align 1
  store i8 %89, i8* %88, align 1
  %90 = load i32, i32* %3, align 4
  %91 = add i32 %90, 1
  store i32 %91, i32* %3, align 4
  ret void
}

declare void @_ZN7network5mojom5blink27ContentSecurityPolicyHeaderC1ERKN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceE(%"class.network::mojom::blink::ContentSecurityPolicyHeader"*, %"class.WTF::String"* dereferenceable(8), i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.463"* noalias sret, %"class.WTF::Vector.463"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.WTF::Vector.463"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #11
  %8 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %1, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %81, label %11, !prof !3

11:                                               ; preds = %2
  %12 = zext i32 %9 to i64
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %12) #11
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Vector.463"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %5, align 8
  %19 = load i32, i32* %8, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %1, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::String"*, %"class.WTF::String"** %20, align 8
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 %22
  %24 = icmp eq i32 %19, 0
  br i1 %24, label %81, label %25

25:                                               ; preds = %11
  %26 = bitcast %"class.WTF::String"* %3 to i8*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %28

28:                                               ; preds = %25, %78
  %29 = phi %"class.WTF::String"* [ %21, %25 ], [ %79, %78 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #11
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !3

47:                                               ; preds = %38
  call void @llvm.trap() #11
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %28, %33, %48
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %27, align 8
  %51 = load i32, i32* %6, align 4
  %52 = load i32, i32* %5, align 8
  %53 = icmp eq i32 %51, %52
  br i1 %53, label %62, label %54, !prof !3

54:                                               ; preds = %50
  %55 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %56 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %57 = zext i32 %51 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 %57
  %59 = bitcast %"class.WTF::String"* %58 to i64*
  store i64 %55, i64* %59, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %60 = load i32, i32* %6, align 4
  %61 = add i32 %60, 1
  store i32 %61, i32* %6, align 4
  br label %78

62:                                               ; preds = %50
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.463"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3) #11
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #11
  br label %78

78:                                               ; preds = %54, %62, %74, %77
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 1
  %80 = icmp eq %"class.WTF::String"* %79, %23
  br i1 %80, label %81, label %28

81:                                               ; preds = %78, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.17, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.463"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #11
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.463"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #11
  %47 = bitcast %"class.WTF::Vector.463"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  %51 = bitcast %"class.WTF::Vector.463"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #11
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #11
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.463"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #11
  %87 = bitcast %"class.WTF::Vector.463"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #11
  %91 = bitcast %"class.WTF::Vector.463"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %104 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK7network5mojom5blink15CSPTrustedTypes5CloneIN4mojo9StructPtrIS2_EEEES6_v(%"class.mojo::StructPtr.468"* noalias sret, %"class.network::mojom::blink::CSPTrustedTypes"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::Vector.463", align 8
  %4 = alloca i8, align 1
  %5 = alloca i8, align 1
  %6 = bitcast %"class.WTF::Vector.463"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 0
  call void @_ZN4mojo11CloneTraitsIN3WTF6VectorINS1_6StringELj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS5_(%"class.WTF::Vector.463"* nonnull sret %3, %"class.WTF::Vector.463"* dereferenceable(16) %7) #11
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  %8 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 1
  %9 = load i8, i8* %8, align 1, !range !4
  store i8 %9, i8* %4, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #11
  %10 = getelementptr inbounds %"class.network::mojom::blink::CSPTrustedTypes", %"class.network::mojom::blink::CSPTrustedTypes"* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 1, !range !4
  store i8 %11, i8* %5, align 1
  call void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.468"* %0, %"class.WTF::Vector.463"* nonnull dereferenceable(16) %3, i8* nonnull dereferenceable(1) %4, i8* nonnull dereferenceable(1) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  %12 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %3, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** %12, align 8
  %14 = icmp eq %"class.WTF::String"* %13, null
  br i1 %14, label %49, label %15, !prof !2

15:                                               ; preds = %2
  %16 = bitcast %"class.WTF::String"* %13 to i8*
  %17 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %3, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %47, label %20, !prof !3

20:                                               ; preds = %15
  %21 = zext i32 %18 to i64
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 %21
  br label %23

23:                                               ; preds = %41, %20
  %24 = phi %"class.WTF::String"* [ %42, %41 ], [ %13, %20 ]
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #11
  br label %41

41:                                               ; preds = %40, %37, %23
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 1
  %43 = icmp eq %"class.WTF::String"* %42, %22
  br i1 %43, label %44, label %23

44:                                               ; preds = %41
  store i32 0, i32* %17, align 4
  %45 = bitcast %"class.WTF::Vector.463"* %3 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %15
  %48 = phi i8* [ %46, %44 ], [ %16, %15 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %12, align 8
  br label %49

49:                                               ; preds = %2, %47
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEC2IJN3WTF6VectorINS7_6StringELj0ENS7_18PartitionAllocatorEEEbbEEEN4base10in_place_tEDpOT_(%"class.mojo::StructPtr.468"*, %"class.WTF::Vector.463"* dereferenceable(16), i8* dereferenceable(1), i8* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::Vector.463", align 8
  %6 = tail call i8* @_Znwm(i64 24) #12
  %7 = bitcast i8* %6 to %"class.network::mojom::blink::CSPTrustedTypes"*
  %8 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.WTF::Vector.463"* %1 to i64*
  %11 = bitcast %"class.WTF::Vector.463"* %5 to i64*
  store i64 0, i64* %11, align 8
  %12 = load i64, i64* %10, align 8
  %13 = bitcast %"class.WTF::Vector.463"* %5 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %1, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %8, align 8
  store i32 0, i32* %14, align 4
  %16 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %1, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  store i32 %17, i32* %9, align 4
  store i32 0, i32* %16, align 4
  %18 = load i8, i8* %2, align 1, !range !4
  %19 = icmp ne i8 %18, 0
  %20 = load i8, i8* %3, align 1, !range !4
  %21 = icmp ne i8 %20, 0
  call void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"* nonnull %7, %"class.WTF::Vector.463"* nonnull %5, i1 zeroext %19, i1 zeroext %21) #11
  %22 = ptrtoint i8* %6 to i64
  %23 = bitcast %"class.mojo::StructPtr.468"* %0 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.WTF::Vector.463", %"class.WTF::Vector.463"* %5, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::String"*, %"class.WTF::String"** %24, align 8
  %26 = icmp eq %"class.WTF::String"* %25, null
  br i1 %26, label %60, label %27, !prof !2

27:                                               ; preds = %4
  %28 = bitcast %"class.WTF::String"* %25 to i8*
  %29 = load i32, i32* %9, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %58, label %31, !prof !3

31:                                               ; preds = %27
  %32 = zext i32 %29 to i64
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 %32
  br label %34

34:                                               ; preds = %52, %31
  %35 = phi %"class.WTF::String"* [ %53, %52 ], [ %25, %31 ]
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #11
  br label %52

52:                                               ; preds = %51, %48, %34
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 1
  %54 = icmp eq %"class.WTF::String"* %53, %33
  br i1 %54, label %55, label %34

55:                                               ; preds = %52
  store i32 0, i32* %9, align 4
  %56 = bitcast %"class.WTF::Vector.463"* %5 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %55, %27
  %59 = phi i8* [ %57, %55 ], [ %28, %27 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %24, align 8
  br label %60

60:                                               ; preds = %4, %58
  ret void
}

declare void @_ZN7network5mojom5blink15CSPTrustedTypesC1EN3WTF6VectorINS3_6StringELj0ENS3_18PartitionAllocatorEEEbb(%"class.network::mojom::blink::CSPTrustedTypes"*, %"class.WTF::Vector.463"*, i1 zeroext, i1 zeroext) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6, !8, !10}
!6 = distinct !{!6, !7, !"_ZNK4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEE5CloneEv: argument 0"}
!7 = distinct !{!7, !"_ZNK4mojo9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEE5CloneEv"}
!8 = distinct !{!8, !9, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELb1EE5CloneERKS6_: argument 0"}
!9 = distinct !{!9, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEELb1EE5CloneERKS6_"}
!10 = distinct !{!10, !11, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEET_RKS7_: argument 0"}
!11 = distinct !{!11, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink21ContentSecurityPolicyEEEEET_RKS7_"}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !13}
!15 = !{!16, !18, !20}
!16 = distinct !{!16, !17, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv"}
!18 = distinct !{!18, !19, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_: argument 0"}
!19 = distinct !{!19, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_"}
!20 = distinct !{!20, !21, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_: argument 0"}
!21 = distinct !{!21, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_"}
!22 = !{!23, !25, !27}
!23 = distinct !{!23, !24, !"_ZNK4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEE5CloneEv: argument 0"}
!24 = distinct !{!24, !"_ZNK4mojo16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEE5CloneEv"}
!25 = distinct !{!25, !26, !"_ZN4mojo11CloneTraitsINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEELb1EE5CloneERKS6_: argument 0"}
!26 = distinct !{!26, !"_ZN4mojo11CloneTraitsINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEELb1EE5CloneERKS6_"}
!27 = distinct !{!27, !28, !"_ZN4mojo5CloneINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEEEET_RKS7_: argument 0"}
!28 = distinct !{!28, !"_ZN4mojo5CloneINS_16InlinedStructPtrIN7network5mojom5blink27ContentSecurityPolicyHeaderEEEEET_RKS7_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK7network5mojom5blink27ContentSecurityPolicyHeader5CloneIN4mojo16InlinedStructPtrIS2_EEEES6_v: argument 0"}
!31 = distinct !{!31, !"_ZNK7network5mojom5blink27ContentSecurityPolicyHeader5CloneIN4mojo16InlinedStructPtrIS2_EEEES6_v"}
!32 = !{!33, !30}
!33 = distinct !{!33, !34, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!34 = distinct !{!34, !"_ZN7network5mojom5blink27ContentSecurityPolicyHeader3NewIJN3WTF6StringENS0_25ContentSecurityPolicyTypeENS0_27ContentSecurityPolicySourceEEEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!35 = !{!36, !38, !40}
!36 = distinct !{!36, !37, !"_ZNK4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEE5CloneEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4mojo9StructPtrIN7network5mojom5blink15CSPTrustedTypesEE5CloneEv"}
!38 = distinct !{!38, !39, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEELb1EE5CloneERKS6_: argument 0"}
!39 = distinct !{!39, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEELb1EE5CloneERKS6_"}
!40 = distinct !{!40, !41, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEEEET_RKS7_: argument 0"}
!41 = distinct !{!41, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink15CSPTrustedTypesEEEEET_RKS7_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_iS5_bbEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!44 = distinct !{!44, !"_ZN7network5mojom5blink9CSPSource3NewIJN3WTF6StringES5_iS5_bbEEEN4mojo9StructPtrIS2_EEDpOT_"}
!45 = distinct !{!45, !13}
!46 = !{!47, !49, !51}
!47 = distinct !{!47, !48, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEE5CloneEv: argument 0"}
!48 = distinct !{!48, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPSourceListEE5CloneEv"}
!49 = distinct !{!49, !50, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEELb1EE5CloneERKS6_: argument 0"}
!50 = distinct !{!50, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEELb1EE5CloneERKS6_"}
!51 = distinct !{!51, !52, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEEEET_RKS7_: argument 0"}
!52 = distinct !{!52, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPSourceListEEEEET_RKS7_"}
!53 = distinct !{!53, !13}
!54 = !{!55, !57, !59}
!55 = distinct !{!55, !56, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv: argument 0"}
!56 = distinct !{!56, !"_ZNK4mojo9StructPtrIN7network5mojom5blink9CSPSourceEE5CloneEv"}
!57 = distinct !{!57, !58, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_: argument 0"}
!58 = distinct !{!58, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink9CSPSourceEEELb1EE5CloneERKS6_"}
!59 = distinct !{!59, !60, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_: argument 0"}
!60 = distinct !{!60, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink9CSPSourceEEEEET_RKS7_"}
!61 = distinct !{!61, !13}
!62 = distinct !{!62, !13}
!63 = !{!64, !66, !68}
!64 = distinct !{!64, !65, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEE5CloneEv: argument 0"}
!65 = distinct !{!65, !"_ZNK4mojo9StructPtrIN7network5mojom5blink13CSPHashSourceEE5CloneEv"}
!66 = distinct !{!66, !67, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELb1EE5CloneERKS6_: argument 0"}
!67 = distinct !{!67, !"_ZN4mojo11CloneTraitsINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEELb1EE5CloneERKS6_"}
!68 = distinct !{!68, !69, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEET_RKS7_: argument 0"}
!69 = distinct !{!69, !"_ZN4mojo5CloneINS_9StructPtrIN7network5mojom5blink13CSPHashSourceEEEEET_RKS7_"}
!70 = distinct !{!70, !13}
!71 = distinct !{!71, !13}
!72 = !{!73, !75}
!73 = distinct !{!73, !74, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS4_: argument 0"}
!74 = distinct !{!74, !"_ZN4mojo11CloneTraitsIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEELb0EE5CloneERKS4_"}
!75 = distinct !{!75, !76, !"_ZN4mojo5CloneIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEEET_RKS5_: argument 0"}
!76 = distinct !{!76, !"_ZN4mojo5CloneIN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEEEET_RKS5_"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN7network5mojom5blink13CSPHashSource3NewIJNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!79 = distinct !{!79, !"_ZN7network5mojom5blink13CSPHashSource3NewIJNS0_16CSPHashAlgorithmEN3WTF6VectorIhLj0ENS5_18PartitionAllocatorEEEEEEN4mojo9StructPtrIS2_EEDpOT_"}
