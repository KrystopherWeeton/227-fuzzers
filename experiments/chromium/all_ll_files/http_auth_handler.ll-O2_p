; ModuleID = '../../net/http/http_auth_handler.cc'
source_filename = "../../net/http/http_auth_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::HttpAuthHandler" = type { i32 (...)**, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %class.GURL, i32, i32, i32, %"class.net::NetLogWithSource", %"class.base::OnceCallback" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.9" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.4" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.11" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::HttpAuthChallengeTokenizer" = type { %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::__wrap_iter", %"class.std::__1::basic_string" }
%"class.std::__1::__wrap_iter" = type { i8* }
%"class.net::SSLInfo" = type opaque
%"class.net::NetworkIsolationKey" = type opaque
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.net::AuthCredentials" = type { %"class.std::__1::basic_string.17", %"class.std::__1::basic_string.17" }
%"class.std::__1::basic_string.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.20 }
%union.anon.20 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.net::HttpRequestInfo" = type opaque
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.29" }
%"union.absl::variant_internal::DestructibleUnionImpl.29" = type { %"union.absl::variant_internal::DestructibleUnionImpl.30" }
%"union.absl::variant_internal::DestructibleUnionImpl.30" = type { %"union.absl::variant_internal::DestructibleUnionImpl.31" }
%"union.absl::variant_internal::DestructibleUnionImpl.31" = type { %"union.absl::variant_internal::DestructibleUnionImpl.32" }
%"union.absl::variant_internal::DestructibleUnionImpl.32" = type { %"class.std::__1::basic_string" }

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net15HttpAuthHandlerEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net15HttpAuthHandlerEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTVN3net15HttpAuthHandlerE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::HttpAuthHandler"*)* @_ZN3net15HttpAuthHandlerD2Ev to i8*), i8* bitcast (void (%"class.net::HttpAuthHandler"*)* @_ZN3net15HttpAuthHandlerD0Ev to i8*), i8* bitcast (i1 (%"class.net::HttpAuthHandler"*)* @_ZN3net15HttpAuthHandler13NeedsIdentityEv to i8*), i8* bitcast (i1 (%"class.net::HttpAuthHandler"*)* @_ZN3net15HttpAuthHandler24AllowsDefaultCredentialsEv to i8*), i8* bitcast (i1 (%"class.net::HttpAuthHandler"*)* @_ZN3net15HttpAuthHandler25AllowsExplicitCredentialsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [10 x i8] c"succeeded\00", align 1
@.str.4 = private unnamed_addr constant [21 x i8] c"authorization_result\00", align 1

@_ZN3net15HttpAuthHandlerD1Ev = hidden unnamed_addr alias void (%"class.net::HttpAuthHandler"*), void (%"class.net::HttpAuthHandler"*)* @_ZN3net15HttpAuthHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpAuthHandlerC2Ev(%"class.net::HttpAuthHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net15HttpAuthHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 1
  store i32 6, i32* %3, align 8
  %4 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 4
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false)
  tail call void @_ZN4GURLC1Ev(%class.GURL* %5) #10
  %7 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 5
  store i32 -1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 6
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 7
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 8
  tail call void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"* %10) #10
  %11 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

declare void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpAuthHandlerD2Ev(%"class.net::HttpAuthHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net15HttpAuthHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #10
  %4 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 8
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %4) #10
  %5 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 4
  tail call void @_ZN4GURLD1Ev(%class.GURL* %5) #10
  %6 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 3
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #11
  br label %14

14:                                               ; preds = %1, %11
  %15 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 2
  %16 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #11
  br label %23

23:                                               ; preds = %14, %20
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net15HttpAuthHandlerD0Ev(%"class.net::HttpAuthHandler"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net15HttpAuthHandler17InitFromChallengeEPNS_26HttpAuthChallengeTokenizerENS_8HttpAuth6TargetERKNS_7SSLInfoERKNS_19NetworkIsolationKeyERK4GURLRKNS_16NetLogWithSourceE(%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*, i32, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"*, %class.GURL* dereferenceable(120), %"class.net::NetLogWithSource"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 4
  %10 = tail call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %9, %class.GURL* dereferenceable(120) %5) #10
  %11 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 6
  store i32 %2, i32* %11, align 4
  %12 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 5
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 7
  store i32 -1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 8
  %15 = bitcast %"class.net::NetLogWithSource"* %14 to i8*
  %16 = bitcast %"class.net::NetLogWithSource"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false)
  %17 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #10
  %18 = getelementptr inbounds %"class.net::HttpAuthChallengeTokenizer", %"class.net::HttpAuthChallengeTokenizer"* %1, i64 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8, !noalias !2
  %20 = ptrtoint i8* %19 to i64
  %21 = getelementptr inbounds %"class.net::HttpAuthChallengeTokenizer", %"class.net::HttpAuthChallengeTokenizer"* %1, i64 0, i32 1, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %20
  %25 = icmp ugt i64 %24, -17
  br i1 %25, label %26, label %28

26:                                               ; preds = %7
  %27 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %27) #12
  unreachable

28:                                               ; preds = %7
  %29 = icmp ult i64 %24, 23
  br i1 %29, label %30, label %34

30:                                               ; preds = %28
  %31 = trunc i64 %24 to i8
  %32 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 %31, i8* %33, align 1, !alias.scope !2
  br label %42

34:                                               ; preds = %28
  %35 = add nuw i64 %24, 16
  %36 = and i64 %35, -16
  %37 = tail call i8* @_Znwm(i64 %36) #11
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %37, i8** %38, align 8, !alias.scope !2
  %39 = or i64 %36, -9223372036854775808
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %39, i64* %40, align 8, !alias.scope !2
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %24, i64* %41, align 8, !alias.scope !2
  br label %42

42:                                               ; preds = %34, %30
  %43 = phi i8* [ %17, %30 ], [ %37, %34 ]
  %44 = icmp eq i8* %19, %22
  br i1 %44, label %147, label %45

45:                                               ; preds = %42
  %46 = ptrtoint i8* %22 to i64
  %47 = sub i64 %46, %20
  %48 = icmp ult i64 %47, 32
  br i1 %48, label %137, label %49

49:                                               ; preds = %45
  %50 = ptrtoint i8* %22 to i64
  %51 = sub i64 %50, %20
  %52 = getelementptr i8, i8* %43, i64 %51
  %53 = icmp ult i8* %43, %22
  %54 = icmp ult i8* %19, %52
  %55 = and i1 %53, %54
  br i1 %55, label %137, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -32
  %58 = getelementptr i8, i8* %43, i64 %57
  %59 = getelementptr i8, i8* %19, i64 %57
  %60 = add i64 %57, -32
  %61 = lshr exact i64 %60, 5
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 3
  %64 = icmp ult i64 %60, 96
  br i1 %64, label %116, label %65

65:                                               ; preds = %56
  %66 = sub nsw i64 %62, %63
  br label %67

67:                                               ; preds = %67, %65
  %68 = phi i64 [ 0, %65 ], [ %113, %67 ]
  %69 = phi i64 [ %66, %65 ], [ %114, %67 ]
  %70 = getelementptr i8, i8* %43, i64 %68
  %71 = getelementptr i8, i8* %19, i64 %68
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !5
  %74 = getelementptr i8, i8* %71, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1, !alias.scope !5
  %77 = bitcast i8* %70 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %77, align 1, !alias.scope !8, !noalias !5
  %78 = getelementptr i8, i8* %70, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1, !alias.scope !8, !noalias !5
  %80 = or i64 %68, 32
  %81 = getelementptr i8, i8* %43, i64 %80
  %82 = getelementptr i8, i8* %19, i64 %80
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !5
  %85 = getelementptr i8, i8* %82, i64 16
  %86 = bitcast i8* %85 to <16 x i8>*
  %87 = load <16 x i8>, <16 x i8>* %86, align 1, !alias.scope !5
  %88 = bitcast i8* %81 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %88, align 1, !alias.scope !8, !noalias !5
  %89 = getelementptr i8, i8* %81, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %90, align 1, !alias.scope !8, !noalias !5
  %91 = or i64 %68, 64
  %92 = getelementptr i8, i8* %43, i64 %91
  %93 = getelementptr i8, i8* %19, i64 %91
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !5
  %96 = getelementptr i8, i8* %93, i64 16
  %97 = bitcast i8* %96 to <16 x i8>*
  %98 = load <16 x i8>, <16 x i8>* %97, align 1, !alias.scope !5
  %99 = bitcast i8* %92 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %99, align 1, !alias.scope !8, !noalias !5
  %100 = getelementptr i8, i8* %92, i64 16
  %101 = bitcast i8* %100 to <16 x i8>*
  store <16 x i8> %98, <16 x i8>* %101, align 1, !alias.scope !8, !noalias !5
  %102 = or i64 %68, 96
  %103 = getelementptr i8, i8* %43, i64 %102
  %104 = getelementptr i8, i8* %19, i64 %102
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1, !alias.scope !5
  %107 = getelementptr i8, i8* %104, i64 16
  %108 = bitcast i8* %107 to <16 x i8>*
  %109 = load <16 x i8>, <16 x i8>* %108, align 1, !alias.scope !5
  %110 = bitcast i8* %103 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %110, align 1, !alias.scope !8, !noalias !5
  %111 = getelementptr i8, i8* %103, i64 16
  %112 = bitcast i8* %111 to <16 x i8>*
  store <16 x i8> %109, <16 x i8>* %112, align 1, !alias.scope !8, !noalias !5
  %113 = add i64 %68, 128
  %114 = add i64 %69, -4
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %67, !llvm.loop !10

116:                                              ; preds = %67, %56
  %117 = phi i64 [ 0, %56 ], [ %113, %67 ]
  %118 = icmp eq i64 %63, 0
  br i1 %118, label %135, label %119

119:                                              ; preds = %116, %119
  %120 = phi i64 [ %132, %119 ], [ %117, %116 ]
  %121 = phi i64 [ %133, %119 ], [ %63, %116 ]
  %122 = getelementptr i8, i8* %43, i64 %120
  %123 = getelementptr i8, i8* %19, i64 %120
  %124 = bitcast i8* %123 to <16 x i8>*
  %125 = load <16 x i8>, <16 x i8>* %124, align 1, !alias.scope !5
  %126 = getelementptr i8, i8* %123, i64 16
  %127 = bitcast i8* %126 to <16 x i8>*
  %128 = load <16 x i8>, <16 x i8>* %127, align 1, !alias.scope !5
  %129 = bitcast i8* %122 to <16 x i8>*
  store <16 x i8> %125, <16 x i8>* %129, align 1, !alias.scope !8, !noalias !5
  %130 = getelementptr i8, i8* %122, i64 16
  %131 = bitcast i8* %130 to <16 x i8>*
  store <16 x i8> %128, <16 x i8>* %131, align 1, !alias.scope !8, !noalias !5
  %132 = add i64 %120, 32
  %133 = add i64 %121, -1
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %119, !llvm.loop !12

135:                                              ; preds = %119, %116
  %136 = icmp eq i64 %47, %57
  br i1 %136, label %147, label %137

137:                                              ; preds = %135, %49, %45
  %138 = phi i8* [ %43, %49 ], [ %43, %45 ], [ %58, %135 ]
  %139 = phi i8* [ %19, %49 ], [ %19, %45 ], [ %59, %135 ]
  br label %140

140:                                              ; preds = %137, %140
  %141 = phi i8* [ %145, %140 ], [ %138, %137 ]
  %142 = phi i8* [ %144, %140 ], [ %139, %137 ]
  %143 = load i8, i8* %142, align 1
  store i8 %143, i8* %141, align 1
  %144 = getelementptr inbounds i8, i8* %142, i64 1
  %145 = getelementptr inbounds i8, i8* %141, i64 1
  %146 = icmp eq i8* %144, %22
  br i1 %146, label %147, label %140, !llvm.loop !14

147:                                              ; preds = %140, %135, %42
  %148 = phi i8* [ %43, %42 ], [ %58, %135 ], [ %145, %140 ]
  store i8 0, i8* %148, align 1
  %149 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 3
  %150 = bitcast %"class.std::__1::basic_string"* %149 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %151 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %150, i64 0, i32 1, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = icmp slt i8 %152, 0
  br i1 %153, label %154, label %157

154:                                              ; preds = %147
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %149, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = load i8*, i8** %155, align 8
  tail call void @_ZdlPv(i8* %156) #11
  br label %157

157:                                              ; preds = %154, %147
  %158 = bitcast %"class.std::__1::basic_string"* %149 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* nonnull align 8 %17, i64 24, i1 false) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #10
  tail call void @_ZNK3net16NetLogWithSource10BeginEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %14, i32 346) #10
  %159 = bitcast %"class.net::HttpAuthHandler"* %0 to i1 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"*)***
  %160 = load i1 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"*)**, i1 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"*)*** %159, align 8
  %161 = getelementptr inbounds i1 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"*)*, i1 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"*)** %160, i64 5
  %162 = load i1 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"*)*, i1 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*, %"class.net::SSLInfo"*, %"class.net::NetworkIsolationKey"*)** %161, align 8
  %163 = tail call zeroext i1 %162(%"class.net::HttpAuthHandler"* %0, %"class.net::HttpAuthChallengeTokenizer"* %1, %"class.net::SSLInfo"* %3, %"class.net::NetworkIsolationKey"* %4) #10
  tail call void @_ZNK3net16NetLogWithSource22AddEntryWithBoolParamsENS_15NetLogEventTypeENS_16NetLogEventPhaseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.net::NetLogWithSource"* %14, i32 346, i32 2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9, i1 zeroext %163) #10
  ret i1 %163
}

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZNK3net16NetLogWithSource10BeginEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"*, i32) local_unnamed_addr #1

declare void @_ZNK3net16NetLogWithSource22AddEntryWithBoolParamsENS_15NetLogEventTypeENS_16NetLogEventPhaseEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEb(%"class.net::NetLogWithSource"*, i32, i32, i8*, i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15HttpAuthHandler17GenerateAuthTokenEPKNS_15AuthCredentialsEPKNS_15HttpRequestInfoEN4base12OnceCallbackIFviEEEPNSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEE(%"class.net::HttpAuthHandler"*, %"class.net::AuthCredentials"*, %"struct.net::HttpRequestInfo"*, %"class.base::OnceCallback"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 9, i32 0
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %9 = tail call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %7, %"class.base::internal::CallbackBase"* dereferenceable(8) %8) #10
  %10 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 8
  tail call void @_ZNK3net16NetLogWithSource10BeginEventENS_15NetLogEventTypeE(%"class.net::NetLogWithSource"* %10, i32 347) #10
  %11 = ptrtoint %"class.net::HttpAuthHandler"* %0 to i64
  %12 = tail call i8* @_Znwm(i64 56) #11, !noalias !15
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net15HttpAuthHandlerEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net15HttpAuthHandlerEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !15
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::HttpAuthHandler"*, i32)* @_ZN3net15HttpAuthHandler27OnGenerateAuthTokenCompleteEi to i64), i64 0>, <2 x i64>* %15, align 8, !noalias !15
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %11, i64* %17, align 8, !noalias !15
  %18 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !15
  %19 = bitcast %"class.net::HttpAuthHandler"* %0 to i32 (%"class.net::HttpAuthHandler"*, %"class.net::AuthCredentials"*, %"struct.net::HttpRequestInfo"*, %"class.base::OnceCallback"*, %"class.std::__1::basic_string"*)***
  %20 = load i32 (%"class.net::HttpAuthHandler"*, %"class.net::AuthCredentials"*, %"struct.net::HttpRequestInfo"*, %"class.base::OnceCallback"*, %"class.std::__1::basic_string"*)**, i32 (%"class.net::HttpAuthHandler"*, %"class.net::AuthCredentials"*, %"struct.net::HttpRequestInfo"*, %"class.base::OnceCallback"*, %"class.std::__1::basic_string"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.net::HttpAuthHandler"*, %"class.net::AuthCredentials"*, %"struct.net::HttpRequestInfo"*, %"class.base::OnceCallback"*, %"class.std::__1::basic_string"*)*, i32 (%"class.net::HttpAuthHandler"*, %"class.net::AuthCredentials"*, %"struct.net::HttpRequestInfo"*, %"class.base::OnceCallback"*, %"class.std::__1::basic_string"*)** %20, i64 6
  %22 = load i32 (%"class.net::HttpAuthHandler"*, %"class.net::AuthCredentials"*, %"struct.net::HttpRequestInfo"*, %"class.base::OnceCallback"*, %"class.std::__1::basic_string"*)*, i32 (%"class.net::HttpAuthHandler"*, %"class.net::AuthCredentials"*, %"struct.net::HttpRequestInfo"*, %"class.base::OnceCallback"*, %"class.std::__1::basic_string"*)** %21, align 8
  %23 = call i32 %22(%"class.net::HttpAuthHandler"* %0, %"class.net::AuthCredentials"* %1, %"struct.net::HttpRequestInfo"* %2, %"class.base::OnceCallback"* nonnull %6, %"class.std::__1::basic_string"* %4) #10
  %24 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #10
  %25 = icmp eq i32 %23, -1
  br i1 %25, label %27, label %26

26:                                               ; preds = %5
  call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %10, i32 347, i32 %23) #10
  call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %7) #10
  br label %27

27:                                               ; preds = %5, %26
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpAuthHandler27OnGenerateAuthTokenCompleteEi(%"class.net::HttpAuthHandler"*, i32) #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 9
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %11 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 8
  tail call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %11, i32 347, i32 %1) #10
  %12 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %12) #10
  %13 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  %14 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %10, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %15 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %16 = inttoptr i64 %10 to %"class.base::internal::BindStateBase"*
  %17 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %16, i64 0, i32 1
  %18 = bitcast void ()** %17 to void (%"class.base::internal::BindStateBase"*, i32)**
  %19 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %18, align 8
  tail call void %19(%"class.base::internal::BindStateBase"* %16, i32 %1) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %15) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net15HttpAuthHandler23FinishGenerateAuthTokenEi(%"class.net::HttpAuthHandler"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 8
  tail call void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"* %3, i32 347, i32 %1) #10
  %4 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 9, i32 0
  tail call void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"* %4) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net15HttpAuthHandler13NeedsIdentityEv(%"class.net::HttpAuthHandler"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net15HttpAuthHandler24AllowsDefaultCredentialsEv(%"class.net::HttpAuthHandler"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net15HttpAuthHandler25AllowsExplicitCredentialsEv(%"class.net::HttpAuthHandler"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

declare void @_ZNK3net16NetLogWithSource24EndEventWithNetErrorCodeENS_15NetLogEventTypeEi(%"class.net::NetLogWithSource"*, i32, i32) local_unnamed_addr #1

declare void @_ZN4base8internal12CallbackBase5ResetEv(%"class.base::internal::CallbackBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net15HttpAuthHandler22HandleAnotherChallengeEPNS_26HttpAuthChallengeTokenizerE(%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::Value", align 8
  %4 = bitcast %"class.net::HttpAuthHandler"* %0 to i32 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*)***
  %5 = load i32 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*)**, i32 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*)*, i32 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*)** %5, i64 7
  %7 = load i32 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*)*, i32 (%"class.net::HttpAuthHandler"*, %"class.net::HttpAuthChallengeTokenizer"*)** %6, align 8
  %8 = tail call i32 %7(%"class.net::HttpAuthHandler"* %0, %"class.net::HttpAuthChallengeTokenizer"* %1) #10
  %9 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 8, i32 1
  %10 = load %"class.net::NetLog"*, %"class.net::NetLog"** %9, align 8
  %11 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %10, i64 0, i32 3
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14, !prof !20

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.net::HttpAuthHandler", %"class.net::HttpAuthHandler"* %0, i64 0, i32 8, i32 0
  %16 = bitcast %"class.base::Value"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #10
  call void @_ZN3net8HttpAuth31NetLogAuthorizationResultParamsEPKcNS0_19AuthorizationResultE(%"class.base::Value"* nonnull sret %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0), i32 %8) #10
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %10, i32 348, %"struct.net::NetLogSource"* dereferenceable(16) %15, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %3) #10
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #10
  br label %17

17:                                               ; preds = %2, %14
  ret i32 %8
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net15HttpAuthHandlerEFviEJNS0_17UnretainedWrapperIS4_EEEEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.net::HttpAuthHandler"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.net::HttpAuthHandler"*, i32)**
  %22 = load void (%"class.net::HttpAuthHandler"*, i32)*, void (%"class.net::HttpAuthHandler"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.net::HttpAuthHandler"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.net::HttpAuthHandler"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.net::HttpAuthHandler"* %13, i32 %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net15HttpAuthHandlerEFviEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

declare void @_ZN3net8HttpAuth31NetLogAuthorizationResultParamsEPKcNS0_19AuthorizationResultE(%"class.base::Value"* sret, i8*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK3net26HttpAuthChallengeTokenizer14challenge_textEv: argument 0"}
!4 = distinct !{!4, !"_ZNK3net26HttpAuthChallengeTokenizer14challenge_textEv"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.unroll.disable"}
!14 = distinct !{!14, !11}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15HttpAuthHandlerEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net15HttpAuthHandlerEFviEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!18 = distinct !{!18, !19, !"_ZN4base8BindOnceIMN3net15HttpAuthHandlerEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8BindOnceIMN3net15HttpAuthHandlerEFviEJNS_8internal17UnretainedWrapperIS2_EEEEENS_12OnceCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!20 = !{!"branch_weights", i32 2000, i32 1}
