; ModuleID = '../../v8/src/heap/slot-set.cc'
source_filename = "../../v8/src/heap/slot-set.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }

@_ZTVN2v88internal10TypedSlotsE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::TypedSlots"*)* @_ZN2v88internal10TypedSlotsD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::TypedSlots"*)* @_ZN2v88internal10TypedSlotsD0Ev to i8*)] }, align 8

@_ZN2v88internal10TypedSlotsD1Ev = hidden unnamed_addr alias void (%"class.v8::internal::TypedSlots"*), void (%"class.v8::internal::TypedSlots"*)* @_ZN2v88internal10TypedSlotsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10TypedSlotsD2Ev(%"class.v8::internal::TypedSlots"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal10TypedSlotsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::TypedSlots::Chunk"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %19
  %7 = phi %"struct.v8::internal::TypedSlots::Chunk"* [ %10, %19 ], [ %4, %1 ]
  %8 = bitcast %"struct.v8::internal::TypedSlots::Chunk"* %7 to i8*
  %9 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %7, i64 0, i32 0
  %10 = load %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %7, i64 0, i32 1, i32 0, i32 0
  %12 = load %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::TypedSlots::TypedSlot"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = ptrtoint %"struct.v8::internal::TypedSlots::TypedSlot"* %12 to i64
  %16 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %7, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %6, %14
  tail call void @_ZdlPv(i8* %8) #7
  %20 = icmp eq %"struct.v8::internal::TypedSlots::Chunk"* %10, null
  br i1 %20, label %21, label %6

21:                                               ; preds = %19, %1
  %22 = bitcast %"struct.v8::internal::TypedSlots::Chunk"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10TypedSlotsD0Ev(%"class.v8::internal::TypedSlots"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2v88internal10TypedSlotsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %0, i64 0, i32 1
  %4 = load %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::TypedSlots::Chunk"* %4, null
  br i1 %5, label %21, label %6

6:                                                ; preds = %1, %19
  %7 = phi %"struct.v8::internal::TypedSlots::Chunk"* [ %10, %19 ], [ %4, %1 ]
  %8 = bitcast %"struct.v8::internal::TypedSlots::Chunk"* %7 to i8*
  %9 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %7, i64 0, i32 0
  %10 = load %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"** %9, align 8
  %11 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %7, i64 0, i32 1, i32 0, i32 0
  %12 = load %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"** %11, align 8
  %13 = icmp eq %"struct.v8::internal::TypedSlots::TypedSlot"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %6
  %15 = ptrtoint %"struct.v8::internal::TypedSlots::TypedSlot"* %12 to i64
  %16 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %7, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #7
  br label %19

19:                                               ; preds = %14, %6
  tail call void @_ZdlPv(i8* %8) #7
  %20 = icmp eq %"struct.v8::internal::TypedSlots::Chunk"* %10, null
  br i1 %20, label %21, label %6

21:                                               ; preds = %19, %1
  %22 = bitcast %"class.v8::internal::TypedSlots"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10TypedSlots6InsertENS0_8SlotTypeEj(%"class.v8::internal::TypedSlots"* nocapture, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = shl i32 %1, 29
  %5 = or i32 %4, %2
  %6 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %0, i64 0, i32 1
  %7 = load %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"** %6, align 8
  %8 = icmp eq %"struct.v8::internal::TypedSlots::Chunk"* %7, null
  br i1 %8, label %9, label %26

9:                                                ; preds = %3
  %10 = tail call i8* @_Znwm(i64 32) #7
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = getelementptr inbounds i8, i8* %10, i64 24
  %13 = bitcast i8* %12 to i64*
  %14 = bitcast i8* %11 to i64*
  %15 = getelementptr inbounds i8, i8* %10, i64 16
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %10 to i64*
  store i64 0, i64* %17, align 8
  %18 = tail call i8* @_Znwm(i64 400) #7
  %19 = ptrtoint i8* %18 to i64
  %20 = getelementptr inbounds i8, i8* %18, i64 400
  %21 = ptrtoint i8* %20 to i64
  store i64 %19, i64* %14, align 8
  store i64 %19, i64* %16, align 8
  store i64 %21, i64* %13, align 8
  %22 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %0, i64 0, i32 2
  %23 = bitcast %"struct.v8::internal::TypedSlots::Chunk"** %22 to i8**
  store i8* %10, i8** %23, align 8
  %24 = bitcast %"struct.v8::internal::TypedSlots::Chunk"** %6 to i8**
  store i8* %10, i8** %24, align 8
  %25 = bitcast i8* %10 to %"struct.v8::internal::TypedSlots::Chunk"*
  br label %26

26:                                               ; preds = %9, %3
  %27 = phi %"struct.v8::internal::TypedSlots::Chunk"* [ %7, %3 ], [ %25, %9 ]
  %28 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %27, i64 0, i32 1
  %29 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %27, i64 0, i32 1, i32 0, i32 1
  %30 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %27, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %36 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %33
  %39 = icmp eq i64 %34, %38
  %40 = inttoptr i64 %31 to %"struct.v8::internal::TypedSlots::TypedSlot"*
  %41 = inttoptr i64 %37 to %"struct.v8::internal::TypedSlots::TypedSlot"*
  br i1 %39, label %42, label %68

42:                                               ; preds = %26
  %43 = ashr exact i64 %34, 1
  %44 = icmp ult i64 %43, 16384
  %45 = select i1 %44, i64 %43, i64 16384
  %46 = tail call i8* @_Znwm(i64 32) #7
  %47 = getelementptr inbounds i8, i8* %46, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #8
  %48 = bitcast i8* %46 to %"struct.v8::internal::TypedSlots::Chunk"**
  store %"struct.v8::internal::TypedSlots::Chunk"* %27, %"struct.v8::internal::TypedSlots::Chunk"** %48, align 8
  %49 = icmp eq i64 %45, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %42
  %51 = bitcast i8* %47 to i64*
  %52 = getelementptr inbounds i8, i8* %46, i64 24
  %53 = bitcast i8* %52 to i64*
  %54 = getelementptr inbounds i8, i8* %46, i64 16
  %55 = bitcast i8* %54 to i64*
  %56 = shl nuw i64 %45, 2
  %57 = tail call i8* @_Znwm(i64 %56) #7
  %58 = bitcast i8* %57 to %"struct.v8::internal::TypedSlots::TypedSlot"*
  %59 = ptrtoint i8* %57 to i64
  %60 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %58, i64 %45
  %61 = ptrtoint %"struct.v8::internal::TypedSlots::TypedSlot"* %60 to i64
  store i64 %59, i64* %51, align 8
  store i64 %59, i64* %55, align 8
  store i64 %61, i64* %53, align 8
  %62 = bitcast i8* %57 to %"struct.v8::internal::TypedSlots::TypedSlot"*
  br label %63

63:                                               ; preds = %50, %42
  %64 = phi %"struct.v8::internal::TypedSlots::TypedSlot"* [ %60, %50 ], [ null, %42 ]
  %65 = phi %"struct.v8::internal::TypedSlots::TypedSlot"* [ %62, %50 ], [ null, %42 ]
  %66 = bitcast %"struct.v8::internal::TypedSlots::Chunk"** %6 to i8**
  store i8* %46, i8** %66, align 8
  %67 = bitcast i8* %46 to %"struct.v8::internal::TypedSlots::Chunk"*
  br label %68

68:                                               ; preds = %26, %63
  %69 = phi %"struct.v8::internal::TypedSlots::TypedSlot"* [ %64, %63 ], [ %41, %26 ]
  %70 = phi %"struct.v8::internal::TypedSlots::TypedSlot"* [ %65, %63 ], [ %40, %26 ]
  %71 = phi %"struct.v8::internal::TypedSlots::Chunk"* [ %67, %63 ], [ %27, %26 ]
  %72 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %71, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %71, i64 0, i32 1, i32 0, i32 1
  %74 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %71, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %75 = icmp eq %"struct.v8::internal::TypedSlots::TypedSlot"* %70, %69
  br i1 %75, label %81, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %70, i64 0, i32 0
  store i32 %5, i32* %77, align 4
  %78 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %70, i64 1
  %79 = ptrtoint %"struct.v8::internal::TypedSlots::TypedSlot"* %78 to i64
  %80 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"** %73 to i64*
  store i64 %79, i64* %80, align 8
  br label %136

81:                                               ; preds = %68
  %82 = ptrtoint %"struct.v8::internal::TypedSlots::TypedSlot"* %69 to i64
  %83 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"** %73 to i64*
  %84 = bitcast %"class.std::__1::vector"* %72 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 %82, %85
  %87 = ashr exact i64 %86, 2
  %88 = add nsw i64 %87, 1
  %89 = icmp ugt i64 %88, 4611686018427387903
  br i1 %89, label %90, label %92

90:                                               ; preds = %81
  %91 = bitcast %"class.std::__1::vector"* %72 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %91) #9
  unreachable

92:                                               ; preds = %81
  %93 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"** %74 to i64*
  %94 = icmp ult i64 %87, 2305843009213693951
  br i1 %94, label %95, label %103

95:                                               ; preds = %92
  %96 = ashr exact i64 %86, 1
  %97 = icmp ult i64 %96, %88
  %98 = select i1 %97, i64 %88, i64 %96
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %108, label %100

100:                                              ; preds = %95
  %101 = icmp ugt i64 %98, 4611686018427387903
  br i1 %101, label %102, label %103

102:                                              ; preds = %100
  tail call void @abort() #9
  unreachable

103:                                              ; preds = %100, %92
  %104 = phi i64 [ %98, %100 ], [ 4611686018427387903, %92 ]
  %105 = shl i64 %104, 2
  %106 = tail call i8* @_Znwm(i64 %105) #7
  %107 = bitcast i8* %106 to %"struct.v8::internal::TypedSlots::TypedSlot"*
  br label %108

108:                                              ; preds = %103, %95
  %109 = phi i64 [ %104, %103 ], [ 0, %95 ]
  %110 = phi %"struct.v8::internal::TypedSlots::TypedSlot"* [ %107, %103 ], [ null, %95 ]
  %111 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %110, i64 %87
  %112 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %110, i64 %109
  %113 = ptrtoint %"struct.v8::internal::TypedSlots::TypedSlot"* %112 to i64
  %114 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %111, i64 0, i32 0
  store i32 %5, i32* %114, align 4
  %115 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %111, i64 1
  %116 = ptrtoint %"struct.v8::internal::TypedSlots::TypedSlot"* %115 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %72, i64 0, i32 0, i32 0
  %118 = load %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"** %117, align 8
  %119 = load i64, i64* %83, align 8
  %120 = ptrtoint %"struct.v8::internal::TypedSlots::TypedSlot"* %118 to i64
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 2
  %123 = sub nsw i64 0, %122
  %124 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %111, i64 %123
  %125 = ptrtoint %"struct.v8::internal::TypedSlots::TypedSlot"* %124 to i64
  %126 = icmp sgt i64 %121, 0
  br i1 %126, label %127, label %131

127:                                              ; preds = %108
  %128 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"* %124 to i8*
  %129 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %128, i8* align 4 %129, i64 %121, i1 false) #8
  %130 = load %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"** %117, align 8
  br label %131

131:                                              ; preds = %127, %108
  %132 = phi %"struct.v8::internal::TypedSlots::TypedSlot"* [ %118, %108 ], [ %130, %127 ]
  store i64 %125, i64* %84, align 8
  store i64 %116, i64* %83, align 8
  store i64 %113, i64* %93, align 8
  %133 = icmp eq %"struct.v8::internal::TypedSlots::TypedSlot"* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"* %132 to i8*
  tail call void @_ZdlPv(i8* %135) #7
  br label %136

136:                                              ; preds = %76, %131, %134
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.v8::internal::TypedSlots::Chunk"* @_ZN2v88internal10TypedSlots11EnsureChunkEv(%"class.v8::internal::TypedSlots"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %0, i64 0, i32 1
  %3 = load %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"** %2, align 8
  %4 = icmp eq %"struct.v8::internal::TypedSlots::Chunk"* %3, null
  br i1 %4, label %5, label %22

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 32) #7
  %7 = getelementptr inbounds i8, i8* %6, i64 8
  %8 = getelementptr inbounds i8, i8* %6, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = bitcast i8* %7 to i64*
  %11 = getelementptr inbounds i8, i8* %6, i64 16
  %12 = bitcast i8* %11 to i64*
  %13 = bitcast i8* %6 to i64*
  store i64 0, i64* %13, align 8
  %14 = tail call i8* @_Znwm(i64 400) #7
  %15 = ptrtoint i8* %14 to i64
  %16 = getelementptr inbounds i8, i8* %14, i64 400
  %17 = ptrtoint i8* %16 to i64
  store i64 %15, i64* %10, align 8
  store i64 %15, i64* %12, align 8
  store i64 %17, i64* %9, align 8
  %18 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %0, i64 0, i32 2
  %19 = bitcast %"struct.v8::internal::TypedSlots::Chunk"** %18 to i8**
  store i8* %6, i8** %19, align 8
  %20 = bitcast %"struct.v8::internal::TypedSlots::Chunk"** %2 to i8**
  store i8* %6, i8** %20, align 8
  %21 = bitcast i8* %6 to %"struct.v8::internal::TypedSlots::Chunk"*
  br label %22

22:                                               ; preds = %1, %5
  %23 = phi %"struct.v8::internal::TypedSlots::Chunk"* [ %3, %1 ], [ %21, %5 ]
  %24 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %23, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %23, i64 0, i32 1, i32 0, i32 1
  %26 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector"* %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %23, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %32 = bitcast %"struct.v8::internal::TypedSlots::TypedSlot"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %33, %29
  %35 = icmp eq i64 %30, %34
  br i1 %35, label %36, label %59

36:                                               ; preds = %22
  %37 = ashr exact i64 %30, 1
  %38 = icmp ult i64 %37, 16384
  %39 = select i1 %38, i64 %37, i64 16384
  %40 = tail call i8* @_Znwm(i64 32) #7
  %41 = getelementptr inbounds i8, i8* %40, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #8
  %42 = bitcast i8* %40 to %"struct.v8::internal::TypedSlots::Chunk"**
  store %"struct.v8::internal::TypedSlots::Chunk"* %23, %"struct.v8::internal::TypedSlots::Chunk"** %42, align 8
  %43 = icmp eq i64 %39, 0
  br i1 %43, label %56, label %44

44:                                               ; preds = %36
  %45 = bitcast i8* %41 to i64*
  %46 = getelementptr inbounds i8, i8* %40, i64 24
  %47 = bitcast i8* %46 to i64*
  %48 = getelementptr inbounds i8, i8* %40, i64 16
  %49 = bitcast i8* %48 to i64*
  %50 = shl nuw i64 %39, 2
  %51 = tail call i8* @_Znwm(i64 %50) #7
  %52 = bitcast i8* %51 to %"struct.v8::internal::TypedSlots::TypedSlot"*
  %53 = ptrtoint i8* %51 to i64
  %54 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %52, i64 %39
  %55 = ptrtoint %"struct.v8::internal::TypedSlots::TypedSlot"* %54 to i64
  store i64 %53, i64* %45, align 8
  store i64 %53, i64* %49, align 8
  store i64 %55, i64* %47, align 8
  br label %56

56:                                               ; preds = %36, %44
  %57 = bitcast %"struct.v8::internal::TypedSlots::Chunk"** %2 to i8**
  store i8* %40, i8** %57, align 8
  %58 = bitcast i8* %40 to %"struct.v8::internal::TypedSlots::Chunk"*
  br label %59

59:                                               ; preds = %56, %22
  %60 = phi %"struct.v8::internal::TypedSlots::Chunk"* [ %58, %56 ], [ %23, %22 ]
  ret %"struct.v8::internal::TypedSlots::Chunk"* %60
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal10TypedSlots5MergeEPS1_(%"class.v8::internal::TypedSlots"* nocapture, %"class.v8::internal::TypedSlots"* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %1, i64 0, i32 1
  %4 = load %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"** %3, align 8
  %5 = icmp eq %"struct.v8::internal::TypedSlots::Chunk"* %4, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %0, i64 0, i32 1
  %8 = load %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"** %7, align 8
  %9 = icmp eq %"struct.v8::internal::TypedSlots::Chunk"* %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  store %"struct.v8::internal::TypedSlots::Chunk"* %4, %"struct.v8::internal::TypedSlots::Chunk"** %7, align 8
  %11 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %0, i64 0, i32 2
  br label %16

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %0, i64 0, i32 2
  %14 = load %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"** %13, align 8
  %15 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %14, i64 0, i32 0
  store %"struct.v8::internal::TypedSlots::Chunk"* %4, %"struct.v8::internal::TypedSlots::Chunk"** %15, align 8
  br label %16

16:                                               ; preds = %12, %10
  %17 = phi %"struct.v8::internal::TypedSlots::Chunk"** [ %13, %12 ], [ %11, %10 ]
  %18 = getelementptr inbounds %"class.v8::internal::TypedSlots", %"class.v8::internal::TypedSlots"* %1, i64 0, i32 2
  %19 = bitcast %"struct.v8::internal::TypedSlots::Chunk"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"struct.v8::internal::TypedSlots::Chunk"** %17 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"struct.v8::internal::TypedSlots::Chunk"** %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  br label %23

23:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"struct.v8::internal::TypedSlots::Chunk"* @_ZN2v88internal10TypedSlots8NewChunkEPNS1_5ChunkEm(%"class.v8::internal::TypedSlots"* nocapture readnone, %"struct.v8::internal::TypedSlots::Chunk"*, i64) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 32) #7
  %5 = bitcast i8* %4 to %"struct.v8::internal::TypedSlots::Chunk"*
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #8
  %7 = bitcast i8* %4 to %"struct.v8::internal::TypedSlots::Chunk"**
  store %"struct.v8::internal::TypedSlots::Chunk"* %1, %"struct.v8::internal::TypedSlots::Chunk"** %7, align 8
  %8 = getelementptr inbounds i8, i8* %4, i64 24
  %9 = bitcast i8* %8 to i64*
  %10 = icmp eq i64 %2, 0
  br i1 %10, label %24, label %11

11:                                               ; preds = %3
  %12 = icmp ugt i64 %2, 4611686018427387903
  br i1 %12, label %13, label %14

13:                                               ; preds = %11
  tail call void @abort() #9
  unreachable

14:                                               ; preds = %11
  %15 = shl i64 %2, 2
  %16 = tail call i8* @_Znwm(i64 %15) #7
  %17 = bitcast i8* %16 to %"struct.v8::internal::TypedSlots::TypedSlot"*
  %18 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %17, i64 %2
  %19 = ptrtoint %"struct.v8::internal::TypedSlots::TypedSlot"* %18 to i64
  %20 = insertelement <2 x i8*> undef, i8* %16, i32 0
  %21 = shufflevector <2 x i8*> %20, <2 x i8*> undef, <2 x i32> zeroinitializer
  %22 = ptrtoint <2 x i8*> %21 to <2 x i64>
  %23 = bitcast i8* %6 to <2 x i64>*
  store <2 x i64> %22, <2 x i64>* %23, align 8
  store i64 %19, i64* %9, align 8
  br label %24

24:                                               ; preds = %14, %3
  ret %"struct.v8::internal::TypedSlots::Chunk"* %5
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal12TypedSlotSet17ClearInvalidSlotsERKNSt3__13mapIjjNS2_4lessIjEENS2_9allocatorINS2_4pairIKjjEEEEEE(%"class.v8::internal::TypedSlotSet"* nocapture readonly, %"class.std::__1::map"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::TypedSlotSet", %"class.v8::internal::TypedSlotSet"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.v8::internal::TypedSlots::Chunk"** %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %80, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node"**
  %10 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %1, i64 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %7, %19
  %12 = phi i64 [ %5, %7 ], [ %21, %19 ]
  %13 = inttoptr i64 %12 to %"struct.v8::internal::TypedSlots::Chunk"*
  %14 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = load %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"** %14, align 8
  %16 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %13, i64 0, i32 1, i32 0, i32 1
  %17 = load %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"** %16, align 8
  %18 = icmp eq %"struct.v8::internal::TypedSlots::TypedSlot"* %15, %17
  br i1 %18, label %19, label %23

19:                                               ; preds = %77, %11
  %20 = inttoptr i64 %12 to i64*
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %80, label %11

23:                                               ; preds = %11, %77
  %24 = phi %"struct.v8::internal::TypedSlots::TypedSlot"* [ %78, %77 ], [ %15, %11 ]
  %25 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp ugt i32 %26, -536870913
  br i1 %27, label %77, label %28

28:                                               ; preds = %23
  %29 = and i32 %26, 536870911
  %30 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %9, align 8
  %31 = icmp eq %"class.std::__1::__tree_node"* %30, null
  br i1 %31, label %46, label %32

32:                                               ; preds = %28, %32
  %33 = phi %"class.std::__1::__tree_end_node"* [ %43, %32 ], [ %8, %28 ]
  %34 = phi %"class.std::__1::__tree_node"* [ %44, %32 ], [ %30, %28 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 1, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp ult i32 %29, %36
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 0
  %39 = bitcast %"class.std::__1::__tree_node"* %34 to %"class.std::__1::__tree_node"**
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %34, i64 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::__tree_node_base"** %40 to %"class.std::__1::__tree_node"**
  %42 = select i1 %37, %"class.std::__1::__tree_node"** %39, %"class.std::__1::__tree_node"** %41
  %43 = select i1 %37, %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"* %33
  %44 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %42, align 8
  %45 = icmp eq %"class.std::__1::__tree_node"* %44, null
  br i1 %45, label %46, label %32

46:                                               ; preds = %32, %28
  %47 = phi %"class.std::__1::__tree_end_node"* [ %8, %28 ], [ %43, %32 ]
  %48 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %10, align 8
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %47, %48
  br i1 %49, label %77, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %47, i64 0, i32 0
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = icmp eq %"class.std::__1::__tree_node_base"* %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %50, %54
  %55 = phi %"class.std::__1::__tree_node_base"* [ %57, %54 ], [ %52, %50 ]
  %56 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %55, i64 0, i32 1
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %70, label %54

59:                                               ; preds = %50, %59
  %60 = phi %"class.std::__1::__tree_end_node"* [ %64, %59 ], [ %47, %50 ]
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"class.std::__1::__tree_node_base"*
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %60, i64 2
  %63 = bitcast %"class.std::__1::__tree_end_node"* %62 to %"class.std::__1::__tree_end_node"**
  %64 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %64, i64 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node_base"* %66, %61
  br i1 %67, label %59, label %68

68:                                               ; preds = %59
  %69 = bitcast %"class.std::__1::__tree_end_node"* %64 to %"class.std::__1::__tree_node_base"*
  br label %70

70:                                               ; preds = %54, %68
  %71 = phi %"class.std::__1::__tree_node_base"* [ %69, %68 ], [ %55, %54 ]
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 4, i64 7
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = icmp ugt i32 %74, %29
  br i1 %75, label %76, label %77

76:                                               ; preds = %70
  store i32 -536870912, i32* %25, align 4
  br label %77

77:                                               ; preds = %46, %76, %70, %23
  %78 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %24, i64 1
  %79 = icmp eq %"struct.v8::internal::TypedSlots::TypedSlot"* %78, %17
  br i1 %79, label %19, label %23

80:                                               ; preds = %19, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
