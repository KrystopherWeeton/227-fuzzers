; ModuleID = '../../native_client/src/trusted/desc/posix/nacl_desc_conn_cap.c'
source_filename = "../../native_client/src/trusted/desc/posix/nacl_desc_conn_cap.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClDescEffector = type opaque
%struct.nacl_abi_stat = type { i64, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i64, i64, i64, i64, i64 }
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type opaque
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }
%struct.NaClDescConnCapFd = type { %struct.NaClDesc, i32 }
%struct.iovec = type { i8*, i64 }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%struct.NaClDescImcDesc = type { %struct.NaClDescImcConnectedDesc, %struct.NaClMutex, %struct.NaClMutex }
%struct.NaClDescImcConnectedDesc = type { %struct.NaClDesc, i32 }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }

@kNaClDescConnCapFdVtbl = internal constant %struct.NaClDescVtbl { %struct.NaClRefCountVtbl { void (%struct.NaClRefCount*)* @NaClDescConnCapFdDtor }, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)* @NaClDescMapNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescWriteNotImplemented, i64 (%struct.NaClDesc*, i64, i32)* @NaClDescSeekNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPWriteNotImplemented, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)* @NaClDescConnCapFdFstat, i32 (%struct.NaClDesc*)* @NaClDescFchdirNotImplemented, i32 (%struct.NaClDesc*, i32)* @NaClDescFchmodNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFsyncNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFdatasyncNotImplemented, i32 (%struct.NaClDesc*, i64)* @NaClDescFtruncateNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescGetdentsNotImplemented, i32 (%struct.NaClDesc*, i64*, i64*)* @NaClDescConnCapFdExternalizeSize, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)* @NaClDescConnCapFdExternalize, i32 (%struct.NaClDesc*)* @NaClDescLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescTryLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescUnlockNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*)* @NaClDescWaitNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)* @NaClDescTimedWaitAbsNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSignalNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescBroadcastNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescRecvMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelRecvMsgNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescConnCapFdConnectAddr, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescConnCapFdAcceptConn, i32 (%struct.NaClDesc*)* @NaClDescPostNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSemWaitNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescGetValueNotImplemented, i32 (%struct.NaClDesc*, i32, i32, i8*)* @NaClDescSetMetadata, i32 (%struct.NaClDesc*, i32*, i8*)* @NaClDescGetMetadata, void (%struct.NaClDesc*, i32)* @NaClDescSetFlags, i32 (%struct.NaClDesc*)* @NaClDescGetFlags, i32 (%struct.NaClDesc*)* @NaClDescIsattyNotImplemented, i32 4 }, align 8
@kNaClDescVtbl = external constant %struct.NaClDescVtbl, align 8
@.str = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"NaClDescConnCapFdAcceptConn: not IMC\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescConnCapFdCtor(%struct.NaClDescConnCapFd*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.NaClDescConnCapFd, %struct.NaClDescConnCapFd* %0, i64 0, i32 0
  %4 = getelementptr inbounds %struct.NaClDescConnCapFd, %struct.NaClDescConnCapFd* %0, i64 0, i32 0, i32 0, i32 0
  store %struct.NaClRefCountVtbl* null, %struct.NaClRefCountVtbl** %4, align 8
  %5 = tail call i32 @NaClDescCtor(%struct.NaClDesc* %3) #5
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.NaClDescConnCapFd, %struct.NaClDescConnCapFd* %0, i64 0, i32 1
  store i32 %1, i32* %8, align 8
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescConnCapFdVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %4, align 8
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi i32 [ 1, %7 ], [ 0, %2 ]
  ret i32 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @NaClDescCtor(%struct.NaClDesc*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescConnCapFdInternalize(%struct.NaClDesc** nocapture, %struct.NaClDescXferState*) local_unnamed_addr #0 {
  %3 = tail call noalias i8* @malloc(i64 88) #5
  %4 = bitcast i8* %3 to %struct.NaClDescConnCapFd*
  %5 = icmp eq i8* %3, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = bitcast i8* %3 to %struct.NaClDesc*
  %8 = tail call i32 @NaClDescInternalizeCtor(%struct.NaClDesc* nonnull %7, %struct.NaClDescXferState* %1) #5
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  tail call void @free(i8* nonnull %3) #5
  br label %24

11:                                               ; preds = %6
  %12 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 3
  %15 = load i32*, i32** %14, align 8
  %16 = icmp eq i32* %13, %15
  br i1 %16, label %24, label %17

17:                                               ; preds = %11
  %18 = load i32, i32* %13, align 4
  %19 = getelementptr inbounds i8, i8* %3, i64 80
  %20 = bitcast i8* %19 to i32*
  store i32 %18, i32* %20, align 8
  %21 = bitcast i8* %3 to %struct.NaClRefCountVtbl**
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescConnCapFdVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %21, align 8
  %22 = getelementptr inbounds i32, i32* %13, i64 1
  store i32* %22, i32** %12, align 8
  store i32 -1, i32* %13, align 4
  %23 = bitcast %struct.NaClDesc** %0 to i8**
  store i8* %3, i8** %23, align 8
  br label %28

24:                                               ; preds = %10, %11
  %25 = phi %struct.NaClDescConnCapFd* [ %4, %11 ], [ null, %10 ]
  %26 = phi i32 [ -5, %11 ], [ -12, %10 ]
  %27 = getelementptr inbounds %struct.NaClDescConnCapFd, %struct.NaClDescConnCapFd* %25, i64 0, i32 0
  tail call void @NaClDescSafeUnref(%struct.NaClDesc* %27) #5
  br label %28

28:                                               ; preds = %17, %24, %2
  %29 = phi i32 [ -12, %2 ], [ %26, %24 ], [ 0, %17 ]
  ret i32 %29
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

declare i32 @NaClDescInternalizeCtor(%struct.NaClDesc*, %struct.NaClDescXferState*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @NaClDescSafeUnref(%struct.NaClDesc*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @NaClDescConnCapFdDtor(%struct.NaClRefCount*) #0 {
  %2 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 1, i32 1, i32 0, i32 0, i32 4
  %3 = load i32, i32* %2, align 8
  %4 = tail call i32 @NaClClose(i32 %3) #5
  store i32 -1, i32* %2, align 8
  %5 = getelementptr inbounds %struct.NaClRefCount, %struct.NaClRefCount* %0, i64 0, i32 0
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %5, align 8
  %6 = load void (%struct.NaClRefCount*)*, void (%struct.NaClRefCount*)** getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescVtbl, i64 0, i32 0, i32 0), align 8
  tail call void %6(%struct.NaClRefCount* %0) #5
  ret void
}

declare i64 @NaClDescMapNotImplemented(%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64) #2

declare i64 @NaClDescReadNotImplemented(%struct.NaClDesc*, i8*, i64) #2

declare i64 @NaClDescWriteNotImplemented(%struct.NaClDesc*, i8*, i64) #2

declare i64 @NaClDescSeekNotImplemented(%struct.NaClDesc*, i64, i32) #2

declare i64 @NaClDescPReadNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #2

declare i64 @NaClDescPWriteNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescConnCapFdFstat(%struct.NaClDesc* nocapture readnone, %struct.nacl_abi_stat* nocapture) #0 {
  %3 = bitcast %struct.nacl_abi_stat* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 104, i1 false)
  %4 = getelementptr inbounds %struct.nacl_abi_stat, %struct.nacl_abi_stat* %1, i64 0, i32 2
  store i32 74176, i32* %4, align 8
  ret i32 0
}

declare i32 @NaClDescFchdirNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFchmodNotImplemented(%struct.NaClDesc*, i32) #2

declare i32 @NaClDescFsyncNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFdatasyncNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFtruncateNotImplemented(%struct.NaClDesc*, i64) #2

declare i64 @NaClDescGetdentsNotImplemented(%struct.NaClDesc*, i8*, i64) #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescConnCapFdExternalizeSize(%struct.NaClDesc*, i64*, i64*) #0 {
  %4 = tail call i32 @NaClDescExternalizeSize(%struct.NaClDesc* %0, i64* %1, i64* %2) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %3
  %7 = load i64, i64* %2, align 8
  %8 = add i64 %7, 1
  store i64 %8, i64* %2, align 8
  br label %9

9:                                                ; preds = %3, %6
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescConnCapFdExternalize(%struct.NaClDesc*, %struct.NaClDescXferState*) #0 {
  %3 = tail call i32 @NaClDescExternalize(%struct.NaClDesc* %0, %struct.NaClDescXferState* %1) #5
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %12

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %7 = bitcast %struct.NaClDesc* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.NaClDescXferState, %struct.NaClDescXferState* %1, i64 0, i32 2
  %10 = load i32*, i32** %9, align 8
  %11 = getelementptr inbounds i32, i32* %10, i64 1
  store i32* %11, i32** %9, align 8
  store i32 %8, i32* %10, align 4
  br label %12

12:                                               ; preds = %2, %5
  ret i32 %3
}

declare i32 @NaClDescLockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescTryLockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescUnlockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescWaitNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*) #2

declare i32 @NaClDescTimedWaitAbsNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*) #2

declare i32 @NaClDescSignalNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescBroadcastNotImplemented(%struct.NaClDesc*) #2

declare i64 @NaClDescSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #2

declare i64 @NaClDescRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #2

declare i64 @NaClDescLowLevelSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #2

declare i64 @NaClDescLowLevelRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescConnCapFdConnectAddr(%struct.NaClDesc* nocapture readonly, %struct.NaClDesc** nocapture) #0 {
  %3 = alloca [2 x i32], align 4
  %4 = alloca [48 x i8], align 16
  %5 = alloca %struct.iovec, align 8
  %6 = alloca %struct.msghdr, align 8
  %7 = bitcast [2 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #5
  %8 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 0
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 1
  %10 = getelementptr inbounds [48 x i8], [48 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 48, i1 false)
  %11 = bitcast %struct.iovec* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #5
  %12 = bitcast %struct.msghdr* %6 to i8*
  %13 = bitcast %struct.iovec* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  store i32 -1, i32* %8, align 4
  store i32 -1, i32* %9, align 4
  %14 = call i32 @NaClSocketPair(i32* nonnull %8) #5
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %52

16:                                               ; preds = %2
  %17 = getelementptr inbounds %struct.iovec, %struct.iovec* %5, i64 0, i32 0
  %18 = getelementptr inbounds %struct.iovec, %struct.iovec* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i8** %17, align 8
  store i64 1, i64* %18, align 8
  %19 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 2
  store %struct.iovec* %5, %struct.iovec** %19, align 8
  %20 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 3
  store i64 1, i64* %20, align 8
  %21 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 0
  store i8* null, i8** %21, align 8
  %22 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 1
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 4
  store i8* %10, i8** %23, align 8
  %24 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 5
  %25 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %6, i64 0, i32 6
  store i32 0, i32* %25, align 8
  %26 = bitcast [48 x i8]* %4 to i64*
  store i64 20, i64* %26, align 16
  %27 = getelementptr inbounds [48 x i8], [48 x i8]* %4, i64 0, i64 8
  %28 = bitcast i8* %27 to i32*
  store i32 1, i32* %28, align 8
  %29 = getelementptr inbounds [48 x i8], [48 x i8]* %4, i64 0, i64 12
  %30 = bitcast i8* %29 to i32*
  store i32 1, i32* %30, align 4
  %31 = getelementptr inbounds [48 x i8], [48 x i8]* %4, i64 0, i64 16
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %8, align 4
  store i32 %33, i32* %32, align 16
  store i64 20, i64* %24, align 8
  %34 = getelementptr inbounds %struct.NaClDesc, %struct.NaClDesc* %0, i64 1
  %35 = bitcast %struct.NaClDesc* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = call i64 @sendmsg(i32 %36, %struct.msghdr* nonnull %6, i32 0) #5
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %52

40:                                               ; preds = %16
  %41 = load i32, i32* %8, align 4
  %42 = call i32 @NaClClose(i32 %41) #5
  store i32 -1, i32* %8, align 4
  %43 = call noalias i8* @malloc(i64 184) #5
  %44 = icmp eq i8* %43, null
  br i1 %44, label %52, label %45

45:                                               ; preds = %40
  %46 = bitcast i8* %43 to %struct.NaClDescImcDesc*
  %47 = load i32, i32* %9, align 4
  %48 = call i32 @NaClDescImcDescCtor(%struct.NaClDescImcDesc* nonnull %46, i32 %47) #5
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %45
  store i32 -1, i32* %9, align 4
  %51 = bitcast %struct.NaClDesc** %1 to i8**
  store i8* %43, i8** %51, align 8
  br label %52

52:                                               ; preds = %40, %45, %16, %2, %50
  %53 = phi i8* [ null, %50 ], [ null, %2 ], [ null, %16 ], [ %43, %45 ], [ null, %40 ]
  %54 = phi i32 [ 0, %50 ], [ -24, %2 ], [ -5, %16 ], [ -12, %45 ], [ -12, %40 ]
  %55 = load i32, i32* %8, align 4
  %56 = call i32 @NaClSafeCloseNaClHandle(i32 %55) #5
  %57 = load i32, i32* %9, align 4
  %58 = call i32 @NaClSafeCloseNaClHandle(i32 %57) #5
  call void @free(i8* %53) #5
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #5
  ret i32 %54
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @NaClDescConnCapFdAcceptConn(%struct.NaClDesc* nocapture readnone, %struct.NaClDesc** nocapture readnone) #0 {
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #5
  ret i32 -22
}

declare i32 @NaClDescPostNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescSemWaitNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescGetValueNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescSetMetadata(%struct.NaClDesc*, i32, i32, i8*) #2

declare i32 @NaClDescGetMetadata(%struct.NaClDesc*, i32*, i8*) #2

declare void @NaClDescSetFlags(%struct.NaClDesc*, i32) #2

declare i32 @NaClDescGetFlags(%struct.NaClDesc*) #2

declare i32 @NaClDescIsattyNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClClose(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @NaClDescExternalizeSize(%struct.NaClDesc*, i64*, i64*) local_unnamed_addr #2

declare i32 @NaClDescExternalize(%struct.NaClDesc*, %struct.NaClDescXferState*) local_unnamed_addr #2

declare i32 @NaClSocketPair(i32*) local_unnamed_addr #2

declare i64 @sendmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #2

declare i32 @NaClDescImcDescCtor(%struct.NaClDescImcDesc*, i32) local_unnamed_addr #2

declare i32 @NaClSafeCloseNaClHandle(i32) local_unnamed_addr #2

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
