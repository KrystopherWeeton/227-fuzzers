; ModuleID = '../../net/quic/quic_connectivity_probing_manager.cc'
source_filename = "../../net/quic/quic_connectivity_probing_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::QuicConnectivityProbingManager" = type { %"class.net::QuicChromiumPacketWriter::Delegate", %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::NetLogWithSource", i8, i64, %"class.quic::QuicSocketAddress", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.44", i64, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::OneShotTimer", %"class.base::SequencedTaskRunner"*, %"class.net::IPEndPoint", i8, %"class.base::WeakPtrFactory.52" }
%"class.net::QuicChromiumPacketWriter::Delegate" = type { i32 (...)** }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.1" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.3" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.quic::QuicSocketAddress" = type <{ %"class.quic::QuicIpAddress", i16, [2 x i8] }>
%"class.quic::QuicIpAddress" = type { %union.anon, i32 }
%union.anon = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.8 }
%union.anon.8 = type { [4 x i32] }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.net::DatagramClientSocket"* }
%"class.net::DatagramClientSocket" = type { %"class.net::DatagramSocket", %"class.net::Socket" }
%"class.net::DatagramSocket" = type { i32 (...)** }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector.11" }
%"class.std::__1::vector.11" = type { %"class.std::__1::__vector_base.12" }
%"class.std::__1::__vector_base.12" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.15 }
%union.anon.15 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.net::QuicChromiumPacketWriter"* }
%"class.net::QuicChromiumPacketWriter" = type { %"class.quic::QuicPacketWriter", %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter::Delegate"*, %class.scoped_refptr, i8, i8, i32, %"class.base::OneShotTimer", %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.40" }
%"class.quic::QuicPacketWriter" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"* }
%"class.net::QuicChromiumPacketWriter::ReusableIOBuffer" = type { %"class.net::IOBuffer", i64, i64 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.38 }
%class.scoped_refptr.38 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.39", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.40" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.31 }
%class.scoped_refptr.31 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.32", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.32" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.33" }
%"struct.std::__1::atomic.33" = type { %"struct.std::__1::__atomic_base.34" }
%"struct.std::__1::__atomic_base.34" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl.36" }
%"struct.std::__1::__cxx_atomic_impl.36" = type { %"struct.std::__1::__cxx_atomic_base_impl.37" }
%"struct.std::__1::__cxx_atomic_base_impl.37" = type { i8 }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.net::QuicChromiumPacketReader"* }
%"class.net::QuicChromiumPacketReader" = type { i32 (...)**, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketReader::Visitor"*, i8, i32, %"class.quic::QuicClock"*, i32, %"class.quic::QuicTime::Delta", %"class.quic::QuicTime", %class.scoped_refptr.47, %"class.net::NetLogWithSource", %"class.base::WeakPtrFactory.48" }
%"class.net::QuicChromiumPacketReader::Visitor" = type { i32 (...)** }
%"class.quic::QuicClock" = type { i32 (...)**, i8, %"class.quic::QuicTime::Delta" }
%"class.quic::QuicTime::Delta" = type { i64 }
%"class.quic::QuicTime" = type { i64 }
%class.scoped_refptr.47 = type { %"class.net::IOBufferWithSize"* }
%"class.net::IOBufferWithSize" = type <{ %"class.net::IOBuffer", i32, [4 x i8] }>
%"class.base::WeakPtrFactory.48" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.29, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.29 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.base::WeakPtrFactory.52" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.net::QuicConnectivityProbingManager::Delegate" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.30" }>
%"class.base::RefCountedThreadSafe.30" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.69" }
%"union.absl::variant_internal::DestructibleUnionImpl.69" = type { %"union.absl::variant_internal::DestructibleUnionImpl.70" }
%"union.absl::variant_internal::DestructibleUnionImpl.70" = type { %"union.absl::variant_internal::DestructibleUnionImpl.71" }
%"union.absl::variant_internal::DestructibleUnionImpl.71" = type { %"union.absl::variant_internal::DestructibleUnionImpl.72" }
%"union.absl::variant_internal::DestructibleUnionImpl.72" = type { %"class.std::__1::basic_string" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.59", [4 x i8] }>
%"struct.std::__1::atomic.59" = type { %"struct.std::__1::__atomic_base.60" }
%"struct.std::__1::__atomic_base.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__cxx_atomic_impl.62" }
%"struct.std::__1::__cxx_atomic_impl.62" = type { %"struct.std::__1::__cxx_atomic_base_impl.63" }
%"struct.std::__1::__cxx_atomic_base_impl.63" = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.53 }
%class.scoped_refptr.53 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.30", [4 x i8] }>
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.sockaddr = type { i16, [14 x i8] }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE = comdat any

@_ZTVN3net30QuicConnectivityProbingManagerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.net::QuicConnectivityProbingManager"*, i32, %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"*)* @_ZN3net30QuicConnectivityProbingManager16HandleWriteErrorEi13scoped_refptrINS_24QuicChromiumPacketWriter16ReusableIOBufferEE to i8*), i8* bitcast (void (%"class.net::QuicConnectivityProbingManager"*, i32)* @_ZN3net30QuicConnectivityProbingManager12OnWriteErrorEi to i8*), i8* bitcast (void (%"class.net::QuicConnectivityProbingManager"*)* @_ZN3net30QuicConnectivityProbingManager16OnWriteUnblockedEv to i8*)] }, align 8
@_ZN3net21NetworkChangeNotifier21kInvalidNetworkHandleE = external local_unnamed_addr constant i64, align 8
@.str = private unnamed_addr constant [17 x i8] c"HandleWriteError\00", align 1
@.str.1 = private unnamed_addr constant [52 x i8] c"../../net/quic/quic_connectivity_probing_manager.cc\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"Net.QuicSession.StatelessResetDuringProbing\00", align 1
@.str.3 = private unnamed_addr constant [46 x i8] c"Net.QuicSession.ProbingRetryCountUntilSuccess\00", align 1
@.str.4 = private unnamed_addr constant [54 x i8] c"Net.QuicSession.ProbingTimeInMillisecondsUntilSuccess\00", align 1
@.str.5 = private unnamed_addr constant [52 x i8] c"Net.QuicSession.StatelessResetAfterProbingCancelled\00", align 1
@.str.6 = private unnamed_addr constant [11 x i8] c"sent_count\00", align 1
@.str.7 = private unnamed_addr constant [30 x i8] c"SendConnectivityProbingPacket\00", align 1
@.str.10 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"network\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"peer address\00", align 1
@.str.14 = private unnamed_addr constant [19 x i8] c"initial_timeout_ms\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"self address\00", align 1
@_ZZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net30QuicConnectivityProbingManager16OnPacketReceivedERKN4quic17QuicSocketAddressES4_bE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net30QuicConnectivityProbingManager16OnPacketReceivedERKN4quic17QuicSocketAddressES4_bE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN3net30QuicConnectivityProbingManager22ValidateStatelessResetERKN4quic17QuicSocketAddressES4_E24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN3net30QuicConnectivityProbingManagerC1EPNS0_8DelegateEPN4base19SequencedTaskRunnerE = hidden unnamed_addr alias void (%"class.net::QuicConnectivityProbingManager"*, %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.base::SequencedTaskRunner"*), void (%"class.net::QuicConnectivityProbingManager"*, %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.base::SequencedTaskRunner"*)* @_ZN3net30QuicConnectivityProbingManagerC2EPNS0_8DelegateEPN4base19SequencedTaskRunnerE
@_ZN3net30QuicConnectivityProbingManagerD1Ev = hidden unnamed_addr alias void (%"class.net::QuicConnectivityProbingManager"*), void (%"class.net::QuicConnectivityProbingManager"*)* @_ZN3net30QuicConnectivityProbingManagerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30QuicConnectivityProbingManagerC2EPNS0_8DelegateEPN4base19SequencedTaskRunnerE(%"class.net::QuicConnectivityProbingManager"*, %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net30QuicConnectivityProbingManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 1
  store %"class.net::QuicConnectivityProbingManager::Delegate"* %1, %"class.net::QuicConnectivityProbingManager::Delegate"** %5, align 8
  %6 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 2
  tail call void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"* %6) #8
  %7 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 3
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %9 = load i64, i64* @_ZN3net21NetworkChangeNotifier21kInvalidNetworkHandleE, align 8
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4quic13QuicIpAddressC1Ev(%"class.quic::QuicIpAddress"* %10) #8
  %11 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5, i32 1
  store i16 0, i16* %11, align 4
  %12 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 12
  %14 = bitcast %"class.std::__1::unique_ptr"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 48, i1 false)
  tail call void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"* %13) #8
  %15 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 13
  store %"class.base::SequencedTaskRunner"* %2, %"class.base::SequencedTaskRunner"** %15, align 8
  %16 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 14
  tail call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* %16) #8
  %17 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 15
  store i8 0, i8* %17, align 4
  %18 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 16, i32 0
  %19 = ptrtoint %"class.net::QuicConnectivityProbingManager"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %18, i64 %19) #8
  %20 = getelementptr inbounds %"class.base::OneShotTimer", %"class.base::OneShotTimer"* %13, i64 0, i32 0
  %21 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %15, align 8
  %22 = icmp eq %"class.base::SequencedTaskRunner"* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %21, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = atomicrmw add i32* %24, i32 1 monotonic
  br label %26

26:                                               ; preds = %3, %23
  tail call void @_ZN4base8internal9TimerBase13SetTaskRunnerE13scoped_refptrINS_19SequencedTaskRunnerEE(%"class.base::internal::TimerBase"* %20, %"class.base::SequencedTaskRunner"* %21) #8
  ret void
}

declare void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #1

declare void @_ZN4base12OneShotTimerC1Ev(%"class.base::OneShotTimer"*) unnamed_addr #1

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #1

declare void @_ZN4base8internal9TimerBase13SetTaskRunnerE13scoped_refptrINS_19SequencedTaskRunnerEE(%"class.base::internal::TimerBase"*, %"class.base::SequencedTaskRunner"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30QuicConnectivityProbingManagerD2Ev(%"class.net::QuicConnectivityProbingManager"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3net30QuicConnectivityProbingManagerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEv(%"class.net::QuicConnectivityProbingManager"* %0)
  %3 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 16, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #8
  %4 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 14
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %4) #8
  %5 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 12
  tail call void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"* %5) #8
  %6 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %7 = load %"class.net::QuicChromiumPacketReader"*, %"class.net::QuicChromiumPacketReader"** %6, align 8
  store %"class.net::QuicChromiumPacketReader"* null, %"class.net::QuicChromiumPacketReader"** %6, align 8
  %8 = icmp eq %"class.net::QuicChromiumPacketReader"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %1
  %10 = bitcast %"class.net::QuicChromiumPacketReader"* %7 to void (%"class.net::QuicChromiumPacketReader"*)***
  %11 = load void (%"class.net::QuicChromiumPacketReader"*)**, void (%"class.net::QuicChromiumPacketReader"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %11, i64 1
  %13 = load void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %12, align 8
  tail call void %13(%"class.net::QuicChromiumPacketReader"* nonnull %7) #8
  br label %14

14:                                               ; preds = %1, %9
  %15 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %16 = load %"class.net::QuicChromiumPacketWriter"*, %"class.net::QuicChromiumPacketWriter"** %15, align 8
  store %"class.net::QuicChromiumPacketWriter"* null, %"class.net::QuicChromiumPacketWriter"** %15, align 8
  %17 = icmp eq %"class.net::QuicChromiumPacketWriter"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.net::QuicChromiumPacketWriter"* %16 to void (%"class.net::QuicChromiumPacketWriter"*)***
  %20 = load void (%"class.net::QuicChromiumPacketWriter"*)**, void (%"class.net::QuicChromiumPacketWriter"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.net::QuicChromiumPacketWriter"*)*, void (%"class.net::QuicChromiumPacketWriter"*)** %20, i64 1
  %22 = load void (%"class.net::QuicChromiumPacketWriter"*)*, void (%"class.net::QuicChromiumPacketWriter"*)** %21, align 8
  tail call void %22(%"class.net::QuicChromiumPacketWriter"* nonnull %16) #8
  br label %23

23:                                               ; preds = %14, %18
  %24 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %25 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %24, align 8
  store %"class.net::DatagramClientSocket"* null, %"class.net::DatagramClientSocket"** %24, align 8
  %26 = icmp eq %"class.net::DatagramClientSocket"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.net::DatagramClientSocket"* %25 to void (%"class.net::DatagramClientSocket"*)***
  %29 = load void (%"class.net::DatagramClientSocket"*)**, void (%"class.net::DatagramClientSocket"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %29, i64 1
  %31 = load void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %30, align 8
  tail call void %31(%"class.net::DatagramClientSocket"* nonnull %25) #8
  br label %32

32:                                               ; preds = %23, %27
  %33 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 2
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %33) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEv(%"class.net::QuicConnectivityProbingManager"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::DictionaryValue", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::Value", align 8
  %6 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 3
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %70, label %9

9:                                                ; preds = %1
  %10 = load atomic i64, i64* @_ZZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %11 = inttoptr i64 %10 to %"class.base::HistogramBase"*
  %12 = icmp eq i64 %10, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i32 1) #8
  %15 = ptrtoint %"class.base::HistogramBase"* %14 to i64
  store atomic i64 %15, i64* @_ZZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %16

16:                                               ; preds = %9, %13
  %17 = phi %"class.base::HistogramBase"* [ %11, %9 ], [ %14, %13 ]
  %18 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 15
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp ne i8 %19, 0
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %17, i1 zeroext %20) #8
  %21 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 2, i32 1
  %22 = load %"class.net::NetLog"*, %"class.net::NetLog"** %21, align 8
  %23 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 2, i32 0
  %24 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %22, i64 0, i32 3
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %70, label %27, !prof !3

27:                                               ; preds = %16
  %28 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #8
  %29 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %30 = load i64, i64* %29, align 8, !noalias !4
  %31 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5
  %32 = bitcast %"class.base::DictionaryValue"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #8, !noalias !7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 32, i1 false) #8, !noalias !7
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %2) #8, !noalias !7
  %33 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #8, !noalias !7
  call void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* nonnull sret %3, i64 %30) #8, !noalias !7
  %34 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1, !noalias !7
  %37 = icmp slt i8 %36, 0
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8, !noalias !7
  %40 = select i1 %37, i8* %39, i8* %33
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %42 = load i64, i64* %41, align 8, !noalias !7
  %43 = zext i8 %36 to i64
  %44 = select i1 %37, i64 %42, i64 %43
  %45 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i64 7, i8* %40, i64 %44) #8, !noalias !7
  %46 = load i8, i8* %35, align 1, !noalias !7
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %27
  %49 = load i8*, i8** %38, align 8, !noalias !7
  call void @_ZdlPv(i8* %49) #9
  br label %50

50:                                               ; preds = %48, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8, !noalias !7
  %51 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #8, !noalias !7
  call void @_ZNK4quic17QuicSocketAddress8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %4, %"class.quic::QuicSocketAddress"* %31) #8, !noalias !7
  %52 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1, !noalias !7
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8, !noalias !7
  %58 = select i1 %55, i8* %57, i8* %51
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8, !noalias !7
  %61 = zext i8 %54 to i64
  %62 = select i1 %55, i64 %60, i64 %61
  %63 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i64 12, i8* %58, i64 %62) #8, !noalias !7
  %64 = load i8, i8* %53, align 1, !noalias !7
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %50
  %67 = load i8*, i8** %56, align 8, !noalias !7
  call void @_ZdlPv(i8* %67) #9
  br label %68

68:                                               ; preds = %66, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #8, !noalias !7
  %69 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %2, i64 0, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %5, %"class.base::Value"* nonnull dereferenceable(32) %69) #8
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %69) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #8, !noalias !7
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %22, i32 330, %"struct.net::NetLogSource"* dereferenceable(16) %23, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %5) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #8
  br label %70

70:                                               ; preds = %68, %16, %1
  store i8 0, i8* %6, align 8
  %71 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %72 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %71, align 8
  %73 = icmp eq %"class.net::DatagramClientSocket"* %72, null
  br i1 %73, label %84, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %72, i64 0, i32 0
  %76 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 14
  %77 = bitcast %"class.net::DatagramClientSocket"* %72 to i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)***
  %78 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*** %77, align 8
  %79 = getelementptr inbounds i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %78, i64 4
  %80 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %79, align 8
  %81 = call i32 %80(%"class.net::DatagramSocket"* %75, %"class.net::IPEndPoint"* %76) #8
  %82 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %71, align 8
  %83 = bitcast %"class.net::DatagramClientSocket"* %82 to void (%"class.net::DatagramClientSocket"*)***
  br label %84

84:                                               ; preds = %70, %74
  %85 = phi void (%"class.net::DatagramClientSocket"*)*** [ %83, %74 ], [ null, %70 ]
  %86 = phi %"class.net::DatagramClientSocket"* [ %82, %74 ], [ null, %70 ]
  %87 = load i64, i64* @_ZN3net21NetworkChangeNotifier21kInvalidNetworkHandleE, align 8
  %88 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 15
  store i8 0, i8* %89, align 4
  store %"class.net::DatagramClientSocket"* null, %"class.net::DatagramClientSocket"** %71, align 8
  %90 = icmp eq %"class.net::DatagramClientSocket"* %86, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %84
  %92 = load void (%"class.net::DatagramClientSocket"*)**, void (%"class.net::DatagramClientSocket"*)*** %85, align 8
  %93 = getelementptr inbounds void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %92, i64 1
  %94 = load void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %93, align 8
  call void %94(%"class.net::DatagramClientSocket"* nonnull %86) #8
  br label %95

95:                                               ; preds = %84, %91
  %96 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %97 = load %"class.net::QuicChromiumPacketWriter"*, %"class.net::QuicChromiumPacketWriter"** %96, align 8
  store %"class.net::QuicChromiumPacketWriter"* null, %"class.net::QuicChromiumPacketWriter"** %96, align 8
  %98 = icmp eq %"class.net::QuicChromiumPacketWriter"* %97, null
  br i1 %98, label %104, label %99

99:                                               ; preds = %95
  %100 = bitcast %"class.net::QuicChromiumPacketWriter"* %97 to void (%"class.net::QuicChromiumPacketWriter"*)***
  %101 = load void (%"class.net::QuicChromiumPacketWriter"*)**, void (%"class.net::QuicChromiumPacketWriter"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.net::QuicChromiumPacketWriter"*)*, void (%"class.net::QuicChromiumPacketWriter"*)** %101, i64 1
  %103 = load void (%"class.net::QuicChromiumPacketWriter"*)*, void (%"class.net::QuicChromiumPacketWriter"*)** %102, align 8
  call void %103(%"class.net::QuicChromiumPacketWriter"* nonnull %97) #8
  br label %104

104:                                              ; preds = %95, %99
  %105 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %106 = load %"class.net::QuicChromiumPacketReader"*, %"class.net::QuicChromiumPacketReader"** %105, align 8
  store %"class.net::QuicChromiumPacketReader"* null, %"class.net::QuicChromiumPacketReader"** %105, align 8
  %107 = icmp eq %"class.net::QuicChromiumPacketReader"* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %104
  %109 = bitcast %"class.net::QuicChromiumPacketReader"* %106 to void (%"class.net::QuicChromiumPacketReader"*)***
  %110 = load void (%"class.net::QuicChromiumPacketReader"*)**, void (%"class.net::QuicChromiumPacketReader"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %110, i64 1
  %112 = load void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %111, align 8
  call void %112(%"class.net::QuicChromiumPacketReader"* nonnull %106) #8
  br label %113

113:                                              ; preds = %104, %108
  %114 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 9
  %115 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 12, i32 0
  %116 = bitcast i64* %114 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false)
  call void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"* %115) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base12OneShotTimerD1Ev(%"class.base::OneShotTimer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net30QuicConnectivityProbingManager16HandleWriteErrorEi13scoped_refptrINS_24QuicChromiumPacketWriter16ReusableIOBufferEE(%"class.net::QuicConnectivityProbingManager"*, i32 returned, %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::Location", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::WeakPtr", align 8
  %8 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 13
  %9 = bitcast %"class.base::SequencedTaskRunner"** %8 to %"class.base::TaskRunner"**
  %10 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %9, align 8
  %11 = bitcast %"class.base::Location"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i32 81) #8
  %12 = bitcast %"class.base::WeakPtr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %13 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #8, !noalias !10
  %14 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 16, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %14) #8, !noalias !10
  %15 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 16, i32 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !10
  %17 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %17, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %16) #8
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #8, !noalias !10
  %18 = call i8* @_Znwm(i64 64) #9, !noalias !13
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #8, !noalias !13
  %20 = getelementptr inbounds i8, i8* %18, i64 32
  %21 = bitcast i8* %20 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::QuicConnectivityProbingManager"*)* @_ZN3net30QuicConnectivityProbingManager25NotifyDelegateProbeFailedEv to i64), i64 0>, <2 x i64>* %21, align 8, !noalias !13
  %22 = getelementptr inbounds i8, i8* %18, i64 48
  %23 = bitcast i8* %22 to %"class.base::internal::WeakReference"*
  %24 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %23, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %24) #8, !noalias !13
  %25 = getelementptr inbounds i8, i8* %18, i64 56
  %26 = bitcast i8* %25 to i64*
  %27 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %7, i64 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8, !noalias !13
  store i64 %28, i64* %26, align 8, !noalias !13
  %29 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %18, i8** %29, align 8, !alias.scope !13
  %30 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %10, %"class.base::Location"* nonnull dereferenceable(32) %5, %"class.base::OnceCallback"* nonnull %6) #8
  %31 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #8
  %32 = icmp eq %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"* %2, null
  br i1 %32, label %45, label %33

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer", %"class.net::QuicChromiumPacketWriter::ReusableIOBuffer"* %2, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw sub i32* %35, i32 1 acq_rel
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %38, label %45

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %34, i64 -2
  %40 = bitcast %"class.base::RefCountedThreadSafe"* %39 to %"class.net::IOBuffer"*
  %41 = bitcast %"class.base::RefCountedThreadSafe"* %39 to void (%"class.net::IOBuffer"*)***
  %42 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %42, i64 1
  %44 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %43, align 8
  call void %44(%"class.net::IOBuffer"* nonnull %40) #8
  br label %45

45:                                               ; preds = %3, %33, %38
  ret i32 %1
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30QuicConnectivityProbingManager25NotifyDelegateProbeFailedEv(%"class.net::QuicConnectivityProbingManager"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 1
  %7 = load %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicConnectivityProbingManager::Delegate"** %6, align 8
  %8 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5
  %11 = bitcast %"class.net::QuicConnectivityProbingManager::Delegate"* %7 to void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)***
  %12 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)**, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)** %12, i64 3
  %14 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)** %13, align 8
  tail call void %14(%"class.net::QuicConnectivityProbingManager::Delegate"* %7, i64 %9, %"class.quic::QuicSocketAddress"* dereferenceable(24) %10) #8
  tail call void @_ZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEv(%"class.net::QuicConnectivityProbingManager"* %0)
  br label %15

15:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30QuicConnectivityProbingManager12OnWriteErrorEi(%"class.net::QuicConnectivityProbingManager"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 1
  %8 = load %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicConnectivityProbingManager::Delegate"** %7, align 8
  %9 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5
  %12 = bitcast %"class.net::QuicConnectivityProbingManager::Delegate"* %8 to void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)***
  %13 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)**, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)** %13, i64 3
  %15 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)** %14, align 8
  tail call void %15(%"class.net::QuicConnectivityProbingManager::Delegate"* %8, i64 %10, %"class.quic::QuicSocketAddress"* dereferenceable(24) %11) #8
  tail call void @_ZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEv(%"class.net::QuicConnectivityProbingManager"* %0) #8
  br label %16

16:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net30QuicConnectivityProbingManager16OnWriteUnblockedEv(%"class.net::QuicConnectivityProbingManager"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30QuicConnectivityProbingManager13CancelProbingElRKN4quic17QuicSocketAddressE(%"class.net::QuicConnectivityProbingManager"*, i64, %"class.quic::QuicSocketAddress"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, %1
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5
  %13 = tail call zeroext i1 @_ZN4quiceqERKNS_17QuicSocketAddressES2_(%"class.quic::QuicSocketAddress"* dereferenceable(24) %2, %"class.quic::QuicSocketAddress"* dereferenceable(24) %12) #8
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void @_ZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEv(%"class.net::QuicConnectivityProbingManager"* %0)
  br label %15

15:                                               ; preds = %3, %14, %11, %7
  ret void
}

declare zeroext i1 @_ZN4quiceqERKNS_17QuicSocketAddressES2_(%"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN4base8internal9TimerBase4StopEv(%"class.base::internal::TimerBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30QuicConnectivityProbingManager12StartProbingElRKN4quic17QuicSocketAddressENSt3__110unique_ptrINS_20DatagramClientSocketENS5_14default_deleteIS7_EEEENS6_INS_24QuicChromiumPacketWriterENS8_ISB_EEEENS6_INS_24QuicChromiumPacketReaderENS8_ISE_EEEEN4base9TimeDeltaERKNS_16NetLogWithSourceE(%"class.net::QuicConnectivityProbingManager"*, i64, %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter"*, %"class.net::QuicChromiumPacketReader"*, i64, %"class.net::NetLogWithSource"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.base::TimeDelta", align 8
  %10 = alloca %"class.base::DictionaryValue", align 8
  %11 = alloca %"class.base::Value", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.base::Value", align 8
  %14 = alloca %"class.base::Value", align 8
  %15 = ptrtoint %"class.net::DatagramClientSocket"* %3 to i64
  %16 = ptrtoint %"class.net::QuicChromiumPacketWriter"* %4 to i64
  %17 = ptrtoint %"class.net::QuicChromiumPacketReader"* %5 to i64
  %18 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 3
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, %1
  br i1 %24, label %25, label %28

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5
  %27 = tail call zeroext i1 @_ZN4quiceqERKNS_17QuicSocketAddressES2_(%"class.quic::QuicSocketAddress"* dereferenceable(24) %2, %"class.quic::QuicSocketAddress"* dereferenceable(24) %26) #8
  br i1 %27, label %114, label %28

28:                                               ; preds = %8, %21, %25
  tail call void @_ZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEv(%"class.net::QuicConnectivityProbingManager"* %0)
  store i8 1, i8* %18, align 8
  %29 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  store i64 %1, i64* %29, align 8
  %30 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5
  %31 = bitcast %"class.quic::QuicSocketAddress"* %30 to i8*
  %32 = bitcast %"class.quic::QuicSocketAddress"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 4 %32, i64 22, i1 false)
  %33 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 6
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %34, align 8
  %36 = bitcast %"class.std::__1::unique_ptr"* %33 to i64*
  store i64 %15, i64* %36, align 8
  %37 = icmp eq %"class.net::DatagramClientSocket"* %35, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %28
  %39 = bitcast %"class.net::DatagramClientSocket"* %35 to void (%"class.net::DatagramClientSocket"*)***
  %40 = load void (%"class.net::DatagramClientSocket"*)**, void (%"class.net::DatagramClientSocket"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %40, i64 1
  %42 = load void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %41, align 8
  tail call void %42(%"class.net::DatagramClientSocket"* nonnull %35) #8
  br label %43

43:                                               ; preds = %28, %38
  %44 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 7
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.25"* %44, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.net::QuicChromiumPacketWriter"*, %"class.net::QuicChromiumPacketWriter"** %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.25"* %44 to i64*
  store i64 %16, i64* %47, align 8
  %48 = icmp eq %"class.net::QuicChromiumPacketWriter"* %46, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.net::QuicChromiumPacketWriter"* %46 to void (%"class.net::QuicChromiumPacketWriter"*)***
  %51 = load void (%"class.net::QuicChromiumPacketWriter"*)**, void (%"class.net::QuicChromiumPacketWriter"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.net::QuicChromiumPacketWriter"*)*, void (%"class.net::QuicChromiumPacketWriter"*)** %51, i64 1
  %53 = load void (%"class.net::QuicChromiumPacketWriter"*)*, void (%"class.net::QuicChromiumPacketWriter"*)** %52, align 8
  tail call void %53(%"class.net::QuicChromiumPacketWriter"* nonnull %46) #8
  br label %54

54:                                               ; preds = %43, %49
  %55 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 2
  %56 = bitcast %"class.net::NetLogWithSource"* %55 to i8*
  %57 = bitcast %"class.net::NetLogWithSource"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false)
  %58 = tail call i64 @_ZN4base9TimeTicks3NowEv() #8
  %59 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 10, i32 0, i32 0
  store i64 %58, i64* %59, align 8
  %60 = load %"class.net::QuicChromiumPacketWriter"*, %"class.net::QuicChromiumPacketWriter"** %45, align 8
  %61 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 0
  %62 = getelementptr inbounds %"class.net::QuicChromiumPacketWriter", %"class.net::QuicChromiumPacketWriter"* %60, i64 0, i32 2
  store %"class.net::QuicChromiumPacketWriter::Delegate"* %61, %"class.net::QuicChromiumPacketWriter::Delegate"** %62, align 8
  %63 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 8
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.net::QuicChromiumPacketReader"*, %"class.net::QuicChromiumPacketReader"** %64, align 8
  %66 = bitcast %"class.std::__1::unique_ptr.44"* %63 to i64*
  store i64 %17, i64* %66, align 8
  %67 = icmp eq %"class.net::QuicChromiumPacketReader"* %65, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %54
  %69 = bitcast %"class.net::QuicChromiumPacketReader"* %65 to void (%"class.net::QuicChromiumPacketReader"*)***
  %70 = load void (%"class.net::QuicChromiumPacketReader"*)**, void (%"class.net::QuicChromiumPacketReader"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %70, i64 1
  %72 = load void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %71, align 8
  tail call void %72(%"class.net::QuicChromiumPacketReader"* nonnull %65) #8
  br label %73

73:                                               ; preds = %54, %68
  %74 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 11, i32 0
  store i64 %6, i64* %74, align 8
  %75 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 2, i32 1
  %76 = load %"class.net::NetLog"*, %"class.net::NetLog"** %75, align 8
  %77 = getelementptr inbounds %"class.net::NetLogWithSource", %"class.net::NetLogWithSource"* %55, i64 0, i32 0
  %78 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %76, i64 0, i32 3
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %111, label %81, !prof !3

81:                                               ; preds = %73
  %82 = bitcast %"class.base::Value"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %82) #8
  %83 = load i64, i64* %29, align 8, !noalias !18
  %84 = bitcast %"class.base::TimeDelta"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #8, !noalias !18
  %85 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %9, i64 0, i32 0
  store i64 %6, i64* %85, align 8, !noalias !21
  %86 = bitcast %"class.base::DictionaryValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %86) #8, !noalias !21
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %86, i8 -86, i64 32, i1 false) #8, !noalias !21
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %10) #8, !noalias !21
  %87 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %10, i64 0, i32 0
  %88 = bitcast %"class.base::Value"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %88) #8, !noalias !21
  call void @_ZN3net17NetLogNumberValueEl(%"class.base::Value"* nonnull sret %11, i64 %83) #8, !noalias !21
  %89 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %87, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %11) #8, !noalias !21
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %11) #8, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %88) #8, !noalias !21
  %90 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #8, !noalias !21
  call void @_ZNK4quic17QuicSocketAddress8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %12, %"class.quic::QuicSocketAddress"* %30) #8, !noalias !21
  %91 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1, !noalias !21
  %94 = icmp slt i8 %93, 0
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8, !noalias !21
  %97 = select i1 %94, i8* %96, i8* %90
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = load i64, i64* %98, align 8, !noalias !21
  %100 = zext i8 %93 to i64
  %101 = select i1 %94, i64 %99, i64 %100
  %102 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %10, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i64 12, i8* %97, i64 %101) #8, !noalias !21
  %103 = load i8, i8* %92, align 1, !noalias !21
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %81
  %106 = load i8*, i8** %95, align 8, !noalias !21
  call void @_ZdlPv(i8* %106) #9
  br label %107

107:                                              ; preds = %105, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #8, !noalias !21
  %108 = bitcast %"class.base::Value"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #8, !noalias !21
  %109 = call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* nonnull %9) #8, !noalias !21
  call void @_ZN3net17NetLogNumberValueEl(%"class.base::Value"* nonnull sret %13, i64 %109) #8, !noalias !21
  %110 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %87, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.14, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %13) #8, !noalias !21
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %13) #8, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #8, !noalias !21
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* nonnull %14, %"class.base::Value"* nonnull dereferenceable(32) %87) #8
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %87) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %86) #8, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #8, !noalias !18
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %76, i32 329, %"struct.net::NetLogSource"* dereferenceable(16) %77, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %14) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %82) #8
  br label %111

111:                                              ; preds = %107, %73
  %112 = load %"class.net::QuicChromiumPacketReader"*, %"class.net::QuicChromiumPacketReader"** %64, align 8
  call void @_ZN3net24QuicChromiumPacketReader12StartReadingEv(%"class.net::QuicChromiumPacketReader"* %112) #8
  %113 = load i64, i64* %74, align 8
  call void @_ZN3net30QuicConnectivityProbingManager29SendConnectivityProbingPacketEN4base9TimeDeltaE(%"class.net::QuicConnectivityProbingManager"* %0, i64 %113)
  br label %135

114:                                              ; preds = %25
  %115 = icmp eq %"class.net::QuicChromiumPacketReader"* %5, null
  br i1 %115, label %121, label %116

116:                                              ; preds = %114
  %117 = bitcast %"class.net::QuicChromiumPacketReader"* %5 to void (%"class.net::QuicChromiumPacketReader"*)***
  %118 = load void (%"class.net::QuicChromiumPacketReader"*)**, void (%"class.net::QuicChromiumPacketReader"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %118, i64 1
  %120 = load void (%"class.net::QuicChromiumPacketReader"*)*, void (%"class.net::QuicChromiumPacketReader"*)** %119, align 8
  tail call void %120(%"class.net::QuicChromiumPacketReader"* nonnull %5) #8
  br label %121

121:                                              ; preds = %114, %116
  %122 = icmp eq %"class.net::QuicChromiumPacketWriter"* %4, null
  br i1 %122, label %128, label %123

123:                                              ; preds = %121
  %124 = bitcast %"class.net::QuicChromiumPacketWriter"* %4 to void (%"class.net::QuicChromiumPacketWriter"*)***
  %125 = load void (%"class.net::QuicChromiumPacketWriter"*)**, void (%"class.net::QuicChromiumPacketWriter"*)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.net::QuicChromiumPacketWriter"*)*, void (%"class.net::QuicChromiumPacketWriter"*)** %125, i64 1
  %127 = load void (%"class.net::QuicChromiumPacketWriter"*)*, void (%"class.net::QuicChromiumPacketWriter"*)** %126, align 8
  tail call void %127(%"class.net::QuicChromiumPacketWriter"* nonnull %4) #8
  br label %128

128:                                              ; preds = %121, %123
  %129 = icmp eq %"class.net::DatagramClientSocket"* %3, null
  br i1 %129, label %135, label %130

130:                                              ; preds = %128
  %131 = bitcast %"class.net::DatagramClientSocket"* %3 to void (%"class.net::DatagramClientSocket"*)***
  %132 = load void (%"class.net::DatagramClientSocket"*)**, void (%"class.net::DatagramClientSocket"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %132, i64 1
  %134 = load void (%"class.net::DatagramClientSocket"*)*, void (%"class.net::DatagramClientSocket"*)** %133, align 8
  tail call void %134(%"class.net::DatagramClientSocket"* nonnull %3) #8
  br label %135

135:                                              ; preds = %111, %128, %130
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare void @_ZN3net24QuicChromiumPacketReader12StartReadingEv(%"class.net::QuicChromiumPacketReader"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30QuicConnectivityProbingManager29SendConnectivityProbingPacketEN4base9TimeDeltaE(%"class.net::QuicConnectivityProbingManager"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 9
  %9 = load i64, i64* %8, align 8
  tail call void @_ZNK3net16NetLogWithSource23AddEventWithInt64ParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEl(%"class.net::NetLogWithSource"* %7, i32 331, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.6, i64 0, i64 0), i64 10, i64 %9) #8
  %10 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 1
  %11 = load %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicConnectivityProbingManager::Delegate"** %10, align 8
  %12 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %13 = load %"class.net::QuicChromiumPacketWriter"*, %"class.net::QuicChromiumPacketWriter"** %12, align 8
  %14 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5
  %15 = bitcast %"class.net::QuicConnectivityProbingManager::Delegate"* %11 to i1 (%"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicChromiumPacketWriter"*, %"class.quic::QuicSocketAddress"*)***
  %16 = load i1 (%"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicChromiumPacketWriter"*, %"class.quic::QuicSocketAddress"*)**, i1 (%"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicChromiumPacketWriter"*, %"class.quic::QuicSocketAddress"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicChromiumPacketWriter"*, %"class.quic::QuicSocketAddress"*)*, i1 (%"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicChromiumPacketWriter"*, %"class.quic::QuicSocketAddress"*)** %16, i64 4
  %18 = load i1 (%"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicChromiumPacketWriter"*, %"class.quic::QuicSocketAddress"*)*, i1 (%"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicChromiumPacketWriter"*, %"class.quic::QuicSocketAddress"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.net::QuicConnectivityProbingManager::Delegate"* %11, %"class.net::QuicChromiumPacketWriter"* %13, %"class.quic::QuicSocketAddress"* dereferenceable(24) %14) #8
  br i1 %19, label %32, label %20

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 3
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %54, label %24

24:                                               ; preds = %20
  %25 = load %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicConnectivityProbingManager::Delegate"** %10, align 8
  %26 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.net::QuicConnectivityProbingManager::Delegate"* %25 to void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)***
  %29 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)**, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)** %29, i64 3
  %31 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)** %30, align 8
  tail call void %31(%"class.net::QuicConnectivityProbingManager::Delegate"* %25, i64 %27, %"class.quic::QuicSocketAddress"* dereferenceable(24) %14) #8
  tail call void @_ZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEv(%"class.net::QuicConnectivityProbingManager"* %0) #8
  br label %54

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 12
  %34 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #8
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1, i64 0, i64 0), i32 256) #8
  %35 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #8
  %36 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8, !noalias !24
  %37 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 16, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %37) #8, !noalias !24
  %38 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 16, i32 0, i32 1
  %39 = load i64, i64* %38, align 8, !noalias !24
  %40 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %40, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %39) #8
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8, !noalias !24
  %41 = call i8* @_Znwm(i64 64) #9, !noalias !27
  %42 = bitcast i8* %41 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %42, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE) #8, !noalias !27
  %43 = getelementptr inbounds i8, i8* %41, i64 32
  %44 = bitcast i8* %43 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::QuicConnectivityProbingManager"*)* @_ZN3net30QuicConnectivityProbingManager36MaybeResendConnectivityProbingPacketEv to i64), i64 0>, <2 x i64>* %44, align 8, !noalias !27
  %45 = getelementptr inbounds i8, i8* %41, i64 48
  %46 = bitcast i8* %45 to %"class.base::internal::WeakReference"*
  %47 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %46, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %47) #8, !noalias !27
  %48 = getelementptr inbounds i8, i8* %41, i64 56
  %49 = bitcast i8* %48 to i64*
  %50 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8, !noalias !27
  store i64 %51, i64* %49, align 8, !noalias !27
  %52 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %41, i8** %52, align 8, !alias.scope !27
  call void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"* %33, %"class.base::Location"* nonnull dereferenceable(32) %4, i64 %1, %"class.base::OnceCallback"* nonnull %5) #8
  %53 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %53) #8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %40) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #8
  br label %54

54:                                               ; preds = %24, %20, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30QuicConnectivityProbingManager16OnPacketReceivedERKN4quic17QuicSocketAddressES4_b(%"class.net::QuicConnectivityProbingManager"*, %"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::Value", align 8
  %6 = alloca %"class.net::IPEndPoint", align 2
  %7 = alloca %struct.sockaddr_storage, align 8
  %8 = alloca %"class.quic::QuicSocketAddress", align 8
  %9 = alloca %"class.net::IPEndPoint", align 2
  %10 = alloca %"class.net::IPEndPoint", align 2
  %11 = alloca %"class.base::TimeDelta", align 8
  %12 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %13 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %12, align 8
  %14 = icmp eq %"class.net::DatagramClientSocket"* %13, null
  br i1 %14, label %97, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %16) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %16, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %9) #8
  %17 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %12, align 8
  %18 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %17, i64 0, i32 0
  %19 = bitcast %"class.net::DatagramClientSocket"* %17 to i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)***
  %20 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %20, i64 4
  %22 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %21, align 8
  %23 = call i32 %22(%"class.net::DatagramSocket"* %18, %"class.net::IPEndPoint"* nonnull %9) #8
  %24 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %24) #8
  %25 = bitcast %"class.quic::QuicSocketAddress"* %1 to i8*
  %26 = bitcast %"class.quic::QuicSocketAddress"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 4 %25, i64 24, i1 false)
  %27 = call zeroext i1 @_ZNK4quic17QuicSocketAddress13IsInitializedEv(%"class.quic::QuicSocketAddress"* nonnull %8) #8, !noalias !32
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %10) #8
  br label %34

29:                                               ; preds = %15
  %30 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %30) #8, !noalias !32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %30, i8 -86, i64 20, i1 false) #8, !noalias !32
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %6) #8
  %31 = bitcast %struct.sockaddr_storage* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %31) #8, !noalias !32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 128, i1 false) #8, !noalias !32
  call void @_ZNK4quic17QuicSocketAddress15generic_addressEv(%struct.sockaddr_storage* nonnull sret %7, %"class.quic::QuicSocketAddress"* nonnull %8) #8
  %32 = bitcast %struct.sockaddr_storage* %7 to %struct.sockaddr*
  %33 = call zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"* nonnull %6, %struct.sockaddr* nonnull %32, i32 128) #8
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %10, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %31) #8, !noalias !32
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %30) #8, !noalias !32
  br label %34

34:                                               ; preds = %28, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26)
  %35 = call zeroext i1 @_ZNK3net10IPEndPointneERKS0_(%"class.net::IPEndPoint"* nonnull %9, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %10) #8
  br i1 %35, label %39, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5
  %38 = call zeroext i1 @_ZN4quicneERKNS_17QuicSocketAddressES2_(%"class.quic::QuicSocketAddress"* dereferenceable(24) %37, %"class.quic::QuicSocketAddress"* dereferenceable(24) %2) #8
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %24) #8
  br i1 %38, label %96, label %40

39:                                               ; preds = %34
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %24) #8
  br label %96

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 2, i32 1
  %42 = load %"class.net::NetLog"*, %"class.net::NetLog"** %41, align 8
  %43 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %42, i64 0, i32 3
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %51, label %46, !prof !3

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 2, i32 0
  %48 = bitcast %"class.base::Value"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %48) #8
  %49 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %50 = load i64, i64* %49, align 8, !noalias !35
  call fastcc void @_ZN3net12_GLOBAL__N_125NetLogProbeReceivedParamsElPKNS_10IPEndPointEPKN4quic17QuicSocketAddressE(%"class.base::Value"* nonnull sret %5, i64 %50, %"class.net::IPEndPoint"* nonnull %9, %"class.quic::QuicSocketAddress"* %37) #8
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %42, i32 332, %"struct.net::NetLogSource"* dereferenceable(16) %47, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %5) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %48) #8
  br label %51

51:                                               ; preds = %40, %46
  %52 = load atomic i64, i64* @_ZZN3net30QuicConnectivityProbingManager16OnPacketReceivedERKN4quic17QuicSocketAddressES4_bE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %53 = inttoptr i64 %52 to %"class.base::HistogramBase"*
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %51
  %56 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.3, i64 0, i64 0), i32 1, i32 100, i32 50, i32 1) #8
  %57 = ptrtoint %"class.base::HistogramBase"* %56 to i64
  store atomic i64 %57, i64* @_ZZN3net30QuicConnectivityProbingManager16OnPacketReceivedERKN4quic17QuicSocketAddressES4_bE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %58

58:                                               ; preds = %51, %55
  %59 = phi %"class.base::HistogramBase"* [ %53, %51 ], [ %56, %55 ]
  %60 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 9
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i32
  %63 = bitcast %"class.base::HistogramBase"* %59 to void (%"class.base::HistogramBase"*, i32)***
  %64 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %64, i64 6
  %66 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %65, align 8
  call void %66(%"class.base::HistogramBase"* %59, i32 %62) #8
  %67 = load atomic i64, i64* @_ZZN3net30QuicConnectivityProbingManager16OnPacketReceivedERKN4quic17QuicSocketAddressES4_bE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %68 = inttoptr i64 %67 to %"class.base::HistogramBase"*
  %69 = icmp eq i64 %67, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %58
  %71 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #8
  %72 = ptrtoint %"class.base::HistogramBase"* %71 to i64
  store atomic i64 %72, i64* @_ZZN3net30QuicConnectivityProbingManager16OnPacketReceivedERKN4quic17QuicSocketAddressES4_bE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %73

73:                                               ; preds = %58, %70
  %74 = phi %"class.base::HistogramBase"* [ %68, %58 ], [ %71, %70 ]
  %75 = bitcast %"class.base::TimeDelta"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #8
  %76 = call i64 @_ZN4base9TimeTicks3NowEv() #8
  %77 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 10, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = sub nsw i64 %76, %78
  %80 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %11, i64 0, i32 0
  store i64 %79, i64* %80, align 8
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %74, %"class.base::TimeDelta"* nonnull dereferenceable(8) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #8
  %81 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 1
  %82 = load %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicConnectivityProbingManager::Delegate"** %81, align 8
  %83 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %84 = load i64, i64* %83, align 8
  %85 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %12, align 8
  store %"class.net::DatagramClientSocket"* null, %"class.net::DatagramClientSocket"** %12, align 8
  %86 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %87 = load %"class.net::QuicChromiumPacketWriter"*, %"class.net::QuicChromiumPacketWriter"** %86, align 8
  store %"class.net::QuicChromiumPacketWriter"* null, %"class.net::QuicChromiumPacketWriter"** %86, align 8
  %88 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %88, i64 0, i32 0, i32 0, i32 0
  %90 = bitcast %"class.std::__1::unique_ptr.44"* %88 to i64*
  %91 = load i64, i64* %90, align 8
  store %"class.net::QuicChromiumPacketReader"* null, %"class.net::QuicChromiumPacketReader"** %89, align 8
  %92 = bitcast %"class.net::QuicConnectivityProbingManager::Delegate"* %82 to void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter"*, i64)***
  %93 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter"*, i64)**, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter"*, i64)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter"*, i64)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter"*, i64)** %93, i64 2
  %95 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter"*, i64)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*, %"class.quic::QuicSocketAddress"*, %"class.net::DatagramClientSocket"*, %"class.net::QuicChromiumPacketWriter"*, i64)** %94, align 8
  call void %95(%"class.net::QuicConnectivityProbingManager::Delegate"* %82, i64 %84, %"class.quic::QuicSocketAddress"* dereferenceable(24) %37, %"class.quic::QuicSocketAddress"* dereferenceable(24) %1, %"class.net::DatagramClientSocket"* %85, %"class.net::QuicChromiumPacketWriter"* %87, i64 %91) #8
  call void @_ZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEv(%"class.net::QuicConnectivityProbingManager"* %0)
  br label %96

96:                                               ; preds = %36, %39, %73
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %16) #8
  br label %97

97:                                               ; preds = %4, %96
  ret void
}

declare zeroext i1 @_ZNK3net10IPEndPointneERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #1

declare zeroext i1 @_ZN4quicneERKNS_17QuicSocketAddressES2_(%"class.quic::QuicSocketAddress"* dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net30QuicConnectivityProbingManager22ValidateStatelessResetERKN4quic17QuicSocketAddressES4_(%"class.net::QuicConnectivityProbingManager"*, %"class.quic::QuicSocketAddress"* nocapture readonly dereferenceable(24), %"class.quic::QuicSocketAddress"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::Value", align 8
  %5 = alloca %"class.net::IPEndPoint", align 2
  %6 = alloca %struct.sockaddr_storage, align 8
  %7 = alloca %"class.quic::QuicSocketAddress", align 8
  %8 = alloca %"class.net::IPEndPoint", align 2
  %9 = alloca %"class.net::IPEndPoint", align 2
  %10 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %10, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %8) #8
  %11 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %12 = load %"class.net::DatagramClientSocket"*, %"class.net::DatagramClientSocket"** %11, align 8
  %13 = icmp eq %"class.net::DatagramClientSocket"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %10, i8* align 2 %15, i64 20, i1 false)
  br label %23

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.net::DatagramClientSocket", %"class.net::DatagramClientSocket"* %12, i64 0, i32 0
  %18 = bitcast %"class.net::DatagramClientSocket"* %12 to i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)***
  %19 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)**, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %19, i64 4
  %21 = load i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)*, i32 (%"class.net::DatagramSocket"*, %"class.net::IPEndPoint"*)** %20, align 8
  %22 = call i32 %21(%"class.net::DatagramSocket"* %17, %"class.net::IPEndPoint"* nonnull %8) #8
  br label %23

23:                                               ; preds = %16, %14
  %24 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %24) #8
  %25 = bitcast %"class.quic::QuicSocketAddress"* %1 to i8*
  %26 = bitcast %"class.quic::QuicSocketAddress"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* align 4 %25, i64 24, i1 false)
  %27 = call zeroext i1 @_ZNK4quic17QuicSocketAddress13IsInitializedEv(%"class.quic::QuicSocketAddress"* nonnull %7) #8, !noalias !38
  br i1 %27, label %29, label %28

28:                                               ; preds = %23
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %9) #8
  br label %34

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %30) #8, !noalias !38
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %30, i8 -86, i64 20, i1 false) #8, !noalias !38
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %5) #8
  %31 = bitcast %struct.sockaddr_storage* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %31) #8, !noalias !38
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 128, i1 false) #8, !noalias !38
  call void @_ZNK4quic17QuicSocketAddress15generic_addressEv(%struct.sockaddr_storage* nonnull sret %6, %"class.quic::QuicSocketAddress"* nonnull %7) #8
  %32 = bitcast %struct.sockaddr_storage* %6 to %struct.sockaddr*
  %33 = call zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"* nonnull %5, %struct.sockaddr* nonnull %32, i32 128) #8
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* nonnull %9, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %31) #8, !noalias !38
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %30) #8, !noalias !38
  br label %34

34:                                               ; preds = %28, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26)
  %35 = call zeroext i1 @_ZNK3net10IPEndPointneERKS0_(%"class.net::IPEndPoint"* nonnull %8, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %9) #8
  br i1 %35, label %39, label %36

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5
  %38 = call zeroext i1 @_ZN4quicneERKNS_17QuicSocketAddressES2_(%"class.quic::QuicSocketAddress"* dereferenceable(24) %37, %"class.quic::QuicSocketAddress"* dereferenceable(24) %2) #8
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %24) #8
  br i1 %38, label %78, label %40

39:                                               ; preds = %34
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %24) #8
  br label %78

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 3
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 15
  store i8 1, i8* %45, align 4
  br label %55

46:                                               ; preds = %40
  %47 = load atomic i64, i64* @_ZZN3net30QuicConnectivityProbingManager22ValidateStatelessResetERKN4quic17QuicSocketAddressES4_E24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %48 = inttoptr i64 %47 to %"class.base::HistogramBase"*
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %46
  %51 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5, i64 0, i64 0), i32 1) #8
  %52 = ptrtoint %"class.base::HistogramBase"* %51 to i64
  store atomic i64 %52, i64* @_ZZN3net30QuicConnectivityProbingManager22ValidateStatelessResetERKN4quic17QuicSocketAddressES4_E24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %53

53:                                               ; preds = %46, %50
  %54 = phi %"class.base::HistogramBase"* [ %48, %46 ], [ %51, %50 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %54, i1 zeroext true) #8
  br label %55

55:                                               ; preds = %53, %44
  %56 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 2, i32 1
  %57 = load %"class.net::NetLog"*, %"class.net::NetLog"** %56, align 8
  %58 = getelementptr inbounds %"class.net::NetLog", %"class.net::NetLog"* %57, i64 0, i32 3
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %66, label %61, !prof !3

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 2, i32 0
  %63 = bitcast %"class.base::Value"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %63) #8
  %64 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %65 = load i64, i64* %64, align 8, !noalias !41
  call fastcc void @_ZN3net12_GLOBAL__N_125NetLogProbeReceivedParamsElPKNS_10IPEndPointEPKN4quic17QuicSocketAddressE(%"class.base::Value"* nonnull sret %4, i64 %65, %"class.net::IPEndPoint"* nonnull %8, %"class.quic::QuicSocketAddress"* %37) #8
  call void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"* %57, i32 333, %"struct.net::NetLogSource"* dereferenceable(16) %62, i32 0, %"class.base::Value"* nonnull dereferenceable(32) %4) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %63) #8
  br label %66

66:                                               ; preds = %55, %61
  %67 = load i8, i8* %41, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %78, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 1
  %71 = load %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicConnectivityProbingManager::Delegate"** %70, align 8
  %72 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.net::QuicConnectivityProbingManager::Delegate"* %71 to void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)***
  %75 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)**, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)** %75, i64 3
  %77 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)** %76, align 8
  call void %77(%"class.net::QuicConnectivityProbingManager::Delegate"* %71, i64 %73, %"class.quic::QuicSocketAddress"* dereferenceable(24) %37) #8
  call void @_ZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEv(%"class.net::QuicConnectivityProbingManager"* %0) #8
  br label %78

78:                                               ; preds = %69, %66, %36, %39
  %79 = phi i1 [ false, %39 ], [ false, %36 ], [ true, %66 ], [ true, %69 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %10) #8
  ret i1 %79
}

declare void @_ZNK3net16NetLogWithSource23AddEventWithInt64ParamsENS_15NetLogEventTypeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEl(%"class.net::NetLogWithSource"*, i32, i8*, i64, i64) local_unnamed_addr #1

declare void @_ZN4base12OneShotTimer5StartERKNS_8LocationENS_9TimeDeltaENS_12OnceCallbackIFvvEEE(%"class.base::OneShotTimer"*, %"class.base::Location"* dereferenceable(32), i64, %"class.base::OnceCallback"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net30QuicConnectivityProbingManager36MaybeResendConnectivityProbingPacketEv(%"class.net::QuicConnectivityProbingManager"*) #0 align 2 {
  %2 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 9
  %3 = load i64, i64* %2, align 8
  %4 = add nsw i64 %3, 1
  store i64 %4, i64* %2, align 8
  %5 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 11
  %6 = tail call i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"* %5) #8
  %7 = shl i64 %6, %4
  %8 = icmp sgt i64 %7, 2000
  br i1 %8, label %9, label %23

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 3
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %30, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 1
  %15 = load %"class.net::QuicConnectivityProbingManager::Delegate"*, %"class.net::QuicConnectivityProbingManager::Delegate"** %14, align 8
  %16 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.net::QuicConnectivityProbingManager", %"class.net::QuicConnectivityProbingManager"* %0, i64 0, i32 5
  %19 = bitcast %"class.net::QuicConnectivityProbingManager::Delegate"* %15 to void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)***
  %20 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)**, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)** %20, i64 3
  %22 = load void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)*, void (%"class.net::QuicConnectivityProbingManager::Delegate"*, i64, %"class.quic::QuicSocketAddress"*)** %21, align 8
  tail call void %22(%"class.net::QuicConnectivityProbingManager::Delegate"* %15, i64 %17, %"class.quic::QuicSocketAddress"* dereferenceable(24) %18) #8
  tail call void @_ZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEv(%"class.net::QuicConnectivityProbingManager"* %0) #8
  br label %30

23:                                               ; preds = %1
  %24 = icmp slt i64 %7, 0
  %25 = select i1 %24, i64 -9223372036854775808, i64 9223372036854775807
  %26 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %7, i64 1000) #8
  %27 = extractvalue { i64, i1 } %26, 1
  %28 = extractvalue { i64, i1 } %26, 0
  %29 = select i1 %27, i64 %25, i64 %28, !prof !44
  tail call void @_ZN3net30QuicConnectivityProbingManager29SendConnectivityProbingPacketEN4base9TimeDeltaE(%"class.net::QuicConnectivityProbingManager"* %0, i64 %29)
  br label %30

30:                                               ; preds = %13, %9, %23
  ret void
}

declare i64 @_ZNK4base9TimeDelta14InMillisecondsEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare void @_ZN4quic13QuicIpAddressC1Ev(%"class.quic::QuicIpAddress"*) unnamed_addr #1

declare zeroext i1 @_ZNK4quic17QuicSocketAddress13IsInitializedEv(%"class.quic::QuicSocketAddress"*) local_unnamed_addr #1

declare void @_ZNK4quic17QuicSocketAddress15generic_addressEv(%struct.sockaddr_storage* sret, %"class.quic::QuicSocketAddress"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3net10IPEndPoint12FromSockAddrEPK8sockaddrj(%"class.net::IPEndPoint"*, %struct.sockaddr*, i32) local_unnamed_addr #1

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.net::QuicConnectivityProbingManager"**
  %10 = load %"class.net::QuicConnectivityProbingManager"*, %"class.net::QuicConnectivityProbingManager"** %9, align 8
  %11 = icmp eq %"class.net::QuicConnectivityProbingManager"* %10, null
  br i1 %11, label %42, label %12

12:                                               ; preds = %7
  %13 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %16 = bitcast void ()** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.10, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i64 0, i64 0)) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %19, %12
  %23 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  %24 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* null
  %27 = getelementptr inbounds i8, i8* %26, i64 %17
  %28 = bitcast i8* %27 to %"class.net::QuicConnectivityProbingManager"*
  %29 = and i64 %14, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %22
  %32 = bitcast i8* %27 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = add i64 %14, -1
  %35 = getelementptr i8, i8* %33, i64 %34
  %36 = bitcast i8* %35 to void (%"class.net::QuicConnectivityProbingManager"*)**
  %37 = load void (%"class.net::QuicConnectivityProbingManager"*)*, void (%"class.net::QuicConnectivityProbingManager"*)** %36, align 8
  br label %40

38:                                               ; preds = %22
  %39 = inttoptr i64 %14 to void (%"class.net::QuicConnectivityProbingManager"*)*
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi void (%"class.net::QuicConnectivityProbingManager"*)* [ %37, %31 ], [ %39, %38 ]
  call void %41(%"class.net::QuicConnectivityProbingManager"* %28) #8
  br label %42

42:                                               ; preds = %1, %7, %40
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #8
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #9
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEEEbPKNS0_13BindStateBaseENSA_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::QuicConnectivityProbingManager"**
  %9 = load %"class.net::QuicConnectivityProbingManager"*, %"class.net::QuicConnectivityProbingManager"** %8, align 8
  %10 = icmp ne %"class.net::QuicConnectivityProbingManager"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #8
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3net6NetLog30AddEntryWithMaterializedParamsENS_15NetLogEventTypeERKNS_12NetLogSourceENS_16NetLogEventPhaseEON4base5ValueE(%"class.net::NetLog"*, i32, %"struct.net::NetLogSource"* dereferenceable(16), i32, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #2

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #1

declare %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"*, i8*, i64, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base14NumberToStringEl(%"class.std::__1::basic_string"* sret, i64) local_unnamed_addr #1

declare void @_ZNK4quic17QuicSocketAddress8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.quic::QuicSocketAddress"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #2

declare %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"*, i8*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN3net17NetLogNumberValueEl(%"class.base::Value"* sret, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3net12_GLOBAL__N_125NetLogProbeReceivedParamsElPKNS_10IPEndPointEPKN4quic17QuicSocketAddressE(%"class.base::Value"* noalias sret, i64, %"class.net::IPEndPoint"*, %"class.quic::QuicSocketAddress"*) unnamed_addr #0 {
  %5 = alloca %"class.base::DictionaryValue", align 8
  %6 = alloca %"class.base::Value", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = bitcast %"class.base::DictionaryValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #8
  %10 = bitcast %"class.base::DictionaryValue"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %5) #8
  %11 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %5, i64 0, i32 0
  %12 = bitcast %"class.base::Value"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #8
  call void @_ZN3net17NetLogNumberValueEl(%"class.base::Value"* nonnull sret %6, i64 %1) #8
  %13 = call %"class.base::Value"* @_ZN4base5Value6SetKeyEPKcOS0_(%"class.base::Value"* nonnull %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), %"class.base::Value"* nonnull dereferenceable(32) %6) #8
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #8
  %14 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  call void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %7, %"class.net::IPEndPoint"* %2) #8
  %15 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = select i1 %18, i8* %20, i8* %14
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %17 to i64
  %25 = select i1 %18, i64 %23, i64 %24
  %26 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i64 12, i8* %21, i64 %25) #8
  %27 = load i8, i8* %16, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %4
  %30 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %30) #9
  br label %31

31:                                               ; preds = %4, %29
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  %32 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #8
  call void @_ZNK4quic17QuicSocketAddress8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %8, %"class.quic::QuicSocketAddress"* %3) #8
  %33 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = select i1 %36, i8* %38, i8* %32
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = zext i8 %35 to i64
  %43 = select i1 %36, i64 %41, i64 %42
  %44 = call %"class.base::Value"* @_ZN4base15DictionaryValue9SetStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(%"class.base::DictionaryValue"* nonnull %5, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i64 12, i8* %39, i64 %43) #8
  %45 = load i8, i8* %34, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %31
  %48 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %48) #9
  br label %49

49:                                               ; preds = %31, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #8
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %0, %"class.base::Value"* nonnull dereferenceable(32) %11) #8
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #8
  ret void
}

declare void @_ZNK3net10IPEndPoint8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.net::IPEndPoint"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEvENK3$_0clEv: argument 0"}
!6 = distinct !{!6, !"_ZZN3net30QuicConnectivityProbingManager18CancelProbingIfAnyEvENK3$_0clEv"}
!7 = !{!8, !5}
!8 = distinct !{!8, !9, !"_ZN3net12_GLOBAL__N_130NetLogProbingDestinationParamsElPKN4quic17QuicSocketAddressE: argument 0"}
!9 = distinct !{!9, !"_ZN3net12_GLOBAL__N_130NetLogProbingDestinationParamsElPKN4quic17QuicSocketAddressE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK4base14WeakPtrFactoryIN3net30QuicConnectivityProbingManagerEE10GetWeakPtrEv: argument 0"}
!12 = distinct !{!12, !"_ZNK4base14WeakPtrFactoryIN3net30QuicConnectivityProbingManagerEE10GetWeakPtrEv"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base8BindOnceIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8BindOnceIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZZN3net30QuicConnectivityProbingManager12StartProbingElRKN4quic17QuicSocketAddressENSt3__110unique_ptrINS_20DatagramClientSocketENS5_14default_deleteIS7_EEEENS6_INS_24QuicChromiumPacketWriterENS8_ISB_EEEENS6_INS_24QuicChromiumPacketReaderENS8_ISE_EEEEN4base9TimeDeltaERKNS_16NetLogWithSourceEENK3$_1clEv: argument 0"}
!20 = distinct !{!20, !"_ZZN3net30QuicConnectivityProbingManager12StartProbingElRKN4quic17QuicSocketAddressENSt3__110unique_ptrINS_20DatagramClientSocketENS5_14default_deleteIS7_EEEENS6_INS_24QuicChromiumPacketWriterENS8_ISB_EEEENS6_INS_24QuicChromiumPacketReaderENS8_ISE_EEEEN4base9TimeDeltaERKNS_16NetLogWithSourceEENK3$_1clEv"}
!21 = !{!22, !19}
!22 = distinct !{!22, !23, !"_ZN3net12_GLOBAL__N_124NetLogStartProbingParamsElPKN4quic17QuicSocketAddressEN4base9TimeDeltaE: argument 0"}
!23 = distinct !{!23, !"_ZN3net12_GLOBAL__N_124NetLogStartProbingParamsElPKN4quic17QuicSocketAddressEN4base9TimeDeltaE"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK4base14WeakPtrFactoryIN3net30QuicConnectivityProbingManagerEE10GetWeakPtrEv: argument 0"}
!26 = distinct !{!26, !"_ZNK4base14WeakPtrFactoryIN3net30QuicConnectivityProbingManagerEE10GetWeakPtrEv"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS4_EEEEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIMN3net30QuicConnectivityProbingManagerEFvvEJNS_7WeakPtrIS2_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN3net12ToIPEndPointEN4quic17QuicSocketAddressE: argument 0"}
!34 = distinct !{!34, !"_ZN3net12ToIPEndPointEN4quic17QuicSocketAddressE"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZZN3net30QuicConnectivityProbingManager16OnPacketReceivedERKN4quic17QuicSocketAddressES4_bENK3$_2clEv: argument 0"}
!37 = distinct !{!37, !"_ZZN3net30QuicConnectivityProbingManager16OnPacketReceivedERKN4quic17QuicSocketAddressES4_bENK3$_2clEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN3net12ToIPEndPointEN4quic17QuicSocketAddressE: argument 0"}
!40 = distinct !{!40, !"_ZN3net12ToIPEndPointEN4quic17QuicSocketAddressE"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZZN3net30QuicConnectivityProbingManager22ValidateStatelessResetERKN4quic17QuicSocketAddressES4_ENK3$_3clEv: argument 0"}
!43 = distinct !{!43, !"_ZZN3net30QuicConnectivityProbingManager22ValidateStatelessResetERKN4quic17QuicSocketAddressES4_ENK3$_3clEv"}
!44 = !{!"branch_weights", i32 1, i32 2000}
