; ModuleID = '../../third_party/libaom/source/libaom/av1/common/pred_common.c'
source_filename = "../../third_party/libaom/source/libaom/av1/common/pred_common.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.macroblockd = type { i32, i32, i32, i8, [3 x %struct.macroblockd_plane], %struct.TileInfo, %struct.MB_MODE_INFO**, i8, i8, i8, i8, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, i8*, i32, i32, i32, i32, i32, [2 x %struct.scale_factors*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [32 x i8]], i8*, [32 x i8], i8*, i8*, [32 x i8], [3 x %struct.WienerInfo], [3 x %struct.SgrprojInfo], i8, i8, [29 x [8 x %struct.candidate_mv]], [29 x [8 x i16]], i8, i8, [8 x i8], %struct.frame_contexts*, i32, [8 x i32], [8 x i32], i32, i32, %struct.aom_internal_error_info*, %struct.WarpedMotionParams*, i8, [4 x i8], [4 x i8], i8*, %struct.cfl_ctx, [2 x i16], i16*, [2 x i8*], [8 x i8] }
%struct.macroblockd_plane = type { i8, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i8*, i8, i8, [8 x [19 x i8*]], [8 x [19 x i8*]] }
%struct.buf_2d = type { i8*, i8*, i32, i32, i32 }
%struct.TileInfo = type { i32, i32, i32, i32, i32, i32 }
%struct.MB_MODE_INFO = type <{ i8, i8, i8, i8, i32, [2 x %union.int_mv], [2 x i8], [2 x i8], %union.int_interpfilters, i8, i8, i8, i8, %struct.WarpedMotionParams, i8, i8, [6 x i8], %struct.INTERINTER_COMPOUND_DATA, [2 x i8], %struct.FILTER_INTRA_MODE_INFO, i8, i8, %struct.PALETTE_MODE_INFO, i8, i8, [16 x i8], i8, [4 x i8], i16, [7 x i8] }>
%union.int_mv = type { i32 }
%union.int_interpfilters = type { i32 }
%struct.WarpedMotionParams = type { [8 x i32], i16, i16, i16, i16, i8, i8 }
%struct.INTERINTER_COMPOUND_DATA = type { i8*, i8, i8, i8, i8 }
%struct.FILTER_INTRA_MODE_INFO = type { i8, i8 }
%struct.PALETTE_MODE_INFO = type { [24 x i16], [2 x i8] }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)* }
%struct.yv12_buffer_config = type { %union.anon, %union.anon.0, %union.anon.2, %union.anon.4, %union.anon.6, %union.anon.8, i32, [3 x i8*], i8*, i32, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, %struct.aom_metadata_array* }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { i32, i32 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { i32, i32 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i8*, i8*, i8* }
%struct.aom_metadata_array = type { i64, %struct.aom_metadata** }
%struct.aom_metadata = type { i32, i8*, i64, i32 }
%struct.WienerInfo = type { [8 x i16], [8 x i16] }
%struct.SgrprojInfo = type { i32, [2 x i32] }
%struct.candidate_mv = type { %union.int_mv, %union.int_mv }
%struct.frame_contexts = type { [5 x [13 x [3 x i16]]], [5 x [2 x [9 x [3 x i16]]]], [2 x [3 x [3 x i16]]], [2 x [2 x [6 x i16]]], [2 x [2 x [7 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [2 x [2 x [10 x i16]]], [2 x [2 x [11 x i16]]], [2 x [2 x [12 x i16]]], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [5 x [2 x [21 x [5 x i16]]]], [6 x [3 x i16]], [2 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [8 x [9 x i16]], [22 x [3 x i16]], [22 x [17 x i16]], [4 x [3 x i16]], [22 x [3 x i16]], [4 x [5 x i16]], [22 x [4 x i16]], [22 x [3 x i16]], [7 x [8 x i16]], [7 x [8 x i16]], [7 x [5 x [9 x i16]]], [7 x [5 x [9 x i16]]], [7 x [3 x [3 x i16]]], [2 x [3 x i16]], [5 x [3 x i16]], [3 x [6 x [3 x i16]]], [5 x [3 x i16]], [3 x [3 x [3 x i16]]], [3 x [3 x [3 x i16]]], [3 x [2 x [3 x i16]]], [21 x [3 x i16]], [6 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [3 x [3 x i16]], [4 x [3 x i16]], %struct.nmv_context, %struct.nmv_context, [3 x i16], %struct.segmentation_probs, [22 x [3 x i16]], [6 x i16], [4 x i16], [3 x i16], [3 x i16], [4 x [14 x i16]], [2 x [13 x [15 x i16]]], [20 x [11 x i16]], [16 x [4 x i16]], [5 x [5 x [14 x i16]]], [8 x [8 x i16]], [4 x [3 x [4 x i16]]], [5 x i16], [4 x [5 x i16]], [5 x i16], [3 x [4 x [13 x [17 x i16]]]], [4 x [4 x [17 x i16]]], [9 x i16], [6 x [17 x i16]], i32 }
%struct.nmv_context = type { [5 x i16], [2 x %struct.nmv_component] }
%struct.nmv_component = type { [12 x i16], [2 x [5 x i16]], [5 x i16], [3 x i16], [3 x i16], [3 x i16], [3 x i16], [10 x [3 x i16]] }
%struct.segmentation_probs = type { [9 x i16], [3 x [3 x i16]], [3 x [9 x i16]] }
%struct.aom_internal_error_info = type { i32, i32, [200 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.cfl_ctx = type { [1024 x i16], [1024 x i16], [2 x i32], i32, [2 x [32 x i16]], i32, i32, i32, i32, i32, i32 }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_switchable_interp(%struct.macroblockd* nocapture readonly, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 6
  %4 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %3, align 8
  %5 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %4, align 8
  %6 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 6, i64 1
  %7 = load i8, i8* %6, align 1
  %8 = icmp sgt i8 %7, 0
  %9 = zext i1 %8 to i32
  %10 = shl nuw nsw i32 %9, 2
  %11 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 6, i64 0
  %12 = load i8, i8* %11, align 8
  %13 = shl i32 %1, 3
  %14 = and i32 %13, 8
  %15 = or i32 %10, %14
  %16 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 8
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %37, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %4, i64 -1
  %21 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %20, align 8
  %22 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %21, i64 0, i32 6, i64 0
  %23 = load i8, i8* %22, align 8
  %24 = icmp eq i8 %23, %12
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %21, i64 0, i32 6, i64 1
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, %12
  br i1 %28, label %29, label %37

29:                                               ; preds = %25, %19
  %30 = and i32 %1, 1
  %31 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %21, i64 0, i32 8, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = lshr i32 %32, 16
  %34 = icmp eq i32 %30, 0
  %35 = select i1 %34, i32 %32, i32 %33
  %36 = and i32 %35, 255
  br label %37

37:                                               ; preds = %29, %25, %2
  %38 = phi i32 [ 3, %2 ], [ %36, %29 ], [ 3, %25 ]
  %39 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 7
  %40 = load i8, i8* %39, align 16, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %64, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 2
  %44 = load i32, i32* %43, align 8
  %45 = sub nsw i32 0, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %4, i64 %46
  %48 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %47, align 8
  %49 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %48, i64 0, i32 6, i64 0
  %50 = load i8, i8* %49, align 8
  %51 = icmp eq i8 %50, %12
  br i1 %51, label %56, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %48, i64 0, i32 6, i64 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, %12
  br i1 %55, label %56, label %64

56:                                               ; preds = %52, %42
  %57 = and i32 %1, 1
  %58 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %48, i64 0, i32 8, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = lshr i32 %59, 16
  %61 = icmp eq i32 %57, 0
  %62 = select i1 %61, i32 %59, i32 %60
  %63 = and i32 %62, 255
  br label %64

64:                                               ; preds = %56, %52, %37
  %65 = phi i32 [ 3, %37 ], [ %63, %56 ], [ 3, %52 ]
  %66 = icmp eq i32 %38, %65
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  %68 = add nuw nsw i32 %38, %15
  br label %79

69:                                               ; preds = %64
  %70 = icmp eq i32 %38, 3
  br i1 %70, label %71, label %73

71:                                               ; preds = %69
  %72 = add nuw nsw i32 %65, %15
  br label %79

73:                                               ; preds = %69
  %74 = icmp eq i32 %65, 3
  br i1 %74, label %75, label %77

75:                                               ; preds = %73
  %76 = add nuw nsw i32 %38, %15
  br label %79

77:                                               ; preds = %73
  %78 = or i32 %15, 3
  br label %79

79:                                               ; preds = %71, %77, %75, %67
  %80 = phi i32 [ %68, %67 ], [ %72, %71 ], [ %76, %75 ], [ %78, %77 ]
  ret i32 %80
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av1_get_palette_cache(%struct.macroblockd* nocapture readonly, i32, i16* nocapture) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 19
  %5 = load i32, i32* %4, align 4
  %6 = sub nsw i32 0, %5
  %7 = and i32 %6, 504
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11
  %11 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %10, align 8
  br label %24

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12
  %14 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %13, align 16
  %15 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11
  %16 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %15, align 8
  %17 = icmp eq %struct.MB_MODE_INFO* %14, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %12
  %19 = icmp ne i32 %1, 0
  %20 = zext i1 %19 to i64
  %21 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %14, i64 0, i32 22, i32 1, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  br label %24

24:                                               ; preds = %12, %9, %18
  %25 = phi i1 [ true, %18 ], [ false, %12 ], [ false, %9 ]
  %26 = phi %struct.MB_MODE_INFO* [ %16, %18 ], [ %16, %12 ], [ %11, %9 ]
  %27 = phi %struct.MB_MODE_INFO* [ %14, %18 ], [ null, %12 ], [ null, %9 ]
  %28 = phi i32 [ %23, %18 ], [ 0, %12 ], [ 0, %9 ]
  %29 = icmp ne %struct.MB_MODE_INFO* %26, null
  br i1 %29, label %30, label %36

30:                                               ; preds = %24
  %31 = icmp ne i32 %1, 0
  %32 = zext i1 %31 to i64
  %33 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %26, i64 0, i32 22, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  br label %36

36:                                               ; preds = %30, %24
  %37 = phi i32 [ %35, %30 ], [ 0, %24 ]
  %38 = or i32 %37, %28
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %164, label %40

40:                                               ; preds = %36
  %41 = shl nsw i32 %1, 3
  %42 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %27, i64 0, i32 22, i32 0, i64 0
  %43 = select i1 %25, i16* %42, i16* null
  %44 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %26, i64 0, i32 22, i32 0, i64 0
  %45 = select i1 %29, i16* %44, i16* null
  %46 = icmp ne i32 %28, 0
  %47 = icmp ne i32 %37, 0
  %48 = and i1 %46, %47
  br i1 %48, label %58, label %49

49:                                               ; preds = %106, %40
  %50 = phi i32 [ 0, %40 ], [ %107, %106 ]
  %51 = phi i32 [ %28, %40 ], [ %108, %106 ]
  %52 = phi i32 [ %37, %40 ], [ %109, %106 ]
  %53 = phi i32 [ %41, %40 ], [ %110, %106 ]
  %54 = phi i32 [ %41, %40 ], [ %111, %106 ]
  %55 = icmp sgt i32 %51, 0
  br i1 %55, label %56, label %115

56:                                               ; preds = %49
  %57 = sext i32 %53 to i64
  br label %120

58:                                               ; preds = %40, %106
  %59 = phi i32 [ %111, %106 ], [ %41, %40 ]
  %60 = phi i32 [ %110, %106 ], [ %41, %40 ]
  %61 = phi i32 [ %109, %106 ], [ %37, %40 ]
  %62 = phi i32 [ %108, %106 ], [ %28, %40 ]
  %63 = phi i32 [ %107, %106 ], [ 0, %40 ]
  %64 = sext i32 %60 to i64
  %65 = getelementptr inbounds i16, i16* %43, i64 %64
  %66 = load i16, i16* %65, align 2
  %67 = sext i32 %59 to i64
  %68 = getelementptr inbounds i16, i16* %45, i64 %67
  %69 = load i16, i16* %68, align 2
  %70 = icmp ult i16 %69, %66
  %71 = icmp sgt i32 %63, 0
  br i1 %70, label %72, label %87

72:                                               ; preds = %58
  br i1 %71, label %73, label %79

73:                                               ; preds = %72
  %74 = add nsw i32 %63, -1
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %2, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %77, %69
  br i1 %78, label %83, label %79

79:                                               ; preds = %73, %72
  %80 = add nsw i32 %63, 1
  %81 = sext i32 %63 to i64
  %82 = getelementptr inbounds i16, i16* %2, i64 %81
  store i16 %69, i16* %82, align 2
  br label %83

83:                                               ; preds = %73, %79
  %84 = phi i32 [ %63, %73 ], [ %80, %79 ]
  %85 = add nsw i32 %59, 1
  %86 = add nsw i32 %61, -1
  br label %106

87:                                               ; preds = %58
  br i1 %71, label %88, label %94

88:                                               ; preds = %87
  %89 = add nsw i32 %63, -1
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i16, i16* %2, i64 %90
  %92 = load i16, i16* %91, align 2
  %93 = icmp eq i16 %92, %66
  br i1 %93, label %98, label %94

94:                                               ; preds = %88, %87
  %95 = add nsw i32 %63, 1
  %96 = sext i32 %63 to i64
  %97 = getelementptr inbounds i16, i16* %2, i64 %96
  store i16 %66, i16* %97, align 2
  br label %98

98:                                               ; preds = %88, %94
  %99 = phi i32 [ %63, %88 ], [ %95, %94 ]
  %100 = add nsw i32 %60, 1
  %101 = add nsw i32 %62, -1
  %102 = icmp eq i16 %69, %66
  br i1 %102, label %103, label %106

103:                                              ; preds = %98
  %104 = add nsw i32 %59, 1
  %105 = add nsw i32 %61, -1
  br label %106

106:                                              ; preds = %98, %103, %83
  %107 = phi i32 [ %84, %83 ], [ %99, %103 ], [ %99, %98 ]
  %108 = phi i32 [ %62, %83 ], [ %101, %103 ], [ %101, %98 ]
  %109 = phi i32 [ %86, %83 ], [ %105, %103 ], [ %61, %98 ]
  %110 = phi i32 [ %60, %83 ], [ %100, %103 ], [ %100, %98 ]
  %111 = phi i32 [ %85, %83 ], [ %104, %103 ], [ %59, %98 ]
  %112 = icmp sgt i32 %108, 0
  %113 = icmp sgt i32 %109, 0
  %114 = and i1 %112, %113
  br i1 %114, label %58, label %49

115:                                              ; preds = %139, %49
  %116 = phi i32 [ %50, %49 ], [ %140, %139 ]
  %117 = icmp sgt i32 %52, 0
  br i1 %117, label %118, label %164

118:                                              ; preds = %115
  %119 = sext i32 %54 to i64
  br label %142

120:                                              ; preds = %56, %139
  %121 = phi i64 [ %57, %56 ], [ %125, %139 ]
  %122 = phi i32 [ %51, %56 ], [ %124, %139 ]
  %123 = phi i32 [ %50, %56 ], [ %140, %139 ]
  %124 = add nsw i32 %122, -1
  %125 = add nsw i64 %121, 1
  %126 = getelementptr inbounds i16, i16* %43, i64 %121
  %127 = load i16, i16* %126, align 2
  %128 = icmp sgt i32 %123, 0
  br i1 %128, label %129, label %135

129:                                              ; preds = %120
  %130 = add nsw i32 %123, -1
  %131 = sext i32 %130 to i64
  %132 = getelementptr inbounds i16, i16* %2, i64 %131
  %133 = load i16, i16* %132, align 2
  %134 = icmp eq i16 %133, %127
  br i1 %134, label %139, label %135

135:                                              ; preds = %129, %120
  %136 = add nsw i32 %123, 1
  %137 = sext i32 %123 to i64
  %138 = getelementptr inbounds i16, i16* %2, i64 %137
  store i16 %127, i16* %138, align 2
  br label %139

139:                                              ; preds = %129, %135
  %140 = phi i32 [ %123, %129 ], [ %136, %135 ]
  %141 = icmp sgt i32 %124, 0
  br i1 %141, label %120, label %115

142:                                              ; preds = %118, %161
  %143 = phi i64 [ %119, %118 ], [ %147, %161 ]
  %144 = phi i32 [ %52, %118 ], [ %146, %161 ]
  %145 = phi i32 [ %116, %118 ], [ %162, %161 ]
  %146 = add nsw i32 %144, -1
  %147 = add nsw i64 %143, 1
  %148 = getelementptr inbounds i16, i16* %45, i64 %143
  %149 = load i16, i16* %148, align 2
  %150 = icmp sgt i32 %145, 0
  br i1 %150, label %151, label %157

151:                                              ; preds = %142
  %152 = add nsw i32 %145, -1
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i16, i16* %2, i64 %153
  %155 = load i16, i16* %154, align 2
  %156 = icmp eq i16 %155, %149
  br i1 %156, label %161, label %157

157:                                              ; preds = %151, %142
  %158 = add nsw i32 %145, 1
  %159 = sext i32 %145 to i64
  %160 = getelementptr inbounds i16, i16* %2, i64 %159
  store i16 %149, i16* %160, align 2
  br label %161

161:                                              ; preds = %151, %157
  %162 = phi i32 [ %145, %151 ], [ %158, %157 ]
  %163 = icmp sgt i32 %146, 0
  br i1 %163, label %142, label %164

164:                                              ; preds = %161, %115, %36
  %165 = phi i32 [ 0, %36 ], [ %116, %115 ], [ %162, %161 ]
  ret i32 %165
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_intra_inter_context(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12
  %3 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %2, align 16
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11
  %5 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %4, align 8
  %6 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 16, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 8
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = and i1 %8, %11
  br i1 %12, label %13, label %42

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %3, i64 0, i32 28
  %15 = load i16, i16* %14, align 1
  %16 = trunc i16 %15 to i8
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %3, i64 0, i32 6, i64 0
  %20 = load i8, i8* %19, align 8
  %21 = icmp sgt i8 %20, 0
  %22 = zext i1 %21 to i32
  br label %23

23:                                               ; preds = %13, %18
  %24 = phi i32 [ 1, %13 ], [ %22, %18 ]
  %25 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 28
  %26 = load i16, i16* %25, align 1
  %27 = trunc i16 %26 to i8
  %28 = icmp sgt i8 %27, -1
  br i1 %28, label %29, label %34

29:                                               ; preds = %23
  %30 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 6, i64 0
  %31 = load i8, i8* %30, align 8
  %32 = icmp sgt i8 %31, 0
  %33 = zext i1 %32 to i32
  br label %34

34:                                               ; preds = %23, %29
  %35 = phi i32 [ 1, %23 ], [ %33, %29 ]
  %36 = or i32 %35, %24
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %57, label %38

38:                                               ; preds = %34
  %39 = xor i32 %35, 1
  %40 = xor i32 %24, 1
  %41 = or i32 %39, %40
  br label %57

42:                                               ; preds = %1
  %43 = or i8 %10, %7
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %57, label %45

45:                                               ; preds = %42
  %46 = select i1 %8, %struct.MB_MODE_INFO* %3, %struct.MB_MODE_INFO* %5
  %47 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %46, i64 0, i32 28
  %48 = load i16, i16* %47, align 1
  %49 = trunc i16 %48 to i8
  %50 = icmp sgt i8 %49, -1
  br i1 %50, label %51, label %57

51:                                               ; preds = %45
  %52 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %46, i64 0, i32 6, i64 0
  %53 = load i8, i8* %52, align 8
  %54 = icmp slt i8 %53, 1
  %55 = zext i1 %54 to i32
  %56 = shl nuw nsw i32 %55, 1
  br label %57

57:                                               ; preds = %51, %45, %42, %38, %34
  %58 = phi i32 [ %41, %38 ], [ 3, %34 ], [ 0, %42 ], [ 0, %45 ], [ %56, %51 ]
  ret i32 %58
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_reference_mode_context(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12
  %3 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %2, align 16
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11
  %5 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %4, align 8
  %6 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 16, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 8
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = and i1 %8, %11
  br i1 %12, label %13, label %55

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %3, i64 0, i32 6, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 1
  %17 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 6, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 1
  br i1 %16, label %20, label %41

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %3, i64 0, i32 6, i64 0
  %22 = load i8, i8* %21, align 8
  %23 = add i8 %22, -5
  %24 = icmp ult i8 %23, 3
  br i1 %19, label %25, label %32

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 6, i64 0
  %27 = load i8, i8* %26, align 8
  %28 = add i8 %27, -5
  %29 = icmp ult i8 %28, 3
  %30 = xor i1 %24, %29
  %31 = zext i1 %30 to i32
  br label %69

32:                                               ; preds = %20
  br i1 %24, label %69, label %33

33:                                               ; preds = %32
  %34 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %3, i64 0, i32 28
  %35 = load i16, i16* %34, align 1
  %36 = trunc i16 %35 to i8
  %37 = icmp sgt i8 %36, -1
  br i1 %37, label %38, label %69

38:                                               ; preds = %33
  %39 = icmp slt i8 %22, 1
  %40 = select i1 %39, i32 3, i32 2
  ret i32 %40

41:                                               ; preds = %13
  br i1 %19, label %42, label %69

42:                                               ; preds = %41
  %43 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 6, i64 0
  %44 = load i8, i8* %43, align 8
  %45 = add i8 %44, -5
  %46 = icmp ult i8 %45, 3
  br i1 %46, label %69, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 28
  %49 = load i16, i16* %48, align 1
  %50 = trunc i16 %49 to i8
  %51 = icmp sgt i8 %50, -1
  br i1 %51, label %52, label %69

52:                                               ; preds = %47
  %53 = icmp slt i8 %44, 1
  %54 = select i1 %53, i32 3, i32 2
  br label %69

55:                                               ; preds = %1
  %56 = or i8 %10, %7
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %55
  %59 = select i1 %8, %struct.MB_MODE_INFO* %3, %struct.MB_MODE_INFO* %5
  %60 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %59, i64 0, i32 6, i64 1
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %58
  %64 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %59, i64 0, i32 6, i64 0
  %65 = load i8, i8* %64, align 8
  %66 = add i8 %65, -5
  %67 = icmp ult i8 %66, 3
  %68 = zext i1 %67 to i32
  br label %69

69:                                               ; preds = %52, %47, %33, %55, %63, %58, %41, %42, %32, %25
  %70 = phi i32 [ %31, %25 ], [ 3, %32 ], [ 3, %42 ], [ 4, %41 ], [ %68, %63 ], [ 3, %58 ], [ 1, %55 ], [ 2, %33 ], [ 2, %47 ], [ %54, %52 ]
  ret i32 %70
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_comp_reference_type_context(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 12
  %3 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %2, align 16
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 11
  %5 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %4, align 8
  %6 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 7
  %7 = load i8, i8* %6, align 16, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 8
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp ne i8 %10, 0
  %12 = and i1 %8, %11
  br i1 %12, label %13, label %112

13:                                               ; preds = %1
  %14 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %3, i64 0, i32 28
  %15 = load i16, i16* %14, align 1
  %16 = trunc i16 %15 to i8
  %17 = icmp sgt i8 %16, -1
  br i1 %17, label %18, label %23

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %3, i64 0, i32 6, i64 0
  %20 = load i8, i8* %19, align 8
  %21 = icmp sgt i8 %20, 0
  %22 = zext i1 %21 to i32
  br label %23

23:                                               ; preds = %13, %18
  %24 = phi i32 [ 1, %13 ], [ %22, %18 ]
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 28
  %27 = load i16, i16* %26, align 1
  %28 = trunc i16 %27 to i8
  %29 = icmp sgt i8 %28, -1
  br i1 %29, label %30, label %35

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 6, i64 0
  %32 = load i8, i8* %31, align 8
  %33 = icmp sgt i8 %32, 0
  %34 = zext i1 %33 to i32
  br label %35

35:                                               ; preds = %23, %30
  %36 = phi i32 [ 1, %23 ], [ %34, %30 ]
  %37 = or i32 %36, %24
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %137, label %39

39:                                               ; preds = %35
  %40 = icmp eq i32 %36, 0
  %41 = or i1 %25, %40
  br i1 %41, label %42, label %56

42:                                               ; preds = %39
  %43 = select i1 %25, %struct.MB_MODE_INFO* %5, %struct.MB_MODE_INFO* %3
  %44 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %43, i64 0, i32 6, i64 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 1
  br i1 %46, label %137, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %43, i64 0, i32 6, i64 0
  %49 = load i8, i8* %48, align 8
  %50 = icmp slt i8 %49, 5
  %51 = icmp sgt i8 %45, 4
  %52 = xor i1 %51, %50
  %53 = zext i1 %52 to i32
  %54 = shl nuw nsw i32 %53, 1
  %55 = or i32 %54, 1
  br label %137

56:                                               ; preds = %39
  %57 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %3, i64 0, i32 6, i64 1
  %58 = load i8, i8* %57, align 1
  %59 = icmp sgt i8 %58, 0
  %60 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 6, i64 1
  %61 = load i8, i8* %60, align 1
  %62 = icmp sgt i8 %61, 0
  %63 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %3, i64 0, i32 6, i64 0
  %64 = load i8, i8* %63, align 8
  %65 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 6, i64 0
  %66 = load i8, i8* %65, align 8
  %67 = or i1 %59, %62
  br i1 %67, label %77, label %68

68:                                               ; preds = %56
  %69 = add i8 %64, -5
  %70 = icmp ugt i8 %69, 2
  %71 = add i8 %66, -5
  %72 = icmp ult i8 %71, 3
  %73 = xor i1 %70, %72
  %74 = zext i1 %73 to i32
  %75 = shl nuw nsw i32 %74, 1
  %76 = or i32 %75, 1
  br label %137

77:                                               ; preds = %56
  %78 = and i1 %59, %62
  br i1 %78, label %97, label %79

79:                                               ; preds = %77
  br i1 %59, label %86, label %80

80:                                               ; preds = %79
  %81 = icmp slt i8 %61, 1
  br i1 %81, label %137, label %82

82:                                               ; preds = %80
  %83 = icmp slt i8 %66, 5
  %84 = icmp sgt i8 %61, 4
  %85 = xor i1 %84, %83
  br i1 %85, label %90, label %137

86:                                               ; preds = %79
  %87 = icmp slt i8 %64, 5
  %88 = icmp sgt i8 %58, 4
  %89 = xor i1 %88, %87
  br i1 %89, label %90, label %137

90:                                               ; preds = %82, %86
  %91 = add i8 %64, -5
  %92 = icmp ugt i8 %91, 2
  %93 = add i8 %66, -5
  %94 = icmp ult i8 %93, 3
  %95 = xor i1 %92, %94
  %96 = select i1 %95, i32 4, i32 3
  br label %137

97:                                               ; preds = %77
  %98 = icmp slt i8 %64, 5
  %99 = icmp sgt i8 %58, 4
  %100 = xor i1 %99, %98
  %101 = icmp slt i8 %66, 5
  %102 = icmp sgt i8 %61, 4
  %103 = xor i1 %102, %101
  %104 = or i1 %103, %100
  br i1 %104, label %105, label %137

105:                                              ; preds = %97
  %106 = and i1 %100, %103
  br i1 %106, label %107, label %137

107:                                              ; preds = %105
  %108 = icmp ne i8 %64, 5
  %109 = icmp eq i8 %66, 5
  %110 = xor i1 %108, %109
  %111 = select i1 %110, i32 4, i32 3
  br label %137

112:                                              ; preds = %1
  %113 = or i8 %10, %7
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %137, label %115

115:                                              ; preds = %112
  %116 = select i1 %8, %struct.MB_MODE_INFO* %3, %struct.MB_MODE_INFO* %5
  %117 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %116, i64 0, i32 28
  %118 = load i16, i16* %117, align 1
  %119 = trunc i16 %118 to i8
  %120 = icmp sgt i8 %119, -1
  br i1 %120, label %121, label %125

121:                                              ; preds = %115
  %122 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %116, i64 0, i32 6, i64 0
  %123 = load i8, i8* %122, align 8
  %124 = icmp slt i8 %123, 1
  br i1 %124, label %137, label %125

125:                                              ; preds = %115, %121
  %126 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %116, i64 0, i32 6, i64 1
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 1
  br i1 %128, label %137, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %116, i64 0, i32 6, i64 0
  %131 = load i8, i8* %130, align 8
  %132 = icmp slt i8 %131, 5
  %133 = icmp sgt i8 %127, 4
  %134 = xor i1 %133, %132
  %135 = zext i1 %134 to i32
  %136 = shl nuw nsw i32 %135, 2
  br label %137

137:                                              ; preds = %82, %97, %86, %80, %112, %129, %121, %125, %35, %42, %47, %107, %105, %90, %68
  %138 = phi i32 [ 2, %35 ], [ %55, %47 ], [ 2, %42 ], [ %76, %68 ], [ %96, %90 ], [ 1, %86 ], [ %111, %107 ], [ 0, %97 ], [ 2, %105 ], [ %136, %129 ], [ 2, %121 ], [ 2, %125 ], [ 2, %112 ], [ 1, %80 ], [ 1, %82 ]
  ret i32 %138
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_uni_comp_ref_p(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 1
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 2
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = add nuw nsw i32 %7, %4
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 3
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = add nuw nsw i32 %8, %11
  %13 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 4
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = add nuw nsw i32 %12, %15
  %17 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 5
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 6
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = add nuw nsw i32 %22, %19
  %24 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 7
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = add nuw nsw i32 %23, %26
  %28 = icmp eq i32 %16, %27
  %29 = icmp ult i32 %16, %27
  %30 = select i1 %29, i32 0, i32 2
  %31 = select i1 %28, i32 1, i32 %30
  ret i32 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_uni_comp_ref_p1(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 2
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 3
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 4
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i32
  %11 = add nuw nsw i32 %10, %7
  %12 = icmp eq i32 %11, %4
  %13 = icmp ugt i32 %11, %4
  %14 = select i1 %13, i32 0, i32 2
  %15 = select i1 %12, i32 1, i32 %14
  ret i32 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_uni_comp_ref_p2(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 3
  %3 = load i8, i8* %2, align 1
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 4
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %3, %5
  %7 = icmp ult i8 %3, %5
  %8 = select i1 %7, i32 0, i32 2
  %9 = select i1 %6, i32 1, i32 %8
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_comp_ref_p(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 1
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 2
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = add nuw nsw i32 %7, %4
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 3
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 4
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = add nuw nsw i32 %14, %11
  %16 = icmp eq i32 %8, %15
  %17 = icmp ult i32 %8, %15
  %18 = select i1 %17, i32 0, i32 2
  %19 = select i1 %16, i32 1, i32 %18
  ret i32 %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_comp_ref_p1(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 1
  %3 = load i8, i8* %2, align 1
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %3, %5
  %7 = icmp ult i8 %3, %5
  %8 = select i1 %7, i32 0, i32 2
  %9 = select i1 %6, i32 1, i32 %8
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_comp_ref_p2(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 3
  %3 = load i8, i8* %2, align 1
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 4
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %3, %5
  %7 = icmp ult i8 %3, %5
  %8 = select i1 %7, i32 0, i32 2
  %9 = select i1 %6, i32 1, i32 %8
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_comp_bwdref_p(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 5
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 6
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = add nuw nsw i32 %7, %4
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 7
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %8, %11
  %13 = icmp ult i32 %8, %11
  %14 = select i1 %13, i32 0, i32 2
  %15 = select i1 %12, i32 1, i32 %14
  ret i32 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_comp_bwdref_p1(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 5
  %3 = load i8, i8* %2, align 1
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 6
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %3, %5
  %7 = icmp ult i8 %3, %5
  %8 = select i1 %7, i32 0, i32 2
  %9 = select i1 %6, i32 1, i32 %8
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_single_ref_p1(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 1
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 2
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = add nuw nsw i32 %7, %4
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 3
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = add nuw nsw i32 %8, %11
  %13 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 4
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = add nuw nsw i32 %12, %15
  %17 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 5
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 6
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i32
  %23 = add nuw nsw i32 %22, %19
  %24 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 7
  %25 = load i8, i8* %24, align 1
  %26 = zext i8 %25 to i32
  %27 = add nuw nsw i32 %23, %26
  %28 = icmp eq i32 %16, %27
  %29 = icmp ult i32 %16, %27
  %30 = select i1 %29, i32 0, i32 2
  %31 = select i1 %28, i32 1, i32 %30
  ret i32 %31
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_single_ref_p2(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 5
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 6
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = add nuw nsw i32 %7, %4
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 7
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = icmp eq i32 %8, %11
  %13 = icmp ult i32 %8, %11
  %14 = select i1 %13, i32 0, i32 2
  %15 = select i1 %12, i32 1, i32 %14
  ret i32 %15
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_single_ref_p3(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 1
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 2
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i32
  %8 = add nuw nsw i32 %7, %4
  %9 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 3
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i32
  %12 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 4
  %13 = load i8, i8* %12, align 1
  %14 = zext i8 %13 to i32
  %15 = add nuw nsw i32 %14, %11
  %16 = icmp eq i32 %8, %15
  %17 = icmp ult i32 %8, %15
  %18 = select i1 %17, i32 0, i32 2
  %19 = select i1 %16, i32 1, i32 %18
  ret i32 %19
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_single_ref_p4(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 1
  %3 = load i8, i8* %2, align 1
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 2
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %3, %5
  %7 = icmp ult i8 %3, %5
  %8 = select i1 %7, i32 0, i32 2
  %9 = select i1 %6, i32 1, i32 %8
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_single_ref_p5(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 3
  %3 = load i8, i8* %2, align 1
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 4
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %3, %5
  %7 = icmp ult i8 %3, %5
  %8 = select i1 %7, i32 0, i32 2
  %9 = select i1 %6, i32 1, i32 %8
  ret i32 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @av1_get_pred_context_single_ref_p6(%struct.macroblockd* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 5
  %3 = load i8, i8* %2, align 1
  %4 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 38, i64 6
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %3, %5
  %7 = icmp ult i8 %3, %5
  %8 = select i1 %7, i32 0, i32 2
  %9 = select i1 %6, i32 1, i32 %8
  ret i32 %9
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
