; ModuleID = '../../ui/base/ime/composition_text.cc'
source_filename = "../../ui/base/ime/composition_text.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::CompositionText" = type { %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.gfx::Range" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"*, %"class.std::__1::__compressed_pair.17" }
%"struct.ui::ImeTextSpan" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.std::__1::vector.1" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::basic_string.3"*, %"class.std::__1::basic_string.3"*, %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::basic_string.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.6 }
%union.anon.6 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.std::__1::basic_string.3"* }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.ui::ImeTextSpan"* }
%"class.gfx::Range" = type { i32, i32 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.7 }
%struct.anon.7 = type { i8 }

$_ZNK2ui11ImeTextSpaneqERKS0_ = comdat any

@_ZN2ui15CompositionTextC1Ev = hidden unnamed_addr alias void (%"struct.ui::CompositionText"*), void (%"struct.ui::CompositionText"*)* @_ZN2ui15CompositionTextC2Ev
@_ZN2ui15CompositionTextC1ERKS0_ = hidden unnamed_addr alias void (%"struct.ui::CompositionText"*, %"struct.ui::CompositionText"*), void (%"struct.ui::CompositionText"*, %"struct.ui::CompositionText"*)* @_ZN2ui15CompositionTextC2ERKS0_
@_ZN2ui15CompositionTextD1Ev = hidden unnamed_addr alias void (%"struct.ui::CompositionText"*), void (%"struct.ui::CompositionText"*)* @_ZN2ui15CompositionTextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CompositionTextC2Ev(%"struct.ui::CompositionText"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.ui::CompositionText"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 56, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CompositionTextC2ERKS0_(%"struct.ui::CompositionText"*, %"struct.ui::CompositionText"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::CompositionText"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.ui::CompositionText"* %0 to i8*
  %9 = bitcast %"struct.ui::CompositionText"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #9
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.ui::CompositionText"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.ui::CompositionText"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.ui::CompositionText"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #10
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #10
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.ui::CompositionText"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !2
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !5, !noalias !2
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !5, !noalias !2
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !2
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !5, !noalias !2
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !5, !noalias !2
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !2
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !5, !noalias !2
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !5, !noalias !2
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !2
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !5, !noalias !2
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !5, !noalias !2
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !7

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !2
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !5, !noalias !2
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !5, !noalias !2
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !9

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !11

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !12

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::vector"* %186 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 24, i1 false) #9
  %189 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 1, i32 0, i32 1
  %190 = bitcast %"struct.ui::ImeTextSpan"** %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.std::__1::vector"* %187 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %191, %193
  %195 = ashr exact i64 %194, 6
  %196 = icmp eq i64 %194, 0
  br i1 %196, label %225, label %197

197:                                              ; preds = %185
  %198 = icmp ugt i64 %195, 288230376151711743
  br i1 %198, label %199, label %201

199:                                              ; preds = %197
  %200 = bitcast %"class.std::__1::vector"* %186 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %200) #10
  unreachable

201:                                              ; preds = %197
  %202 = tail call i8* @_Znwm(i64 %194) #11
  %203 = bitcast i8* %202 to %"struct.ui::ImeTextSpan"*
  %204 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 1, i32 0, i32 1
  %205 = bitcast %"struct.ui::ImeTextSpan"** %204 to i8**
  store i8* %202, i8** %205, align 8
  %206 = bitcast %"class.std::__1::vector"* %186 to i8**
  store i8* %202, i8** %206, align 8
  %207 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %203, i64 %195
  %208 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"struct.ui::ImeTextSpan"* %207, %"struct.ui::ImeTextSpan"** %208, align 8
  %209 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %187, i64 0, i32 0, i32 0
  %210 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %209, align 8
  %211 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %189, align 8
  %212 = bitcast %"struct.ui::ImeTextSpan"** %204 to i64*
  %213 = ptrtoint i8* %202 to i64
  %214 = icmp eq %"struct.ui::ImeTextSpan"* %210, %211
  br i1 %214, label %223, label %215

215:                                              ; preds = %201, %215
  %216 = phi %"struct.ui::ImeTextSpan"* [ %219, %215 ], [ %203, %201 ]
  %217 = phi %"struct.ui::ImeTextSpan"* [ %218, %215 ], [ %210, %201 ]
  tail call void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"* %216, %"struct.ui::ImeTextSpan"* dereferenceable(64) %217) #9
  %218 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %217, i64 1
  %219 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %216, i64 1
  %220 = icmp eq %"struct.ui::ImeTextSpan"* %218, %211
  br i1 %220, label %221, label %215

221:                                              ; preds = %215
  %222 = ptrtoint %"struct.ui::ImeTextSpan"* %219 to i64
  br label %223

223:                                              ; preds = %221, %201
  %224 = phi i64 [ %213, %201 ], [ %222, %221 ]
  store i64 %224, i64* %212, align 8
  br label %225

225:                                              ; preds = %185, %223
  %226 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 2
  %227 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 2
  %228 = bitcast %"class.gfx::Range"* %227 to i64*
  %229 = bitcast %"class.gfx::Range"* %226 to i64*
  %230 = load i64, i64* %228, align 8
  store i64 %230, i64* %229, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ui15CompositionTextD2Ev(%"struct.ui::CompositionText"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %3, align 8
  %5 = icmp eq %"struct.ui::ImeTextSpan"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.ui::ImeTextSpan"* %4 to i8*
  %8 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"** %8, align 8
  %10 = icmp eq %"struct.ui::ImeTextSpan"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.ui::ImeTextSpan"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %12, i64 -1
  tail call void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"* %13) #9
  %14 = icmp eq %"struct.ui::ImeTextSpan"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"struct.ui::ImeTextSpan"* %4, %"struct.ui::ImeTextSpan"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #11
  br label %20

20:                                               ; preds = %1, %18
  %21 = bitcast %"struct.ui::CompositionText"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %21, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %20
  %26 = bitcast %"struct.ui::CompositionText"* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #11
  br label %28

28:                                               ; preds = %20, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui15CompositionTexteqERKS0_(%"struct.ui::CompositionText"* nocapture readonly, %"struct.ui::CompositionText"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::CompositionText"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.ui::CompositionText"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %85

20:                                               ; preds = %2
  %21 = icmp eq i64 %10, 0
  br i1 %21, label %43, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast %"struct.ui::CompositionText"* %1 to i16*
  %26 = select i1 %14, i16* %24, i16* %25
  %27 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = bitcast %"struct.ui::CompositionText"* %0 to i16*
  %30 = select i1 %6, i16* %28, i16* %29
  br label %31

31:                                               ; preds = %38, %22
  %32 = phi i64 [ %39, %38 ], [ %10, %22 ]
  %33 = phi i16* [ %41, %38 ], [ %26, %22 ]
  %34 = phi i16* [ %40, %38 ], [ %30, %22 ]
  %35 = load i16, i16* %34, align 2
  %36 = load i16, i16* %33, align 2
  %37 = icmp eq i16 %36, %35
  br i1 %37, label %38, label %85

38:                                               ; preds = %31
  %39 = add i64 %32, -1
  %40 = getelementptr inbounds i16, i16* %34, i64 1
  %41 = getelementptr inbounds i16, i16* %33, i64 1
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %43, label %31

43:                                               ; preds = %38, %20
  %44 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 1, i32 0, i32 1
  %47 = bitcast %"struct.ui::ImeTextSpan"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector"* %44 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 1, i32 0, i32 1
  %53 = bitcast %"struct.ui::ImeTextSpan"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector"* %45 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = icmp eq i64 %51, %57
  %59 = inttoptr i64 %50 to %"struct.ui::ImeTextSpan"*
  %60 = inttoptr i64 %48 to %"struct.ui::ImeTextSpan"*
  br i1 %58, label %61, label %85

61:                                               ; preds = %43
  %62 = icmp eq %"struct.ui::ImeTextSpan"* %59, %60
  br i1 %62, label %73, label %63

63:                                               ; preds = %61
  %64 = inttoptr i64 %56 to %"struct.ui::ImeTextSpan"*
  br label %65

65:                                               ; preds = %63, %69
  %66 = phi %"struct.ui::ImeTextSpan"* [ %71, %69 ], [ %64, %63 ]
  %67 = phi %"struct.ui::ImeTextSpan"* [ %70, %69 ], [ %59, %63 ]
  %68 = tail call zeroext i1 @_ZNK2ui11ImeTextSpaneqERKS0_(%"struct.ui::ImeTextSpan"* %67, %"struct.ui::ImeTextSpan"* dereferenceable(64) %66) #9
  br i1 %68, label %69, label %85

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %67, i64 1
  %71 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %66, i64 1
  %72 = icmp eq %"struct.ui::ImeTextSpan"* %70, %60
  br i1 %72, label %73, label %65

73:                                               ; preds = %69, %61
  %74 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 2, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 2, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %85

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 2, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 2, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %81, %83
  br label %85

85:                                               ; preds = %31, %65, %79, %73, %43, %2
  %86 = phi i1 [ false, %2 ], [ false, %43 ], [ false, %73 ], [ %84, %79 ], [ false, %65 ], [ false, %31 ]
  ret i1 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2ui15CompositionTextneERKS0_(%"struct.ui::CompositionText"* nocapture readonly, %"struct.ui::CompositionText"* nocapture readonly dereferenceable(56)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.ui::CompositionText"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  %7 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = zext i8 %5 to i64
  %10 = select i1 %6, i64 %8, i64 %9
  %11 = bitcast %"struct.ui::CompositionText"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = icmp eq i64 %10, %18
  br i1 %19, label %20, label %85

20:                                               ; preds = %2
  %21 = icmp eq i64 %10, 0
  br i1 %21, label %43, label %22

22:                                               ; preds = %20
  %23 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast %"struct.ui::CompositionText"* %1 to i16*
  %26 = select i1 %14, i16* %24, i16* %25
  %27 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i16*, i16** %27, align 8
  %29 = bitcast %"struct.ui::CompositionText"* %0 to i16*
  %30 = select i1 %6, i16* %28, i16* %29
  br label %31

31:                                               ; preds = %38, %22
  %32 = phi i64 [ %39, %38 ], [ %10, %22 ]
  %33 = phi i16* [ %41, %38 ], [ %26, %22 ]
  %34 = phi i16* [ %40, %38 ], [ %30, %22 ]
  %35 = load i16, i16* %34, align 2
  %36 = load i16, i16* %33, align 2
  %37 = icmp eq i16 %36, %35
  br i1 %37, label %38, label %85

38:                                               ; preds = %31
  %39 = add i64 %32, -1
  %40 = getelementptr inbounds i16, i16* %34, i64 1
  %41 = getelementptr inbounds i16, i16* %33, i64 1
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %43, label %31

43:                                               ; preds = %38, %20
  %44 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 1, i32 0, i32 1
  %47 = bitcast %"struct.ui::ImeTextSpan"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector"* %44 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = sub i64 %48, %50
  %52 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 1, i32 0, i32 1
  %53 = bitcast %"struct.ui::ImeTextSpan"** %52 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::vector"* %45 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = sub i64 %54, %56
  %58 = icmp eq i64 %51, %57
  %59 = inttoptr i64 %50 to %"struct.ui::ImeTextSpan"*
  %60 = inttoptr i64 %48 to %"struct.ui::ImeTextSpan"*
  br i1 %58, label %61, label %85

61:                                               ; preds = %43
  %62 = icmp eq %"struct.ui::ImeTextSpan"* %59, %60
  br i1 %62, label %73, label %63

63:                                               ; preds = %61
  %64 = inttoptr i64 %56 to %"struct.ui::ImeTextSpan"*
  br label %65

65:                                               ; preds = %69, %63
  %66 = phi %"struct.ui::ImeTextSpan"* [ %71, %69 ], [ %64, %63 ]
  %67 = phi %"struct.ui::ImeTextSpan"* [ %70, %69 ], [ %59, %63 ]
  %68 = tail call zeroext i1 @_ZNK2ui11ImeTextSpaneqERKS0_(%"struct.ui::ImeTextSpan"* %67, %"struct.ui::ImeTextSpan"* dereferenceable(64) %66) #9
  br i1 %68, label %69, label %85

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %67, i64 1
  %71 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %66, i64 1
  %72 = icmp eq %"struct.ui::ImeTextSpan"* %70, %60
  br i1 %72, label %73, label %65

73:                                               ; preds = %69, %61
  %74 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 2, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 2, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %79, label %85

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %0, i64 0, i32 2, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.ui::CompositionText", %"struct.ui::CompositionText"* %1, i64 0, i32 2, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp ne i32 %81, %83
  br label %85

85:                                               ; preds = %31, %65, %2, %43, %73, %79
  %86 = phi i1 [ true, %2 ], [ true, %43 ], [ true, %73 ], [ %84, %79 ], [ true, %65 ], [ true, %31 ]
  ret i1 %86
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ui11ImeTextSpanD1Ev(%"struct.ui::ImeTextSpan"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

declare void @_ZN2ui11ImeTextSpanC1ERKS0_(%"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"* dereferenceable(64)) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2ui11ImeTextSpaneqERKS0_(%"struct.ui::ImeTextSpan"*, %"struct.ui::ImeTextSpan"* dereferenceable(64)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %146

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %146

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %146

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 3
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %146

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %146

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 5
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 5
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %146

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 6
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 6
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %146

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 7
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 7
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %146

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 8
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 8
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %52, %54
  br i1 %55, label %56, label %146

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 9
  %58 = load i8, i8* %57, align 4, !range !13
  %59 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 9
  %60 = load i8, i8* %59, align 4, !range !13
  %61 = icmp eq i8 %58, %60
  br i1 %61, label %62, label %146

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 10
  %64 = load i8, i8* %63, align 1, !range !13
  %65 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 10
  %66 = load i8, i8* %65, align 1, !range !13
  %67 = icmp eq i8 %64, %66
  br i1 %67, label %68, label %146

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 11
  %70 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 11
  %71 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %0, i64 0, i32 11, i32 0, i32 1
  %72 = bitcast %"class.std::__1::basic_string.3"** %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.1"* %69 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = getelementptr inbounds %"struct.ui::ImeTextSpan", %"struct.ui::ImeTextSpan"* %1, i64 0, i32 11, i32 0, i32 1
  %78 = bitcast %"class.std::__1::basic_string.3"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::vector.1"* %70 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = icmp eq i64 %76, %82
  %84 = inttoptr i64 %75 to %"class.std::__1::basic_string.3"*
  %85 = inttoptr i64 %73 to %"class.std::__1::basic_string.3"*
  br i1 %83, label %86, label %146

86:                                               ; preds = %68
  %87 = icmp eq %"class.std::__1::basic_string.3"* %84, %85
  br i1 %87, label %146, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %81 to %"class.std::__1::basic_string.3"*
  br label %90

90:                                               ; preds = %88, %142
  %91 = phi %"class.std::__1::basic_string.3"* [ %144, %142 ], [ %89, %88 ]
  %92 = phi %"class.std::__1::basic_string.3"* [ %143, %142 ], [ %84, %88 ]
  %93 = bitcast %"class.std::__1::basic_string.3"* %92 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  %95 = load i8, i8* %94, align 1
  %96 = icmp slt i8 %95, 0
  %97 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i64, i64* %97, align 8
  %99 = zext i8 %95 to i64
  %100 = select i1 %96, i64 %98, i64 %99
  %101 = bitcast %"class.std::__1::basic_string.3"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %101, i64 0, i32 1, i32 0
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  %105 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = zext i8 %103 to i64
  %108 = select i1 %104, i64 %106, i64 %107
  %109 = icmp eq i64 %100, %108
  br i1 %109, label %110, label %146

110:                                              ; preds = %90
  %111 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  %113 = bitcast %"class.std::__1::basic_string.3"* %92 to i8*
  %114 = select i1 %96, i8* %112, i8* %113
  %115 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = bitcast %"class.std::__1::basic_string.3"* %91 to i8*
  %118 = select i1 %104, i8* %116, i8* %117
  %119 = icmp eq i64 %100, 0
  br i1 %96, label %126, label %120

120:                                              ; preds = %110
  br i1 %119, label %142, label %121

121:                                              ; preds = %120
  %122 = ptrtoint i8* %112 to i64
  %123 = trunc i64 %122 to i8
  %124 = load i8, i8* %118, align 1
  %125 = icmp eq i8 %124, %123
  br i1 %125, label %127, label %146

126:                                              ; preds = %110
  br i1 %119, label %142, label %139

127:                                              ; preds = %121, %134
  %128 = phi i64 [ %131, %134 ], [ %99, %121 ]
  %129 = phi i8* [ %132, %134 ], [ %113, %121 ]
  %130 = phi i8* [ %135, %134 ], [ %118, %121 ]
  %131 = add i64 %128, -1
  %132 = getelementptr inbounds i8, i8* %129, i64 1
  %133 = icmp eq i64 %131, 0
  br i1 %133, label %142, label %134

134:                                              ; preds = %127
  %135 = getelementptr inbounds i8, i8* %130, i64 1
  %136 = load i8, i8* %132, align 1
  %137 = load i8, i8* %135, align 1
  %138 = icmp eq i8 %136, %137
  br i1 %138, label %127, label %146

139:                                              ; preds = %126
  %140 = tail call i32 @bcmp(i8* %114, i8* %118, i64 %100) #9
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %146

142:                                              ; preds = %127, %139, %126, %120
  %143 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %92, i64 1
  %144 = getelementptr inbounds %"class.std::__1::basic_string.3", %"class.std::__1::basic_string.3"* %91, i64 1
  %145 = icmp eq %"class.std::__1::basic_string.3"* %143, %85
  br i1 %145, label %146, label %90

146:                                              ; preds = %142, %139, %121, %90, %134, %86, %68, %62, %56, %50, %44, %38, %32, %26, %20, %14, %8, %2
  %147 = phi i1 [ false, %62 ], [ false, %56 ], [ false, %50 ], [ false, %44 ], [ false, %38 ], [ false, %32 ], [ false, %26 ], [ false, %20 ], [ false, %14 ], [ false, %8 ], [ false, %2 ], [ false, %68 ], [ true, %86 ], [ false, %134 ], [ true, %142 ], [ false, %90 ], [ false, %139 ], [ false, %121 ]
  ret i1 %147
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{i8 0, i8 2}
