; ModuleID = '../../third_party/blink/renderer/platform/transforms/interpolated_transform_operation.cc'
source_filename = "../../third_party/blink/renderer/platform/transforms/interpolated_transform_operation.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::InterpolatedTransformOperation" = type { %"class.blink::TransformOperation.base", %"class.blink::TransformOperations", %"class.blink::TransformOperations", i32, double }
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted" }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.scoped_refptr*, i32, i32 }
%class.scoped_refptr = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatSize" = type { float, float }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink30InterpolatedTransformOperationD2Ev = comdat any

$_ZN5blink30InterpolatedTransformOperationD0Ev = comdat any

$_ZN5blink30InterpolatedTransformOperation10AccumulateERKNS_18TransformOperationE = comdat any

$_ZN5blink30InterpolatedTransformOperation4ZoomEd = comdat any

$_ZNK5blink30InterpolatedTransformOperation7GetTypeEv = comdat any

$_ZNK5blink18TransformOperation13PrimitiveTypeEv = comdat any

$_ZNK5blink30InterpolatedTransformOperation22PreservesAxisAlignmentEv = comdat any

$_ZNK5blink30InterpolatedTransformOperation23IsIdentityOrTranslationEv = comdat any

$_ZNK5blink18TransformOperation24HasNonTrivial3DComponentEv = comdat any

$_ZNK5blink30InterpolatedTransformOperation19BoxSizeDependenciesEv = comdat any

$_ZN5blink30InterpolatedTransformOperationC2ERKNS_19TransformOperationsES3_id = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPNS2_30InterpolatedTransformOperationEEEvOT_ = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

@_ZTVN5blink30InterpolatedTransformOperationE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InterpolatedTransformOperation"*)* @_ZN5blink30InterpolatedTransformOperationD2Ev to i8*), i8* bitcast (void (%"class.blink::InterpolatedTransformOperation"*)* @_ZN5blink30InterpolatedTransformOperationD0Ev to i8*), i8* bitcast (i1 (%"class.blink::InterpolatedTransformOperation"*, %"class.blink::TransformOperation"*)* @_ZNK5blink30InterpolatedTransformOperationeqERKNS_18TransformOperationE to i8*), i8* bitcast (void (%"class.blink::InterpolatedTransformOperation"*, %"class.blink::TransformationMatrix"*, %"class.blink::FloatSize"*)* @_ZNK5blink30InterpolatedTransformOperation5ApplyERNS_20TransformationMatrixERKNS_9FloatSizeE to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::InterpolatedTransformOperation"*, %"class.blink::TransformOperation"*)* @_ZN5blink30InterpolatedTransformOperation10AccumulateERKNS_18TransformOperationE to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::InterpolatedTransformOperation"*, %"class.blink::TransformOperation"*, double, i1)* @_ZN5blink30InterpolatedTransformOperation5BlendEPKNS_18TransformOperationEdb to i8*), i8* bitcast (%"class.blink::TransformOperation"* (%"class.blink::InterpolatedTransformOperation"*, double)* @_ZN5blink30InterpolatedTransformOperation4ZoomEd to i8*), i8* bitcast (i32 (%"class.blink::InterpolatedTransformOperation"*)* @_ZNK5blink30InterpolatedTransformOperation7GetTypeEv to i8*), i8* bitcast (i32 (%"class.blink::TransformOperation"*)* @_ZNK5blink18TransformOperation13PrimitiveTypeEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolatedTransformOperation"*)* @_ZNK5blink30InterpolatedTransformOperation22PreservesAxisAlignmentEv to i8*), i8* bitcast (i1 (%"class.blink::InterpolatedTransformOperation"*)* @_ZNK5blink30InterpolatedTransformOperation23IsIdentityOrTranslationEv to i8*), i8* bitcast (i1 (%"class.blink::TransformOperation"*)* @_ZNK5blink18TransformOperation24HasNonTrivial3DComponentEv to i8*), i8* bitcast (i32 (%"class.blink::InterpolatedTransformOperation"*)* @_ZNK5blink30InterpolatedTransformOperation19BoxSizeDependenciesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink18TransformOperationEEEEPKcv = private unnamed_addr constant [88 x i8] c"const char *WTF::GetStringWithTypeName() [T = scoped_refptr<blink::TransformOperation>]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink30InterpolatedTransformOperationeqERKNS_18TransformOperationE(%"class.blink::InterpolatedTransformOperation"*, %"class.blink::TransformOperation"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::InterpolatedTransformOperation"* %0 to %"class.blink::TransformOperation"*
  %4 = bitcast %"class.blink::TransformOperation"* %1 to i32 (%"class.blink::TransformOperation"*)***
  %5 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %5, i64 7
  %7 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::TransformOperation"* %1) #7
  %9 = bitcast %"class.blink::InterpolatedTransformOperation"* %0 to i32 (%"class.blink::TransformOperation"*)***
  %10 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %9, align 8
  %11 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %10, i64 7
  %12 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %11, align 8
  %13 = tail call i32 %12(%"class.blink::TransformOperation"* %3) #7
  %14 = icmp eq i32 %8, %13
  br i1 %14, label %15, label %32

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 4
  %17 = load double, double* %16, align 8
  %18 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 3, i32 1
  %19 = bitcast %"class.WTF::RefCounted"* %18 to double*
  %20 = load double, double* %19, align 8
  %21 = fcmp oeq double %17, %20
  br i1 %21, label %22, label %32

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 1
  %25 = bitcast %"class.blink::TransformOperation"* %24 to %"class.blink::TransformOperations"*
  %26 = tail call zeroext i1 @_ZNK5blink19TransformOperationseqERKS0_(%"class.blink::TransformOperations"* %23, %"class.blink::TransformOperations"* dereferenceable(16) %25) #7
  br i1 %26, label %27, label %32

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %1, i64 2
  %30 = bitcast %"class.blink::TransformOperation"* %29 to %"class.blink::TransformOperations"*
  %31 = tail call zeroext i1 @_ZNK5blink19TransformOperationseqERKS0_(%"class.blink::TransformOperations"* %28, %"class.blink::TransformOperations"* dereferenceable(16) %30) #7
  br label %32

32:                                               ; preds = %15, %22, %27, %2
  %33 = phi i1 [ false, %2 ], [ false, %22 ], [ false, %15 ], [ %31, %27 ]
  ret i1 %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK5blink19TransformOperationseqERKS0_(%"class.blink::TransformOperations"*, %"class.blink::TransformOperations"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink30InterpolatedTransformOperation5ApplyERNS_20TransformationMatrixERKNS_9FloatSizeE(%"class.blink::InterpolatedTransformOperation"*, %"class.blink::TransformationMatrix"* dereferenceable(128), %"class.blink::FloatSize"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TransformationMatrix", align 8
  %5 = alloca %"class.blink::TransformationMatrix", align 8
  %6 = bitcast %"class.blink::TransformationMatrix"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %6) #7
  %7 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %7, align 8
  %8 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 0, i64 1
  %9 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 1
  %10 = bitcast double* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %9, align 8
  %11 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 1, i64 2
  %12 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 2, i64 2
  %13 = bitcast double* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %12, align 8
  %14 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 2, i64 3
  %15 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %4, i64 0, i32 0, i32 0, i64 3, i64 3
  %16 = bitcast double* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %15, align 8
  %17 = bitcast %"class.blink::TransformationMatrix"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %17) #7
  %18 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %18, align 8
  %19 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 0, i64 1
  %20 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 1, i64 1
  %21 = bitcast double* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %20, align 8
  %22 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 1, i64 2
  %23 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 2, i64 2
  %24 = bitcast double* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %23, align 8
  %25 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 2, i64 3
  %26 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %5, i64 0, i32 0, i32 0, i64 3, i64 3
  %27 = bitcast double* %25 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 32, i1 false) #7
  store double 1.000000e+00, double* %26, align 8
  %28 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1
  %29 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 3
  %30 = load i32, i32* %29, align 8
  call void @_ZNK5blink19TransformOperations14ApplyRemainingERKNS_9FloatSizeEjRNS_20TransformationMatrixE(%"class.blink::TransformOperations"* %28, %"class.blink::FloatSize"* dereferenceable(8) %2, i32 %30, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %4) #7
  %31 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2
  %32 = load i32, i32* %29, align 8
  call void @_ZNK5blink19TransformOperations14ApplyRemainingERKNS_9FloatSizeEjRNS_20TransformationMatrixE(%"class.blink::TransformOperations"* %31, %"class.blink::FloatSize"* dereferenceable(8) %2, i32 %32, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %5) #7
  %33 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 4
  %34 = load double, double* %33, align 8
  call void @_ZN5blink20TransformationMatrix5BlendERKS0_d(%"class.blink::TransformationMatrix"* nonnull %5, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %4, double %34) #7
  %35 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* %1, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %5) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %17) #7
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %6) #7
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK5blink19TransformOperations14ApplyRemainingERKNS_9FloatSizeEjRNS_20TransformationMatrixE(%"class.blink::TransformOperations"*, %"class.blink::FloatSize"* dereferenceable(8), i32, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #2

declare void @_ZN5blink20TransformationMatrix5BlendERKS0_d(%"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128), double) local_unnamed_addr #2

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::TransformOperation"* @_ZN5blink30InterpolatedTransformOperation5BlendEPKNS_18TransformOperationEdb(%"class.blink::InterpolatedTransformOperation"*, %"class.blink::TransformOperation"*, double, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::TransformOperations", align 8
  %6 = alloca %"class.blink::InterpolatedTransformOperation"*, align 8
  %7 = alloca %"class.blink::TransformOperations", align 8
  %8 = alloca %"class.blink::TransformOperation"*, align 8
  %9 = bitcast %"class.blink::TransformOperations"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #7
  %10 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #7
  %12 = bitcast %"class.blink::InterpolatedTransformOperation"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #7
  store %"class.blink::InterpolatedTransformOperation"* %0, %"class.blink::InterpolatedTransformOperation"** %6, align 8
  %13 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %5, i64 0, i32 0
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPNS2_30InterpolatedTransformOperationEEEvOT_(%"class.WTF::Vector"* nonnull %13, %"class.blink::InterpolatedTransformOperation"** nonnull dereferenceable(8) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #7
  %14 = bitcast %"class.blink::TransformOperations"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #7
  br i1 %3, label %17, label %20

17:                                               ; preds = %4
  %18 = call noalias i8* @malloc(i64 64) #7
  %19 = bitcast i8* %18 to %"class.blink::InterpolatedTransformOperation"*
  call void @_ZN5blink30InterpolatedTransformOperationC2ERKNS_19TransformOperationsES3_id(%"class.blink::InterpolatedTransformOperation"* %19, %"class.blink::TransformOperations"* nonnull dereferenceable(16) %5, %"class.blink::TransformOperations"* nonnull dereferenceable(16) %7, i32 0, double %2) #7
  br label %28

20:                                               ; preds = %4
  %21 = icmp eq %"class.blink::TransformOperation"* %1, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %20
  %23 = bitcast %"class.blink::TransformOperation"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #7
  store %"class.blink::TransformOperation"* %1, %"class.blink::TransformOperation"** %8, align 8
  %24 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %7, i64 0, i32 0
  call void @_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* nonnull %24, %"class.blink::TransformOperation"** nonnull dereferenceable(8) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #7
  br label %25

25:                                               ; preds = %22, %20
  %26 = call noalias i8* @malloc(i64 64) #7
  %27 = bitcast i8* %26 to %"class.blink::InterpolatedTransformOperation"*
  call void @_ZN5blink30InterpolatedTransformOperationC2ERKNS_19TransformOperationsES3_id(%"class.blink::InterpolatedTransformOperation"* %27, %"class.blink::TransformOperations"* nonnull dereferenceable(16) %7, %"class.blink::TransformOperations"* nonnull dereferenceable(16) %5, i32 0, double %2) #7
  br label %28

28:                                               ; preds = %25, %17
  %29 = phi i8* [ %18, %17 ], [ %26, %25 ]
  %30 = load %class.scoped_refptr*, %class.scoped_refptr** %15, align 8
  %31 = icmp eq %class.scoped_refptr* %30, null
  br i1 %31, label %65, label %32, !prof !2

32:                                               ; preds = %28
  %33 = bitcast %class.scoped_refptr* %30 to i8*
  %34 = load i32, i32* %16, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %63, label %36, !prof !3

36:                                               ; preds = %32
  %37 = zext i32 %34 to i64
  %38 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %30, i64 %37
  br label %39

39:                                               ; preds = %57, %36
  %40 = phi %class.scoped_refptr* [ %58, %57 ], [ %30, %36 ]
  %41 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %40, i64 0, i32 0
  %42 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %41, align 8
  %43 = icmp eq %"class.blink::TransformOperation"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %42, i64 0, i32 1, i32 0
  %46 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %45, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %46) #7
  %47 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %45, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %57

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %45, i64 -2
  %52 = bitcast %"class.base::RefCounted"* %51 to %"class.blink::TransformOperation"*
  %53 = bitcast %"class.base::RefCounted"* %51 to void (%"class.blink::TransformOperation"*)***
  %54 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %54, i64 1
  %56 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %55, align 8
  call void %56(%"class.blink::TransformOperation"* nonnull %52) #7
  br label %57

57:                                               ; preds = %50, %44, %39
  %58 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %40, i64 1
  %59 = icmp eq %class.scoped_refptr* %58, %38
  br i1 %59, label %60, label %39

60:                                               ; preds = %57
  store i32 0, i32* %16, align 4
  %61 = bitcast %"class.blink::TransformOperations"* %7 to i8**
  %62 = load i8*, i8** %61, align 8
  br label %63

63:                                               ; preds = %60, %32
  %64 = phi i8* [ %62, %60 ], [ %33, %32 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %64) #7
  store %class.scoped_refptr* null, %class.scoped_refptr** %15, align 8
  br label %65

65:                                               ; preds = %28, %63
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #7
  %66 = load %class.scoped_refptr*, %class.scoped_refptr** %10, align 8
  %67 = icmp eq %class.scoped_refptr* %66, null
  br i1 %67, label %101, label %68, !prof !2

68:                                               ; preds = %65
  %69 = bitcast %class.scoped_refptr* %66 to i8*
  %70 = load i32, i32* %11, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !3

72:                                               ; preds = %68
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %66, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr* [ %94, %93 ], [ %66, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %81, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #7
  %83 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  call void %92(%"class.blink::TransformOperation"* nonnull %88) #7
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %76, i64 1
  %95 = icmp eq %class.scoped_refptr* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %11, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %5 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %68
  %100 = phi i8* [ %98, %96 ], [ %69, %68 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #7
  store %class.scoped_refptr* null, %class.scoped_refptr** %10, align 8
  br label %101

101:                                              ; preds = %65, %99
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #7
  %102 = bitcast i8* %29 to %"class.blink::TransformOperation"*
  ret %"class.blink::TransformOperation"* %102
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30InterpolatedTransformOperationD2Ev(%"class.blink::InterpolatedTransformOperation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink30InterpolatedTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = icmp eq %class.scoped_refptr* %5, null
  br i1 %6, label %41, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !3

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %18 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %17, align 8
  %19 = icmp eq %"class.blink::TransformOperation"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #7
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted"* %27 to %"class.blink::TransformOperation"*
  %29 = bitcast %"class.base::RefCounted"* %27 to void (%"class.blink::TransformOperation"*)***
  %30 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %30, i64 1
  %32 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %31, align 8
  tail call void %32(%"class.blink::TransformOperation"* nonnull %28) #7
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 1
  %35 = icmp eq %class.scoped_refptr* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.blink::TransformOperations"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #7
  store %class.scoped_refptr* null, %class.scoped_refptr** %4, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1
  %43 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %class.scoped_refptr*, %class.scoped_refptr** %43, align 8
  %45 = icmp eq %class.scoped_refptr* %44, null
  br i1 %45, label %80, label %46, !prof !2

46:                                               ; preds = %41
  %47 = bitcast %class.scoped_refptr* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %78, label %51, !prof !3

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %44, i64 %52
  br label %54

54:                                               ; preds = %72, %51
  %55 = phi %class.scoped_refptr* [ %73, %72 ], [ %44, %51 ]
  %56 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %55, i64 0, i32 0
  %57 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %56, align 8
  %58 = icmp eq %"class.blink::TransformOperation"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #7
  %62 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 -2
  %67 = bitcast %"class.base::RefCounted"* %66 to %"class.blink::TransformOperation"*
  %68 = bitcast %"class.base::RefCounted"* %66 to void (%"class.blink::TransformOperation"*)***
  %69 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %69, i64 1
  %71 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %70, align 8
  tail call void %71(%"class.blink::TransformOperation"* nonnull %67) #7
  br label %72

72:                                               ; preds = %65, %59, %54
  %73 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %55, i64 1
  %74 = icmp eq %class.scoped_refptr* %73, %53
  br i1 %74, label %75, label %54

75:                                               ; preds = %72
  store i32 0, i32* %48, align 4
  %76 = bitcast %"class.blink::TransformOperations"* %42 to i8**
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %46
  %79 = phi i8* [ %77, %75 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #7
  store %class.scoped_refptr* null, %class.scoped_refptr** %43, align 8
  br label %80

80:                                               ; preds = %41, %78
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30InterpolatedTransformOperationD0Ev(%"class.blink::InterpolatedTransformOperation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink30InterpolatedTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.scoped_refptr*, %class.scoped_refptr** %4, align 8
  %6 = icmp eq %class.scoped_refptr* %5, null
  br i1 %6, label %41, label %7, !prof !2

7:                                                ; preds = %1
  %8 = bitcast %class.scoped_refptr* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !3

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %class.scoped_refptr* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 0, i32 0
  %18 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %17, align 8
  %19 = icmp eq %"class.blink::TransformOperation"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %18, i64 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %22) #7
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %21, i64 -2
  %28 = bitcast %"class.base::RefCounted"* %27 to %"class.blink::TransformOperation"*
  %29 = bitcast %"class.base::RefCounted"* %27 to void (%"class.blink::TransformOperation"*)***
  %30 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %30, i64 1
  %32 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %31, align 8
  tail call void %32(%"class.blink::TransformOperation"* nonnull %28) #7
  br label %33

33:                                               ; preds = %26, %20, %15
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 1
  %35 = icmp eq %class.scoped_refptr* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.blink::TransformOperations"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #7
  store %class.scoped_refptr* null, %class.scoped_refptr** %4, align 8
  br label %41

41:                                               ; preds = %39, %1
  %42 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1
  %43 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load %class.scoped_refptr*, %class.scoped_refptr** %43, align 8
  %45 = icmp eq %class.scoped_refptr* %44, null
  br i1 %45, label %80, label %46, !prof !2

46:                                               ; preds = %41
  %47 = bitcast %class.scoped_refptr* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %78, label %51, !prof !3

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %44, i64 %52
  br label %54

54:                                               ; preds = %72, %51
  %55 = phi %class.scoped_refptr* [ %73, %72 ], [ %44, %51 ]
  %56 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %55, i64 0, i32 0
  %57 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %56, align 8
  %58 = icmp eq %"class.blink::TransformOperation"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %57, i64 0, i32 1, i32 0
  %61 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %61) #7
  %62 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %60, i64 -2
  %67 = bitcast %"class.base::RefCounted"* %66 to %"class.blink::TransformOperation"*
  %68 = bitcast %"class.base::RefCounted"* %66 to void (%"class.blink::TransformOperation"*)***
  %69 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %69, i64 1
  %71 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %70, align 8
  tail call void %71(%"class.blink::TransformOperation"* nonnull %67) #7
  br label %72

72:                                               ; preds = %65, %59, %54
  %73 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %55, i64 1
  %74 = icmp eq %class.scoped_refptr* %73, %53
  br i1 %74, label %75, label %54

75:                                               ; preds = %72
  store i32 0, i32* %48, align 4
  %76 = bitcast %"class.blink::TransformOperations"* %42 to i8**
  %77 = load i8*, i8** %76, align 8
  br label %78

78:                                               ; preds = %75, %46
  %79 = phi i8* [ %77, %75 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #7
  br label %80

80:                                               ; preds = %41, %78
  %81 = bitcast %"class.blink::InterpolatedTransformOperation"* %0 to i8*
  tail call void @free(i8* %81) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TransformOperation"* @_ZN5blink30InterpolatedTransformOperation10AccumulateERKNS_18TransformOperationE(%"class.blink::InterpolatedTransformOperation"*, %"class.blink::TransformOperation"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::InterpolatedTransformOperation"* %0 to %"class.blink::TransformOperation"*
  %4 = icmp eq %"class.blink::InterpolatedTransformOperation"* %0, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %6) #7
  br label %7

7:                                                ; preds = %2, %5
  ret %"class.blink::TransformOperation"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::TransformOperation"* @_ZN5blink30InterpolatedTransformOperation4ZoomEd(%"class.blink::InterpolatedTransformOperation"*, double) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::TransformOperations", align 8
  %4 = alloca %"class.blink::TransformOperations", align 8
  %5 = bitcast %"class.blink::TransformOperations"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1
  call void @_ZNK5blink19TransformOperations4ZoomEd(%"class.blink::TransformOperations"* nonnull sret %3, %"class.blink::TransformOperations"* %6, double %1) #7
  %7 = bitcast %"class.blink::TransformOperations"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #7
  %8 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2
  call void @_ZNK5blink19TransformOperations4ZoomEd(%"class.blink::TransformOperations"* nonnull sret %4, %"class.blink::TransformOperations"* %8, double %1) #7
  %9 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 4
  %12 = load double, double* %11, align 8
  %13 = call noalias i8* @malloc(i64 64) #7
  %14 = bitcast i8* %13 to %"class.blink::InterpolatedTransformOperation"*
  call void @_ZN5blink30InterpolatedTransformOperationC2ERKNS_19TransformOperationsES3_id(%"class.blink::InterpolatedTransformOperation"* %14, %"class.blink::TransformOperations"* nonnull dereferenceable(16) %3, %"class.blink::TransformOperations"* nonnull dereferenceable(16) %4, i32 %10, double %12) #7
  %15 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %class.scoped_refptr*, %class.scoped_refptr** %15, align 8
  %17 = icmp eq %class.scoped_refptr* %16, null
  br i1 %17, label %52, label %18, !prof !2

18:                                               ; preds = %2
  %19 = bitcast %class.scoped_refptr* %16 to i8*
  %20 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !3

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %class.scoped_refptr* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %28, align 8
  %30 = icmp eq %"class.blink::TransformOperation"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %29, i64 0, i32 1, i32 0
  %33 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %32, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %33) #7
  %34 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %32, i64 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %44

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %32, i64 -2
  %39 = bitcast %"class.base::RefCounted"* %38 to %"class.blink::TransformOperation"*
  %40 = bitcast %"class.base::RefCounted"* %38 to void (%"class.blink::TransformOperation"*)***
  %41 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %41, i64 1
  %43 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %42, align 8
  call void %43(%"class.blink::TransformOperation"* nonnull %39) #7
  br label %44

44:                                               ; preds = %37, %31, %26
  %45 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 1
  %46 = icmp eq %class.scoped_refptr* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.blink::TransformOperations"* %4 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #7
  store %class.scoped_refptr* null, %class.scoped_refptr** %15, align 8
  br label %52

52:                                               ; preds = %2, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #7
  %53 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = load %class.scoped_refptr*, %class.scoped_refptr** %53, align 8
  %55 = icmp eq %class.scoped_refptr* %54, null
  br i1 %55, label %90, label %56, !prof !2

56:                                               ; preds = %52
  %57 = bitcast %class.scoped_refptr* %54 to i8*
  %58 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %88, label %61, !prof !3

61:                                               ; preds = %56
  %62 = zext i32 %59 to i64
  %63 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %54, i64 %62
  br label %64

64:                                               ; preds = %82, %61
  %65 = phi %class.scoped_refptr* [ %83, %82 ], [ %54, %61 ]
  %66 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %65, i64 0, i32 0
  %67 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %66, align 8
  %68 = icmp eq %"class.blink::TransformOperation"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %67, i64 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %70, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #7
  %72 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %70, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %82

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %70, i64 -2
  %77 = bitcast %"class.base::RefCounted"* %76 to %"class.blink::TransformOperation"*
  %78 = bitcast %"class.base::RefCounted"* %76 to void (%"class.blink::TransformOperation"*)***
  %79 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %79, i64 1
  %81 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %80, align 8
  call void %81(%"class.blink::TransformOperation"* nonnull %77) #7
  br label %82

82:                                               ; preds = %75, %69, %64
  %83 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %65, i64 1
  %84 = icmp eq %class.scoped_refptr* %83, %63
  br i1 %84, label %85, label %64

85:                                               ; preds = %82
  store i32 0, i32* %58, align 4
  %86 = bitcast %"class.blink::TransformOperations"* %3 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %85, %56
  %89 = phi i8* [ %87, %85 ], [ %57, %56 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #7
  store %class.scoped_refptr* null, %class.scoped_refptr** %53, align 8
  br label %90

90:                                               ; preds = %52, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  %91 = bitcast i8* %13 to %"class.blink::TransformOperation"*
  ret %"class.blink::TransformOperation"* %91
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink30InterpolatedTransformOperation7GetTypeEv(%"class.blink::InterpolatedTransformOperation"*) unnamed_addr #0 comdat align 2 {
  ret i32 20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18TransformOperation13PrimitiveTypeEv(%"class.blink::TransformOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::TransformOperation"* %0 to i32 (%"class.blink::TransformOperation"*)***
  %3 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %3, i64 7
  %5 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::TransformOperation"* %0) #7
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink30InterpolatedTransformOperation22PreservesAxisAlignmentEv(%"class.blink::InterpolatedTransformOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.scoped_refptr*, %class.scoped_refptr** %2, align 8
  %4 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %11

9:                                                ; preds = %11
  %10 = icmp eq %class.scoped_refptr* %20, %7
  br i1 %10, label %21, label %11

11:                                               ; preds = %1, %9
  %12 = phi %class.scoped_refptr* [ %20, %9 ], [ %3, %1 ]
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 0, i32 0
  %14 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %13, align 8
  %15 = bitcast %"class.blink::TransformOperation"* %14 to i1 (%"class.blink::TransformOperation"*)***
  %16 = load i1 (%"class.blink::TransformOperation"*)**, i1 (%"class.blink::TransformOperation"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::TransformOperation"*)*, i1 (%"class.blink::TransformOperation"*)** %16, i64 9
  %18 = load i1 (%"class.blink::TransformOperation"*)*, i1 (%"class.blink::TransformOperation"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::TransformOperation"* %14) #7
  %20 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 1
  br i1 %19, label %9, label %41

21:                                               ; preds = %9, %1
  %22 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr*, %class.scoped_refptr** %22, align 8
  %24 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %41, label %31

29:                                               ; preds = %31
  %30 = icmp eq %class.scoped_refptr* %40, %27
  br i1 %30, label %41, label %31

31:                                               ; preds = %21, %29
  %32 = phi %class.scoped_refptr* [ %40, %29 ], [ %23, %21 ]
  %33 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %32, i64 0, i32 0
  %34 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %33, align 8
  %35 = bitcast %"class.blink::TransformOperation"* %34 to i1 (%"class.blink::TransformOperation"*)***
  %36 = load i1 (%"class.blink::TransformOperation"*)**, i1 (%"class.blink::TransformOperation"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::TransformOperation"*)*, i1 (%"class.blink::TransformOperation"*)** %36, i64 9
  %38 = load i1 (%"class.blink::TransformOperation"*)*, i1 (%"class.blink::TransformOperation"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::TransformOperation"* %34) #7
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %32, i64 1
  br i1 %39, label %29, label %41

41:                                               ; preds = %11, %31, %29, %21
  %42 = phi i1 [ true, %21 ], [ false, %31 ], [ true, %29 ], [ false, %11 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink30InterpolatedTransformOperation23IsIdentityOrTranslationEv(%"class.blink::InterpolatedTransformOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %3 = load %class.scoped_refptr*, %class.scoped_refptr** %2, align 8
  %4 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = zext i32 %5 to i64
  %7 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %3, i64 %6
  %8 = icmp eq i32 %5, 0
  br i1 %8, label %21, label %11

9:                                                ; preds = %11
  %10 = icmp eq %class.scoped_refptr* %20, %7
  br i1 %10, label %21, label %11

11:                                               ; preds = %1, %9
  %12 = phi %class.scoped_refptr* [ %20, %9 ], [ %3, %1 ]
  %13 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 0, i32 0
  %14 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %13, align 8
  %15 = bitcast %"class.blink::TransformOperation"* %14 to i1 (%"class.blink::TransformOperation"*)***
  %16 = load i1 (%"class.blink::TransformOperation"*)**, i1 (%"class.blink::TransformOperation"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::TransformOperation"*)*, i1 (%"class.blink::TransformOperation"*)** %16, i64 10
  %18 = load i1 (%"class.blink::TransformOperation"*)*, i1 (%"class.blink::TransformOperation"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::TransformOperation"* %14) #7
  %20 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 1
  br i1 %19, label %9, label %41

21:                                               ; preds = %9, %1
  %22 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr*, %class.scoped_refptr** %22, align 8
  %24 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %26
  %28 = icmp eq i32 %25, 0
  br i1 %28, label %41, label %31

29:                                               ; preds = %31
  %30 = icmp eq %class.scoped_refptr* %40, %27
  br i1 %30, label %41, label %31

31:                                               ; preds = %21, %29
  %32 = phi %class.scoped_refptr* [ %40, %29 ], [ %23, %21 ]
  %33 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %32, i64 0, i32 0
  %34 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %33, align 8
  %35 = bitcast %"class.blink::TransformOperation"* %34 to i1 (%"class.blink::TransformOperation"*)***
  %36 = load i1 (%"class.blink::TransformOperation"*)**, i1 (%"class.blink::TransformOperation"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::TransformOperation"*)*, i1 (%"class.blink::TransformOperation"*)** %36, i64 10
  %38 = load i1 (%"class.blink::TransformOperation"*)*, i1 (%"class.blink::TransformOperation"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::TransformOperation"* %34) #7
  %40 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %32, i64 1
  br i1 %39, label %29, label %41

41:                                               ; preds = %11, %31, %29, %21
  %42 = phi i1 [ true, %21 ], [ false, %31 ], [ true, %29 ], [ false, %11 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18TransformOperation24HasNonTrivial3DComponentEv(%"class.blink::TransformOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::TransformOperation"* %0 to i32 (%"class.blink::TransformOperation"*)***
  %3 = load i32 (%"class.blink::TransformOperation"*)**, i32 (%"class.blink::TransformOperation"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %3, i64 7
  %5 = load i32 (%"class.blink::TransformOperation"*)*, i32 (%"class.blink::TransformOperation"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::TransformOperation"* %0) #7
  %7 = add i32 %6, -11
  %8 = icmp ult i32 %7, 10
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink30InterpolatedTransformOperation19BoxSizeDependenciesEv(%"class.blink::InterpolatedTransformOperation"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = tail call i32 @_ZNK5blink19TransformOperations19BoxSizeDependenciesEj(%"class.blink::TransformOperations"* %2, i32 %4) #7
  %6 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2
  %7 = load i32, i32* %3, align 8
  %8 = tail call i32 @_ZNK5blink19TransformOperations19BoxSizeDependenciesEj(%"class.blink::TransformOperations"* %6, i32 %7) #7
  %9 = or i32 %8, %5
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30InterpolatedTransformOperationC2ERKNS_19TransformOperationsES3_id(%"class.blink::InterpolatedTransformOperation"*, %"class.blink::TransformOperations"* dereferenceable(16), %"class.blink::TransformOperations"* dereferenceable(16), i32, double) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN5blink30InterpolatedTransformOperationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.scoped_refptr* null, %class.scoped_refptr** %11, align 8
  %12 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %5
  %15 = zext i32 %10 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm(i64 %15) #7
  %17 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %16, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink18TransformOperationEEEEPKcv, i64 0, i64 0)) #7
  %18 = ptrtoint i8* %17 to i64
  %19 = bitcast %"class.blink::TransformOperations"* %8 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = lshr i64 %16, 3
  %21 = trunc i64 %20 to i32
  store i32 %21, i32* %12, align 8
  %22 = bitcast i8* %17 to %class.scoped_refptr*
  br label %23

23:                                               ; preds = %14, %5
  %24 = phi %class.scoped_refptr* [ null, %5 ], [ %22, %14 ]
  %25 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 %26, i32* %27, align 4
  %28 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %class.scoped_refptr*, %class.scoped_refptr** %28, align 8
  %30 = load i32, i32* %25, align 4
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %29, i64 %31
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %47, label %34

34:                                               ; preds = %23, %43
  %35 = phi %class.scoped_refptr* [ %44, %43 ], [ %24, %23 ]
  %36 = phi %class.scoped_refptr* [ %45, %43 ], [ %29, %23 ]
  %37 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 0, i32 0
  %38 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %37, align 8
  %39 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %35, i64 0, i32 0
  store %"class.blink::TransformOperation"* %38, %"class.blink::TransformOperation"** %39, align 8
  %40 = icmp eq %"class.blink::TransformOperation"* %38, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %38, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %42) #7
  br label %43

43:                                               ; preds = %41, %34
  %44 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %35, i64 1
  %45 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %36, i64 1
  %46 = icmp eq %class.scoped_refptr* %45, %32
  br i1 %46, label %47, label %34

47:                                               ; preds = %43, %23
  %48 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2
  %49 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.scoped_refptr* null, %class.scoped_refptr** %51, align 8
  %52 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  store i32 0, i32* %52, align 8
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %47
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm(i64 %55) #7
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink18TransformOperationEEEEPKcv, i64 0, i64 0)) #7
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.blink::TransformOperations"* %48 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %52, align 8
  %62 = bitcast i8* %57 to %class.scoped_refptr*
  br label %63

63:                                               ; preds = %54, %47
  %64 = phi %class.scoped_refptr* [ null, %47 ], [ %62, %54 ]
  %65 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load %class.scoped_refptr*, %class.scoped_refptr** %68, align 8
  %70 = load i32, i32* %65, align 4
  %71 = zext i32 %70 to i64
  %72 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %69, i64 %71
  %73 = icmp eq i32 %70, 0
  br i1 %73, label %87, label %74

74:                                               ; preds = %63, %83
  %75 = phi %class.scoped_refptr* [ %84, %83 ], [ %64, %63 ]
  %76 = phi %class.scoped_refptr* [ %85, %83 ], [ %69, %63 ]
  %77 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %75, i64 0, i32 0
  store %"class.blink::TransformOperation"* %78, %"class.blink::TransformOperation"** %79, align 8
  %80 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %82) #7
  br label %83

83:                                               ; preds = %81, %74
  %84 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %75, i64 1
  %85 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %76, i64 1
  %86 = icmp eq %class.scoped_refptr* %85, %72
  br i1 %86, label %87, label %74

87:                                               ; preds = %83, %63
  %88 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 3
  store i32 %3, i32* %88, align 8
  %89 = getelementptr inbounds %"class.blink::InterpolatedTransformOperation", %"class.blink::InterpolatedTransformOperation"* %0, i64 0, i32 4
  store double %4, double* %89, align 8
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #7
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #7
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #7
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #7
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #7
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #7
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

declare void @_ZNK5blink19TransformOperations4ZoomEd(%"class.blink::TransformOperations"* sret, %"class.blink::TransformOperations"*, double) local_unnamed_addr #2

declare i32 @_ZNK5blink19TransformOperations19BoxSizeDependenciesEj(%"class.blink::TransformOperations"*, i32) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPNS2_30InterpolatedTransformOperationEEEvOT_(%"class.WTF::Vector"*, %"class.blink::InterpolatedTransformOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq %class.scoped_refptr* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm(i64 %20) #7
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink18TransformOperationEEEEPKcv, i64 0, i64 0)) #7
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %class.scoped_refptr* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %class.scoped_refptr* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #7
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #7
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %class.scoped_refptr*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %class.scoped_refptr* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = bitcast %"class.blink::InterpolatedTransformOperation"** %1 to %"class.blink::TransformOperation"**
  %50 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %49, align 8
  %51 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 %48, i32 0
  store %"class.blink::TransformOperation"* %50, %"class.blink::TransformOperation"** %51, align 8
  %52 = icmp eq %"class.blink::TransformOperation"* %50, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %50, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %54) #7
  br label %55

55:                                               ; preds = %45, %53
  %56 = load i32, i32* %3, align 4
  %57 = add i32 %56, 1
  store i32 %57, i32* %3, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI13scoped_refptrIN5blink18TransformOperationEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::TransformOperation"** dereferenceable(8)) local_unnamed_addr #6 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq %class.scoped_refptr* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI13scoped_refptrIN5blink18TransformOperationEEEEmm(i64 %20) #7
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI13scoped_refptrIN5blink18TransformOperationEEEEPKcv, i64 0, i64 0)) #7
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load %class.scoped_refptr*, %class.scoped_refptr** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne %class.scoped_refptr* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast %class.scoped_refptr* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %22, i8* nonnull align 8 %31, i64 %35, i1 false) #7
  %36 = bitcast %"class.WTF::Vector"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #7
  %40 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 3
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to %class.scoped_refptr*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi %class.scoped_refptr* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %1, align 8
  %50 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %46, i64 %48, i32 0
  store %"class.blink::TransformOperation"* %49, %"class.blink::TransformOperation"** %50, align 8
  %51 = icmp eq %"class.blink::TransformOperation"* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %49, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %53) #7
  br label %54

54:                                               ; preds = %45, %52
  %55 = load i32, i32* %3, align 4
  %56 = add i32 %55, 1
  store i32 %56, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
