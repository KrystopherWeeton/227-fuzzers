; ModuleID = '../../third_party/skia/modules/skottie/src/text/TextAnimator.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/text/TextAnimator.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skottie::internal::TextAnimator" = type <{ %class.SkNVRefCnt, [4 x i8], %"class.std::__1::vector.30", %"struct.skottie::internal::TextAnimator::AnimatedProps", i8, [7 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %class.sk_sp.32*, %class.sk_sp.32*, %"class.std::__1::__compressed_pair.34" }
%class.sk_sp.32 = type { %"class.skottie::internal::RangeSelector"* }
%"class.skottie::internal::RangeSelector" = type { %class.SkNVRefCnt.33, i8, i8, i8, i8, float, float, float, float, float, float, float }
%class.SkNVRefCnt.33 = type { %"struct.std::__1::atomic" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %class.sk_sp.32* }
%"struct.skottie::internal::TextAnimator::AnimatedProps" = type <{ %"class.skottie::VectorValue", %"class.skottie::VectorValue", %"class.skottie::VectorValue", %"class.skottie::VectorValue", %struct.SkV3, %struct.SkV2, %struct.SkV2, float, float, float, float, [4 x i8] }>
%"class.skottie::VectorValue" = type { %"class.std::__1::vector.39" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { float*, float*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { float* }
%struct.SkV3 = type { float, float, float }
%struct.SkV2 = type { float, float }
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%struct.SkSize = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%class.sk_sp.29 = type { %"class.skottie::internal::TextAnimator"* }
%"struct.skottie::internal::TextAnimator::DomainMaps" = type { %"class.std::__1::vector.47", %"class.std::__1::vector.47", %"class.std::__1::vector.47" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"struct.skottie::internal::TextAnimator::DomainSpan"*, %"struct.skottie::internal::TextAnimator::DomainSpan"*, %"class.std::__1::__compressed_pair.49" }
%"struct.skottie::internal::TextAnimator::DomainSpan" = type { i64, i64, float, float }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.skottie::internal::TextAnimator::DomainSpan"* }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"*, %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"*, %"class.std::__1::__compressed_pair.56" }
%"struct.skottie::internal::TextAnimator::AnimatedPropsModulator" = type { %"struct.skottie::internal::TextAnimator::ResolvedProps", float }
%"struct.skottie::internal::TextAnimator::ResolvedProps" = type { %struct.SkV3, %struct.SkV3, %struct.SkV3, float, float, i32, i32, %struct.SkV2, %struct.SkV2 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorI5sk_spIN7skottie8internal13RangeSelectorEENS_9allocatorIS5_EEE7reserveEm = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal13RangeSelectorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@.str = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"p\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"o\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c"fo\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"so\00", align 1
@.str.6 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.7 = private unnamed_addr constant [3 x i8] c"ls\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"rx\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"ry\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"fc\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"sc\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"bl\00", align 1
@.ref.tmp = private unnamed_addr constant [3 x float] [float 1.000000e+02, float 1.000000e+02, float 1.000000e+02], align 4

@_ZN7skottie8internal12TextAnimatorC1EONSt3__16vectorI5sk_spINS0_13RangeSelectorEENS2_9allocatorIS6_EEEERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEPNS0_27AnimatablePropertyContainerE = hidden unnamed_addr alias void (%"class.skottie::internal::TextAnimator"*, %"class.std::__1::vector.30"*, %"class.skjson::ObjectValue"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimatablePropertyContainer"*), void (%"class.skottie::internal::TextAnimator"*, %"class.std::__1::vector.30"*, %"class.skjson::ObjectValue"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimatablePropertyContainer"*)* @_ZN7skottie8internal12TextAnimatorC2EONSt3__16vectorI5sk_spINS0_13RangeSelectorEENS2_9allocatorIS6_EEEERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEPNS0_27AnimatablePropertyContainerE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12TextAnimator4MakeEPKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEPNS0_27AnimatablePropertyContainerE(%class.sk_sp.29* noalias nocapture sret, %"class.skjson::ObjectValue"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector.30", align 8
  %6 = alloca %class.sk_sp.32, align 8
  %7 = alloca %class.sk_sp.32, align 8
  %8 = icmp eq %"class.skjson::ObjectValue"* %1, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.sk_sp.29, %class.sk_sp.29* %0, i64 0, i32 0
  store %"class.skottie::internal::TextAnimator"* null, %"class.skottie::internal::TextAnimator"** %10, align 8
  br label %281

11:                                               ; preds = %4
  %12 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #11
  %13 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %12, i64 0, i32 0, i64 0
  %14 = load i8, i8* %13, align 8
  %15 = and i8 %14, 7
  %16 = icmp ne i8 %15, 7
  %17 = bitcast %"class.skjson::Value"* %12 to %"class.skjson::ObjectValue"*
  %18 = icmp eq %"class.skjson::Value"* %12, null
  %19 = or i1 %18, %16
  br i1 %19, label %20, label %22

20:                                               ; preds = %11
  %21 = getelementptr inbounds %class.sk_sp.29, %class.sk_sp.29* %0, i64 0, i32 0
  store %"class.skottie::internal::TextAnimator"* null, %"class.skottie::internal::TextAnimator"** %21, align 8
  br label %281

22:                                               ; preds = %11
  %23 = bitcast %"class.std::__1::vector.30"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #11
  %27 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #11
  %28 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %27, i64 0, i32 0, i64 0
  %29 = load i8, i8* %28, align 8
  %30 = and i8 %29, 7
  %31 = icmp ne i8 %30, 6
  %32 = icmp eq %"class.skjson::Value"* %27, null
  %33 = or i1 %32, %31
  br i1 %33, label %91, label %34

34:                                               ; preds = %22
  %35 = bitcast %"class.skjson::Value"* %27 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, -8
  %38 = inttoptr i64 %37 to i64*
  %39 = load i64, i64* %38, align 8
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal13RangeSelectorEENS_9allocatorIS5_EEE7reserveEm(%"class.std::__1::vector.30"* nonnull %5, i64 %39)
  %40 = load i64, i64* %35, align 8
  %41 = and i64 %40, -8
  %42 = inttoptr i64 %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = add nsw i64 %43, 1
  %45 = getelementptr inbounds i64, i64* %42, i64 %44
  %46 = bitcast i64* %45 to %"class.skjson::Value"*
  %47 = icmp eq i64 %43, 0
  br i1 %47, label %251, label %48

48:                                               ; preds = %34
  %49 = getelementptr inbounds i64, i64* %42, i64 1
  %50 = bitcast i64* %49 to %"class.skjson::Value"*
  %51 = bitcast %class.sk_sp.32* %6 to i8*
  %52 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %6, i64 0, i32 0
  %53 = bitcast %class.sk_sp.32** %25 to i64*
  br label %54

54:                                               ; preds = %48, %88
  %55 = phi %"class.skjson::Value"* [ %50, %48 ], [ %89, %88 ]
  %56 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %55, i64 0, i32 0, i64 0
  %57 = load i8, i8* %56, align 8
  %58 = and i8 %57, 7
  %59 = icmp eq i8 %58, 7
  %60 = bitcast %"class.skjson::Value"* %55 to %"class.skjson::ObjectValue"*
  %61 = select i1 %59, %"class.skjson::ObjectValue"* %60, %"class.skjson::ObjectValue"* null
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  store %"class.skottie::internal::RangeSelector"* inttoptr (i64 -6148914691236517206 to %"class.skottie::internal::RangeSelector"*), %"class.skottie::internal::RangeSelector"** %52, align 8
  %62 = getelementptr inbounds %"class.skjson::ObjectValue", %"class.skjson::ObjectValue"* %61, i64 0, i32 0, i32 0, i32 0, i64 0
  %63 = load i8, i8* %62, align 8
  %64 = and i8 %63, 7
  %65 = icmp eq i8 %64, 7
  %66 = select i1 %65, %"class.skjson::ObjectValue"* %61, %"class.skjson::ObjectValue"* null
  call void @_ZN7skottie8internal13RangeSelector4MakeEPKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEPNS0_27AnimatablePropertyContainerE(%class.sk_sp.32* nonnull sret %6, %"class.skjson::ObjectValue"* %66, %"class.skottie::internal::AnimationBuilder"* %2, %"class.skottie::internal::AnimatablePropertyContainer"* %3) #11
  %67 = load %"class.skottie::internal::RangeSelector"*, %"class.skottie::internal::RangeSelector"** %52, align 8
  %68 = icmp eq %"class.skottie::internal::RangeSelector"* %67, null
  %69 = ptrtoint %"class.skottie::internal::RangeSelector"* %67 to i64
  br i1 %68, label %88, label %70

70:                                               ; preds = %54
  %71 = load %class.sk_sp.32*, %class.sk_sp.32** %25, align 8
  %72 = load %class.sk_sp.32*, %class.sk_sp.32** %26, align 8
  %73 = icmp ult %class.sk_sp.32* %71, %72
  br i1 %73, label %74, label %78

74:                                               ; preds = %70
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %52, align 8
  %75 = bitcast %class.sk_sp.32* %71 to i64*
  store i64 %69, i64* %75, align 8
  %76 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %71, i64 1
  %77 = ptrtoint %class.sk_sp.32* %76 to i64
  store i64 %77, i64* %53, align 8
  br label %79

78:                                               ; preds = %70
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal13RangeSelectorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.30"* nonnull %5, %class.sk_sp.32* nonnull dereferenceable(8) %6) #11
  br label %79

79:                                               ; preds = %78, %74
  %80 = load %"class.skottie::internal::RangeSelector"*, %"class.skottie::internal::RangeSelector"** %52, align 8
  %81 = icmp eq %"class.skottie::internal::RangeSelector"* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.skottie::internal::RangeSelector", %"class.skottie::internal::RangeSelector"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = bitcast %"class.skottie::internal::RangeSelector"* %80 to i8*
  call void @_ZdlPv(i8* %87) #12
  br label %88

88:                                               ; preds = %54, %79, %82, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  %89 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %55, i64 1
  %90 = icmp eq %"class.skjson::Value"* %89, %46
  br i1 %90, label %251, label %54

91:                                               ; preds = %22
  %92 = bitcast %class.sk_sp.32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #11
  %93 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %7, i64 0, i32 0
  store %"class.skottie::internal::RangeSelector"* inttoptr (i64 -6148914691236517206 to %"class.skottie::internal::RangeSelector"*), %"class.skottie::internal::RangeSelector"** %93, align 8
  %94 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* nonnull %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #11
  %95 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %94, i64 0, i32 0, i64 0
  %96 = load i8, i8* %95, align 8
  %97 = and i8 %96, 7
  %98 = icmp eq i8 %97, 7
  %99 = bitcast %"class.skjson::Value"* %94 to %"class.skjson::ObjectValue"*
  %100 = select i1 %98, %"class.skjson::ObjectValue"* %99, %"class.skjson::ObjectValue"* null
  call void @_ZN7skottie8internal13RangeSelector4MakeEPKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEPNS0_27AnimatablePropertyContainerE(%class.sk_sp.32* nonnull sret %7, %"class.skjson::ObjectValue"* %100, %"class.skottie::internal::AnimationBuilder"* %2, %"class.skottie::internal::AnimatablePropertyContainer"* %3) #11
  %101 = load %"class.skottie::internal::RangeSelector"*, %"class.skottie::internal::RangeSelector"** %93, align 8
  %102 = icmp eq %"class.skottie::internal::RangeSelector"* %101, null
  br i1 %102, label %250, label %103

103:                                              ; preds = %91
  %104 = bitcast %class.sk_sp.32** %26 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.std::__1::vector.30"* %5 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %105, %107
  %109 = inttoptr i64 %107 to %class.sk_sp.32*
  br i1 %108, label %110, label %229

110:                                              ; preds = %103
  %111 = bitcast %class.sk_sp.32** %25 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %112, %105
  %114 = ashr exact i64 %113, 3
  %115 = call i8* @_Znwm(i64 8) #12
  %116 = bitcast i8* %115 to %class.sk_sp.32*
  %117 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %116, i64 %114
  %118 = ptrtoint %class.sk_sp.32* %117 to i64
  %119 = getelementptr inbounds i8, i8* %115, i64 8
  %120 = ptrtoint i8* %119 to i64
  %121 = inttoptr i64 %112 to %class.sk_sp.32*
  %122 = icmp eq %class.sk_sp.32* %121, %109
  br i1 %122, label %150, label %123

123:                                              ; preds = %110
  %124 = getelementptr %class.sk_sp.32, %class.sk_sp.32* %121, i64 -1, i32 0
  %125 = bitcast %"class.skottie::internal::RangeSelector"** %124 to i8*
  %126 = sub i64 0, %107
  %127 = getelementptr i8, i8* %125, i64 %126
  %128 = ptrtoint i8* %127 to i64
  %129 = lshr i64 %128, 3
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 7
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %145, label %133

133:                                              ; preds = %123, %133
  %134 = phi %class.sk_sp.32* [ %137, %133 ], [ %117, %123 ]
  %135 = phi %class.sk_sp.32* [ %138, %133 ], [ %121, %123 ]
  %136 = phi i64 [ %143, %133 ], [ %131, %123 ]
  %137 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %134, i64 -1
  %138 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %135, i64 -1
  %139 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %138, i64 0, i32 0
  %140 = bitcast %class.sk_sp.32* %138 to i64*
  %141 = load i64, i64* %140, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %139, align 8
  %142 = bitcast %class.sk_sp.32* %137 to i64*
  store i64 %141, i64* %142, align 8
  %143 = add i64 %136, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %133, !llvm.loop !2

145:                                              ; preds = %133, %123
  %146 = phi %class.sk_sp.32* [ undef, %123 ], [ %137, %133 ]
  %147 = phi %class.sk_sp.32* [ %117, %123 ], [ %137, %133 ]
  %148 = phi %class.sk_sp.32* [ %121, %123 ], [ %138, %133 ]
  %149 = icmp ult i8* %127, inttoptr (i64 56 to i8*)
  br i1 %149, label %203, label %151

150:                                              ; preds = %110
  store i64 %118, i64* %106, align 8
  store i64 %118, i64* %111, align 8
  store i64 %120, i64* %104, align 8
  br label %224

151:                                              ; preds = %145, %151
  %152 = phi %class.sk_sp.32* [ %196, %151 ], [ %147, %145 ]
  %153 = phi %class.sk_sp.32* [ %197, %151 ], [ %148, %145 ]
  %154 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %152, i64 -1
  %155 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %153, i64 -1
  %156 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %155, i64 0, i32 0
  %157 = bitcast %class.sk_sp.32* %155 to i64*
  %158 = load i64, i64* %157, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %156, align 8
  %159 = bitcast %class.sk_sp.32* %154 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %152, i64 -2
  %161 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %153, i64 -2
  %162 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %161, i64 0, i32 0
  %163 = bitcast %class.sk_sp.32* %161 to i64*
  %164 = load i64, i64* %163, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %162, align 8
  %165 = bitcast %class.sk_sp.32* %160 to i64*
  store i64 %164, i64* %165, align 8
  %166 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %152, i64 -3
  %167 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %153, i64 -3
  %168 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %167, i64 0, i32 0
  %169 = bitcast %class.sk_sp.32* %167 to i64*
  %170 = load i64, i64* %169, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %168, align 8
  %171 = bitcast %class.sk_sp.32* %166 to i64*
  store i64 %170, i64* %171, align 8
  %172 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %152, i64 -4
  %173 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %153, i64 -4
  %174 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %173, i64 0, i32 0
  %175 = bitcast %class.sk_sp.32* %173 to i64*
  %176 = load i64, i64* %175, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %174, align 8
  %177 = bitcast %class.sk_sp.32* %172 to i64*
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %152, i64 -5
  %179 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %153, i64 -5
  %180 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %179, i64 0, i32 0
  %181 = bitcast %class.sk_sp.32* %179 to i64*
  %182 = load i64, i64* %181, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %180, align 8
  %183 = bitcast %class.sk_sp.32* %178 to i64*
  store i64 %182, i64* %183, align 8
  %184 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %152, i64 -6
  %185 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %153, i64 -6
  %186 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %185, i64 0, i32 0
  %187 = bitcast %class.sk_sp.32* %185 to i64*
  %188 = load i64, i64* %187, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %186, align 8
  %189 = bitcast %class.sk_sp.32* %184 to i64*
  store i64 %188, i64* %189, align 8
  %190 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %152, i64 -7
  %191 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %153, i64 -7
  %192 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %191, i64 0, i32 0
  %193 = bitcast %class.sk_sp.32* %191 to i64*
  %194 = load i64, i64* %193, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %192, align 8
  %195 = bitcast %class.sk_sp.32* %190 to i64*
  store i64 %194, i64* %195, align 8
  %196 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %152, i64 -8
  %197 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %153, i64 -8
  %198 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %197, i64 0, i32 0
  %199 = bitcast %class.sk_sp.32* %197 to i64*
  %200 = load i64, i64* %199, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %198, align 8
  %201 = bitcast %class.sk_sp.32* %196 to i64*
  store i64 %200, i64* %201, align 8
  %202 = icmp eq %class.sk_sp.32* %197, %109
  br i1 %202, label %203, label %151

203:                                              ; preds = %151, %145
  %204 = phi %class.sk_sp.32* [ %146, %145 ], [ %196, %151 ]
  %205 = ptrtoint %class.sk_sp.32* %204 to i64
  %206 = load i64, i64* %106, align 8
  %207 = load %class.sk_sp.32*, %class.sk_sp.32** %25, align 8
  %208 = inttoptr i64 %206 to %class.sk_sp.32*
  store i64 %205, i64* %106, align 8
  store i64 %118, i64* %111, align 8
  store i64 %120, i64* %104, align 8
  %209 = icmp eq %class.sk_sp.32* %207, %208
  br i1 %209, label %224, label %210

210:                                              ; preds = %203, %222
  %211 = phi %class.sk_sp.32* [ %212, %222 ], [ %207, %203 ]
  %212 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %211, i64 -1
  %213 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %212, i64 0, i32 0
  %214 = load %"class.skottie::internal::RangeSelector"*, %"class.skottie::internal::RangeSelector"** %213, align 8
  %215 = icmp eq %"class.skottie::internal::RangeSelector"* %214, null
  br i1 %215, label %222, label %216

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"class.skottie::internal::RangeSelector", %"class.skottie::internal::RangeSelector"* %214, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = atomicrmw add i32* %217, i32 -1 acq_rel
  %219 = icmp eq i32 %218, 1
  br i1 %219, label %220, label %222

220:                                              ; preds = %216
  %221 = bitcast %"class.skottie::internal::RangeSelector"* %214 to i8*
  call void @_ZdlPv(i8* %221) #12
  br label %222

222:                                              ; preds = %220, %216, %210
  %223 = icmp eq %class.sk_sp.32* %212, %208
  br i1 %223, label %224, label %210

224:                                              ; preds = %222, %203, %150
  %225 = phi i64 [ %105, %150 ], [ %206, %203 ], [ %206, %222 ]
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %229, label %227

227:                                              ; preds = %224
  %228 = inttoptr i64 %225 to i8*
  call void @_ZdlPv(i8* %228) #12
  br label %229

229:                                              ; preds = %103, %224, %227
  %230 = load %class.sk_sp.32*, %class.sk_sp.32** %25, align 8
  %231 = load %class.sk_sp.32*, %class.sk_sp.32** %26, align 8
  %232 = icmp ult %class.sk_sp.32* %230, %231
  br i1 %232, label %233, label %240

233:                                              ; preds = %229
  %234 = bitcast %class.sk_sp.32* %7 to i64*
  %235 = load i64, i64* %234, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %93, align 8
  %236 = bitcast %class.sk_sp.32* %230 to i64*
  store i64 %235, i64* %236, align 8
  %237 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %230, i64 1
  %238 = ptrtoint %class.sk_sp.32* %237 to i64
  %239 = bitcast %class.sk_sp.32** %25 to i64*
  store i64 %238, i64* %239, align 8
  br label %241

240:                                              ; preds = %229
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal13RangeSelectorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.30"* nonnull %5, %class.sk_sp.32* nonnull dereferenceable(8) %7) #11
  br label %241

241:                                              ; preds = %240, %233
  %242 = load %"class.skottie::internal::RangeSelector"*, %"class.skottie::internal::RangeSelector"** %93, align 8
  %243 = icmp eq %"class.skottie::internal::RangeSelector"* %242, null
  br i1 %243, label %250, label %244

244:                                              ; preds = %241
  %245 = getelementptr inbounds %"class.skottie::internal::RangeSelector", %"class.skottie::internal::RangeSelector"* %242, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = atomicrmw add i32* %245, i32 -1 acq_rel
  %247 = icmp eq i32 %246, 1
  br i1 %247, label %248, label %250

248:                                              ; preds = %244
  %249 = bitcast %"class.skottie::internal::RangeSelector"* %242 to i8*
  call void @_ZdlPv(i8* %249) #12
  br label %250

250:                                              ; preds = %91, %241, %244, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #11
  br label %251

251:                                              ; preds = %88, %34, %250
  %252 = call i8* @_Znwm(i64 184) #12
  %253 = bitcast i8* %252 to %"class.skottie::internal::TextAnimator"*
  call void @_ZN7skottie8internal12TextAnimatorC2EONSt3__16vectorI5sk_spINS0_13RangeSelectorEENS2_9allocatorIS6_EEEERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEPNS0_27AnimatablePropertyContainerE(%"class.skottie::internal::TextAnimator"* nonnull %253, %"class.std::__1::vector.30"* nonnull dereferenceable(24) %5, %"class.skjson::ObjectValue"* nonnull dereferenceable(8) %17, %"class.skottie::internal::AnimationBuilder"* %2, %"class.skottie::internal::AnimatablePropertyContainer"* %3)
  %254 = bitcast %class.sk_sp.29* %0 to i8**
  store i8* %252, i8** %254, align 8
  %255 = load %class.sk_sp.32*, %class.sk_sp.32** %24, align 8
  %256 = icmp eq %class.sk_sp.32* %255, null
  br i1 %256, label %280, label %257

257:                                              ; preds = %251
  %258 = bitcast %class.sk_sp.32* %255 to i8*
  %259 = load %class.sk_sp.32*, %class.sk_sp.32** %25, align 8
  %260 = icmp eq %class.sk_sp.32* %259, %255
  br i1 %260, label %278, label %261

261:                                              ; preds = %257, %273
  %262 = phi %class.sk_sp.32* [ %263, %273 ], [ %259, %257 ]
  %263 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %262, i64 -1
  %264 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %263, i64 0, i32 0
  %265 = load %"class.skottie::internal::RangeSelector"*, %"class.skottie::internal::RangeSelector"** %264, align 8
  %266 = icmp eq %"class.skottie::internal::RangeSelector"* %265, null
  br i1 %266, label %273, label %267

267:                                              ; preds = %261
  %268 = getelementptr inbounds %"class.skottie::internal::RangeSelector", %"class.skottie::internal::RangeSelector"* %265, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = atomicrmw add i32* %268, i32 -1 acq_rel
  %270 = icmp eq i32 %269, 1
  br i1 %270, label %271, label %273

271:                                              ; preds = %267
  %272 = bitcast %"class.skottie::internal::RangeSelector"* %265 to i8*
  call void @_ZdlPv(i8* %272) #12
  br label %273

273:                                              ; preds = %271, %267, %261
  %274 = icmp eq %class.sk_sp.32* %263, %255
  br i1 %274, label %275, label %261

275:                                              ; preds = %273
  %276 = bitcast %"class.std::__1::vector.30"* %5 to i8**
  %277 = load i8*, i8** %276, align 8
  br label %278

278:                                              ; preds = %275, %257
  %279 = phi i8* [ %277, %275 ], [ %258, %257 ]
  store %class.sk_sp.32* %255, %class.sk_sp.32** %25, align 8
  call void @_ZdlPv(i8* %279) #12
  br label %280

280:                                              ; preds = %251, %278
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #11
  br label %281

281:                                              ; preds = %20, %280, %9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal13RangeSelectorEENS_9allocatorIS5_EEE7reserveEm(%"class.std::__1::vector.30"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %class.sk_sp.32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.30"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %class.sk_sp.32*
  br i1 %10, label %12, label %136

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %class.sk_sp.32** %13 to i64*
  %15 = icmp ugt i64 %1, 2305843009213693951
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #13
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 3
  %21 = shl i64 %1, 3
  %22 = tail call i8* @_Znwm(i64 %21) #12
  %23 = bitcast i8* %22 to %class.sk_sp.32*
  %24 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %23, i64 %20
  %25 = ptrtoint %class.sk_sp.32* %24 to i64
  %26 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %23, i64 %1
  %27 = ptrtoint %class.sk_sp.32* %26 to i64
  %28 = inttoptr i64 %18 to %class.sk_sp.32*
  %29 = icmp eq %class.sk_sp.32* %28, %11
  br i1 %29, label %57, label %30

30:                                               ; preds = %17
  %31 = getelementptr %class.sk_sp.32, %class.sk_sp.32* %28, i64 -1, i32 0
  %32 = bitcast %"class.skottie::internal::RangeSelector"** %31 to i8*
  %33 = sub i64 0, %7
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 7
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %52, label %40

40:                                               ; preds = %30, %40
  %41 = phi %class.sk_sp.32* [ %44, %40 ], [ %24, %30 ]
  %42 = phi %class.sk_sp.32* [ %45, %40 ], [ %28, %30 ]
  %43 = phi i64 [ %50, %40 ], [ %38, %30 ]
  %44 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %41, i64 -1
  %45 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %42, i64 -1
  %46 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %45, i64 0, i32 0
  %47 = bitcast %class.sk_sp.32* %45 to i64*
  %48 = load i64, i64* %47, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %46, align 8
  %49 = bitcast %class.sk_sp.32* %44 to i64*
  store i64 %48, i64* %49, align 8
  %50 = add i64 %43, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %40, !llvm.loop !4

52:                                               ; preds = %40, %30
  %53 = phi %class.sk_sp.32* [ undef, %30 ], [ %44, %40 ]
  %54 = phi %class.sk_sp.32* [ %24, %30 ], [ %44, %40 ]
  %55 = phi %class.sk_sp.32* [ %28, %30 ], [ %45, %40 ]
  %56 = icmp ult i8* %34, inttoptr (i64 56 to i8*)
  br i1 %56, label %110, label %58

57:                                               ; preds = %17
  store i64 %25, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  br label %131

58:                                               ; preds = %52, %58
  %59 = phi %class.sk_sp.32* [ %103, %58 ], [ %54, %52 ]
  %60 = phi %class.sk_sp.32* [ %104, %58 ], [ %55, %52 ]
  %61 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %59, i64 -1
  %62 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %60, i64 -1
  %63 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %62, i64 0, i32 0
  %64 = bitcast %class.sk_sp.32* %62 to i64*
  %65 = load i64, i64* %64, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %63, align 8
  %66 = bitcast %class.sk_sp.32* %61 to i64*
  store i64 %65, i64* %66, align 8
  %67 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %59, i64 -2
  %68 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %60, i64 -2
  %69 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %68, i64 0, i32 0
  %70 = bitcast %class.sk_sp.32* %68 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %69, align 8
  %72 = bitcast %class.sk_sp.32* %67 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %59, i64 -3
  %74 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %60, i64 -3
  %75 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %74, i64 0, i32 0
  %76 = bitcast %class.sk_sp.32* %74 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %75, align 8
  %78 = bitcast %class.sk_sp.32* %73 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %59, i64 -4
  %80 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %60, i64 -4
  %81 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.32* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %81, align 8
  %84 = bitcast %class.sk_sp.32* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %59, i64 -5
  %86 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %60, i64 -5
  %87 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.32* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %87, align 8
  %90 = bitcast %class.sk_sp.32* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %59, i64 -6
  %92 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %60, i64 -6
  %93 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.32* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %93, align 8
  %96 = bitcast %class.sk_sp.32* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %59, i64 -7
  %98 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %60, i64 -7
  %99 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.32* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %99, align 8
  %102 = bitcast %class.sk_sp.32* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %59, i64 -8
  %104 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %60, i64 -8
  %105 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.32* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %105, align 8
  %108 = bitcast %class.sk_sp.32* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = icmp eq %class.sk_sp.32* %104, %11
  br i1 %109, label %110, label %58

110:                                              ; preds = %58, %52
  %111 = phi %class.sk_sp.32* [ %53, %52 ], [ %103, %58 ]
  %112 = ptrtoint %class.sk_sp.32* %111 to i64
  %113 = load i64, i64* %6, align 8
  %114 = load %class.sk_sp.32*, %class.sk_sp.32** %13, align 8
  %115 = inttoptr i64 %113 to %class.sk_sp.32*
  store i64 %112, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %116 = icmp eq %class.sk_sp.32* %114, %115
  br i1 %116, label %131, label %117

117:                                              ; preds = %110, %129
  %118 = phi %class.sk_sp.32* [ %119, %129 ], [ %114, %110 ]
  %119 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %118, i64 -1
  %120 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %119, i64 0, i32 0
  %121 = load %"class.skottie::internal::RangeSelector"*, %"class.skottie::internal::RangeSelector"** %120, align 8
  %122 = icmp eq %"class.skottie::internal::RangeSelector"* %121, null
  br i1 %122, label %129, label %123

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.skottie::internal::RangeSelector", %"class.skottie::internal::RangeSelector"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = atomicrmw add i32* %124, i32 -1 acq_rel
  %126 = icmp eq i32 %125, 1
  br i1 %126, label %127, label %129

127:                                              ; preds = %123
  %128 = bitcast %"class.skottie::internal::RangeSelector"* %121 to i8*
  tail call void @_ZdlPv(i8* %128) #12
  br label %129

129:                                              ; preds = %127, %123, %117
  %130 = icmp eq %class.sk_sp.32* %119, %115
  br i1 %130, label %131, label %117

131:                                              ; preds = %129, %57, %110
  %132 = phi i64 [ %7, %57 ], [ %113, %110 ], [ %113, %129 ]
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %131
  %135 = inttoptr i64 %132 to i8*
  tail call void @_ZdlPv(i8* %135) #12
  br label %136

136:                                              ; preds = %134, %131, %2
  ret void
}

declare void @_ZN7skottie8internal13RangeSelector4MakeEPKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEPNS0_27AnimatablePropertyContainerE(%class.sk_sp.32* sret, %"class.skjson::ObjectValue"*, %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimatablePropertyContainer"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal12TextAnimator13modulatePropsERKNS1_10DomainMapsERNSt3__16vectorINS1_22AnimatedPropsModulatorENS5_9allocatorIS7_EEEE(%"class.skottie::internal::TextAnimator"*, %"struct.skottie::internal::TextAnimator::DomainMaps"* dereferenceable(72), %"class.std::__1::vector.54"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.skottie::internal::TextAnimator::ResolvedProps", align 4
  %5 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %class.sk_sp.32*, %class.sk_sp.32** %5, align 8
  %7 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 2, i32 0, i32 1
  %8 = load %class.sk_sp.32*, %class.sk_sp.32** %7, align 8
  %9 = icmp eq %class.sk_sp.32* %6, %8
  %10 = select i1 %9, float 1.000000e+00, float 0.000000e+00
  %11 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %2, i64 0, i32 0, i32 0
  %12 = load %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"*, %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector.54", %"class.std::__1::vector.54"* %2, i64 0, i32 0, i32 1
  %14 = load %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"*, %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"** %13, align 8
  %15 = icmp eq %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* %12, %14
  br i1 %15, label %19, label %23

16:                                               ; preds = %23
  %17 = load %class.sk_sp.32*, %class.sk_sp.32** %5, align 8
  %18 = load %class.sk_sp.32*, %class.sk_sp.32** %7, align 8
  br label %19

19:                                               ; preds = %16, %3
  %20 = phi %class.sk_sp.32* [ %18, %16 ], [ %8, %3 ]
  %21 = phi %class.sk_sp.32* [ %17, %16 ], [ %6, %3 ]
  %22 = icmp eq %class.sk_sp.32* %21, %20
  br i1 %22, label %28, label %34

23:                                               ; preds = %3, %23
  %24 = phi %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* [ %26, %23 ], [ %12, %3 ]
  %25 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator", %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* %24, i64 0, i32 1
  store float %10, float* %25, align 4
  %26 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator", %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* %24, i64 1
  %27 = icmp eq %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* %26, %14
  br i1 %27, label %16, label %23

28:                                               ; preds = %34, %19
  %29 = load %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"*, %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"** %11, align 8
  %30 = load %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"*, %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"** %13, align 8
  %31 = icmp eq %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* %29, %30
  br i1 %31, label %40, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.skottie::internal::TextAnimator::ResolvedProps"* %4 to i8*
  br label %41

34:                                               ; preds = %19, %34
  %35 = phi %class.sk_sp.32* [ %38, %34 ], [ %21, %19 ]
  %36 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %35, i64 0, i32 0
  %37 = load %"class.skottie::internal::RangeSelector"*, %"class.skottie::internal::RangeSelector"** %36, align 8
  tail call void @_ZNK7skottie8internal13RangeSelector16modulateCoverageERKNS0_12TextAnimator10DomainMapsERNSt3__16vectorINS2_22AnimatedPropsModulatorENS6_9allocatorIS8_EEEE(%"class.skottie::internal::RangeSelector"* %37, %"struct.skottie::internal::TextAnimator::DomainMaps"* dereferenceable(72) %1, %"class.std::__1::vector.54"* dereferenceable(24) %2) #11
  %38 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %35, i64 1
  %39 = icmp eq %class.sk_sp.32* %38, %20
  br i1 %39, label %28, label %34

40:                                               ; preds = %41, %28
  ret void

41:                                               ; preds = %32, %41
  %42 = phi %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* [ %29, %32 ], [ %47, %41 ]
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %33) #11
  %43 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator", %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* %42, i64 0, i32 0
  %44 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator", %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* %42, i64 0, i32 1
  %45 = load float, float* %44, align 4
  call void @_ZNK7skottie8internal12TextAnimator13modulatePropsERKNS1_13ResolvedPropsEf(%"struct.skottie::internal::TextAnimator::ResolvedProps"* nonnull sret %4, %"class.skottie::internal::TextAnimator"* %0, %"struct.skottie::internal::TextAnimator::ResolvedProps"* dereferenceable(68) %43, float %45)
  %46 = bitcast %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %46, i8* nonnull align 4 %33, i64 68, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %33) #11
  %47 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator", %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* %42, i64 1
  %48 = icmp eq %"struct.skottie::internal::TextAnimator::AnimatedPropsModulator"* %47, %30
  br i1 %48, label %40, label %41
}

declare void @_ZNK7skottie8internal13RangeSelector16modulateCoverageERKNS0_12TextAnimator10DomainMapsERNSt3__16vectorINS2_22AnimatedPropsModulatorENS6_9allocatorIS8_EEEE(%"class.skottie::internal::RangeSelector"*, %"struct.skottie::internal::TextAnimator::DomainMaps"* dereferenceable(72), %"class.std::__1::vector.54"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal12TextAnimator13modulatePropsERKNS1_13ResolvedPropsEf(%"struct.skottie::internal::TextAnimator::ResolvedProps"* noalias nocapture sret, %"class.skottie::internal::TextAnimator"*, %"struct.skottie::internal::TextAnimator::ResolvedProps"* nocapture readonly dereferenceable(68), float) local_unnamed_addr #4 align 2 {
  %5 = bitcast %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0 to i8*
  %6 = bitcast %"struct.skottie::internal::TextAnimator::ResolvedProps"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 68, i1 false)
  %7 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 0
  %8 = tail call { <2 x float>, float } @_ZNK7skottie11VectorValuecv4SkV3Ev(%"class.skottie::VectorValue"* %7) #11
  %9 = extractvalue { <2 x float>, float } %8, 0
  %10 = extractvalue { <2 x float>, float } %8, 1
  %11 = insertelement <2 x float> undef, float %3, i32 0
  %12 = shufflevector <2 x float> %11, <2 x float> undef, <2 x i32> zeroinitializer
  %13 = fmul <2 x float> %9, %12
  %14 = fmul float %10, %3
  %15 = bitcast %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  %17 = fadd <2 x float> %16, %13
  %18 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 0, i32 2
  %19 = load float, float* %18, align 4
  %20 = fadd float %14, %19
  %21 = bitcast %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0 to <2 x float>*
  store <2 x float> %17, <2 x float>* %21, align 4
  store float %20, float* %18, align 4
  %22 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 4, i32 0
  %23 = bitcast float* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 4
  %25 = fmul <2 x float> %24, %12
  %26 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 4, i32 2
  %27 = load float, float* %26, align 4
  %28 = fmul float %27, %3
  %29 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 2
  %30 = bitcast %struct.SkV3* %29 to <2 x float>*
  %31 = load <2 x float>, <2 x float>* %30, align 4
  %32 = fadd <2 x float> %25, %31
  %33 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 2, i32 2
  %34 = load float, float* %33, align 4
  %35 = fadd float %28, %34
  %36 = bitcast %struct.SkV3* %29 to <2 x float>*
  store <2 x float> %32, <2 x float>* %36, align 4
  store float %35, float* %33, align 4
  %37 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 10
  %38 = load float, float* %37, align 8
  %39 = fmul float %38, %3
  %40 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 4
  %41 = load float, float* %40, align 4
  %42 = fadd float %41, %39
  store float %42, float* %40, align 4
  %43 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 1
  %44 = tail call { <2 x float>, float } @_ZNK7skottie11VectorValuecv4SkV3Ev(%"class.skottie::VectorValue"* %43) #11
  %45 = extractvalue { <2 x float>, float } %44, 0
  %46 = extractvalue { <2 x float>, float } %44, 1
  %47 = fmul <2 x float> %45, <float 0x3F847AE140000000, float 0x3F847AE140000000>
  %48 = fmul float %46, 0x3F847AE140000000
  %49 = fadd <2 x float> %47, <float -1.000000e+00, float -1.000000e+00>
  %50 = fadd float %48, -1.000000e+00
  %51 = fmul <2 x float> %49, %12
  %52 = fmul float %50, %3
  %53 = fadd <2 x float> %51, <float 1.000000e+00, float 1.000000e+00>
  %54 = fadd float %52, 1.000000e+00
  %55 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 1
  %56 = bitcast %struct.SkV3* %55 to <2 x float>*
  %57 = load <2 x float>, <2 x float>* %56, align 4
  %58 = fmul <2 x float> %57, %53
  %59 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 1, i32 2
  %60 = load float, float* %59, align 4
  %61 = fmul float %60, %54
  %62 = bitcast %struct.SkV3* %55 to <2 x float>*
  store <2 x float> %58, <2 x float>* %62, align 4
  store float %61, float* %59, align 4
  %63 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 5
  %64 = bitcast %struct.SkV2* %63 to <2 x float>*
  %65 = load <2 x float>, <2 x float>* %64, align 4
  %66 = fmul <2 x float> %65, %12
  %67 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 7
  %68 = bitcast %struct.SkV2* %67 to <2 x float>*
  %69 = load <2 x float>, <2 x float>* %68, align 4
  %70 = fadd <2 x float> %69, %66
  %71 = bitcast %struct.SkV2* %67 to <2 x float>*
  store <2 x float> %70, <2 x float>* %71, align 4
  %72 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 6
  %73 = bitcast %struct.SkV2* %72 to <2 x float>*
  %74 = load <2 x float>, <2 x float>* %73, align 4
  %75 = fmul <2 x float> %74, %12
  %76 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 8
  %77 = bitcast %struct.SkV2* %76 to <2 x float>*
  %78 = load <2 x float>, <2 x float>* %77, align 4
  %79 = fadd <2 x float> %78, %75
  %80 = bitcast %struct.SkV2* %76 to <2 x float>*
  store <2 x float> %79, <2 x float>* %80, align 4
  %81 = fcmp olt float %3, 0.000000e+00
  %82 = select i1 %81, float 0.000000e+00, float %3
  %83 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 4
  %84 = load i8, i8* %83, align 8
  %85 = and i8 %84, 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %120, label %87

87:                                               ; preds = %4
  %88 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 2
  %89 = tail call i32 @_ZNK7skottie11VectorValuecvjEv(%"class.skottie::VectorValue"* %88) #11
  %90 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %2, i64 0, i32 5
  %91 = load i32, i32* %90, align 4
  %92 = insertelement <4 x i32> undef, i32 %91, i32 0
  %93 = bitcast <4 x i32> %92 to <16 x i8>
  %94 = shufflevector <16 x i8> %93, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %95 = bitcast <16 x i8> %94 to <8 x i16>
  %96 = shufflevector <8 x i16> %95, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %97 = bitcast <8 x i16> %96 to <4 x i32>
  %98 = sitofp <4 x i32> %97 to <4 x float>
  %99 = insertelement <4 x i32> undef, i32 %89, i32 0
  %100 = bitcast <4 x i32> %99 to <16 x i8>
  %101 = shufflevector <16 x i8> %100, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %102 = bitcast <16 x i8> %101 to <8 x i16>
  %103 = shufflevector <8 x i16> %102, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %104 = bitcast <8 x i16> %103 to <4 x i32>
  %105 = sitofp <4 x i32> %104 to <4 x float>
  %106 = fsub <4 x float> %105, %98
  %107 = insertelement <4 x float> undef, float %82, i32 0
  %108 = shufflevector <4 x float> %107, <4 x float> undef, <4 x i32> zeroinitializer
  %109 = fmul <4 x float> %108, %106
  %110 = fadd <4 x float> %109, %98
  %111 = tail call <4 x i32> @llvm.x86.sse2.cvtps2dq(<4 x float> %110) #11
  %112 = bitcast <4 x i32> %111 to <8 x i16>
  %113 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %112, <8 x i16> undef) #11
  %114 = bitcast <16 x i8> %113 to <8 x i16>
  %115 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %114, <8 x i16> undef) #11
  %116 = bitcast <16 x i8> %115 to <4 x i32>
  %117 = extractelement <4 x i32> %116, i32 0
  %118 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 5
  store i32 %117, i32* %118, align 4
  %119 = load i8, i8* %83, align 8
  br label %120

120:                                              ; preds = %4, %87
  %121 = phi i8 [ %84, %4 ], [ %119, %87 ]
  %122 = and i8 %121, 2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 6
  %126 = load i32, i32* %125, align 4
  br label %159

127:                                              ; preds = %120
  %128 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 3
  %129 = tail call i32 @_ZNK7skottie11VectorValuecvjEv(%"class.skottie::VectorValue"* %128) #11
  %130 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %2, i64 0, i32 6
  %131 = load i32, i32* %130, align 4
  %132 = insertelement <4 x i32> undef, i32 %131, i32 0
  %133 = bitcast <4 x i32> %132 to <16 x i8>
  %134 = shufflevector <16 x i8> %133, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %135 = bitcast <16 x i8> %134 to <8 x i16>
  %136 = shufflevector <8 x i16> %135, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %137 = bitcast <8 x i16> %136 to <4 x i32>
  %138 = sitofp <4 x i32> %137 to <4 x float>
  %139 = insertelement <4 x i32> undef, i32 %129, i32 0
  %140 = bitcast <4 x i32> %139 to <16 x i8>
  %141 = shufflevector <16 x i8> %140, <16 x i8> <i8 0, i8 0, i8 0, i8 0, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef, i8 undef>, <16 x i32> <i32 0, i32 16, i32 1, i32 17, i32 2, i32 18, i32 3, i32 19, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef, i32 undef>
  %142 = bitcast <16 x i8> %141 to <8 x i16>
  %143 = shufflevector <8 x i16> %142, <8 x i16> <i16 0, i16 0, i16 0, i16 0, i16 undef, i16 undef, i16 undef, i16 undef>, <8 x i32> <i32 0, i32 8, i32 1, i32 9, i32 2, i32 10, i32 3, i32 11>
  %144 = bitcast <8 x i16> %143 to <4 x i32>
  %145 = sitofp <4 x i32> %144 to <4 x float>
  %146 = fsub <4 x float> %145, %138
  %147 = insertelement <4 x float> undef, float %82, i32 0
  %148 = shufflevector <4 x float> %147, <4 x float> undef, <4 x i32> zeroinitializer
  %149 = fmul <4 x float> %148, %146
  %150 = fadd <4 x float> %149, %138
  %151 = tail call <4 x i32> @llvm.x86.sse2.cvtps2dq(<4 x float> %150) #11
  %152 = bitcast <4 x i32> %151 to <8 x i16>
  %153 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %152, <8 x i16> undef) #11
  %154 = bitcast <16 x i8> %153 to <8 x i16>
  %155 = tail call <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16> %154, <8 x i16> undef) #11
  %156 = bitcast <16 x i8> %155 to <4 x i32>
  %157 = extractelement <4 x i32> %156, i32 0
  %158 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 6
  store i32 %157, i32* %158, align 4
  br label %159

159:                                              ; preds = %124, %127
  %160 = phi i32 [ %126, %124 ], [ %157, %127 ]
  %161 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 5
  %162 = load i32, i32* %161, align 4
  %163 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 8
  %164 = load float, float* %163, align 8
  %165 = fmul float %164, 0x3F847AE140000000
  %166 = lshr i32 %162, 24
  %167 = uitofp i32 %166 to float
  %168 = fadd float %165, -1.000000e+00
  %169 = fmul float %168, %167
  %170 = fmul float %82, %169
  %171 = fadd float %170, %167
  %172 = fadd float %171, 5.000000e-01
  %173 = tail call float @llvm.floor.f32(float %172) #11
  %174 = fcmp olt float %173, 0x41DFFFFFE0000000
  %175 = select i1 %174, float %173, float 0x41DFFFFFE0000000
  %176 = fcmp ogt float %175, 0xC1DFFFFFE0000000
  %177 = select i1 %176, float %175, float 0xC1DFFFFFE0000000
  %178 = fptosi float %177 to i32
  %179 = and i32 %162, 16777215
  %180 = shl i32 %178, 24
  %181 = or i32 %180, %179
  store i32 %181, i32* %161, align 4
  %182 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 6
  %183 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 9
  %184 = load float, float* %183, align 4
  %185 = fmul float %184, 0x3F847AE140000000
  %186 = lshr i32 %160, 24
  %187 = uitofp i32 %186 to float
  %188 = fadd float %185, -1.000000e+00
  %189 = fmul float %188, %187
  %190 = fmul float %82, %189
  %191 = fadd float %190, %187
  %192 = fadd float %191, 5.000000e-01
  %193 = tail call float @llvm.floor.f32(float %192) #11
  %194 = fcmp olt float %193, 0x41DFFFFFE0000000
  %195 = select i1 %194, float %193, float 0x41DFFFFFE0000000
  %196 = fcmp ogt float %195, 0xC1DFFFFFE0000000
  %197 = select i1 %196, float %195, float 0xC1DFFFFFE0000000
  %198 = fptosi float %197 to i32
  %199 = and i32 %160, 16777215
  %200 = shl i32 %198, 24
  %201 = or i32 %200, %199
  store i32 %201, i32* %182, align 4
  %202 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::ResolvedProps", %"struct.skottie::internal::TextAnimator::ResolvedProps"* %0, i64 0, i32 3
  %203 = load float, float* %202, align 4
  %204 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %1, i64 0, i32 3, i32 7
  %205 = load float, float* %204, align 4
  %206 = fmul float %205, 0x3F847AE140000000
  %207 = fadd float %206, -1.000000e+00
  %208 = fmul float %203, %207
  %209 = fmul float %82, %208
  %210 = fadd float %203, %209
  store float %210, float* %202, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare { <2 x float>, float } @_ZNK7skottie11VectorValuecv4SkV3Ev(%"class.skottie::VectorValue"*) local_unnamed_addr #2

declare i32 @_ZNK7skottie11VectorValuecvjEv(%"class.skottie::VectorValue"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7skottie8internal12TextAnimatorC2EONSt3__16vectorI5sk_spINS0_13RangeSelectorEENS2_9allocatorIS6_EEEERKN6skjson11ObjectValueEPKNS0_16AnimationBuilderEPNS0_27AnimatablePropertyContainerE(%"class.skottie::internal::TextAnimator"*, %"class.std::__1::vector.30"* nocapture dereferenceable(24), %"class.skjson::ObjectValue"* dereferenceable(8), %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimatablePropertyContainer"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %6, align 4
  %7 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::vector.30"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #11
  %9 = bitcast %"class.std::__1::vector.30"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.30"* %7 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %1, i64 0, i32 0, i32 1
  %13 = bitcast %class.sk_sp.32** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = bitcast %class.sk_sp.32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %18 = bitcast %class.sk_sp.32** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %class.sk_sp.32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"class.std::__1::vector.30"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #11
  %23 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3
  %24 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 1
  %25 = bitcast %"struct.skottie::internal::TextAnimator::AnimatedProps"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #11
  %26 = tail call i8* @_Znwm(i64 12) #12
  %27 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 1
  %28 = bitcast %"class.skottie::VectorValue"* %24 to i8**
  store i8* %26, i8** %28, align 8
  %29 = getelementptr inbounds i8, i8* %26, i64 12
  %30 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast float** %30 to i8**
  store i8* %29, i8** %31, align 8
  %32 = bitcast float** %27 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 bitcast ([3 x float]* @.ref.tmp to i8*), i64 12, i1 false) #11
  %33 = ptrtoint i8* %29 to i64
  store i64 %33, i64* %32, align 8
  %34 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 2
  %35 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 7
  %36 = bitcast %"class.skottie::VectorValue"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 76, i1 false) #11
  %37 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 8
  %38 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 9
  %39 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 10
  %40 = bitcast float* %35 to <4 x float>*
  store <4 x float> <float 1.000000e+02, float 1.000000e+02, float 1.000000e+02, float 0.000000e+00>, <4 x float>* %40, align 4
  %41 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 4
  %42 = load i8, i8* %41, align 8
  %43 = and i8 %42, -9
  store i8 %43, i8* %41, align 8
  %44 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #11
  %45 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %44, i64 0, i32 0, i64 0
  %46 = load i8, i8* %45, align 8
  %47 = and i8 %46, 7
  %48 = icmp eq i8 %47, 7
  %49 = bitcast %"class.skjson::Value"* %44 to %"class.skjson::ObjectValue"*
  %50 = select i1 %48, %"class.skjson::ObjectValue"* %49, %"class.skjson::ObjectValue"* null
  %51 = getelementptr inbounds %"struct.skottie::internal::TextAnimator::AnimatedProps", %"struct.skottie::internal::TextAnimator::AnimatedProps"* %23, i64 0, i32 0
  %52 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %50, %"class.skottie::VectorValue"* %51) #11
  %53 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i64 0, i64 0)) #11
  %54 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %53, i64 0, i32 0, i64 0
  %55 = load i8, i8* %54, align 8
  %56 = and i8 %55, 7
  %57 = icmp eq i8 %56, 7
  %58 = bitcast %"class.skjson::Value"* %53 to %"class.skjson::ObjectValue"*
  %59 = select i1 %57, %"class.skjson::ObjectValue"* %58, %"class.skjson::ObjectValue"* null
  %60 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %59, float* %35) #11
  %61 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #11
  %62 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %61, i64 0, i32 0, i64 0
  %63 = load i8, i8* %62, align 8
  %64 = and i8 %63, 7
  %65 = icmp eq i8 %64, 7
  %66 = bitcast %"class.skjson::Value"* %61 to %"class.skjson::ObjectValue"*
  %67 = select i1 %65, %"class.skjson::ObjectValue"* %66, %"class.skjson::ObjectValue"* null
  %68 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %67, float* %37) #11
  %69 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0)) #11
  %70 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %69, i64 0, i32 0, i64 0
  %71 = load i8, i8* %70, align 8
  %72 = and i8 %71, 7
  %73 = icmp eq i8 %72, 7
  %74 = bitcast %"class.skjson::Value"* %69 to %"class.skjson::ObjectValue"*
  %75 = select i1 %73, %"class.skjson::ObjectValue"* %74, %"class.skjson::ObjectValue"* null
  %76 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %75, float* %38) #11
  %77 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.6, i64 0, i64 0)) #11
  %78 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %77, i64 0, i32 0, i64 0
  %79 = load i8, i8* %78, align 8
  %80 = and i8 %79, 7
  %81 = icmp eq i8 %80, 7
  %82 = bitcast %"class.skjson::Value"* %77 to %"class.skjson::ObjectValue"*
  %83 = select i1 %81, %"class.skjson::ObjectValue"* %82, %"class.skjson::ObjectValue"* null
  %84 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %83, float* %39) #11
  %85 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.7, i64 0, i64 0)) #11
  %86 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %85, i64 0, i32 0, i64 0
  %87 = load i8, i8* %86, align 8
  %88 = and i8 %87, 7
  %89 = icmp eq i8 %88, 7
  %90 = bitcast %"class.skjson::Value"* %85 to %"class.skjson::ObjectValue"*
  %91 = select i1 %89, %"class.skjson::ObjectValue"* %90, %"class.skjson::ObjectValue"* null
  %92 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 6
  %93 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %91, %struct.SkV2* %92) #11
  %94 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #11
  %95 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %94, i64 0, i32 0, i64 0
  %96 = load i8, i8* %95, align 8
  %97 = and i8 %96, 7
  %98 = icmp eq i8 %97, 7
  %99 = bitcast %"class.skjson::Value"* %94 to %"class.skjson::ObjectValue"*
  %100 = select i1 %98, %"class.skjson::ObjectValue"* %99, %"class.skjson::ObjectValue"* null
  %101 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %100, %"class.skottie::VectorValue"* %24) #11
  %102 = zext i1 %101 to i8
  %103 = load i8, i8* %41, align 8
  %104 = shl nuw nsw i8 %102, 3
  %105 = and i8 %103, 8
  %106 = or i8 %105, %104
  %107 = and i8 %103, -9
  %108 = or i8 %106, %107
  store i8 %108, i8* %41, align 8
  %109 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #11
  %110 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %109, i64 0, i32 0, i64 0
  %111 = load i8, i8* %110, align 8
  %112 = and i8 %111, 7
  %113 = icmp eq i8 %112, 7
  %114 = bitcast %"class.skjson::Value"* %109 to %"class.skjson::ObjectValue"*
  %115 = select i1 %113, %"class.skjson::ObjectValue"* %114, %"class.skjson::ObjectValue"* null
  %116 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 4, i32 0
  %117 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %115, float* %116) #11
  %118 = zext i1 %117 to i8
  %119 = load i8, i8* %41, align 8
  %120 = shl nuw nsw i8 %118, 3
  %121 = and i8 %119, 8
  %122 = or i8 %121, %120
  %123 = and i8 %119, -9
  %124 = or i8 %122, %123
  store i8 %124, i8* %41, align 8
  %125 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0)) #11
  %126 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %125, i64 0, i32 0, i64 0
  %127 = load i8, i8* %126, align 8
  %128 = and i8 %127, 7
  %129 = icmp eq i8 %128, 7
  %130 = bitcast %"class.skjson::Value"* %125 to %"class.skjson::ObjectValue"*
  %131 = select i1 %129, %"class.skjson::ObjectValue"* %130, %"class.skjson::ObjectValue"* null
  %132 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 4, i32 1
  %133 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %131, float* %132) #11
  %134 = zext i1 %133 to i8
  %135 = load i8, i8* %41, align 8
  %136 = shl nuw nsw i8 %134, 3
  %137 = and i8 %135, 8
  %138 = or i8 %137, %136
  %139 = and i8 %135, -9
  %140 = or i8 %138, %139
  store i8 %140, i8* %41, align 8
  %141 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0)) #11
  %142 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %141, i64 0, i32 0, i64 0
  %143 = load i8, i8* %142, align 8
  %144 = and i8 %143, 7
  %145 = icmp eq i8 %144, 7
  %146 = bitcast %"class.skjson::Value"* %141 to %"class.skjson::ObjectValue"*
  %147 = select i1 %145, %"class.skjson::ObjectValue"* %146, %"class.skjson::ObjectValue"* null
  %148 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 4, i32 2
  %149 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %147, float* %148) #11
  %150 = zext i1 %149 to i8
  %151 = load i8, i8* %41, align 8
  %152 = shl nuw nsw i8 %150, 3
  %153 = and i8 %151, 8
  %154 = or i8 %153, %152
  %155 = and i8 %151, -9
  %156 = or i8 %154, %155
  store i8 %156, i8* %41, align 8
  %157 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0)) #11
  %158 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %157, i64 0, i32 0, i64 0
  %159 = load i8, i8* %158, align 8
  %160 = and i8 %159, 7
  %161 = icmp eq i8 %160, 7
  %162 = bitcast %"class.skjson::Value"* %157 to %"class.skjson::ObjectValue"*
  %163 = select i1 %161, %"class.skjson::ObjectValue"* %162, %"class.skjson::ObjectValue"* null
  %164 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %163, %"class.skottie::VectorValue"* %34) #11
  %165 = zext i1 %164 to i8
  %166 = load i8, i8* %41, align 8
  %167 = and i8 %166, -2
  %168 = or i8 %167, %165
  store i8 %168, i8* %41, align 8
  %169 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0)) #11
  %170 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %169, i64 0, i32 0, i64 0
  %171 = load i8, i8* %170, align 8
  %172 = and i8 %171, 7
  %173 = icmp eq i8 %172, 7
  %174 = bitcast %"class.skjson::Value"* %169 to %"class.skjson::ObjectValue"*
  %175 = select i1 %173, %"class.skjson::ObjectValue"* %174, %"class.skjson::ObjectValue"* null
  %176 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 3
  %177 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %175, %"class.skottie::VectorValue"* %176) #11
  %178 = zext i1 %177 to i8
  %179 = load i8, i8* %41, align 8
  %180 = shl nuw nsw i8 %178, 1
  %181 = and i8 %179, -3
  %182 = or i8 %181, %180
  store i8 %182, i8* %41, align 8
  %183 = tail call dereferenceable(8) %"class.skjson::Value"* @_ZNK6skjson11ObjectValueixEPKc(%"class.skjson::ObjectValue"* %2, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0)) #11
  %184 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %183, i64 0, i32 0, i64 0
  %185 = load i8, i8* %184, align 8
  %186 = and i8 %185, 7
  %187 = icmp eq i8 %186, 7
  %188 = bitcast %"class.skjson::Value"* %183 to %"class.skjson::ObjectValue"*
  %189 = select i1 %187, %"class.skjson::ObjectValue"* %188, %"class.skjson::ObjectValue"* null
  %190 = getelementptr inbounds %"class.skottie::internal::TextAnimator", %"class.skottie::internal::TextAnimator"* %0, i64 0, i32 3, i32 5
  %191 = tail call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* %4, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %3, %"class.skjson::ObjectValue"* %189, %struct.SkV2* %190) #11
  %192 = zext i1 %191 to i8
  %193 = load i8, i8* %41, align 8
  %194 = shl nuw nsw i8 %192, 2
  %195 = and i8 %193, -5
  %196 = or i8 %195, %194
  store i8 %196, i8* %41, align 8
  ret void
}

; Function Attrs: nounwind readnone
declare <16 x i8> @llvm.x86.sse2.packuswb.128(<8 x i16>, <8 x i16>) #5

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.cvtps2dq(<4 x float>) #5

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal13RangeSelectorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.30"*, %class.sk_sp.32* dereferenceable(8)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.30"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.30"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.32** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %class.sk_sp.32*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.32* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.32* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.32* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %40, align 8
  %43 = bitcast %class.sk_sp.32* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %37, i64 1
  %45 = ptrtoint %class.sk_sp.32* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.30", %"class.std::__1::vector.30"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.32*, %class.sk_sp.32** %46, align 8
  %48 = ptrtoint %class.sk_sp.32* %47 to i64
  %49 = load %class.sk_sp.32*, %class.sk_sp.32** %3, align 8
  %50 = icmp eq %class.sk_sp.32* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.32, %class.sk_sp.32* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::RangeSelector"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.32* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.32* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.32* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %65, align 8
  %68 = bitcast %class.sk_sp.32* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !5

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.32* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.32* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.32* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.32* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.32* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.32* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %81, align 8
  %84 = bitcast %class.sk_sp.32* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.32* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %87, align 8
  %90 = bitcast %class.sk_sp.32* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.32* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %93, align 8
  %96 = bitcast %class.sk_sp.32* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.32* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %99, align 8
  %102 = bitcast %class.sk_sp.32* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.32* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %105, align 8
  %108 = bitcast %class.sk_sp.32* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.32* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %111, align 8
  %114 = bitcast %class.sk_sp.32* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.32* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %117, align 8
  %120 = bitcast %class.sk_sp.32* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.32* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::RangeSelector"* null, %"class.skottie::internal::RangeSelector"** %123, align 8
  %126 = bitcast %class.sk_sp.32* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.32* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.32* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.32*, %class.sk_sp.32** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.32* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.32* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.32* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.32*
  %138 = icmp eq %class.sk_sp.32* %133, %137
  br i1 %138, label %153, label %139

139:                                              ; preds = %132, %151
  %140 = phi %class.sk_sp.32* [ %141, %151 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::RangeSelector"*, %"class.skottie::internal::RangeSelector"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::RangeSelector"* %143, null
  br i1 %144, label %151, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::RangeSelector", %"class.skottie::internal::RangeSelector"* %143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %151

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::RangeSelector"* %143 to i8*
  tail call void @_ZdlPv(i8* %150) #12
  br label %151

151:                                              ; preds = %149, %145, %139
  %152 = icmp eq %class.sk_sp.32* %141, %137
  br i1 %152, label %153, label %139

153:                                              ; preds = %151, %132
  %154 = icmp eq i64 %135, 0
  br i1 %154, label %157, label %155

155:                                              ; preds = %153
  %156 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %156) #12
  br label %157

157:                                              ; preds = %153, %155
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %"class.skottie::VectorValue"*) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #2

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindI4SkV2EEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %struct.SkV2*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
