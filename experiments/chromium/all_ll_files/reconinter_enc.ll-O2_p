; ModuleID = '../../third_party/libaom/source/libaom/av1/encoder/reconinter_enc.c'
source_filename = "../../third_party/libaom/source/libaom/av1/encoder/reconinter_enc.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.mv = type { i16, i16 }
%struct.InterPredParams = type { i32, i32, %struct.WarpedMotionParams, %struct.ConvolveParams, [2 x %struct.InterpFilterParams*], i32, i32, i32, i32, %struct.buf_2d, i32, i32, %struct.scale_factors*, i32, i32, %struct.INTERINTER_COMPOUND_DATA, i8, i32 }
%struct.WarpedMotionParams = type { [8 x i32], i16, i16, i16, i16, i8, i8 }
%struct.ConvolveParams = type { i32, i16*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.InterpFilterParams = type { i16*, i16, i8 }
%struct.buf_2d = type { i8*, i8*, i32, i32, i32 }
%struct.scale_factors = type { i32, i32, i32, i32, i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)* }
%struct.INTERINTER_COMPOUND_DATA = type { i8*, i8, i8, i8, i8 }
%struct.macroblockd = type { i32, i32, i32, i8, [3 x %struct.macroblockd_plane], %struct.TileInfo, %struct.MB_MODE_INFO**, i8, i8, i8, i8, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO*, i8*, i32, i32, i32, i32, i32, [2 x %struct.scale_factors*], %struct.yv12_buffer_config*, [3 x i8*], [3 x [32 x i8]], i8*, [32 x i8], i8*, i8*, [32 x i8], [3 x %struct.WienerInfo], [3 x %struct.SgrprojInfo], i8, i8, [29 x [8 x %struct.candidate_mv]], [29 x [8 x i16]], i8, i8, [8 x i8], %struct.frame_contexts*, i32, [8 x i32], [8 x i32], i32, i32, %struct.aom_internal_error_info*, %struct.WarpedMotionParams*, i8, [4 x i8], [4 x i8], i8*, %struct.cfl_ctx, [2 x i16], i16*, [2 x i8*], [8 x i8] }
%struct.macroblockd_plane = type { i8, i32, i32, %struct.buf_2d, [2 x %struct.buf_2d], i8*, i8*, [8 x [2 x i16]], i8*, i8, i8, [8 x [19 x i8*]], [8 x [19 x i8*]] }
%struct.TileInfo = type { i32, i32, i32, i32, i32, i32 }
%struct.MB_MODE_INFO = type <{ i8, i8, i8, i8, i32, [2 x %union.int_mv], [2 x i8], [2 x i8], %union.int_interpfilters, i8, i8, i8, i8, %struct.WarpedMotionParams, i8, i8, [6 x i8], %struct.INTERINTER_COMPOUND_DATA, [2 x i8], %struct.FILTER_INTRA_MODE_INFO, i8, i8, %struct.PALETTE_MODE_INFO, i8, i8, [16 x i8], i8, [4 x i8], i16, [7 x i8] }>
%union.int_mv = type { i32 }
%union.int_interpfilters = type { i32 }
%struct.FILTER_INTRA_MODE_INFO = type { i8, i8 }
%struct.PALETTE_MODE_INFO = type { [24 x i16], [2 x i8] }
%struct.yv12_buffer_config = type { %union.anon, %union.anon.0, %union.anon.2, %union.anon.4, %union.anon.6, %union.anon.8, i32, [3 x i8*], i8*, i32, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, %struct.aom_metadata_array* }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { i32, i32 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { i32, i32 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i8*, i8*, i8* }
%struct.aom_metadata_array = type { i64, %struct.aom_metadata** }
%struct.aom_metadata = type { i32, i8*, i64, i32 }
%struct.WienerInfo = type { [8 x i16], [8 x i16] }
%struct.SgrprojInfo = type { i32, [2 x i32] }
%struct.candidate_mv = type { %union.int_mv, %union.int_mv }
%struct.frame_contexts = type { [5 x [13 x [3 x i16]]], [5 x [2 x [9 x [3 x i16]]]], [2 x [3 x [3 x i16]]], [2 x [2 x [6 x i16]]], [2 x [2 x [7 x i16]]], [2 x [2 x [8 x i16]]], [2 x [2 x [9 x i16]]], [2 x [2 x [10 x i16]]], [2 x [2 x [11 x i16]]], [2 x [2 x [12 x i16]]], [5 x [2 x [4 x [4 x i16]]]], [5 x [2 x [42 x [5 x i16]]]], [5 x [2 x [21 x [5 x i16]]]], [6 x [3 x i16]], [2 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [8 x [9 x i16]], [22 x [3 x i16]], [22 x [17 x i16]], [4 x [3 x i16]], [22 x [3 x i16]], [4 x [5 x i16]], [22 x [4 x i16]], [22 x [3 x i16]], [7 x [8 x i16]], [7 x [8 x i16]], [7 x [5 x [9 x i16]]], [7 x [5 x [9 x i16]]], [7 x [3 x [3 x i16]]], [2 x [3 x i16]], [5 x [3 x i16]], [3 x [6 x [3 x i16]]], [5 x [3 x i16]], [3 x [3 x [3 x i16]]], [3 x [3 x [3 x i16]]], [3 x [2 x [3 x i16]]], [21 x [3 x i16]], [6 x [3 x i16]], [6 x [3 x i16]], [3 x [3 x i16]], [3 x [3 x i16]], [4 x [3 x i16]], %struct.nmv_context, %struct.nmv_context, [3 x i16], %struct.segmentation_probs, [22 x [3 x i16]], [6 x i16], [4 x i16], [3 x i16], [3 x i16], [4 x [14 x i16]], [2 x [13 x [15 x i16]]], [20 x [11 x i16]], [16 x [4 x i16]], [5 x [5 x [14 x i16]]], [8 x [8 x i16]], [4 x [3 x [4 x i16]]], [5 x i16], [4 x [5 x i16]], [5 x i16], [3 x [4 x [13 x [17 x i16]]]], [4 x [4 x [17 x i16]]], [9 x i16], [6 x [17 x i16]], i32 }
%struct.nmv_context = type { [5 x i16], [2 x %struct.nmv_component] }
%struct.nmv_component = type { [12 x i16], [2 x [5 x i16]], [5 x i16], [3 x i16], [3 x i16], [3 x i16], [3 x i16], [10 x [3 x i16]] }
%struct.segmentation_probs = type { [9 x i16], [3 x [3 x i16]], [3 x [9 x i16]] }
%struct.aom_internal_error_info = type { i32, i32, [200 x i8], i32, [1 x %struct.__jmp_buf_tag] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.cfl_ctx = type { [1024 x i16], [1024 x i16], [2 x i32], i32, [2 x [32 x i16]], i32, i32, i32, i32, i32, i32 }
%struct.SubpelParams = type { i32, i32, i32, i32 }
%struct.AV1Common = type { %struct.CurrentFrame, %struct.aom_internal_error_info*, i32, i32, i32, i32, i32, i32, i8, [33 x i32], i32, %struct.RefCntBuffer*, %struct.RefCntBuffer*, [8 x i32], %struct.scale_factors, [8 x %struct.scale_factors], [8 x %struct.RefCntBuffer*], i32, i32, i32, %struct.FeatureFlags, %struct.CommonModeInfoParams, %struct.CommonQuantParams, %struct.segmentation, i8*, %struct.loop_filter_info_n, %struct.loopfilter, [3 x %struct.RestorationInfo], i32*, %struct.RestorationLineBuffers*, %struct.yv12_buffer_config, %struct.CdefInfo, %struct.aom_film_grain_t, %struct.DeltaQInfo, [8 x %struct.WarpedMotionParams], %struct.SequenceHeader*, %struct.frame_contexts*, %struct.frame_contexts*, %struct.CommonTileParams, %struct.BufferPool*, %struct.CommonContexts, i32, [8 x i32], %struct.TPL_MV_REF*, i32, [8 x i32], [8 x i8], i32, i32 }
%struct.CurrentFrame = type { i8, i8, i32, i32, i32, %struct.SkipModeInfo, i32, i32 }
%struct.SkipModeInfo = type { i32, i32, i32, i32 }
%struct.RefCntBuffer = type { i32, i32, [7 x i32], i32, [7 x i32], %struct.MV_REF*, i8*, %struct.segmentation, i32, i32, i32, i32, [8 x %struct.WarpedMotionParams], i32, i8, %struct.aom_film_grain_t, %struct.aom_codec_frame_buffer, %struct.yv12_buffer_config, i8, [4 x i32], [8 x i8], [2 x i8], %struct.frame_contexts }
%struct.MV_REF = type { %union.int_mv, i8 }
%struct.aom_codec_frame_buffer = type { i8*, i64, i8* }
%struct.FeatureFlags = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i8 }
%struct.CommonModeInfoParams = type { i32, i32, i32, i32, i32, %struct.MB_MODE_INFO*, i32, i32, i8, %struct.MB_MODE_INFO**, i32, i32, i8*, void (%struct.CommonModeInfoParams*)*, void (%struct.CommonModeInfoParams*)*, void (%struct.CommonModeInfoParams*, i32, i32)* }
%struct.CommonQuantParams = type { i32, i32, i32, i32, i32, i32, [8 x [2 x i16]], [8 x [2 x i16]], [8 x [2 x i16]], [16 x [3 x [19 x i8*]]], [16 x [3 x [19 x i8*]]], [8 x [19 x i8*]], [8 x [19 x i8*]], [8 x [19 x i8*]], i8, i32, i32, i32 }
%struct.segmentation = type { i8, i8, i8, i8, [8 x [8 x i16]], [8 x i32], i32, i8 }
%struct.loop_filter_info_n = type { [64 x %struct.loop_filter_thresh], [3 x [8 x [2 x [8 x [2 x i8]]]]] }
%struct.loop_filter_thresh = type { [16 x i8], [16 x i8], [16 x i8] }
%struct.loopfilter = type { [2 x i32], i32, i32, i32, i8, i8, [8 x i8], [2 x i8], i32 }
%struct.RestorationInfo = type { i32, i32, i32, i32, i32, %struct.RestorationUnitInfo*, %struct.RestorationStripeBoundaries, i32 }
%struct.RestorationUnitInfo = type { i32, [12 x i8], %struct.WienerInfo, %struct.SgrprojInfo, [4 x i8] }
%struct.RestorationStripeBoundaries = type { i8*, i8*, i32, i32 }
%struct.RestorationLineBuffers = type { [3 x [392 x i16]], [3 x [392 x i16]] }
%struct.CdefInfo = type { [3 x i16*], [3 x i16*], i16*, [3 x i64], [3 x i64], i64, i32, i32, [16 x i32], [16 x i32], i32, i32, i32 }
%struct.aom_film_grain_t = type { i32, i32, [14 x [2 x i32]], i32, [10 x [2 x i32]], i32, [10 x [2 x i32]], i32, i32, i32, [24 x i32], [25 x i32], [25 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.DeltaQInfo = type { i32, i32, i32, i32, i32 }
%struct.SequenceHeader = type { i32, i32, i32, i32, i8, i32, i32, i8, i32, i32, %struct.OrderHintInfo, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, [32 x i32], i32, %struct.aom_timing, i8, %struct.aom_dec_model_info, i8, [32 x i8], [32 x i8], [33 x %struct.aom_dec_model_op_parameters] }
%struct.OrderHintInfo = type { i32, i32, i32, i32 }
%struct.aom_timing = type { i32, i32, i32, i32 }
%struct.aom_dec_model_info = type { i32, i32, i32, i32 }
%struct.aom_dec_model_op_parameters = type { i32, i64, i64, i32, i32, i32, i32, i32 }
%struct.CommonTileParams = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [65 x i32], [65 x i32], i32, i32 }
%struct.BufferPool = type { %union.pthread_mutex_t, i8*, i32 (i8*, i64, %struct.aom_codec_frame_buffer*)*, i32 (i8*, %struct.aom_codec_frame_buffer*)*, [16 x %struct.RefCntBuffer], %struct.InternalFrameBufferList }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.InternalFrameBufferList = type { i32, %struct.InternalFrameBuffer* }
%struct.InternalFrameBuffer = type { i8*, i64, i32 }
%struct.CommonContexts = type { i8**, [3 x i8**], i8**, i32, i32, i32 }
%struct.TPL_MV_REF = type { %union.int_mv, i8 }
%struct.BUFFER_SET = type { [3 x i8*], [3 x i32] }
%struct.build_prediction_ctxt = type { %struct.AV1Common*, i8**, i32*, i32*, i32*, i32, i8* }
%struct.WarpTypesAllowed = type { i32, i32 }

@max_neighbor_obmc = internal unnamed_addr constant [6 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 4], align 16
@mi_size_wide_log2 = internal unnamed_addr constant [22 x i8] c"\00\00\01\01\01\02\02\02\03\03\03\04\04\04\05\05\00\02\01\03\02\04", align 16
@mi_size_high_log2 = internal unnamed_addr constant [22 x i8] c"\00\01\00\01\02\01\02\03\02\03\04\03\04\05\04\05\02\00\03\01\04\02", align 16
@__const.av1_build_obmc_inter_predictors_sb.dst_height2 = private unnamed_addr constant [3 x i32] [i32 128, i32 128, i32 128], align 4
@block_size_wide = internal unnamed_addr constant [22 x i8] c"\04\04\08\08\08\10\10\10   @@@\80\80\04\10\08 \10@", align 16
@block_size_high = internal unnamed_addr constant [22 x i8] c"\04\08\04\08\10\08\10 \10 @ @\80@\80\10\04 \08@\10", align 16
@mi_size_wide = internal unnamed_addr constant [22 x i8] c"\01\01\02\02\02\04\04\04\08\08\08\10\10\10  \01\04\02\08\04\10", align 16
@.str = private unnamed_addr constant [39 x i8] c"Reference frame has invalid dimensions\00", align 1
@mi_size_high = internal unnamed_addr constant [22 x i8] c"\01\02\01\02\04\02\04\08\04\08\10\08\10 \10 \04\01\08\02\10\04", align 16
@ss_size_lookup = internal unnamed_addr constant [22 x [2 x [2 x i8]]] [[2 x [2 x i8]] zeroinitializer, [2 x [2 x i8]] [[2 x i8] c"\01\00", [2 x i8] c"\FF\00"], [2 x [2 x i8]] [[2 x i8] c"\02\FF", [2 x i8] zeroinitializer], [2 x [2 x i8]] [[2 x i8] c"\03\02", [2 x i8] c"\01\00"], [2 x [2 x i8]] [[2 x i8] c"\04\03", [2 x i8] c"\FF\01"], [2 x [2 x i8]] [[2 x i8] c"\05\FF", [2 x i8] c"\03\02"], [2 x [2 x i8]] [[2 x i8] c"\06\05", [2 x i8] c"\04\03"], [2 x [2 x i8]] [[2 x i8] c"\07\06", [2 x i8] c"\FF\04"], [2 x [2 x i8]] [[2 x i8] c"\08\FF", [2 x i8] c"\06\05"], [2 x [2 x i8]] [[2 x i8] c"\09\08", [2 x i8] c"\07\06"], [2 x [2 x i8]] [[2 x i8] c"\0A\09", [2 x i8] c"\FF\07"], [2 x [2 x i8]] [[2 x i8] c"\0B\FF", [2 x i8] c"\09\08"], [2 x [2 x i8]] [[2 x i8] c"\0C\0B", [2 x i8] c"\0A\09"], [2 x [2 x i8]] [[2 x i8] c"\0D\0C", [2 x i8] c"\FF\0A"], [2 x [2 x i8]] [[2 x i8] c"\0E\FF", [2 x i8] c"\0C\0B"], [2 x [2 x i8]] [[2 x i8] c"\0F\0E", [2 x i8] c"\0D\0C"], [2 x [2 x i8]] [[2 x i8] c"\10\01", [2 x i8] c"\FF\01"], [2 x [2 x i8]] [[2 x i8] c"\11\FF", [2 x i8] c"\02\02"], [2 x [2 x i8]] [[2 x i8] c"\12\04", [2 x i8] c"\FF\10"], [2 x [2 x i8]] [[2 x i8] c"\13\FF", [2 x i8] c"\05\11"], [2 x [2 x i8]] [[2 x i8] c"\14\07", [2 x i8] c"\FF\12"], [2 x [2 x i8]] [[2 x i8] c"\15\FF", [2 x i8] c"\08\13"]], align 16
@av1_build_compound_diffwtd_mask = external local_unnamed_addr global void (i8*, i8, i8*, i32, i8*, i32, i32, i32)*, align 8
@aom_convolve_copy = external local_unnamed_addr global void (i8*, i64, i8*, i64, i32, i32)*, align 8
@aom_blend_a64_mask = external local_unnamed_addr global void (i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32, i32)*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_enc_build_one_inter_predictor(i8*, i32, %struct.mv*, %struct.InterPredParams*) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %3, i64 0, i32 3, i32 0
  %6 = load i32, i32* %5, align 8
  tail call void @av1_build_one_inter_predictor(i8* %0, i32 %1, %struct.mv* %2, %struct.InterPredParams* %3, %struct.macroblockd* null, i32 0, i32 0, i32 %6, i8** null, void (%struct.mv*, %struct.InterPredParams*, %struct.macroblockd*, i32, i32, i32, i8**, i8**, %struct.SubpelParams*, i32*)* nonnull @enc_calc_subpel_params) #4
  ret void
}

declare void @av1_build_one_inter_predictor(i8*, i32, %struct.mv*, %struct.InterPredParams*, %struct.macroblockd*, i32, i32, i32, i8**, void (%struct.mv*, %struct.InterPredParams*, %struct.macroblockd*, i32, i32, i32, i8**, i8**, %struct.SubpelParams*, i32*)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @enc_calc_subpel_params(%struct.mv* nocapture readonly, %struct.InterPredParams* nocapture readonly, %struct.macroblockd* nocapture readnone, i32, i32, i32, i8** nocapture readnone, i8** nocapture, %struct.SubpelParams* nocapture, i32* nocapture) #0 {
  %11 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %1, i64 0, i32 12
  %12 = load %struct.scale_factors*, %struct.scale_factors** %11, align 8
  %13 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %1, i64 0, i32 10
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %1, i64 0, i32 11
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %1, i64 0, i32 7
  %18 = load i32, i32* %17, align 8
  %19 = shl i32 %18, 4
  %20 = getelementptr inbounds %struct.mv, %struct.mv* %0, i64 0, i32 0
  %21 = load i16, i16* %20, align 2
  %22 = sext i16 %21 to i32
  %23 = sub nsw i32 1, %16
  %24 = shl i32 %22, %23
  %25 = add nsw i32 %24, %19
  %26 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %1, i64 0, i32 8
  %27 = load i32, i32* %26, align 4
  %28 = shl i32 %27, 4
  %29 = getelementptr inbounds %struct.mv, %struct.mv* %0, i64 0, i32 1
  %30 = load i16, i16* %29, align 2
  %31 = sext i16 %30 to i32
  %32 = sub nsw i32 1, %14
  %33 = shl i32 %31, %32
  %34 = add nsw i32 %33, %28
  %35 = getelementptr inbounds %struct.scale_factors, %struct.scale_factors* %12, i64 0, i32 5
  %36 = load i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)** %35, align 8
  %37 = tail call i32 %36(i32 %25, %struct.scale_factors* %12) #4
  %38 = getelementptr inbounds %struct.scale_factors, %struct.scale_factors* %12, i64 0, i32 4
  %39 = load i32 (i32, %struct.scale_factors*)*, i32 (i32, %struct.scale_factors*)** %38, align 8
  %40 = tail call i32 %39(i32 %34, %struct.scale_factors* %12) #4
  %41 = add nsw i32 %40, 32
  %42 = add nsw i32 %37, 32
  %43 = lshr i32 288, %16
  %44 = shl i32 %43, 10
  %45 = sub nsw i32 4096, %44
  %46 = lshr i32 288, %14
  %47 = shl i32 %46, 10
  %48 = sub nsw i32 4096, %47
  %49 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %1, i64 0, i32 9, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = shl i32 %50, 10
  %52 = add i32 %51, 4096
  %53 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %1, i64 0, i32 9, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = shl i32 %54, 10
  %56 = add i32 %55, 4096
  %57 = icmp slt i32 %42, %45
  %58 = icmp sgt i32 %42, %52
  %59 = select i1 %58, i32 %52, i32 %42
  %60 = select i1 %57, i32 %45, i32 %59
  %61 = icmp slt i32 %41, %48
  %62 = icmp sgt i32 %41, %56
  %63 = select i1 %62, i32 %56, i32 %41
  %64 = select i1 %61, i32 %48, i32 %63
  %65 = and i32 %64, 1023
  %66 = getelementptr inbounds %struct.SubpelParams, %struct.SubpelParams* %8, i64 0, i32 2
  store i32 %65, i32* %66, align 4
  %67 = and i32 %60, 1023
  %68 = getelementptr inbounds %struct.SubpelParams, %struct.SubpelParams* %8, i64 0, i32 3
  store i32 %67, i32* %68, align 4
  %69 = getelementptr inbounds %struct.scale_factors, %struct.scale_factors* %12, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  %71 = getelementptr inbounds %struct.SubpelParams, %struct.SubpelParams* %8, i64 0, i32 0
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %struct.scale_factors, %struct.scale_factors* %12, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %struct.SubpelParams, %struct.SubpelParams* %8, i64 0, i32 1
  store i32 %73, i32* %74, align 4
  %75 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %1, i64 0, i32 9, i32 1
  %76 = load i8*, i8** %75, align 8
  %77 = ashr i32 %60, 10
  %78 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %1, i64 0, i32 9, i32 4
  %79 = load i32, i32* %78, align 8
  %80 = mul nsw i32 %79, %77
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %76, i64 %81
  %83 = ashr i32 %64, 10
  %84 = sext i32 %83 to i64
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  store i8* %85, i8** %7, align 8
  %86 = load i32, i32* %78, align 8
  store i32 %86, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_enc_build_inter_predictor_y(%struct.macroblockd*, i32, i32) local_unnamed_addr #0 {
  %4 = alloca %struct.InterPredParams, align 8
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to %struct.mv*
  %7 = shl nsw i32 %2, 2
  %8 = shl nsw i32 %1, 2
  %9 = bitcast %struct.InterPredParams* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %9) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 216, i1 false)
  %10 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 3, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #4
  %13 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 6
  %14 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %13, align 8
  %15 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %14, align 8
  %16 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %15, i64 0, i32 5, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %5, align 4
  %18 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 21, i64 0
  %19 = load %struct.scale_factors*, %struct.scale_factors** %18, align 8
  %20 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 9
  %21 = load i8, i8* %20, align 8
  %22 = zext i8 %21 to i32
  %23 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 10
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 2
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 40
  %31 = load i32, i32* %30, align 16
  %32 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 4, i64 0
  %33 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %15, i64 0, i32 8, i32 0
  %34 = load i32, i32* %33, align 4
  call void @av1_init_inter_params(%struct.InterPredParams* nonnull %4, i32 %22, i32 %25, i32 %8, i32 %7, i32 %27, i32 %29, i32 %31, i32 0, i32 0, %struct.scale_factors* %19, %struct.buf_2d* %32, i32 %34) #4
  %35 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %4, i64 0, i32 3
  %36 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 53
  %37 = bitcast i16** %36 to i64*
  %38 = load i64, i64* %37, align 16
  %39 = load i32, i32* %30, align 16
  %40 = icmp sgt i32 %39, 10
  %41 = add nsw i32 %39, -7
  %42 = sub nsw i32 21, %39
  %43 = select i1 %40, i32 %41, i32 3
  %44 = select i1 %40, i32 %42, i32 11
  %45 = bitcast %struct.ConvolveParams* %35 to i8*
  %46 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %4, i64 0, i32 3, i32 0
  store i32 0, i32* %46, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 4
  %48 = bitcast i8* %47 to i32*
  store i32 -1431655766, i32* %48, align 4
  %49 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %4, i64 0, i32 3, i32 1
  %50 = bitcast i16** %49 to i64*
  store i64 %38, i64* %50, align 8
  %51 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %4, i64 0, i32 3, i32 2
  store i32 128, i32* %51, align 8
  %52 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %4, i64 0, i32 3, i32 3
  store i32 %43, i32* %52, align 4
  %53 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %4, i64 0, i32 3, i32 4
  store i32 %44, i32* %53, align 8
  %54 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %4, i64 0, i32 3, i32 5
  store i32 0, i32* %54, align 4
  %55 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %4, i64 0, i32 3, i32 6
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %4, i64 0, i32 3, i32 7
  %57 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %4, i64 0, i32 3, i32 8
  %58 = bitcast i32* %57 to i64*
  store i64 -6148914691236517206, i64* %58, align 8
  store i32 0, i32* %56, align 4
  %59 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 0, i32 3, i32 4
  %60 = load i32, i32* %59, align 8
  call void @av1_build_one_inter_predictor(i8* %11, i32 %60, %struct.mv* nonnull %6, %struct.InterPredParams* nonnull %4, %struct.macroblockd* null, i32 0, i32 0, i32 0, i8** null, void (%struct.mv*, %struct.InterPredParams*, %struct.macroblockd*, i32, i32, i32, i8**, i8**, %struct.SubpelParams*, i32*)* nonnull @enc_calc_subpel_params) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %9) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @av1_init_inter_params(%struct.InterPredParams*, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.scale_factors*, %struct.buf_2d*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_enc_build_inter_predictor(%struct.AV1Common*, %struct.macroblockd*, i32, i32, %struct.BUFFER_SET*, i8 zeroext, i32, i32) local_unnamed_addr #0 {
  %9 = alloca %struct.BUFFER_SET, align 8
  %10 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 3
  %11 = icmp sgt i32 %6, %7
  br i1 %11, label %89, label %12

12:                                               ; preds = %8
  %13 = shl nsw i32 %3, 2
  %14 = shl nsw i32 %2, 2
  %15 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 6
  %16 = bitcast %struct.BUFFER_SET* %9 to i8*
  %17 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 0, i32 3
  %18 = bitcast %struct.buf_2d* %17 to i64*
  %19 = bitcast %struct.BUFFER_SET* %9 to i64*
  %20 = getelementptr inbounds %struct.BUFFER_SET, %struct.BUFFER_SET* %9, i64 0, i32 0, i64 1
  %21 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 1, i32 3
  %22 = bitcast %struct.buf_2d* %21 to i64*
  %23 = bitcast i8** %20 to i64*
  %24 = getelementptr inbounds %struct.BUFFER_SET, %struct.BUFFER_SET* %9, i64 0, i32 0, i64 2
  %25 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 2, i32 3
  %26 = bitcast %struct.buf_2d* %25 to i64*
  %27 = bitcast i8** %24 to i64*
  %28 = getelementptr inbounds %struct.BUFFER_SET, %struct.BUFFER_SET* %9, i64 0, i32 1, i64 0
  %29 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 0, i32 3, i32 4
  %30 = getelementptr inbounds %struct.BUFFER_SET, %struct.BUFFER_SET* %9, i64 0, i32 1, i64 1
  %31 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 1, i32 3, i32 4
  %32 = getelementptr inbounds %struct.BUFFER_SET, %struct.BUFFER_SET* %9, i64 0, i32 1, i64 2
  %33 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 2, i32 3, i32 4
  %34 = sext i32 %6 to i64
  %35 = sext i32 %7 to i64
  br label %36

36:                                               ; preds = %85, %12
  %37 = phi i64 [ %87, %85 ], [ %34, %12 ]
  %38 = phi %struct.BUFFER_SET* [ %86, %85 ], [ %4, %12 ]
  %39 = icmp eq i64 %37, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %36
  %41 = load i8, i8* %10, align 4, !range !2
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %89, label %43

43:                                               ; preds = %40, %36
  %44 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %15, align 8
  %45 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %44, align 8
  %46 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 %37, i32 9
  %47 = load i8, i8* %46, align 8
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 %37, i32 10
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = trunc i64 %37 to i32
  call void @av1_build_inter_predictors(%struct.AV1Common* %0, %struct.macroblockd* %1, i32 %52, %struct.MB_MODE_INFO* %45, i32 0, i32 %48, i32 %51, i32 %13, i32 %14, i8** null, void (%struct.mv*, %struct.InterPredParams*, %struct.macroblockd*, i32, i32, i32, i8**, i8**, %struct.SubpelParams*, i32*)* nonnull @enc_calc_subpel_params) #4
  %53 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %15, align 8
  %54 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %53, align 8
  %55 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %54, i64 0, i32 6, i64 0
  %56 = load i8, i8* %55, align 8
  %57 = icmp sgt i8 %56, 0
  br i1 %57, label %58, label %85

58:                                               ; preds = %43
  %59 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %54, i64 0, i32 6, i64 1
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %85

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %54, i64 0, i32 0
  %64 = load i8, i8* %63, align 8
  %65 = add i8 %64, -3
  %66 = icmp ugt i8 %65, 6
  br i1 %66, label %85, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %54, i64 0, i32 2
  %69 = load i8, i8* %68, align 2
  %70 = add i8 %69, -13
  %71 = icmp ugt i8 %70, 3
  br i1 %71, label %85, label %72

72:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false)
  %73 = load i64, i64* %18, align 16
  store i64 %73, i64* %19, align 8
  %74 = load i64, i64* %22, align 16
  store i64 %74, i64* %23, align 8
  %75 = load i64, i64* %26, align 16
  store i64 %75, i64* %27, align 8
  %76 = load i32, i32* %29, align 8
  store i32 %76, i32* %28, align 8
  %77 = load i32, i32* %31, align 8
  store i32 %77, i32* %30, align 4
  %78 = load i32, i32* %33, align 8
  store i32 %78, i32* %32, align 8
  %79 = icmp eq %struct.BUFFER_SET* %38, null
  %80 = select i1 %79, %struct.BUFFER_SET* %9, %struct.BUFFER_SET* %38
  %81 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 %37, i32 3, i32 0
  %82 = load i8*, i8** %81, align 16
  %83 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 %37, i32 3, i32 4
  %84 = load i32, i32* %83, align 8
  call void @av1_build_interintra_predictor(%struct.AV1Common* %0, %struct.macroblockd* %1, i8* %82, i32 %84, %struct.BUFFER_SET* %80, i32 %52, i8 zeroext %5) #4
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #4
  br label %85

85:                                               ; preds = %62, %43, %58, %67, %72
  %86 = phi %struct.BUFFER_SET* [ %80, %72 ], [ %38, %67 ], [ %38, %58 ], [ %38, %43 ], [ %38, %62 ]
  %87 = add nsw i64 %37, 1
  %88 = icmp slt i64 %37, %35
  br i1 %88, label %36, label %89

89:                                               ; preds = %85, %40, %8
  ret void
}

declare void @av1_build_interintra_predictor(%struct.AV1Common*, %struct.macroblockd*, i8*, i32, %struct.BUFFER_SET*, i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_build_prediction_by_above_preds(%struct.AV1Common*, %struct.macroblockd*, i8**, i32*, i32*, i32*) local_unnamed_addr #0 {
  %7 = alloca %struct.build_prediction_ctxt, align 8
  %8 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 7
  %9 = load i8, i8* %8, align 16, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %111, label %11

11:                                               ; preds = %6
  %12 = bitcast %struct.build_prediction_ctxt* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  %13 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 0
  store %struct.AV1Common* %0, %struct.AV1Common** %13, align 8
  %14 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 1
  store i8** %2, i8*** %14, align 8
  %15 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 2
  store i32* %3, i32** %15, align 8
  %16 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 3
  store i32* %4, i32** %16, align 8
  %17 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 4
  store i32* %5, i32** %17, align 8
  %18 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 5
  %19 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 18
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %18, align 8
  %21 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 6
  store i8* null, i8** %21, align 8
  %22 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 6
  %23 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %22, align 8
  %24 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %23, align 8
  %25 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %24, i64 0, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide_log2, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [6 x i32], [6 x i32]* @max_neighbor_obmc, i64 0, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 35
  %34 = load %struct.SequenceHeader*, %struct.SequenceHeader** %33, align 16
  %35 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %34, i64 0, i32 27
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  %38 = select i1 %37, i32 3, i32 1
  %39 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = sext i32 %40 to i64
  %42 = sub nsw i64 0, %41
  %43 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %23, i64 %42
  %44 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 2
  %45 = load i32, i32* %44, align 8
  %46 = sext i32 %45 to i64
  %47 = sub nsw i64 0, %46
  %48 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %43, i64 %47
  %49 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 32
  %50 = load i8, i8* %49, align 4
  %51 = zext i8 %50 to i32
  %52 = add nsw i32 %40, %51
  %53 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 21, i32 4
  %54 = load i32, i32* %53, align 16
  %55 = icmp slt i32 %52, %54
  %56 = select i1 %55, i32 %52, i32 %54
  %57 = icmp slt i32 %40, %56
  %58 = lshr i64 4128764, %27
  %59 = and i64 %58, 1
  %60 = icmp ne i64 %59, 0
  %61 = and i1 %60, %57
  br i1 %61, label %62, label %110

62:                                               ; preds = %11
  %63 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %48, i64 1
  br label %64

64:                                               ; preds = %103, %62
  %65 = phi i32 [ %40, %62 ], [ %106, %103 ]
  %66 = phi i32 [ 0, %62 ], [ %104, %103 ]
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %48, i64 %67
  %69 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %68, align 8
  %70 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %69, i64 0, i32 0
  %71 = load i8, i8* %70, align 8
  %72 = zext i8 %71 to i64
  %73 = lshr i64 2033663, %72
  %74 = and i64 %73, 1
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %64
  %77 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide, i64 0, i64 %72
  %78 = load i8, i8* %77, align 1
  br label %79

79:                                               ; preds = %76, %64
  %80 = phi i8 [ %78, %76 ], [ 16, %64 ]
  %81 = icmp eq i8 %80, 1
  %82 = and i32 %65, -2
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %63, i64 %83
  %85 = select i1 %81, i8 2, i8 %80
  %86 = select i1 %81, i32 %82, i32 %65
  %87 = select i1 %81, %struct.MB_MODE_INFO** %84, %struct.MB_MODE_INFO** %68
  %88 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %87, align 8
  %89 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %88, i64 0, i32 28
  %90 = load i16, i16* %89, align 1
  %91 = trunc i16 %90 to i8
  %92 = icmp sgt i8 %91, -1
  br i1 %92, label %93, label %97

93:                                               ; preds = %79
  %94 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %88, i64 0, i32 6, i64 0
  %95 = load i8, i8* %94, align 8
  %96 = icmp slt i8 %95, 1
  br i1 %96, label %103, label %97

97:                                               ; preds = %93, %79
  %98 = add nsw i32 %66, 1
  %99 = sub nsw i32 %86, %40
  %100 = load i8, i8* %49, align 4
  %101 = icmp ult i8 %100, %85
  %102 = select i1 %101, i8 %100, i8 %85
  call fastcc void @build_obmc_prediction(%struct.macroblockd* %1, i32 0, i32 %99, i8 zeroext %102, i32 0, %struct.MB_MODE_INFO* %88, i8* nonnull %12, i32 %38) #4
  br label %103

103:                                              ; preds = %97, %93
  %104 = phi i32 [ %98, %97 ], [ %66, %93 ]
  %105 = zext i8 %85 to i32
  %106 = add nsw i32 %86, %105
  %107 = icmp slt i32 %106, %56
  %108 = icmp slt i32 %104, %32
  %109 = and i1 %107, %108
  br i1 %109, label %64, label %110

110:                                              ; preds = %103, %11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #4
  br label %111

111:                                              ; preds = %6, %110
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal fastcc void @build_obmc_prediction(%struct.macroblockd*, i32, i32, i8 zeroext, i32, %struct.MB_MODE_INFO* nocapture readonly, i8* nocapture readonly, i32) unnamed_addr #3 {
  %9 = alloca %struct.InterPredParams, align 8
  %10 = alloca i32, align 4
  %11 = bitcast i32* %10 to %struct.mv*
  %12 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 0
  %13 = load i8, i8* %12, align 8
  %14 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 16
  %16 = add nsw i32 %15, %1
  %17 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %18, %2
  %20 = icmp sgt i32 %7, 0
  br i1 %20, label %21, label %44

21:                                               ; preds = %8
  %22 = icmp ugt i8 %13, 3
  %23 = select i1 %22, i8 %13, i8 3
  %24 = getelementptr inbounds i8, i8* %6, i64 8
  %25 = bitcast i8* %24 to i8***
  %26 = getelementptr inbounds i8, i8* %6, i64 16
  %27 = bitcast i8* %26 to i32**
  %28 = getelementptr inbounds i8, i8* %6, i64 24
  %29 = bitcast i8* %28 to i32**
  %30 = getelementptr inbounds i8, i8* %6, i64 32
  %31 = bitcast i8* %30 to i32**
  %32 = and i32 %1, 1
  %33 = icmp eq i32 %32, 0
  %34 = zext i8 %23 to i64
  %35 = lshr i64 131077, %34
  %36 = trunc i64 %35 to i32
  %37 = and i32 %36, 1
  %38 = and i32 %2, 1
  %39 = icmp eq i32 %38, 0
  %40 = lshr i64 65539, %34
  %41 = trunc i64 %40 to i32
  %42 = and i32 %41, 1
  %43 = zext i32 %7 to i64
  br label %73

44:                                               ; preds = %73, %8
  %45 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 6, i64 0
  %46 = load i8, i8* %45, align 8
  %47 = bitcast i8* %6 to %struct.AV1Common**
  %48 = load %struct.AV1Common*, %struct.AV1Common** %47, align 8
  %49 = add i8 %46, -1
  %50 = icmp ult i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %44
  %52 = sext i8 %46 to i64
  %53 = add nsw i64 %52, -1
  %54 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %48, i64 0, i32 13, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %62, label %57

57:                                               ; preds = %51
  %58 = sext i32 %55 to i64
  %59 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %48, i64 0, i32 16, i64 %58
  %60 = load %struct.RefCntBuffer*, %struct.RefCntBuffer** %59, align 8
  %61 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %48, i64 0, i32 15, i64 %58
  br label %62

62:                                               ; preds = %57, %51, %44
  %63 = phi %struct.RefCntBuffer* [ %60, %57 ], [ null, %44 ], [ null, %51 ]
  %64 = phi %struct.scale_factors* [ %61, %57 ], [ null, %44 ], [ null, %51 ]
  %65 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 21, i64 0
  store %struct.scale_factors* %64, %struct.scale_factors** %65, align 8
  %66 = getelementptr inbounds %struct.scale_factors, %struct.scale_factors* %64, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %116, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %struct.scale_factors, %struct.scale_factors* %64, i64 0, i32 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, -1
  br i1 %72, label %116, label %119

73:                                               ; preds = %73, %21
  %74 = phi i64 [ 0, %21 ], [ %114, %73 ]
  %75 = load i8**, i8*** %25, align 8
  %76 = getelementptr inbounds i8*, i8** %75, i64 %74
  %77 = load i8*, i8** %76, align 8
  %78 = load i32*, i32** %27, align 8
  %79 = getelementptr inbounds i32, i32* %78, i64 %74
  %80 = load i32, i32* %79, align 4
  %81 = load i32*, i32** %29, align 8
  %82 = getelementptr inbounds i32, i32* %81, i64 %74
  %83 = load i32, i32* %82, align 4
  %84 = load i32*, i32** %31, align 8
  %85 = getelementptr inbounds i32, i32* %84, i64 %74
  %86 = load i32, i32* %85, align 4
  %87 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %74, i32 1
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %74, i32 2
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 0
  %92 = or i1 %33, %91
  %93 = select i1 %92, i32 0, i32 %37
  %94 = sub i32 %1, %93
  %95 = icmp eq i32 %88, 0
  %96 = or i1 %39, %95
  %97 = select i1 %96, i32 0, i32 %42
  %98 = sub i32 %2, %97
  %99 = shl nsw i32 %98, 2
  %100 = ashr i32 %99, %88
  %101 = shl nsw i32 %94, 2
  %102 = ashr i32 %101, %90
  %103 = sext i32 %102 to i64
  %104 = sext i32 %86 to i64
  %105 = mul nsw i64 %103, %104
  %106 = sext i32 %100 to i64
  %107 = add nsw i64 %105, %106
  %108 = getelementptr inbounds i8, i8* %77, i64 %107
  %109 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %74, i32 3, i32 0
  store i8* %108, i8** %109, align 8
  %110 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %74, i32 3, i32 1
  store i8* %77, i8** %110, align 8
  %111 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %74, i32 3, i32 2
  store i32 %80, i32* %111, align 8
  %112 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %74, i32 3, i32 3
  store i32 %83, i32* %112, align 4
  %113 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %74, i32 3, i32 4
  store i32 %86, i32* %113, align 8
  %114 = add nuw nsw i64 %74, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %44, label %73

116:                                              ; preds = %69, %62
  %117 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 45
  %118 = load %struct.aom_internal_error_info*, %struct.aom_internal_error_info** %117, align 16
  tail call void (%struct.aom_internal_error_info*, i32, i8*, ...) @aom_internal_error(%struct.aom_internal_error_info* %118, i32 5, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #4
  br label %119

119:                                              ; preds = %69, %116
  %120 = getelementptr inbounds %struct.RefCntBuffer, %struct.RefCntBuffer* %63, i64 0, i32 17
  tail call void @av1_setup_pre_planes(%struct.macroblockd* %0, i32 0, %struct.yv12_buffer_config* %120, i32 %16, i32 %19, %struct.scale_factors* %64, i32 %7) #4
  %121 = load i32, i32* %17, align 4
  %122 = add nsw i32 %121, %2
  %123 = shl i32 %122, 2
  %124 = load i32, i32* %14, align 16
  %125 = add nsw i32 %124, %1
  %126 = shl i32 %125, 2
  %127 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 6
  %128 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %127, align 8
  %129 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %128, align 8
  %130 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %129, i64 0, i32 0
  %131 = load i8, i8* %130, align 8
  %132 = bitcast %struct.InterPredParams* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %132) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 -86, i64 216, i1 false)
  br i1 %20, label %133, label %159

133:                                              ; preds = %119
  %134 = icmp eq i32 %4, 0
  %135 = zext i8 %131 to i64
  %136 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %135
  %137 = zext i8 %3 to i32
  %138 = shl nuw nsw i32 %137, 2
  %139 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %135
  %140 = bitcast i32* %10 to i8*
  %141 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 5, i64 0, i32 0
  %142 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 40
  %143 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %5, i64 0, i32 8, i32 0
  %144 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3
  %145 = bitcast %struct.ConvolveParams* %144 to i8*
  %146 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 0
  %147 = getelementptr inbounds i8, i8* %145, i64 4
  %148 = bitcast i8* %147 to i32*
  %149 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 1
  %150 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 2
  %151 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 3
  %152 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 4
  %153 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 5
  %154 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 6
  %155 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 7
  %156 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 8
  %157 = bitcast i32* %156 to i64*
  %158 = zext i32 %7 to i64
  br label %160

159:                                              ; preds = %221, %119
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %132) #4
  ret void

160:                                              ; preds = %221, %133
  %161 = phi i64 [ 0, %133 ], [ %222, %221 ]
  %162 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %161
  br i1 %134, label %178, label %163

163:                                              ; preds = %160
  %164 = load i8, i8* %136, align 1
  %165 = zext i8 %164 to i32
  %166 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %161, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = add nsw i32 %167, 1
  %169 = lshr i32 %165, %168
  %170 = lshr i32 64, %168
  %171 = icmp slt i32 %169, 4
  %172 = icmp sgt i32 %169, %170
  %173 = select i1 %172, i32 %170, i32 %169
  %174 = select i1 %171, i32 4, i32 %173
  %175 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %161, i32 2
  %176 = load i32, i32* %175, align 8
  %177 = lshr i32 %138, %176
  br label %193

178:                                              ; preds = %160
  %179 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %161, i32 1
  %180 = load i32, i32* %179, align 4
  %181 = lshr i32 %138, %180
  %182 = load i8, i8* %139, align 1
  %183 = zext i8 %182 to i32
  %184 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %161, i32 2
  %185 = load i32, i32* %184, align 8
  %186 = add nsw i32 %185, 1
  %187 = lshr i32 %183, %186
  %188 = lshr i32 64, %186
  %189 = icmp slt i32 %187, 4
  %190 = icmp sgt i32 %187, %188
  %191 = select i1 %190, i32 %188, i32 %187
  %192 = select i1 %189, i32 4, i32 %191
  br label %193

193:                                              ; preds = %178, %163
  %194 = phi i32 [ %174, %163 ], [ %181, %178 ]
  %195 = phi i32 [ %177, %163 ], [ %192, %178 ]
  %196 = call i32 @av1_skip_u4x4_pred_in_obmc(i8 zeroext %131, %struct.macroblockd_plane* %162, i32 %4) #4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %221

198:                                              ; preds = %193
  %199 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %161, i32 4, i64 0
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %140) #4
  %200 = load i32, i32* %141, align 8
  store i32 %200, i32* %10, align 4
  %201 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %161, i32 2
  %202 = load i32, i32* %201, align 8
  %203 = ashr i32 %126, %202
  %204 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %161, i32 1
  %205 = load i32, i32* %204, align 4
  %206 = ashr i32 %123, %205
  %207 = load i32, i32* %142, align 16
  %208 = load %struct.scale_factors*, %struct.scale_factors** %65, align 8
  %209 = load i32, i32* %143, align 4
  call void @av1_init_inter_params(%struct.InterPredParams* nonnull %9, i32 %194, i32 %195, i32 %203, i32 %206, i32 %205, i32 %202, i32 %207, i32 0, i32 0, %struct.scale_factors* %208, %struct.buf_2d* %199, i32 %209) #4
  %210 = load i32, i32* %142, align 16
  %211 = icmp sgt i32 %210, 10
  %212 = add nsw i32 %210, -7
  %213 = sub nsw i32 21, %210
  %214 = select i1 %211, i32 %212, i32 3
  %215 = select i1 %211, i32 %213, i32 11
  store i32 0, i32* %146, align 8
  store i32 -1431655766, i32* %148, align 4
  store i16* null, i16** %149, align 8
  store i32 0, i32* %150, align 8
  store i32 %214, i32* %151, align 4
  store i32 %215, i32* %152, align 8
  %216 = trunc i64 %161 to i32
  store i32 %216, i32* %153, align 4
  store i32 0, i32* %154, align 8
  store i32 0, i32* %155, align 4
  store i64 -6148914691236517206, i64* %157, align 8
  %217 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %161, i32 3, i32 0
  %218 = load i8*, i8** %217, align 8
  %219 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %161, i32 3, i32 4
  %220 = load i32, i32* %219, align 8
  call void @av1_build_one_inter_predictor(i8* %218, i32 %220, %struct.mv* nonnull %11, %struct.InterPredParams* nonnull %9, %struct.macroblockd* null, i32 0, i32 0, i32 0, i8** null, void (%struct.mv*, %struct.InterPredParams*, %struct.macroblockd*, i32, i32, i32, i8**, i8**, %struct.SubpelParams*, i32*)* nonnull @enc_calc_subpel_params) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %140) #4
  br label %221

221:                                              ; preds = %193, %198
  %222 = add nuw nsw i64 %161, 1
  %223 = icmp eq i64 %222, %158
  br i1 %223, label %159, label %160
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_build_prediction_by_left_preds(%struct.AV1Common*, %struct.macroblockd*, i8**, i32*, i32*, i32*) local_unnamed_addr #0 {
  %7 = alloca %struct.build_prediction_ctxt, align 8
  %8 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 8
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %116, label %11

11:                                               ; preds = %6
  %12 = bitcast %struct.build_prediction_ctxt* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  %13 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 0
  store %struct.AV1Common* %0, %struct.AV1Common** %13, align 8
  %14 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 1
  store i8** %2, i8*** %14, align 8
  %15 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 2
  store i32* %3, i32** %15, align 8
  %16 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 3
  store i32* %4, i32** %16, align 8
  %17 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 4
  store i32* %5, i32** %17, align 8
  %18 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 5
  %19 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 20
  %20 = load i32, i32* %19, align 16
  store i32 %20, i32* %18, align 8
  %21 = getelementptr inbounds %struct.build_prediction_ctxt, %struct.build_prediction_ctxt* %7, i64 0, i32 6
  store i8* null, i8** %21, align 8
  %22 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 6
  %23 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %22, align 8
  %24 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %23, align 8
  %25 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %24, i64 0, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high_log2, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i64
  %31 = getelementptr inbounds [6 x i32], [6 x i32]* @max_neighbor_obmc, i64 0, i64 %30
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 35
  %34 = load %struct.SequenceHeader*, %struct.SequenceHeader** %33, align 16
  %35 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %34, i64 0, i32 27
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  %38 = select i1 %37, i32 3, i32 1
  %39 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 0
  %40 = load i32, i32* %39, align 16
  %41 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %23, i64 -1
  %42 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = mul nsw i32 %43, %40
  %45 = sext i32 %44 to i64
  %46 = sub nsw i64 0, %45
  %47 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %41, i64 %46
  %48 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 33
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = add nsw i32 %40, %50
  %52 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 21, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %51, %53
  %55 = select i1 %54, i32 %51, i32 %53
  %56 = icmp slt i32 %40, %55
  %57 = lshr i64 4063226, %27
  %58 = and i64 %57, 1
  %59 = icmp ne i64 %58, 0
  %60 = and i1 %59, %56
  br i1 %60, label %61, label %115

61:                                               ; preds = %11, %113
  %62 = phi i32 [ %114, %113 ], [ %43, %11 ]
  %63 = phi i32 [ %109, %113 ], [ %40, %11 ]
  %64 = phi i32 [ %107, %113 ], [ 0, %11 ]
  %65 = mul nsw i32 %63, %62
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %47, i64 %66
  %68 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %67, align 8
  %69 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %68, i64 0, i32 0
  %70 = load i8, i8* %69, align 8
  %71 = zext i8 %70 to i64
  %72 = lshr i64 3083263, %71
  %73 = and i64 %72, 1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %88, label %75

75:                                               ; preds = %61
  %76 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high, i64 0, i64 %71
  %77 = load i8, i8* %76, align 1
  %78 = lshr i64 131077, %71
  %79 = and i64 %78, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %88, label %81

81:                                               ; preds = %75
  %82 = and i32 %63, -2
  %83 = or i32 %63, 1
  %84 = mul nsw i32 %83, %62
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %47, i64 %85
  %87 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %86, align 8
  br label %88

88:                                               ; preds = %81, %75, %61
  %89 = phi %struct.MB_MODE_INFO* [ %87, %81 ], [ %68, %75 ], [ %68, %61 ]
  %90 = phi i8 [ 2, %81 ], [ %77, %75 ], [ 16, %61 ]
  %91 = phi i32 [ %82, %81 ], [ %63, %75 ], [ %63, %61 ]
  %92 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %89, i64 0, i32 28
  %93 = load i16, i16* %92, align 1
  %94 = trunc i16 %93 to i8
  %95 = icmp sgt i8 %94, -1
  br i1 %95, label %96, label %100

96:                                               ; preds = %88
  %97 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %89, i64 0, i32 6, i64 0
  %98 = load i8, i8* %97, align 8
  %99 = icmp slt i8 %98, 1
  br i1 %99, label %106, label %100

100:                                              ; preds = %96, %88
  %101 = add nsw i32 %64, 1
  %102 = sub nsw i32 %91, %40
  %103 = load i8, i8* %48, align 1
  %104 = icmp ult i8 %103, %90
  %105 = select i1 %104, i8 %103, i8 %90
  call fastcc void @build_obmc_prediction(%struct.macroblockd* %1, i32 %102, i32 0, i8 zeroext %105, i32 1, %struct.MB_MODE_INFO* %89, i8* nonnull %12, i32 %38) #4
  br label %106

106:                                              ; preds = %100, %96
  %107 = phi i32 [ %101, %100 ], [ %64, %96 ]
  %108 = zext i8 %90 to i32
  %109 = add nsw i32 %91, %108
  %110 = icmp slt i32 %109, %55
  %111 = icmp slt i32 %107, %32
  %112 = and i1 %110, %111
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = load i32, i32* %42, align 8
  br label %61

115:                                              ; preds = %106, %11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #4
  br label %116

116:                                              ; preds = %6, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_build_obmc_inter_predictors_sb(%struct.AV1Common*, %struct.macroblockd*) local_unnamed_addr #0 {
  %3 = alloca [3 x i8*], align 16
  %4 = alloca [3 x i8*], align 16
  %5 = alloca [3 x i32], align 4
  %6 = alloca [3 x i32], align 4
  %7 = alloca [3 x i32], align 4
  %8 = alloca [3 x i32], align 4
  %9 = alloca [3 x i32], align 4
  %10 = alloca [3 x i32], align 4
  %11 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 35
  %12 = load %struct.SequenceHeader*, %struct.SequenceHeader** %11, align 16
  %13 = getelementptr inbounds %struct.SequenceHeader, %struct.SequenceHeader* %12, i64 0, i32 27
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 0
  %16 = select i1 %15, i32 3, i32 1
  %17 = bitcast [3 x i8*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #4
  %18 = getelementptr inbounds [3 x i8*], [3 x i8*]* %3, i64 0, i64 0
  %19 = bitcast [3 x i8*]* %4 to i8*
  %20 = bitcast [3 x i8*]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #4
  %21 = getelementptr inbounds [3 x i8*], [3 x i8*]* %4, i64 0, i64 0
  %22 = bitcast [3 x i32]* %5 to i8*
  %23 = bitcast [3 x i8*]* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %22) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* align 4 bitcast ([3 x i32]* @__const.av1_build_obmc_inter_predictors_sb.dst_height2 to i8*), i64 12, i1 false)
  %24 = bitcast [3 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %24) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %24, i8* align 4 bitcast ([3 x i32]* @__const.av1_build_obmc_inter_predictors_sb.dst_height2 to i8*), i64 12, i1 false)
  %25 = bitcast [3 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %25) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 4 bitcast ([3 x i32]* @__const.av1_build_obmc_inter_predictors_sb.dst_height2 to i8*), i64 12, i1 false)
  %26 = bitcast [3 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %26) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %26, i8* align 4 bitcast ([3 x i32]* @__const.av1_build_obmc_inter_predictors_sb.dst_height2 to i8*), i64 12, i1 false)
  %27 = bitcast [3 x i32]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %27) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %27, i8* align 4 bitcast ([3 x i32]* @__const.av1_build_obmc_inter_predictors_sb.dst_height2 to i8*), i64 12, i1 false)
  %28 = bitcast [3 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %28) #4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* align 4 bitcast ([3 x i32]* @__const.av1_build_obmc_inter_predictors_sb.dst_height2 to i8*), i64 12, i1 false)
  call void @av1_setup_obmc_dst_bufs(%struct.macroblockd* %1, i8** nonnull %18, i8** nonnull %21) #4
  %29 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 0
  %30 = load i32, i32* %29, align 16
  %31 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds [3 x i32], [3 x i32]* %7, i64 0, i64 0
  %34 = getelementptr inbounds [3 x i32], [3 x i32]* %9, i64 0, i64 0
  %35 = getelementptr inbounds [3 x i32], [3 x i32]* %5, i64 0, i64 0
  call void @av1_build_prediction_by_above_preds(%struct.AV1Common* %0, %struct.macroblockd* %1, i8** nonnull %18, i32* nonnull %33, i32* nonnull %34, i32* nonnull %35)
  %36 = getelementptr inbounds [3 x i32], [3 x i32]* %8, i64 0, i64 0
  %37 = getelementptr inbounds [3 x i32], [3 x i32]* %10, i64 0, i64 0
  %38 = getelementptr inbounds [3 x i32], [3 x i32]* %6, i64 0, i64 0
  call void @av1_build_prediction_by_left_preds(%struct.AV1Common* %0, %struct.macroblockd* %1, i8** nonnull %21, i32* nonnull %36, i32* nonnull %37, i32* nonnull %38)
  %39 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 4, i64 0
  %40 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %1, i64 0, i32 6
  %41 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %40, align 8
  %42 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %41, align 8
  %43 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %42, i64 0, i32 0
  %44 = load i8, i8* %43, align 8
  %45 = getelementptr inbounds %struct.AV1Common, %struct.AV1Common* %0, i64 0, i32 12
  %46 = load %struct.RefCntBuffer*, %struct.RefCntBuffer** %45, align 16
  %47 = getelementptr inbounds %struct.RefCntBuffer, %struct.RefCntBuffer* %46, i64 0, i32 17
  call void @av1_setup_dst_planes(%struct.macroblockd_plane* %39, i8 zeroext %44, %struct.yv12_buffer_config* %47, i32 %30, i32 %32, i32 0, i32 %16) #4
  call void @av1_build_obmc_inter_prediction(%struct.AV1Common* %0, %struct.macroblockd* %1, i8** nonnull %18, i32* nonnull %35, i8** nonnull %21, i32* nonnull %38) #4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %28) #4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %27) #4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %26) #4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %25) #4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %24) #4
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %22) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #4
  ret void
}

declare void @av1_setup_obmc_dst_bufs(%struct.macroblockd*, i8**, i8**) local_unnamed_addr #1

declare void @av1_setup_dst_planes(%struct.macroblockd_plane*, i8 zeroext, %struct.yv12_buffer_config*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @av1_build_obmc_inter_prediction(%struct.AV1Common*, %struct.macroblockd*, i8**, i32*, i8**, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_build_inter_predictors_for_planes_single_buf(%struct.macroblockd*, i8 zeroext, i32, i32, i32, i8** nocapture readonly, i32* nocapture readonly) local_unnamed_addr #0 {
  %8 = alloca %struct.WarpTypesAllowed, align 4
  %9 = alloca %struct.InterPredParams, align 8
  %10 = alloca i32, align 4
  %11 = bitcast i32* %10 to %struct.mv*
  %12 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 6
  %13 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %12, align 8
  %14 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %13, align 8
  %15 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 0
  %16 = load i32, i32* %15, align 16
  %17 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = shl nsw i32 %18, 2
  %20 = shl nsw i32 %16, 2
  %21 = bitcast %struct.WarpTypesAllowed* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #4
  %22 = getelementptr inbounds %struct.WarpTypesAllowed, %struct.WarpTypesAllowed* %8, i64 0, i32 0
  store i32 -1431655766, i32* %22, align 4
  %23 = getelementptr inbounds %struct.WarpTypesAllowed, %struct.WarpTypesAllowed* %8, i64 0, i32 1
  store i32 -1431655766, i32* %23, align 4
  %24 = sext i32 %4 to i64
  %25 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %14, i64 0, i32 2
  %26 = load i8, i8* %25, align 2
  %27 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %14, i64 0, i32 0
  %28 = load i8, i8* %27, align 8
  %29 = zext i8 %28 to i64
  %30 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %29
  %31 = load i8, i8* %30, align 1
  %32 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %29
  %33 = load i8, i8* %32, align 1
  switch i8 %26, label %48 [
    i8 15, label %34
    i8 23, label %34
  ]

34:                                               ; preds = %7, %7
  %35 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 46
  %36 = load %struct.WarpedMotionParams*, %struct.WarpedMotionParams** %35, align 8
  %37 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %14, i64 0, i32 6, i64 %24
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i64
  %40 = getelementptr inbounds %struct.WarpedMotionParams, %struct.WarpedMotionParams* %36, i64 %39, i32 5
  %41 = load i8, i8* %40, align 4
  %42 = icmp ult i8 %31, %33
  %43 = select i1 %42, i8 %31, i8 %33
  %44 = icmp ugt i8 %43, 7
  %45 = icmp ugt i8 %41, 1
  %46 = and i1 %44, %45
  %47 = zext i1 %46 to i32
  br label %48

48:                                               ; preds = %7, %34
  %49 = phi i32 [ %47, %34 ], [ 0, %7 ]
  store i32 %49, i32* %22, align 4
  %50 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %14, i64 0, i32 9
  %51 = load i8, i8* %50, align 8
  %52 = icmp eq i8 %51, 2
  %53 = zext i1 %52 to i32
  store i32 %53, i32* %23, align 4
  %54 = icmp sgt i32 %2, %3
  br i1 %54, label %81, label %55

55:                                               ; preds = %48
  %56 = zext i8 %1 to i64
  %57 = bitcast %struct.InterPredParams* %9 to i8*
  %58 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 40
  %59 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 21, i64 %24
  %60 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %14, i64 0, i32 8, i32 0
  %61 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3
  %62 = bitcast %struct.ConvolveParams* %61 to i8*
  %63 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 0
  %64 = getelementptr inbounds i8, i8* %62, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 1
  %67 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 2
  %68 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 3
  %69 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 4
  %70 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 5
  %71 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 6
  %72 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 7
  %73 = getelementptr inbounds %struct.InterPredParams, %struct.InterPredParams* %9, i64 0, i32 3, i32 8
  %74 = bitcast i32* %73 to i64*
  %75 = bitcast i32* %10 to i8*
  %76 = bitcast i32* %10 to i16*
  %77 = getelementptr inbounds %struct.mv, %struct.mv* %11, i64 0, i32 1
  %78 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %14, i64 0, i32 5, i64 %24, i32 0
  %79 = sext i32 %2 to i64
  %80 = sext i32 %3 to i64
  br label %82

81:                                               ; preds = %82, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #4
  ret void

82:                                               ; preds = %82, %55
  %83 = phi i64 [ %118, %82 ], [ %79, %55 ]
  %84 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %83, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %83, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = sext i32 %85 to i64
  %89 = sext i32 %87 to i64
  %90 = getelementptr inbounds [22 x [2 x [2 x i8]]], [22 x [2 x [2 x i8]]]* @ss_size_lookup, i64 0, i64 %56, i64 %88, i64 %89
  %91 = load i8, i8* %90, align 1
  %92 = zext i8 %91 to i64
  %93 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %92
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %92
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  call void @llvm.lifetime.start.p0i8(i64 216, i8* nonnull %57) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %57, i8 -86, i64 216, i1 false)
  %99 = ashr i32 %20, %87
  %100 = ashr i32 %19, %85
  %101 = load i32, i32* %58, align 16
  %102 = load %struct.scale_factors*, %struct.scale_factors** %59, align 8
  %103 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %83, i32 4, i64 %24
  %104 = load i32, i32* %60, align 4
  call void @av1_init_inter_params(%struct.InterPredParams* nonnull %9, i32 %95, i32 %98, i32 %99, i32 %100, i32 %85, i32 %87, i32 %101, i32 0, i32 0, %struct.scale_factors* %102, %struct.buf_2d* %103, i32 %104) #4
  %105 = load i32, i32* %58, align 16
  %106 = icmp sgt i32 %105, 10
  %107 = add nsw i32 %105, -7
  %108 = sub nsw i32 21, %105
  %109 = select i1 %106, i32 %107, i32 3
  %110 = select i1 %106, i32 %108, i32 11
  store i32 0, i32* %63, align 8
  store i32 -1431655766, i32* %65, align 4
  store i16* null, i16** %66, align 8
  store i32 0, i32* %67, align 8
  store i32 %109, i32* %68, align 4
  store i32 %110, i32* %69, align 8
  %111 = trunc i64 %83 to i32
  store i32 %111, i32* %70, align 4
  store i32 0, i32* %71, align 8
  store i32 0, i32* %72, align 4
  store i64 -6148914691236517206, i64* %74, align 8
  call void @av1_init_warp_params(%struct.InterPredParams* nonnull %9, %struct.WarpTypesAllowed* nonnull %8, i32 %4, %struct.macroblockd* %0, %struct.MB_MODE_INFO* %14) #4
  %112 = getelementptr inbounds i8*, i8** %5, i64 %83
  %113 = load i8*, i8** %112, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #4
  store i16 -21846, i16* %76, align 4
  store i16 -21846, i16* %77, align 2
  %114 = load i32, i32* %78, align 4
  store i32 %114, i32* %10, align 4
  %115 = getelementptr inbounds i32, i32* %6, i64 %83
  %116 = load i32, i32* %115, align 4
  %117 = load i32, i32* %63, align 8
  call void @av1_build_one_inter_predictor(i8* %113, i32 %116, %struct.mv* nonnull %11, %struct.InterPredParams* nonnull %9, %struct.macroblockd* null, i32 0, i32 0, i32 %117, i8** null, void (%struct.mv*, %struct.InterPredParams*, %struct.macroblockd*, i32, i32, i32, i8**, i8**, %struct.SubpelParams*, i32*)* nonnull @enc_calc_subpel_params) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #4
  call void @llvm.lifetime.end.p0i8(i64 216, i8* nonnull %57) #4
  %118 = add nsw i64 %83, 1
  %119 = icmp slt i64 %83, %80
  br i1 %119, label %82, label %81
}

declare void @av1_init_warp_params(%struct.InterPredParams*, %struct.WarpTypesAllowed*, i32, %struct.macroblockd*, %struct.MB_MODE_INFO*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_build_wedge_inter_predictor_from_buf(%struct.macroblockd* nocapture readonly, i8 zeroext, i32, i32, i8** nocapture readonly, i32* nocapture readonly, i8** nocapture readonly, i32* nocapture readonly) local_unnamed_addr #0 {
  %9 = icmp sgt i32 %2, %3
  br i1 %9, label %97, label %10

10:                                               ; preds = %8
  %11 = zext i8 %1 to i64
  %12 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 6
  %13 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 50
  %14 = bitcast i8** %13 to i64*
  %15 = sext i32 %2 to i64
  %16 = sext i32 %3 to i64
  br label %17

17:                                               ; preds = %94, %10
  %18 = phi i64 [ %95, %94 ], [ %15, %10 ]
  %19 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %18, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %18, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = sext i32 %20 to i64
  %24 = sext i32 %22 to i64
  %25 = getelementptr inbounds [22 x [2 x [2 x i8]]], [22 x [2 x [2 x i8]]]* @ss_size_lookup, i64 0, i64 %11, i64 %23, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i64
  %28 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_high, i64 0, i64 %27
  %32 = load i8, i8* %31, align 1
  %33 = zext i8 %32 to i32
  %34 = getelementptr inbounds i8*, i8** %4, i64 %18
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds i32, i32* %5, i64 %18
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds i8*, i8** %6, i64 %18
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds i32, i32* %7, i64 %18
  %41 = load i32, i32* %40, align 4
  %42 = load %struct.MB_MODE_INFO**, %struct.MB_MODE_INFO*** %12, align 8
  %43 = load %struct.MB_MODE_INFO*, %struct.MB_MODE_INFO** %42, align 8
  %44 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %43, i64 0, i32 6, i64 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 1
  %47 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %18, i32 3, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = getelementptr inbounds %struct.macroblockd, %struct.macroblockd* %0, i64 0, i32 4, i64 %18, i32 3, i32 4
  %50 = load i64, i64* %14, align 16
  %51 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %43, i64 0, i32 17
  %52 = bitcast %struct.INTERINTER_COMPOUND_DATA* %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = inttoptr i64 %50 to i8*
  br i1 %46, label %89, label %54

54:                                               ; preds = %17
  %55 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %43, i64 0, i32 17, i32 4
  %56 = load i8, i8* %55, align 1
  %57 = or i8 %56, 1
  %58 = icmp eq i8 %57, 3
  br i1 %58, label %59, label %89

59:                                               ; preds = %54
  %60 = icmp eq i64 %18, 0
  %61 = icmp eq i8 %56, 3
  %62 = and i1 %60, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %59
  %64 = load void (i8*, i8, i8*, i32, i8*, i32, i32, i32)*, void (i8*, i8, i8*, i32, i8*, i32, i32, i32)** @av1_build_compound_diffwtd_mask, align 8
  %65 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %43, i64 0, i32 17, i32 3
  %66 = load i8, i8* %65, align 2
  tail call void %64(i8* %53, i8 zeroext %66, i8* %35, i32 %37, i8* %39, i32 %41, i32 %33, i32 %30) #4
  br label %67

67:                                               ; preds = %63, %59
  %68 = load i32, i32* %49, align 8
  %69 = getelementptr inbounds %struct.MB_MODE_INFO, %struct.MB_MODE_INFO* %43, i64 0, i32 0
  %70 = load i8, i8* %69, align 8
  %71 = zext i8 %70 to i64
  %72 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_high_log2, i64 0, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = shl i32 2, %74
  %76 = icmp eq i32 %75, %33
  %77 = zext i1 %76 to i32
  %78 = getelementptr inbounds [22 x i8], [22 x i8]* @mi_size_wide_log2, i64 0, i64 %71
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = shl i32 2, %80
  %82 = icmp eq i32 %81, %30
  %83 = zext i1 %82 to i32
  %84 = tail call i8* @av1_get_compound_type_mask(%struct.INTERINTER_COMPOUND_DATA* %51, i8 zeroext %70) #4
  %85 = load void (i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32, i32)*, void (i8*, i32, i8*, i32, i8*, i32, i8*, i32, i32, i32, i32, i32)** @aom_blend_a64_mask, align 8
  %86 = getelementptr inbounds [22 x i8], [22 x i8]* @block_size_wide, i64 0, i64 %71
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i32
  tail call void %85(i8* %48, i32 %68, i8* %35, i32 %37, i8* %39, i32 %41, i8* %84, i32 %88, i32 %30, i32 %33, i32 %83, i32 %77) #4
  br label %94

89:                                               ; preds = %54, %17
  %90 = load void (i8*, i64, i8*, i64, i32, i32)*, void (i8*, i64, i8*, i64, i32, i32)** @aom_convolve_copy, align 8
  %91 = sext i32 %37 to i64
  %92 = load i32, i32* %49, align 8
  %93 = sext i32 %92 to i64
  tail call void %90(i8* %35, i64 %91, i8* %48, i64 %93, i32 %30, i32 %33) #4
  br label %94

94:                                               ; preds = %67, %89
  %95 = add nsw i64 %18, 1
  %96 = icmp slt i64 %18, %16
  br i1 %96, label %17, label %97

97:                                               ; preds = %94, %8
  ret void
}

declare void @av1_build_inter_predictors(%struct.AV1Common*, %struct.macroblockd*, i32, %struct.MB_MODE_INFO*, i32, i32, i32, i32, i32, i8**, void (%struct.mv*, %struct.InterPredParams*, %struct.macroblockd*, i32, i32, i32, i8**, i8**, %struct.SubpelParams*, i32*)*) local_unnamed_addr #1

declare i32 @av1_skip_u4x4_pred_in_obmc(i8 zeroext, %struct.macroblockd_plane*, i32) local_unnamed_addr #1

declare void @aom_internal_error(%struct.aom_internal_error_info*, i32, i8*, ...) local_unnamed_addr #1

declare void @av1_setup_pre_planes(%struct.macroblockd*, i32, %struct.yv12_buffer_config*, i32, i32, %struct.scale_factors*, i32) local_unnamed_addr #1

declare i8* @av1_get_compound_type_mask(%struct.INTERINTER_COMPOUND_DATA*, i8 zeroext) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
