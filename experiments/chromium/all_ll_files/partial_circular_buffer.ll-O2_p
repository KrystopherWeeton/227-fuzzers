; ModuleID = '../../components/webrtc_logging/common/partial_circular_buffer.cc'
source_filename = "../../components/webrtc_logging/common/partial_circular_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.webrtc_logging::PartialCircularBuffer" = type { %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, i32, i32, i32, i32 }
%"struct.webrtc_logging::PartialCircularBuffer::BufferData" = type { i32, i32, i32, [1 x i8] }

@_ZN14webrtc_logging21PartialCircularBufferC1EPvj = hidden unnamed_addr alias void (%"class.webrtc_logging::PartialCircularBuffer"*, i8*, i32), void (%"class.webrtc_logging::PartialCircularBuffer"*, i8*, i32)* @_ZN14webrtc_logging21PartialCircularBufferC2EPvj
@_ZN14webrtc_logging21PartialCircularBufferC1EPvjjb = hidden unnamed_addr alias void (%"class.webrtc_logging::PartialCircularBuffer"*, i8*, i32, i32, i1), void (%"class.webrtc_logging::PartialCircularBuffer"*, i8*, i32, i32, i1)* @_ZN14webrtc_logging21PartialCircularBufferC2EPvjjb

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14webrtc_logging21PartialCircularBufferC2EPvj(%"class.webrtc_logging::PartialCircularBuffer"* nocapture, i8*, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.webrtc_logging::PartialCircularBuffer"* %0 to i8**
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 4
  store i32 0, i32* %8, align 4
  %9 = add i32 %2, -12
  store i32 %9, i32* %6, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14webrtc_logging21PartialCircularBufferC2EPvjjb(%"class.webrtc_logging::PartialCircularBuffer"* nocapture, i8*, i32, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 0
  %7 = bitcast %"class.webrtc_logging::PartialCircularBuffer"* %0 to i8**
  store i8* %1, i8** %7, align 8
  %8 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 3
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 4
  store i32 0, i32* %11, align 4
  %12 = add i32 %2, -12
  store i32 %12, i32* %9, align 4
  br i1 %4, label %13, label %17

13:                                               ; preds = %5
  %14 = getelementptr inbounds i8, i8* %1, i64 8
  %15 = bitcast i8* %14 to i32*
  %16 = load i32, i32* %15, align 4
  store i32 %16, i32* %10, align 8
  br label %23

17:                                               ; preds = %5
  %18 = bitcast i8* %1 to i32*
  store i32 0, i32* %18, align 4
  %19 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %6, align 8
  %20 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %19, i64 0, i32 1
  store i32 %3, i32* %20, align 4
  %21 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %6, align 8
  %22 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %21, i64 0, i32 2
  store i32 0, i32* %22, align 4
  br label %23

23:                                               ; preds = %17, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14webrtc_logging21PartialCircularBuffer4ReadEPvj(%"class.webrtc_logging::PartialCircularBuffer"* nocapture, i8* nocapture, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 4
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 0
  %7 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %6, align 8
  %8 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %7, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp ugt i32 %9, %5
  br i1 %10, label %11, label %123

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 3
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %7, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp ugt i32 %15, %13
  br i1 %16, label %17, label %49

17:                                               ; preds = %11
  %18 = sub i32 %15, %13
  %19 = sub i32 %9, %5
  %20 = icmp ult i32 %18, %2
  %21 = select i1 %20, i32 %18, i32 %2
  %22 = icmp ult i32 %19, %21
  %23 = select i1 %22, i32 %19, i32 %21
  %24 = zext i32 %13 to i64
  %25 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %7, i64 0, i32 3, i64 %24
  %26 = zext i32 %23 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %25, i64 %26, i1 false)
  %27 = load i32, i32* %12, align 8
  %28 = add i32 %27, %23
  store i32 %28, i32* %12, align 8
  %29 = load i32, i32* %4, align 4
  %30 = add i32 %29, %23
  store i32 %30, i32* %4, align 4
  %31 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %6, align 8
  %32 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %31, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %28, %33
  br i1 %34, label %35, label %44

35:                                               ; preds = %17
  %36 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %31, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %37, %39
  br i1 %40, label %41, label %44

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %31, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  store i32 %43, i32* %12, align 8
  br label %44

44:                                               ; preds = %41, %35, %17
  %45 = phi i32 [ %43, %41 ], [ %28, %35 ], [ %28, %17 ]
  %46 = icmp ult i32 %23, %2
  %47 = icmp ugt i32 %19, %21
  %48 = and i1 %46, %47
  br i1 %48, label %49, label %123

49:                                               ; preds = %44, %11
  %50 = phi i32 [ %30, %44 ], [ %5, %11 ]
  %51 = phi %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* [ %31, %44 ], [ %7, %11 ]
  %52 = phi i32 [ %45, %44 ], [ %13, %11 ]
  %53 = phi i32 [ %23, %44 ], [ 0, %11 ]
  %54 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %51, i64 0, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp ult i32 %52, %55
  br i1 %56, label %57, label %60

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br label %99

60:                                               ; preds = %49
  %61 = sub i32 %2, %53
  %62 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 2
  %63 = load i32, i32* %62, align 4
  %64 = sub i32 %63, %52
  %65 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %51, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = sub i32 %66, %50
  %68 = icmp ult i32 %64, %61
  %69 = select i1 %68, i32 %64, i32 %61
  %70 = icmp ult i32 %67, %69
  %71 = select i1 %70, i32 %67, i32 %69
  %72 = zext i32 %53 to i64
  %73 = getelementptr inbounds i8, i8* %1, i64 %72
  %74 = zext i32 %52 to i64
  %75 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %51, i64 0, i32 3, i64 %74
  %76 = zext i32 %71 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %73, i8* align 1 %75, i64 %76, i1 false)
  %77 = load i32, i32* %12, align 8
  %78 = add i32 %77, %71
  store i32 %78, i32* %12, align 8
  %79 = load i32, i32* %4, align 4
  %80 = add i32 %79, %71
  store i32 %80, i32* %4, align 4
  %81 = add i32 %71, %53
  %82 = load i32, i32* %62, align 4
  %83 = icmp eq i32 %78, %82
  br i1 %83, label %84, label %88

84:                                               ; preds = %60
  %85 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %6, align 8
  %86 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %85, i64 0, i32 1
  %87 = load i32, i32* %86, align 4
  store i32 %87, i32* %12, align 8
  br label %88

88:                                               ; preds = %84, %60
  %89 = phi i32 [ %87, %84 ], [ %78, %60 ]
  %90 = icmp ult i32 %81, %2
  br i1 %90, label %91, label %123

91:                                               ; preds = %88
  %92 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %6, align 8
  %93 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %92, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = icmp ult i32 %80, %94
  br i1 %95, label %96, label %123

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %92, i64 0, i32 2
  %98 = load i32, i32* %97, align 4
  br label %99

99:                                               ; preds = %57, %96
  %100 = phi i32 [ %80, %96 ], [ %50, %57 ]
  %101 = phi i32 [ %94, %96 ], [ %59, %57 ]
  %102 = phi i32 [ %89, %96 ], [ %52, %57 ]
  %103 = phi i32 [ %98, %96 ], [ %55, %57 ]
  %104 = phi %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* [ %92, %96 ], [ %51, %57 ]
  %105 = phi i32 [ %81, %96 ], [ %53, %57 ]
  %106 = sub i32 %2, %105
  %107 = sub i32 %103, %102
  %108 = sub i32 %101, %100
  %109 = icmp ult i32 %107, %106
  %110 = select i1 %109, i32 %107, i32 %106
  %111 = icmp ult i32 %108, %110
  %112 = select i1 %111, i32 %108, i32 %110
  %113 = zext i32 %105 to i64
  %114 = getelementptr inbounds i8, i8* %1, i64 %113
  %115 = zext i32 %102 to i64
  %116 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %104, i64 0, i32 3, i64 %115
  %117 = zext i32 %112 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %114, i8* align 1 %116, i64 %117, i1 false)
  %118 = load i32, i32* %12, align 8
  %119 = add i32 %118, %112
  store i32 %119, i32* %12, align 8
  %120 = load i32, i32* %4, align 4
  %121 = add i32 %120, %112
  store i32 %121, i32* %4, align 4
  %122 = add i32 %112, %105
  br label %123

123:                                              ; preds = %88, %99, %91, %44, %3
  %124 = phi i32 [ 0, %3 ], [ %122, %99 ], [ %81, %91 ], [ %23, %44 ], [ %81, %88 ]
  ret i32 %124
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14webrtc_logging21PartialCircularBuffer5WriteEPKvj(%"class.webrtc_logging::PartialCircularBuffer"* nocapture, i8* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 0
  %5 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %6 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = sub i32 %9, %7
  %11 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp ugt i32 %7, %12
  br i1 %13, label %14, label %61

14:                                               ; preds = %3
  %15 = sub i32 %7, %12
  %16 = icmp ult i32 %15, %2
  %17 = select i1 %16, i32 %15, i32 %2
  %18 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %5, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = add i32 %19, %17
  %21 = icmp ult i32 %9, %20
  %22 = select i1 %21, i32 %9, i32 %20
  store i32 %22, i32* %18, align 4
  %23 = icmp eq i32 %17, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %14
  %25 = load i32, i32* %11, align 8
  br label %54

26:                                               ; preds = %14
  %27 = load i32, i32* %8, align 4
  %28 = load i32, i32* %11, align 8
  br label %29

29:                                               ; preds = %51, %26
  %30 = phi i32 [ %28, %26 ], [ %52, %51 ]
  %31 = phi i32 [ %27, %26 ], [ %45, %51 ]
  %32 = phi i8* [ %1, %26 ], [ %41, %51 ]
  %33 = phi i32 [ %17, %26 ], [ %42, %51 ]
  %34 = sub i32 %31, %30
  %35 = icmp ult i32 %34, %33
  %36 = select i1 %35, i32 %34, i32 %33
  %37 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %38 = zext i32 %30 to i64
  %39 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %37, i64 0, i32 3, i64 %38
  %40 = zext i32 %36 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* align 1 %32, i64 %40, i1 false) #3
  %41 = getelementptr inbounds i8, i8* %32, i64 %40
  %42 = sub i32 %33, %36
  %43 = load i32, i32* %11, align 8
  %44 = add i32 %43, %36
  store i32 %44, i32* %11, align 8
  %45 = load i32, i32* %8, align 4
  %46 = icmp ult i32 %44, %45
  br i1 %46, label %51, label %47

47:                                               ; preds = %29
  %48 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %49 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %11, align 8
  br label %51

51:                                               ; preds = %47, %29
  %52 = phi i32 [ %44, %29 ], [ %50, %47 ]
  %53 = icmp eq i32 %42, 0
  br i1 %53, label %54, label %29

54:                                               ; preds = %51, %24
  %55 = phi i32 [ %25, %24 ], [ %52, %51 ]
  %56 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %57 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %56, i64 0, i32 2
  store i32 %55, i32* %57, align 4
  %58 = zext i32 %17 to i64
  %59 = getelementptr inbounds i8, i8* %1, i64 %58
  %60 = sub i32 %2, %17
  br label %61

61:                                               ; preds = %54, %3
  %62 = phi i32 [ %60, %54 ], [ %2, %3 ]
  %63 = phi i8* [ %59, %54 ], [ %1, %3 ]
  %64 = icmp ugt i32 %62, %10
  br i1 %64, label %65, label %74

65:                                               ; preds = %61
  %66 = sub i32 %62, %10
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds i8, i8* %63, i64 %67
  %69 = load i32, i32* %11, align 8
  %70 = sub i32 %66, %7
  %71 = add i32 %70, %69
  %72 = urem i32 %71, %10
  %73 = add i32 %72, %7
  store i32 %73, i32* %11, align 8
  br label %74

74:                                               ; preds = %65, %61
  %75 = phi i32 [ %10, %65 ], [ %62, %61 ]
  %76 = phi i8* [ %68, %65 ], [ %63, %61 ]
  %77 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %78 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, %75
  %81 = load i32, i32* %8, align 4
  %82 = icmp ult i32 %81, %80
  %83 = select i1 %82, i32 %81, i32 %80
  store i32 %83, i32* %78, align 4
  %84 = icmp eq i32 %75, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %74
  %86 = load i32, i32* %11, align 8
  br label %115

87:                                               ; preds = %74
  %88 = load i32, i32* %8, align 4
  %89 = load i32, i32* %11, align 8
  br label %90

90:                                               ; preds = %112, %87
  %91 = phi i32 [ %89, %87 ], [ %113, %112 ]
  %92 = phi i32 [ %88, %87 ], [ %106, %112 ]
  %93 = phi i8* [ %76, %87 ], [ %102, %112 ]
  %94 = phi i32 [ %75, %87 ], [ %103, %112 ]
  %95 = sub i32 %92, %91
  %96 = icmp ult i32 %95, %94
  %97 = select i1 %96, i32 %95, i32 %94
  %98 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %99 = zext i32 %91 to i64
  %100 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %98, i64 0, i32 3, i64 %99
  %101 = zext i32 %97 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %93, i64 %101, i1 false) #3
  %102 = getelementptr inbounds i8, i8* %93, i64 %101
  %103 = sub i32 %94, %97
  %104 = load i32, i32* %11, align 8
  %105 = add i32 %104, %97
  store i32 %105, i32* %11, align 8
  %106 = load i32, i32* %8, align 4
  %107 = icmp ult i32 %105, %106
  br i1 %107, label %112, label %108

108:                                              ; preds = %90
  %109 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %110 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %109, i64 0, i32 1
  %111 = load i32, i32* %110, align 4
  store i32 %111, i32* %11, align 8
  br label %112

112:                                              ; preds = %108, %90
  %113 = phi i32 [ %105, %90 ], [ %111, %108 ]
  %114 = icmp eq i32 %103, 0
  br i1 %114, label %115, label %90

115:                                              ; preds = %112, %85
  %116 = phi i32 [ %86, %85 ], [ %113, %112 ]
  %117 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %118 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %117, i64 0, i32 2
  store i32 %116, i32* %118, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14webrtc_logging21PartialCircularBuffer7DoWriteEPKhj(%"class.webrtc_logging::PartialCircularBuffer"* nocapture, i8* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 0
  %5 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %6 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add i32 %7, %2
  %9 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ult i32 %10, %8
  %12 = select i1 %11, i32 %10, i32 %8
  store i32 %12, i32* %6, align 4
  %13 = icmp eq i32 %2, 0
  %14 = getelementptr inbounds %"class.webrtc_logging::PartialCircularBuffer", %"class.webrtc_logging::PartialCircularBuffer"* %0, i64 0, i32 3
  br i1 %13, label %15, label %17

15:                                               ; preds = %3
  %16 = load i32, i32* %14, align 8
  br label %45

17:                                               ; preds = %3
  %18 = load i32, i32* %9, align 4
  %19 = load i32, i32* %14, align 8
  br label %20

20:                                               ; preds = %17, %42
  %21 = phi i32 [ %19, %17 ], [ %43, %42 ]
  %22 = phi i32 [ %18, %17 ], [ %36, %42 ]
  %23 = phi i8* [ %1, %17 ], [ %32, %42 ]
  %24 = phi i32 [ %2, %17 ], [ %33, %42 ]
  %25 = sub i32 %22, %21
  %26 = icmp ult i32 %25, %24
  %27 = select i1 %26, i32 %25, i32 %24
  %28 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %29 = zext i32 %21 to i64
  %30 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %28, i64 0, i32 3, i64 %29
  %31 = zext i32 %27 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %30, i8* align 1 %23, i64 %31, i1 false)
  %32 = getelementptr inbounds i8, i8* %23, i64 %31
  %33 = sub i32 %24, %27
  %34 = load i32, i32* %14, align 8
  %35 = add i32 %34, %27
  store i32 %35, i32* %14, align 8
  %36 = load i32, i32* %9, align 4
  %37 = icmp ult i32 %35, %36
  br i1 %37, label %42, label %38

38:                                               ; preds = %20
  %39 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %40 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %39, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %14, align 8
  br label %42

42:                                               ; preds = %20, %38
  %43 = phi i32 [ %35, %20 ], [ %41, %38 ]
  %44 = icmp eq i32 %33, 0
  br i1 %44, label %45, label %20

45:                                               ; preds = %42, %15
  %46 = phi i32 [ %16, %15 ], [ %43, %42 ]
  %47 = load %"struct.webrtc_logging::PartialCircularBuffer::BufferData"*, %"struct.webrtc_logging::PartialCircularBuffer::BufferData"** %4, align 8
  %48 = getelementptr inbounds %"struct.webrtc_logging::PartialCircularBuffer::BufferData", %"struct.webrtc_logging::PartialCircularBuffer::BufferData"* %47, i64 0, i32 2
  store i32 %46, i32* %48, align 4
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
