; ModuleID = '../../base/cpu.cc'
source_filename = "../../base/cpu.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.base::NoDestructor" = type { [24 x i8] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i32* }
%"class.base::NoDestructor.13" = type { [24 x i8] }
%"class.base::CPU" = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.28" }
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { i32*, i32*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i32* }
%"class.base::ThreadRestrictions::ScopedAllowIO" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.base::CPU::TimeInStateEntry"*, %"struct.base::CPU::TimeInStateEntry"*, %"class.std::__1::__compressed_pair.8" }
%"struct.base::CPU::TimeInStateEntry" = type { i32, i32, i64, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.base::CPU::TimeInStateEntry"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { i32*, i32*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { i32* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::vector.21" = type { %"class.std::__1::__vector_base.22" }
%"class.std::__1::__vector_base.22" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.base::TimeDelta"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::__split_buffer" = type { i32*, i32*, i32*, %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.31", %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.std::__1::allocator.33"* }
%"class.std::__1::allocator.33" = type { i8 }

$_ZNSt3__16vectorIjNS_9allocatorIjEEE7emplaceIJRKjEEENS_11__wrap_iterIPjEENS7_IPS5_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE12emplace_backIJRKjEEEvDpOT_ = comdat any

@.str = private unnamed_addr constant [13 x i8] c"GenuineIntel\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZZN4base3CPU19GetGuessedCoreTypesEvE10kCoreTypes = internal global %"class.base::NoDestructor" zeroinitializer, align 16
@_ZGVZN4base3CPU19GetGuessedCoreTypesEvE10kCoreTypes = internal global i64 0, align 8
@_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE20kSupportsTimeInState = internal global i8 0, align 1
@_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE20kSupportsTimeInState = internal global i64 0, align 8
@_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE10kCoreTypes = internal unnamed_addr global %"class.std::__1::vector"* null, align 8
@_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE10kCoreTypes = internal global i64 0, align 8
@_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE18kFirstCoresIndexes = internal unnamed_addr global %"class.base::NoDestructor.13" zeroinitializer, align 8
@_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE18kFirstCoresIndexes = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [15 x i8] c"GetTimeInState\00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"../../base/cpu.cc\00", align 1
@_ZN4base12_GLOBAL__N_116kTimeInStatePathE = internal constant [58 x i8] c"/sys/devices/system/cpu/cpu%d/cpufreq/stats/time_in_state\00", align 16
@_ZZN4base3CPU26GetCumulativeCoreIdleTimesERNSt3__16vectorINS_9TimeDeltaENS1_9allocatorIS3_EEEEE18kSupportsIdleTimes = internal global i8 0, align 1
@_ZGVZN4base3CPU26GetCumulativeCoreIdleTimesERNSt3__16vectorINS_9TimeDeltaENS1_9allocatorIS3_EEEEE18kSupportsIdleTimes = internal global i64 0, align 8
@.str.4 = private unnamed_addr constant [27 x i8] c"GetCumulativeCoreIdleTimes\00", align 1
@_ZN4base12_GLOBAL__N_122kCoreIdleStateTimePathE = internal constant [51 x i8] c"/sys/devices/system/cpu/cpu%d/cpuidle/state%d/time\00", align 16
@_ZZN4base12_GLOBAL__N_114GuessCoreTypesEvE15kCPUMaxFreqPath = internal constant [55 x i8] c"/sys/devices/system/cpu/cpu%d/cpufreq/cpuinfo_max_freq\00", align 16
@.str.5 = private unnamed_addr constant [15 x i8] c"GuessCoreTypes\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"SupportsTimeInState\00", align 1
@.str.8 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"operator()\00", align 1
@_ZN4base12_GLOBAL__N_122kPhysicalPackageIdPathE = internal constant [59 x i8] c"/sys/devices/system/cpu/cpu%d/topology/physical_package_id\00", align 16
@.str.10 = private unnamed_addr constant [11 x i8] c"%lu %lu\0A%n\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"SupportsCoreIdleTimes\00", align 1
@.str.12 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.13 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN4base3CPUC1Eb = hidden unnamed_addr alias void (%"class.base::CPU"*, i1), void (%"class.base::CPU"*, i1)* @_ZN4base3CPUC2Eb
@_ZN4base3CPUC1Ev = hidden unnamed_addr alias void (%"class.base::CPU"*), void (%"class.base::CPU"*)* @_ZN4base3CPUC2Ev
@_ZN4base3CPUC1EOS0_ = hidden unnamed_addr alias void (%"class.base::CPU"*, %"class.base::CPU"*), void (%"class.base::CPU"*, %"class.base::CPU"*)* @_ZN4base3CPUC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN4base8internal24ComputeX86FamilyAndModelERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #0 {
  %3 = lshr i32 %1, 8
  %4 = and i32 %3, 15
  %5 = lshr i32 %1, 4
  %6 = and i32 %5, 15
  switch i32 %4, label %38 [
    i32 15, label %27
    i32 6, label %7
  ]

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = icmp eq i64 %15, 12
  br i1 %16, label %17, label %38

17:                                               ; preds = %7
  %18 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %0, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #14
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %38

20:                                               ; preds = %17
  %21 = lshr i32 %1, 16
  %22 = and i32 %21, 15
  %23 = shl nuw nsw i32 %22, 4
  %24 = or i32 %23, %6
  %25 = zext i32 %22 to i64
  %26 = shl nuw nsw i64 %25, 32
  br label %38

27:                                               ; preds = %2
  %28 = lshr i32 %1, 16
  %29 = and i32 %28, 15
  %30 = shl nuw nsw i32 %29, 4
  %31 = or i32 %30, %6
  %32 = zext i32 %29 to i64
  %33 = shl nuw nsw i64 %32, 32
  %34 = lshr i32 %1, 20
  %35 = and i32 %34, 255
  %36 = add nuw nsw i32 %35, 15
  %37 = zext i32 %35 to i64
  br label %38

38:                                               ; preds = %2, %7, %17, %20, %27
  %39 = phi i64 [ %33, %27 ], [ %26, %20 ], [ 0, %17 ], [ 0, %7 ], [ 0, %2 ]
  %40 = phi i32 [ %31, %27 ], [ %24, %20 ], [ %6, %17 ], [ %6, %7 ], [ %6, %2 ]
  %41 = phi i32 [ %36, %27 ], [ 6, %20 ], [ 6, %17 ], [ 6, %7 ], [ %4, %2 ]
  %42 = phi i64 [ %37, %27 ], [ 0, %20 ], [ 0, %17 ], [ 0, %7 ], [ 0, %2 ]
  %43 = zext i32 %40 to i64
  %44 = shl nuw i64 %43, 32
  %45 = zext i32 %41 to i64
  %46 = or i64 %44, %45
  %47 = insertvalue { i64, i64 } undef, i64 %46, 0
  %48 = or i64 %42, %39
  %49 = insertvalue { i64, i64 } %47, i64 %48, 1
  ret { i64, i64 } %49
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base3CPUC2Eb(%"class.base::CPU"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 24
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = bitcast %"class.base::CPU"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 48, i1 false)
  store i8 7, i8* %5, align 1
  %7 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #14
  %8 = getelementptr inbounds i8, i8* %7, i64 7
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 25
  %10 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #14
  tail call void @_ZN4base3CPU10InitializeEb(%"class.base::CPU"* %0, i1 zeroext undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base3CPU10InitializeEb(%"class.base::CPU"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca [49 x i8], align 16
  %4 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 49, i8* nonnull %4) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 49, i1 false)
  %5 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid\0A", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0, i32 0) #14, !srcloc !2
  %6 = extractvalue { i32, i32, i32, i32 } %5, 0
  %7 = extractvalue { i32, i32, i32, i32 } %5, 1
  %8 = extractvalue { i32, i32, i32, i32 } %5, 2
  %9 = extractvalue { i32, i32, i32, i32 } %5, 3
  %10 = bitcast [49 x i8]* %3 to i32*
  store i32 %7, i32* %10, align 16
  %11 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 4
  %12 = bitcast i8* %11 to i32*
  store i32 %9, i32* %12, align 4
  %13 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 8
  %14 = bitcast i8* %13 to i32*
  store i32 %8, i32* %14, align 8
  %15 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 12
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 24
  %17 = trunc i32 %7 to i8
  %18 = tail call i1 @llvm.is.constant.i8(i8 %17) #14
  br i1 %18, label %19, label %42

19:                                               ; preds = %2
  %20 = call i64 @strlen(i8* nonnull %4) #14
  %21 = icmp ult i64 %20, 23
  br i1 %21, label %22, label %40

22:                                               ; preds = %19
  %23 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %31

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  br label %34

31:                                               ; preds = %22
  %32 = trunc i64 %20 to i8
  store i8 %32, i8* %24, align 1
  %33 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  br label %34

34:                                               ; preds = %31, %27
  %35 = phi i8* [ %30, %27 ], [ %33, %31 ]
  %36 = icmp eq i64 %20, 0
  br i1 %36, label %38, label %37

37:                                               ; preds = %34
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %35, i8* nonnull align 16 %4, i64 %20, i1 false) #14
  br label %38

38:                                               ; preds = %37, %34
  %39 = getelementptr inbounds i8, i8* %35, i64 %20
  store i8 0, i8* %39, align 1
  br label %44

40:                                               ; preds = %19
  %41 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %16, i8* nonnull %4, i64 %20) #14
  br label %44

42:                                               ; preds = %2
  %43 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %16, i8* nonnull %4) #14
  br label %44

44:                                               ; preds = %38, %40, %42
  %45 = icmp sgt i32 %6, 0
  br i1 %45, label %46, label %157

46:                                               ; preds = %44
  %47 = call { i32, i32, i32, i32 } asm sideeffect "cpuid\0A", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 1, i32 0) #14, !srcloc !2
  %48 = extractvalue { i32, i32, i32, i32 } %47, 0
  %49 = extractvalue { i32, i32, i32, i32 } %47, 2
  %50 = extractvalue { i32, i32, i32, i32 } %47, 3
  %51 = icmp sgt i32 %6, 6
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = call { i32, i32, i32, i32 } asm sideeffect "cpuid\0A", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 7, i32 0) #14, !srcloc !2
  %54 = extractvalue { i32, i32, i32, i32 } %53, 1
  %55 = lshr i32 %54, 5
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 1
  br label %58

58:                                               ; preds = %52, %46
  %59 = phi i8 [ %57, %52 ], [ 0, %46 ]
  %60 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 0
  store i32 %48, i32* %60, align 8
  %61 = and i32 %48, 15
  %62 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 4
  store i32 %61, i32* %62, align 8
  %63 = lshr i32 %48, 12
  %64 = and i32 %63, 3
  %65 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 1
  store i32 %64, i32* %65, align 4
  %66 = lshr i32 %48, 8
  %67 = and i32 %66, 15
  %68 = lshr i32 %48, 4
  %69 = and i32 %68, 15
  switch i32 %67, label %96 [
    i32 15, label %88
    i32 6, label %70
  ]

70:                                               ; preds = %58
  %71 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 24, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %73 to i64
  %78 = select i1 %74, i64 %76, i64 %77
  %79 = icmp eq i64 %78, 12
  br i1 %79, label %80, label %96

80:                                               ; preds = %70
  %81 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %16, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i64 12) #14
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %96

83:                                               ; preds = %80
  %84 = lshr i32 %48, 16
  %85 = and i32 %84, 15
  %86 = shl nuw nsw i32 %85, 4
  %87 = or i32 %86, %69
  br label %96

88:                                               ; preds = %58
  %89 = lshr i32 %48, 16
  %90 = and i32 %89, 15
  %91 = shl nuw nsw i32 %90, 4
  %92 = or i32 %91, %69
  %93 = lshr i32 %48, 20
  %94 = and i32 %93, 255
  %95 = add nuw nsw i32 %94, 15
  br label %96

96:                                               ; preds = %58, %70, %80, %83, %88
  %97 = phi i32 [ %90, %88 ], [ %85, %83 ], [ 0, %80 ], [ 0, %70 ], [ 0, %58 ]
  %98 = phi i32 [ %92, %88 ], [ %87, %83 ], [ %69, %80 ], [ %69, %70 ], [ %69, %58 ]
  %99 = phi i32 [ %95, %88 ], [ 6, %83 ], [ 6, %80 ], [ 6, %70 ], [ %67, %58 ]
  %100 = phi i32 [ %94, %88 ], [ 0, %83 ], [ 0, %80 ], [ 0, %70 ], [ 0, %58 ]
  %101 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 2
  store i32 %99, i32* %101, align 8
  %102 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 3
  store i32 %98, i32* %102, align 4
  %103 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 6
  store i32 %100, i32* %103, align 8
  %104 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 5
  store i32 %97, i32* %104, align 4
  %105 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 9
  %106 = lshr i32 %50, 23
  %107 = trunc i32 %106 to i8
  %108 = and i8 %107, 1
  store i8 %108, i8* %105, align 1
  %109 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 10
  %110 = lshr i32 %50, 25
  %111 = trunc i32 %110 to i8
  %112 = and i8 %111, 1
  store i8 %112, i8* %109, align 2
  %113 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 11
  %114 = lshr i32 %50, 26
  %115 = trunc i32 %114 to i8
  %116 = and i8 %115, 1
  store i8 %116, i8* %113, align 1
  %117 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 12
  %118 = trunc i32 %49 to i8
  %119 = and i8 %118, 1
  store i8 %119, i8* %117, align 4
  %120 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 13
  %121 = lshr i32 %49, 9
  %122 = trunc i32 %121 to i8
  %123 = and i8 %122, 1
  store i8 %123, i8* %120, align 1
  %124 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 14
  %125 = lshr i32 %49, 19
  %126 = trunc i32 %125 to i8
  %127 = and i8 %126, 1
  store i8 %127, i8* %124, align 2
  %128 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 15
  %129 = lshr i32 %49, 20
  %130 = trunc i32 %129 to i8
  %131 = and i8 %130, 1
  store i8 %131, i8* %128, align 1
  %132 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 16
  %133 = lshr i32 %49, 23
  %134 = trunc i32 %133 to i8
  %135 = and i8 %134, 1
  store i8 %135, i8* %132, align 8
  %136 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 23
  %137 = lshr i32 %49, 31
  %138 = trunc i32 %137 to i8
  store i8 %138, i8* %136, align 1
  %139 = and i32 %49, 469762048
  %140 = icmp eq i32 %139, 469762048
  br i1 %140, label %141, label %147

141:                                              ; preds = %96
  %142 = call { i32, i32 } asm sideeffect "xgetbv", "={ax},={dx},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0) #14, !srcloc !3
  %143 = extractvalue { i32, i32 } %142, 0
  %144 = and i32 %143, 6
  %145 = icmp eq i32 %144, 6
  %146 = zext i1 %145 to i8
  br label %147

147:                                              ; preds = %96, %141
  %148 = phi i8 [ 0, %96 ], [ %146, %141 ]
  %149 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 17
  store i8 %148, i8* %149, align 1
  %150 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 19
  %151 = lshr i32 %49, 25
  %152 = trunc i32 %151 to i8
  %153 = and i8 %152, 1
  store i8 %153, i8* %150, align 1
  %154 = icmp eq i8 %148, 0
  %155 = select i1 %154, i8 0, i8 %59
  %156 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 18
  store i8 %155, i8* %156, align 2
  br label %157

157:                                              ; preds = %147, %44
  %158 = call { i32, i32, i32, i32 } asm sideeffect "cpuid\0A", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 -2147483648, i32 0) #14, !srcloc !2
  %159 = extractvalue { i32, i32, i32, i32 } %158, 0
  %160 = icmp sgt i32 %159, -2147483645
  br i1 %160, label %161, label %238

161:                                              ; preds = %157
  %162 = call { i32, i32, i32, i32 } asm sideeffect "cpuid\0A", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 -2147483646, i32 0) #14, !srcloc !2
  %163 = extractvalue { i32, i32, i32, i32 } %162, 0
  %164 = extractvalue { i32, i32, i32, i32 } %162, 1
  %165 = extractvalue { i32, i32, i32, i32 } %162, 2
  %166 = extractvalue { i32, i32, i32, i32 } %162, 3
  %167 = bitcast [49 x i8]* %3 to i32*
  store i32 %163, i32* %167, align 16
  %168 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 4
  %169 = bitcast i8* %168 to i32*
  store i32 %164, i32* %169, align 4
  %170 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 8
  %171 = bitcast i8* %170 to i32*
  store i32 %165, i32* %171, align 8
  %172 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 12
  %173 = bitcast i8* %172 to i32*
  store i32 %166, i32* %173, align 4
  %174 = call { i32, i32, i32, i32 } asm sideeffect "cpuid\0A", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 -2147483645, i32 0) #14, !srcloc !2
  %175 = extractvalue { i32, i32, i32, i32 } %174, 0
  %176 = extractvalue { i32, i32, i32, i32 } %174, 1
  %177 = extractvalue { i32, i32, i32, i32 } %174, 2
  %178 = extractvalue { i32, i32, i32, i32 } %174, 3
  %179 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 16
  %180 = bitcast i8* %179 to i32*
  store i32 %175, i32* %180, align 16
  %181 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 20
  %182 = bitcast i8* %181 to i32*
  store i32 %176, i32* %182, align 4
  %183 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 24
  %184 = bitcast i8* %183 to i32*
  store i32 %177, i32* %184, align 8
  %185 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 28
  %186 = bitcast i8* %185 to i32*
  store i32 %178, i32* %186, align 4
  %187 = call { i32, i32, i32, i32 } asm sideeffect "cpuid\0A", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 -2147483644, i32 0) #14, !srcloc !2
  %188 = extractvalue { i32, i32, i32, i32 } %187, 0
  %189 = extractvalue { i32, i32, i32, i32 } %187, 1
  %190 = extractvalue { i32, i32, i32, i32 } %187, 2
  %191 = extractvalue { i32, i32, i32, i32 } %187, 3
  %192 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 32
  %193 = bitcast i8* %192 to i32*
  store i32 %188, i32* %193, align 16
  %194 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 36
  %195 = bitcast i8* %194 to i32*
  store i32 %189, i32* %195, align 4
  %196 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 40
  %197 = bitcast i8* %196 to i32*
  store i32 %190, i32* %197, align 8
  %198 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 44
  %199 = bitcast i8* %198 to i32*
  store i32 %191, i32* %199, align 4
  %200 = getelementptr inbounds [49 x i8], [49 x i8]* %3, i64 0, i64 48
  store i8 0, i8* %200, align 16
  %201 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 25
  %202 = load i8, i8* %4, align 16
  %203 = call i1 @llvm.is.constant.i8(i8 %202) #14
  br i1 %203, label %204, label %227

204:                                              ; preds = %161
  %205 = call i64 @strlen(i8* nonnull %4) #14
  %206 = icmp ult i64 %205, 23
  br i1 %206, label %207, label %225

207:                                              ; preds = %204
  %208 = bitcast %"class.std::__1::basic_string"* %201 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %210 = load i8, i8* %209, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %216

212:                                              ; preds = %207
  %213 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 25, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %205, i64* %213, align 8
  %214 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %201, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  br label %219

216:                                              ; preds = %207
  %217 = trunc i64 %205 to i8
  store i8 %217, i8* %209, align 1
  %218 = bitcast %"class.std::__1::basic_string"* %201 to i8*
  br label %219

219:                                              ; preds = %216, %212
  %220 = phi i8* [ %215, %212 ], [ %218, %216 ]
  %221 = icmp eq i64 %205, 0
  br i1 %221, label %223, label %222

222:                                              ; preds = %219
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %220, i8* nonnull align 16 %4, i64 %205, i1 false) #14
  br label %223

223:                                              ; preds = %222, %219
  %224 = getelementptr inbounds i8, i8* %220, i64 %205
  store i8 0, i8* %224, align 1
  br label %229

225:                                              ; preds = %204
  %226 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %201, i8* nonnull %4, i64 %205) #14
  br label %229

227:                                              ; preds = %161
  %228 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %201, i8* nonnull %4) #14
  br label %229

229:                                              ; preds = %227, %225, %223
  %230 = icmp sgt i32 %159, -2147483642
  br i1 %230, label %231, label %238

231:                                              ; preds = %229
  %232 = call { i32, i32, i32, i32 } asm sideeffect "cpuid\0A", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 -2147483641, i32 0) #14, !srcloc !2
  %233 = extractvalue { i32, i32, i32, i32 } %232, 3
  %234 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 22
  %235 = lshr i32 %233, 8
  %236 = trunc i32 %235 to i8
  %237 = and i8 %236, 1
  store i8 %237, i8* %234, align 2
  br label %238

238:                                              ; preds = %157, %231, %229
  %239 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 22
  %240 = load i8, i8* %239, align 2, !range !4
  %241 = icmp eq i8 %240, 0
  br i1 %241, label %242, label %257

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 23
  %244 = load i8, i8* %243, align 1, !range !4
  %245 = icmp eq i8 %244, 0
  br i1 %245, label %257, label %246

246:                                              ; preds = %242
  %247 = call { i32, i32, i32, i32 } asm sideeffect "cpuid\0A", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 1073741824, i32 0) #14, !srcloc !2
  %248 = extractvalue { i32, i32, i32, i32 } %247, 1
  %249 = extractvalue { i32, i32, i32, i32 } %247, 2
  %250 = extractvalue { i32, i32, i32, i32 } %247, 3
  %251 = icmp eq i32 %248, 1919117645
  %252 = icmp eq i32 %249, 1718580079
  %253 = and i1 %251, %252
  %254 = icmp eq i32 %250, 1984438388
  %255 = and i1 %254, %253
  br i1 %255, label %256, label %257

256:                                              ; preds = %246
  store i8 1, i8* %239, align 2
  br label %257

257:                                              ; preds = %246, %256, %242, %238
  call void @llvm.lifetime.end.p0i8(i64 49, i8* nonnull %4) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base3CPUC2Ev(%"class.base::CPU"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 24
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = bitcast %"class.base::CPU"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 48, i1 false) #14
  store i8 7, i8* %4, align 1
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #14
  %7 = getelementptr inbounds i8, i8* %6, i64 7
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 25
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #14
  tail call void @_ZN4base3CPU10InitializeEb(%"class.base::CPU"* %0, i1 zeroext undef) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base3CPUC2EOS0_(%"class.base::CPU"* nocapture, %"class.base::CPU"* nocapture dereferenceable(96)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.base::CPU"* %0 to i8*
  %4 = bitcast %"class.base::CPU"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 48, i1 false)
  %5 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 24
  %6 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %1, i64 0, i32 24
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 25
  %10 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %1, i64 0, i32 25
  %11 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #14
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK4base3CPU25GetIntelMicroArchitectureEv(%"class.base::CPU"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 18
  %3 = load i8, i8* %2, align 2, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %33

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 17
  %7 = load i8, i8* %6, align 1, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 15
  %11 = load i8, i8* %10, align 1, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %33

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 14
  %15 = load i8, i8* %14, align 2, !range !4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %33

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 13
  %19 = load i8, i8* %18, align 1, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 12
  %23 = load i8, i8* %22, align 4, !range !4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %33

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 11
  %27 = load i8, i8* %26, align 1, !range !4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.base::CPU", %"class.base::CPU"* %0, i64 0, i32 10
  %31 = load i8, i8* %30, align 2, !range !4
  %32 = zext i8 %31 to i32
  br label %33

33:                                               ; preds = %25, %21, %17, %13, %9, %5, %1, %29
  %34 = phi i32 [ 8, %1 ], [ 7, %5 ], [ 6, %9 ], [ 5, %13 ], [ 4, %17 ], [ 3, %21 ], [ 2, %25 ], [ %32, %29 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN4base3CPU19GetGuessedCoreTypesEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.base::internal::flat_tree", align 8
  %2 = alloca %"class.base::ThreadRestrictions::ScopedAllowIO", align 1
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::FilePath", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::vector", align 16
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base3CPU19GetGuessedCoreTypesEvE10kCoreTypes to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %224, !prof !5

12:                                               ; preds = %0
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base3CPU19GetGuessedCoreTypesEvE10kCoreTypes) #14
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %224, label %15

15:                                               ; preds = %12
  %16 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #14
  %17 = tail call i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() #14, !noalias !6
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = sext i32 %17 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 0, i64 24, i1 false) #14, !alias.scope !6
  %22 = icmp eq i32 %17, 0
  br i1 %22, label %37, label %23

23:                                               ; preds = %15
  %24 = icmp slt i32 %17, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %26) #15
  unreachable

27:                                               ; preds = %23
  %28 = shl nsw i64 %21, 2
  %29 = tail call i8* @_Znwm(i64 %28) #16
  %30 = bitcast i8* %29 to i32*
  %31 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %29, i8** %31, align 16, !alias.scope !6
  %32 = getelementptr inbounds i32, i32* %30, i64 %21
  store i32* %32, i32** %20, align 16, !alias.scope !6
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %29, i8 0, i64 %28, i1 false) #14, !noalias !6
  %33 = bitcast i32** %19 to i64*
  %34 = ptrtoint i32* %32 to i64
  store i64 %34, i64* %33, align 8, !alias.scope !6
  %35 = tail call i8* @_Znwm(i64 %28) #16
  %36 = bitcast i8* %35 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %35, i8 0, i64 %28, i1 false) #14, !noalias !6
  br label %37

37:                                               ; preds = %15, %27
  %38 = phi i8* [ %35, %27 ], [ null, %15 ]
  %39 = phi i32* [ %36, %27 ], [ null, %15 ]
  %40 = bitcast %"class.base::internal::flat_tree"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #14, !noalias !6
  %41 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %1, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %1, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #14, !noalias !6
  %43 = getelementptr inbounds %"class.base::ThreadRestrictions::ScopedAllowIO", %"class.base::ThreadRestrictions::ScopedAllowIO"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %43) #14, !noalias !6
  store i8 -86, i8* %43, align 1, !noalias !6
  %44 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #14, !noalias !6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i32 468) #14
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %2, %"class.base::Location"* nonnull dereferenceable(32) %3) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #14, !noalias !6
  %45 = icmp sgt i32 %17, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %37
  %47 = bitcast i32** %42 to i64*
  br label %65

48:                                               ; preds = %37
  %49 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast i32* %5 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = bitcast %"class.base::FilePath"* %7 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = bitcast i32* %8 to i8*
  %62 = bitcast i32** %42 to i64*
  %63 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %1, i64 0, i32 0
  %64 = zext i32 %17 to i64
  br label %83

65:                                               ; preds = %148, %46
  %66 = phi i64* [ %47, %46 ], [ %62, %148 ]
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %43) #14, !noalias !6
  %67 = load i64, i64* %66, align 8, !noalias !6
  %68 = bitcast %"class.base::internal::flat_tree"* %1 to i64*
  %69 = load i64, i64* %68, align 8, !noalias !6
  %70 = sub i64 %67, %69
  %71 = inttoptr i64 %69 to i32*
  br i1 %45, label %72, label %153

72:                                               ; preds = %65
  %73 = ashr exact i64 %70, 2
  %74 = icmp eq i64 %70, 4
  %75 = icmp eq i64 %70, 8
  %76 = or i64 %73, 1
  %77 = icmp ne i64 %76, 3
  %78 = select i1 %75, i32 4, i32 6
  %79 = select i1 %75, i32 3, i32 5
  %80 = zext i32 %17 to i64
  %81 = or i1 %74, %77
  %82 = select i1 %74, i32 2, i32 1
  br label %162

83:                                               ; preds = %148, %48
  %84 = phi i64 [ 0, %48 ], [ %149, %148 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #14, !noalias !6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 0, i64 24, i1 false) #14, !noalias !6
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %52) #14, !noalias !6
  store i32 0, i32* %5, align 4, !noalias !6
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #14, !noalias !6
  %85 = trunc i64 %84 to i32
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false) #14, !noalias !6
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @_ZZN4base12_GLOBAL__N_114GuessCoreTypesEvE15kCPUMaxFreqPath, i64 0, i64 0), i32 %85) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #14, !noalias !6
  %86 = load i8, i8* %58, align 1, !noalias !6
  %87 = icmp slt i8 %86, 0
  %88 = load i8*, i8** %54, align 8, !noalias !6
  %89 = select i1 %87, i8* %88, i8* %53
  %90 = load i64, i64* %55, align 8, !noalias !6
  %91 = zext i8 %86 to i64
  %92 = select i1 %87, i64 %90, i64 %91
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %7, i8* %89, i64 %92) #14
  %93 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* nonnull dereferenceable(24) %7, %"class.std::__1::basic_string"* nonnull %4) #14
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #14, !noalias !6
  br i1 %93, label %94, label %103

94:                                               ; preds = %83
  %95 = load i8, i8* %60, align 1, !noalias !6
  %96 = icmp slt i8 %95, 0
  %97 = load i8*, i8** %50, align 8, !noalias !6
  %98 = select i1 %96, i8* %97, i8* %49
  %99 = load i64, i64* %51, align 8, !noalias !6
  %100 = zext i8 %95 to i64
  %101 = select i1 %96, i64 %99, i64 %100
  %102 = call zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8* %98, i64 %101, i32* nonnull %5) #14
  br label %103

103:                                              ; preds = %94, %83
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #14, !noalias !6
  %104 = load i32, i32* %5, align 4, !noalias !6
  %105 = udiv i32 %104, 1000
  store i32 %105, i32* %8, align 4, !noalias !6
  %106 = getelementptr inbounds i32, i32* %39, i64 %84
  store i32 %105, i32* %106, align 4
  %107 = icmp ult i32 %104, 1000
  br i1 %107, label %138, label %108

108:                                              ; preds = %103
  %109 = load i32*, i32** %41, align 8, !noalias !6
  %110 = load i64, i64* %62, align 8, !noalias !6
  %111 = ptrtoint i32* %109 to i64
  %112 = sub i64 %110, %111
  %113 = icmp eq i64 %112, 0
  %114 = inttoptr i64 %110 to i32*
  br i1 %113, label %130, label %115

115:                                              ; preds = %108
  %116 = ashr exact i64 %112, 2
  br label %117

117:                                              ; preds = %117, %115
  %118 = phi i32* [ %109, %115 ], [ %128, %117 ]
  %119 = phi i64 [ %116, %115 ], [ %127, %117 ]
  %120 = lshr i64 %119, 1
  %121 = getelementptr inbounds i32, i32* %118, i64 %120
  %122 = load i32, i32* %121, align 4
  %123 = icmp ult i32 %122, %105
  %124 = getelementptr inbounds i32, i32* %121, i64 1
  %125 = xor i64 %120, -1
  %126 = add i64 %119, %125
  %127 = select i1 %123, i64 %126, i64 %120
  %128 = select i1 %123, i32* %124, i32* %118
  %129 = icmp eq i64 %127, 0
  br i1 %129, label %130, label %117

130:                                              ; preds = %117, %108
  %131 = phi i32* [ %109, %108 ], [ %128, %117 ]
  %132 = icmp eq i32* %131, %114
  br i1 %132, label %136, label %133

133:                                              ; preds = %130
  %134 = load i32, i32* %131, align 4
  %135 = icmp ult i32 %105, %134
  br i1 %135, label %136, label %138

136:                                              ; preds = %133, %130
  %137 = call i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE7emplaceIJRKjEEENS_11__wrap_iterIPjEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.28"* nonnull %63, i32* %131, i32* nonnull dereferenceable(4) %8) #14
  br label %138

138:                                              ; preds = %136, %133, %103
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #14, !noalias !6
  %139 = load i8, i8* %58, align 1, !noalias !6
  %140 = icmp slt i8 %139, 0
  br i1 %140, label %141, label %143

141:                                              ; preds = %138
  %142 = load i8*, i8** %54, align 8, !noalias !6
  call void @_ZdlPv(i8* %142) #16
  br label %143

143:                                              ; preds = %141, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #14, !noalias !6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %52) #14, !noalias !6
  %144 = load i8, i8* %60, align 1, !noalias !6
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = load i8*, i8** %50, align 8, !noalias !6
  call void @_ZdlPv(i8* %147) #16
  br label %148

148:                                              ; preds = %146, %143
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14, !noalias !6
  %149 = add nuw nsw i64 %84, 1
  %150 = icmp eq i64 %149, %64
  br i1 %150, label %65, label %83

151:                                              ; preds = %213
  %152 = load i32*, i32** %41, align 8, !noalias !6
  br label %153

153:                                              ; preds = %151, %65
  %154 = phi i32* [ %152, %151 ], [ %71, %65 ]
  %155 = icmp eq i32* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %153
  %157 = ptrtoint i32* %154 to i64
  store i64 %157, i64* %66, align 8, !noalias !6
  %158 = bitcast i32* %154 to i8*
  call void @_ZdlPv(i8* %158) #16
  br label %159

159:                                              ; preds = %156, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #14, !noalias !6
  %160 = icmp eq i32* %39, null
  br i1 %160, label %219, label %161

161:                                              ; preds = %159
  call void @_ZdlPv(i8* %38) #16
  br label %219

162:                                              ; preds = %213, %72
  %163 = phi i64 [ 0, %72 ], [ %217, %213 ]
  %164 = getelementptr inbounds i32, i32* %39, i64 %163
  %165 = load i32, i32* %164, align 4
  br i1 %81, label %213, label %166

166:                                              ; preds = %162
  %167 = load i32*, i32** %41, align 8, !noalias !6
  %168 = load i64, i64* %66, align 8, !noalias !6
  %169 = ptrtoint i32* %167 to i64
  %170 = sub i64 %168, %169
  %171 = icmp eq i64 %170, 0
  %172 = inttoptr i64 %168 to i32*
  br i1 %171, label %190, label %173

173:                                              ; preds = %166
  %174 = ashr exact i64 %170, 2
  br label %175

175:                                              ; preds = %175, %173
  %176 = phi i32* [ %167, %173 ], [ %186, %175 ]
  %177 = phi i64 [ %174, %173 ], [ %185, %175 ]
  %178 = lshr i64 %177, 1
  %179 = getelementptr inbounds i32, i32* %176, i64 %178
  %180 = load i32, i32* %179, align 4
  %181 = icmp ult i32 %180, %165
  %182 = getelementptr inbounds i32, i32* %179, i64 1
  %183 = xor i64 %178, -1
  %184 = add i64 %177, %183
  %185 = select i1 %181, i64 %184, i64 %178
  %186 = select i1 %181, i32* %182, i32* %176
  %187 = icmp eq i64 %185, 0
  br i1 %187, label %188, label %175

188:                                              ; preds = %175
  %189 = ptrtoint i32* %186 to i64
  br label %190

190:                                              ; preds = %188, %166
  %191 = phi i64 [ %189, %188 ], [ %169, %166 ]
  %192 = phi i32* [ %186, %188 ], [ %167, %166 ]
  %193 = icmp eq i32* %192, %172
  br i1 %193, label %200, label %194

194:                                              ; preds = %190
  %195 = load i32, i32* %192, align 4
  %196 = icmp ult i32 %165, %195
  br i1 %196, label %200, label %197

197:                                              ; preds = %194
  %198 = getelementptr inbounds i32, i32* %192, i64 1
  %199 = ptrtoint i32* %198 to i64
  br label %200

200:                                              ; preds = %197, %194, %190
  %201 = phi i64 [ %199, %197 ], [ %191, %190 ], [ %191, %194 ]
  %202 = inttoptr i64 %201 to i32*
  %203 = icmp eq i32* %192, %202
  %204 = select i1 %203, i32* %172, i32* %192
  %205 = icmp eq i32* %204, %172
  br i1 %205, label %213, label %206

206:                                              ; preds = %200
  %207 = ptrtoint i32* %204 to i64
  %208 = sub i64 %207, %169
  %209 = ashr exact i64 %208, 2
  switch i64 %209, label %213 [
    i64 0, label %210
    i64 1, label %211
    i64 2, label %212
  ]

210:                                              ; preds = %206
  br label %213

211:                                              ; preds = %206
  br label %213

212:                                              ; preds = %206
  br label %213

213:                                              ; preds = %212, %211, %210, %206, %200, %162
  %214 = phi i32 [ %82, %162 ], [ 1, %200 ], [ 1, %206 ], [ 7, %212 ], [ %78, %211 ], [ %79, %210 ]
  %215 = load i32*, i32** %18, align 16, !alias.scope !6
  %216 = getelementptr inbounds i32, i32* %215, i64 %163
  store i32 %214, i32* %216, align 4
  %217 = add nuw nsw i64 %163, 1
  %218 = icmp eq i64 %217, %80
  br i1 %218, label %151, label %162

219:                                              ; preds = %161, %159
  %220 = bitcast %"class.std::__1::vector"* %9 to <2 x i64>*
  %221 = load <2 x i64>, <2 x i64>* %220, align 16
  store <2 x i64> %221, <2 x i64>* bitcast (%"class.base::NoDestructor"* @_ZZN4base3CPU19GetGuessedCoreTypesEvE10kCoreTypes to <2 x i64>*), align 16
  %222 = bitcast i32** %20 to i64*
  %223 = load i64, i64* %222, align 16
  store i64 %223, i64* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor", %"class.base::NoDestructor"* @_ZZN4base3CPU19GetGuessedCoreTypesEvE10kCoreTypes, i64 0, i32 0, i64 16) to i64*), align 16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #14
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base3CPU19GetGuessedCoreTypesEvE10kCoreTypes) #14
  br label %224

224:                                              ; preds = %12, %219, %0
  ret %"class.std::__1::vector"* bitcast (%"class.base::NoDestructor"* @_ZZN4base3CPU19GetGuessedCoreTypesEvE10kCoreTypes to %"class.std::__1::vector"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEE(%"class.std::__1::vector.6"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::__1::vector.14", align 16
  %6 = alloca %"class.base::ThreadRestrictions::ScopedAllowIO", align 1
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::FilePath", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca i32, align 4
  %12 = alloca %"class.base::ThreadRestrictions::ScopedAllowIO", align 1
  %13 = alloca %"class.base::Location", align 8
  %14 = alloca %"class.base::FilePath", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::vector.14", align 16
  %17 = alloca %"class.base::ThreadRestrictions::ScopedAllowIO", align 1
  %18 = alloca %"class.base::Location", align 8
  %19 = alloca %"class.base::FilePath", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %25 = bitcast %"struct.base::CPU::TimeInStateEntry"** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE20kSupportsTimeInState to i8*) acquire, align 8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %28, label %60, !prof !5

28:                                               ; preds = %1
  %29 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE20kSupportsTimeInState) #14
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %60, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"class.base::ThreadRestrictions::ScopedAllowIO", %"class.base::ThreadRestrictions::ScopedAllowIO"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %32) #14
  store i8 -86, i8* %32, align 1
  %33 = bitcast %"class.base::Location"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %13, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i32 394) #14
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %12, %"class.base::Location"* nonnull dereferenceable(32) %13) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #14
  %34 = bitcast %"class.base::FilePath"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #14
  %35 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #14
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %15, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @_ZN4base12_GLOBAL__N_116kTimeInStatePathE, i64 0, i64 0), i32 0) #14
  %36 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = select i1 %39, i8* %41, i8* %35
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %38 to i64
  %46 = select i1 %39, i64 %44, i64 %45
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %14, i8* %42, i64 %46) #14
  %47 = load i8, i8* %37, align 1
  %48 = icmp slt i8 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %50) #16
  br label %51

51:                                               ; preds = %49, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #14
  %52 = call %struct._IO_FILE* @_ZN4base8OpenFileERKNS_8FilePathEPKc(%"class.base::FilePath"* nonnull dereferenceable(24) %14, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #14
  %53 = icmp ne %struct._IO_FILE* %52, null
  %54 = icmp eq %struct._IO_FILE* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = call i32 @fclose(%struct._IO_FILE* nonnull %52) #14
  br label %57

57:                                               ; preds = %51, %55
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #14
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %32) #14
  %58 = zext i1 %53 to i8
  store i8 %58, i8* @_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE20kSupportsTimeInState, align 1
  %59 = call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE20kSupportsTimeInState)
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE20kSupportsTimeInState) #14
  br label %60

60:                                               ; preds = %28, %57, %1
  %61 = load i8, i8* @_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE20kSupportsTimeInState, align 1, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %383, label %63

63:                                               ; preds = %60
  %64 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE10kCoreTypes to i8*) acquire, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %71, !prof !5

66:                                               ; preds = %63
  %67 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE10kCoreTypes) #14
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %66
  %70 = call dereferenceable(24) %"class.std::__1::vector"* @_ZN4base3CPU19GetGuessedCoreTypesEv()
  store %"class.std::__1::vector"* %70, %"class.std::__1::vector"** @_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE10kCoreTypes, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE10kCoreTypes) #14
  br label %71

71:                                               ; preds = %66, %69, %63
  %72 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE18kFirstCoresIndexes to i8*) acquire, align 8
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %229, !prof !5

74:                                               ; preds = %71
  %75 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE18kFirstCoresIndexes) #14
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %229, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.std::__1::vector.14"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #14
  %79 = bitcast %"class.std::__1::vector.14"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #14, !noalias !9
  %80 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %5, i64 0, i32 0, i32 1
  %82 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %79, i8 0, i64 24, i1 false) #14, !noalias !9
  %83 = call i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() #14, !noalias !9
  %84 = icmp sgt i32 %83, 0
  br i1 %84, label %85, label %211

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"class.base::ThreadRestrictions::ScopedAllowIO", %"class.base::ThreadRestrictions::ScopedAllowIO"* %6, i64 0, i32 0
  %87 = bitcast %"class.base::Location"* %7 to i8*
  %88 = bitcast %"class.base::FilePath"* %8 to i8*
  %89 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %90 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %94 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = bitcast i32* %11 to i8*
  %98 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %99 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %98, i64 0, i32 1, i32 0
  %100 = bitcast i32** %81 to i64*
  %101 = bitcast %"class.std::__1::vector.14"* %5 to i64*
  %102 = bitcast i32** %82 to i64*
  br label %106

103:                                              ; preds = %204
  %104 = call i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() #14, !noalias !9
  %105 = icmp slt i32 %206, %104
  br i1 %105, label %106, label %207

106:                                              ; preds = %103, %85
  %107 = phi i32 [ 0, %85 ], [ %199, %103 ]
  %108 = phi i32 [ 0, %85 ], [ %206, %103 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #14, !noalias !9
  store i8 -86, i8* %86, align 1, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %87) #14, !noalias !9
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i32 550) #14, !noalias !9
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %7) #14, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %87) #14, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #14, !noalias !9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 24, i1 false) #14, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #14, !noalias !9
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @_ZN4base12_GLOBAL__N_122kPhysicalPackageIdPathE, i64 0, i64 0), i32 %108) #14, !noalias !9
  %109 = load i8, i8* %91, align 1, !noalias !9
  %110 = icmp slt i8 %109, 0
  %111 = load i8*, i8** %92, align 8, !noalias !9
  %112 = select i1 %110, i8* %111, i8* %89
  %113 = load i64, i64* %93, align 8, !noalias !9
  %114 = zext i8 %109 to i64
  %115 = select i1 %110, i64 %113, i64 %114
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %8, i8* %112, i64 %115) #14, !noalias !9
  %116 = load i8, i8* %91, align 1, !noalias !9
  %117 = icmp slt i8 %116, 0
  br i1 %117, label %118, label %120

118:                                              ; preds = %106
  %119 = load i8*, i8** %92, align 8, !noalias !9
  call void @_ZdlPv(i8* %119) #16, !noalias !9
  br label %120

120:                                              ; preds = %118, %106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #14, !noalias !9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %94) #14, !noalias !9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 0, i64 24, i1 false) #14, !noalias !9
  %121 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* nonnull dereferenceable(24) %8, %"class.std::__1::basic_string"* nonnull %10) #14, !noalias !9
  br i1 %121, label %123, label %122

122:                                              ; preds = %120
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %78, i8 0, i64 24, i1 false) #14, !alias.scope !9
  br label %197

123:                                              ; preds = %120
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %97) #14, !noalias !9
  store i32 -1431655766, i32* %11, align 4, !noalias !9
  %124 = load i8, i8* %99, align 1, !noalias !9
  %125 = icmp slt i8 %124, 0
  %126 = load i8*, i8** %95, align 8, !noalias !9
  %127 = select i1 %125, i8* %126, i8* %94
  %128 = load i64, i64* %96, align 8, !noalias !9
  %129 = zext i8 %124 to i64
  %130 = select i1 %125, i64 %128, i64 %129
  %131 = call { i8*, i64 } @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsE(i8* %127, i64 %130, i32 3) #14, !noalias !9
  %132 = extractvalue { i8*, i64 } %131, 0
  %133 = extractvalue { i8*, i64 } %131, 1
  %134 = call zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %132, i64 %133, i32* nonnull %11) #14, !noalias !9
  br i1 %134, label %136, label %135

135:                                              ; preds = %123
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %78, i8 0, i64 24, i1 false) #14, !alias.scope !9
  br label %194

136:                                              ; preds = %123
  %137 = load i32, i32* %11, align 4, !noalias !9
  %138 = icmp ne i32 %107, %137
  %139 = icmp eq i32 %108, 0
  %140 = or i1 %139, %138
  br i1 %140, label %141, label %192

141:                                              ; preds = %136
  %142 = load i32*, i32** %81, align 8, !noalias !9
  %143 = load i32*, i32** %82, align 16, !noalias !9
  %144 = icmp eq i32* %142, %143
  %145 = ptrtoint i32* %143 to i64
  br i1 %144, label %149, label %146

146:                                              ; preds = %141
  store i32 %108, i32* %142, align 4, !noalias !9
  %147 = getelementptr inbounds i32, i32* %142, i64 1
  %148 = ptrtoint i32* %147 to i64
  store i64 %148, i64* %100, align 8, !noalias !9
  br label %192

149:                                              ; preds = %141
  %150 = ptrtoint i32* %142 to i64
  %151 = load i64, i64* %101, align 16, !noalias !9
  %152 = sub i64 %150, %151
  %153 = ashr exact i64 %152, 2
  %154 = add nsw i64 %153, 1
  %155 = icmp ugt i64 %154, 4611686018427387903
  br i1 %155, label %156, label %158

156:                                              ; preds = %149
  %157 = bitcast %"class.std::__1::vector.14"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %157) #15, !noalias !9
  unreachable

158:                                              ; preds = %149
  %159 = sub i64 %145, %151
  %160 = ashr exact i64 %159, 2
  %161 = icmp ult i64 %160, 2305843009213693951
  br i1 %161, label %162, label %170

162:                                              ; preds = %158
  %163 = ashr exact i64 %159, 1
  %164 = icmp ult i64 %163, %154
  %165 = select i1 %164, i64 %154, i64 %163
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %175, label %167

167:                                              ; preds = %162
  %168 = icmp ugt i64 %165, 4611686018427387903
  br i1 %168, label %169, label %170

169:                                              ; preds = %167
  call void @abort() #15, !noalias !9
  unreachable

170:                                              ; preds = %167, %158
  %171 = phi i64 [ %165, %167 ], [ 4611686018427387903, %158 ]
  %172 = shl i64 %171, 2
  %173 = call i8* @_Znwm(i64 %172) #16, !noalias !9
  %174 = bitcast i8* %173 to i32*
  br label %175

175:                                              ; preds = %170, %162
  %176 = phi i64 [ %171, %170 ], [ 0, %162 ]
  %177 = phi i8* [ %173, %170 ], [ null, %162 ]
  %178 = phi i32* [ %174, %170 ], [ null, %162 ]
  %179 = getelementptr inbounds i32, i32* %178, i64 %153
  %180 = getelementptr inbounds i32, i32* %178, i64 %176
  %181 = ptrtoint i32* %180 to i64
  store i32 %108, i32* %179, align 4, !noalias !9
  %182 = getelementptr inbounds i32, i32* %179, i64 1
  %183 = ptrtoint i32* %182 to i64
  %184 = ptrtoint i32* %178 to i64
  %185 = icmp sgt i64 %152, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %175
  %187 = inttoptr i64 %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %177, i8* align 4 %187, i64 %152, i1 false) #14, !noalias !9
  br label %188

188:                                              ; preds = %186, %175
  store i64 %184, i64* %101, align 16, !noalias !9
  store i64 %183, i64* %100, align 8, !noalias !9
  store i64 %181, i64* %102, align 16, !noalias !9
  %189 = icmp eq i64 %151, 0
  br i1 %189, label %192, label %190

190:                                              ; preds = %188
  %191 = inttoptr i64 %151 to i8*
  call void @_ZdlPv(i8* %191) #16, !noalias !9
  br label %192

192:                                              ; preds = %190, %188, %146, %136
  %193 = load i32, i32* %11, align 4, !noalias !9
  br label %194

194:                                              ; preds = %192, %135
  %195 = phi i32 [ 0, %192 ], [ 1, %135 ]
  %196 = phi i32 [ %193, %192 ], [ %107, %135 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %97) #14, !noalias !9
  br label %197

197:                                              ; preds = %194, %122
  %198 = phi i32 [ %195, %194 ], [ 1, %122 ]
  %199 = phi i32 [ %196, %194 ], [ %107, %122 ]
  %200 = load i8, i8* %99, align 1, !noalias !9
  %201 = icmp slt i8 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %197
  %203 = load i8*, i8** %95, align 8, !noalias !9
  call void @_ZdlPv(i8* %203) #16, !noalias !9
  br label %204

204:                                              ; preds = %202, %197
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %94) #14, !noalias !9
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %8) #14, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #14, !noalias !9
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %6) #14, !noalias !9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #14, !noalias !9
  %205 = icmp eq i32 %198, 0
  %206 = add nuw nsw i32 %108, 1
  br i1 %205, label %103, label %218

207:                                              ; preds = %103
  %208 = bitcast %"class.std::__1::vector.14"* %5 to <2 x i64>*
  %209 = load <2 x i64>, <2 x i64>* %208, align 16, !noalias !9
  %210 = load i64, i64* %102, align 16, !noalias !9
  br label %211

211:                                              ; preds = %77, %207
  %212 = phi i64 [ %210, %207 ], [ 0, %77 ]
  %213 = phi <2 x i64> [ %209, %207 ], [ zeroinitializer, %77 ]
  %214 = bitcast %"class.std::__1::vector.14"* %16 to <2 x i64>*
  store <2 x i64> %213, <2 x i64>* %214, align 16, !alias.scope !9
  %215 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  %216 = bitcast i32** %215 to i64*
  store i64 %212, i64* %216, align 16, !alias.scope !9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %79, i8 0, i64 24, i1 false) #14, !noalias !9
  %217 = extractelement <2 x i64> %213, i32 0
  br label %224

218:                                              ; preds = %204
  %219 = load i32*, i32** %80, align 16, !noalias !9
  %220 = icmp eq i32* %219, null
  br i1 %220, label %224, label %221

221:                                              ; preds = %218
  %222 = bitcast i32* %219 to i8*
  %223 = ptrtoint i32* %219 to i64
  store i64 %223, i64* %100, align 8, !noalias !9
  call void @_ZdlPv(i8* %222) #16, !noalias !9
  br label %224

224:                                              ; preds = %221, %218, %211
  %225 = phi i64 [ %217, %211 ], [ 0, %218 ], [ 0, %221 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #14, !noalias !9
  store i64 %225, i64* bitcast (%"class.base::NoDestructor.13"* @_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE18kFirstCoresIndexes to i64*), align 8
  %226 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %16, i64 0, i32 0, i32 1
  %227 = bitcast i32** %226 to <2 x i64>*
  %228 = load <2 x i64>, <2 x i64>* %227, align 8
  store <2 x i64> %228, <2 x i64>* bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.13", %"class.base::NoDestructor.13"* @_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE18kFirstCoresIndexes, i64 0, i32 0, i64 8) to <2 x i64>*), align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #14
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE18kFirstCoresIndexes) #14
  br label %229

229:                                              ; preds = %74, %224, %71
  %230 = load i32*, i32** bitcast (%"class.base::NoDestructor.13"* @_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE18kFirstCoresIndexes to i32**), align 8
  %231 = load i32*, i32** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.13", %"class.base::NoDestructor.13"* @_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE18kFirstCoresIndexes, i64 0, i32 0, i64 8) to i32**), align 8
  %232 = icmp eq i32* %230, %231
  br i1 %232, label %383, label %233

233:                                              ; preds = %229
  %234 = getelementptr inbounds %"class.base::ThreadRestrictions::ScopedAllowIO", %"class.base::ThreadRestrictions::ScopedAllowIO"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %234) #14
  store i8 -86, i8* %234, align 1
  %235 = bitcast %"class.base::Location"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %235) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i32 576) #14
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %17, %"class.base::Location"* nonnull dereferenceable(32) %18) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %235) #14
  %236 = load i32*, i32** bitcast (%"class.base::NoDestructor.13"* @_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE18kFirstCoresIndexes to i32**), align 8
  %237 = load i32*, i32** bitcast (i8* getelementptr inbounds (%"class.base::NoDestructor.13", %"class.base::NoDestructor.13"* @_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE18kFirstCoresIndexes, i64 0, i32 0, i64 8) to i32**), align 8
  %238 = icmp eq i32* %236, %237
  br i1 %238, label %381, label %239

239:                                              ; preds = %233
  %240 = bitcast %"class.base::FilePath"* %19 to i8*
  %241 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %242 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %243 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %242, i64 0, i32 1, i32 0
  %244 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %245 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %246 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %247 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %249 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %249, i64 0, i32 1, i32 0
  %251 = bitcast i32* %2 to i8*
  %252 = bitcast i64* %3 to i8*
  %253 = bitcast i64* %4 to i8*
  %254 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %255 = bitcast %"struct.base::CPU::TimeInStateEntry"** %254 to i64*
  %256 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 0
  %257 = bitcast %"class.base::FilePath"* %19 to i8*
  br label %260

258:                                              ; preds = %378
  %259 = icmp eq i32* %380, %237
  br i1 %259, label %381, label %260

260:                                              ; preds = %239, %258
  %261 = phi i32* [ %236, %239 ], [ %380, %258 ]
  %262 = load i32, i32* %261, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %240) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %257, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %241) #14
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %20, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @_ZN4base12_GLOBAL__N_116kTimeInStatePathE, i64 0, i64 0), i32 %262) #14
  %263 = load i8, i8* %243, align 1
  %264 = icmp slt i8 %263, 0
  %265 = load i8*, i8** %244, align 8
  %266 = select i1 %264, i8* %265, i8* %241
  %267 = load i64, i64* %245, align 8
  %268 = zext i8 %263 to i64
  %269 = select i1 %264, i64 %267, i64 %268
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %19, i8* %266, i64 %269) #14
  %270 = load i8, i8* %243, align 1
  %271 = icmp slt i8 %270, 0
  br i1 %271, label %272, label %274

272:                                              ; preds = %260
  %273 = load i8*, i8** %244, align 8
  call void @_ZdlPv(i8* %273) #16
  br label %274

274:                                              ; preds = %260, %272
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %241) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %246) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %246, i8 0, i64 24, i1 false) #14
  %275 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* nonnull dereferenceable(24) %19, %"class.std::__1::basic_string"* nonnull %21) #14
  br i1 %275, label %276, label %372

276:                                              ; preds = %274
  %277 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** @_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEE10kCoreTypes, align 8
  %278 = sext i32 %262 to i64
  %279 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %277, i64 0, i32 0, i32 0
  %280 = load i32*, i32** %279, align 8
  %281 = getelementptr inbounds i32, i32* %280, i64 %278
  %282 = load i32, i32* %281, align 4
  %283 = load i8, i8* %250, align 1
  %284 = icmp slt i8 %283, 0
  %285 = load i8*, i8** %247, align 8
  %286 = load i64, i64* %248, align 8
  %287 = zext i8 %283 to i64
  %288 = select i1 %284, i8* %285, i8* %246
  %289 = select i1 %284, i64 %286, i64 %287
  %290 = add i64 %289, -1
  br label %291

291:                                              ; preds = %276, %366
  %292 = phi i64 [ 0, %276 ], [ %369, %366 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %251) #14
  store i32 0, i32* %2, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %252) #14
  store i64 -6148914691236517206, i64* %3, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #14
  store i64 -6148914691236517206, i64* %4, align 8
  %293 = getelementptr inbounds i8, i8* %288, i64 %292
  %294 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %293, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.10, i64 0, i64 0), i64* nonnull %3, i64* nonnull %4, i32* nonnull %2) #14
  %295 = icmp eq i32 %294, 2
  br i1 %295, label %296, label %371

296:                                              ; preds = %291
  %297 = load i64, i64* %4, align 8
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %366, label %299

299:                                              ; preds = %296
  %300 = load i64, i64* %3, align 8
  %301 = trunc i64 %297 to i32
  %302 = call i64 @_ZN4base8internal21ClockTicksToTimeDeltaEi(i32 %301) #14
  %303 = load %"struct.base::CPU::TimeInStateEntry"*, %"struct.base::CPU::TimeInStateEntry"** %24, align 8
  %304 = load %"struct.base::CPU::TimeInStateEntry"*, %"struct.base::CPU::TimeInStateEntry"** %254, align 8
  %305 = icmp ult %"struct.base::CPU::TimeInStateEntry"* %303, %304
  %306 = ptrtoint %"struct.base::CPU::TimeInStateEntry"* %304 to i64
  br i1 %305, label %307, label %314

307:                                              ; preds = %299
  %308 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %303, i64 0, i32 0
  store i32 %282, i32* %308, align 8
  %309 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %303, i64 0, i32 1
  store i32 %262, i32* %309, align 4
  %310 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %303, i64 0, i32 2
  store i64 %300, i64* %310, align 8
  %311 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %303, i64 0, i32 3, i32 0
  store i64 %302, i64* %311, align 8
  %312 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %303, i64 1
  %313 = ptrtoint %"struct.base::CPU::TimeInStateEntry"* %312 to i64
  store i64 %313, i64* %25, align 8
  br label %366

314:                                              ; preds = %299
  %315 = ptrtoint %"struct.base::CPU::TimeInStateEntry"* %303 to i64
  %316 = load i64, i64* %22, align 8
  %317 = sub i64 %315, %316
  %318 = sdiv exact i64 %317, 24
  %319 = add nsw i64 %318, 1
  %320 = icmp ugt i64 %319, 768614336404564650
  br i1 %320, label %321, label %323

321:                                              ; preds = %314
  %322 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %322) #15
  unreachable

323:                                              ; preds = %314
  %324 = sub i64 %306, %316
  %325 = sdiv exact i64 %324, 24
  %326 = icmp ult i64 %325, 384307168202282325
  br i1 %326, label %327, label %332

327:                                              ; preds = %323
  %328 = shl nsw i64 %325, 1
  %329 = icmp ult i64 %328, %319
  %330 = select i1 %329, i64 %319, i64 %328
  %331 = icmp eq i64 %330, 0
  br i1 %331, label %337, label %332

332:                                              ; preds = %327, %323
  %333 = phi i64 [ %330, %327 ], [ 768614336404564650, %323 ]
  %334 = mul i64 %333, 24
  %335 = call i8* @_Znwm(i64 %334) #16
  %336 = bitcast i8* %335 to %"struct.base::CPU::TimeInStateEntry"*
  br label %337

337:                                              ; preds = %332, %327
  %338 = phi i64 [ %333, %332 ], [ 0, %327 ]
  %339 = phi %"struct.base::CPU::TimeInStateEntry"* [ %336, %332 ], [ null, %327 ]
  %340 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %339, i64 %318
  %341 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %339, i64 %338
  %342 = ptrtoint %"struct.base::CPU::TimeInStateEntry"* %341 to i64
  %343 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %340, i64 0, i32 0
  store i32 %282, i32* %343, align 8
  %344 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %339, i64 %318, i32 1
  store i32 %262, i32* %344, align 4
  %345 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %339, i64 %318, i32 2
  store i64 %300, i64* %345, align 8
  %346 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %339, i64 %318, i32 3, i32 0
  store i64 %302, i64* %346, align 8
  %347 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %340, i64 1
  %348 = ptrtoint %"struct.base::CPU::TimeInStateEntry"* %347 to i64
  %349 = load %"struct.base::CPU::TimeInStateEntry"*, %"struct.base::CPU::TimeInStateEntry"** %256, align 8
  %350 = load i64, i64* %25, align 8
  %351 = ptrtoint %"struct.base::CPU::TimeInStateEntry"* %349 to i64
  %352 = sub i64 %350, %351
  %353 = sdiv exact i64 %352, -24
  %354 = getelementptr inbounds %"struct.base::CPU::TimeInStateEntry", %"struct.base::CPU::TimeInStateEntry"* %340, i64 %353
  %355 = ptrtoint %"struct.base::CPU::TimeInStateEntry"* %354 to i64
  %356 = icmp sgt i64 %352, 0
  br i1 %356, label %357, label %361

357:                                              ; preds = %337
  %358 = bitcast %"struct.base::CPU::TimeInStateEntry"* %354 to i8*
  %359 = bitcast %"struct.base::CPU::TimeInStateEntry"* %349 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %358, i8* align 8 %359, i64 %352, i1 false) #14
  %360 = load %"struct.base::CPU::TimeInStateEntry"*, %"struct.base::CPU::TimeInStateEntry"** %256, align 8
  br label %361

361:                                              ; preds = %357, %337
  %362 = phi %"struct.base::CPU::TimeInStateEntry"* [ %349, %337 ], [ %360, %357 ]
  store i64 %355, i64* %22, align 8
  store i64 %348, i64* %25, align 8
  store i64 %342, i64* %255, align 8
  %363 = icmp eq %"struct.base::CPU::TimeInStateEntry"* %362, null
  br i1 %363, label %366, label %364

364:                                              ; preds = %361
  %365 = bitcast %"struct.base::CPU::TimeInStateEntry"* %362 to i8*
  call void @_ZdlPv(i8* %365) #16
  br label %366

366:                                              ; preds = %364, %361, %307, %296
  %367 = load i32, i32* %2, align 4
  %368 = sext i32 %367 to i64
  %369 = add i64 %292, %368
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %251) #14
  %370 = icmp ugt i64 %369, %290
  br i1 %370, label %372, label %291

371:                                              ; preds = %291
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %252) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %251) #14
  br label %372

372:                                              ; preds = %366, %371, %274
  %373 = phi i32 [ 1, %274 ], [ 1, %371 ], [ 0, %366 ]
  %374 = load i8, i8* %250, align 1
  %375 = icmp slt i8 %374, 0
  br i1 %375, label %376, label %378

376:                                              ; preds = %372
  %377 = load i8*, i8** %247, align 8
  call void @_ZdlPv(i8* %377) #16
  br label %378

378:                                              ; preds = %372, %376
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %246) #14
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %19) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %240) #14
  %379 = icmp eq i32 %373, 0
  %380 = getelementptr inbounds i32, i32* %261, i64 1
  br i1 %379, label %258, label %381

381:                                              ; preds = %378, %258, %233
  %382 = phi i1 [ true, %233 ], [ true, %258 ], [ false, %378 ]
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %234) #14
  br label %383

383:                                              ; preds = %229, %60, %381
  %384 = phi i1 [ %382, %381 ], [ false, %60 ], [ false, %229 ]
  ret i1 %384
}

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #4

declare void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #4

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

declare void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"*, i8*, i64) unnamed_addr #4

declare zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* dereferenceable(24), %"class.std::__1::basic_string"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base3CPU26GetCumulativeCoreIdleTimesERNSt3__16vectorINS_9TimeDeltaENS1_9allocatorIS3_EEEE(%"class.std::__1::vector.21"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.base::ThreadRestrictions::ScopedAllowIO", align 1
  %4 = alloca %"class.base::Location", align 8
  %5 = alloca %"class.base::FilePath", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.base::ThreadRestrictions::ScopedAllowIO", align 1
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca i64, align 8
  %12 = alloca %"class.base::FilePath", align 8
  %13 = bitcast %"class.std::__1::vector.21"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 1
  %16 = bitcast %"class.base::TimeDelta"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = load atomic i8, i8* bitcast (i64* @_ZGVZN4base3CPU26GetCumulativeCoreIdleTimesERNSt3__16vectorINS_9TimeDeltaENS1_9allocatorIS3_EEEEE18kSupportsIdleTimes to i8*) acquire, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %51, !prof !5

19:                                               ; preds = %1
  %20 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN4base3CPU26GetCumulativeCoreIdleTimesERNSt3__16vectorINS_9TimeDeltaENS1_9allocatorIS3_EEEEE18kSupportsIdleTimes) #14
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %51, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.base::ThreadRestrictions::ScopedAllowIO", %"class.base::ThreadRestrictions::ScopedAllowIO"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #14
  store i8 -86, i8* %23, align 1
  %24 = bitcast %"class.base::Location"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i32 445) #14
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %3, %"class.base::Location"* nonnull dereferenceable(32) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #14
  %25 = bitcast %"class.base::FilePath"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 24, i1 false) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @_ZN4base12_GLOBAL__N_122kCoreIdleStateTimePathE, i64 0, i64 0), i32 0, i32 0) #14
  %27 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = select i1 %30, i8* %32, i8* %26
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = zext i8 %29 to i64
  %37 = select i1 %30, i64 %35, i64 %36
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %5, i8* %33, i64 %37) #14
  %38 = load i8, i8* %28, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %22
  %41 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %41) #16
  br label %42

42:                                               ; preds = %40, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14
  %43 = call %struct._IO_FILE* @_ZN4base8OpenFileERKNS_8FilePathEPKc(%"class.base::FilePath"* nonnull dereferenceable(24) %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.8, i64 0, i64 0)) #14
  %44 = icmp ne %struct._IO_FILE* %43, null
  %45 = icmp eq %struct._IO_FILE* %43, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %42
  %47 = call i32 @fclose(%struct._IO_FILE* nonnull %43) #14
  br label %48

48:                                               ; preds = %42, %46
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #14
  %49 = zext i1 %44 to i8
  store i8 %49, i8* @_ZZN4base3CPU26GetCumulativeCoreIdleTimesERNSt3__16vectorINS_9TimeDeltaENS1_9allocatorIS3_EEEEE18kSupportsIdleTimes, align 1
  %50 = call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN4base3CPU26GetCumulativeCoreIdleTimesERNSt3__16vectorINS_9TimeDeltaENS1_9allocatorIS3_EEEEE18kSupportsIdleTimes)
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN4base3CPU26GetCumulativeCoreIdleTimesERNSt3__16vectorINS_9TimeDeltaENS1_9allocatorIS3_EEEEE18kSupportsIdleTimes) #14
  br label %51

51:                                               ; preds = %19, %48, %1
  %52 = load i8, i8* @_ZZN4base3CPU26GetCumulativeCoreIdleTimesERNSt3__16vectorINS_9TimeDeltaENS1_9allocatorIS3_EEEEE18kSupportsIdleTimes, align 1, !range !4
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %204, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.base::ThreadRestrictions::ScopedAllowIO", %"class.base::ThreadRestrictions::ScopedAllowIO"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55) #14
  store i8 -86, i8* %55, align 1
  %56 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #14
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i32 607) #14
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOC1ERKNS_8LocationE(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #14
  %57 = call i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() #14
  %58 = icmp sgt i32 %57, 0
  br i1 %58, label %59, label %77

59:                                               ; preds = %54
  %60 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = bitcast i64* %11 to i8*
  %67 = bitcast %"class.base::FilePath"* %12 to i8*
  %68 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = bitcast %"class.logging::CheckError"* %2 to i8*
  %73 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %74 = bitcast %"class.base::TimeDelta"** %73 to i64*
  %75 = getelementptr inbounds %"class.std::__1::vector.21", %"class.std::__1::vector.21"* %0, i64 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  br label %79

77:                                               ; preds = %201, %54
  %78 = phi i1 [ false, %54 ], [ %196, %201 ]
  call void @_ZN4base18ThreadRestrictions13ScopedAllowIOD1Ev(%"class.base::ThreadRestrictions::ScopedAllowIO"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55) #14
  br label %204

79:                                               ; preds = %201, %59
  %80 = phi i32 [ 0, %59 ], [ %202, %201 ]
  %81 = phi i1 [ false, %59 ], [ %196, %201 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 24, i1 false) #14
  br label %82

82:                                               ; preds = %125, %79
  %83 = phi i64 [ 0, %79 ], [ %120, %125 ]
  %84 = phi i32 [ 0, %79 ], [ %126, %125 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 24, i1 false)
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %10, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @_ZN4base12_GLOBAL__N_122kCoreIdleStateTimePathE, i64 0, i64 0), i32 %80, i32 %84) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #14
  store i64 0, i64* %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #14
  %85 = load i8, i8* %69, align 1
  %86 = icmp slt i8 %85, 0
  %87 = load i8*, i8** %64, align 8
  %88 = select i1 %86, i8* %87, i8* %63
  %89 = load i64, i64* %65, align 8
  %90 = zext i8 %85 to i64
  %91 = select i1 %86, i64 %89, i64 %90
  call void @_ZN4base8FilePathC1ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::FilePath"* nonnull %12, i8* %88, i64 %91) #14
  %92 = call zeroext i1 @_ZN4base16ReadFileToStringERKNS_8FilePathEPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.base::FilePath"* nonnull dereferenceable(24) %12, %"class.std::__1::basic_string"* nonnull %9) #14
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #14
  br i1 %92, label %93, label %127

93:                                               ; preds = %82
  %94 = load i8, i8* %71, align 1
  %95 = icmp slt i8 %94, 0
  %96 = load i8*, i8** %61, align 8
  %97 = select i1 %95, i8* %96, i8* %60
  %98 = load i64, i64* %62, align 8
  %99 = zext i8 %94 to i64
  %100 = select i1 %95, i64 %98, i64 %99
  %101 = call zeroext i1 @_ZN4base14StringToUint64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8* %97, i64 %100, i64* nonnull %11) #14
  %102 = load i64, i64* %11, align 8
  %103 = add i64 %102, -9223372036854775807
  %104 = icmp ult i64 %103, 2
  br i1 %104, label %112, label %105

105:                                              ; preds = %93
  %106 = icmp slt i64 %102, 0
  %107 = select i1 %106, i64 -9223372036854775808, i64 9223372036854775807
  %108 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %83, i64 %102) #14
  %109 = extractvalue { i64, i1 } %108, 1
  %110 = extractvalue { i64, i1 } %108, 0
  %111 = select i1 %109, i64 %107, i64 %110, !prof !12
  br label %119

112:                                              ; preds = %93
  %113 = add i64 %83, -9223372036854775807
  %114 = icmp ugt i64 %113, 1
  %115 = icmp eq i64 %83, %102
  %116 = or i1 %114, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %112
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #14
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.13, i64 0, i64 0)) #14
  %118 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #14
  br label %119

119:                                              ; preds = %105, %112, %117
  %120 = phi i64 [ %111, %105 ], [ %102, %112 ], [ %102, %117 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14
  %121 = load i8, i8* %69, align 1
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %125

123:                                              ; preds = %119
  %124 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %124) #16
  br label %125

125:                                              ; preds = %119, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #14
  %126 = add nuw nsw i32 %84, 1
  br label %82

127:                                              ; preds = %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14
  %128 = load i8, i8* %69, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %127
  %131 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %131) #16
  br label %132

132:                                              ; preds = %127, %130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #14
  %133 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %15, align 8
  %134 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %73, align 8
  %135 = icmp eq %"class.base::TimeDelta"* %133, %134
  %136 = ptrtoint %"class.base::TimeDelta"* %134 to i64
  br i1 %135, label %141, label %137

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %133, i64 0, i32 0
  store i64 %83, i64* %138, align 8
  %139 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %133, i64 1
  %140 = ptrtoint %"class.base::TimeDelta"* %139 to i64
  store i64 %140, i64* %16, align 8
  br label %194

141:                                              ; preds = %132
  %142 = ptrtoint %"class.base::TimeDelta"* %133 to i64
  %143 = load i64, i64* %13, align 8
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = add nsw i64 %145, 1
  %147 = icmp ugt i64 %146, 2305843009213693951
  br i1 %147, label %148, label %150

148:                                              ; preds = %141
  %149 = bitcast %"class.std::__1::vector.21"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %149) #15
  unreachable

150:                                              ; preds = %141
  %151 = sub i64 %136, %143
  %152 = ashr exact i64 %151, 3
  %153 = icmp ult i64 %152, 1152921504606846975
  br i1 %153, label %154, label %162

154:                                              ; preds = %150
  %155 = ashr exact i64 %151, 2
  %156 = icmp ult i64 %155, %146
  %157 = select i1 %156, i64 %146, i64 %155
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %167, label %159

159:                                              ; preds = %154
  %160 = icmp ugt i64 %157, 2305843009213693951
  br i1 %160, label %161, label %162

161:                                              ; preds = %159
  call void @abort() #15
  unreachable

162:                                              ; preds = %159, %150
  %163 = phi i64 [ %157, %159 ], [ 2305843009213693951, %150 ]
  %164 = shl i64 %163, 3
  %165 = call i8* @_Znwm(i64 %164) #16
  %166 = bitcast i8* %165 to %"class.base::TimeDelta"*
  br label %167

167:                                              ; preds = %162, %154
  %168 = phi i64 [ %163, %162 ], [ 0, %154 ]
  %169 = phi %"class.base::TimeDelta"* [ %166, %162 ], [ null, %154 ]
  %170 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %169, i64 %145
  %171 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %169, i64 %168
  %172 = ptrtoint %"class.base::TimeDelta"* %171 to i64
  %173 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %170, i64 0, i32 0
  store i64 %83, i64* %173, align 8
  %174 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %170, i64 1
  %175 = ptrtoint %"class.base::TimeDelta"* %174 to i64
  %176 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %75, align 8
  %177 = load i64, i64* %16, align 8
  %178 = ptrtoint %"class.base::TimeDelta"* %176 to i64
  %179 = sub i64 %177, %178
  %180 = ashr exact i64 %179, 3
  %181 = sub nsw i64 0, %180
  %182 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %170, i64 %181
  %183 = ptrtoint %"class.base::TimeDelta"* %182 to i64
  %184 = icmp sgt i64 %179, 0
  br i1 %184, label %185, label %189

185:                                              ; preds = %167
  %186 = bitcast %"class.base::TimeDelta"* %182 to i8*
  %187 = bitcast %"class.base::TimeDelta"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 %179, i1 false) #14
  %188 = load %"class.base::TimeDelta"*, %"class.base::TimeDelta"** %75, align 8
  br label %189

189:                                              ; preds = %185, %167
  %190 = phi %"class.base::TimeDelta"* [ %176, %167 ], [ %188, %185 ]
  store i64 %183, i64* %13, align 8
  store i64 %175, i64* %16, align 8
  store i64 %172, i64* %74, align 8
  %191 = icmp eq %"class.base::TimeDelta"* %190, null
  br i1 %191, label %194, label %192

192:                                              ; preds = %189
  %193 = bitcast %"class.base::TimeDelta"* %190 to i8*
  call void @_ZdlPv(i8* %193) #16
  br label %194

194:                                              ; preds = %137, %189, %192
  %195 = icmp sgt i64 %83, 0
  %196 = or i1 %81, %195
  %197 = load i8, i8* %71, align 1
  %198 = icmp slt i8 %197, 0
  br i1 %198, label %199, label %201

199:                                              ; preds = %194
  %200 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %200) #16
  br label %201

201:                                              ; preds = %194, %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #14
  %202 = add nuw nsw i32 %80, 1
  %203 = icmp eq i32 %202, %57
  br i1 %203, label %77, label %79

204:                                              ; preds = %51, %77
  %205 = phi i1 [ %78, %77 ], [ false, %51 ]
  ret i1 %205
}

declare i32 @_ZN4base7SysInfo18NumberOfProcessorsEv() local_unnamed_addr #4

declare zeroext i1 @_ZN4base14StringToUint64ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8*, i64, i64*) local_unnamed_addr #4

declare zeroext i1 @_ZN4base12StringToUintENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPj(i8*, i64, i32*) local_unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIjNS_9allocatorIjEEE7emplaceIJRKjEEENS_11__wrap_iterIPjEENS7_IPS5_EEDpOT_(%"class.std::__1::vector.28"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !13
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !13
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !16, !noalias !13
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !16, !noalias !13
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !13
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !13
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !16, !noalias !13
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !16, !noalias !13
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !13
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !13
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !16, !noalias !13
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !16, !noalias !13
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !13
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !13
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !16, !noalias !13
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !16, !noalias !13
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !18

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !13
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !13
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !16, !noalias !13
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !16, !noalias !13
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !20

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #14
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !22

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #14
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.28"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #15
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.33"** %165 to %"class.std::__1::__compressed_pair.30"**
  store %"class.std::__1::__compressed_pair.30"* %159, %"class.std::__1::__compressed_pair.30"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.33"** %165 to %"class.std::__1::__compressed_pair.30"**
  store %"class.std::__1::__compressed_pair.30"* %159, %"class.std::__1::__compressed_pair.30"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #15
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #16
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE12emplace_backIJRKjEEEvDpOT_(%"struct.std::__1::__split_buffer"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #14
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !23

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #16
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #14
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIjRNS_9allocatorIjEEE12emplace_backIJRKjEEEvDpOT_(%"struct.std::__1::__split_buffer"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer", %"struct.std::__1::__split_buffer"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #14
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #15
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #16
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !24
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !24
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !27, !noalias !24
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !27, !noalias !24
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !24
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !24
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !27, !noalias !24
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !27, !noalias !24
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !24
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !24
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !27, !noalias !24
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !27, !noalias !24
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !24
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !24
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !27, !noalias !24
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !27, !noalias !24
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !29

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !24
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !24
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !27, !noalias !24
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !27, !noalias !24
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !30

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !31

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !32

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #16
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare %struct._IO_FILE* @_ZN4base8OpenFileERKNS_8FilePathEPKc(%"class.base::FilePath"* dereferenceable(24), i8*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #10

declare { i8*, i64 } @_ZN4base19TrimWhitespaceASCIIENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEENS_13TrimPositionsE(i8*, i64, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN4base11StringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #10

declare i64 @_ZN4base8internal21ClockTicksToTimeDeltaEi(i32) local_unnamed_addr #4

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #11

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #13

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 3604}
!3 = !{i32 4106}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4base12_GLOBAL__N_114GuessCoreTypesEv: argument 0"}
!8 = distinct !{!8, !"_ZN4base12_GLOBAL__N_114GuessCoreTypesEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEENK3$_0clEv: argument 0"}
!11 = distinct !{!11, !"_ZZN4base3CPU14GetTimeInStateERNSt3__16vectorINS0_16TimeInStateEntryENS1_9allocatorIS3_EEEEENK3$_0clEv"}
!12 = !{!"branch_weights", i32 1, i32 2000}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !19}
!19 = !{!"llvm.loop.isvectorized", i32 1}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.unroll.disable"}
!22 = distinct !{!22, !19}
!23 = distinct !{!23, !21}
!24 = !{!25}
!25 = distinct !{!25, !26}
!26 = distinct !{!26, !"LVerDomain"}
!27 = !{!28}
!28 = distinct !{!28, !26}
!29 = distinct !{!29, !19}
!30 = distinct !{!30, !21}
!31 = distinct !{!31, !21}
!32 = distinct !{!32, !19}
