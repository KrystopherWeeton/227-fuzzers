; ModuleID = '../../third_party/angle/src/libANGLE/renderer/null/DisplayNULL.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/null/DisplayNULL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::DisplayNULL" = type { %"class.rx::DisplayImpl", %"class.std::__1::unique_ptr.70" }
%"class.rx::DisplayImpl" = type { %"class.rx::EGLImplFactory", %"class.angle::Subject", %"struct.egl::DisplayState"*, i8, %"struct.egl::DisplayExtensions", i8, %"struct.egl::Caps", %"class.egl::BlobCache"* }
%"class.rx::EGLImplFactory" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"struct.egl::DisplayExtensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Caps" = type { i8, i8 }
%"class.egl::BlobCache" = type { %"class.std::__1::mutex", %"class.angle::SizedMRUCache", void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.angle::SizedMRUCache" = type { i64, i64, %"class.angle::base::HashingMRUCache" }
%"class.angle::base::HashingMRUCache" = type { %"class.angle::base::MRUCacheBase" }
%"class.angle::base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::unordered_map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.47" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.51", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.66", [4 x i8] }>
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53", %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { float }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.rx::AllocationTrackerNULL"* }
%"class.rx::AllocationTrackerNULL" = type { i64, i64 }
%"struct.egl::DisplayState" = type { i8*, %"class.std::__1::set.32", %"class.std::__1::vector", %"class.std::__1::vector", i8, i64 }
%"class.std::__1::set.32" = type { %"class.std::__1::__tree.33" }
%"class.std::__1::__tree.33" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.34", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::basic_string"* }
%"class.rx::ExternalImageSiblingImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl" }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.gl::Context" = type opaque
%"class.egl::AttributeMap" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr.142" }
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"class.egl::Display" = type { %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"struct.egl::DisplayState", %"class.rx::DisplayImpl"*, %"class.angle::ObserverBinding", %"class.egl::AttributeMap", %"class.egl::ConfigSet", %"class.std::__1::set.87", %"class.std::__1::set", %"class.std::__1::set.97", %"class.std::__1::set.107", i8, i8, %"struct.egl::Caps", %"struct.egl::DisplayExtensions", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.egl::Device"*, %"class.egl::Surface"*, i32, %"class.angle::LoggingAnnotator", %"class.gl::TextureManager"*, %"class.gl::SemaphoreManager"*, %"class.egl::BlobCache", %"class.gl::MemoryProgramCache", i64, i64, %"struct.angle::FrontendFeatures", %"class.std::__1::vector.128", %"class.std::__1::mutex", %"class.std::__1::vector.135", %"class.std::__1::vector.135", %"class.std::__1::mutex", %"class.std::__1::mutex" }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.egl::ConfigSet" = type { %"class.std::__1::map.76" }
%"class.std::__1::map.76" = type { %"class.std::__1::__tree.77" }
%"class.std::__1::__tree.77" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.78", %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.87" = type { %"class.std::__1::__tree.88" }
%"class.std::__1::__tree.88" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.89", %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.97" = type { %"class.std::__1::__tree.98" }
%"class.std::__1::__tree.98" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.99", %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.107" = type { %"class.std::__1::__tree.108" }
%"class.std::__1::__tree.108" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.egl::Device" = type opaque
%"class.egl::Surface" = type opaque
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.gl::TextureManager" = type opaque
%"class.gl::SemaphoreManager" = type opaque
%"class.gl::MemoryProgramCache" = type <{ %"class.egl::BlobCache"*, i32, [4 x i8] }>
%"struct.angle::FrontendFeatures" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.117" }
%"class.std::__1::map.117" = type { %"class.std::__1::__tree.118" }
%"class.std::__1::__tree.118" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.119", %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"class.std::__1::vector.128" = type { %"class.std::__1::__vector_base.129" }
%"class.std::__1::__vector_base.129" = type { %"struct.angle::Feature"**, %"struct.angle::Feature"**, %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"struct.angle::Feature"** }
%"class.std::__1::vector.135" = type { %"class.std::__1::__vector_base.136" }
%"class.std::__1::__vector_base.136" = type { %"class.angle::ScratchBuffer"*, %"class.angle::ScratchBuffer"*, %"class.std::__1::__compressed_pair.137" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.angle::ScratchBuffer"* }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.rx::DeviceImpl" = type { i32 (...)** }
%"class.rx::DeviceNULL" = type { %"class.rx::DeviceImpl" }
%"class.rx::SurfaceImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"struct.egl::SurfaceState"* }
%"struct.egl::SurfaceState" = type opaque
%"class.rx::SurfaceNULL" = type { %"class.rx::SurfaceImpl" }
%"class.rx::ImageImpl" = type { i32 (...)**, %"struct.egl::ImageState"* }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.14", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.13", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.13" = type { i32 (...)**, i64 }
%"class.std::__1::set.14" = type { %"class.std::__1::__tree.15" }
%"class.std::__1::__tree.15" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageNULL" = type { %"class.rx::ImageImpl" }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.177", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer", %"class.gl::Program"*, %"class.gl::BindingPointer.347", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.359", %"class.gl::VertexArray"*, %"class.angle::BitSetT.185", i64, %"class.angle::PackedEnumMap.402", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.187", %"class.angle::BitSetArray", %"class.std::__1::vector.430", %"class.std::__1::vector.441", %"class.angle::PackedEnumMap.448", %"class.angle::PackedEnumMap.452", %"class.std::__1::vector.454", %"class.std::__1::vector.454", %"class.std::__1::vector.454", %"class.angle::BitSetArray.461", %"class.angle::BitSetT.462", %"class.angle::BitSetT.274", %"class.gl::BindingPointer.463", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.490", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.274", %"class.angle::BitSetT.549", [4 x i8], %"class.angle::BitSetT.186", %"class.angle::BitSetT.272", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT", %"class.angle::BitSetT", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector.147", %"class.std::__1::vector.147", %"class.std::__1::vector.147", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.156", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.158", %"struct.std::__1::array.158", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector.147" = type { %"class.std::__1::__vector_base.148" }
%"class.std::__1::__vector_base.148" = type { i32*, i32*, %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.154", i32 }
%"struct.std::__1::array.154" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.155" }
%"struct.std::__1::array.155" = type { [6 x i32] }
%"class.angle::PackedEnumMap.156" = type { %"struct.std::__1::array.157" }
%"struct.std::__1::array.157" = type { [6 x i64] }
%"struct.std::__1::array.158" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.159" }
%"class.angle::PackedEnumMap.159" = type { %"struct.std::__1::array.160" }
%"struct.std::__1::array.160" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.161" }
%"class.std::__1::set.161" = type { %"class.std::__1::__tree.162" }
%"class.std::__1::__tree.162" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.163", %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type { i64, %"class.rx::ShareGroupImpl"*, %"class.rx::SerialFactoryBase", %"class.std::__1::unique_ptr.171" }
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.angle::FrameCaptureShared"* }
%"class.angle::FrameCaptureShared" = type opaque
%"class.gl::BufferManager" = type opaque
%"class.gl::ShaderProgramManager" = type opaque
%"class.gl::RenderbufferManager" = type opaque
%"class.gl::SamplerManager" = type opaque
%"class.gl::SyncManager" = type opaque
%"class.gl::FramebufferManager" = type opaque
%"class.gl::ProgramPipelineManager" = type opaque
%"class.gl::MemoryObjectManager" = type opaque
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT", %"class.angle::BitSetT", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.177" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional, %"class.std::__1::vector.187", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.194", %"class.angle::BitSetT", %struct.Optional.195 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.178", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT", %"class.std::__1::vector.147", i32, %"class.angle::BitSetT", %"class.angle::BitSetT.185", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.186", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.rx::Serial" = type { i64 }
%"class.std::__1::vector.178" = type { %"class.std::__1::__vector_base.179" }
%"class.std::__1::__vector_base.179" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.194" = type { i64 }
%struct.Optional.195 = type { i8, %"class.angle::BitSetT.194" }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.196" }
%"class.angle::BindingPointer.196" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.341", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.307" }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.197", i32, %"class.std::__1::vector", %"class.std::__1::vector.245", %"class.std::__1::vector.252", %"class.gl::Range", %"class.angle::BitSetT", %"class.std::__1::vector.147", %"class.angle::BitSetT.185", i8, i8, i8, i8, %"class.angle::BitSetT.213", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.angle::PackedEnumMap.197" = type { %"struct.std::__1::array.198" }
%"struct.std::__1::array.198" = type { [6 x %"class.gl::Shader"*] }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.216", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer.222", %"class.std::__1::unique_ptr.239", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector.147", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.199", %"class.std::__1::vector.199", %"class.std::__1::vector.199", %"class.std::__1::vector.206", %"class.std::__1::vector.206", %"class.std::__1::vector.199", %"class.std::__1::vector.199", %"class.std::__1::vector.199", i8, [3 x i8], %"class.angle::BitSetT.213", i32, %struct.Optional.214, %struct.Optional.214, %struct.Optional.215, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.208" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.199" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.201" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.147", i8, i8, %"class.std::__1::vector.199", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.sh::ShaderVariable"* }
%struct.Optional.214 = type { i8, i8 }
%struct.Optional.215 = type { i8, i32 }
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"class.gl::BindingPointer.222" = type { %"class.angle::BindingPointer.223" }
%"class.angle::BindingPointer.223" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.224", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.230" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.158", %"struct.std::__1::array.158", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.230" = type { %"struct.std::__1::array.231" }
%"struct.std::__1::array.231" = type { [6 x %"class.std::__1::vector.232"] }
%"class.std::__1::vector.232" = type { %"class.std::__1::__vector_base.233" }
%"class.std::__1::__vector_base.233" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.234" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.std::__1::vector.245" = type { %"class.std::__1::__vector_base.246" }
%"class.std::__1::__vector_base.246" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.247" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.252" = type { %"class.std::__1::__vector_base.253" }
%"class.std::__1::__vector_base.253" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.255" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.254" }>
%"class.angle::BitSetT.254" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.angle::BitSetT.213" = type { i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.332" }
%"class.absl::flat_hash_map.332" = type { %"class.absl::container_internal::raw_hash_map.333" }
%"class.absl::container_internal::raw_hash_map.333" = type { %"class.absl::container_internal::raw_hash_set.334" }
%"class.absl::container_internal::raw_hash_set.334" = type { i8*, %"union.absl::container_internal::map_slot_type.335"*, i64, i64, %"class.absl::container_internal::CompressedTuple.336" }
%"union.absl::container_internal::map_slot_type.335" = type opaque
%"class.absl::container_internal::CompressedTuple.336" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.337" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.337" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type opaque
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.angle::BitSetT.307" = type { i64 }
%"class.gl::BindingPointer.347" = type { %"class.angle::BindingPointer.348" }
%"class.angle::BindingPointer.348" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.350", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.351", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.187", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.350" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.std::__1::unique_ptr.351" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.357", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.357" = type { %"struct.std::__1::array.358" }
%"struct.std::__1::array.358" = type { [6 x %"class.gl::Program"*] }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.254", %"class.angle::BitSetT.254", [6 x i8], %"class.angle::BitSetT.272", i32, [4 x i8], %"class.angle::BitSetT.185", %"class.angle::BitSetT.272", %"class.angle::BitSetArray", %"struct.std::__1::array.275", %"struct.std::__1::array.276", %"class.angle::BitSetArray", %"struct.std::__1::array.277", %"struct.std::__1::array.278", %"class.angle::BitSetArray", %"struct.std::__1::array.278", i8, [7 x i8], %"class.std::__1::vector.199", %"class.std::__1::vector.245", %"class.std::__1::vector.245", i8, [7 x i8], %"class.std::__1::vector.199", %"class.std::__1::vector.279", %"class.std::__1::vector.286", i32, [4 x i8], %"class.std::__1::vector.293", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.300", %"class.angle::BitSetT.307", %"class.std::__1::vector.308", %"class.gl::Range", %"class.std::__1::vector.300", %"class.std::__1::vector.300", %"class.gl::Range", %"class.std::__1::vector.315", %"class.std::__1::vector.322", %"class.std::__1::vector.322", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.329", %"class.angle::PackedEnumMap.329", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.331, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.266" }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.275" = type { [96 x i32] }
%"struct.std::__1::array.276" = type { [96 x i8] }
%"struct.std::__1::array.277" = type { [96 x i8] }
%"struct.std::__1::array.278" = type { [96 x %"class.angle::BitSetT.254"] }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.281" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.286" = type { %"class.std::__1::__vector_base.287" }
%"class.std::__1::__vector_base.287" = type { i32*, i32*, %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { i32* }
%"class.std::__1::vector.293" = type { %"class.std::__1::__vector_base.294" }
%"class.std::__1::__vector_base.294" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.295" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector.147" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.308" = type { %"class.std::__1::__vector_base.309" }
%"class.std::__1::__vector_base.309" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.310" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector.147" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.300" = type { %"class.std::__1::__vector_base.301" }
%"class.std::__1::__vector_base.301" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.302" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.315" = type { %"class.std::__1::__vector_base.316" }
%"class.std::__1::__vector_base.316" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.317" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector.147" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.322" = type { %"class.std::__1::__vector_base.323" }
%"class.std::__1::__vector_base.323" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.324" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector.147" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.329" = type { %"struct.std::__1::array.330" }
%"struct.std::__1::array.330" = type { [6 x %"class.std::__1::vector.199"] }
%struct.Optional.331 = type { i8, i8 }
%"class.std::__1::vector.359" = type { %"class.std::__1::__vector_base.360" }
%"class.std::__1::__vector_base.360" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.362" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.361, i32 }
%union.anon.361 = type { [4 x float] }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.396", %"struct.std::__1::array.397", %"struct.std::__1::array.399", %struct.Optional.401, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.187", %"class.angle::BitSetT.272", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.367", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.389", %"class.angle::BitSetT.272", %"class.angle::BitSetT.185", %"class.angle::BitSetT.272", %"class.angle::BitSetT.272", %"class.angle::BitSetT.272", %"class.angle::BitSetT.272", %"class.angle::BitSetT.272" }
%"class.std::__1::vector.367" = type { %"class.std::__1::__vector_base.368" }
%"class.std::__1::__vector_base.368" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.369" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.374", %"class.angle::ObserverBindingBase" }
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.377", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.377" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map.378" }
%"class.std::__1::map.378" = type { %"class.std::__1::__tree.379" }
%"class.std::__1::__tree.379" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.380", %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.389" = type { %"class.std::__1::__vector_base.390" }
%"class.std::__1::__vector_base.390" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.391" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.374", %"class.angle::BitSetT.272" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.396" = type { i64 }
%"struct.std::__1::array.397" = type { [16 x %"class.angle::BitSetT.398"] }
%"class.angle::BitSetT.398" = type { i64 }
%"struct.std::__1::array.399" = type { [16 x %"class.angle::BitSetT.400"] }
%"class.angle::BitSetT.400" = type { i64 }
%struct.Optional.401 = type { i8, %"class.angle::BitSetT.396" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::BitSetT.185" = type { i64 }
%"class.angle::PackedEnumMap.402" = type { %"struct.std::__1::array.403" }
%"struct.std::__1::array.403" = type { [11 x %"class.std::__1::vector.404"] }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"class.gl::BindingPointer.406"*, %"class.gl::BindingPointer.406"*, %"class.std::__1::__compressed_pair.424" }
%"class.gl::BindingPointer.406" = type { %"class.angle::BindingPointer.407" }
%"class.angle::BindingPointer.407" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.409", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.420", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.422", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.409" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.413", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.410, i8, [3 x i8] }>
%union.anon.410 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.413" = type { %"class.std::__1::__vector_base.414" }
%"class.std::__1::__vector_base.414" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.415" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.374", i64, i64 }
%"class.angle::BitSetT.420" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.421", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.421" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.422" = type { %"struct.std::__1::array.423", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.423" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.gl::BindingPointer.406"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.429" }
%"struct.std::__1::array.429" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.angle::ObserverBinding"* }
%"class.std::__1::vector.430" = type { %"class.std::__1::__vector_base.431" }
%"class.std::__1::__vector_base.431" = type { %"class.gl::BindingPointer.432"*, %"class.gl::BindingPointer.432"*, %"class.std::__1::__compressed_pair.436" }
%"class.gl::BindingPointer.432" = type { %"class.angle::BindingPointer.433" }
%"class.angle::BindingPointer.433" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.435", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.435" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.gl::BindingPointer.432"* }
%"class.std::__1::vector.441" = type { %"class.std::__1::__vector_base.442" }
%"class.std::__1::__vector_base.442" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.443" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.406", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.443" = type { %"struct.std::__1::__compressed_pair_elem.444" }
%"struct.std::__1::__compressed_pair_elem.444" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.448" = type { %"struct.std::__1::array.449" }
%"struct.std::__1::array.449" = type { [7 x %"class.gl::BindingPointer.450"] }
%"class.gl::BindingPointer.450" = type { %"class.angle::BindingPointer.451" }
%"class.angle::BindingPointer.451" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.452" = type { %"struct.std::__1::array.453" }
%"struct.std::__1::array.453" = type { [13 x %"class.gl::BindingPointer.374"] }
%"class.std::__1::vector.454" = type { %"class.std::__1::__vector_base.455" }
%"class.std::__1::__vector_base.455" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.456" }
%"class.std::__1::__compressed_pair.456" = type { %"struct.std::__1::__compressed_pair_elem.457" }
%"struct.std::__1::__compressed_pair_elem.457" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.461" = type { %"struct.std::__1::array.273" }
%"struct.std::__1::array.273" = type { [2 x %"class.angle::BitSetT.274"] }
%"class.angle::BitSetT.462" = type { i64 }
%"class.gl::BindingPointer.463" = type { %"class.angle::BindingPointer.464" }
%"class.angle::BindingPointer.464" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.466", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.466" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.454" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.476" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.472" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.467" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.476" = type { %"class.std::__1::__vector_base.477" }
%"class.std::__1::__vector_base.477" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.485" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.478" }
%"class.std::__1::vector.478" = type { %"class.std::__1::__vector_base.479" }
%"class.std::__1::__vector_base.479" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.480" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector.147", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.490" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.272", %"class.std::__1::vector.491", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.499", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.504", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.519", %"class.std::__1::vector.526", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.533", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.542", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.491" = type { %"class.std::__1::__vector_base.492" }
%"class.std::__1::__vector_base.492" = type { %"class.angle::BitSetT.493"*, %"class.angle::BitSetT.493"*, %"class.std::__1::__compressed_pair.494" }
%"class.angle::BitSetT.493" = type opaque
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.angle::BitSetT.493"* }
%"class.std::__1::vector.499" = type { i64*, i64, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.504" = type { %"class.std::__1::__vector_base.505" }
%"class.std::__1::__vector_base.505" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.506" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.511", i64 }
%"struct.std::__1::array.511" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.512", i32, i32 }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { float*, float*, %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { float* }
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.526" = type { %"class.std::__1::__vector_base.527" }
%"class.std::__1::__vector_base.527" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.528" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.528" = type { %"struct.std::__1::__compressed_pair_elem.529" }
%"struct.std::__1::__compressed_pair_elem.529" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.533" = type { %"class.std::__1::__vector_base.534" }
%"class.std::__1::__vector_base.534" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.537" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.535", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.535" = type { %"class.angle::VectorBase.536" }
%"class.angle::VectorBase.536" = type { [4 x float] }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.544" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.535" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.274" = type { i64 }
%"class.angle::BitSetT.549" = type { i32 }
%"class.angle::BitSetT.186" = type { i64 }
%"class.angle::BitSetT.272" = type { i64 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.273" }
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.angle::BitSetT" = type { i8 }
%"class.gl::ErrorSet" = type opaque
%"class.rx::ContextNULL" = type { %"class.rx::ContextImpl", %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.rx::AllocationTrackerNULL"* }
%"class.rx::EGLSyncImpl" = type opaque
%"class.rx::ShareGroupNULL" = type { %"class.rx::ShareGroupImpl" }

$_ZN2rx14EGLImplFactory26createExternalImageSiblingEPKN2gl7ContextEjPvRKN3egl12AttributeMapE = comdat any

$_ZN2rx14EGLImplFactory10createSyncERKN3egl12AttributeMapE = comdat any

$_ZN2rx11DisplayImpl17setBlobCacheFuncsEPFvPKvlS2_lEPFlS2_lPvlE = comdat any

$_ZNK2rx11DisplayImpl26initializeFrontendFeaturesEPN5angle16FrontendFeaturesE = comdat any

$_ZN2rx11DisplayNULL19populateFeatureListEPNSt3__16vectorIPKN5angle7FeatureENS1_9allocatorIS6_EEEE = comdat any

$_ZN2rx14ShareGroupImplD2Ev = comdat any

$_ZN2rx14ShareGroupNULLD0Ev = comdat any

$_ZN2rx14ShareGroupImpl9onDestroyEPKN3egl7DisplayE = comdat any

$_ZTVN2rx14ShareGroupNULLE = comdat any

@_ZTVN2rx11DisplayNULLE = hidden unnamed_addr constant { [40 x i8*], [4 x i8*] } { [40 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::DisplayNULL"*)* @_ZN2rx11DisplayNULLD2Ev to i8*), i8* bitcast (void (%"class.rx::DisplayNULL"*)* @_ZN2rx11DisplayNULLD0Ev to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayNULL"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)* @_ZN2rx11DisplayNULL19createWindowSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayNULL"*, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"*)* @_ZN2rx11DisplayNULL20createPbufferSurfaceERKN3egl12SurfaceStateERKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayNULL"*, %"struct.egl::SurfaceState"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZN2rx11DisplayNULL29createPbufferFromClientBufferERKN3egl12SurfaceStateEjPvRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::SurfaceImpl"* (%"class.rx::DisplayNULL"*, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"*)* @_ZN2rx11DisplayNULL19createPixmapSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::ImageImpl"* (%"class.rx::DisplayNULL"*, %"struct.egl::ImageState"*, %"class.gl::Context"*, i32, %"class.egl::AttributeMap"*)* @_ZN2rx11DisplayNULL11createImageERKN3egl10ImageStateEPKN2gl7ContextEjRKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::ContextImpl"* (%"class.rx::DisplayNULL"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"struct.egl::Config"*, %"class.gl::Context"*, %"class.egl::AttributeMap"*)* @_ZN2rx11DisplayNULL13createContextERKN2gl5StateEPNS1_8ErrorSetEPKN3egl6ConfigEPKNS1_7ContextERKNS7_12AttributeMapE to i8*), i8* bitcast (%"class.rx::StreamProducerImpl"* (%"class.rx::DisplayNULL"*, i32, %"class.egl::AttributeMap"*)* @_ZN2rx11DisplayNULL30createStreamProducerD3DTextureEN3egl6Stream12ConsumerTypeERKNS1_12AttributeMapE to i8*), i8* bitcast (%"class.rx::ExternalImageSiblingImpl"* (%"class.rx::EGLImplFactory"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZN2rx14EGLImplFactory26createExternalImageSiblingEPKN2gl7ContextEjPvRKN3egl12AttributeMapE to i8*), i8* bitcast (%"class.rx::EGLSyncImpl"* (%"class.rx::EGLImplFactory"*, %"class.egl::AttributeMap"*)* @_ZN2rx14EGLImplFactory10createSyncERKN3egl12AttributeMapE to i8*), i8* bitcast (%"class.rx::ShareGroupImpl"* (%"class.rx::DisplayNULL"*)* @_ZN2rx11DisplayNULL16createShareGroupEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayNULL"*, %"class.egl::Display"*)* @_ZN2rx11DisplayNULL10initializeEPN3egl7DisplayE to i8*), i8* bitcast (void (%"class.rx::DisplayNULL"*)* @_ZN2rx11DisplayNULL9terminateEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*)* @_ZN2rx11DisplayImpl14prepareForCallEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*)* @_ZN2rx11DisplayImpl13releaseThreadEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayNULL"*, %"class.egl::Display"*, %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.gl::Context"*)* @_ZN2rx11DisplayNULL11makeCurrentEPN3egl7DisplayEPNS1_7SurfaceES5_PN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::ConfigSet"*, %"class.rx::DisplayNULL"*)* @_ZN2rx11DisplayNULL15generateConfigsEv to i8*), i8* bitcast (i1 (%"class.rx::DisplayNULL"*)* @_ZN2rx11DisplayNULL14testDeviceLostEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayNULL"*, %"class.egl::Display"*)* @_ZN2rx11DisplayNULL17restoreLostDeviceEPKN3egl7DisplayE to i8*), i8* bitcast (i1 (%"class.rx::DisplayNULL"*, i64)* @_ZNK2rx11DisplayNULL19isValidNativeWindowEl to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZNK2rx11DisplayImpl20validateClientBufferEPKN3egl6ConfigEjPvRKNS1_12AttributeMapE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"*)* @_ZNK2rx11DisplayImpl25validateImageClientBufferEPKN2gl7ContextEjPvRKN3egl12AttributeMapE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"*)* @_ZNK2rx11DisplayImpl14validatePixmapEPKN3egl6ConfigElRKNS1_12AttributeMapE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.rx::DisplayNULL"*)* @_ZN2rx11DisplayNULL22getRendererDescriptionEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.rx::DisplayNULL"*)* @_ZN2rx11DisplayNULL15getVendorStringEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.rx::DisplayNULL"*)* @_ZN2rx11DisplayNULL16getVersionStringEv to i8*), i8* bitcast (%"class.rx::DeviceImpl"* (%"class.rx::DisplayNULL"*)* @_ZN2rx11DisplayNULL12createDeviceEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayNULL"*, %"class.gl::Context"*)* @_ZN2rx11DisplayNULL10waitClientEPKN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayNULL"*, %"class.gl::Context"*, i32)* @_ZN2rx11DisplayNULL10waitNativeEPKN2gl7ContextEi to i8*), i8* bitcast (i64 (%"class.rx::DisplayNULL"*)* @_ZNK2rx11DisplayNULL24getMaxSupportedESVersionEv to i8*), i8* bitcast (i64 (%"class.rx::DisplayNULL"*)* @_ZNK2rx11DisplayNULL25getMaxConformantESVersionEv to i8*), i8* bitcast (void (%"class.rx::DisplayImpl"*, void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)*)* @_ZN2rx11DisplayImpl17setBlobCacheFuncsEPFvPKvlS2_lEPFlS2_lPvlE to i8*), i8* bitcast (void (%"class.rx::DisplayImpl"*, %"struct.angle::FrontendFeatures"*)* @_ZNK2rx11DisplayImpl26initializeFrontendFeaturesEPN5angle16FrontendFeaturesE to i8*), i8* bitcast (void (%"class.rx::DisplayNULL"*, %"class.std::__1::vector.128"*)* @_ZN2rx11DisplayNULL19populateFeatureListEPNSt3__16vectorIPKN5angle7FeatureENS1_9allocatorIS6_EEEE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::DisplayImpl"*)* @_ZN2rx11DisplayImpl15handleGPUSwitchEv to i8*), i8* bitcast (void (%"class.rx::DisplayNULL"*, %"struct.egl::DisplayExtensions"*)* @_ZNK2rx11DisplayNULL18generateExtensionsEPN3egl17DisplayExtensionsE to i8*), i8* bitcast (void (%"class.rx::DisplayNULL"*, %"struct.egl::Caps"*)* @_ZNK2rx11DisplayNULL12generateCapsEPN3egl4CapsE to i8*)], [4 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.rx::DisplayNULL"*)* @_ZThn8_N2rx11DisplayNULLD1Ev to i8*), i8* bitcast (void (%"class.rx::DisplayNULL"*)* @_ZThn8_N2rx11DisplayNULLD0Ev to i8*)] }, align 8
@_ZTVN2rx14ShareGroupNULLE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::ShareGroupImpl"*)* @_ZN2rx14ShareGroupImplD2Ev to i8*), i8* bitcast (void (%"class.rx::ShareGroupNULL"*)* @_ZN2rx14ShareGroupNULLD0Ev to i8*), i8* bitcast (void (%"class.rx::ShareGroupImpl"*, %"class.egl::Display"*)* @_ZN2rx14ShareGroupImpl9onDestroyEPKN3egl7DisplayE to i8*)] }, comdat, align 8

@_ZN2rx11DisplayNULLC1ERKN3egl12DisplayStateE = hidden unnamed_addr alias void (%"class.rx::DisplayNULL"*, %"struct.egl::DisplayState"*), void (%"class.rx::DisplayNULL"*, %"struct.egl::DisplayState"*)* @_ZN2rx11DisplayNULLC2ERKN3egl12DisplayStateE
@_ZN2rx11DisplayNULLD1Ev = hidden unnamed_addr alias void (%"class.rx::DisplayNULL"*), void (%"class.rx::DisplayNULL"*)* @_ZN2rx11DisplayNULLD2Ev

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.rx::ExternalImageSiblingImpl"* @_ZN2rx14EGLImplFactory26createExternalImageSiblingEPKN2gl7ContextEjPvRKN3egl12AttributeMapE(%"class.rx::EGLImplFactory"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret %"class.rx::ExternalImageSiblingImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11DisplayNULLC2ERKN3egl12DisplayStateE(%"class.rx::DisplayNULL"*, %"struct.egl::DisplayState"* dereferenceable(96)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.rx::DisplayNULL", %"class.rx::DisplayNULL"* %0, i64 0, i32 0
  tail call void @_ZN2rx11DisplayImplC2ERKN3egl12DisplayStateE(%"class.rx::DisplayImpl"* %3, %"struct.egl::DisplayState"* dereferenceable(96) %1) #10
  %4 = bitcast %"class.rx::DisplayNULL"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [4 x i8*] }, { [40 x i8*], [4 x i8*] }* @_ZTVN2rx11DisplayNULLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [4 x i8*] }, { [40 x i8*], [4 x i8*] }* @_ZTVN2rx11DisplayNULLE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.rx::DisplayNULL", %"class.rx::DisplayNULL"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.70"* %5 to i64*
  store i64 0, i64* %6, align 8
  ret void
}

declare void @_ZN2rx11DisplayImplC2ERKN3egl12DisplayStateE(%"class.rx::DisplayImpl"*, %"struct.egl::DisplayState"* dereferenceable(96)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11DisplayNULLD2Ev(%"class.rx::DisplayNULL"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.rx::DisplayNULL"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [4 x i8*] }, { [40 x i8*], [4 x i8*] }* @_ZTVN2rx11DisplayNULLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [4 x i8*] }, { [40 x i8*], [4 x i8*] }* @_ZTVN2rx11DisplayNULLE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.rx::DisplayNULL", %"class.rx::DisplayNULL"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.rx::AllocationTrackerNULL"*, %"class.rx::AllocationTrackerNULL"** %3, align 8
  store %"class.rx::AllocationTrackerNULL"* null, %"class.rx::AllocationTrackerNULL"** %3, align 8
  %5 = icmp eq %"class.rx::AllocationTrackerNULL"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2rx21AllocationTrackerNULLD1Ev(%"class.rx::AllocationTrackerNULL"* nonnull %4) #10
  %7 = bitcast %"class.rx::AllocationTrackerNULL"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.rx::DisplayNULL", %"class.rx::DisplayNULL"* %0, i64 0, i32 0
  tail call void @_ZN2rx11DisplayImplD2Ev(%"class.rx::DisplayImpl"* %9) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx11DisplayImplD2Ev(%"class.rx::DisplayImpl"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2rx11DisplayNULLD1Ev(%"class.rx::DisplayNULL"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayNULL", %"class.rx::DisplayNULL"* %0, i64 -1, i32 1
  %3 = bitcast %"class.std::__1::unique_ptr.70"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [4 x i8*] }, { [40 x i8*], [4 x i8*] }* @_ZTVN2rx11DisplayNULLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [4 x i8*] }, { [40 x i8*], [4 x i8*] }* @_ZTVN2rx11DisplayNULLE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %2, i64 25, i32 0, i32 0, i32 0
  %5 = load %"class.rx::AllocationTrackerNULL"*, %"class.rx::AllocationTrackerNULL"** %4, align 8
  store %"class.rx::AllocationTrackerNULL"* null, %"class.rx::AllocationTrackerNULL"** %4, align 8
  %6 = icmp eq %"class.rx::AllocationTrackerNULL"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN2rx21AllocationTrackerNULLD1Ev(%"class.rx::AllocationTrackerNULL"* nonnull %5) #10
  %8 = bitcast %"class.rx::AllocationTrackerNULL"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  br label %9

9:                                                ; preds = %1, %7
  %10 = bitcast %"class.std::__1::unique_ptr.70"* %2 to %"class.rx::DisplayImpl"*
  tail call void @_ZN2rx11DisplayImplD2Ev(%"class.rx::DisplayImpl"* %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11DisplayNULLD0Ev(%"class.rx::DisplayNULL"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.rx::DisplayNULL"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [4 x i8*] }, { [40 x i8*], [4 x i8*] }* @_ZTVN2rx11DisplayNULLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [4 x i8*] }, { [40 x i8*], [4 x i8*] }* @_ZTVN2rx11DisplayNULLE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.rx::DisplayNULL", %"class.rx::DisplayNULL"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.rx::AllocationTrackerNULL"*, %"class.rx::AllocationTrackerNULL"** %3, align 8
  store %"class.rx::AllocationTrackerNULL"* null, %"class.rx::AllocationTrackerNULL"** %3, align 8
  %5 = icmp eq %"class.rx::AllocationTrackerNULL"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN2rx21AllocationTrackerNULLD1Ev(%"class.rx::AllocationTrackerNULL"* nonnull %4) #10
  %7 = bitcast %"class.rx::AllocationTrackerNULL"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.rx::DisplayNULL", %"class.rx::DisplayNULL"* %0, i64 0, i32 0
  tail call void @_ZN2rx11DisplayImplD2Ev(%"class.rx::DisplayImpl"* %9) #10
  %10 = bitcast %"class.rx::DisplayNULL"* %0 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2rx11DisplayNULLD0Ev(%"class.rx::DisplayNULL"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayNULL", %"class.rx::DisplayNULL"* %0, i64 -1, i32 1
  %3 = bitcast %"class.std::__1::unique_ptr.70"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [4 x i8*] }, { [40 x i8*], [4 x i8*] }* @_ZTVN2rx11DisplayNULLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [40 x i8*], [4 x i8*] }, { [40 x i8*], [4 x i8*] }* @_ZTVN2rx11DisplayNULLE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.70", %"class.std::__1::unique_ptr.70"* %2, i64 25, i32 0, i32 0, i32 0
  %5 = load %"class.rx::AllocationTrackerNULL"*, %"class.rx::AllocationTrackerNULL"** %4, align 8
  store %"class.rx::AllocationTrackerNULL"* null, %"class.rx::AllocationTrackerNULL"** %4, align 8
  %6 = icmp eq %"class.rx::AllocationTrackerNULL"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  tail call void @_ZN2rx21AllocationTrackerNULLD1Ev(%"class.rx::AllocationTrackerNULL"* nonnull %5) #10
  %8 = bitcast %"class.rx::AllocationTrackerNULL"* %5 to i8*
  tail call void @_ZdlPv(i8* %8) #11
  br label %9

9:                                                ; preds = %1, %7
  %10 = bitcast %"class.std::__1::unique_ptr.70"* %2 to %"class.rx::DisplayImpl"*
  tail call void @_ZN2rx11DisplayImplD2Ev(%"class.rx::DisplayImpl"* %10) #10
  %11 = bitcast %"class.std::__1::unique_ptr.70"* %2 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11DisplayNULL10initializeEPN3egl7DisplayE(%"class.egl::Error"* noalias nocapture sret, %"class.rx::DisplayNULL"* nocapture, %"class.egl::Display"* nocapture readnone) unnamed_addr #1 align 2 {
  %4 = tail call i8* @_Znwm(i64 16) #11
  %5 = bitcast i8* %4 to %"class.rx::AllocationTrackerNULL"*
  tail call void @_ZN2rx21AllocationTrackerNULLC1Em(%"class.rx::AllocationTrackerNULL"* nonnull %5, i64 268435456) #10
  %6 = getelementptr inbounds %"class.rx::DisplayNULL", %"class.rx::DisplayNULL"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.rx::AllocationTrackerNULL"*, %"class.rx::AllocationTrackerNULL"** %6, align 8
  %8 = bitcast %"class.rx::AllocationTrackerNULL"** %6 to i8**
  store i8* %4, i8** %8, align 8
  %9 = icmp eq %"class.rx::AllocationTrackerNULL"* %7, null
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  tail call void @_ZN2rx21AllocationTrackerNULLD1Ev(%"class.rx::AllocationTrackerNULL"* nonnull %7) #10
  %11 = bitcast %"class.rx::AllocationTrackerNULL"* %7 to i8*
  tail call void @_ZdlPv(i8* %11) #11
  br label %12

12:                                               ; preds = %3, %10
  %13 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %13, align 8, !alias.scope !2
  %14 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %14, align 4, !alias.scope !2
  %15 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %16 = bitcast %"class.std::__1::unique_ptr.142"* %15 to i64*
  store i64 0, i64* %16, align 8, !alias.scope !2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN2rx21AllocationTrackerNULLC1Em(%"class.rx::AllocationTrackerNULL"*, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11DisplayNULL9terminateEv(%"class.rx::DisplayNULL"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.rx::DisplayNULL", %"class.rx::DisplayNULL"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.rx::AllocationTrackerNULL"*, %"class.rx::AllocationTrackerNULL"** %2, align 8
  store %"class.rx::AllocationTrackerNULL"* null, %"class.rx::AllocationTrackerNULL"** %2, align 8
  %4 = icmp eq %"class.rx::AllocationTrackerNULL"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN2rx21AllocationTrackerNULLD1Ev(%"class.rx::AllocationTrackerNULL"* nonnull %3) #10
  %6 = bitcast %"class.rx::AllocationTrackerNULL"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11DisplayNULL11makeCurrentEPN3egl7DisplayEPNS1_7SurfaceES5_PN2gl7ContextE(%"class.egl::Error"* noalias nocapture sret, %"class.rx::DisplayNULL"* nocapture readnone, %"class.egl::Display"*, %"class.egl::Surface"* nocapture readnone, %"class.egl::Surface"* nocapture readnone, %"class.gl::Context"* nocapture readnone) unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.egl::Display", %"class.egl::Display"* %2, i64 0, i32 21, i32 0
  tail call void @_ZN2gl26InitializeDebugAnnotationsEPNS_14DebugAnnotatorE(%"class.gl::DebugAnnotator"* %7) #10
  %8 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %8, align 8, !alias.scope !7
  %9 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %9, align 4, !alias.scope !7
  %10 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::unique_ptr.142"* %10 to i64*
  store i64 0, i64* %11, align 8, !alias.scope !7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11DisplayNULL15generateConfigsEv(%"class.egl::ConfigSet"* noalias sret, %"class.rx::DisplayNULL"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = alloca %"struct.egl::Config", align 16
  %4 = bitcast %"struct.egl::Config"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 164, i8* nonnull %4) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 164, i1 false)
  call void @_ZN3egl6ConfigC1Ev(%"struct.egl::Config"* nonnull %3) #10
  %5 = bitcast %"struct.egl::Config"* %3 to <4 x i32>*
  store <4 x i32> <i32 32856, i32 35056, i32 32, i32 8>, <4 x i32>* %5, align 16
  %6 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 4
  store i32 8, i32* %6, align 16
  %7 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 5
  store i32 8, i32* %7, align 4
  %8 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 7
  %9 = bitcast i32* %8 to <4 x i32>*
  store <4 x i32> <i32 8, i32 0, i32 1, i32 1>, <4 x i32>* %9, align 4
  %10 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 12
  store i32 12430, i32* %10, align 16
  %11 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 13
  store i32 12344, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 15
  %13 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> <i32 68, i32 24, i32 0, i32 12344>, <4 x i32>* %13, align 4
  %14 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 19
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 0, i32 0, i32 0, i32 1>, <4 x i32>* %15, align 4
  %16 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 23
  %17 = bitcast i32* %16 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 0, i32 12344>, <4 x i32>* %17, align 4
  %18 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 27
  %19 = bitcast i32* %18 to <4 x i32>*
  store <4 x i32> <i32 68, i32 0, i32 0, i32 8>, <4 x i32>* %19, align 4
  %20 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 31
  store i32 5, i32* %20, align 4
  %21 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 36
  store i32 0, i32* %21, align 16
  %22 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 32
  store i32 12344, i32* %22, align 16
  %23 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 33
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 34
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.egl::Config", %"struct.egl::Config"* %3, i64 0, i32 35
  store i32 0, i32* %25, align 4
  %26 = bitcast %"class.egl::ConfigSet"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 -86, i64 24, i1 false)
  call void @_ZN3egl9ConfigSetC1Ev(%"class.egl::ConfigSet"* %0) #10
  %27 = call i32 @_ZN3egl9ConfigSet3addERKNS_6ConfigE(%"class.egl::ConfigSet"* %0, %"struct.egl::Config"* nonnull dereferenceable(164) %3) #10
  call void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 164, i8* nonnull %4) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN3egl6ConfigC1Ev(%"struct.egl::Config"*) unnamed_addr #2

declare void @_ZN3egl9ConfigSetC1Ev(%"class.egl::ConfigSet"*) unnamed_addr #2

declare i32 @_ZN3egl9ConfigSet3addERKNS_6ConfigE(%"class.egl::ConfigSet"*, %"struct.egl::Config"* dereferenceable(164)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3egl6ConfigD1Ev(%"struct.egl::Config"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2rx11DisplayNULL14testDeviceLostEv(%"class.rx::DisplayNULL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i1 false
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx11DisplayNULL17restoreLostDeviceEPKN3egl7DisplayE(%"class.egl::Error"* noalias nocapture sret, %"class.rx::DisplayNULL"* nocapture readnone, %"class.egl::Display"* nocapture readnone) unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %4, align 8, !alias.scope !12
  %5 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 4, !alias.scope !12
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr.142"* %6 to i64*
  store i64 0, i64* %7, align 8, !alias.scope !12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK2rx11DisplayNULL19isValidNativeWindowEl(%"class.rx::DisplayNULL"* nocapture readnone, i64) unnamed_addr #7 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11DisplayNULL22getRendererDescriptionEv(%"class.std::__1::basic_string"* noalias sret, %"class.rx::DisplayNULL"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 4, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1280070990, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11DisplayNULL15getVendorStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.rx::DisplayNULL"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 4, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1280070990, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx11DisplayNULL16getVersionStringEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.rx::DisplayNULL"* nocapture readnone) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::DeviceImpl"* @_ZN2rx11DisplayNULL12createDeviceEv(%"class.rx::DisplayNULL"* nocapture readnone) unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #11
  %3 = bitcast i8* %2 to %"class.rx::DeviceNULL"*
  tail call void @_ZN2rx10DeviceNULLC1Ev(%"class.rx::DeviceNULL"* nonnull %3) #10
  %4 = bitcast i8* %2 to %"class.rx::DeviceImpl"*
  ret %"class.rx::DeviceImpl"* %4
}

declare void @_ZN2rx10DeviceNULLC1Ev(%"class.rx::DeviceNULL"*) unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx11DisplayNULL10waitClientEPKN2gl7ContextE(%"class.egl::Error"* noalias nocapture sret, %"class.rx::DisplayNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone) unnamed_addr #8 align 2 {
  %4 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %4, align 8, !alias.scope !17
  %5 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 4, !alias.scope !17
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %7 = bitcast %"class.std::__1::unique_ptr.142"* %6 to i64*
  store i64 0, i64* %7, align 8, !alias.scope !17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx11DisplayNULL10waitNativeEPKN2gl7ContextEi(%"class.egl::Error"* noalias nocapture sret, %"class.rx::DisplayNULL"* nocapture readnone, %"class.gl::Context"* nocapture readnone, i32) unnamed_addr #8 align 2 {
  %5 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 0
  store i32 12288, i32* %5, align 8, !alias.scope !22
  %6 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 1
  store i32 0, i32* %6, align 4, !alias.scope !22
  %7 = getelementptr inbounds %"class.egl::Error", %"class.egl::Error"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::unique_ptr.142"* %7 to i64*
  store i64 0, i64* %8, align 8, !alias.scope !22
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK2rx11DisplayNULL24getMaxSupportedESVersionEv(%"class.rx::DisplayNULL"* nocapture readnone) unnamed_addr #7 align 2 {
  ret i64 8589934595
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx11DisplayNULL25getMaxConformantESVersionEv(%"class.rx::DisplayNULL"*) unnamed_addr #1 align 2 {
  %2 = bitcast %"class.rx::DisplayNULL"* %0 to i64 (%"class.rx::DisplayNULL"*)***
  %3 = load i64 (%"class.rx::DisplayNULL"*)**, i64 (%"class.rx::DisplayNULL"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.rx::DisplayNULL"*)*, i64 (%"class.rx::DisplayNULL"*)** %3, i64 30
  %5 = load i64 (%"class.rx::DisplayNULL"*)*, i64 (%"class.rx::DisplayNULL"*)** %4, align 8
  %6 = tail call i64 %5(%"class.rx::DisplayNULL"* %0) #10
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::SurfaceImpl"* @_ZN2rx11DisplayNULL19createWindowSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE(%"class.rx::DisplayNULL"* nocapture readnone, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"* nocapture readnone dereferenceable(24)) unnamed_addr #1 align 2 {
  %5 = tail call i8* @_Znwm(i64 104) #11
  %6 = bitcast i8* %5 to %"class.rx::SurfaceNULL"*
  tail call void @_ZN2rx11SurfaceNULLC1ERKN3egl12SurfaceStateE(%"class.rx::SurfaceNULL"* nonnull %6, %"struct.egl::SurfaceState"* %1) #10
  %7 = bitcast i8* %5 to %"class.rx::SurfaceImpl"*
  ret %"class.rx::SurfaceImpl"* %7
}

declare void @_ZN2rx11SurfaceNULLC1ERKN3egl12SurfaceStateE(%"class.rx::SurfaceNULL"*, %"struct.egl::SurfaceState"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::SurfaceImpl"* @_ZN2rx11DisplayNULL20createPbufferSurfaceERKN3egl12SurfaceStateERKNS1_12AttributeMapE(%"class.rx::DisplayNULL"* nocapture readnone, %"struct.egl::SurfaceState"*, %"class.egl::AttributeMap"* nocapture readnone dereferenceable(24)) unnamed_addr #1 align 2 {
  %4 = tail call i8* @_Znwm(i64 104) #11
  %5 = bitcast i8* %4 to %"class.rx::SurfaceNULL"*
  tail call void @_ZN2rx11SurfaceNULLC1ERKN3egl12SurfaceStateE(%"class.rx::SurfaceNULL"* nonnull %5, %"struct.egl::SurfaceState"* %1) #10
  %6 = bitcast i8* %4 to %"class.rx::SurfaceImpl"*
  ret %"class.rx::SurfaceImpl"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::SurfaceImpl"* @_ZN2rx11DisplayNULL29createPbufferFromClientBufferERKN3egl12SurfaceStateEjPvRKNS1_12AttributeMapE(%"class.rx::DisplayNULL"* nocapture readnone, %"struct.egl::SurfaceState"*, i32, i8* nocapture readnone, %"class.egl::AttributeMap"* nocapture readnone dereferenceable(24)) unnamed_addr #1 align 2 {
  %6 = tail call i8* @_Znwm(i64 104) #11
  %7 = bitcast i8* %6 to %"class.rx::SurfaceNULL"*
  tail call void @_ZN2rx11SurfaceNULLC1ERKN3egl12SurfaceStateE(%"class.rx::SurfaceNULL"* nonnull %7, %"struct.egl::SurfaceState"* %1) #10
  %8 = bitcast i8* %6 to %"class.rx::SurfaceImpl"*
  ret %"class.rx::SurfaceImpl"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::SurfaceImpl"* @_ZN2rx11DisplayNULL19createPixmapSurfaceERKN3egl12SurfaceStateElRKNS1_12AttributeMapE(%"class.rx::DisplayNULL"* nocapture readnone, %"struct.egl::SurfaceState"*, i64, %"class.egl::AttributeMap"* nocapture readnone dereferenceable(24)) unnamed_addr #1 align 2 {
  %5 = tail call i8* @_Znwm(i64 104) #11
  %6 = bitcast i8* %5 to %"class.rx::SurfaceNULL"*
  tail call void @_ZN2rx11SurfaceNULLC1ERKN3egl12SurfaceStateE(%"class.rx::SurfaceNULL"* nonnull %6, %"struct.egl::SurfaceState"* %1) #10
  %7 = bitcast i8* %5 to %"class.rx::SurfaceImpl"*
  ret %"class.rx::SurfaceImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::ImageImpl"* @_ZN2rx11DisplayNULL11createImageERKN3egl10ImageStateEPKN2gl7ContextEjRKNS1_12AttributeMapE(%"class.rx::DisplayNULL"* nocapture readnone, %"struct.egl::ImageState"* dereferenceable(104), %"class.gl::Context"* nocapture readnone, i32, %"class.egl::AttributeMap"* nocapture readnone dereferenceable(24)) unnamed_addr #1 align 2 {
  %6 = tail call i8* @_Znwm(i64 16) #11
  %7 = bitcast i8* %6 to %"class.rx::ImageNULL"*
  tail call void @_ZN2rx9ImageNULLC1ERKN3egl10ImageStateE(%"class.rx::ImageNULL"* nonnull %7, %"struct.egl::ImageState"* dereferenceable(104) %1) #10
  %8 = bitcast i8* %6 to %"class.rx::ImageImpl"*
  ret %"class.rx::ImageImpl"* %8
}

declare void @_ZN2rx9ImageNULLC1ERKN3egl10ImageStateE(%"class.rx::ImageNULL"*, %"struct.egl::ImageState"* dereferenceable(104)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::ContextImpl"* @_ZN2rx11DisplayNULL13createContextERKN2gl5StateEPNS1_8ErrorSetEPKN3egl6ConfigEPKNS1_7ContextERKNS7_12AttributeMapE(%"class.rx::DisplayNULL"* nocapture readonly, %"class.gl::State"* dereferenceable(12296), %"class.gl::ErrorSet"*, %"struct.egl::Config"* nocapture readnone, %"class.gl::Context"* nocapture readnone, %"class.egl::AttributeMap"* nocapture readnone dereferenceable(24)) unnamed_addr #1 align 2 {
  %7 = tail call i8* @_Znwm(i64 8424) #11
  %8 = bitcast i8* %7 to %"class.rx::ContextNULL"*
  %9 = getelementptr inbounds %"class.rx::DisplayNULL", %"class.rx::DisplayNULL"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.rx::AllocationTrackerNULL"*, %"class.rx::AllocationTrackerNULL"** %9, align 8
  tail call void @_ZN2rx11ContextNULLC1ERKN2gl5StateEPNS1_8ErrorSetEPNS_21AllocationTrackerNULLE(%"class.rx::ContextNULL"* nonnull %8, %"class.gl::State"* dereferenceable(12296) %1, %"class.gl::ErrorSet"* %2, %"class.rx::AllocationTrackerNULL"* %10) #10
  %11 = bitcast i8* %7 to %"class.rx::ContextImpl"*
  ret %"class.rx::ContextImpl"* %11
}

declare void @_ZN2rx11ContextNULLC1ERKN2gl5StateEPNS1_8ErrorSetEPNS_21AllocationTrackerNULLE(%"class.rx::ContextNULL"*, %"class.gl::State"* dereferenceable(12296), %"class.gl::ErrorSet"*, %"class.rx::AllocationTrackerNULL"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %"class.rx::StreamProducerImpl"* @_ZN2rx11DisplayNULL30createStreamProducerD3DTextureEN3egl6Stream12ConsumerTypeERKNS1_12AttributeMapE(%"class.rx::DisplayNULL"* nocapture readnone, i32, %"class.egl::AttributeMap"* nocapture readnone dereferenceable(24)) unnamed_addr #7 align 2 {
  ret %"class.rx::StreamProducerImpl"* null
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.rx::ShareGroupImpl"* @_ZN2rx11DisplayNULL16createShareGroupEv(%"class.rx::DisplayNULL"* nocapture readnone) unnamed_addr #9 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #11
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2rx14ShareGroupNULLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast i8* %2 to %"class.rx::ShareGroupImpl"*
  ret %"class.rx::ShareGroupImpl"* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK2rx11DisplayNULL18generateExtensionsEPN3egl17DisplayExtensionsE(%"class.rx::DisplayNULL"* nocapture readnone, %"struct.egl::DisplayExtensions"*) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 0
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 8
  %5 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 13
  %6 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 21
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 28
  store i8 1, i8* %7, align 1
  %8 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 29
  store i8 1, i8* %8, align 1
  %9 = getelementptr inbounds %"struct.egl::DisplayExtensions", %"struct.egl::DisplayExtensions"* %1, i64 0, i32 32
  %10 = bitcast i8* %4 to i32*
  store i32 16843009, i32* %10, align 1
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 1, i64 7, i1 false)
  %11 = bitcast i8* %9 to i64*
  store i64 72340172838076673, i64* %11, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZNK2rx11DisplayNULL12generateCapsEPN3egl4CapsE(%"class.rx::DisplayNULL"* nocapture readnone, %"struct.egl::Caps"* nocapture) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"struct.egl::Caps", %"struct.egl::Caps"* %1, i64 0, i32 0
  store i8 1, i8* %3, align 1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.rx::EGLSyncImpl"* @_ZN2rx14EGLImplFactory10createSyncERKN3egl12AttributeMapE(%"class.rx::EGLImplFactory"*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret %"class.rx::EGLSyncImpl"* null
}

declare void @_ZN2rx11DisplayImpl14prepareForCallEv(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*) unnamed_addr #2

declare void @_ZN2rx11DisplayImpl13releaseThreadEv(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*) unnamed_addr #2

declare void @_ZNK2rx11DisplayImpl20validateClientBufferEPKN3egl6ConfigEjPvRKNS1_12AttributeMapE(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i32, i8*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare void @_ZNK2rx11DisplayImpl25validateImageClientBufferEPKN2gl7ContextEjPvRKN3egl12AttributeMapE(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*, %"class.gl::Context"*, i32, i8*, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

declare void @_ZNK2rx11DisplayImpl14validatePixmapEPKN3egl6ConfigElRKNS1_12AttributeMapE(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*, %"struct.egl::Config"*, i64, %"class.egl::AttributeMap"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx11DisplayImpl17setBlobCacheFuncsEPFvPKvlS2_lEPFlS2_lPvlE(%"class.rx::DisplayImpl"*, void (i8*, i64, i8*, i64)*, i64 (i8*, i64, i8*, i64)*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK2rx11DisplayImpl26initializeFrontendFeaturesEPN5angle16FrontendFeaturesE(%"class.rx::DisplayImpl"*, %"struct.angle::FrontendFeatures"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx11DisplayNULL19populateFeatureListEPNSt3__16vectorIPKN5angle7FeatureENS1_9allocatorIS6_EEEE(%"class.rx::DisplayNULL"*, %"class.std::__1::vector.128"*) unnamed_addr #1 comdat align 2 {
  ret void
}

declare void @_ZN2rx11DisplayImpl15handleGPUSwitchEv(%"class.egl::Error"* sret, %"class.rx::DisplayImpl"*) unnamed_addr #2

declare void @_ZN2gl26InitializeDebugAnnotationsEPNS_14DebugAnnotatorE(%"class.gl::DebugAnnotator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx14ShareGroupImplD2Ev(%"class.rx::ShareGroupImpl"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx14ShareGroupNULLD0Ev(%"class.rx::ShareGroupNULL"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.rx::ShareGroupNULL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx14ShareGroupImpl9onDestroyEPKN3egl7DisplayE(%"class.rx::ShareGroupImpl"*, %"class.egl::Display"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx21AllocationTrackerNULLD1Ev(%"class.rx::AllocationTrackerNULL"*) unnamed_addr #3

attributes #0 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!4 = distinct !{!4, !"_ZN3egl5Error7NoErrorEv"}
!5 = distinct !{!5, !6, !"_ZN3egl7NoErrorEv: argument 0"}
!6 = distinct !{!6, !"_ZN3egl7NoErrorEv"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!9 = distinct !{!9, !"_ZN3egl5Error7NoErrorEv"}
!10 = distinct !{!10, !11, !"_ZN3egl7NoErrorEv: argument 0"}
!11 = distinct !{!11, !"_ZN3egl7NoErrorEv"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!14 = distinct !{!14, !"_ZN3egl5Error7NoErrorEv"}
!15 = distinct !{!15, !16, !"_ZN3egl7NoErrorEv: argument 0"}
!16 = distinct !{!16, !"_ZN3egl7NoErrorEv"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!19 = distinct !{!19, !"_ZN3egl5Error7NoErrorEv"}
!20 = distinct !{!20, !21, !"_ZN3egl7NoErrorEv: argument 0"}
!21 = distinct !{!21, !"_ZN3egl7NoErrorEv"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN3egl5Error7NoErrorEv: argument 0"}
!24 = distinct !{!24, !"_ZN3egl5Error7NoErrorEv"}
!25 = distinct !{!25, !26, !"_ZN3egl7NoErrorEv: argument 0"}
!26 = distinct !{!26, !"_ZN3egl7NoErrorEv"}
