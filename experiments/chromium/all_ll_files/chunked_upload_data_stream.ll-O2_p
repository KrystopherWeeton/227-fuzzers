; ModuleID = '../../net/base/chunked_upload_data_stream.cc'
source_filename = "../../net/base/chunked_upload_data_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::ChunkedUploadDataStream::Writer" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.net::ChunkedUploadDataStream" = type { %"class.net::UploadDataStream", i64, i64, i8, %"class.std::__1::vector.16", %class.scoped_refptr.33, i32, %"class.base::WeakPtrFactory" }
%"class.net::UploadDataStream" = type { i32 (...)**, i64, i64, i64, i8, i8, i8, %"class.base::OnceCallback", %"class.net::NetLogWithSource" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.7", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.9" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.11" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::vector.20"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { i8*, i8*, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { i8* }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::unique_ptr"* }
%class.scoped_refptr.33 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.34", i8* }
%"class.base::RefCountedThreadSafe.34" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.35 }
%class.scoped_refptr.35 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector.42" = type opaque
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorINS_10unique_ptrINS0_IcNS_9allocatorIcEEEENS_14default_deleteIS4_EEEENS2_IS7_EEE21__push_back_slow_pathIS7_EEvOT_ = comdat any

@_ZTVN3net23ChunkedUploadDataStreamE = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::ChunkedUploadDataStream"*)* @_ZN3net23ChunkedUploadDataStreamD2Ev to i8*), i8* bitcast (void (%"class.net::ChunkedUploadDataStream"*)* @_ZN3net23ChunkedUploadDataStreamD0Ev to i8*), i8* bitcast (i1 (%"class.net::UploadDataStream"*)* @_ZNK3net16UploadDataStream10IsInMemoryEv to i8*), i8* bitcast (%"class.std::__1::vector.42"* (%"class.net::UploadDataStream"*)* @_ZNK3net16UploadDataStream17GetElementReadersEv to i8*), i8* bitcast ({ i64, i64 } (%"class.net::UploadDataStream"*)* @_ZNK3net16UploadDataStream17GetUploadProgressEv to i8*), i8* bitcast (i1 (%"class.net::UploadDataStream"*)* @_ZNK3net16UploadDataStream10AllowHTTP1Ev to i8*), i8* bitcast (i32 (%"class.net::ChunkedUploadDataStream"*, %"class.net::NetLogWithSource"*)* @_ZN3net23ChunkedUploadDataStream12InitInternalERKNS_16NetLogWithSourceE to i8*), i8* bitcast (i32 (%"class.net::ChunkedUploadDataStream"*, %"class.net::IOBuffer"*, i32)* @_ZN3net23ChunkedUploadDataStream12ReadInternalEPNS_8IOBufferEi to i8*), i8* bitcast (void (%"class.net::ChunkedUploadDataStream"*)* @_ZN3net23ChunkedUploadDataStream13ResetInternalEv to i8*)] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3net23ChunkedUploadDataStream6WriterD1Ev = hidden unnamed_addr alias void (%"class.net::ChunkedUploadDataStream::Writer"*), void (%"class.net::ChunkedUploadDataStream::Writer"*)* @_ZN3net23ChunkedUploadDataStream6WriterD2Ev
@_ZN3net23ChunkedUploadDataStream6WriterC1EN4base7WeakPtrIS0_EE = hidden unnamed_addr alias void (%"class.net::ChunkedUploadDataStream::Writer"*, %"class.base::WeakPtr"*), void (%"class.net::ChunkedUploadDataStream::Writer"*, %"class.base::WeakPtr"*)* @_ZN3net23ChunkedUploadDataStream6WriterC2EN4base7WeakPtrIS0_EE
@_ZN3net23ChunkedUploadDataStreamC1El = hidden unnamed_addr alias void (%"class.net::ChunkedUploadDataStream"*, i64), void (%"class.net::ChunkedUploadDataStream"*, i64)* @_ZN3net23ChunkedUploadDataStreamC2El
@_ZN3net23ChunkedUploadDataStreamD1Ev = hidden unnamed_addr alias void (%"class.net::ChunkedUploadDataStream"*), void (%"class.net::ChunkedUploadDataStream"*)* @_ZN3net23ChunkedUploadDataStreamD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23ChunkedUploadDataStream6WriterD2Ev(%"class.net::ChunkedUploadDataStream::Writer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ChunkedUploadDataStream::Writer", %"class.net::ChunkedUploadDataStream::Writer"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %2) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net23ChunkedUploadDataStream6Writer10AppendDataEPKcib(%"class.net::ChunkedUploadDataStream::Writer"*, i8*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.net::ChunkedUploadDataStream::Writer", %"class.net::ChunkedUploadDataStream::Writer"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #10
  br i1 %7, label %8, label %24

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.net::ChunkedUploadDataStream::Writer", %"class.net::ChunkedUploadDataStream::Writer"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast i64* %9 to %"class.net::ChunkedUploadDataStream"**
  %11 = load %"class.net::ChunkedUploadDataStream"*, %"class.net::ChunkedUploadDataStream"** %10, align 8
  %12 = icmp eq %"class.net::ChunkedUploadDataStream"* %11, null
  br i1 %12, label %24, label %13

13:                                               ; preds = %8
  %14 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #10
  br i1 %14, label %18, label %15

15:                                               ; preds = %13
  %16 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0)) #10
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %18

18:                                               ; preds = %15, %13
  %19 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %6) #10
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = load %"class.net::ChunkedUploadDataStream"*, %"class.net::ChunkedUploadDataStream"** %10, align 8
  br label %22

22:                                               ; preds = %18, %20
  %23 = phi %"class.net::ChunkedUploadDataStream"* [ %21, %20 ], [ null, %18 ]
  call void @_ZN3net23ChunkedUploadDataStream10AppendDataEPKcib(%"class.net::ChunkedUploadDataStream"* %23, i8* %1, i32 %2, i1 zeroext %3)
  br label %24

24:                                               ; preds = %8, %4, %22
  %25 = phi i1 [ true, %22 ], [ false, %8 ], [ false, %4 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23ChunkedUploadDataStream10AppendDataEPKcib(%"class.net::ChunkedUploadDataStream"*, i8*, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = zext i1 %3 to i8
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %49

8:                                                ; preds = %4
  %9 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #10
  %10 = sext i32 %2 to i64
  %11 = tail call i8* @_Znwm(i64 24) #11
  %12 = tail call i8* @_Znwm(i64 %10) #11
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %11 to i8**
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %12, i64 %10
  %16 = getelementptr inbounds i8, i8* %11, i64 16
  %17 = bitcast i8* %16 to i8**
  store i8* %15, i8** %17, align 8
  %18 = bitcast i8* %13 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %12, i8* align 1 %1, i64 %10, i1 false) #10
  %19 = ptrtoint i8* %15 to i64
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %11, i8** %21, align 8
  %22 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 4, i32 0, i32 1
  %23 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %22, align 8
  %24 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %25 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %24, align 8
  %26 = icmp ult %"class.std::__1::unique_ptr"* %23, %25
  br i1 %26, label %27, label %33

27:                                               ; preds = %8
  %28 = ptrtoint i8* %11 to i64
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %20, align 8
  %29 = bitcast %"class.std::__1::unique_ptr"* %23 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 1
  %31 = ptrtoint %"class.std::__1::unique_ptr"* %30 to i64
  %32 = bitcast %"class.std::__1::unique_ptr"** %22 to i64*
  store i64 %31, i64* %32, align 8
  br label %35

33:                                               ; preds = %8
  %34 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 4
  call void @_ZNSt3__16vectorINS_10unique_ptrINS0_IcNS_9allocatorIcEEEENS_14default_deleteIS4_EEEENS2_IS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.16"* %34, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5) #10
  br label %35

35:                                               ; preds = %27, %33
  %36 = load %"class.std::__1::vector.20"*, %"class.std::__1::vector.20"** %20, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %20, align 8
  %37 = icmp eq %"class.std::__1::vector.20"* %36, null
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %36, i64 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = icmp eq i8* %40, null
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = ptrtoint i8* %40 to i64
  %44 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %36, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %43, i64* %45, align 8
  call void @_ZdlPv(i8* nonnull %40) #11
  br label %46

46:                                               ; preds = %42, %38
  %47 = bitcast %"class.std::__1::vector.20"* %36 to i8*
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %35, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #10
  br label %49

49:                                               ; preds = %48, %4
  %50 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 3
  store i8 %6, i8* %50, align 8
  %51 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 5
  %52 = getelementptr inbounds %class.scoped_refptr.33, %class.scoped_refptr.33* %51, i64 0, i32 0
  %53 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %52, align 8
  %54 = icmp eq %"class.net::IOBuffer"* %53, null
  br i1 %54, label %76, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 6
  %57 = load i32, i32* %56, align 8
  %58 = call i32 @_ZN3net23ChunkedUploadDataStream9ReadChunkEPNS_8IOBufferEi(%"class.net::ChunkedUploadDataStream"* %0, %"class.net::IOBuffer"* nonnull %53, i32 %57)
  %59 = bitcast %class.scoped_refptr.33* %51 to i64*
  %60 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %52, align 8
  store i64 0, i64* %59, align 8
  %61 = icmp eq %"class.net::IOBuffer"* %60, null
  br i1 %61, label %74, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %60, i64 0, i32 1
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %74

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %63, i64 -2
  %69 = bitcast %"class.base::RefCountedThreadSafe.34"* %68 to %"class.net::IOBuffer"*
  %70 = bitcast %"class.base::RefCountedThreadSafe.34"* %68 to void (%"class.net::IOBuffer"*)***
  %71 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %71, i64 1
  %73 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %72, align 8
  call void %73(%"class.net::IOBuffer"* nonnull %69) #10
  br label %74

74:                                               ; preds = %55, %62, %67
  store i32 0, i32* %56, align 8
  %75 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 0
  call void @_ZN3net16UploadDataStream15OnReadCompletedEi(%"class.net::UploadDataStream"* %75, i32 %58) #10
  br label %76

76:                                               ; preds = %49, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23ChunkedUploadDataStream6WriterC2EN4base7WeakPtrIS0_EE(%"class.net::ChunkedUploadDataStream::Writer"*, %"class.base::WeakPtr"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ChunkedUploadDataStream::Writer", %"class.net::ChunkedUploadDataStream::Writer"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %3, %"class.base::internal::WeakReference"* dereferenceable(8) %4) #10
  %5 = getelementptr inbounds %"class.net::ChunkedUploadDataStream::Writer", %"class.net::ChunkedUploadDataStream::Writer"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %1, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %5, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23ChunkedUploadDataStreamC2El(%"class.net::ChunkedUploadDataStream"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 0
  tail call void @_ZN3net16UploadDataStreamC2Ebl(%"class.net::UploadDataStream"* %3, i1 zeroext true, i64 %1) #10
  %4 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3net23ChunkedUploadDataStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 7, i32 0
  %8 = ptrtoint %"class.net::ChunkedUploadDataStream"* %0 to i64
  %9 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 17, i1 false)
  %10 = bitcast %"class.std::__1::vector.16"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 36, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %7, i64 %8) #10
  ret void
}

declare void @_ZN3net16UploadDataStreamC2Ebl(%"class.net::UploadDataStream"*, i1 zeroext, i64) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23ChunkedUploadDataStreamD2Ev(%"class.net::ChunkedUploadDataStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN3net23ChunkedUploadDataStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 7, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #10
  %4 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 5, i32 0
  %5 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %4, align 8
  %6 = icmp eq %"class.net::IOBuffer"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.34"* %13 to %"class.net::IOBuffer"*
  %15 = bitcast %"class.base::RefCountedThreadSafe.34"* %13 to void (%"class.net::IOBuffer"*)***
  %16 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %16, i64 1
  %18 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %17, align 8
  tail call void %18(%"class.net::IOBuffer"* nonnull %14) #10
  br label %19

19:                                               ; preds = %1, %7, %12
  %20 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %21, align 8
  %23 = icmp eq %"class.std::__1::unique_ptr"* %22, null
  br i1 %23, label %52, label %24

24:                                               ; preds = %19
  %25 = bitcast %"class.std::__1::unique_ptr"* %22 to i8*
  %26 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 4, i32 0, i32 1
  %27 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %26, align 8
  %28 = icmp eq %"class.std::__1::unique_ptr"* %27, %22
  br i1 %28, label %50, label %29

29:                                               ; preds = %24, %45
  %30 = phi %"class.std::__1::unique_ptr"* [ %31, %45 ], [ %27, %24 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 -1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.std::__1::vector.20"*, %"class.std::__1::vector.20"** %32, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %32, align 8
  %34 = icmp eq %"class.std::__1::vector.20"* %33, null
  br i1 %34, label %45, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %33, i64 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = ptrtoint i8* %37 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %33, i64 0, i32 0, i32 1
  %42 = bitcast i8** %41 to i64*
  store i64 %40, i64* %42, align 8
  tail call void @_ZdlPv(i8* nonnull %37) #11
  br label %43

43:                                               ; preds = %39, %35
  %44 = bitcast %"class.std::__1::vector.20"* %33 to i8*
  tail call void @_ZdlPv(i8* %44) #11
  br label %45

45:                                               ; preds = %43, %29
  %46 = icmp eq %"class.std::__1::unique_ptr"* %31, %22
  br i1 %46, label %47, label %29

47:                                               ; preds = %45
  %48 = bitcast %"class.std::__1::vector.16"* %20 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %24
  %51 = phi i8* [ %49, %47 ], [ %25, %24 ]
  store %"class.std::__1::unique_ptr"* %22, %"class.std::__1::unique_ptr"** %26, align 8
  tail call void @_ZdlPv(i8* %51) #11
  br label %52

52:                                               ; preds = %19, %50
  %53 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 0
  tail call void @_ZN3net16UploadDataStreamD2Ev(%"class.net::UploadDataStream"* %53) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net16UploadDataStreamD2Ev(%"class.net::UploadDataStream"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23ChunkedUploadDataStreamD0Ev(%"class.net::ChunkedUploadDataStream"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3net23ChunkedUploadDataStreamD2Ev(%"class.net::ChunkedUploadDataStream"* %0) #10
  %2 = bitcast %"class.net::ChunkedUploadDataStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.net::ChunkedUploadDataStream::Writer"* @_ZN3net23ChunkedUploadDataStream12CreateWriterEv(%"class.net::ChunkedUploadDataStream"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::internal::WeakReference", align 8
  %3 = alloca %"class.base::WeakPtr", align 8
  %4 = tail call i8* @_Znwm(i64 16) #11
  %5 = bitcast i8* %4 to %"class.net::ChunkedUploadDataStream::Writer"*
  %6 = bitcast %"class.base::internal::WeakReference"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10, !noalias !2
  %7 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 7, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %2, %"class.base::internal::WeakReferenceOwner"* %7) #10, !noalias !2
  %8 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 7, i32 0, i32 1
  %9 = load i64, i64* %8, align 8, !noalias !2
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %10, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %2, i64 %9) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10, !noalias !2
  %11 = bitcast i8* %4 to %"class.base::internal::WeakReference"*
  %12 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* nonnull %11, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %12) #10
  %13 = getelementptr inbounds i8, i8* %4, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %3, i64 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %14, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %10) #10
  ret %"class.net::ChunkedUploadDataStream::Writer"* %5
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net23ChunkedUploadDataStream9ReadChunkEPNS_8IOBufferEi(%"class.net::ChunkedUploadDataStream"*, %"class.net::IOBuffer"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.16"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %5, %13
  %15 = icmp sgt i32 %2, 0
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %68

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 2
  %20 = load i64, i64* %18, align 8
  br label %21

21:                                               ; preds = %17, %56
  %22 = phi i64 [ %20, %17 ], [ %58, %56 ]
  %23 = phi i64 [ %11, %17 ], [ %60, %56 ]
  %24 = phi i64 [ %5, %17 ], [ %57, %56 ]
  %25 = phi i32 [ 0, %17 ], [ %46, %56 ]
  %26 = inttoptr i64 %23 to %"class.std::__1::unique_ptr"*
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 %24, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::vector.20"*, %"class.std::__1::vector.20"** %27, align 8
  %29 = sub nsw i32 %2, %25
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %28, i64 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.std::__1::vector.20"* %28 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = sub i64 %33, %35
  %37 = sub i64 %36, %22
  %38 = icmp ult i64 %37, %30
  %39 = select i1 %38, i64 %37, i64 %30
  %40 = load i8*, i8** %19, align 8
  %41 = sext i32 %25 to i64
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = inttoptr i64 %35 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 %22
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %44, i64 %39, i1 false)
  %45 = trunc i64 %39 to i32
  %46 = add i32 %25, %45
  %47 = load i64, i64* %18, align 8
  %48 = add i64 %47, %39
  store i64 %48, i64* %18, align 8
  %49 = load i64, i64* %32, align 8
  %50 = load i64, i64* %34, align 8
  %51 = sub i64 %49, %50
  %52 = icmp eq i64 %48, %51
  %53 = load i64, i64* %4, align 8
  br i1 %52, label %54, label %56

54:                                               ; preds = %21
  %55 = add i64 %53, 1
  store i64 %55, i64* %4, align 8
  store i64 0, i64* %18, align 8
  br label %56

56:                                               ; preds = %21, %54
  %57 = phi i64 [ %55, %54 ], [ %53, %21 ]
  %58 = phi i64 [ 0, %54 ], [ %48, %21 ]
  %59 = load i64, i64* %8, align 8
  %60 = load i64, i64* %10, align 8
  %61 = sub i64 %59, %60
  %62 = ashr exact i64 %61, 3
  %63 = icmp ult i64 %57, %62
  %64 = icmp slt i32 %46, %2
  %65 = and i1 %64, %63
  br i1 %65, label %21, label %66

66:                                               ; preds = %56
  %67 = icmp eq i32 %46, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %3, %66
  %69 = phi i64 [ %62, %66 ], [ %13, %3 ]
  %70 = phi i64 [ %57, %66 ], [ %5, %3 ]
  %71 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 3
  %72 = load i8, i8* %71, align 8, !range !5
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %85, label %74

74:                                               ; preds = %68, %66
  %75 = phi i64 [ %69, %68 ], [ %62, %66 ]
  %76 = phi i64 [ %70, %68 ], [ %57, %66 ]
  %77 = phi i32 [ 0, %68 ], [ %46, %66 ]
  %78 = icmp eq i64 %76, %75
  br i1 %78, label %79, label %85

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 3
  %81 = load i8, i8* %80, align 8, !range !5
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 0
  tail call void @_ZN3net16UploadDataStream15SetIsFinalChunkEv(%"class.net::UploadDataStream"* %84) #10
  br label %85

85:                                               ; preds = %74, %83, %79, %68
  %86 = phi i32 [ -1, %68 ], [ %77, %79 ], [ %77, %83 ], [ %77, %74 ]
  ret i32 %86
}

declare void @_ZN3net16UploadDataStream15OnReadCompletedEi(%"class.net::UploadDataStream"*, i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3net23ChunkedUploadDataStream12InitInternalERKNS_16NetLogWithSourceE(%"class.net::ChunkedUploadDataStream"* nocapture readnone, %"class.net::NetLogWithSource"* nocapture readnone dereferenceable(24)) unnamed_addr #6 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net23ChunkedUploadDataStream12ReadInternalEPNS_8IOBufferEi(%"class.net::ChunkedUploadDataStream"*, %"class.net::IOBuffer"*, i32) unnamed_addr #0 align 2 {
  %4 = tail call i32 @_ZN3net23ChunkedUploadDataStream9ReadChunkEPNS_8IOBufferEi(%"class.net::ChunkedUploadDataStream"* %0, %"class.net::IOBuffer"* %1, i32 %2)
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %6, label %32

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 5
  %8 = icmp eq %"class.net::IOBuffer"* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 1 monotonic
  br label %12

12:                                               ; preds = %9, %6
  %13 = ptrtoint %"class.net::IOBuffer"* %1 to i64
  %14 = bitcast %class.scoped_refptr.33* %7 to i64*
  %15 = getelementptr inbounds %class.scoped_refptr.33, %class.scoped_refptr.33* %7, i64 0, i32 0
  %16 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %15, align 8
  store i64 %13, i64* %14, align 8
  %17 = icmp eq %"class.net::IOBuffer"* %16, null
  br i1 %17, label %30, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %16, i64 0, i32 1
  %20 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 acq_rel
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %30

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %19, i64 -2
  %25 = bitcast %"class.base::RefCountedThreadSafe.34"* %24 to %"class.net::IOBuffer"*
  %26 = bitcast %"class.base::RefCountedThreadSafe.34"* %24 to void (%"class.net::IOBuffer"*)***
  %27 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %27, i64 1
  %29 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %28, align 8
  tail call void %29(%"class.net::IOBuffer"* nonnull %25) #10
  br label %30

30:                                               ; preds = %12, %18, %23
  %31 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 6
  store i32 %2, i32* %31, align 8
  br label %32

32:                                               ; preds = %30, %3
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net23ChunkedUploadDataStream13ResetInternalEv(%"class.net::ChunkedUploadDataStream"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 5
  %3 = bitcast %class.scoped_refptr.33* %2 to i64*
  %4 = getelementptr inbounds %class.scoped_refptr.33, %class.scoped_refptr.33* %2, i64 0, i32 0
  %5 = load %"class.net::IOBuffer"*, %"class.net::IOBuffer"** %4, align 8
  store i64 0, i64* %3, align 8
  %6 = icmp eq %"class.net::IOBuffer"* %5, null
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %19

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.34", %"class.base::RefCountedThreadSafe.34"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.34"* %13 to %"class.net::IOBuffer"*
  %15 = bitcast %"class.base::RefCountedThreadSafe.34"* %13 to void (%"class.net::IOBuffer"*)***
  %16 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %16, i64 1
  %18 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %17, align 8
  tail call void %18(%"class.net::IOBuffer"* nonnull %14) #10
  br label %19

19:                                               ; preds = %1, %7, %12
  %20 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 6
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"class.net::ChunkedUploadDataStream", %"class.net::ChunkedUploadDataStream"* %0, i64 0, i32 1
  %22 = bitcast i64* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare void @_ZN3net16UploadDataStream15SetIsFinalChunkEv(%"class.net::UploadDataStream"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK3net16UploadDataStream10IsInMemoryEv(%"class.net::UploadDataStream"*) unnamed_addr #2

declare %"class.std::__1::vector.42"* @_ZNK3net16UploadDataStream17GetElementReadersEv(%"class.net::UploadDataStream"*) unnamed_addr #2

declare { i64, i64 } @_ZNK3net16UploadDataStream17GetUploadProgressEv(%"class.net::UploadDataStream"*) unnamed_addr #2

declare zeroext i1 @_ZNK3net16UploadDataStream10AllowHTTP1Ev(%"class.net::UploadDataStream"*) unnamed_addr #2

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #2

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #2

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #1

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrINS0_IcNS_9allocatorIcEEEENS_14default_deleteIS4_EEEENS2_IS7_EEE21__push_back_slow_pathIS7_EEvOT_(%"class.std::__1::vector.16"*, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.16"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.16"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #12
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.16", %"class.std::__1::vector.16"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.std::__1::vector.20"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !6

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr"*
  %138 = icmp eq %"class.std::__1::unique_ptr"* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %"class.std::__1::unique_ptr"* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.std::__1::vector.20"*, %"class.std::__1::vector.20"** %142, align 8
  store %"class.std::__1::vector.20"* null, %"class.std::__1::vector.20"** %142, align 8
  %144 = icmp eq %"class.std::__1::vector.20"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %143, i64 0, i32 0, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = icmp eq i8* %147, null
  br i1 %148, label %153, label %149

149:                                              ; preds = %145
  %150 = ptrtoint i8* %147 to i64
  %151 = getelementptr inbounds %"class.std::__1::vector.20", %"class.std::__1::vector.20"* %143, i64 0, i32 0, i32 1
  %152 = bitcast i8** %151 to i64*
  store i64 %150, i64* %152, align 8
  tail call void @_ZdlPv(i8* nonnull %147) #11
  br label %153

153:                                              ; preds = %149, %145
  %154 = bitcast %"class.std::__1::vector.20"* %143 to i8*
  tail call void @_ZdlPv(i8* %154) #11
  br label %155

155:                                              ; preds = %153, %139
  %156 = icmp eq %"class.std::__1::unique_ptr"* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #11
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base14WeakPtrFactoryIN3net23ChunkedUploadDataStreamEE10GetWeakPtrEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base14WeakPtrFactoryIN3net23ChunkedUploadDataStreamEE10GetWeakPtrEv"}
!5 = !{i8 0, i8 2}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
