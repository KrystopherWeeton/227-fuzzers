; ModuleID = '../../components/reporting/encryption/verification.cc'
source_filename = "../../components/reporting/encryption/verification.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.reporting::SignatureVerifier" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.reporting::Status" = type { i32, %"class.std::__1::basic_string" }

@_ZN9reporting12_GLOBAL__N_120kProdVerificationKeyE = internal constant [32 x i8] c"Q-S\A3\F5\EB\01\CE\DA\FC\8Ey\E7\0F\E1e\DC\14\86S\8B\97Z-p\08\CB\CA`\C3U\E6", align 16
@_ZN9reporting12_GLOBAL__N_119kDevVerificationKeyE = internal constant [32 x i8] c"\C6,M%\9E>\99\A0.\08\15\8C8\B7l\08\DF\E7n:\D6Z\C5X\09\E4\AB\89:1S\07", align 16
@.str = private unnamed_addr constant [21 x i8] c"Wrong signature size\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Wrong public key size\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"Verification failed\00", align 1

@_ZN9reporting17SignatureVerifierC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.reporting::SignatureVerifier"*, i8*, i64), void (%"class.reporting::SignatureVerifier"*, i8*, i64)* @_ZN9reporting17SignatureVerifierC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN9reporting17SignatureVerifier15VerificationKeyEv() local_unnamed_addr #0 align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN9reporting12_GLOBAL__N_120kProdVerificationKeyE, i64 0, i64 0), i64 32 }
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden { i8*, i64 } @_ZN9reporting17SignatureVerifier18VerificationKeyDevEv() local_unnamed_addr #0 align 2 {
  ret { i8*, i64 } { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_ZN9reporting12_GLOBAL__N_119kDevVerificationKeyE, i64 0, i64 0), i64 32 }
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9reporting17SignatureVerifierC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.reporting::SignatureVerifier"*, i8*, i64) unnamed_addr #1 align 2 {
  %4 = icmp ugt i64 %2, -17
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = bitcast %"class.reporting::SignatureVerifier"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %6) #6
  unreachable

7:                                                ; preds = %3
  %8 = icmp ult i64 %2, 23
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = add nuw i64 %2, 16
  %11 = and i64 %10, -16
  %12 = tail call i8* @_Znwm(i64 %11) #7
  %13 = getelementptr inbounds %"class.reporting::SignatureVerifier", %"class.reporting::SignatureVerifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8, !alias.scope !2
  %14 = or i64 %11, -9223372036854775808
  %15 = getelementptr inbounds %"class.reporting::SignatureVerifier", %"class.reporting::SignatureVerifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %15, align 8, !alias.scope !2
  %16 = getelementptr inbounds %"class.reporting::SignatureVerifier", %"class.reporting::SignatureVerifier"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %16, align 8, !alias.scope !2
  br label %23

17:                                               ; preds = %7
  %18 = trunc i64 %2 to i8
  %19 = bitcast %"class.reporting::SignatureVerifier"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 %18, i8* %20, align 1, !alias.scope !2
  %21 = bitcast %"class.reporting::SignatureVerifier"* %0 to i8*
  %22 = icmp eq i64 %2, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17, %9
  %24 = phi i8* [ %12, %9 ], [ %21, %17 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %1, i64 %2, i1 false) #8
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi i8* [ %21, %17 ], [ %24, %23 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 %2
  store i8 0, i8* %27, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9reporting17SignatureVerifier6VerifyEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.reporting::Status"* noalias sret, %"class.reporting::SignatureVerifier"*, i8*, i64, i8*, i64) local_unnamed_addr #1 align 2 {
  %7 = icmp eq i64 %5, 64
  br i1 %7, label %9, label %8

8:                                                ; preds = %6
  tail call void @_ZN9reporting6StatusC1ENS_5error4CodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.reporting::Status"* %0, i32 9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i64 20) #8
  br label %35

9:                                                ; preds = %6
  %10 = bitcast %"class.reporting::SignatureVerifier"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.reporting::SignatureVerifier", %"class.reporting::SignatureVerifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  br label %19

17:                                               ; preds = %9
  %18 = zext i8 %12 to i64
  br label %19

19:                                               ; preds = %14, %17
  %20 = phi i64 [ %16, %14 ], [ %18, %17 ]
  %21 = icmp eq i64 %20, 32
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  tail call void @_ZN9reporting6StatusC1ENS_5error4CodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.reporting::Status"* %0, i32 9, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), i64 21) #8
  br label %35

23:                                               ; preds = %19
  br i1 %13, label %24, label %27

24:                                               ; preds = %23
  %25 = getelementptr inbounds %"class.reporting::SignatureVerifier", %"class.reporting::SignatureVerifier"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  br label %29

27:                                               ; preds = %23
  %28 = bitcast %"class.reporting::SignatureVerifier"* %1 to i8*
  br label %29

29:                                               ; preds = %24, %27
  %30 = phi i8* [ %26, %24 ], [ %28, %27 ]
  %31 = tail call zeroext i1 @_ZN9reporting15VerifySignatureEPKhN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES1_(i8* %30, i8* %2, i64 %3, i8* %4) #8
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call void @_ZN9reporting6StatusC1ENS_5error4CodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.reporting::Status"* %0, i32 3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i64 19) #8
  br label %35

33:                                               ; preds = %29
  %34 = tail call dereferenceable(32) %"class.reporting::Status"* @_ZN9reporting6Status8StatusOKEv() #8
  tail call void @_ZN9reporting6StatusC1ERKS0_(%"class.reporting::Status"* %0, %"class.reporting::Status"* dereferenceable(32) %34) #8
  br label %35

35:                                               ; preds = %33, %32, %22, %8
  ret void
}

declare void @_ZN9reporting6StatusC1ENS_5error4CodeEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.reporting::Status"*, i32, i8*, i64) unnamed_addr #2

declare zeroext i1 @_ZN9reporting15VerifySignatureEPKhN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES1_(i8*, i8*, i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare dereferenceable(32) %"class.reporting::Status"* @_ZN9reporting6Status8StatusOKEv() local_unnamed_addr #2

declare void @_ZN9reporting6StatusC1ERKS0_(%"class.reporting::Status"*, %"class.reporting::Status"* dereferenceable(32)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
