; ModuleID = '../../third_party/blink/renderer/core/dom/visited_link_state.cc'
source_filename = "../../third_party/blink/renderer/core/dom/visited_link_state.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.27 }
%class.scoped_refptr.27 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::VisitedLinkState" = type { %"class.blink::Member", %"class.WTF::HashSet.360" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Document"* }
%"class.WTF::HashSet.360" = type { %"class.WTF::HashTable.361" }
%"class.WTF::HashTable.361" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.104", %"class.WTF::Vector.104", i8, i32, %"class.blink::Member.115", %"class.blink::Member.117", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.123", %"class.blink::Member.125", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.128", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.134", %"class.blink::Member.136", %"class.blink::Member.63", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.139", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.25", %"class.blink::Member.155", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::Member.25", %"class.blink::UserActionElementSet", %"class.blink::Member.164", double, double, i64, i64, %"class.blink::HeapHashSet.166", %"class.blink::HeapHashSet.173", i16, i8, %"class.blink::Member.180", %"class.blink::Member.182", %"class.blink::Member.184", %"class.blink::Member.186", %"class.blink::TextLinkColors", %"class.blink::Member.188", i8, [7 x i8], %"class.blink::HeapHashMap.190", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.25", %"class.WTF::Vector.197", %"class.blink::Member.202", %"class.blink::Member.204", i8, %"class.blink::Member.25", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.206", %"class.blink::HeapVector.208", %"class.std::__1::unique_ptr.216", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.222", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.234", %"class.WTF::Vector.236", i8, i8, %"class.std::__1::unique_ptr.241", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.247", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.255", i8, i32, %"class.blink::Member.257", %"class.blink::Member.259", %"class.blink::Member.261", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.263", %"class.WTF::HashMap.265", %"class.blink::Member.270", %"class.blink::Member.272", %"class.blink::Member.274", %"class.blink::Member.276", %"class.blink::Member.12", %"class.blink::Member.12", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.278", i8, i32, %"class.blink::Member.285", %"class.blink::Member.287", i32, %"class.blink::Member.289", %"class.blink::Member.291", %"class.blink::Member.293", %"class.std::__1::unique_ptr.295", i64, %"class.std::__1::unique_ptr.301", i32, i32, %"class.blink::Member.307", %"class.blink::Member.309", %"class.blink::Member.311", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.313", %"class.WTF::Vector.315", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.320", %"class.blink::Member.327", %"class.std::__1::unique_ptr.329", %"class.blink::Member.335", i8, i8, %"class.WTF::String", %"class.blink::Member.337", i8, [7 x i8], %"class.blink::HeapHashMap.339", %"class.blink::HeapObserverSet", %"class.blink::Member.353", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.355", i32, i8, i8, %"class.blink::WeakMember.357", %"class.blink::Member.358" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.2", %"class.blink::Member.4", %"class.blink::Member.2", %"class.blink::Member.2", %"class.blink::Member.6" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.6" = type { %"class.blink::MemberBase.7" }
%"class.blink::MemberBase.7" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.10", %"class.blink::Member.12", %"class.blink::Member.4", %"class.blink::Member.14", %"class.blink::Member.14", %"class.blink::Member.46", %"class.blink::Member.48", %"class.blink::Member.50", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.55", %"class.blink::HeapVector.57" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.21" }
%"class.blink::Member.21" = type { %"class.blink::MemberBase.22" }
%"class.blink::MemberBase.22" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.25", i32, %"class.blink::HeapVector" }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.52" }
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::HeapHashMap.54"* }
%"class.blink::HeapHashMap.54" = type opaque
%"class.blink::Member.55" = type { %"class.blink::MemberBase.56" }
%"class.blink::MemberBase.56" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.57" = type { %"class.WTF::Vector.60" }
%"class.WTF::Vector.60" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase.62" }
%"class.WTF::VectorBufferBase.62" = type { %"class.blink::Member.63"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.97" }
%"class.blink::HeapHashMap.97" = type { %"class.WTF::HashMap.100" }
%"class.WTF::HashMap.100" = type { %"class.WTF::HashTable.101" }
%"class.WTF::HashTable.101" = type <{ %"struct.WTF::KeyValuePair.103"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.103" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.107 }
%class.scoped_refptr.107 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.108" }
%"struct.std::__1::atomic.108" = type { %"struct.std::__1::__atomic_base.109" }
%"struct.std::__1::__atomic_base.109" = type { %"struct.std::__1::__atomic_base.110" }
%"struct.std::__1::__atomic_base.110" = type { %"struct.std::__1::__cxx_atomic_impl.111" }
%"struct.std::__1::__cxx_atomic_impl.111" = type { %"struct.std::__1::__cxx_atomic_base_impl.112" }
%"struct.std::__1::__cxx_atomic_base_impl.112" = type { i32 }
%"class.blink::Member.115" = type { %"class.blink::MemberBase.116" }
%"class.blink::MemberBase.116" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.136" = type { %"class.blink::MemberBase.137" }
%"class.blink::MemberBase.137" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.63" = type { %"class.blink::MemberBase.64" }
%"class.blink::MemberBase.64" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.65", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.67, %"class.WTF::Vector.68", %"class.WTF::Vector.68", %"class.blink::Member.2", %"class.blink::Member.73", %"class.blink::HeapHashSet", %"class.blink::Member.12", %"class.WTF::HashSet.81", %"class.WTF::TextPosition", %"class.blink::Member.85", %"class.blink::HeapVector.87", %"class.blink::Member.94" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.67 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.68" = type { %"class.WTF::VectorBuffer.69" }
%"class.WTF::VectorBuffer.69" = type { %"class.WTF::VectorBufferBase.70" }
%"class.WTF::VectorBufferBase.70" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.73" = type { %"class.blink::MemberBase.74" }
%"class.blink::MemberBase.74" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.75" }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.79" }
%"class.WTF::HashTable.79" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.5" }
%"class.WTF::HashSet.81" = type { %"class.WTF::HashTable.82" }
%"class.WTF::HashTable.82" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.85" = type { %"class.blink::MemberBase.86" }
%"class.blink::MemberBase.86" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.87" = type { %"class.WTF::Vector.90" }
%"class.WTF::Vector.90" = type { %"class.WTF::VectorBuffer.91" }
%"class.WTF::VectorBuffer.91" = type { %"class.WTF::VectorBufferBase.92" }
%"class.WTF::VectorBufferBase.92" = type { %"class.blink::Member.73"*, i32, i32 }
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.138 }
%class.scoped_refptr.138 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.139" = type { %"class.WTF::VectorBuffer.140" }
%"class.WTF::VectorBuffer.140" = type { %"class.WTF::VectorBufferBase.141" }
%"class.WTF::VectorBufferBase.141" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.142 }
%class.scoped_refptr.142 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.155" = type { %"class.blink::MemberBase.156" }
%"class.blink::MemberBase.156" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.157" }
%"class.blink::HeapHashMap.157" = type { %"class.WTF::HashMap.160" }
%"class.WTF::HashMap.160" = type { %"class.WTF::HashTable.161" }
%"class.WTF::HashTable.161" = type <{ %"struct.WTF::KeyValuePair.163"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.163" = type opaque
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.166" = type { %"class.WTF::HashSet.169" }
%"class.WTF::HashSet.169" = type { %"class.WTF::HashTable.170" }
%"class.WTF::HashTable.170" = type <{ %"class.blink::WeakMember.172"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.172" = type opaque
%"class.blink::HeapHashSet.173" = type { %"class.WTF::HashSet.176" }
%"class.WTF::HashSet.176" = type { %"class.WTF::HashTable.177" }
%"class.WTF::HashTable.177" = type <{ %"class.blink::WeakMember.179"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.179" = type opaque
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.4", %"class.blink::HeapVector.57" }
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::HeapHashMap.190" = type { %"class.WTF::HashMap.193" }
%"class.WTF::HashMap.193" = type { %"class.WTF::HashTable.194" }
%"class.WTF::HashTable.194" = type <{ %"struct.WTF::KeyValuePair.196"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.196" = type opaque
%"class.WTF::Vector.197" = type { %"class.WTF::VectorBuffer.198" }
%"class.WTF::VectorBuffer.198" = type { %"class.WTF::VectorBufferBase.199" }
%"class.WTF::VectorBufferBase.199" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.204" = type { %"class.blink::MemberBase.205" }
%"class.blink::MemberBase.205" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.28" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.32", %"class.blink::Member.34", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.32" = type { %"class.WTF::SingleThreadedBitField.33" }
%"class.WTF::SingleThreadedBitField.33" = type { i32 }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.36 }
%class.scoped_refptr.36 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.37", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.37" = type { %"class.base::RefCounted.38" }
%"class.base::RefCounted.38" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::Member.206" = type { %"class.blink::MemberBase.207" }
%"class.blink::MemberBase.207" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.208" = type { %"class.WTF::Vector.211" }
%"class.WTF::Vector.211" = type { %"class.WTF::VectorBuffer.212" }
%"class.WTF::VectorBuffer.212" = type { %"class.WTF::VectorBufferBase.213" }
%"class.WTF::VectorBufferBase.213" = type { %"class.blink::Member.214"*, i32, i32 }
%"class.blink::Member.214" = type opaque
%"class.std::__1::unique_ptr.216" = type { %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.222" = type { %"class.WTF::HashSet.225" }
%"class.WTF::HashSet.225" = type { %"class.WTF::HashTable.226" }
%"class.WTF::HashTable.226" = type <{ %"class.blink::WeakMember.228"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.228" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.229", i32, [4 x i8] }>
%"class.WTF::Vector.229" = type { %"class.WTF::VectorBuffer.230" }
%"class.WTF::VectorBuffer.230" = type { %"class.WTF::VectorBufferBase.231" }
%"class.WTF::VectorBufferBase.231" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.234" = type { %"class.blink::MemberBase.235" }
%"class.blink::MemberBase.235" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.236" = type { %"class.WTF::VectorBuffer.237" }
%"class.WTF::VectorBuffer.237" = type { %"class.WTF::VectorBufferBase.238" }
%"class.WTF::VectorBufferBase.238" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.241" = type { %"class.std::__1::__compressed_pair.242" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.243" }
%"struct.std::__1::__compressed_pair_elem.243" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.42" }
%"class.WTF::Vector.42" = type { %"class.WTF::VectorBuffer.43" }
%"class.WTF::VectorBuffer.43" = type { %"class.WTF::VectorBufferBase.44" }
%"class.WTF::VectorBufferBase.44" = type { %"class.blink::Member.25"*, i32, i32 }
%"class.blink::HeapVector.247" = type { %"class.WTF::Vector.250" }
%"class.WTF::Vector.250" = type { %"class.WTF::VectorBuffer.251" }
%"class.WTF::VectorBuffer.251" = type { %"class.WTF::VectorBufferBase.252" }
%"class.WTF::VectorBufferBase.252" = type { %"class.blink::Member.253"*, i32, i32 }
%"class.blink::Member.253" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.12" }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.257" = type { %"class.blink::MemberBase.258" }
%"class.blink::MemberBase.258" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.259" = type { %"class.blink::MemberBase.260" }
%"class.blink::MemberBase.260" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.263" = type { %"class.blink::MemberBase.264" }
%"class.blink::MemberBase.264" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.269"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.269" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.154", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.145, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.145 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.146" }>
%"class.base::RefCountedThreadSafe.146" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.147 }
%class.scoped_refptr.147 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.148", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.148" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.149" }
%"struct.std::__1::atomic.149" = type { %"struct.std::__1::__atomic_base.150" }
%"struct.std::__1::__atomic_base.150" = type { %"struct.std::__1::__atomic_base.151" }
%"struct.std::__1::__atomic_base.151" = type { %"struct.std::__1::__cxx_atomic_impl.152" }
%"struct.std::__1::__cxx_atomic_impl.152" = type { %"struct.std::__1::__cxx_atomic_base_impl.153" }
%"struct.std::__1::__cxx_atomic_base_impl.153" = type { i8 }
%"class.blink::WeakMember.154" = type { %"class.blink::MemberBase.13" }
%"class.blink::HeapHashSet.278" = type { %"class.WTF::HashSet.281" }
%"class.WTF::HashSet.281" = type { %"class.WTF::HashTable.282" }
%"class.WTF::HashTable.282" = type <{ %"class.blink::Member.284"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.284" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.311" = type { %"class.blink::MemberBase.312" }
%"class.blink::MemberBase.312" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.313" = type { %"class.blink::MemberBase.314" }
%"class.blink::MemberBase.314" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.315" = type { %"class.WTF::VectorBuffer.316" }
%"class.WTF::VectorBuffer.316" = type { %"class.WTF::VectorBufferBase.317" }
%"class.WTF::VectorBufferBase.317" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.320" = type { %"class.WTF::HashMap.323" }
%"class.WTF::HashMap.323" = type { %"class.WTF::HashTable.324" }
%"class.WTF::HashTable.324" = type <{ %"struct.WTF::KeyValuePair.326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.326" = type opaque
%"class.blink::Member.327" = type { %"class.blink::MemberBase.328" }
%"class.blink::MemberBase.328" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.335" = type { %"class.blink::MemberBase.336" }
%"class.blink::MemberBase.336" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.339" = type { %"class.WTF::HashMap.342" }
%"class.WTF::HashMap.342" = type { %"class.WTF::HashTable.343" }
%"class.WTF::HashTable.343" = type <{ %"struct.WTF::KeyValuePair.345"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.345" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.346" }
%"class.blink::HeapHashSet.346" = type { %"class.WTF::HashSet.349" }
%"class.WTF::HashSet.349" = type { %"class.WTF::HashTable.350" }
%"class.WTF::HashTable.350" = type <{ %"class.blink::WeakMember.352"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.352" = type opaque
%"class.blink::Member.353" = type { %"class.blink::MemberBase.354" }
%"class.blink::MemberBase.354" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.355" = type { %"class.blink::MemberBase.356" }
%"class.blink::MemberBase.356" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.12", %"class.blink::HeapHashSet.366", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.373", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.366" = type { %"class.WTF::HashSet.369" }
%"class.WTF::HashSet.369" = type { %"class.WTF::HashTable.370" }
%"class.WTF::HashTable.370" = type <{ %"class.blink::Member.372"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.372" = type opaque
%"class.blink::HeapTaskRunnerTimer.373" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.374", { i64, i64 } }
%"class.blink::WeakMember.374" = type { %"class.blink::MemberBase.356" }
%"class.blink::WeakMember.357" = type { %"class.blink::MemberBase.3" }
%"class.blink::Member.358" = type { %"class.blink::MemberBase.359" }
%"class.blink::MemberBase.359" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::ShadowRoot" = type <{ %"class.blink::DocumentFragment", %"class.blink::TreeScope", %"class.blink::Member.184", %"class.blink::Member.564", i32, [4 x i8] }>
%"class.blink::DocumentFragment" = type { %"class.blink::ContainerNode" }
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::SlotAssignment"* }
%"class.blink::SlotAssignment" = type opaque
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.34", %"class.WTF::Vector.585" }
%"class.WTF::Vector.585" = type { %"class.WTF::VectorBuffer.586" }
%"class.WTF::VectorBuffer.586" = type { %"class.WTF::VectorBufferBase.587", [64 x i8] }
%"class.WTF::VectorBufferBase.587" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet.567", %"class.blink::HeapHashMap.574", %"class.blink::Member.581", %"class.blink::Member.583" }
%"class.blink::HeapHashSet.567" = type { %"class.WTF::HashSet.570" }
%"class.WTF::HashSet.570" = type { %"class.WTF::HashTable.571" }
%"class.WTF::HashTable.571" = type <{ %"class.blink::WeakMember.573"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.573" = type opaque
%"class.blink::HeapHashMap.574" = type { %"class.WTF::HashMap.577" }
%"class.WTF::HashMap.577" = type { %"class.WTF::HashTable.578" }
%"class.WTF::HashTable.578" = type <{ %"struct.WTF::KeyValuePair.580"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.580" = type opaque
%"class.blink::Member.581" = type { %"class.blink::MemberBase.582" }
%"class.blink::MemberBase.582" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.583" = type { %"class.blink::MemberBase.584" }
%"class.blink::MemberBase.584" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::Platform" = type { i32 (...)** }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.375", i32, [4 x i8], %"class.std::__1::unique_ptr.511", %"class.std::__1::unique_ptr.511", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.522", %"class.std::__1::unique_ptr.528", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.540", %"class.std::__1::unique_ptr.546", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.553", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.384", %"class.std::__1::unique_ptr.390", %"class.std::__1::unique_ptr.396", %"class.std::__1::unique_ptr.402", %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.419", %"class.std::__1::unique_ptr.426", %"class.std::__1::unique_ptr.426", %"class.std::__1::unique_ptr.433", %"class.std::__1::unique_ptr.440", %"class.std::__1::unique_ptr.447", %"class.std::__1::unique_ptr.447", %"class.std::__1::unique_ptr.454", %"class.std::__1::unique_ptr.461", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.491", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.384" = type { %"class.std::__1::__compressed_pair.385" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.390" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.396" = type { %"class.std::__1::__compressed_pair.397" }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.411" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.411" = type { %"struct.std::__1::__atomic_base.412" }
%"struct.std::__1::__atomic_base.412" = type { %"struct.std::__1::__atomic_base.413" }
%"struct.std::__1::__atomic_base.413" = type { %"struct.std::__1::__cxx_atomic_impl.414" }
%"struct.std::__1::__cxx_atomic_impl.414" = type { %"struct.std::__1::__cxx_atomic_base_impl.415" }
%"struct.std::__1::__cxx_atomic_base_impl.415" = type { i64 }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.blink::Worklist.422"* }
%"class.blink::Worklist.422" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.411" }
%"class.std::__1::unique_ptr.426" = type { %"class.std::__1::__compressed_pair.427" }
%"class.std::__1::__compressed_pair.427" = type { %"struct.std::__1::__compressed_pair_elem.428" }
%"struct.std::__1::__compressed_pair_elem.428" = type { %"class.blink::Worklist.429"* }
%"class.blink::Worklist.429" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.411" }
%"class.std::__1::unique_ptr.433" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { %"class.blink::Worklist.436"* }
%"class.blink::Worklist.436" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.411" }
%"class.std::__1::unique_ptr.440" = type { %"class.std::__1::__compressed_pair.441" }
%"class.std::__1::__compressed_pair.441" = type { %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.blink::Worklist.443"* }
%"class.blink::Worklist.443" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.411" }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.blink::Worklist.450"* }
%"class.blink::Worklist.450" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.411" }
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.blink::Worklist.457"* }
%"class.blink::Worklist.457" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.411" }
%"class.std::__1::unique_ptr.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.blink::Worklist.464"* }
%"class.blink::Worklist.464" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.411" }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.471", %"class.std::__1::__compressed_pair.478", %"class.std::__1::__compressed_pair.483", %"class.std::__1::__compressed_pair.485", [4 x i8] }>
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473", %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { i64 }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { float }
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.494", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.494" = type { %"class.std::__1::__compressed_pair.495" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.503" }
%"class.WTF::Vector.503" = type { %"class.WTF::VectorBuffer.504" }
%"class.WTF::VectorBuffer.504" = type { %"class.WTF::VectorBufferBase.505" }
%"class.WTF::VectorBufferBase.505" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.511" = type { %"class.std::__1::__compressed_pair.512" }
%"class.std::__1::__compressed_pair.512" = type { %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.519" }
%"class.WTF::VectorBuffer.519" = type { %"class.WTF::VectorBufferBase.520" }
%"class.WTF::VectorBufferBase.520" = type { %"struct.std::__1::pair.521"*, i32, i32 }
%"struct.std::__1::pair.521" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.522" = type { %"class.std::__1::__compressed_pair.523" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.528" = type { %"class.std::__1::__compressed_pair.529" }
%"class.std::__1::__compressed_pair.529" = type { %"struct.std::__1::__compressed_pair_elem.530" }
%"struct.std::__1::__compressed_pair_elem.530" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.534" }
%"class.std::__1::unique_ptr.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.422"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.429"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.436"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.443"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.450"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.557" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.540" = type { %"class.std::__1::__compressed_pair.541" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.546" = type { %"class.std::__1::__compressed_pair.547" }
%"class.std::__1::__compressed_pair.547" = type { %"struct.std::__1::__compressed_pair_elem.548" }
%"struct.std::__1::__compressed_pair_elem.548" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.552 }
%class.scoped_refptr.552 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.553" = type { %"struct.std::__1::__atomic_base.554" }
%"struct.std::__1::__atomic_base.554" = type { %"struct.std::__1::__cxx_atomic_impl.555" }
%"struct.std::__1::__cxx_atomic_impl.555" = type { %"struct.std::__1::__cxx_atomic_base_impl.556" }
%"struct.std::__1::__cxx_atomic_base_impl.556" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF9HashTableImmNS_17IdentityExtractorEN5blink12LinkHashHashENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKmRmEENS_18HashTableAddResultIS7_mEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableImmNS_17IdentityExtractorEN5blink12LinkHashHashENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm = comdat any

$_ZN3WTF9HashTableImmNS_17IdentityExtractorEN5blink12LinkHashHashENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE8RehashToEPmjS8_ = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZN5blink10html_names5kATagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@_ZN5blink10html_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.1 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned long]\00", align 1

@_ZN5blink16VisitedLinkStateC1ERKNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::VisitedLinkState"*, %"class.blink::Document"*), void (%"class.blink::VisitedLinkState"*, %"class.blink::Document"*)* @_ZN5blink16VisitedLinkStateC2ERKNS_8DocumentE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VisitedLinkStateC2ERKNS_8DocumentE(%"class.blink::VisitedLinkState"* nocapture, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::VisitedLinkState", %"class.blink::VisitedLinkState"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::Document"* %1, %"class.blink::Document"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::VisitedLinkState", %"class.blink::VisitedLinkState"* %0, i64 0, i32 1
  %5 = bitcast %"class.WTF::HashSet.360"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VisitedLinkState26InvalidateStyleForAllLinksEb(%"class.blink::VisitedLinkState"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::VisitedLinkState", %"class.blink::VisitedLinkState"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::VisitedLinkState", %"class.blink::VisitedLinkState"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  %11 = icmp eq %"class.blink::Node"* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  tail call fastcc void @_ZN5blinkL37InvalidateStyleForAllLinksRecursivelyERNS_4NodeEb(%"class.blink::Node"* nonnull dereferenceable(64) %10, i1 zeroext %1)
  br label %13

13:                                               ; preds = %6, %12, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL37InvalidateStyleForAllLinksRecursivelyERNS_4NodeEb(%"class.blink::Node"* dereferenceable(64), i1 zeroext) unnamed_addr #0 {
  %3 = icmp eq %"class.blink::Node"* %0, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %6 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %5, i64 0, i32 0, i32 0, i32 0
  br label %8

7:                                                ; preds = %59, %2
  ret void

8:                                                ; preds = %4, %59
  %9 = phi %"class.blink::Node"* [ %0, %4 ], [ %60, %59 ]
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 64
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %34, label %14

14:                                               ; preds = %8
  %15 = and i32 %11, 48
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %14
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 2
  %20 = bitcast %"class.blink::Member.2"* %19 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %23, %25
  %27 = and i1 %26, %1
  br i1 %27, label %28, label %31

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1, i32 6
  %30 = bitcast %"class.blink::Member.6"* %29 to i64*
  store i64 0, i64* %30, align 8
  br label %31

31:                                               ; preds = %14, %28, %17
  %32 = bitcast %"class.blink::Node"* %9 to %"class.blink::Element"*
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %32, i32 16) #4
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %32, i32 17) #4
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %32, i32 22) #4
  tail call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %32, i32 21) #4
  %33 = load i32, i32* %10, align 8
  br label %34

34:                                               ; preds = %8, %31
  %35 = phi i32 [ %11, %8 ], [ %33, %31 ]
  %36 = and i32 %35, 12
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %44

38:                                               ; preds = %34
  %39 = bitcast %"class.blink::Node"* %9 to %"class.blink::Element"*
  %40 = tail call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %39) #4
  %41 = icmp eq %"class.blink::ShadowRoot"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %40, i64 0, i32 0, i32 0, i32 0
  tail call fastcc void @_ZN5blinkL37InvalidateStyleForAllLinksRecursivelyERNS_4NodeEb(%"class.blink::Node"* dereferenceable(64) %43, i1 zeroext %1)
  br label %44

44:                                               ; preds = %34, %42, %38
  %45 = load i32, i32* %10, align 8
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 1
  %50 = bitcast %"class.blink::Node"* %49 to %"class.blink::Node"**
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %50, align 8
  %52 = icmp eq %"class.blink::Node"* %51, null
  br i1 %52, label %53, label %59

53:                                               ; preds = %48, %44
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %9, i64 0, i32 5, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %9) #4
  br label %59

59:                                               ; preds = %48, %53, %57
  %60 = phi %"class.blink::Node"* [ %58, %57 ], [ %55, %53 ], [ %51, %48 ]
  %61 = icmp eq %"class.blink::Node"* %60, null
  br i1 %61, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16VisitedLinkState22InvalidateStyleForLinkEm(%"class.blink::VisitedLinkState"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::VisitedLinkState", %"class.blink::VisitedLinkState"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %56, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::VisitedLinkState", %"class.blink::VisitedLinkState"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = trunc i64 %1 to i32
  %12 = and i32 %9, %11
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i64, i64* %4, i64 %13
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, %1
  br i1 %16, label %46, label %17

17:                                               ; preds = %6
  %18 = xor i32 %11, -1
  %19 = lshr i32 %11, 23
  %20 = add i32 %19, %18
  %21 = shl i32 %20, 12
  %22 = xor i32 %21, %20
  %23 = lshr i32 %22, 7
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 2
  %26 = xor i32 %25, %24
  %27 = lshr i32 %26, 20
  %28 = xor i32 %27, %26
  %29 = or i32 %28, 1
  %30 = zext i32 %29 to i64
  br label %31

31:                                               ; preds = %36, %17
  %32 = phi i64 [ %15, %17 ], [ %42, %36 ]
  %33 = phi i64 [ %13, %17 ], [ %40, %36 ]
  %34 = phi i64 [ 0, %17 ], [ %38, %36 ]
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %56, label %36

36:                                               ; preds = %31
  %37 = icmp eq i64 %34, 0
  %38 = select i1 %37, i64 %30, i64 %34
  %39 = add i64 %38, %33
  %40 = and i64 %39, %10
  %41 = getelementptr inbounds i64, i64* %4, i64 %40
  %42 = load i64, i64* %41, align 8
  %43 = icmp eq i64 %42, %1
  br i1 %43, label %44, label %31

44:                                               ; preds = %36
  %45 = getelementptr inbounds i64, i64* %4, i64 %40
  br label %46

46:                                               ; preds = %44, %6
  %47 = phi i64* [ %14, %6 ], [ %45, %44 ]
  %48 = icmp eq i64* %47, null
  br i1 %48, label %56, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.blink::VisitedLinkState", %"class.blink::VisitedLinkState"* %0, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::Document"*, %"class.blink::Document"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %51, i64 0, i32 0, i32 1, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %49
  tail call fastcc void @_ZN5blinkL33InvalidateStyleForLinkRecursivelyERNS_4NodeEm(%"class.blink::Node"* nonnull dereferenceable(64) %53, i64 %1)
  br label %56

56:                                               ; preds = %31, %46, %2, %49, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL33InvalidateStyleForLinkRecursivelyERNS_4NodeEm(%"class.blink::Node"* dereferenceable(64), i64) unnamed_addr #0 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = icmp eq %"class.blink::Node"* %0, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  %7 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %9 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %14

13:                                               ; preds = %218, %2
  ret void

14:                                               ; preds = %5, %218
  %15 = phi %"class.blink::Node"* [ %0, %5 ], [ %219, %218 ]
  %16 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = and i32 %17, 64
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %193, label %20

20:                                               ; preds = %14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #4
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %21 = and i32 %17, 48
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %100

23:                                               ; preds = %20
  %24 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 1, i32 2
  %26 = bitcast %"class.blink::Member.2"* %25 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %27 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %29, %31
  br i1 %32, label %33, label %100

33:                                               ; preds = %23
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 1, i32 6
  %35 = bitcast %"class.blink::Member.6"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %172

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %40, i64 0, i32 2, i32 0, i32 0
  %42 = load %"class.blink::Document"*, %"class.blink::Document"** %41, align 8
  %43 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %42) #4
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 1, i32 3
  %45 = bitcast %"class.blink::Member.4"* %44 to %"class.blink::ElementData"**
  %46 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %45, align 8
  %47 = icmp eq %"class.blink::ElementData"* %46, null
  br i1 %47, label %97, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %46, i64 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %60, label %53

53:                                               ; preds = %48
  %54 = bitcast %"class.blink::ElementData"* %46 to %"class.blink::UniqueElementData"*
  %55 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %46, i64 1, i32 1
  %56 = bitcast %"class.blink::Member.34"* %55 to %"class.blink::Attribute"**
  %57 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %54, i64 0, i32 2, i32 0, i32 0, i32 2
  %59 = load i32, i32* %58, align 4
  br label %65

60:                                               ; preds = %48
  %61 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %46, i64 1
  %62 = bitcast %"class.blink::ElementData"* %61 to %"class.blink::Attribute"*
  %63 = lshr i32 %50, 1
  %64 = and i32 %63, 268435455
  br label %65

65:                                               ; preds = %60, %53
  %66 = phi %"class.blink::Attribute"* [ %62, %60 ], [ %57, %53 ]
  %67 = phi i32 [ %64, %60 ], [ %59, %53 ]
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %66, i64 %68
  %70 = icmp eq i32 %67, 0
  br i1 %70, label %97, label %71

71:                                               ; preds = %65
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %75

75:                                               ; preds = %90, %71
  %76 = phi %"class.blink::Attribute"* [ %66, %71 ], [ %91, %90 ]
  %77 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %77, align 8
  %79 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %78, %72
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 3, i32 0, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %82, %83
  br i1 %84, label %85, label %90

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %78, i64 0, i32 4, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %87, %88
  br i1 %89, label %93, label %90

90:                                               ; preds = %85, %80
  %91 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %76, i64 1
  %92 = icmp eq %"class.blink::Attribute"* %91, %69
  br i1 %92, label %97, label %75

93:                                               ; preds = %85, %75
  %94 = icmp eq %"class.blink::Attribute"* %76, null
  %95 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %76, i64 0, i32 1
  %96 = select i1 %94, %"class.WTF::AtomicString"* %12, %"class.WTF::AtomicString"* %95
  br label %97

97:                                               ; preds = %90, %93, %38, %65
  %98 = phi %"class.WTF::AtomicString"* [ %12, %65 ], [ %12, %38 ], [ %96, %93 ], [ %12, %90 ]
  %99 = call i64 @_ZN5blink15VisitedLinkHashERKNS_4KURLERKN3WTF12AtomicStringE(%"class.blink::KURL"* dereferenceable(112) %43, %"class.WTF::AtomicString"* dereferenceable(8) %98) #4
  store i64 %99, i64* %35, align 8
  br label %172

100:                                              ; preds = %23, %20
  %101 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 3, i32 0, i32 0
  %102 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %102, i64 0, i32 2, i32 0, i32 0
  %104 = load %"class.blink::Document"*, %"class.blink::Document"** %103, align 8
  %105 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %104) #4
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %108, label %169

108:                                              ; preds = %100
  %109 = load i32, i32* %16, align 8
  %110 = and i32 %109, 48
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %166

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 1, i32 3
  %114 = bitcast %"class.blink::Member.4"* %113 to %"class.blink::ElementData"**
  %115 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %114, align 8
  %116 = icmp eq %"class.blink::ElementData"* %115, null
  br i1 %116, label %169, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %115, i64 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %129, label %122

122:                                              ; preds = %117
  %123 = bitcast %"class.blink::ElementData"* %115 to %"class.blink::UniqueElementData"*
  %124 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %115, i64 1, i32 1
  %125 = bitcast %"class.blink::Member.34"* %124 to %"class.blink::Attribute"**
  %126 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %123, i64 0, i32 2, i32 0, i32 0, i32 2
  %128 = load i32, i32* %127, align 4
  br label %134

129:                                              ; preds = %117
  %130 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %115, i64 1
  %131 = bitcast %"class.blink::ElementData"* %130 to %"class.blink::Attribute"*
  %132 = lshr i32 %119, 1
  %133 = and i32 %132, 268435455
  br label %134

134:                                              ; preds = %129, %122
  %135 = phi %"class.blink::Attribute"* [ %131, %129 ], [ %126, %122 ]
  %136 = phi i32 [ %133, %129 ], [ %128, %122 ]
  %137 = zext i32 %136 to i64
  %138 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %135, i64 %137
  %139 = icmp eq i32 %136, 0
  br i1 %139, label %169, label %140

140:                                              ; preds = %134
  %141 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %142 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 3, i32 0, i32 0, i32 0
  %143 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %141, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %144

144:                                              ; preds = %159, %140
  %145 = phi %"class.blink::Attribute"* [ %135, %140 ], [ %160, %159 ]
  %146 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %145, i64 0, i32 0, i32 0, i32 0
  %147 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %146, align 8
  %148 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %147, %141
  br i1 %148, label %162, label %149

149:                                              ; preds = %144
  %150 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %147, i64 0, i32 3, i32 0, i32 0, i32 0
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %153 = icmp eq %"class.WTF::StringImpl"* %151, %152
  br i1 %153, label %154, label %159

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %147, i64 0, i32 4, i32 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %158 = icmp eq %"class.WTF::StringImpl"* %156, %157
  br i1 %158, label %162, label %159

159:                                              ; preds = %154, %149
  %160 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %145, i64 1
  %161 = icmp eq %"class.blink::Attribute"* %160, %138
  br i1 %161, label %169, label %144

162:                                              ; preds = %154, %144
  %163 = icmp eq %"class.blink::Attribute"* %145, null
  %164 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %145, i64 0, i32 1
  %165 = select i1 %163, %"class.WTF::AtomicString"* %12, %"class.WTF::AtomicString"* %164
  br label %169

166:                                              ; preds = %108
  %167 = bitcast %"class.blink::Node"* %15 to %"class.blink::SVGElement"*
  %168 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* nonnull dereferenceable(168) %167) #4
  br label %169

169:                                              ; preds = %159, %162, %112, %134, %166, %100
  %170 = phi %"class.WTF::AtomicString"* [ %3, %100 ], [ %168, %166 ], [ %12, %134 ], [ %12, %112 ], [ %165, %162 ], [ %12, %159 ]
  %171 = call i64 @_ZN5blink15VisitedLinkHashERKNS_4KURLERKN3WTF12AtomicStringE(%"class.blink::KURL"* dereferenceable(112) %105, %"class.WTF::AtomicString"* dereferenceable(8) %170) #4
  br label %172

172:                                              ; preds = %169, %33, %97
  %173 = phi i64 [ %171, %169 ], [ %36, %33 ], [ %99, %97 ]
  %174 = icmp eq i64 %173, %1
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #4
  br label %190

190:                                              ; preds = %189, %186, %172
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #4
  br i1 %174, label %191, label %193

191:                                              ; preds = %190
  %192 = bitcast %"class.blink::Node"* %15 to %"class.blink::Element"*
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %192, i32 16) #4
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %192, i32 17) #4
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %192, i32 22) #4
  call void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"* nonnull %192, i32 21) #4
  br label %193

193:                                              ; preds = %14, %190, %191
  %194 = load i32, i32* %16, align 8
  %195 = and i32 %194, 12
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %203

197:                                              ; preds = %193
  %198 = bitcast %"class.blink::Node"* %15 to %"class.blink::Element"*
  %199 = call %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"* nonnull %198) #4
  %200 = icmp eq %"class.blink::ShadowRoot"* %199, null
  br i1 %200, label %203, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.blink::ShadowRoot", %"class.blink::ShadowRoot"* %199, i64 0, i32 0, i32 0, i32 0
  call fastcc void @_ZN5blinkL33InvalidateStyleForLinkRecursivelyERNS_4NodeEm(%"class.blink::Node"* dereferenceable(64) %202, i64 %1)
  br label %203

203:                                              ; preds = %193, %201, %197
  %204 = load i32, i32* %16, align 8
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %212, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 1
  %209 = bitcast %"class.blink::Node"* %208 to %"class.blink::Node"**
  %210 = load %"class.blink::Node"*, %"class.blink::Node"** %209, align 8
  %211 = icmp eq %"class.blink::Node"* %210, null
  br i1 %211, label %212, label %218

212:                                              ; preds = %207, %203
  %213 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 5, i32 0, i32 0
  %214 = load %"class.blink::Node"*, %"class.blink::Node"** %213, align 8
  %215 = icmp eq %"class.blink::Node"* %214, null
  br i1 %215, label %216, label %218

216:                                              ; preds = %212
  %217 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %15) #4
  br label %218

218:                                              ; preds = %207, %212, %216
  %219 = phi %"class.blink::Node"* [ %217, %216 ], [ %214, %212 ], [ %210, %207 ]
  %220 = icmp eq %"class.blink::Node"* %219, null
  br i1 %220, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink16VisitedLinkState26DetermineLinkStateSlowCaseERKNS_7ElementE(%"class.blink::VisitedLinkState"*, %"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 48
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %65

8:                                                ; preds = %2
  %9 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %11 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %10, align 8
  %12 = icmp eq %"class.blink::ElementData"* %11, null
  br i1 %12, label %63, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 0, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %25, label %18

18:                                               ; preds = %13
  %19 = bitcast %"class.blink::ElementData"* %11 to %"class.blink::UniqueElementData"*
  %20 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 1, i32 1
  %21 = bitcast %"class.blink::Member.34"* %20 to %"class.blink::Attribute"**
  %22 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %19, i64 0, i32 2, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  br label %30

25:                                               ; preds = %13
  %26 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %11, i64 1
  %27 = bitcast %"class.blink::ElementData"* %26 to %"class.blink::Attribute"*
  %28 = lshr i32 %15, 1
  %29 = and i32 %28, 268435455
  br label %30

30:                                               ; preds = %25, %18
  %31 = phi %"class.blink::Attribute"* [ %27, %25 ], [ %22, %18 ]
  %32 = phi i32 [ %29, %25 ], [ %24, %18 ]
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %31, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %63, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %9, i64 0, i32 0, i32 0
  %38 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 3, i32 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %41

41:                                               ; preds = %56, %36
  %42 = phi %"class.blink::Attribute"* [ %31, %36 ], [ %57, %56 ]
  %43 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %44, %38
  br i1 %45, label %59, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %48, %49
  br i1 %50, label %51, label %56

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 4, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %53, %54
  br i1 %55, label %59, label %56

56:                                               ; preds = %51, %46
  %57 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 1
  %58 = icmp eq %"class.blink::Attribute"* %57, %34
  br i1 %58, label %63, label %41

59:                                               ; preds = %51, %41
  %60 = icmp eq %"class.blink::Attribute"* %42, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %42, i64 0, i32 1
  br label %68

63:                                               ; preds = %56, %59, %30, %8
  %64 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %68

65:                                               ; preds = %2
  %66 = bitcast %"class.blink::Element"* %1 to %"class.blink::SVGElement"*
  %67 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168) %66) #4
  br label %68

68:                                               ; preds = %61, %63, %65
  %69 = phi %"class.WTF::AtomicString"* [ %67, %65 ], [ %64, %63 ], [ %62, %61 ]
  %70 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %258, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %258, label %77

77:                                               ; preds = %73
  %78 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #4
  store i64 -6148914691236517206, i64* %3, align 8
  %79 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names5kATagE, align 8
  %80 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %81 = icmp eq %"class.blink::Element"* %1, null
  br i1 %81, label %168, label %82

82:                                               ; preds = %77
  %83 = load i32, i32* %4, align 8
  %84 = and i32 %83, 48
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %168

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %79, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %80, i64 1, i32 2
  %90 = bitcast %"class.blink::Member.2"* %89 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %91 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %91, i64 0, i32 3, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %94, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %93, %95
  br i1 %96, label %97, label %168

97:                                               ; preds = %86
  %98 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 1, i32 0, i32 0, i32 1
  %99 = bitcast i32* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %103, label %102

102:                                              ; preds = %97
  store i64 %100, i64* %3, align 8
  br label %246

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %105 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %104, align 8
  %106 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %105, i64 0, i32 2, i32 0, i32 0
  %107 = load %"class.blink::Document"*, %"class.blink::Document"** %106, align 8
  %108 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %107) #4
  %109 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %110 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %111 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %110, align 8
  %112 = icmp eq %"class.blink::ElementData"* %111, null
  br i1 %112, label %163, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %111, i64 0, i32 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %125, label %118

118:                                              ; preds = %113
  %119 = bitcast %"class.blink::ElementData"* %111 to %"class.blink::UniqueElementData"*
  %120 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %111, i64 1, i32 1
  %121 = bitcast %"class.blink::Member.34"* %120 to %"class.blink::Attribute"**
  %122 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %119, i64 0, i32 2, i32 0, i32 0, i32 2
  %124 = load i32, i32* %123, align 4
  br label %130

125:                                              ; preds = %113
  %126 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %111, i64 1
  %127 = bitcast %"class.blink::ElementData"* %126 to %"class.blink::Attribute"*
  %128 = lshr i32 %115, 1
  %129 = and i32 %128, 268435455
  br label %130

130:                                              ; preds = %125, %118
  %131 = phi %"class.blink::Attribute"* [ %127, %125 ], [ %122, %118 ]
  %132 = phi i32 [ %129, %125 ], [ %124, %118 ]
  %133 = zext i32 %132 to i64
  %134 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %131, i64 %133
  %135 = icmp eq i32 %132, 0
  br i1 %135, label %163, label %136

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %109, i64 0, i32 0, i32 0
  %138 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %138, i64 0, i32 3, i32 0, i32 0, i32 0
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %138, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %141

141:                                              ; preds = %156, %136
  %142 = phi %"class.blink::Attribute"* [ %131, %136 ], [ %157, %156 ]
  %143 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %142, i64 0, i32 0, i32 0, i32 0
  %144 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %143, align 8
  %145 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %144, %138
  br i1 %145, label %159, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %147, align 8
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %148, %149
  br i1 %150, label %151, label %156

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %144, i64 0, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %153, %154
  br i1 %155, label %159, label %156

156:                                              ; preds = %151, %146
  %157 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %142, i64 1
  %158 = icmp eq %"class.blink::Attribute"* %157, %134
  br i1 %158, label %163, label %141

159:                                              ; preds = %151, %141
  %160 = icmp eq %"class.blink::Attribute"* %142, null
  br i1 %160, label %163, label %161

161:                                              ; preds = %159
  %162 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %142, i64 0, i32 1
  br label %165

163:                                              ; preds = %156, %159, %130, %103
  %164 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %165

165:                                              ; preds = %163, %161
  %166 = phi %"class.WTF::AtomicString"* [ %164, %163 ], [ %162, %161 ]
  %167 = tail call i64 @_ZN5blink15VisitedLinkHashERKNS_4KURLERKN3WTF12AtomicStringE(%"class.blink::KURL"* dereferenceable(112) %108, %"class.WTF::AtomicString"* dereferenceable(8) %166) #4
  store i64 %167, i64* %99, align 8
  br label %243

168:                                              ; preds = %86, %82, %77
  %169 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %170 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %170, i64 0, i32 2, i32 0, i32 0
  %172 = load %"class.blink::Document"*, %"class.blink::Document"** %171, align 8
  %173 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"* %172) #4
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %174, null
  br i1 %175, label %176, label %240

176:                                              ; preds = %168
  %177 = load i32, i32* %4, align 8
  %178 = and i32 %177, 48
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %237

180:                                              ; preds = %176
  %181 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names9kHrefAttrE, align 8
  %182 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %183 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %182, align 8
  %184 = icmp eq %"class.blink::ElementData"* %183, null
  br i1 %184, label %235, label %185

185:                                              ; preds = %180
  %186 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %183, i64 0, i32 0, i32 0, i32 0
  %187 = load i32, i32* %186, align 4
  %188 = and i32 %187, 1
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %197, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.blink::ElementData"* %183 to %"class.blink::UniqueElementData"*
  %192 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %183, i64 1, i32 1
  %193 = bitcast %"class.blink::Member.34"* %192 to %"class.blink::Attribute"**
  %194 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %191, i64 0, i32 2, i32 0, i32 0, i32 2
  %196 = load i32, i32* %195, align 4
  br label %202

197:                                              ; preds = %185
  %198 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %183, i64 1
  %199 = bitcast %"class.blink::ElementData"* %198 to %"class.blink::Attribute"*
  %200 = lshr i32 %187, 1
  %201 = and i32 %200, 268435455
  br label %202

202:                                              ; preds = %197, %190
  %203 = phi %"class.blink::Attribute"* [ %199, %197 ], [ %194, %190 ]
  %204 = phi i32 [ %201, %197 ], [ %196, %190 ]
  %205 = zext i32 %204 to i64
  %206 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %203, i64 %205
  %207 = icmp eq i32 %204, 0
  br i1 %207, label %235, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %181, i64 0, i32 0, i32 0
  %210 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %209, align 8
  %211 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %210, i64 0, i32 3, i32 0, i32 0, i32 0
  %212 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %210, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %213

213:                                              ; preds = %228, %208
  %214 = phi %"class.blink::Attribute"* [ %203, %208 ], [ %229, %228 ]
  %215 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %214, i64 0, i32 0, i32 0, i32 0
  %216 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %215, align 8
  %217 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %216, %210
  br i1 %217, label %231, label %218

218:                                              ; preds = %213
  %219 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %216, i64 0, i32 3, i32 0, i32 0, i32 0
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %219, align 8
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %211, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %220, %221
  br i1 %222, label %223, label %228

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %216, i64 0, i32 4, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %212, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %225, %226
  br i1 %227, label %231, label %228

228:                                              ; preds = %223, %218
  %229 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %214, i64 1
  %230 = icmp eq %"class.blink::Attribute"* %229, %206
  br i1 %230, label %235, label %213

231:                                              ; preds = %223, %213
  %232 = icmp eq %"class.blink::Attribute"* %214, null
  br i1 %232, label %235, label %233

233:                                              ; preds = %231
  %234 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %214, i64 0, i32 1
  br label %240

235:                                              ; preds = %228, %231, %202, %180
  %236 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %240

237:                                              ; preds = %176
  %238 = bitcast %"class.blink::Element"* %1 to %"class.blink::SVGElement"*
  %239 = tail call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168) %238) #4
  br label %240

240:                                              ; preds = %237, %235, %233, %168
  %241 = phi %"class.WTF::AtomicString"* [ %69, %168 ], [ %239, %237 ], [ %236, %235 ], [ %234, %233 ]
  %242 = tail call i64 @_ZN5blink15VisitedLinkHashERKNS_4KURLERKN3WTF12AtomicStringE(%"class.blink::KURL"* dereferenceable(112) %173, %"class.WTF::AtomicString"* dereferenceable(8) %241) #4
  br label %243

243:                                              ; preds = %165, %240
  %244 = phi i64 [ %242, %240 ], [ %167, %165 ]
  store i64 %244, i64* %3, align 8
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %257, label %246

246:                                              ; preds = %102, %243
  %247 = getelementptr inbounds %"class.blink::VisitedLinkState", %"class.blink::VisitedLinkState"* %0, i64 0, i32 1, i32 0
  %248 = call { i64*, i8 } @_ZN3WTF9HashTableImmNS_17IdentityExtractorEN5blink12LinkHashHashENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKmRmEENS_18HashTableAddResultIS7_mEEOT0_OT1_(%"class.WTF::HashTable.361"* %247, i64* nonnull dereferenceable(8) %3, i64* nonnull dereferenceable(8) %3) #4
  %249 = call %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() #4
  %250 = load i64, i64* %3, align 8
  %251 = bitcast %"class.blink::Platform"* %249 to i1 (%"class.blink::Platform"*, i64)***
  %252 = load i1 (%"class.blink::Platform"*, i64)**, i1 (%"class.blink::Platform"*, i64)*** %251, align 8
  %253 = getelementptr inbounds i1 (%"class.blink::Platform"*, i64)*, i1 (%"class.blink::Platform"*, i64)** %252, i64 15
  %254 = load i1 (%"class.blink::Platform"*, i64)*, i1 (%"class.blink::Platform"*, i64)** %253, align 8
  %255 = call zeroext i1 %254(%"class.blink::Platform"* %249, i64 %250) #4
  br i1 %255, label %256, label %257

256:                                              ; preds = %246
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #4
  br label %258

257:                                              ; preds = %246, %243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #4
  br label %258

258:                                              ; preds = %68, %73, %256, %257
  %259 = phi i32 [ 1, %257 ], [ 2, %256 ], [ 0, %68 ], [ 2, %73 ]
  ret i32 %259
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::Platform"* @_ZN5blink8Platform7CurrentEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16VisitedLinkState5TraceEPNS_7VisitorE(%"class.blink::VisitedLinkState"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::VisitedLinkState"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #4
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

declare void @_ZN5blink7Element18PseudoStateChangedENS_11CSSSelector10PseudoTypeE(%"class.blink::Element"*, i32) local_unnamed_addr #2

declare %"class.blink::ShadowRoot"* @_ZNK5blink7Element13GetShadowRootEv(%"class.blink::Element"*) local_unnamed_addr #2

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink15SVGURIReference16LegacyHrefStringERKNS_10SVGElementE(%"class.blink::SVGElement"* dereferenceable(168)) local_unnamed_addr #2

declare i64 @_ZN5blink15VisitedLinkHashERKNS_4KURLERKN3WTF12AtomicStringE(%"class.blink::KURL"* dereferenceable(112), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink8Document7BaseURLEv(%"class.blink::Document"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64*, i8 } @_ZN3WTF9HashTableImmNS_17IdentityExtractorEN5blink12LinkHashHashENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKmRmEENS_18HashTableAddResultIS7_mEEOT0_OT1_(%"class.WTF::HashTable.361"*, i64* dereferenceable(8), i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.361", %"class.WTF::HashTable.361"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorEN5blink12LinkHashHashENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm(%"class.WTF::HashTable.361"* %0, i64* null)
  %9 = load i64*, i64** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i64* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.361", %"class.WTF::HashTable.361"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i64, i64* %1, align 8
  %17 = trunc i64 %16 to i32
  %18 = and i32 %14, %17
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i64, i64* %11, i64 %19
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %63, label %23

23:                                               ; preds = %10
  %24 = xor i32 %17, -1
  %25 = lshr i32 %17, 23
  %26 = add i32 %25, %24
  %27 = shl i32 %26, 12
  %28 = xor i32 %27, %26
  %29 = lshr i32 %28, 7
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 2
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 20
  %34 = xor i32 %33, %32
  %35 = or i32 %34, 1
  %36 = zext i32 %35 to i64
  br label %37

37:                                               ; preds = %23, %44
  %38 = phi i64 [ %21, %23 ], [ %52, %44 ]
  %39 = phi i64* [ %20, %23 ], [ %51, %44 ]
  %40 = phi i64* [ null, %23 ], [ %46, %44 ]
  %41 = phi i64 [ %19, %23 ], [ %50, %44 ]
  %42 = phi i64 [ 0, %23 ], [ %48, %44 ]
  %43 = icmp eq i64 %38, %16
  br i1 %43, label %77, label %44

44:                                               ; preds = %37
  %45 = icmp eq i64 %38, -1
  %46 = select i1 %45, i64* %39, i64* %40
  %47 = icmp eq i64 %42, 0
  %48 = select i1 %47, i64 %36, i64 %42
  %49 = add i64 %48, %41
  %50 = and i64 %49, %15
  %51 = getelementptr inbounds i64, i64* %11, i64 %50
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %37

54:                                               ; preds = %44
  %55 = icmp eq i64* %46, null
  br i1 %55, label %63, label %56

56:                                               ; preds = %54
  store i64 0, i64* %46, align 8
  %57 = getelementptr inbounds %"class.WTF::HashTable.361", %"class.WTF::HashTable.361"* %0, i64 0, i32 3
  %58 = load i32, i32* %57, align 8
  %59 = add i32 %58, 2147483647
  %60 = and i32 %59, 2147483647
  %61 = and i32 %58, -2147483648
  %62 = or i32 %60, %61
  store i32 %62, i32* %57, align 8
  br label %63

63:                                               ; preds = %10, %54, %56
  %64 = phi i64* [ %46, %56 ], [ %51, %54 ], [ %20, %10 ]
  %65 = load i64, i64* %2, align 8
  store i64 %65, i64* %64, align 8
  %66 = getelementptr inbounds %"class.WTF::HashTable.361", %"class.WTF::HashTable.361"* %0, i64 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 1
  store i32 %68, i32* %66, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable.361", %"class.WTF::HashTable.361"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, %68
  %72 = shl i32 %71, 1
  %73 = load i32, i32* %12, align 8
  %74 = icmp ult i32 %72, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %63
  %76 = tail call i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorEN5blink12LinkHashHashENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm(%"class.WTF::HashTable.361"* %0, i64* %64)
  br label %77

77:                                               ; preds = %37, %63, %75
  %78 = phi i8 [ 1, %63 ], [ 1, %75 ], [ 0, %37 ]
  %79 = phi i64* [ %64, %63 ], [ %76, %75 ], [ %39, %37 ]
  %80 = insertvalue { i64*, i8 } undef, i64* %79, 0
  %81 = insertvalue { i64*, i8 } %80, i8 %78, 1
  ret { i64*, i8 } %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorEN5blink12LinkHashHashENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE6ExpandEPm(%"class.WTF::HashTable.361"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.361", %"class.WTF::HashTable.361"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.361", %"class.WTF::HashTable.361"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #4
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #4
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #4
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* %22, i8* %23) #4
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #4
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.1, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #4
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #4
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #4
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameImEEPKcv, i64 0, i64 0)) #4
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #4
  %36 = bitcast i8* %35 to i64*
  %37 = call i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorEN5blink12LinkHashHashENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE8RehashToEPmjS8_(%"class.WTF::HashTable.361"* %0, i64* %36, i32 %32, i64* %1) #4
  ret i64* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZN3WTF9HashTableImmNS_17IdentityExtractorEN5blink12LinkHashHashENS_10HashTraitsImEES5_NS_18PartitionAllocatorEE8RehashToEPmjS8_(%"class.WTF::HashTable.361"*, i64*, i32, i64*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i64* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.361", %"class.WTF::HashTable.361"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.361", %"class.WTF::HashTable.361"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.361"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i64*, i64** %9, align 8
  %17 = ptrtoint i64* %16 to i64
  br label %31

18:                                               ; preds = %100
  %19 = bitcast %"class.WTF::HashTable.361"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %101, %18 ]
  %23 = phi i64* [ null, %10 ], [ %104, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #4
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.361", %"class.WTF::HashTable.361"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i64* %23

31:                                               ; preds = %13, %100
  %32 = phi i64 [ %17, %13 ], [ %101, %100 ]
  %33 = phi i32 [ %7, %13 ], [ %102, %100 ]
  %34 = phi i64* [ %16, %13 ], [ %103, %100 ]
  %35 = phi i64* [ null, %13 ], [ %104, %100 ]
  %36 = phi i32 [ 0, %13 ], [ %105, %100 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i64, i64* %34, i64 %37
  %39 = load i64, i64* %38, align 8
  %40 = add i64 %39, 1
  %41 = icmp ult i64 %40, 2
  br i1 %41, label %100, label %42

42:                                               ; preds = %31
  %43 = trunc i64 %39 to i32
  %44 = and i32 %14, %43
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i64, i64* %1, i64 %45
  %47 = ptrtoint i64* %46 to i64
  %48 = load i64, i64* %46, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %67, label %50

50:                                               ; preds = %42
  %51 = xor i32 %43, -1
  %52 = lshr i32 %43, 23
  %53 = add i32 %52, %51
  %54 = shl i32 %53, 12
  %55 = xor i32 %54, %53
  %56 = lshr i32 %55, 7
  %57 = xor i32 %56, %55
  %58 = shl i32 %57, 2
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 20
  %61 = xor i32 %60, %59
  %62 = or i32 %61, 1
  %63 = zext i32 %62 to i64
  br label %73

64:                                               ; preds = %80
  %65 = ptrtoint i64* %87 to i64
  %66 = inttoptr i64 %82 to i64*
  br label %67

67:                                               ; preds = %64, %42
  %68 = phi i64 [ %65, %64 ], [ %47, %42 ]
  %69 = phi i64* [ %66, %64 ], [ null, %42 ]
  %70 = icmp eq i64* %69, null
  %71 = ptrtoint i64* %69 to i64
  %72 = select i1 %70, i64 %68, i64 %71
  br label %91

73:                                               ; preds = %80, %50
  %74 = phi i64 [ 0, %50 ], [ %82, %80 ]
  %75 = phi i64 [ %48, %50 ], [ %89, %80 ]
  %76 = phi i64 [ %47, %50 ], [ %88, %80 ]
  %77 = phi i64 [ %45, %50 ], [ %86, %80 ]
  %78 = phi i64 [ 0, %50 ], [ %84, %80 ]
  %79 = icmp eq i64 %75, %39
  br i1 %79, label %91, label %80

80:                                               ; preds = %73
  %81 = icmp eq i64 %75, -1
  %82 = select i1 %81, i64 %76, i64 %74
  %83 = icmp eq i64 %78, 0
  %84 = select i1 %83, i64 %63, i64 %78
  %85 = add i64 %84, %77
  %86 = and i64 %85, %15
  %87 = getelementptr inbounds i64, i64* %1, i64 %86
  %88 = ptrtoint i64* %87 to i64
  %89 = load i64, i64* %87, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %64, label %73

91:                                               ; preds = %73, %67
  %92 = phi i64 [ %72, %67 ], [ %76, %73 ]
  %93 = inttoptr i64 %92 to i64*
  store i64 %39, i64* %93, align 8
  %94 = load i64*, i64** %9, align 8
  %95 = getelementptr inbounds i64, i64* %94, i64 %37
  %96 = icmp eq i64* %95, %3
  %97 = select i1 %96, i64* %93, i64* %35
  %98 = load i32, i32* %6, align 8
  %99 = ptrtoint i64* %94 to i64
  br label %100

100:                                              ; preds = %31, %91
  %101 = phi i64 [ %32, %31 ], [ %99, %91 ]
  %102 = phi i32 [ %33, %31 ], [ %98, %91 ]
  %103 = phi i64* [ %34, %31 ], [ %94, %91 ]
  %104 = phi i64* [ %35, %31 ], [ %97, %91 ]
  %105 = add i32 %36, 1
  %106 = icmp eq i32 %105, %102
  br i1 %106, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
