; ModuleID = '../../ui/gfx/skia_paint_util.cc'
source_filename = "../../ui/gfx/skia_paint_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.sk_sp.16 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.7, i32, %"class.absl::optional.17", %"class.std::__1::vector.22", %"class.std::__1::vector.29", %class.sk_sp.36, %class.sk_sp, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp, %class.sk_sp.7, %"class.gfx::Rect", i32, %class.sk_sp.9, %class.sk_sp.13, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.9 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.10" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.13 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%class.sk_sp.7 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%union.anon.21 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base.23" }
%"class.std::__1::__vector_base.23" = type { i32*, i32*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i32* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { float*, float*, %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { float* }
%class.sk_sp.36 = type { %class.SkPicture* }
%class.SkPicture = type opaque
%class.sk_sp = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.7, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>
%class.SkBitmap = type { %class.sk_sp.14, %class.SkPixmap, %class.sk_sp.15 }
%class.sk_sp.14 = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.15 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.44 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"*, %"class.std::__1::__compressed_pair.39" }
%"class.gfx::ShadowValue" = type <{ %"class.gfx::Vector2d", double, i32, [4 x i8] }>
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.gfx::ShadowValue"* }
%"class.SkLayerDrawLooper::Builder" = type <{ %"struct.SkLayerDrawLooper::Rec"*, %"struct.SkLayerDrawLooper::Rec"*, i32, [4 x i8] }>
%"struct.SkLayerDrawLooper::Rec" = type <{ %"struct.SkLayerDrawLooper::Rec"*, %class.SkPaint, %"struct.SkLayerDrawLooper::LayerInfo", [4 x i8] }>
%class.SkPaint = type <{ %class.sk_sp.45, %class.sk_sp.46, %class.sk_sp.47, %class.sk_sp.48, %class.sk_sp.49, %struct.SkRGBA4f, float, float, %union.anon.50, [4 x i8] }>
%class.sk_sp.45 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.46 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.47 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.48 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.49 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.50 = type { %struct.anon }
%struct.anon = type { i32 }
%"struct.SkLayerDrawLooper::LayerInfo" = type <{ i32, i32, %struct.SkPoint, i8, [3 x i8] }>

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx20CreateImageRepShaderERKNS_12ImageSkiaRepE10SkTileModeS3_RK8SkMatrix(%class.sk_sp.16* noalias sret, %"class.gfx::ImageSkiaRep"* dereferenceable(192), i32, i32, %class.SkMatrix* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 6
  %7 = load float, float* %6, align 8
  %8 = fcmp oeq float %7, 0.000000e+00
  %9 = select i1 %8, float 1.000000e+00, float %7
  tail call void @_ZN3gfx28CreateImageRepShaderForScaleERKNS_12ImageSkiaRepE10SkTileModeS3_RK8SkMatrixf(%class.sk_sp.16* sret %0, %"class.gfx::ImageSkiaRep"* dereferenceable(192) %1, i32 %2, i32 %3, %class.SkMatrix* dereferenceable(40) %4, float %9)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx28CreateImageRepShaderForScaleERKNS_12ImageSkiaRepE10SkTileModeS3_RK8SkMatrixf(%class.sk_sp.16* noalias sret, %"class.gfx::ImageSkiaRep"* dereferenceable(192), i32, i32, %class.SkMatrix* nocapture readonly dereferenceable(40), float) local_unnamed_addr #0 {
  %7 = alloca %class.SkMatrix, align 4
  %8 = alloca %class.sk_sp.7, align 8
  %9 = alloca { <2 x float>, <2 x float> }, align 8
  %10 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #5
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %12 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %10, i8* align 4 %12, i64 40, i1 false)
  %13 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* nonnull %7, float %5, float %5) #5
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 0
  %15 = load float, float* %14, align 4
  %16 = fdiv float %15, %5
  %17 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 0
  store float %16, float* %17, align 4
  %18 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %19 = load float, float* %18, align 4
  %20 = fdiv float %19, %5
  %21 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  store float %20, float* %21, align 4
  store i32 128, i32* %11, align 4
  %22 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 0, i32 15, i32 0
  %23 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %22, align 8
  %24 = icmp eq %"class.cc::PaintWorkletInput"* %23, null
  br i1 %24, label %25, label %59

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 0, i32 14, i32 0
  %27 = load %class.SkImage*, %class.SkImage** %26, align 8
  %28 = icmp eq %class.SkImage* %27, null
  br i1 %28, label %29, label %59

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 0, i32 5, i32 0
  %31 = load %"class.cc::TextureBacking"*, %"class.cc::TextureBacking"** %30, align 8
  %32 = icmp eq %"class.cc::TextureBacking"* %31, null
  br i1 %32, label %33, label %59

33:                                               ; preds = %29
  %34 = bitcast { <2 x float>, <2 x float> }* %9 to %struct.SkRect*
  call void @_ZNK3gfx12ImageSkiaRep14GetPaintRecordEv(%class.sk_sp.7* nonnull sret %8, %"class.gfx::ImageSkiaRep"* %1) #5
  %35 = bitcast { <2 x float>, <2 x float> }* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %35) #5
  %36 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 3, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 3, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = sitofp i32 %37 to float
  %41 = insertelement <2 x float> undef, float %40, i32 0
  %42 = sitofp i32 %39 to float
  %43 = insertelement <2 x float> %41, float %42, i32 1
  %44 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 0
  store <2 x float> zeroinitializer, <2 x float>* %44, align 8
  %45 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %9, i64 0, i32 1
  store <2 x float> %43, <2 x float>* %45, align 8
  call void @_ZN2cc11PaintShader15MakePaintRecordE5sk_spINS_13PaintOpBufferEERK6SkRect10SkTileModeS7_PK8SkMatrixNS0_15ScalingBehaviorE(%class.sk_sp.16* sret %0, %class.sk_sp.7* nonnull %8, %struct.SkRect* nonnull dereferenceable(16) %34, i32 %2, i32 %3, %class.SkMatrix* nonnull %7, i8 zeroext 0) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %35) #5
  %46 = getelementptr inbounds %class.sk_sp.7, %class.sk_sp.7* %8, i64 0, i32 0
  %47 = load %"class.cc::PaintOpBuffer"*, %"class.cc::PaintOpBuffer"** %46, align 8
  %48 = icmp eq %"class.cc::PaintOpBuffer"* %47, null
  br i1 %48, label %61, label %49

49:                                               ; preds = %33
  %50 = getelementptr inbounds %"class.cc::PaintOpBuffer", %"class.cc::PaintOpBuffer"* %47, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 -1 acq_rel
  %52 = icmp eq i32 %51, 1
  br i1 %52, label %53, label %61

53:                                               ; preds = %49
  %54 = bitcast %"class.cc::PaintOpBuffer"* %47 to %class.SkRefCntBase*
  %55 = bitcast %"class.cc::PaintOpBuffer"* %47 to void (%class.SkRefCntBase*)***
  %56 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %55, align 8
  %57 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %56, i64 2
  %58 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %57, align 8
  call void %58(%class.SkRefCntBase* nonnull %54) #5
  br label %61

59:                                               ; preds = %29, %6, %25
  %60 = getelementptr inbounds %"class.gfx::ImageSkiaRep", %"class.gfx::ImageSkiaRep"* %1, i64 0, i32 0
  call void @_ZN2cc11PaintShader9MakeImageERKNS_10PaintImageE10SkTileModeS4_PK8SkMatrixPK6SkRect(%class.sk_sp.16* sret %0, %"class.cc::PaintImage"* dereferenceable(104) %60, i32 %2, i32 %3, %class.SkMatrix* nonnull %7, %struct.SkRect* null) #5
  br label %61

61:                                               ; preds = %53, %49, %33, %59
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #2

declare void @_ZN2cc11PaintShader15MakePaintRecordE5sk_spINS_13PaintOpBufferEERK6SkRect10SkTileModeS7_PK8SkMatrixNS0_15ScalingBehaviorE(%class.sk_sp.16* sret, %class.sk_sp.7*, %struct.SkRect* dereferenceable(16), i32, i32, %class.SkMatrix*, i8 zeroext) local_unnamed_addr #2

declare void @_ZNK3gfx12ImageSkiaRep14GetPaintRecordEv(%class.sk_sp.7* sret, %"class.gfx::ImageSkiaRep"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN2cc11PaintShader9MakeImageERKNS_10PaintImageE10SkTileModeS4_PK8SkMatrixPK6SkRect(%class.sk_sp.16* sret, %"class.cc::PaintImage"* dereferenceable(104), i32, i32, %class.SkMatrix*, %struct.SkRect*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx20CreateGradientShaderERKNS_5PointES2_jj(%class.sk_sp.16* noalias sret, %"class.gfx::Point"* dereferenceable(8), %"class.gfx::Point"* dereferenceable(8), i32, i32) local_unnamed_addr #3 {
  %6 = alloca [2 x i32], align 4
  %7 = alloca [2 x %struct.SkPoint], align 16
  %8 = bitcast [2 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #5
  %9 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %11 = bitcast [2 x %struct.SkPoint]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #5
  %12 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 0
  %13 = tail call <2 x float> @_ZN3gfx14PointToSkPointERKNS_5PointE(%"class.gfx::Point"* dereferenceable(8) %1) #5
  %14 = bitcast [2 x %struct.SkPoint]* %7 to <2 x float>*
  store <2 x float> %13, <2 x float>* %14, align 16
  %15 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %7, i64 0, i64 1
  %16 = tail call <2 x float> @_ZN3gfx14PointToSkPointERKNS_5PointE(%"class.gfx::Point"* dereferenceable(8) %2) #5
  %17 = bitcast %struct.SkPoint* %15 to <2 x float>*
  store <2 x float> %16, <2 x float>* %17, align 8
  call void @_ZN2cc11PaintShader18MakeLinearGradientEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrixj(%class.sk_sp.16* sret %0, %struct.SkPoint* nonnull %12, i32* nonnull %9, float* null, i32 2, i32 0, i32 0, %class.SkMatrix* null, i32 0) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #5
  ret void
}

declare <2 x float> @_ZN3gfx14PointToSkPointERKNS_5PointE(%"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN2cc11PaintShader18MakeLinearGradientEPK7SkPointPKjPKfi10SkTileModejPK8SkMatrixj(%class.sk_sp.16* sret, %struct.SkPoint*, i32*, float*, i32, i32, i32, %class.SkMatrix*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx22CreateShadowDrawLooperERKNSt3__16vectorINS_11ShadowValueENS0_9allocatorIS2_EEEE(%class.sk_sp.44* noalias sret, %"class.std::__1::vector.37"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.SkLayerDrawLooper::Builder", align 8
  %4 = alloca %"struct.SkLayerDrawLooper::LayerInfo", align 4
  %5 = alloca %class.sk_sp.47, align 8
  %6 = alloca %class.sk_sp.48, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %1, i64 0, i32 0, i32 0
  %8 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.gfx::ShadowValue"*, %"class.gfx::ShadowValue"** %9, align 8
  %11 = icmp eq %"class.gfx::ShadowValue"* %8, %10
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.sk_sp.44, %class.sk_sp.44* %0, i64 0, i32 0
  store %class.SkDrawLooper* null, %class.SkDrawLooper** %13, align 8
  br label %90

14:                                               ; preds = %2
  %15 = bitcast %"class.SkLayerDrawLooper::Builder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #5
  %16 = bitcast %"class.SkLayerDrawLooper::Builder"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 24, i1 false)
  call void @_ZN17SkLayerDrawLooper7BuilderC1Ev(%"class.SkLayerDrawLooper::Builder"* nonnull %3) #5
  call void @_ZN17SkLayerDrawLooper7Builder8addLayerEff(%"class.SkLayerDrawLooper::Builder"* nonnull %3, float 0.000000e+00, float 0.000000e+00) #5
  %17 = bitcast %"struct.SkLayerDrawLooper::LayerInfo"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %17) #5
  %18 = getelementptr inbounds %"struct.SkLayerDrawLooper::LayerInfo", %"struct.SkLayerDrawLooper::LayerInfo"* %4, i64 0, i32 0
  store i32 -1431655766, i32* %18, align 4
  %19 = getelementptr inbounds %"struct.SkLayerDrawLooper::LayerInfo", %"struct.SkLayerDrawLooper::LayerInfo"* %4, i64 0, i32 1
  store i32 -1431655766, i32* %19, align 4
  %20 = getelementptr inbounds %"struct.SkLayerDrawLooper::LayerInfo", %"struct.SkLayerDrawLooper::LayerInfo"* %4, i64 0, i32 2, i32 0
  store float 0xFFFFFFFFE0000000, float* %20, align 4
  %21 = getelementptr inbounds %"struct.SkLayerDrawLooper::LayerInfo", %"struct.SkLayerDrawLooper::LayerInfo"* %4, i64 0, i32 2, i32 1
  store float 0xFFFFFFFFE0000000, float* %21, align 4
  %22 = getelementptr inbounds %"struct.SkLayerDrawLooper::LayerInfo", %"struct.SkLayerDrawLooper::LayerInfo"* %4, i64 0, i32 3
  %23 = bitcast i8* %22 to i32*
  store i32 -1431655766, i32* %23, align 4
  call void @_ZN17SkLayerDrawLooper9LayerInfoC1Ev(%"struct.SkLayerDrawLooper::LayerInfo"* nonnull %4) #5
  %24 = load i32, i32* %18, align 4
  %25 = or i32 %24, 40
  store i32 %25, i32* %18, align 4
  store i32 1, i32* %19, align 4
  %26 = bitcast %"class.gfx::ShadowValue"** %9 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.37"* %1 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %27, %29
  br i1 %30, label %34, label %31

31:                                               ; preds = %14
  %32 = getelementptr inbounds %class.sk_sp.47, %class.sk_sp.47* %5, i64 0, i32 0
  %33 = getelementptr inbounds %class.sk_sp.48, %class.sk_sp.48* %6, i64 0, i32 0
  br label %35

34:                                               ; preds = %83, %14
  call void @_ZN17SkLayerDrawLooper7Builder6detachEv(%class.sk_sp.44* sret %0, %"class.SkLayerDrawLooper::Builder"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %17) #5
  call void @_ZN17SkLayerDrawLooper7BuilderD1Ev(%"class.SkLayerDrawLooper::Builder"* nonnull %3) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #5
  br label %90

35:                                               ; preds = %31, %83
  %36 = phi i64 [ %29, %31 ], [ %86, %83 ]
  %37 = phi i64 [ 0, %31 ], [ %84, %83 ]
  %38 = inttoptr i64 %36 to %"class.gfx::ShadowValue"*
  %39 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %38, i64 %37, i32 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = sitofp i32 %40 to float
  %42 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %38, i64 %37, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sitofp i32 %43 to float
  store float %41, float* %20, align 4
  store float %44, float* %21, align 4
  %45 = call %class.SkPaint* @_ZN17SkLayerDrawLooper7Builder8addLayerERKNS_9LayerInfoE(%"class.SkLayerDrawLooper::Builder"* nonnull %3, %"struct.SkLayerDrawLooper::LayerInfo"* nonnull dereferenceable(20) %4) #5
  %46 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %38, i64 %37, i32 1
  %47 = load double, double* %46, align 8
  %48 = fmul double %47, 5.000000e-01
  %49 = fcmp ogt double %48, 0.000000e+00
  br i1 %49, label %50, label %54

50:                                               ; preds = %35
  %51 = fmul double %48, 0x3FD279A6C0000000
  %52 = fadd double %51, 5.000000e-01
  %53 = fptrunc double %52 to float
  br label %54

54:                                               ; preds = %35, %50
  %55 = phi float [ %53, %50 ], [ 0.000000e+00, %35 ]
  call void @_ZN12SkMaskFilter8MakeBlurE11SkBlurStylefb(%class.sk_sp.47* nonnull sret %5, i32 0, float %55, i1 zeroext true) #5
  call void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint* %45, %class.sk_sp.47* nonnull %5) #5
  %56 = load %class.SkMaskFilter*, %class.SkMaskFilter** %32, align 8
  %57 = icmp eq %class.SkMaskFilter* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %class.SkMaskFilter, %class.SkMaskFilter* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = bitcast %class.SkMaskFilter* %56 to %class.SkRefCntBase*
  %64 = bitcast %class.SkMaskFilter* %56 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  call void %67(%class.SkRefCntBase* nonnull %63) #5
  br label %68

68:                                               ; preds = %54, %58, %62
  %69 = getelementptr inbounds %"class.gfx::ShadowValue", %"class.gfx::ShadowValue"* %38, i64 %37, i32 2
  %70 = load i32, i32* %69, align 8
  call void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.48* nonnull sret %6, i32 %70, i32 5) #5
  call void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint* %45, %class.sk_sp.48* nonnull %6) #5
  %71 = load %class.SkColorFilter*, %class.SkColorFilter** %33, align 8
  %72 = icmp eq %class.SkColorFilter* %71, null
  br i1 %72, label %83, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %class.SkColorFilter, %class.SkColorFilter* %71, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw add i32* %74, i32 -1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %83

77:                                               ; preds = %73
  %78 = bitcast %class.SkColorFilter* %71 to %class.SkRefCntBase*
  %79 = bitcast %class.SkColorFilter* %71 to void (%class.SkRefCntBase*)***
  %80 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %79, align 8
  %81 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, i64 2
  %82 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %81, align 8
  call void %82(%class.SkRefCntBase* nonnull %78) #5
  br label %83

83:                                               ; preds = %68, %73, %77
  %84 = add nuw i64 %37, 1
  %85 = load i64, i64* %26, align 8
  %86 = load i64, i64* %28, align 8
  %87 = sub i64 %85, %86
  %88 = sdiv exact i64 %87, 24
  %89 = icmp ult i64 %84, %88
  br i1 %89, label %35, label %34

90:                                               ; preds = %34, %12
  ret void
}

declare void @_ZN17SkLayerDrawLooper7BuilderC1Ev(%"class.SkLayerDrawLooper::Builder"*) unnamed_addr #2

declare void @_ZN17SkLayerDrawLooper9LayerInfoC1Ev(%"struct.SkLayerDrawLooper::LayerInfo"*) unnamed_addr #2

declare %class.SkPaint* @_ZN17SkLayerDrawLooper7Builder8addLayerERKNS_9LayerInfoE(%"class.SkLayerDrawLooper::Builder"*, %"struct.SkLayerDrawLooper::LayerInfo"* dereferenceable(20)) local_unnamed_addr #2

declare void @_ZN7SkPaint13setMaskFilterE5sk_spI12SkMaskFilterE(%class.SkPaint*, %class.sk_sp.47*) local_unnamed_addr #2

declare void @_ZN12SkMaskFilter8MakeBlurE11SkBlurStylefb(%class.sk_sp.47* sret, i32, float, i1 zeroext) local_unnamed_addr #2

declare void @_ZN7SkPaint14setColorFilterE5sk_spI13SkColorFilterE(%class.SkPaint*, %class.sk_sp.48*) local_unnamed_addr #2

declare void @_ZN14SkColorFilters5BlendEj11SkBlendMode(%class.sk_sp.48* sret, i32, i32) local_unnamed_addr #2

declare void @_ZN17SkLayerDrawLooper7Builder6detachEv(%class.sk_sp.44* sret, %"class.SkLayerDrawLooper::Builder"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN17SkLayerDrawLooper7BuilderD1Ev(%"class.SkLayerDrawLooper::Builder"*) unnamed_addr #4

declare void @_ZN17SkLayerDrawLooper7Builder8addLayerEff(%"class.SkLayerDrawLooper::Builder"*, float, float) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
