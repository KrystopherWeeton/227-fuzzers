; ModuleID = '../../third_party/skia/src/core/SkPath.cpp'
source_filename = "../../third_party/skia/src/core/SkPath.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkMatrix = type { [9 x float], i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"class.SkPath::Iter" = type <{ %struct.SkPoint*, i8*, i8*, float*, %struct.SkPoint, %struct.SkPoint, i8, i8, i8, [5 x i8] }>
%class.ContourIter = type <{ i32, [4 x i8], %struct.SkPoint*, i8*, i8*, float*, i8, [7 x i8] }>
%struct.SkConic = type { [3 x %struct.SkPoint], float }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.SkPathRef::Editor" = type { %class.SkPathRef* }
%class.SkAutoPathBoundsUpdate = type <{ %class.SkPath*, %struct.SkRect, i8, i8, i8, [5 x i8] }>
%class.SkPath_RectPointIterator = type { %class.SkPath_PointIterator }
%class.SkPath_PointIterator = type { [4 x %struct.SkPoint], i32, i32 }
%class.SkPath_RRectPointIterator = type { %class.SkPath_PointIterator.15 }
%class.SkPath_PointIterator.15 = type { [8 x %struct.SkPoint], i32, i32 }
%class.SkPath_OvalPointIterator = type { %class.SkPath_PointIterator }
%class.SkTLazy = type { [16 x i8], %class.SkPath* }
%struct.Rec = type { %class.SkPathBuilder, %struct.SkPoint }
%class.SkPathBuilder = type { %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, i8, i32, %struct.SkPoint, i8, i32, i32, i8, i32 }
%"class.SkPath::RawIter" = type <{ %"class.SkPath::RangeIter", %"class.SkPath::RangeIter", float, [4 x i8] }>
%"class.SkPath::RangeIter" = type { i8*, %struct.SkPoint*, float* }
%class.SkWStream = type { i32 (...)** }
%class.SkString = type { %class.sk_sp.23 }
%class.sk_sp.23 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkEdgeClipper = type <{ %struct.SkPoint*, i32*, i8, [3 x i8], [54 x %struct.SkPoint], [18 x i32], [4 x i8] }>

$_ZN22SkAutoPathBoundsUpdateC2EP6SkPathRK6SkRect = comdat any

$_ZN7SkTLazyI6SkPathE3setERKS0_ = comdat any

$_ZN12Convexicator6BySignEPK7SkPointi = comdat any

$_ZZN10SkPathPriv9PtsInVerbEjE10gPtsInVerb = comdat any

$_ZZN10SkPathPriv22OppositeFirstDirectionE20SkPathFirstDirectionE12gOppositeDir = comdat any

@.str = private unnamed_addr constant [8 x i8] c"Winding\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"EvenOdd\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"InverseWinding\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"InverseEvenOdd\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"path.setFillType(SkPathFillType::k%s);\0A\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"path.moveTo\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"path.lineTo\00", align 1
@.str.7 = private unnamed_addr constant [12 x i8] c"path.quadTo\00", align 1
@.str.8 = private unnamed_addr constant [13 x i8] c"path.conicTo\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"path.cubicTo\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"path.close();\0A\00", align 1
@.str.11 = private unnamed_addr constant [43 x i8] c"../../third_party/skia/src/core/SkPath.cpp\00", align 1
@.str.12 = private unnamed_addr constant [43 x i8] c"  path: UNKNOWN VERB %d, aborting dump...\0A\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"// fBoundsIsDirty = %s\0A\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"// fGenerationID = %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"// fSegmentMask = %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"// fIsOval = %s\0A\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"// fIsRRect = %s\0A\00", align 1
@.str.19 = private unnamed_addr constant [33 x i8] c"const SkPoint path_points[] = {\0A\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"    { \00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.22 = private unnamed_addr constant [5 x i8] c" },\0A\00", align 1
@.str.23 = private unnamed_addr constant [4 x i8] c"};\0A\00", align 1
@.str.24 = private unnamed_addr constant [5 x i8] c"Move\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"Line\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"Quad\00", align 1
@.str.27 = private unnamed_addr constant [6 x i8] c"Conic\00", align 1
@.str.28 = private unnamed_addr constant [6 x i8] c"Cubic\00", align 1
@.str.29 = private unnamed_addr constant [6 x i8] c"Close\00", align 1
@.str.30 = private unnamed_addr constant [36 x i8] c"const uint8_t path_verbs[] = {\0A    \00", align 1
@.str.31 = private unnamed_addr constant [27 x i8] c"(uint8_t)SkPathVerb::k%s, \00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"\0A};\0A\00", align 1
@.str.33 = private unnamed_addr constant [38 x i8] c"const SkScalar path_conics[] = {\0A    \00", align 1
@_ZZNK6SkPath10dumpArraysEP9SkWStreambE13gFillTypeStrs = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i32 0, i32 0)], align 16
@.str.34 = private unnamed_addr constant [69 x i8] c"SkPath path = SkPath::Make(path_points, %d, path_verbs, %d, %s, %d,\0A\00", align 1
@.str.35 = private unnamed_addr constant [12 x i8] c"path_conics\00", align 1
@.str.36 = private unnamed_addr constant [8 x i8] c"nullptr\00", align 1
@.str.37 = private unnamed_addr constant [54 x i8] c"                           SkPathFillType::k%s, %s);\0A\00", align 1
@.str.38 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@_ZZN10SkPathPriv9PtsInVerbEjE10gPtsInVerb = linkonce_odr hidden local_unnamed_addr constant [7 x i8] c"\01\01\02\02\03\00\00", comdat, align 1
@.str.39 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"2 == count\00", align 1
@_ZN8SkMatrix12gMapPtsProcsE = external local_unnamed_addr constant [0 x void (%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32)*], align 8
@_ZZN10SkPathPriv22OppositeFirstDirectionE20SkPathFirstDirectionE12gOppositeDir = linkonce_odr hidden local_unnamed_addr constant [3 x i32] [i32 1, i32 0, i32 2], comdat, align 4
@.str.41 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.42 = private unnamed_addr constant [3 x i8] c");\00", align 1
@.str.43 = private unnamed_addr constant [6 x i8] c"  // \00", align 1
@.str.44 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@.str.47 = private unnamed_addr constant [30 x i8] c"SkBits2Float(0x%08X) /* %g */\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"%g\00", align 1
@.str.50 = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.51 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.52 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1
@__const._ZL4clipRK6SkPathRK11SkHalfPlane.rec = private unnamed_addr constant { { %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 }, %struct.SkPoint } { { %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 } { %class.SkTDArray { %struct.SkPoint* inttoptr (i64 -6148914691236517206 to %struct.SkPoint*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.1 { i8* inttoptr (i64 -6148914691236517206 to i8*), i32 -1431655766, i32 -1431655766 }, %class.SkTDArray.2 { float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766 }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766 }, %struct.SkPoint { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 } }, align 8
@switch.table._ZNK6SkPath16computeConvexityEv = private unnamed_addr constant [6 x i64] [i64 0, i64 -1, i64 -1, i64 -1, i64 -1, i64 -1], align 8

@_ZN6SkPathC1Ev = hidden unnamed_addr alias void (%class.SkPath*), void (%class.SkPath*)* @_ZN6SkPathC2Ev
@_ZN6SkPathC1E5sk_spI9SkPathRefE14SkPathFillTypeb15SkPathConvexity20SkPathFirstDirection = hidden unnamed_addr alias void (%class.SkPath*, %class.sk_sp*, i32, i1, i32, i32), void (%class.SkPath*, %class.sk_sp*, i32, i1, i32, i32)* @_ZN6SkPathC2E5sk_spI9SkPathRefE14SkPathFillTypeb15SkPathConvexity20SkPathFirstDirection
@_ZN6SkPathC1ERKS_ = hidden unnamed_addr alias void (%class.SkPath*, %class.SkPath*), void (%class.SkPath*, %class.SkPath*)* @_ZN6SkPathC2ERKS_
@_ZN6SkPathD1Ev = hidden unnamed_addr alias void (%class.SkPath*), void (%class.SkPath*)* @_ZN6SkPathD2Ev
@_ZN6SkPath4IterC1Ev = hidden unnamed_addr alias void (%"class.SkPath::Iter"*), void (%"class.SkPath::Iter"*)* @_ZN6SkPath4IterC2Ev
@_ZN6SkPath4IterC1ERKS_b = hidden unnamed_addr alias void (%"class.SkPath::Iter"*, %class.SkPath*, i1), void (%"class.SkPath::Iter"*, %class.SkPath*, i1)* @_ZN6SkPath4IterC2ERKS_b
@_ZN11ContourIterC1ERK9SkPathRef = hidden unnamed_addr alias void (%class.ContourIter*, %class.SkPathRef*), void (%class.ContourIter*, %class.SkPathRef*)* @_ZN11ContourIterC2ERK9SkPathRef

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPathC2Ev(%class.SkPath* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  store %class.SkPathRef* %2, %class.SkPathRef** %3, align 8
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 -1, i32* %4, align 8
  %5 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 2
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %7 monotonic, align 1
  %8 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %8 monotonic, align 1
  %9 = and i8 %6, -8
  store i8 %9, i8* %5, align 2
  ret void
}

declare %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6SkPath11resetFieldsEv(%class.SkPath* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 -1, i32* %2, align 8
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %4 = load i8, i8* %3, align 2
  %5 = and i8 %4, -4
  store i8 %5, i8* %3, align 2
  %6 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %6 monotonic, align 1
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %7 monotonic, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6SkPathC2E5sk_spI9SkPathRefE14SkPathFillTypeb15SkPathConvexity20SkPathFirstDirection(%class.SkPath* nocapture, %class.sk_sp* nocapture, i32, i1 zeroext, i32, i32) unnamed_addr #2 align 2 {
  %7 = zext i1 %3 to i8
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %9 = bitcast %class.sk_sp* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %class.SkPathRef* null, %class.SkPathRef** %8, align 8
  %11 = bitcast %class.SkPath* %0 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 -1, i32* %12, align 8
  %13 = trunc i32 %4 to i8
  %14 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 %13, i8* %14, align 1
  %15 = trunc i32 %5 to i8
  %16 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 %15, i8* %16, align 1
  %17 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %18 = trunc i32 %2 to i8
  %19 = load i8, i8* %17, align 2
  %20 = and i8 %18, 3
  %21 = and i8 %19, -8
  %22 = shl nuw nsw i8 %7, 2
  %23 = or i8 %22, %20
  %24 = or i8 %23, %21
  store i8 %24, i8* %17, align 2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6SkPath12setConvexityE15SkPathConvexity(%class.SkPath* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = trunc i32 %1 to i8
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %3, i8* %4 monotonic, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK6SkPath17setFirstDirectionE20SkPathFirstDirection(%class.SkPath* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = trunc i32 %1 to i8
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %3, i8* %4 monotonic, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6SkPathC2ERKS_(%class.SkPath* nocapture, %class.SkPath* nocapture readonly dereferenceable(16)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 monotonic
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  store %class.SkPathRef* %4, %class.SkPathRef** %7, align 8
  %8 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %9, i32* %10, align 8
  %11 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %12 = load i8, i8* %11, align 2
  %13 = and i8 %12, 3
  %14 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %15 = load i8, i8* %14, align 2
  %16 = and i8 %15, -4
  %17 = or i8 %16, %13
  store i8 %17, i8* %14, align 2
  %18 = load i8, i8* %11, align 2
  %19 = and i8 %18, 4
  %20 = and i8 %17, -5
  %21 = or i8 %20, %19
  store i8 %21, i8* %14, align 2
  %22 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i8, i8* %22 monotonic, align 1
  %24 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %23, i8* %24 monotonic, align 1
  %25 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i8, i8* %25 monotonic, align 1
  %27 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %26, i8* %27 monotonic, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6SkPath10copyFieldsERKS_(%class.SkPath* nocapture, %class.SkPath* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %4, i32* %5, align 8
  %6 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %7 = load i8, i8* %6, align 2
  %8 = and i8 %7, 3
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %10 = load i8, i8* %9, align 2
  %11 = and i8 %10, -4
  %12 = or i8 %11, %8
  store i8 %12, i8* %9, align 2
  %13 = load i8, i8* %6, align 2
  %14 = and i8 %13, 4
  %15 = and i8 %12, -5
  %16 = or i8 %15, %14
  store i8 %16, i8* %9, align 2
  %17 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i8, i8* %17 monotonic, align 1
  %19 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %18, i8* %19 monotonic, align 1
  %20 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i8, i8* %20 monotonic, align 1
  %22 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %21, i8* %22 monotonic, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPathD2Ev(%class.SkPath* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = icmp eq %class.SkPathRef* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %11

9:                                                ; preds = %5
  tail call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %3) #24
  %10 = bitcast %class.SkPathRef* %3 to i8*
  tail call void @_ZdlPv(i8* %10) #25
  br label %11

11:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPathaSERKS_(%class.SkPath* returned, %class.SkPath* readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.SkPath* %0, %1
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %6 = load %class.SkPathRef*, %class.SkPathRef** %5, align 8
  %7 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %10 = load %class.SkPathRef*, %class.SkPathRef** %9, align 8
  store %class.SkPathRef* %6, %class.SkPathRef** %9, align 8
  %11 = icmp eq %class.SkPathRef* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  tail call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %10) #24
  %17 = bitcast %class.SkPathRef* %10 to i8*
  tail call void @_ZdlPv(i8* %17) #25
  br label %18

18:                                               ; preds = %4, %12, %16
  %19 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %23 = load i8, i8* %22, align 2
  %24 = and i8 %23, 3
  %25 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %26 = load i8, i8* %25, align 2
  %27 = and i8 %26, -4
  %28 = or i8 %27, %24
  store i8 %28, i8* %25, align 2
  %29 = load i8, i8* %22, align 2
  %30 = and i8 %29, 4
  %31 = and i8 %28, -5
  %32 = or i8 %31, %30
  store i8 %32, i8* %25, align 2
  %33 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i8, i8* %33 monotonic, align 1
  %35 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %34, i8* %35 monotonic, align 1
  %36 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i8, i8* %36 monotonic, align 1
  %38 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %37, i8* %38 monotonic, align 1
  br label %39

39:                                               ; preds = %2, %18
  ret %class.SkPath* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK6SkPath17getFirstDirectionEv(%class.SkPath* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 monotonic, align 1
  %4 = zext i8 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZeqRK6SkPathS1_(%class.SkPath* readonly dereferenceable(16), %class.SkPath* readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = icmp eq %class.SkPath* %0, %1
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %6 = load i8, i8* %5, align 2
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %8 = load i8, i8* %7, align 2
  %9 = xor i8 %8, %6
  %10 = and i8 %9, 3
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %14 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %15 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %16 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %17 = tail call zeroext i1 @_ZNK9SkPathRefeqERKS_(%class.SkPathRef* %14, %class.SkPathRef* dereferenceable(120) %16) #24
  br label %18

18:                                               ; preds = %4, %12, %2
  %19 = phi i1 [ true, %2 ], [ false, %4 ], [ %17, %12 ]
  ret i1 %19
}

declare zeroext i1 @_ZNK9SkPathRefeqERKS_(%class.SkPathRef*, %class.SkPathRef* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6SkPath4swapERS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %class.SkPath* %0, %1
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = bitcast %class.SkPath* %0 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %class.SkPath* %1 to i64*
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  store i64 %6, i64* %7, align 8
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 1
  %11 = load i32, i32* %9, align 4
  %12 = load i32, i32* %10, align 4
  store i32 %12, i32* %9, align 4
  store i32 %11, i32* %10, align 4
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %14 = load i8, i8* %13, align 2
  %15 = and i8 %14, 3
  %16 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %17 = load i8, i8* %16, align 2
  %18 = and i8 %17, 3
  %19 = and i8 %14, -4
  %20 = or i8 %18, %19
  store i8 %20, i8* %13, align 2
  %21 = load i8, i8* %16, align 2
  %22 = and i8 %21, -4
  %23 = or i8 %22, %15
  store i8 %23, i8* %16, align 2
  %24 = load i8, i8* %13, align 2
  %25 = and i8 %24, 4
  %26 = and i8 %21, 4
  %27 = and i8 %24, -5
  %28 = or i8 %27, %26
  store i8 %28, i8* %13, align 2
  %29 = load i8, i8* %16, align 2
  %30 = and i8 %29, -5
  %31 = or i8 %30, %25
  store i8 %31, i8* %16, align 2
  %32 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i8, i8* %32 monotonic, align 1
  %34 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i8, i8* %34 monotonic, align 1
  store atomic i8 %35, i8* %32 monotonic, align 1
  store atomic i8 %33, i8* %34 monotonic, align 1
  %36 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i8, i8* %36 monotonic, align 1
  %38 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i8, i8* %38 monotonic, align 1
  store atomic i8 %39, i8* %36 monotonic, align 1
  store atomic i8 %37, i8* %38 monotonic, align 1
  br label %40

40:                                               ; preds = %2, %4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath16isInterpolatableERKS_(%class.SkPath* nocapture readonly, %class.SkPath* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %8 = load %class.SkPathRef*, %class.SkPathRef** %7, align 8
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 3, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %6, %10
  br i1 %11, label %12, label %47

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 4, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 4, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %18, label %47

18:                                               ; preds = %12
  %19 = icmp eq i32 %14, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 4, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 4, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = sext i32 %14 to i64
  %26 = tail call i32 @bcmp(i8* %22, i8* %24, i64 %25) #24
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %47

28:                                               ; preds = %18, %20
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 5
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 5
  %31 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 5, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 5, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %32, %34
  br i1 %35, label %36, label %47

36:                                               ; preds = %28
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %36
  %39 = bitcast %class.SkTDArray.2* %29 to i8**
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %class.SkTDArray.2* %30 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = sext i32 %32 to i64
  %44 = shl nsw i64 %43, 2
  %45 = tail call i32 @bcmp(i8* %40, i8* %42, i64 %44) #24
  %46 = icmp eq i32 %45, 0
  br label %47

47:                                               ; preds = %12, %38, %36, %28, %20, %2
  %48 = phi i1 [ false, %20 ], [ false, %2 ], [ false, %28 ], [ true, %36 ], [ %46, %38 ], [ false, %12 ]
  ret i1 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath11interpolateERKS_fPS_(%class.SkPath*, %class.SkPath* nocapture readonly dereferenceable(16), float, %class.SkPath*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkMatrix, align 16
  %6 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %7 = load %class.SkPathRef*, %class.SkPathRef** %6, align 8
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 3, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %11 = load %class.SkPathRef*, %class.SkPathRef** %10, align 8
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 3, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %9, %13
  br i1 %14, label %15, label %46

15:                                               ; preds = %4
  %16 = icmp eq i32 %9, 0
  br i1 %16, label %46, label %17

17:                                               ; preds = %15
  %18 = tail call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24
  %19 = getelementptr inbounds %class.SkPath, %class.SkPath* %3, i64 0, i32 0, i32 0
  %20 = load %class.SkPathRef*, %class.SkPathRef** %19, align 8
  store %class.SkPathRef* %18, %class.SkPathRef** %19, align 8
  %21 = icmp eq %class.SkPathRef* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 -1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  tail call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %20) #24
  %27 = bitcast %class.SkPathRef* %20 to i8*
  tail call void @_ZdlPv(i8* %27) #25
  br label %28

28:                                               ; preds = %17, %22, %26
  %29 = getelementptr inbounds %class.SkPath, %class.SkPath* %3, i64 0, i32 1
  store i32 -1, i32* %29, align 8
  %30 = getelementptr inbounds %class.SkPath, %class.SkPath* %3, i64 0, i32 4
  %31 = load i8, i8* %30, align 2
  %32 = and i8 %31, -4
  store i8 %32, i8* %30, align 2
  %33 = getelementptr inbounds %class.SkPath, %class.SkPath* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %33 monotonic, align 1
  %34 = getelementptr inbounds %class.SkPath, %class.SkPath* %3, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %34 monotonic, align 1
  %35 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #24
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %37 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %37, align 16
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %39, align 16
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %40, align 16
  store i32 16, i32* %36, align 4
  %41 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %5) #24
  %42 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath* %3, %class.SkPath* dereferenceable(16) %0, %class.SkMatrix* nonnull dereferenceable(40) %5, i32 0) #24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #24
  %43 = load %class.SkPathRef*, %class.SkPathRef** %6, align 8
  %44 = load %class.SkPathRef*, %class.SkPathRef** %10, align 8
  %45 = load %class.SkPathRef*, %class.SkPathRef** %19, align 8
  call void @_ZNK9SkPathRef11interpolateERKS_fPS_(%class.SkPathRef* %43, %class.SkPathRef* dereferenceable(120) %44, float %2, %class.SkPathRef* %45) #24
  br label %46

46:                                               ; preds = %15, %4, %28
  %47 = phi i1 [ true, %28 ], [ false, %4 ], [ true, %15 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath5resetEv(%class.SkPath* returned) local_unnamed_addr #0 align 2 {
  %2 = tail call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  store %class.SkPathRef* %2, %class.SkPathRef** %3, align 8
  %5 = icmp eq %class.SkPathRef* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 -1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  tail call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %4) #24
  %11 = bitcast %class.SkPathRef* %4 to i8*
  tail call void @_ZdlPv(i8* %11) #25
  br label %12

12:                                               ; preds = %1, %6, %10
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 -1, i32* %13, align 8
  %14 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %15 = load i8, i8* %14, align 2
  %16 = and i8 %15, -4
  store i8 %16, i8* %14, align 2
  %17 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %17 monotonic, align 1
  %18 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %18 monotonic, align 1
  ret %class.SkPath* %0
}

declare void @_ZNK9SkPathRef11interpolateERKS_fPS_(%class.SkPathRef*, %class.SkPathRef* dereferenceable(120), float, %class.SkPathRef*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath26conservativelyContainsRectERK6SkRect(%class.SkPath*, %struct.SkRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = alloca %struct.SkConic, align 4
  %4 = alloca [5 x %struct.SkPoint], align 16
  %5 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load atomic i8, i8* %5 monotonic, align 1
  %7 = zext i8 %6 to i32
  %8 = icmp eq i8 %6, 2
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = tail call i32 @_ZNK6SkPath16computeConvexityEv(%class.SkPath* %0) #24
  br label %11

11:                                               ; preds = %2, %9
  %12 = phi i32 [ %10, %9 ], [ %7, %2 ]
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %411

14:                                               ; preds = %11
  %15 = tail call i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* dereferenceable(16) %0)
  %16 = icmp eq i32 %15, 2
  br i1 %16, label %411, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %19 = load %class.SkPathRef*, %class.SkPathRef** %18, align 8
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 4, i32 0
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 9
  %24 = load i8, i8* %23, align 8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %30

26:                                               ; preds = %17
  %27 = inttoptr i64 %22 to i8*
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 10
  %29 = load i8, i8* %28, align 1, !range !2
  br label %42

30:                                               ; preds = %17
  %31 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 1
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 3, i32 0
  %33 = load %struct.SkPoint*, %struct.SkPoint** %32, align 8
  %34 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 3, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %31, %struct.SkPoint* %33, i32 %35) #24
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 10
  %38 = zext i1 %36 to i8
  store i8 %38, i8* %37, align 1
  store i8 0, i8* %23, align 8
  %39 = load %class.SkPathRef*, %class.SkPathRef** %18, align 8
  %40 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %39, i64 0, i32 4, i32 0
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %30, %26
  %43 = phi i8* [ %27, %26 ], [ %41, %30 ]
  %44 = phi %class.SkPathRef* [ %19, %26 ], [ %39, %30 ]
  %45 = phi i8 [ %29, %26 ], [ %38, %30 ]
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %54, label %47

47:                                               ; preds = %42
  %48 = icmp eq i8* %43, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %47
  %50 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %44, i64 0, i32 4, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %43, i64 %52
  br label %54

54:                                               ; preds = %42, %47, %49
  %55 = phi i8* [ %53, %49 ], [ null, %47 ], [ %43, %42 ]
  %56 = inttoptr i64 %22 to i8*
  %57 = icmp eq i8* %55, %56
  br i1 %57, label %411, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %44, i64 0, i32 5, i32 0
  %60 = bitcast float** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %44, i64 0, i32 3, i32 0
  %63 = bitcast %struct.SkPoint** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i32 %15, 0
  %66 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %67 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %68 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %69 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %70 = bitcast %struct.SkConic* %3 to i8*
  %71 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %3, i64 0, i32 1
  %72 = bitcast float* %71 to i32*
  %73 = bitcast [5 x %struct.SkPoint]* %4 to i8*
  %74 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 0
  %75 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 0, i32 0
  %76 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 2, i32 0
  %77 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 0, i32 1
  %78 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 2, i32 1
  %79 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 4, i32 0
  %80 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %4, i64 0, i64 4, i32 1
  %81 = bitcast %struct.SkConic* %3 to i8*
  br label %82

82:                                               ; preds = %58, %341
  %83 = phi i8* [ %56, %58 ], [ %342, %341 ]
  %84 = phi i32 [ 0, %58 ], [ %343, %341 ]
  %85 = phi i32 [ -1, %58 ], [ %344, %341 ]
  %86 = phi i32 [ -1, %58 ], [ %345, %341 ]
  %87 = phi i32 [ -1, %58 ], [ %346, %341 ]
  %88 = phi i64 [ %64, %58 ], [ %350, %341 ]
  %89 = phi i64 [ %61, %58 ], [ %348, %341 ]
  %90 = phi i32 [ -1, %58 ], [ %347, %341 ]
  %91 = load i8, i8* %83, align 1, !noalias !3
  switch i8 %91, label %92 [
    i8 0, label %103
    i8 1, label %93
    i8 2, label %93
    i8 3, label %93
    i8 4, label %93
    i8 5, label %105
  ]

92:                                               ; preds = %82
  call void @llvm.trap() #24, !noalias !3
  unreachable

93:                                               ; preds = %82, %82, %82, %82
  %94 = inttoptr i64 %88 to %struct.SkPoint*
  %95 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %94, i64 -1
  %96 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %94, i64 -1, i32 1
  %97 = zext i8 %91 to i64
  %98 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZZN10SkPathPriv9PtsInVerbEjE10gPtsInVerb, i64 0, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i64
  %101 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %95, i64 0, i32 0
  %102 = load float, float* %101, align 4
  br label %119

103:                                              ; preds = %82
  %104 = icmp sgt i32 %84, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %82, %103
  %106 = add nsw i32 %84, 1
  br label %352

107:                                              ; preds = %103
  %108 = inttoptr i64 %88 to %struct.SkPoint*
  %109 = inttoptr i64 %88 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = inttoptr i64 %88 to i8*
  %112 = getelementptr inbounds i8, i8* %111, i64 4
  %113 = bitcast i8* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds i8, i8* %83, i64 1
  br label %326

116:                                              ; preds = %124
  %117 = add nuw nsw i64 %120, 1
  %118 = icmp eq i64 %120, %100
  br i1 %118, label %316, label %119

119:                                              ; preds = %116, %93
  %120 = phi i64 [ 1, %93 ], [ %117, %116 ]
  %121 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %95, i64 %120, i32 0
  %122 = load float, float* %121, align 4
  %123 = fcmp une float %102, %122
  br i1 %123, label %129, label %124

124:                                              ; preds = %119
  %125 = load float, float* %96, align 4
  %126 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %95, i64 %120, i32 1
  %127 = load float, float* %126, align 4
  %128 = fcmp une float %125, %127
  br i1 %128, label %129, label %116

129:                                              ; preds = %124, %119
  %130 = add nsw i32 %84, 1
  %131 = icmp eq i8 %91, 3
  br i1 %131, label %132, label %253

132:                                              ; preds = %129
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %70) #24
  %133 = inttoptr i64 %89 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %81, i8 -1, i64 28, i1 false)
  %134 = load i32, i32* %133, align 4
  %135 = bitcast %struct.SkPoint* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %70, i8* align 4 %135, i64 24, i1 false) #24
  store i32 %134, i32* %72, align 4
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %73, i8 -1, i64 40, i1 false)
  %136 = call i32 @_ZNK7SkConic17chopIntoQuadsPOW2EP7SkPointi(%struct.SkConic* nonnull %3, %struct.SkPoint* nonnull %74, i32 1) #24
  %137 = icmp eq i32 %136, 2
  br i1 %137, label %139, label %138

138:                                              ; preds = %132
  call fastcc void @"_ZZNK6SkPath26conservativelyContainsRectERK6SkRectENK3$_0clEv"()
  unreachable

139:                                              ; preds = %132
  br i1 %65, label %140, label %148

140:                                              ; preds = %139
  %141 = load float, float* %76, align 16
  %142 = load float, float* %75, align 16
  %143 = fsub float %141, %142
  %144 = insertelement <2 x float> undef, float %143, i32 0
  %145 = load float, float* %78, align 4
  %146 = load float, float* %77, align 4
  %147 = fsub float %145, %146
  br label %156

148:                                              ; preds = %139
  %149 = load float, float* %75, align 16
  %150 = load float, float* %76, align 16
  %151 = fsub float %149, %150
  %152 = insertelement <2 x float> undef, float %151, i32 0
  %153 = load float, float* %77, align 4
  %154 = load float, float* %78, align 4
  %155 = fsub float %153, %154
  br label %156

156:                                              ; preds = %148, %140
  %157 = phi float [ %155, %148 ], [ %147, %140 ]
  %158 = phi <2 x float> [ %152, %148 ], [ %144, %140 ]
  %159 = phi float [ %154, %148 ], [ %145, %140 ]
  %160 = phi float [ %150, %148 ], [ %141, %140 ]
  %161 = phi float [ %154, %148 ], [ %146, %140 ]
  %162 = phi float [ %150, %148 ], [ %142, %140 ]
  %163 = extractelement <2 x float> %158, i32 0
  %164 = fcmp une float %163, 0.000000e+00
  %165 = fcmp une float %157, 0.000000e+00
  %166 = or i1 %164, %165
  br i1 %166, label %167, label %195

167:                                              ; preds = %156
  %168 = load float, float* %66, align 4
  %169 = load float, float* %67, align 4
  %170 = load float, float* %68, align 4
  %171 = insertelement <2 x float> undef, float %170, i32 0
  %172 = insertelement <2 x float> %171, float %168, i32 1
  %173 = insertelement <2 x float> undef, float %162, i32 0
  %174 = shufflevector <2 x float> %173, <2 x float> undef, <2 x i32> zeroinitializer
  %175 = fsub <2 x float> %172, %174
  %176 = insertelement <2 x float> undef, float %157, i32 0
  %177 = shufflevector <2 x float> %176, <2 x float> undef, <2 x i32> zeroinitializer
  %178 = fmul <2 x float> %177, %175
  %179 = shufflevector <2 x float> %178, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %180 = load float, float* %69, align 4
  %181 = insertelement <2 x float> undef, float %180, i32 0
  %182 = insertelement <2 x float> %181, float %169, i32 1
  %183 = insertelement <2 x float> undef, float %161, i32 0
  %184 = shufflevector <2 x float> %183, <2 x float> undef, <2 x i32> zeroinitializer
  %185 = fsub <2 x float> %182, %184
  %186 = shufflevector <2 x float> %158, <2 x float> undef, <2 x i32> zeroinitializer
  %187 = fmul <2 x float> %186, %185
  %188 = shufflevector <2 x float> %187, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %189 = fcmp olt <4 x float> %188, %179
  %190 = shufflevector <4 x i1> %189, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %191 = or <4 x i1> %189, %190
  %192 = shufflevector <4 x i1> %191, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %193 = or <4 x i1> %191, %192
  %194 = extractelement <4 x i1> %193, i32 0
  br i1 %194, label %244, label %195

195:                                              ; preds = %167, %156
  %196 = load float, float* %79, align 16
  br i1 %65, label %197, label %202

197:                                              ; preds = %195
  %198 = fsub float %196, %160
  %199 = insertelement <2 x float> undef, float %198, i32 0
  %200 = load float, float* %80, align 4
  %201 = fsub float %200, %159
  br label %207

202:                                              ; preds = %195
  %203 = fsub float %160, %196
  %204 = insertelement <2 x float> undef, float %203, i32 0
  %205 = load float, float* %80, align 4
  %206 = fsub float %159, %205
  br label %207

207:                                              ; preds = %202, %197
  %208 = phi float [ %206, %202 ], [ %201, %197 ]
  %209 = phi <2 x float> [ %204, %202 ], [ %199, %197 ]
  %210 = phi float [ %205, %202 ], [ %159, %197 ]
  %211 = phi float [ %196, %202 ], [ %160, %197 ]
  %212 = extractelement <2 x float> %209, i32 0
  %213 = fcmp une float %212, 0.000000e+00
  %214 = fcmp une float %208, 0.000000e+00
  %215 = or i1 %213, %214
  br i1 %215, label %216, label %245

216:                                              ; preds = %207
  %217 = load float, float* %66, align 4
  %218 = load float, float* %67, align 4
  %219 = load float, float* %68, align 4
  %220 = insertelement <2 x float> undef, float %219, i32 0
  %221 = insertelement <2 x float> %220, float %217, i32 1
  %222 = insertelement <2 x float> undef, float %211, i32 0
  %223 = shufflevector <2 x float> %222, <2 x float> undef, <2 x i32> zeroinitializer
  %224 = fsub <2 x float> %221, %223
  %225 = insertelement <2 x float> undef, float %208, i32 0
  %226 = shufflevector <2 x float> %225, <2 x float> undef, <2 x i32> zeroinitializer
  %227 = fmul <2 x float> %226, %224
  %228 = shufflevector <2 x float> %227, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %229 = load float, float* %69, align 4
  %230 = insertelement <2 x float> undef, float %229, i32 0
  %231 = insertelement <2 x float> %230, float %218, i32 1
  %232 = insertelement <2 x float> undef, float %210, i32 0
  %233 = shufflevector <2 x float> %232, <2 x float> undef, <2 x i32> zeroinitializer
  %234 = fsub <2 x float> %231, %233
  %235 = shufflevector <2 x float> %209, <2 x float> undef, <2 x i32> zeroinitializer
  %236 = fmul <2 x float> %235, %234
  %237 = shufflevector <2 x float> %236, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %238 = fcmp olt <4 x float> %237, %228
  %239 = shufflevector <4 x i1> %238, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %240 = or <4 x i1> %238, %239
  %241 = shufflevector <4 x i1> %240, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %242 = or <4 x i1> %240, %241
  %243 = extractelement <4 x i1> %242, i32 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %167, %216
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #24
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %70) #24
  br label %411

245:                                              ; preds = %216, %207
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #24
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %70) #24
  %246 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %95, i64 %100
  %247 = bitcast %struct.SkPoint* %246 to i32*
  %248 = load i32, i32* %247, align 4
  %249 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %246, i64 0, i32 1
  %250 = bitcast float* %249 to i32*
  %251 = load i32, i32* %250, align 4
  %252 = load i8, i8* %83, align 1
  br label %316

253:                                              ; preds = %129
  %254 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %95, i64 %100
  br i1 %65, label %255, label %265

255:                                              ; preds = %253
  %256 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %254, i64 0, i32 0
  %257 = load float, float* %256, align 4
  %258 = bitcast i32 %90 to float
  %259 = fsub float %257, %258
  %260 = insertelement <2 x float> undef, float %259, i32 0
  %261 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %254, i64 0, i32 1
  %262 = load float, float* %261, align 4
  %263 = bitcast i32 %87 to float
  %264 = fsub float %262, %263
  br label %275

265:                                              ; preds = %253
  %266 = bitcast i32 %90 to float
  %267 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %254, i64 0, i32 0
  %268 = load float, float* %267, align 4
  %269 = fsub float %266, %268
  %270 = insertelement <2 x float> undef, float %269, i32 0
  %271 = bitcast i32 %87 to float
  %272 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %254, i64 0, i32 1
  %273 = load float, float* %272, align 4
  %274 = fsub float %271, %273
  br label %275

275:                                              ; preds = %265, %255
  %276 = phi float [ %274, %265 ], [ %264, %255 ]
  %277 = phi <2 x float> [ %270, %265 ], [ %260, %255 ]
  %278 = phi float [ %273, %265 ], [ %262, %255 ]
  %279 = phi float [ %268, %265 ], [ %257, %255 ]
  %280 = phi float [ %273, %265 ], [ %263, %255 ]
  %281 = phi float [ %268, %265 ], [ %258, %255 ]
  %282 = bitcast float %279 to i32
  %283 = bitcast float %278 to i32
  %284 = extractelement <2 x float> %277, i32 0
  %285 = fcmp une float %284, 0.000000e+00
  %286 = fcmp une float %276, 0.000000e+00
  %287 = or i1 %285, %286
  br i1 %287, label %288, label %316

288:                                              ; preds = %275
  %289 = load float, float* %66, align 4
  %290 = load float, float* %67, align 4
  %291 = load float, float* %68, align 4
  %292 = insertelement <2 x float> undef, float %291, i32 0
  %293 = insertelement <2 x float> %292, float %289, i32 1
  %294 = insertelement <2 x float> undef, float %281, i32 0
  %295 = shufflevector <2 x float> %294, <2 x float> undef, <2 x i32> zeroinitializer
  %296 = fsub <2 x float> %293, %295
  %297 = insertelement <2 x float> undef, float %276, i32 0
  %298 = shufflevector <2 x float> %297, <2 x float> undef, <2 x i32> zeroinitializer
  %299 = fmul <2 x float> %298, %296
  %300 = shufflevector <2 x float> %299, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %301 = load float, float* %69, align 4
  %302 = insertelement <2 x float> undef, float %301, i32 0
  %303 = insertelement <2 x float> %302, float %290, i32 1
  %304 = insertelement <2 x float> undef, float %280, i32 0
  %305 = shufflevector <2 x float> %304, <2 x float> undef, <2 x i32> zeroinitializer
  %306 = fsub <2 x float> %303, %305
  %307 = shufflevector <2 x float> %277, <2 x float> undef, <2 x i32> zeroinitializer
  %308 = fmul <2 x float> %307, %306
  %309 = shufflevector <2 x float> %308, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 1, i32 0>
  %310 = fcmp olt <4 x float> %309, %300
  %311 = shufflevector <4 x i1> %310, <4 x i1> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %312 = or <4 x i1> %310, %311
  %313 = shufflevector <4 x i1> %312, <4 x i1> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %314 = or <4 x i1> %312, %313
  %315 = extractelement <4 x i1> %314, i32 0
  br i1 %315, label %411, label %316

316:                                              ; preds = %116, %245, %275, %288
  %317 = phi i8 [ %91, %288 ], [ %91, %275 ], [ %252, %245 ], [ %91, %116 ]
  %318 = phi i32 [ %282, %288 ], [ %282, %275 ], [ %248, %245 ], [ %90, %116 ]
  %319 = phi i32 [ %283, %288 ], [ %283, %275 ], [ %251, %245 ], [ %87, %116 ]
  %320 = phi i32 [ %130, %288 ], [ %130, %275 ], [ %130, %245 ], [ %84, %116 ]
  %321 = getelementptr inbounds i8, i8* %83, i64 1
  switch i8 %317, label %325 [
    i8 0, label %326
    i8 1, label %326
    i8 2, label %322
    i8 3, label %336
    i8 4, label %323
    i8 5, label %324
  ]

322:                                              ; preds = %316
  br label %326

323:                                              ; preds = %316
  br label %326

324:                                              ; preds = %316
  br label %326

325:                                              ; preds = %316
  call void @llvm.trap() #24
  unreachable

326:                                              ; preds = %107, %324, %323, %322, %316, %316
  %327 = phi i8* [ %321, %316 ], [ %321, %316 ], [ %321, %322 ], [ %321, %323 ], [ %321, %324 ], [ %115, %107 ]
  %328 = phi i32 [ %320, %316 ], [ %320, %316 ], [ %320, %322 ], [ %320, %323 ], [ %320, %324 ], [ %84, %107 ]
  %329 = phi i32 [ %85, %316 ], [ %85, %316 ], [ %85, %322 ], [ %85, %323 ], [ %85, %324 ], [ %114, %107 ]
  %330 = phi i32 [ %86, %316 ], [ %86, %316 ], [ %86, %322 ], [ %86, %323 ], [ %86, %324 ], [ %110, %107 ]
  %331 = phi i32 [ %319, %316 ], [ %319, %316 ], [ %319, %322 ], [ %319, %323 ], [ %319, %324 ], [ %114, %107 ]
  %332 = phi i32 [ %318, %316 ], [ %318, %316 ], [ %318, %322 ], [ %318, %323 ], [ %318, %324 ], [ %110, %107 ]
  %333 = phi %struct.SkPoint* [ %94, %316 ], [ %94, %316 ], [ %94, %322 ], [ %94, %323 ], [ %94, %324 ], [ %108, %107 ]
  %334 = phi i64 [ 1, %316 ], [ 1, %316 ], [ 2, %322 ], [ 3, %323 ], [ 0, %324 ], [ 1, %107 ]
  %335 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %333, i64 %334
  br label %341

336:                                              ; preds = %316
  %337 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %94, i64 2
  %338 = inttoptr i64 %89 to float*
  %339 = getelementptr inbounds float, float* %338, i64 1
  %340 = ptrtoint float* %339 to i64
  br label %341

341:                                              ; preds = %326, %336
  %342 = phi i8* [ %327, %326 ], [ %321, %336 ]
  %343 = phi i32 [ %328, %326 ], [ %320, %336 ]
  %344 = phi i32 [ %329, %326 ], [ %85, %336 ]
  %345 = phi i32 [ %330, %326 ], [ %86, %336 ]
  %346 = phi i32 [ %331, %326 ], [ %319, %336 ]
  %347 = phi i32 [ %332, %326 ], [ %318, %336 ]
  %348 = phi i64 [ %89, %326 ], [ %340, %336 ]
  %349 = phi %struct.SkPoint* [ %335, %326 ], [ %337, %336 ]
  %350 = ptrtoint %struct.SkPoint* %349 to i64
  %351 = icmp eq i8* %55, %342
  br i1 %351, label %352, label %82

352:                                              ; preds = %341, %105
  %353 = phi i32 [ %90, %105 ], [ %347, %341 ]
  %354 = phi i32 [ %87, %105 ], [ %346, %341 ]
  %355 = phi i32 [ %86, %105 ], [ %345, %341 ]
  %356 = phi i32 [ %85, %105 ], [ %344, %341 ]
  %357 = phi i32 [ %106, %105 ], [ %343, %341 ]
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %411, label %359

359:                                              ; preds = %352
  %360 = icmp eq i32 %15, 0
  br i1 %360, label %361, label %369

361:                                              ; preds = %359
  %362 = bitcast i32 %355 to float
  %363 = bitcast i32 %353 to float
  %364 = fsub float %362, %363
  %365 = insertelement <2 x float> undef, float %364, i32 0
  %366 = bitcast i32 %356 to float
  %367 = bitcast i32 %354 to float
  %368 = fsub float %366, %367
  br label %377

369:                                              ; preds = %359
  %370 = bitcast i32 %353 to float
  %371 = bitcast i32 %355 to float
  %372 = fsub float %370, %371
  %373 = insertelement <2 x float> undef, float %372, i32 0
  %374 = bitcast i32 %354 to float
  %375 = bitcast i32 %356 to float
  %376 = fsub float %374, %375
  br label %377

377:                                              ; preds = %369, %361
  %378 = phi float [ %376, %369 ], [ %368, %361 ]
  %379 = phi <2 x float> [ %373, %369 ], [ %365, %361 ]
  %380 = phi float [ %375, %369 ], [ %367, %361 ]
  %381 = phi float [ %371, %369 ], [ %363, %361 ]
  %382 = extractelement <2 x float> %379, i32 0
  %383 = fcmp une float %382, 0.000000e+00
  %384 = fcmp une float %378, 0.000000e+00
  %385 = or i1 %383, %384
  br i1 %385, label %386, label %411

386:                                              ; preds = %377
  %387 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %388 = load float, float* %387, align 4
  %389 = fsub float %388, %381
  %390 = fmul float %378, %389
  %391 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %392 = load float, float* %391, align 4
  %393 = fsub float %392, %380
  %394 = fmul float %382, %393
  %395 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %396 = load float, float* %395, align 4
  %397 = fsub float %396, %381
  %398 = fmul float %378, %397
  %399 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %400 = load float, float* %399, align 4
  %401 = fsub float %400, %380
  %402 = fmul float %382, %401
  %403 = fcmp olt float %394, %390
  %404 = fcmp olt float %394, %398
  %405 = or i1 %403, %404
  %406 = fcmp olt float %402, %390
  %407 = or i1 %405, %406
  %408 = fcmp olt float %402, %398
  %409 = or i1 %408, %407
  %410 = xor i1 %409, true
  br label %411

411:                                              ; preds = %288, %54, %244, %352, %377, %386, %14, %11
  %412 = phi i1 [ false, %11 ], [ false, %14 ], [ false, %352 ], [ %410, %386 ], [ true, %377 ], [ false, %244 ], [ false, %54 ], [ false, %288 ]
  ret i1 %412
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkPathPriv21ComputeFirstDirectionERK6SkPath(%class.SkPath* nocapture dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 monotonic, align 1
  %4 = zext i8 %3 to i32
  %5 = icmp eq i8 %3, 2
  br i1 %5, label %6, label %303

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i8, i8* %7 monotonic, align 1
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %303, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %12 = load %class.SkPathRef*, %class.SkPathRef** %11, align 8
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 4, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 3, i32 0
  %18 = bitcast %struct.SkPoint** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = inttoptr i64 %19 to %struct.SkPoint*
  br label %48

21:                                               ; preds = %10
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 4, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %14, i64 %24
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 3, i32 0
  %27 = bitcast %struct.SkPoint** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = icmp sgt i32 %23, 0
  %30 = inttoptr i64 %28 to %struct.SkPoint*
  br i1 %29, label %31, label %48

31:                                               ; preds = %21
  %32 = getelementptr inbounds i8, i8* %14, i64 1
  %33 = icmp eq i32 %23, 1
  br i1 %33, label %48, label %34

34:                                               ; preds = %31, %44
  %35 = phi i8* [ %46, %44 ], [ %32, %31 ]
  %36 = phi i32 [ %45, %44 ], [ 1, %31 ]
  %37 = load i8, i8* %35, align 1
  switch i8 %37, label %44 [
    i8 0, label %48
    i8 1, label %38
    i8 3, label %40
    i8 2, label %40
    i8 4, label %42
  ]

38:                                               ; preds = %34
  %39 = add nsw i32 %36, 1
  br label %44

40:                                               ; preds = %34, %34
  %41 = add nsw i32 %36, 2
  br label %44

42:                                               ; preds = %34
  %43 = add nsw i32 %36, 3
  br label %44

44:                                               ; preds = %42, %40, %38, %34
  %45 = phi i32 [ %36, %34 ], [ %43, %42 ], [ %41, %40 ], [ %39, %38 ]
  %46 = getelementptr inbounds i8, i8* %35, i64 1
  %47 = icmp eq i8* %46, %25
  br i1 %47, label %48, label %34

48:                                               ; preds = %34, %44, %31, %21, %16
  %49 = phi %struct.SkPoint* [ %20, %16 ], [ %30, %21 ], [ %30, %31 ], [ %30, %44 ], [ %30, %34 ]
  %50 = phi i64 [ %19, %16 ], [ %28, %21 ], [ %28, %31 ], [ %28, %44 ], [ %28, %34 ]
  %51 = phi i8* [ null, %16 ], [ %25, %21 ], [ %25, %31 ], [ %25, %44 ], [ %25, %34 ]
  %52 = phi i32 [ 0, %16 ], [ 0, %21 ], [ 1, %31 ], [ %36, %34 ], [ %45, %44 ]
  %53 = phi i8* [ null, %16 ], [ %14, %21 ], [ %32, %31 ], [ %35, %34 ], [ %25, %44 ]
  %54 = phi i8 [ 1, %16 ], [ 1, %21 ], [ 0, %31 ], [ %37, %34 ], [ 0, %44 ]
  %55 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 9
  %56 = load i8, i8* %55, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %48
  %59 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 1
  %60 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 3, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %59, %struct.SkPoint* %49, i32 %61) #24
  %63 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 10
  %64 = zext i1 %62 to i8
  store i8 %64, i8* %63, align 1
  store i8 0, i8* %55, align 8
  br label %65

65:                                               ; preds = %48, %58
  %66 = icmp eq i8 %54, 0
  br i1 %66, label %67, label %303

67:                                               ; preds = %65
  %68 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 1, i32 1
  %69 = load float, float* %68, align 4
  br label %70

70:                                               ; preds = %280, %67
  %71 = phi float [ 0.000000e+00, %67 ], [ %271, %280 ]
  %72 = phi float [ %69, %67 ], [ %270, %280 ]
  %73 = phi i8* [ %53, %67 ], [ %281, %280 ]
  %74 = phi i64 [ %50, %67 ], [ %277, %280 ]
  %75 = phi i32 [ %52, %67 ], [ %282, %280 ]
  %76 = icmp slt i32 %75, 3
  br i1 %76, label %269, label %77

77:                                               ; preds = %70
  %78 = inttoptr i64 %74 to %struct.SkPoint*
  %79 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 0, i32 1
  %80 = load float, float* %79, align 4
  %81 = zext i32 %75 to i64
  %82 = add nsw i64 %81, -1
  %83 = add nsw i64 %81, -2
  %84 = and i64 %82, 3
  %85 = icmp ult i64 %83, 3
  br i1 %85, label %123, label %86

86:                                               ; preds = %77
  %87 = sub nsw i64 %82, %84
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ 1, %86 ], [ %120, %88 ]
  %90 = phi i32 [ 0, %86 ], [ %119, %88 ]
  %91 = phi float [ %80, %86 ], [ %117, %88 ]
  %92 = phi i64 [ %87, %86 ], [ %121, %88 ]
  %93 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %89, i32 1
  %94 = load float, float* %93, align 4
  %95 = fcmp ogt float %94, %91
  %96 = select i1 %95, float %94, float %91
  %97 = trunc i64 %89 to i32
  %98 = select i1 %95, i32 %97, i32 %90
  %99 = add nuw nsw i64 %89, 1
  %100 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %99, i32 1
  %101 = load float, float* %100, align 4
  %102 = fcmp ogt float %101, %96
  %103 = select i1 %102, float %101, float %96
  %104 = trunc i64 %99 to i32
  %105 = select i1 %102, i32 %104, i32 %98
  %106 = add nuw nsw i64 %89, 2
  %107 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %106, i32 1
  %108 = load float, float* %107, align 4
  %109 = fcmp ogt float %108, %103
  %110 = select i1 %109, float %108, float %103
  %111 = trunc i64 %106 to i32
  %112 = select i1 %109, i32 %111, i32 %105
  %113 = add nuw nsw i64 %89, 3
  %114 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %113, i32 1
  %115 = load float, float* %114, align 4
  %116 = fcmp ogt float %115, %110
  %117 = select i1 %116, float %115, float %110
  %118 = trunc i64 %113 to i32
  %119 = select i1 %116, i32 %118, i32 %112
  %120 = add nuw nsw i64 %89, 4
  %121 = add i64 %92, -4
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %123, label %88

123:                                              ; preds = %88, %77
  %124 = phi i32 [ undef, %77 ], [ %119, %88 ]
  %125 = phi i64 [ 1, %77 ], [ %120, %88 ]
  %126 = phi i32 [ 0, %77 ], [ %119, %88 ]
  %127 = phi float [ %80, %77 ], [ %117, %88 ]
  %128 = icmp eq i64 %84, 0
  br i1 %128, label %143, label %129

129:                                              ; preds = %123, %129
  %130 = phi i64 [ %140, %129 ], [ %125, %123 ]
  %131 = phi i32 [ %139, %129 ], [ %126, %123 ]
  %132 = phi float [ %137, %129 ], [ %127, %123 ]
  %133 = phi i64 [ %141, %129 ], [ %84, %123 ]
  %134 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %130, i32 1
  %135 = load float, float* %134, align 4
  %136 = fcmp ogt float %135, %132
  %137 = select i1 %136, float %135, float %132
  %138 = trunc i64 %130 to i32
  %139 = select i1 %136, i32 %138, i32 %131
  %140 = add nuw nsw i64 %130, 1
  %141 = add i64 %133, -1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %143, label %129, !llvm.loop !6

143:                                              ; preds = %129, %123
  %144 = phi i32 [ %124, %123 ], [ %139, %129 ]
  %145 = sext i32 %144 to i64
  %146 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %145, i32 1
  %147 = load float, float* %146, align 4
  %148 = fcmp olt float %147, %72
  br i1 %148, label %269, label %149

149:                                              ; preds = %143
  %150 = add i32 %144, 1
  %151 = srem i32 %150, %75
  %152 = sext i32 %151 to i64
  %153 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %152, i32 1
  %154 = load float, float* %153, align 4
  %155 = fcmp oeq float %154, %147
  br i1 %155, label %156, label %193

156:                                              ; preds = %149
  %157 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %145, i32 0
  %158 = load float, float* %157, align 4
  %159 = icmp slt i32 %150, %75
  br i1 %159, label %160, label %193

160:                                              ; preds = %156
  %161 = sext i32 %150 to i64
  br label %162

162:                                              ; preds = %179, %160
  %163 = phi i64 [ %161, %160 ], [ %184, %179 ]
  %164 = phi i32 [ %144, %160 ], [ %183, %179 ]
  %165 = phi i32 [ %144, %160 ], [ %182, %179 ]
  %166 = phi float [ %158, %160 ], [ %181, %179 ]
  %167 = phi float [ %158, %160 ], [ %180, %179 ]
  %168 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %163, i32 1
  %169 = load float, float* %168, align 4
  %170 = fcmp une float %169, %147
  br i1 %170, label %187, label %171

171:                                              ; preds = %162
  %172 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %163, i32 0
  %173 = load float, float* %172, align 4
  %174 = fcmp olt float %173, %167
  %175 = trunc i64 %163 to i32
  br i1 %174, label %179, label %176

176:                                              ; preds = %171
  %177 = fcmp ogt float %173, %166
  br i1 %177, label %178, label %179

178:                                              ; preds = %176
  br label %179

179:                                              ; preds = %178, %176, %171
  %180 = phi float [ %167, %178 ], [ %167, %176 ], [ %173, %171 ]
  %181 = phi float [ %173, %178 ], [ %166, %176 ], [ %166, %171 ]
  %182 = phi i32 [ %165, %178 ], [ %165, %176 ], [ %175, %171 ]
  %183 = phi i32 [ %175, %178 ], [ %164, %176 ], [ %164, %171 ]
  %184 = add nsw i64 %163, 1
  %185 = trunc i64 %184 to i32
  %186 = icmp eq i32 %75, %185
  br i1 %186, label %187, label %162

187:                                              ; preds = %162, %179
  %188 = phi i32 [ %165, %162 ], [ %182, %179 ]
  %189 = phi i32 [ %164, %162 ], [ %183, %179 ]
  %190 = icmp eq i32 %188, %189
  %191 = sub nsw i32 %188, %189
  %192 = sitofp i32 %191 to float
  br i1 %190, label %193, label %265

193:                                              ; preds = %156, %187, %149
  %194 = add nsw i32 %75, -1
  %195 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %145, i32 0
  br label %196

196:                                              ; preds = %207, %193
  %197 = phi i32 [ %144, %193 ], [ %199, %207 ]
  %198 = add nsw i32 %194, %197
  %199 = srem i32 %198, %75
  %200 = icmp eq i32 %199, %144
  br i1 %200, label %269, label %201

201:                                              ; preds = %196
  %202 = sext i32 %199 to i64
  %203 = load float, float* %195, align 4
  %204 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %202, i32 0
  %205 = load float, float* %204, align 4
  %206 = fcmp une float %203, %205
  br i1 %206, label %211, label %207

207:                                              ; preds = %201
  %208 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %202, i32 1
  %209 = load float, float* %208, align 4
  %210 = fcmp une float %147, %209
  br i1 %210, label %211, label %196

211:                                              ; preds = %207, %201
  br label %212

212:                                              ; preds = %211, %222
  %213 = phi i32 [ %215, %222 ], [ %144, %211 ]
  %214 = add nsw i32 %213, 1
  %215 = srem i32 %214, %75
  %216 = icmp eq i32 %215, %144
  br i1 %216, label %226, label %217

217:                                              ; preds = %212
  %218 = sext i32 %215 to i64
  %219 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %218, i32 0
  %220 = load float, float* %219, align 4
  %221 = fcmp une float %203, %220
  br i1 %221, label %226, label %222

222:                                              ; preds = %217
  %223 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %218, i32 1
  %224 = load float, float* %223, align 4
  %225 = fcmp une float %147, %224
  br i1 %225, label %226, label %212

226:                                              ; preds = %212, %217, %222
  %227 = phi float [ %220, %217 ], [ %220, %222 ], [ %203, %212 ]
  %228 = phi i64 [ %218, %217 ], [ %218, %222 ], [ %145, %212 ]
  %229 = fsub float %203, %205
  %230 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %202, i32 1
  %231 = load float, float* %230, align 4
  %232 = fsub float %147, %231
  %233 = fsub float %227, %205
  %234 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %228, i32 1
  %235 = load float, float* %234, align 4
  %236 = fsub float %235, %231
  %237 = fmul float %229, %236
  %238 = fmul float %232, %233
  %239 = fsub float %237, %238
  %240 = fcmp oeq float %239, 0.000000e+00
  br i1 %240, label %241, label %256

241:                                              ; preds = %226
  %242 = fpext float %205 to double
  %243 = fpext float %231 to double
  %244 = fpext float %203 to double
  %245 = fpext float %147 to double
  %246 = fpext float %227 to double
  %247 = fpext float %235 to double
  %248 = fsub double %244, %242
  %249 = fsub double %247, %243
  %250 = fmul double %248, %249
  %251 = fsub double %245, %243
  %252 = fsub double %246, %242
  %253 = fmul double %251, %252
  %254 = fsub double %250, %253
  %255 = fptrunc double %254 to float
  br label %256

256:                                              ; preds = %226, %241
  %257 = phi float [ %255, %241 ], [ %239, %226 ]
  %258 = fcmp oeq float %257, 0.000000e+00
  %259 = fcmp oeq float %231, %147
  %260 = and i1 %258, %259
  %261 = fcmp oeq float %235, %147
  %262 = and i1 %260, %261
  %263 = fsub float %203, %227
  %264 = select i1 %262, float %263, float %257
  br label %265

265:                                              ; preds = %256, %187
  %266 = phi float [ %192, %187 ], [ %264, %256 ]
  %267 = fcmp une float %266, 0.000000e+00
  br i1 %267, label %268, label %269

268:                                              ; preds = %265
  br label %269

269:                                              ; preds = %196, %143, %268, %265, %70
  %270 = phi float [ %72, %70 ], [ %72, %143 ], [ %147, %268 ], [ %72, %265 ], [ %72, %196 ]
  %271 = phi float [ %71, %70 ], [ %71, %143 ], [ %266, %268 ], [ %71, %265 ], [ %71, %196 ]
  %272 = icmp ult i8* %73, %51
  br i1 %272, label %273, label %297

273:                                              ; preds = %269
  %274 = inttoptr i64 %74 to %struct.SkPoint*
  %275 = sext i32 %75 to i64
  %276 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %274, i64 %275
  %277 = ptrtoint %struct.SkPoint* %276 to i64
  %278 = getelementptr inbounds i8, i8* %73, i64 1
  %279 = icmp ult i8* %278, %51
  br i1 %279, label %283, label %280

280:                                              ; preds = %293, %283, %273
  %281 = phi i8* [ %278, %273 ], [ %51, %293 ], [ %284, %283 ]
  %282 = phi i32 [ 1, %273 ], [ %294, %293 ], [ %285, %283 ]
  br label %70

283:                                              ; preds = %273, %293
  %284 = phi i8* [ %295, %293 ], [ %278, %273 ]
  %285 = phi i32 [ %294, %293 ], [ 1, %273 ]
  %286 = load i8, i8* %284, align 1
  switch i8 %286, label %293 [
    i8 0, label %280
    i8 1, label %287
    i8 3, label %289
    i8 2, label %289
    i8 4, label %291
  ]

287:                                              ; preds = %283
  %288 = add nsw i32 %285, 1
  br label %293

289:                                              ; preds = %283, %283
  %290 = add nsw i32 %285, 2
  br label %293

291:                                              ; preds = %283
  %292 = add nsw i32 %285, 3
  br label %293

293:                                              ; preds = %291, %289, %287, %283
  %294 = phi i32 [ %285, %283 ], [ %292, %291 ], [ %290, %289 ], [ %288, %287 ]
  %295 = getelementptr inbounds i8, i8* %284, i64 1
  %296 = icmp eq i8* %295, %51
  br i1 %296, label %280, label %283

297:                                              ; preds = %269
  %298 = fcmp une float %271, 0.000000e+00
  br i1 %298, label %299, label %303

299:                                              ; preds = %297
  %300 = fcmp ule float %271, 0.000000e+00
  %301 = zext i1 %300 to i32
  %302 = zext i1 %300 to i8
  store atomic i8 %302, i8* %2 monotonic, align 1
  br label %303

303:                                              ; preds = %65, %297, %299, %6, %1
  %304 = phi i32 [ %4, %1 ], [ 2, %6 ], [ %301, %299 ], [ 2, %297 ], [ 2, %65 ]
  ret i32 %304
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @_ZNK7SkConic17chopIntoQuadsPOW2EP7SkPointi(%struct.SkConic*, %struct.SkPoint*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define internal fastcc void @"_ZZNK6SkPath26conservativelyContainsRectERK6SkRectENK3$_0clEv"() unnamed_addr #6 align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0), i32 324, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i64 0, i64 0)) #26
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6SkPath15getGenerationIDEv(%class.SkPath* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = tail call i32 @_ZNK9SkPathRef5genIDEv(%class.SkPathRef* %3) #24
  ret i32 %4
}

declare i32 @_ZNK9SkPathRef5genIDEv(%class.SkPathRef*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath6rewindEv(%class.SkPath* returned) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  tail call void @_ZN9SkPathRef6RewindEP5sk_spIS_E(%class.sk_sp* %2) #24
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 -1, i32* %3, align 8
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 2
  %6 = and i8 %5, -4
  store i8 %6, i8* %4, align 2
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %7 monotonic, align 1
  %8 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %8 monotonic, align 1
  ret %class.SkPath* %0
}

declare void @_ZN9SkPathRef6RewindEP5sk_spIS_E(%class.sk_sp*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath19isLastContourClosedEv(%class.SkPath* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 4, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = add nsw i32 %5, -1
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 4, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds i8, i8* %10, i64 %11
  %13 = load i8, i8* %12, align 1
  %14 = icmp eq i8 %13, 5
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ %14, %7 ], [ false, %1 ]
  ret i1 %16
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath6isLineEP7SkPoint(%class.SkPath* nocapture readonly, %struct.SkPoint*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 4, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %8, label %27

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 4, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %27

14:                                               ; preds = %8
  %15 = icmp eq %struct.SkPoint* %1, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %14
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 0
  %18 = load %struct.SkPoint*, %struct.SkPoint** %17, align 8
  %19 = bitcast %struct.SkPoint* %18 to i64*
  %20 = bitcast %struct.SkPoint* %1 to i64*
  %21 = load i64, i64* %19, align 4
  store i64 %21, i64* %20, align 4
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %18, i64 1
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %24 = bitcast %struct.SkPoint* %22 to i64*
  %25 = bitcast %struct.SkPoint* %23 to i64*
  %26 = load i64, i64* %24, align 4
  store i64 %26, i64* %25, align 4
  br label %27

27:                                               ; preds = %2, %8, %16, %14
  %28 = phi i1 [ true, %14 ], [ true, %16 ], [ false, %8 ], [ false, %2 ]
  ret i1 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath6isRectEP6SkRectPbP15SkPathDirection(%class.SkPath* nocapture readonly, %struct.SkRect*, i8*, i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %struct.SkPoint*, align 8
  %7 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #24
  store i32 0, i32* %5, align 4
  %8 = bitcast %struct.SkPoint** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #24
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %10 = load %class.SkPathRef*, %class.SkPathRef** %9, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 3, i32 0
  %12 = bitcast %struct.SkPoint** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct.SkPoint** %6 to i64*
  store i64 %13, i64* %14, align 8
  %15 = call zeroext i1 @_ZN10SkPathPriv13IsRectContourERK6SkPathbPiPPK7SkPointPbP15SkPathDirectionP6SkRect(%class.SkPath* dereferenceable(16) %0, i1 zeroext false, i32* nonnull %5, %struct.SkPoint** nonnull %6, i8* %2, i32* %3, %struct.SkRect* %1)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #24
  ret i1 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkPathPriv13IsRectContourERK6SkPathbPiPPK7SkPointPbP15SkPathDirectionP6SkRect(%class.SkPath* nocapture readonly dereferenceable(16), i1 zeroext, i32* nocapture, %struct.SkPoint** nocapture, i8*, i32*, %struct.SkRect*) local_unnamed_addr #5 align 2 {
  %8 = alloca [5 x i8], align 1
  %9 = load %struct.SkPoint*, %struct.SkPoint** %3, align 8
  %10 = getelementptr inbounds [5 x i8], [5 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %10) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %10, i8 -1, i64 5, i1 false)
  %11 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %12 = load %class.SkPathRef*, %class.SkPathRef** %11, align 8
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 4, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = load i32, i32* %2, align 4
  %16 = icmp slt i32 %15, %14
  br i1 %16, label %17, label %236

17:                                               ; preds = %7
  %18 = xor i1 %1, true
  %19 = getelementptr inbounds [5 x i8], [5 x i8]* %8, i64 0, i64 1
  %20 = getelementptr inbounds [5 x i8], [5 x i8]* %8, i64 0, i64 3
  %21 = getelementptr inbounds [5 x i8], [5 x i8]* %8, i64 0, i64 2
  br label %22

22:                                               ; preds = %17, %158
  %23 = phi i32 [ %15, %17 ], [ %174, %158 ]
  %24 = phi i32 [ 0, %17 ], [ %173, %158 ]
  %25 = phi i8 [ 0, %17 ], [ %172, %158 ]
  %26 = phi i8 [ 0, %17 ], [ %171, %158 ]
  %27 = phi i8 [ 0, %17 ], [ %170, %158 ]
  %28 = phi %struct.SkPoint* [ null, %17 ], [ %169, %158 ]
  %29 = phi %struct.SkPoint* [ %9, %17 ], [ %168, %158 ]
  %30 = phi %struct.SkPoint* [ null, %17 ], [ %167, %158 ]
  %31 = phi %struct.SkPoint* [ null, %17 ], [ %166, %158 ]
  %32 = phi i32 [ -1, %17 ], [ %165, %158 ]
  %33 = phi i32 [ -1, %17 ], [ %164, %158 ]
  %34 = phi i32 [ -1, %17 ], [ %163, %158 ]
  %35 = phi i32 [ -1, %17 ], [ %162, %158 ]
  %36 = phi i32 [ 0, %17 ], [ %161, %158 ]
  %37 = phi i32 [ 0, %17 ], [ %160, %158 ]
  %38 = and i8 %26, 1
  %39 = icmp eq i8 %38, 0
  %40 = or i1 %39, %18
  br i1 %40, label %41, label %176

41:                                               ; preds = %22
  %42 = and i8 %25, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %51

44:                                               ; preds = %41
  %45 = load %class.SkPathRef*, %class.SkPathRef** %11, align 8
  %46 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %45, i64 0, i32 4, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = sext i32 %23 to i64
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  %50 = load i8, i8* %49, align 1
  switch i8 %50, label %158 [
    i8 5, label %51
    i8 1, label %52
    i8 2, label %236
    i8 3, label %236
    i8 4, label %236
    i8 0, label %133
  ]

51:                                               ; preds = %41, %44
  br label %52

52:                                               ; preds = %44, %51
  %53 = phi i8 [ %50, %44 ], [ 5, %51 ]
  %54 = phi %struct.SkPoint* [ %28, %44 ], [ %29, %51 ]
  %55 = phi i8 [ %26, %44 ], [ 1, %51 ]
  %56 = phi i8 [ %25, %44 ], [ 0, %51 ]
  %57 = icmp eq i8 %53, 5
  %58 = select i1 %57, %struct.SkPoint* %30, %struct.SkPoint* %29
  %59 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %29, i64 1
  %60 = select i1 %57, %struct.SkPoint* %29, %struct.SkPoint* %59
  %61 = select i1 %57, %struct.SkPoint* %31, %struct.SkPoint* %29
  %62 = bitcast %struct.SkPoint* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %61, i64 0, i32 1
  %65 = bitcast float* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = bitcast i32 %63 to float
  %68 = bitcast i32 %36 to float
  %69 = fsub float %67, %68
  %70 = bitcast i32 %66 to float
  %71 = bitcast i32 %37 to float
  %72 = fsub float %70, %71
  %73 = fcmp une float %69, 0.000000e+00
  %74 = fcmp une float %72, 0.000000e+00
  %75 = and i1 %73, %74
  br i1 %75, label %236, label %76

76:                                               ; preds = %52
  %77 = fmul float %69, 0.000000e+00
  %78 = fmul float %77, %72
  %79 = fcmp ord float %78, 0.000000e+00
  br i1 %79, label %80, label %236

80:                                               ; preds = %76
  %81 = fcmp oeq float %68, %67
  %82 = fcmp oeq float %71, %70
  %83 = and i1 %81, %82
  br i1 %83, label %158, label %84

84:                                               ; preds = %80
  %85 = zext i1 %73 to i32
  %86 = fcmp ogt float %69, 0.000000e+00
  %87 = fcmp ogt float %72, 0.000000e+00
  %88 = or i1 %86, %87
  %89 = zext i1 %88 to i32
  %90 = shl nuw nsw i32 %89, 1
  %91 = or i32 %90, %85
  %92 = icmp eq i32 %24, 0
  br i1 %92, label %93, label %95

93:                                               ; preds = %84
  %94 = trunc i32 %91 to i8
  store i8 %94, i8* %10, align 1
  br label %158

95:                                               ; preds = %84
  %96 = and i8 %27, 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %236

98:                                               ; preds = %95
  %99 = and i8 %55, 1
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %105, label %101

101:                                              ; preds = %98
  %102 = load i8, i8* %10, align 1
  %103 = sext i8 %102 to i32
  %104 = icmp eq i32 %91, %103
  br i1 %104, label %158, label %105

105:                                              ; preds = %98, %101
  %106 = add nsw i32 %24, -1
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds [5 x i8], [5 x i8]* %8, i64 0, i64 %107
  %109 = load i8, i8* %108, align 1
  %110 = sext i8 %109 to i32
  %111 = icmp eq i32 %91, %110
  br i1 %111, label %112, label %119

112:                                              ; preds = %105
  %113 = icmp eq i32 %24, 3
  %114 = icmp eq i8 %53, 1
  %115 = and i1 %113, %114
  %116 = select i1 %115, i32 %66, i32 %33
  %117 = select i1 %115, i32 %63, i32 %32
  %118 = select i1 %115, i32 3, i32 %24
  br label %158

119:                                              ; preds = %105
  %120 = trunc i32 %91 to i8
  %121 = sext i32 %24 to i64
  %122 = getelementptr inbounds [5 x i8], [5 x i8]* %8, i64 0, i64 %121
  store i8 %120, i8* %122, align 1
  switch i32 %24, label %236 [
    i32 1, label %158
    i32 2, label %123
    i32 3, label %128
  ]

123:                                              ; preds = %119
  %124 = load i8, i8* %10, align 1
  %125 = load i8, i8* %21, align 1
  %126 = xor i8 %125, %124
  %127 = icmp eq i8 %126, 2
  br i1 %127, label %158, label %236

128:                                              ; preds = %119
  %129 = load i8, i8* %19, align 1
  %130 = load i8, i8* %20, align 1
  %131 = xor i8 %130, %129
  %132 = icmp eq i8 %131, 2
  br i1 %132, label %158, label %236

133:                                              ; preds = %44
  %134 = and i1 %39, %1
  %135 = load i8, i8* %10, align 1
  %136 = icmp sgt i8 %135, -1
  %137 = and i1 %134, %136
  br i1 %137, label %158, label %138

138:                                              ; preds = %133
  %139 = icmp eq i32 %24, 0
  br i1 %139, label %150, label %140

140:                                              ; preds = %138
  %141 = bitcast %struct.SkPoint* %31 to <2 x float>*
  %142 = load <2 x float>, <2 x float>* %141, align 4
  %143 = bitcast %struct.SkPoint* %30 to <2 x float>*
  %144 = load <2 x float>, <2 x float>* %143, align 4
  %145 = fsub <2 x float> %142, %144
  %146 = fcmp une <2 x float> %145, zeroinitializer
  %147 = extractelement <2 x i1> %146, i32 0
  %148 = extractelement <2 x i1> %146, i32 1
  %149 = and i1 %147, %148
  br i1 %149, label %236, label %150

150:                                              ; preds = %138, %140
  %151 = phi %struct.SkPoint* [ %31, %140 ], [ %29, %138 ]
  %152 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %29, i64 1
  %153 = bitcast %struct.SkPoint* %29 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %29, i64 0, i32 1
  %156 = bitcast float* %155 to i32*
  %157 = load i32, i32* %156, align 4
  br label %158

158:                                              ; preds = %150, %44, %93, %101, %123, %119, %128, %80, %112, %133
  %159 = phi i32 [ -1, %133 ], [ 1, %112 ], [ 1, %80 ], [ 1, %128 ], [ %24, %119 ], [ 1, %123 ], [ 1, %101 ], [ 1, %93 ], [ 1, %44 ], [ 1, %150 ]
  %160 = phi i32 [ %37, %133 ], [ %66, %112 ], [ %37, %80 ], [ %66, %128 ], [ %66, %119 ], [ %66, %123 ], [ %37, %101 ], [ %66, %93 ], [ %37, %44 ], [ %157, %150 ]
  %161 = phi i32 [ %36, %133 ], [ %63, %112 ], [ %36, %80 ], [ %63, %128 ], [ %63, %119 ], [ %63, %123 ], [ %36, %101 ], [ %63, %93 ], [ %36, %44 ], [ %154, %150 ]
  %162 = phi i32 [ %35, %133 ], [ %35, %112 ], [ %35, %80 ], [ %35, %128 ], [ %37, %119 ], [ %35, %123 ], [ %35, %101 ], [ %35, %93 ], [ %35, %44 ], [ %35, %150 ]
  %163 = phi i32 [ %34, %133 ], [ %34, %112 ], [ %34, %80 ], [ %34, %128 ], [ %36, %119 ], [ %34, %123 ], [ %34, %101 ], [ %34, %93 ], [ %34, %44 ], [ %34, %150 ]
  %164 = phi i32 [ %33, %133 ], [ %116, %112 ], [ %33, %80 ], [ %33, %128 ], [ %33, %119 ], [ %66, %123 ], [ %33, %101 ], [ %33, %93 ], [ %33, %44 ], [ %33, %150 ]
  %165 = phi i32 [ %32, %133 ], [ %117, %112 ], [ %32, %80 ], [ %32, %128 ], [ %32, %119 ], [ %63, %123 ], [ %32, %101 ], [ %32, %93 ], [ %32, %44 ], [ %32, %150 ]
  %166 = phi %struct.SkPoint* [ %31, %133 ], [ %31, %112 ], [ %31, %80 ], [ %31, %128 ], [ %31, %119 ], [ %31, %123 ], [ %31, %101 ], [ %31, %93 ], [ %31, %44 ], [ %151, %150 ]
  %167 = phi %struct.SkPoint* [ %30, %133 ], [ %58, %112 ], [ %58, %80 ], [ %58, %128 ], [ %58, %119 ], [ %58, %123 ], [ %58, %101 ], [ %58, %93 ], [ %30, %44 ], [ %30, %150 ]
  %168 = phi %struct.SkPoint* [ %29, %133 ], [ %60, %112 ], [ %60, %80 ], [ %60, %128 ], [ %60, %119 ], [ %60, %123 ], [ %60, %101 ], [ %60, %93 ], [ %29, %44 ], [ %152, %150 ]
  %169 = phi %struct.SkPoint* [ %28, %133 ], [ %54, %112 ], [ %54, %80 ], [ %54, %128 ], [ %54, %119 ], [ %54, %123 ], [ %54, %101 ], [ %54, %93 ], [ %28, %44 ], [ %28, %150 ]
  %170 = phi i8 [ %27, %133 ], [ %99, %112 ], [ %27, %80 ], [ %99, %128 ], [ %99, %119 ], [ %99, %123 ], [ %27, %101 ], [ 0, %93 ], [ %27, %44 ], [ 1, %150 ]
  %171 = phi i8 [ %26, %133 ], [ %55, %112 ], [ %55, %80 ], [ %55, %128 ], [ %55, %119 ], [ %55, %123 ], [ %55, %101 ], [ %55, %93 ], [ %26, %44 ], [ %26, %150 ]
  %172 = phi i8 [ 1, %133 ], [ %56, %112 ], [ %56, %80 ], [ %56, %128 ], [ %56, %119 ], [ %56, %123 ], [ %56, %101 ], [ %56, %93 ], [ %25, %44 ], [ %25, %150 ]
  %173 = phi i32 [ %24, %133 ], [ %118, %112 ], [ %24, %80 ], [ 4, %128 ], [ 2, %119 ], [ 3, %123 ], [ %24, %101 ], [ 1, %93 ], [ %24, %44 ], [ %24, %150 ]
  %174 = add nsw i32 %23, %159
  store i32 %174, i32* %2, align 4
  %175 = icmp slt i32 %174, %14
  br i1 %175, label %22, label %176

176:                                              ; preds = %158, %22
  %177 = phi i32 [ %162, %158 ], [ %35, %22 ]
  %178 = phi i32 [ %163, %158 ], [ %34, %22 ]
  %179 = phi i32 [ %164, %158 ], [ %33, %22 ]
  %180 = phi i32 [ %165, %158 ], [ %32, %22 ]
  %181 = phi %struct.SkPoint* [ %166, %158 ], [ %31, %22 ]
  %182 = phi %struct.SkPoint* [ %167, %158 ], [ %30, %22 ]
  %183 = phi %struct.SkPoint* [ %169, %158 ], [ %28, %22 ]
  %184 = phi i8 [ %171, %158 ], [ %26, %22 ]
  %185 = phi i32 [ %173, %158 ], [ %24, %22 ]
  %186 = add i32 %185, -3
  %187 = icmp ugt i32 %186, 1
  br i1 %187, label %236, label %188

188:                                              ; preds = %176
  %189 = icmp eq %struct.SkPoint* %183, null
  br i1 %189, label %191, label %190

190:                                              ; preds = %188
  store %struct.SkPoint* %183, %struct.SkPoint** %3, align 8
  br label %191

191:                                              ; preds = %188, %190
  %192 = bitcast %struct.SkPoint* %181 to <2 x float>*
  %193 = load <2 x float>, <2 x float>* %192, align 4
  %194 = bitcast %struct.SkPoint* %182 to <2 x float>*
  %195 = load <2 x float>, <2 x float>* %194, align 4
  %196 = fsub <2 x float> %193, %195
  %197 = fcmp une <2 x float> %196, zeroinitializer
  %198 = extractelement <2 x i1> %197, i32 0
  %199 = extractelement <2 x i1> %197, i32 1
  %200 = and i1 %198, %199
  br i1 %200, label %236, label %201

201:                                              ; preds = %191
  %202 = icmp eq %struct.SkRect* %6, null
  br i1 %202, label %220, label %203

203:                                              ; preds = %201
  %204 = bitcast i32 %180 to float
  %205 = bitcast i32 %178 to float
  %206 = fcmp olt float %204, %205
  %207 = select i1 %206, float %204, float %205
  %208 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 0
  store float %207, float* %208, align 4
  %209 = fcmp olt float %205, %204
  %210 = select i1 %209, float %204, float %205
  %211 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 2
  store float %210, float* %211, align 4
  %212 = bitcast i32 %179 to float
  %213 = bitcast i32 %177 to float
  %214 = fcmp olt float %212, %213
  %215 = select i1 %214, float %212, float %213
  %216 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 1
  store float %215, float* %216, align 4
  %217 = fcmp olt float %213, %212
  %218 = select i1 %217, float %212, float %213
  %219 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %6, i64 0, i32 3
  store float %218, float* %219, align 4
  br label %220

220:                                              ; preds = %201, %203
  %221 = icmp eq i8* %4, null
  br i1 %221, label %224, label %222

222:                                              ; preds = %220
  %223 = and i8 %184, 1
  store i8 %223, i8* %4, align 1
  br label %224

224:                                              ; preds = %220, %222
  %225 = icmp eq i32* %5, null
  br i1 %225, label %236, label %226

226:                                              ; preds = %224
  %227 = load i8, i8* %10, align 1
  %228 = sext i8 %227 to i32
  %229 = getelementptr inbounds [5 x i8], [5 x i8]* %8, i64 0, i64 1
  %230 = load i8, i8* %229, align 1
  %231 = add i8 %230, 1
  %232 = and i8 %231, 3
  %233 = zext i8 %232 to i32
  %234 = icmp ne i32 %228, %233
  %235 = zext i1 %234 to i32
  store i32 %235, i32* %5, align 4
  br label %236

236:                                              ; preds = %119, %128, %123, %95, %76, %52, %140, %44, %44, %44, %7, %226, %224, %191, %176
  %237 = phi i1 [ false, %176 ], [ false, %191 ], [ true, %224 ], [ true, %226 ], [ false, %7 ], [ false, %44 ], [ false, %44 ], [ false, %44 ], [ false, %140 ], [ false, %52 ], [ false, %76 ], [ false, %95 ], [ false, %123 ], [ false, %128 ], [ false, %119 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %10) #24
  ret i1 %237
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath6isOvalEP6SkRect(%class.SkPath* nocapture readonly, %struct.SkRect*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 11
  %6 = load i8, i8* %5, align 2, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = icmp eq %struct.SkRect* %1, null
  %9 = or i1 %8, %7
  br i1 %9, label %28, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 9
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %23, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 1
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 0
  %17 = load %struct.SkPoint*, %struct.SkPoint** %16, align 8
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %15, %struct.SkPoint* %17, i32 %19) #24
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 10
  %22 = zext i1 %20 to i8
  store i8 %22, i8* %21, align 1
  store i8 0, i8* %11, align 8
  br label %23

23:                                               ; preds = %14, %10
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 1
  %25 = bitcast %struct.SkRect* %1 to i8*
  %26 = bitcast %struct.SkRect* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 4 %26, i64 16, i1 false) #24
  %27 = load i8, i8* %5, align 1, !range !2
  br label %28

28:                                               ; preds = %23, %2
  %29 = phi i8 [ %27, %23 ], [ %6, %2 ]
  %30 = icmp ne i8 %29, 0
  ret i1 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath7isRRectEP7SkRRect(%class.SkPath* nocapture readonly, %class.SkRRect*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkRRect, align 4
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %5 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %5, i64 0, i32 12
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = icmp eq %class.SkRRect* %1, null
  %10 = or i1 %9, %8
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = bitcast %class.SkRRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %12) #24
  call void @_ZNK9SkPathRef8getRRectEv(%class.SkRRect* nonnull sret %3, %class.SkPathRef* %5) #24
  %13 = bitcast %class.SkRRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %13, i8* nonnull align 4 %12, i64 52, i1 false) #24
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %12) #24
  %14 = load i8, i8* %6, align 1, !range !2
  br label %15

15:                                               ; preds = %11, %2
  %16 = phi i8 [ %14, %11 ], [ %7, %2 ]
  %17 = icmp ne i8 %16, 0
  ret i1 %17
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 3, i32 2
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6SkPath9getPointsEP7SkPointi(%class.SkPath* nocapture readonly, %struct.SkPoint* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %5 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %5, i64 0, i32 3, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, %2
  %9 = select i1 %8, i32 %7, i32 %2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %21, label %11

11:                                               ; preds = %3
  %12 = sext i32 %9 to i64
  %13 = shl nsw i64 %12, 3
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %5, i64 0, i32 3, i32 0
  %15 = bitcast %struct.SkPoint** %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = bitcast %struct.SkPoint* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %16, i64 %13, i1 false) #24
  %18 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %18, i64 0, i32 3, i32 2
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %3, %11
  %22 = phi i32 [ %7, %3 ], [ %20, %11 ]
  ret i32 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK6SkPath8getPointEi(%class.SkPath* nocapture readonly, i32) local_unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp ugt i32 %6, %1
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 0
  %10 = load %struct.SkPoint*, %struct.SkPoint** %9, align 8
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 %11
  %13 = bitcast %struct.SkPoint* %12 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4
  br label %15

15:                                               ; preds = %2, %8
  %16 = phi <2 x float> [ %14, %8 ], [ zeroinitializer, %2 ]
  ret <2 x float> %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK6SkPath10countVerbsEv(%class.SkPath* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 4, i32 2
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6SkPath8getVerbsEPhi(%class.SkPath* nocapture readonly, i8* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %5 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %5, i64 0, i32 4, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, %2
  %9 = select i1 %8, i32 %7, i32 %2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %5, i64 0, i32 4, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = sext i32 %9 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* align 1 %13, i64 %14, i1 false)
  %15 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 4, i32 2
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %3, %11
  %19 = phi i32 [ %7, %3 ], [ %17, %11 ]
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK6SkPath20approximateBytesUsedEv(%class.SkPath* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = icmp eq %class.SkPathRef* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = tail call i64 @_ZNK9SkPathRef20approximateBytesUsedEv(%class.SkPathRef* nonnull %3) #24
  %7 = add i64 %6, 16
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i64 [ %7, %5 ], [ 16, %1 ]
  ret i64 %9
}

declare i64 @_ZNK9SkPathRef20approximateBytesUsedEv(%class.SkPathRef*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath9getLastPtEP7SkPoint(%class.SkPath* nocapture readonly, %struct.SkPoint*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  %8 = icmp ne %struct.SkPoint* %1, null
  br i1 %7, label %9, label %19

9:                                                ; preds = %2
  br i1 %8, label %10, label %23

10:                                               ; preds = %9
  %11 = add nsw i32 %6, -1
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 0
  %13 = load %struct.SkPoint*, %struct.SkPoint** %12, align 8
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 %14
  %16 = bitcast %struct.SkPoint* %15 to i64*
  %17 = bitcast %struct.SkPoint* %1 to i64*
  %18 = load i64, i64* %16, align 4
  store i64 %18, i64* %17, align 4
  br label %23

19:                                               ; preds = %2
  br i1 %8, label %20, label %23

20:                                               ; preds = %19
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  store float 0.000000e+00, float* %21, align 4
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  store float 0.000000e+00, float* %22, align 4
  br label %23

23:                                               ; preds = %19, %20, %9, %10
  %24 = phi i1 [ true, %10 ], [ true, %9 ], [ false, %20 ], [ false, %19 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath5setPtEiff(%class.SkPath*, i32, float, float) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkPathRef::Editor", align 8
  %6 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %7 = load %class.SkPathRef*, %class.SkPathRef** %6, align 8
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 3, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp sgt i32 %9, %1
  br i1 %10, label %11, label %23

11:                                               ; preds = %4
  %12 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %13 = bitcast %"class.SkPathRef::Editor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #24
  %14 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %5, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %14, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %5, %class.sk_sp* %12, i32 0, i32 0) #24
  %15 = load %class.SkPathRef*, %class.SkPathRef** %14, align 8
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 11
  store i8 0, i8* %16, align 2
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 12
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 3, i32 0
  %19 = load %struct.SkPoint*, %struct.SkPoint** %18, align 8
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %19, i64 %20, i32 0
  store float %2, float* %21, align 4
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %19, i64 %20, i32 1
  store float %3, float* %22, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #24
  br label %23

23:                                               ; preds = %4, %11
  ret void
}

declare void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"*, %class.sk_sp*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath9setLastPtEff(%class.SkPath*, float, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkPathRef::Editor", align 8
  %5 = alloca %"class.SkPathRef::Editor", align 8
  %6 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %8 = load %class.SkPathRef*, %class.SkPathRef** %7, align 8
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 3, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %3
  %13 = bitcast %"class.SkPathRef::Editor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #24
  %14 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %4, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %14, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %4, %class.sk_sp* %6, i32 0, i32 0) #24
  %15 = load %class.SkPathRef*, %class.SkPathRef** %7, align 8
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 3, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %17, i32* %18, align 8
  %19 = load %class.SkPathRef*, %class.SkPathRef** %14, align 8
  %20 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %19, i32 0, float 0.000000e+00) #24
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %20, i64 0, i32 0
  store float %1, float* %21, align 4
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %20, i64 0, i32 1
  store float %2, float* %22, align 4
  %23 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %23 monotonic, align 1
  %24 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %24 monotonic, align 1
  br label %37

25:                                               ; preds = %3
  %26 = bitcast %"class.SkPathRef::Editor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #24
  %27 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %5, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %27, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %5, %class.sk_sp* %6, i32 0, i32 0) #24
  %28 = add nsw i32 %10, -1
  %29 = load %class.SkPathRef*, %class.SkPathRef** %27, align 8
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %29, i64 0, i32 11
  store i8 0, i8* %30, align 2
  %31 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %29, i64 0, i32 12
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %29, i64 0, i32 3, i32 0
  %33 = load %struct.SkPoint*, %struct.SkPoint** %32, align 8
  %34 = sext i32 %28 to i64
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %33, i64 %34, i32 0
  store float %1, float* %35, align 4
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %33, i64 %34, i32 1
  store float %2, float* %36, align 4
  br label %37

37:                                               ; preds = %25, %12
  %38 = phi i8* [ %26, %25 ], [ %13, %12 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* returned, float, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkPathRef::Editor", align 8
  %5 = bitcast %"class.SkPathRef::Editor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #24
  %6 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %4, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %6, align 8
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %4, %class.sk_sp* %7, i32 0, i32 0) #24
  %8 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %9 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %10 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 3, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %11, i32* %12, align 8
  %13 = load %class.SkPathRef*, %class.SkPathRef** %6, align 8
  %14 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %13, i32 0, float 0.000000e+00) #24
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 0
  store float %1, float* %15, align 4
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 1
  store float %2, float* %16, align 4
  %17 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %17 monotonic, align 1
  %18 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %18 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #24
  ret %class.SkPath* %0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK6SkPath12setConvexityE15SkPathConvexity(%class.SkPath* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = trunc i32 %1 to i8
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %3, i8* %4 monotonic, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath19isConvexityAccurateEv(%class.SkPath*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 monotonic, align 1
  %4 = icmp eq i8 %3, 2
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = zext i8 %3 to i32
  %7 = tail call i32 @_ZNK6SkPath16computeConvexityEv(%class.SkPath* %0)
  %8 = icmp eq i32 %7, %6
  br i1 %8, label %9, label %10

9:                                                ; preds = %1, %5
  br label %10

10:                                               ; preds = %5, %9
  %11 = phi i1 [ true, %9 ], [ false, %5 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6SkPath16computeConvexityEv(%class.SkPath*) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 9
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 10
  %9 = load i8, i8* %8, align 1, !range !2
  br label %19

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 1
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 3, i32 0
  %13 = load %struct.SkPoint*, %struct.SkPoint** %12, align 8
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 3, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %11, %struct.SkPoint* %13, i32 %15) #24
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 10
  %18 = zext i1 %16 to i8
  store i8 %18, i8* %17, align 1
  store i8 0, i8* %4, align 8
  br label %19

19:                                               ; preds = %7, %10
  %20 = phi i8 [ %9, %7 ], [ %18, %10 ]
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %456, label %22

22:                                               ; preds = %19
  %23 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %23, i64 0, i32 3, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp sgt i32 %27, 0
  %29 = icmp slt i32 %27, %25
  %30 = and i1 %28, %29
  %31 = select i1 %30, i32 %27, i32 %25
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %23, i64 0, i32 3, i32 0
  %33 = load %struct.SkPoint*, %struct.SkPoint** %32, align 8
  %34 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %23, i64 0, i32 4, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %23, i64 0, i32 4, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = icmp sgt i32 %35, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %22
  %40 = zext i32 %35 to i64
  br label %41

41:                                               ; preds = %46, %39
  %42 = phi i64 [ 0, %39 ], [ %47, %46 ]
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = add nuw nsw i64 %42, 1
  %48 = icmp eq i64 %47, %40
  br i1 %48, label %51, label %41

49:                                               ; preds = %41
  %50 = trunc i64 %42 to i32
  br label %51

51:                                               ; preds = %46, %22, %49
  %52 = phi i32 [ %35, %22 ], [ %50, %49 ], [ %35, %46 ]
  %53 = add nsw i32 %52, -1
  %54 = icmp sgt i32 %53, 0
  %55 = sext i32 %53 to i64
  %56 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %33, i64 %55
  %57 = select i1 %54, %struct.SkPoint* %56, %struct.SkPoint* %33
  %58 = select i1 %54, i32 %53, i32 0
  %59 = sub nsw i32 %31, %58
  %60 = tail call i32 @_ZN12Convexicator6BySignEPK7SkPointi(%struct.SkPoint* %57, i32 %59)
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %456

62:                                               ; preds = %51
  %63 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %64 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %63, i64 0, i32 4, i32 0
  %65 = bitcast i8** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %63, i64 0, i32 9
  %68 = load i8, i8* %67, align 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %62
  %71 = inttoptr i64 %66 to i8*
  %72 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %63, i64 0, i32 10
  %73 = load i8, i8* %72, align 1, !range !2
  br label %86

74:                                               ; preds = %62
  %75 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %63, i64 0, i32 1
  %76 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %63, i64 0, i32 3, i32 0
  %77 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  %78 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %63, i64 0, i32 3, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %75, %struct.SkPoint* %77, i32 %79) #24
  %81 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %63, i64 0, i32 10
  %82 = zext i1 %80 to i8
  store i8 %82, i8* %81, align 1
  store i8 0, i8* %67, align 8
  %83 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %84 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %83, i64 0, i32 4, i32 0
  %85 = load i8*, i8** %84, align 8
  br label %86

86:                                               ; preds = %74, %70
  %87 = phi i8* [ %71, %70 ], [ %85, %74 ]
  %88 = phi %class.SkPathRef* [ %63, %70 ], [ %83, %74 ]
  %89 = phi i8 [ %73, %70 ], [ %82, %74 ]
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %86
  %92 = icmp eq i8* %87, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %91
  %94 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %88, i64 0, i32 4, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i8, i8* %87, i64 %96
  br label %98

98:                                               ; preds = %86, %91, %93
  %99 = phi i8* [ %97, %93 ], [ null, %91 ], [ %87, %86 ]
  %100 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %88, i64 0, i32 3, i32 0
  %101 = load %struct.SkPoint*, %struct.SkPoint** %100, align 8
  %102 = inttoptr i64 %66 to i8*
  %103 = icmp eq i8* %99, %102
  br i1 %103, label %419, label %104

104:                                              ; preds = %98, %326
  %105 = phi i8* [ %328, %326 ], [ %102, %98 ]
  %106 = phi i8 [ %329, %326 ], [ 0, %98 ]
  %107 = phi i32 [ %330, %326 ], [ 0, %98 ]
  %108 = phi i32 [ %339, %326 ], [ 0, %98 ]
  %109 = phi i32 [ %338, %326 ], [ 0, %98 ]
  %110 = phi %struct.SkPoint* [ %340, %326 ], [ %101, %98 ]
  %111 = phi i32 [ %331, %326 ], [ 0, %98 ]
  %112 = phi i32 [ %332, %326 ], [ 0, %98 ]
  %113 = phi i32 [ %333, %326 ], [ 0, %98 ]
  %114 = phi <2 x float> [ %334, %326 ], [ zeroinitializer, %98 ]
  %115 = phi <2 x float> [ %335, %326 ], [ zeroinitializer, %98 ]
  %116 = phi i32 [ %336, %326 ], [ 5, %98 ]
  %117 = phi i32 [ %337, %326 ], [ 2, %98 ]
  %118 = load i8, i8* %105, align 1, !noalias !8
  %119 = icmp ult i8 %118, 6
  br i1 %119, label %121, label %120

120:                                              ; preds = %104
  tail call void @llvm.trap() #24, !noalias !8
  unreachable

121:                                              ; preds = %104
  %122 = sext i8 %118 to i64
  %123 = getelementptr inbounds [6 x i64], [6 x i64]* @switch.table._ZNK6SkPath16computeConvexityEv, i64 0, i64 %122
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %110, i64 %124
  switch i32 %107, label %301 [
    i32 0, label %126
    i32 1, label %134
  ]

126:                                              ; preds = %121
  %127 = icmp eq i8 %118, 0
  br i1 %127, label %128, label %134

128:                                              ; preds = %126
  %129 = bitcast %struct.SkPoint* %125 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %110, i64 %124, i32 1
  %132 = bitcast float* %131 to i32*
  %133 = load i32, i32* %132, align 4
  br label %303

134:                                              ; preds = %121, %126
  %135 = phi i8 [ 1, %126 ], [ %106, %121 ]
  switch i8 %118, label %212 [
    i8 5, label %136
    i8 0, label %136
  ]

136:                                              ; preds = %134, %134
  %137 = bitcast i32 %111 to float
  %138 = bitcast i32 %108 to float
  %139 = fcmp oeq float %137, %138
  %140 = bitcast i32 %112 to float
  %141 = bitcast i32 %109 to float
  %142 = fcmp oeq float %140, %141
  %143 = and i1 %139, %142
  br i1 %143, label %176, label %144

144:                                              ; preds = %136
  %145 = fsub float %138, %137
  %146 = insertelement <2 x float> undef, float %145, i32 0
  %147 = fsub float %141, %140
  %148 = insertelement <2 x float> %146, float %147, i32 1
  %149 = extractelement <2 x float> %115, i32 0
  %150 = fmul float %149, %147
  %151 = extractelement <2 x float> %115, i32 1
  %152 = fmul float %151, %145
  %153 = fsub float %150, %152
  %154 = bitcast float %153 to i32
  %155 = and i32 %154, 2139095040
  %156 = icmp eq i32 %155, 2139095040
  br i1 %156, label %456, label %157

157:                                              ; preds = %144
  %158 = fcmp oeq float %153, 0.000000e+00
  br i1 %158, label %159, label %164

159:                                              ; preds = %157
  %160 = fmul float %149, %145
  %161 = fmul float %151, %147
  %162 = fadd float %160, %161
  %163 = fcmp olt float %162, 0.000000e+00
  br i1 %163, label %173, label %176

164:                                              ; preds = %157
  %165 = fcmp ogt float %153, 0.000000e+00
  %166 = select i1 %165, i32 2, i32 1
  %167 = icmp eq i32 %116, 5
  br i1 %167, label %168, label %171

168:                                              ; preds = %164
  %169 = xor i1 %165, true
  %170 = zext i1 %169 to i32
  br label %176

171:                                              ; preds = %164
  %172 = icmp eq i32 %166, %116
  br i1 %172, label %176, label %456

173:                                              ; preds = %159
  %174 = add nsw i32 %113, 1
  %175 = icmp slt i32 %174, 3
  br i1 %175, label %176, label %456

176:                                              ; preds = %136, %159, %173, %171, %168
  %177 = phi i32 [ %117, %173 ], [ %117, %159 ], [ %170, %168 ], [ %117, %171 ], [ %117, %136 ]
  %178 = phi i32 [ %116, %173 ], [ %116, %159 ], [ %166, %168 ], [ %116, %171 ], [ %116, %136 ]
  %179 = phi <2 x float> [ %148, %173 ], [ %115, %159 ], [ %148, %168 ], [ %148, %171 ], [ %115, %136 ]
  %180 = phi i32 [ %174, %173 ], [ %113, %159 ], [ %113, %168 ], [ %113, %171 ], [ %113, %136 ]
  %181 = phi i32 [ %109, %173 ], [ %109, %159 ], [ %109, %168 ], [ %109, %171 ], [ %112, %136 ]
  %182 = phi i32 [ %108, %173 ], [ %108, %159 ], [ %108, %168 ], [ %108, %171 ], [ %111, %136 ]
  %183 = extractelement <2 x float> %179, i32 0
  %184 = extractelement <2 x float> %114, i32 1
  %185 = fmul float %183, %184
  %186 = extractelement <2 x float> %179, i32 1
  %187 = extractelement <2 x float> %114, i32 0
  %188 = fmul float %186, %187
  %189 = fsub float %185, %188
  %190 = bitcast float %189 to i32
  %191 = and i32 %190, 2139095040
  %192 = icmp eq i32 %191, 2139095040
  br i1 %192, label %456, label %193

193:                                              ; preds = %176
  %194 = fcmp oeq float %189, 0.000000e+00
  br i1 %194, label %195, label %200

195:                                              ; preds = %193
  %196 = fmul float %183, %187
  %197 = fmul float %186, %184
  %198 = fadd float %197, %196
  %199 = fcmp olt float %198, 0.000000e+00
  br i1 %199, label %209, label %310

200:                                              ; preds = %193
  %201 = fcmp ogt float %189, 0.000000e+00
  %202 = select i1 %201, i32 2, i32 1
  %203 = icmp eq i32 %178, 5
  br i1 %203, label %204, label %207

204:                                              ; preds = %200
  %205 = xor i1 %201, true
  %206 = zext i1 %205 to i32
  br label %310

207:                                              ; preds = %200
  %208 = icmp eq i32 %202, %178
  br i1 %208, label %310, label %456

209:                                              ; preds = %195
  %210 = add nsw i32 %180, 1
  %211 = icmp slt i32 %210, 3
  br i1 %211, label %310, label %456

212:                                              ; preds = %134
  %213 = zext i8 %118 to i64
  %214 = add nsw i64 %213, -5
  %215 = icmp ult i64 %214, 2
  br i1 %215, label %310, label %216

216:                                              ; preds = %212
  %217 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZZN10SkPathPriv9PtsInVerbEjE10gPtsInVerb, i64 0, i64 %213
  %218 = load i8, i8* %217, align 1
  %219 = bitcast i32 %108 to float
  %220 = bitcast i32 %109 to float
  %221 = zext i8 %218 to i64
  br label %222

222:                                              ; preds = %291, %216
  %223 = phi i64 [ %299, %291 ], [ 1, %216 ]
  %224 = phi i32 [ %298, %291 ], [ %111, %216 ]
  %225 = phi i32 [ %297, %291 ], [ %112, %216 ]
  %226 = phi i32 [ %296, %291 ], [ %113, %216 ]
  %227 = phi <2 x float> [ %295, %291 ], [ %114, %216 ]
  %228 = phi <2 x float> [ %294, %291 ], [ %115, %216 ]
  %229 = phi i32 [ %293, %291 ], [ %116, %216 ]
  %230 = phi i32 [ %292, %291 ], [ %117, %216 ]
  %231 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %125, i64 %223
  %232 = bitcast i32 %224 to float
  %233 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %231, i64 0, i32 0
  %234 = load float, float* %233, align 4
  %235 = fcmp oeq float %234, %232
  %236 = bitcast float %234 to i32
  %237 = bitcast i32 %225 to float
  br i1 %235, label %238, label %242

238:                                              ; preds = %222
  %239 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %231, i64 0, i32 1
  %240 = load float, float* %239, align 4
  %241 = fcmp oeq float %240, %237
  br i1 %241, label %291, label %242

242:                                              ; preds = %222, %238
  %243 = fcmp oeq float %219, %232
  br i1 %243, label %244, label %256

244:                                              ; preds = %242
  %245 = fcmp oeq float %237, %220
  %246 = icmp eq i32 %229, 5
  %247 = and i1 %246, %245
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = fsub float %234, %232
  %250 = insertelement <2 x float> undef, float %249, i32 0
  %251 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %231, i64 0, i32 1
  %252 = load float, float* %251, align 4
  %253 = fsub float %252, %237
  %254 = insertelement <2 x float> %250, float %253, i32 1
  %255 = bitcast float %252 to i32
  br label %291

256:                                              ; preds = %242, %244
  %257 = fsub float %234, %232
  %258 = insertelement <2 x float> undef, float %257, i32 0
  %259 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %231, i64 0, i32 1
  %260 = load float, float* %259, align 4
  %261 = fsub float %260, %237
  %262 = insertelement <2 x float> %258, float %261, i32 1
  %263 = extractelement <2 x float> %228, i32 0
  %264 = fmul float %263, %261
  %265 = extractelement <2 x float> %228, i32 1
  %266 = fmul float %265, %257
  %267 = fsub float %264, %266
  %268 = bitcast float %267 to i32
  %269 = and i32 %268, 2139095040
  %270 = icmp eq i32 %269, 2139095040
  %271 = bitcast float %260 to i32
  br i1 %270, label %456, label %272

272:                                              ; preds = %256
  %273 = fcmp oeq float %267, 0.000000e+00
  br i1 %273, label %274, label %279

274:                                              ; preds = %272
  %275 = fmul float %263, %257
  %276 = fmul float %265, %261
  %277 = fadd float %275, %276
  %278 = fcmp olt float %277, 0.000000e+00
  br i1 %278, label %288, label %291

279:                                              ; preds = %272
  %280 = fcmp ogt float %267, 0.000000e+00
  %281 = select i1 %280, i32 2, i32 1
  %282 = icmp eq i32 %229, 5
  br i1 %282, label %283, label %286

283:                                              ; preds = %279
  %284 = xor i1 %280, true
  %285 = zext i1 %284 to i32
  br label %291

286:                                              ; preds = %279
  %287 = icmp eq i32 %281, %229
  br i1 %287, label %291, label %456

288:                                              ; preds = %274
  %289 = add nsw i32 %226, 1
  %290 = icmp slt i32 %289, 3
  br i1 %290, label %291, label %456

291:                                              ; preds = %248, %274, %288, %286, %283, %238
  %292 = phi i32 [ %230, %238 ], [ %230, %248 ], [ %230, %288 ], [ %230, %274 ], [ %285, %283 ], [ %230, %286 ]
  %293 = phi i32 [ %229, %238 ], [ 5, %248 ], [ %229, %288 ], [ %229, %274 ], [ %281, %283 ], [ %229, %286 ]
  %294 = phi <2 x float> [ %228, %238 ], [ %254, %248 ], [ %262, %288 ], [ %228, %274 ], [ %262, %283 ], [ %262, %286 ]
  %295 = phi <2 x float> [ %227, %238 ], [ %254, %248 ], [ %227, %288 ], [ %227, %274 ], [ %227, %283 ], [ %227, %286 ]
  %296 = phi i32 [ %226, %238 ], [ %226, %248 ], [ %289, %288 ], [ %226, %274 ], [ %226, %283 ], [ %226, %286 ]
  %297 = phi i32 [ %225, %238 ], [ %255, %248 ], [ %271, %288 ], [ %271, %274 ], [ %271, %283 ], [ %271, %286 ]
  %298 = phi i32 [ %224, %238 ], [ %236, %248 ], [ %236, %288 ], [ %236, %274 ], [ %236, %283 ], [ %236, %286 ]
  %299 = add nuw nsw i64 %223, 1
  %300 = icmp ult i64 %223, %221
  br i1 %300, label %222, label %310

301:                                              ; preds = %121
  %302 = icmp eq i8 %118, 0
  br i1 %302, label %303, label %456

303:                                              ; preds = %128, %301
  %304 = phi i32 [ %108, %301 ], [ %130, %128 ]
  %305 = phi i32 [ %109, %301 ], [ %133, %128 ]
  %306 = phi i32 [ %116, %301 ], [ 5, %128 ]
  %307 = phi i32 [ %112, %301 ], [ %133, %128 ]
  %308 = phi i32 [ %111, %301 ], [ %130, %128 ]
  %309 = getelementptr inbounds i8, i8* %105, i64 1
  br label %326

310:                                              ; preds = %291, %212, %204, %207, %195, %209
  %311 = phi i32 [ %177, %209 ], [ %177, %195 ], [ %177, %207 ], [ %206, %204 ], [ %117, %212 ], [ %292, %291 ]
  %312 = phi i32 [ %178, %209 ], [ %178, %195 ], [ %178, %207 ], [ %202, %204 ], [ %116, %212 ], [ %293, %291 ]
  %313 = phi <2 x float> [ %114, %209 ], [ %179, %195 ], [ %114, %207 ], [ %114, %204 ], [ %115, %212 ], [ %294, %291 ]
  %314 = phi <2 x float> [ %114, %209 ], [ %114, %195 ], [ %114, %207 ], [ %114, %204 ], [ %114, %212 ], [ %295, %291 ]
  %315 = phi i32 [ %210, %209 ], [ %180, %195 ], [ %180, %207 ], [ %180, %204 ], [ %113, %212 ], [ %296, %291 ]
  %316 = phi i32 [ %181, %209 ], [ %181, %195 ], [ %181, %207 ], [ %181, %204 ], [ %112, %212 ], [ %297, %291 ]
  %317 = phi i32 [ %182, %209 ], [ %182, %195 ], [ %182, %207 ], [ %182, %204 ], [ %111, %212 ], [ %298, %291 ]
  %318 = phi i32 [ 2, %209 ], [ 2, %195 ], [ 2, %207 ], [ 2, %204 ], [ 1, %212 ], [ 1, %291 ]
  %319 = phi i8 [ 0, %209 ], [ 0, %195 ], [ 0, %207 ], [ 0, %204 ], [ %135, %212 ], [ %135, %291 ]
  %320 = getelementptr inbounds i8, i8* %105, i64 1
  switch i8 %118, label %324 [
    i8 0, label %326
    i8 1, label %326
    i8 2, label %321
    i8 3, label %325
    i8 4, label %322
    i8 5, label %323
  ]

321:                                              ; preds = %310
  br label %326

322:                                              ; preds = %310
  br label %326

323:                                              ; preds = %310
  br label %326

324:                                              ; preds = %310
  tail call void @llvm.trap() #24
  unreachable

325:                                              ; preds = %310
  br label %326

326:                                              ; preds = %310, %310, %321, %322, %323, %303, %325
  %327 = phi i64 [ 2, %325 ], [ 1, %310 ], [ 1, %310 ], [ 2, %321 ], [ 3, %322 ], [ 0, %323 ], [ 1, %303 ]
  %328 = phi i8* [ %320, %325 ], [ %320, %310 ], [ %320, %310 ], [ %320, %321 ], [ %320, %322 ], [ %320, %323 ], [ %309, %303 ]
  %329 = phi i8 [ %319, %325 ], [ %319, %310 ], [ %319, %310 ], [ %319, %321 ], [ %319, %322 ], [ %319, %323 ], [ %106, %303 ]
  %330 = phi i32 [ %318, %325 ], [ %318, %310 ], [ %318, %310 ], [ %318, %321 ], [ %318, %322 ], [ %318, %323 ], [ %107, %303 ]
  %331 = phi i32 [ %317, %325 ], [ %317, %310 ], [ %317, %310 ], [ %317, %321 ], [ %317, %322 ], [ %317, %323 ], [ %308, %303 ]
  %332 = phi i32 [ %316, %325 ], [ %316, %310 ], [ %316, %310 ], [ %316, %321 ], [ %316, %322 ], [ %316, %323 ], [ %307, %303 ]
  %333 = phi i32 [ %315, %325 ], [ %315, %310 ], [ %315, %310 ], [ %315, %321 ], [ %315, %322 ], [ %315, %323 ], [ %113, %303 ]
  %334 = phi <2 x float> [ %314, %325 ], [ %314, %310 ], [ %314, %310 ], [ %314, %321 ], [ %314, %322 ], [ %314, %323 ], [ %114, %303 ]
  %335 = phi <2 x float> [ %313, %325 ], [ %313, %310 ], [ %313, %310 ], [ %313, %321 ], [ %313, %322 ], [ %313, %323 ], [ %115, %303 ]
  %336 = phi i32 [ %312, %325 ], [ %312, %310 ], [ %312, %310 ], [ %312, %321 ], [ %312, %322 ], [ %312, %323 ], [ %306, %303 ]
  %337 = phi i32 [ %311, %325 ], [ %311, %310 ], [ %311, %310 ], [ %311, %321 ], [ %311, %322 ], [ %311, %323 ], [ %117, %303 ]
  %338 = phi i32 [ %109, %325 ], [ %109, %310 ], [ %109, %310 ], [ %109, %321 ], [ %109, %322 ], [ %109, %323 ], [ %305, %303 ]
  %339 = phi i32 [ %108, %325 ], [ %108, %310 ], [ %108, %310 ], [ %108, %321 ], [ %108, %322 ], [ %108, %323 ], [ %304, %303 ]
  %340 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %110, i64 %327
  %341 = icmp eq i8* %99, %328
  br i1 %341, label %342, label %104

342:                                              ; preds = %326
  %343 = and i8 %329, 1
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %419, label %345

345:                                              ; preds = %342
  %346 = bitcast i32 %331 to float
  %347 = bitcast i32 %339 to float
  %348 = fcmp oeq float %346, %347
  %349 = bitcast i32 %332 to float
  %350 = bitcast i32 %338 to float
  %351 = fcmp oeq float %349, %350
  %352 = and i1 %348, %351
  br i1 %352, label %385, label %353

353:                                              ; preds = %345
  %354 = fsub float %347, %346
  %355 = insertelement <2 x float> undef, float %354, i32 0
  %356 = fsub float %350, %349
  %357 = insertelement <2 x float> %355, float %356, i32 1
  %358 = extractelement <2 x float> %335, i32 0
  %359 = fmul float %358, %356
  %360 = extractelement <2 x float> %335, i32 1
  %361 = fmul float %360, %354
  %362 = fsub float %359, %361
  %363 = bitcast float %362 to i32
  %364 = and i32 %363, 2139095040
  %365 = icmp eq i32 %364, 2139095040
  br i1 %365, label %456, label %366

366:                                              ; preds = %353
  %367 = fcmp oeq float %362, 0.000000e+00
  br i1 %367, label %368, label %373

368:                                              ; preds = %366
  %369 = fmul float %358, %354
  %370 = fmul float %360, %356
  %371 = fadd float %369, %370
  %372 = fcmp olt float %371, 0.000000e+00
  br i1 %372, label %382, label %385

373:                                              ; preds = %366
  %374 = fcmp ogt float %362, 0.000000e+00
  %375 = select i1 %374, i32 2, i32 1
  %376 = icmp eq i32 %336, 5
  br i1 %376, label %377, label %380

377:                                              ; preds = %373
  %378 = xor i1 %374, true
  %379 = zext i1 %378 to i32
  br label %385

380:                                              ; preds = %373
  %381 = icmp eq i32 %375, %336
  br i1 %381, label %385, label %456

382:                                              ; preds = %368
  %383 = add nsw i32 %333, 1
  %384 = icmp slt i32 %383, 3
  br i1 %384, label %385, label %456

385:                                              ; preds = %345, %368, %382, %380, %377
  %386 = phi i32 [ %337, %382 ], [ %337, %368 ], [ %379, %377 ], [ %337, %380 ], [ %337, %345 ]
  %387 = phi i32 [ %336, %382 ], [ %336, %368 ], [ %375, %377 ], [ %336, %380 ], [ %336, %345 ]
  %388 = phi <2 x float> [ %357, %382 ], [ %335, %368 ], [ %357, %377 ], [ %357, %380 ], [ %335, %345 ]
  %389 = phi i32 [ %383, %382 ], [ %333, %368 ], [ %333, %377 ], [ %333, %380 ], [ %333, %345 ]
  %390 = extractelement <2 x float> %388, i32 0
  %391 = extractelement <2 x float> %334, i32 1
  %392 = fmul float %390, %391
  %393 = extractelement <2 x float> %388, i32 1
  %394 = extractelement <2 x float> %334, i32 0
  %395 = fmul float %393, %394
  %396 = fsub float %392, %395
  %397 = bitcast float %396 to i32
  %398 = and i32 %397, 2139095040
  %399 = icmp eq i32 %398, 2139095040
  br i1 %399, label %456, label %400

400:                                              ; preds = %385
  %401 = fcmp oeq float %396, 0.000000e+00
  br i1 %401, label %402, label %407

402:                                              ; preds = %400
  %403 = fmul float %390, %394
  %404 = fmul float %393, %391
  %405 = fadd float %404, %403
  %406 = fcmp olt float %405, 0.000000e+00
  br i1 %406, label %416, label %419

407:                                              ; preds = %400
  %408 = fcmp ogt float %396, 0.000000e+00
  %409 = icmp eq i32 %387, 5
  br i1 %409, label %410, label %413

410:                                              ; preds = %407
  %411 = xor i1 %408, true
  %412 = zext i1 %411 to i32
  br label %419

413:                                              ; preds = %407
  %414 = select i1 %408, i32 2, i32 1
  %415 = icmp eq i32 %414, %387
  br i1 %415, label %419, label %456

416:                                              ; preds = %402
  %417 = add nsw i32 %389, 1
  %418 = icmp slt i32 %417, 3
  br i1 %418, label %419, label %456

419:                                              ; preds = %98, %410, %413, %402, %342, %416
  %420 = phi i32 [ %337, %342 ], [ %386, %416 ], [ %386, %402 ], [ %412, %410 ], [ %386, %413 ], [ 2, %98 ]
  %421 = phi i32 [ %333, %342 ], [ %417, %416 ], [ %389, %402 ], [ %389, %410 ], [ %389, %413 ], [ 0, %98 ]
  %422 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load atomic i8, i8* %422 monotonic, align 1
  %424 = icmp eq i8 %423, 2
  br i1 %424, label %425, label %456

425:                                              ; preds = %419
  %426 = icmp eq i32 %420, 2
  br i1 %426, label %427, label %454

427:                                              ; preds = %425
  %428 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %88, i64 0, i32 9
  %429 = load i8, i8* %428, align 8
  %430 = icmp eq i8 %429, 0
  br i1 %430, label %438, label %431

431:                                              ; preds = %427
  %432 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %88, i64 0, i32 1
  %433 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %88, i64 0, i32 3, i32 2
  %434 = load i32, i32* %433, align 4
  %435 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %432, %struct.SkPoint* %101, i32 %434) #24
  %436 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %88, i64 0, i32 10
  %437 = zext i1 %435 to i8
  store i8 %437, i8* %436, align 1
  store i8 0, i8* %428, align 8
  br label %438

438:                                              ; preds = %427, %431
  %439 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %88, i64 0, i32 1, i32 0
  %440 = load float, float* %439, align 4
  %441 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %88, i64 0, i32 1, i32 2
  %442 = load float, float* %441, align 4
  %443 = fcmp olt float %440, %442
  br i1 %443, label %444, label %454

444:                                              ; preds = %438
  %445 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %88, i64 0, i32 1, i32 1
  %446 = load float, float* %445, align 4
  %447 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %88, i64 0, i32 1, i32 3
  %448 = load float, float* %447, align 4
  %449 = fcmp uge float %446, %448
  br i1 %449, label %454, label %450

450:                                              ; preds = %444
  %451 = icmp sgt i32 %421, 2
  %452 = zext i1 %451 to i32
  %453 = zext i1 %451 to i8
  br label %456

454:                                              ; preds = %438, %444, %425
  %455 = trunc i32 %420 to i8
  store atomic i8 %455, i8* %422 monotonic, align 1
  br label %456

456:                                              ; preds = %301, %209, %207, %176, %173, %171, %144, %288, %286, %256, %419, %454, %416, %413, %385, %382, %380, %353, %51, %19, %450
  %457 = phi i8 [ %453, %450 ], [ 1, %19 ], [ 1, %51 ], [ 1, %353 ], [ 1, %380 ], [ 1, %382 ], [ 1, %385 ], [ 1, %413 ], [ 1, %416 ], [ 0, %454 ], [ 0, %419 ], [ 1, %256 ], [ 1, %286 ], [ 1, %288 ], [ 1, %144 ], [ 1, %171 ], [ 1, %173 ], [ 1, %176 ], [ 1, %207 ], [ 1, %209 ], [ 1, %301 ]
  %458 = phi i32 [ %452, %450 ], [ 1, %19 ], [ 1, %51 ], [ 1, %353 ], [ 1, %380 ], [ 1, %382 ], [ 1, %385 ], [ 1, %413 ], [ 1, %416 ], [ 0, %454 ], [ 0, %419 ], [ 1, %256 ], [ 1, %286 ], [ 1, %288 ], [ 1, %144 ], [ 1, %171 ], [ 1, %173 ], [ 1, %176 ], [ 1, %207 ], [ 1, %209 ], [ 1, %301 ]
  %459 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %457, i8* %459 monotonic, align 1
  ret i32 %458
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6SkPath12getConvexityEv(%class.SkPath*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 monotonic, align 1
  %4 = zext i8 %3 to i32
  %5 = icmp eq i8 %3, 2
  br i1 %5, label %6, label %8

6:                                                ; preds = %1
  %7 = tail call i32 @_ZNK6SkPath16computeConvexityEv(%class.SkPath* %0)
  br label %8

8:                                                ; preds = %6, %1
  %9 = phi i32 [ %7, %6 ], [ %4, %1 ]
  ret i32 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath14dirtyAfterEditEv(%class.SkPath* returned) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %2 monotonic, align 1
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %3 monotonic, align 1
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath10incReserveEi(%class.SkPath*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkPathRef::Editor", align 8
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %3, %class.sk_sp* %6, i32 %1, i32 %1) #24
  br label %7

7:                                                ; preds = %5, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath7rMoveToEff(%class.SkPath* returned, float, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkPathRef::Editor", align 8
  %5 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %6 = load %class.SkPathRef*, %class.SkPathRef** %5, align 8
  %7 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %6, i64 0, i32 3, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %3
  %11 = add nsw i32 %8, -1
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %6, i64 0, i32 3, i32 0
  %13 = load %struct.SkPoint*, %struct.SkPoint** %12, align 8
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 %14, i32 0
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 %14, i32 1
  %18 = load float, float* %17, align 4
  br label %19

19:                                               ; preds = %3, %10
  %20 = phi float [ %18, %10 ], [ 0.000000e+00, %3 ]
  %21 = phi float [ %16, %10 ], [ 0.000000e+00, %3 ]
  %22 = fadd float %21, %1
  %23 = fadd float %20, %2
  %24 = bitcast %"class.SkPathRef::Editor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #24
  %25 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %4, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %25, align 8
  %26 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %4, %class.sk_sp* %26, i32 0, i32 0) #24
  %27 = load %class.SkPathRef*, %class.SkPathRef** %5, align 8
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 3, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %29, i32* %30, align 8
  %31 = load %class.SkPathRef*, %class.SkPathRef** %25, align 8
  %32 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %31, i32 0, float 0.000000e+00) #24
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %32, i64 0, i32 0
  store float %22, float* %33, align 4
  %34 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %32, i64 0, i32 1
  store float %23, float* %34, align 4
  %35 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %35 monotonic, align 1
  %36 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %36 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #24
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* returned, float, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkPathRef::Editor", align 8
  %5 = alloca %"class.SkPathRef::Editor", align 8
  %6 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %9, label %39

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %11 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %12 = load %class.SkPathRef*, %class.SkPathRef** %11, align 8
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 4, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %25, label %16

16:                                               ; preds = %9
  %17 = xor i32 %7, -1
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 3, i32 0
  %19 = load %struct.SkPoint*, %struct.SkPoint** %18, align 8
  %20 = sext i32 %17 to i64
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %19, i64 %20, i32 0
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %19, i64 %20, i32 1
  %24 = load float, float* %23, align 4
  br label %25

25:                                               ; preds = %16, %9
  %26 = phi float [ %24, %16 ], [ 0.000000e+00, %9 ]
  %27 = phi float [ %22, %16 ], [ 0.000000e+00, %9 ]
  %28 = bitcast %"class.SkPathRef::Editor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #24
  %29 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %4, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %29, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %4, %class.sk_sp* %10, i32 0, i32 0) #24
  %30 = load %class.SkPathRef*, %class.SkPathRef** %11, align 8
  %31 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %30, i64 0, i32 3, i32 2
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %6, align 8
  %33 = load %class.SkPathRef*, %class.SkPathRef** %29, align 8
  %34 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %33, i32 0, float 0.000000e+00) #24
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %34, i64 0, i32 0
  store float %27, float* %35, align 4
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %34, i64 0, i32 1
  store float %26, float* %36, align 4
  %37 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %37 monotonic, align 1
  %38 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %38 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #24
  br label %39

39:                                               ; preds = %3, %25
  %40 = bitcast %"class.SkPathRef::Editor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #24
  %41 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %5, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %41, align 8
  %42 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %5, %class.sk_sp* %42, i32 0, i32 0) #24
  %43 = load %class.SkPathRef*, %class.SkPathRef** %41, align 8
  %44 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %43, i32 1, float 0.000000e+00) #24
  %45 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 0, i32 0
  store float %1, float* %45, align 4
  %46 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 0, i32 1
  store float %2, float* %46, align 4
  %47 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %47 monotonic, align 1
  %48 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %48 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #24
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath7rLineToEff(%class.SkPath* returned, float, float) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkPathRef::Editor", align 8
  %5 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %8, label %38

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %11 = load %class.SkPathRef*, %class.SkPathRef** %10, align 8
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 4, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %8
  %16 = xor i32 %6, -1
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 3, i32 0
  %18 = load %struct.SkPoint*, %struct.SkPoint** %17, align 8
  %19 = sext i32 %16 to i64
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %18, i64 %19, i32 0
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %18, i64 %19, i32 1
  %23 = load float, float* %22, align 4
  br label %24

24:                                               ; preds = %15, %8
  %25 = phi float [ %23, %15 ], [ 0.000000e+00, %8 ]
  %26 = phi float [ %21, %15 ], [ 0.000000e+00, %8 ]
  %27 = bitcast %"class.SkPathRef::Editor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #24
  %28 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %4, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %28, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %4, %class.sk_sp* %9, i32 0, i32 0) #24
  %29 = load %class.SkPathRef*, %class.SkPathRef** %10, align 8
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %29, i64 0, i32 3, i32 2
  %31 = load i32, i32* %30, align 4
  store i32 %31, i32* %5, align 8
  %32 = load %class.SkPathRef*, %class.SkPathRef** %28, align 8
  %33 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %32, i32 0, float 0.000000e+00) #24
  %34 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %33, i64 0, i32 0
  store float %26, float* %34, align 4
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %33, i64 0, i32 1
  store float %25, float* %35, align 4
  %36 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %36 monotonic, align 1
  %37 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %37 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #24
  br label %38

38:                                               ; preds = %3, %24
  %39 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %40 = load %class.SkPathRef*, %class.SkPathRef** %39, align 8
  %41 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %40, i64 0, i32 3, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %53

44:                                               ; preds = %38
  %45 = add nsw i32 %42, -1
  %46 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %40, i64 0, i32 3, i32 0
  %47 = load %struct.SkPoint*, %struct.SkPoint** %46, align 8
  %48 = sext i32 %45 to i64
  %49 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %47, i64 %48, i32 0
  %50 = load float, float* %49, align 4
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %47, i64 %48, i32 1
  %52 = load float, float* %51, align 4
  br label %53

53:                                               ; preds = %38, %44
  %54 = phi float [ %52, %44 ], [ 0.000000e+00, %38 ]
  %55 = phi float [ %50, %44 ], [ 0.000000e+00, %38 ]
  %56 = fadd float %55, %1
  %57 = fadd float %54, %2
  %58 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %56, float %57)
  ret %class.SkPath* %58
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* returned, float, float, float, float) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkPathRef::Editor", align 8
  %7 = alloca %"class.SkPathRef::Editor", align 8
  %8 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %41

11:                                               ; preds = %5
  %12 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %14 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 4, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %11
  %19 = xor i32 %9, -1
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 3, i32 0
  %21 = load %struct.SkPoint*, %struct.SkPoint** %20, align 8
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %21, i64 %22, i32 0
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %21, i64 %22, i32 1
  %26 = load float, float* %25, align 4
  br label %27

27:                                               ; preds = %18, %11
  %28 = phi float [ %26, %18 ], [ 0.000000e+00, %11 ]
  %29 = phi float [ %24, %18 ], [ 0.000000e+00, %11 ]
  %30 = bitcast %"class.SkPathRef::Editor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #24
  %31 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %6, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %31, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %6, %class.sk_sp* %12, i32 0, i32 0) #24
  %32 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %33 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %32, i64 0, i32 3, i32 2
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %8, align 8
  %35 = load %class.SkPathRef*, %class.SkPathRef** %31, align 8
  %36 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %35, i32 0, float 0.000000e+00) #24
  %37 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %36, i64 0, i32 0
  store float %29, float* %37, align 4
  %38 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %36, i64 0, i32 1
  store float %28, float* %38, align 4
  %39 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %39 monotonic, align 1
  %40 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %40 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #24
  br label %41

41:                                               ; preds = %5, %27
  %42 = bitcast %"class.SkPathRef::Editor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #24
  %43 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %7, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %43, align 8
  %44 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %7, %class.sk_sp* %44, i32 0, i32 0) #24
  %45 = load %class.SkPathRef*, %class.SkPathRef** %43, align 8
  %46 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %45, i32 2, float 0.000000e+00) #24
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %46, i64 0, i32 0
  store float %1, float* %47, align 4
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %46, i64 0, i32 1
  store float %2, float* %48, align 4
  %49 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %46, i64 1, i32 0
  store float %3, float* %49, align 4
  %50 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %46, i64 1, i32 1
  store float %4, float* %50, align 4
  %51 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %51 monotonic, align 1
  %52 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %52 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #24
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath7rQuadToEffff(%class.SkPath* returned, float, float, float, float) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkPathRef::Editor", align 8
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %10, label %40

10:                                               ; preds = %5
  %11 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %12 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %13 = load %class.SkPathRef*, %class.SkPathRef** %12, align 8
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %13, i64 0, i32 4, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %10
  %18 = xor i32 %8, -1
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %13, i64 0, i32 3, i32 0
  %20 = load %struct.SkPoint*, %struct.SkPoint** %19, align 8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %20, i64 %21, i32 0
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %20, i64 %21, i32 1
  %25 = load float, float* %24, align 4
  br label %26

26:                                               ; preds = %17, %10
  %27 = phi float [ %25, %17 ], [ 0.000000e+00, %10 ]
  %28 = phi float [ %23, %17 ], [ 0.000000e+00, %10 ]
  %29 = bitcast %"class.SkPathRef::Editor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #24
  %30 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %6, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %30, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %6, %class.sk_sp* %11, i32 0, i32 0) #24
  %31 = load %class.SkPathRef*, %class.SkPathRef** %12, align 8
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %31, i64 0, i32 3, i32 2
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %7, align 8
  %34 = load %class.SkPathRef*, %class.SkPathRef** %30, align 8
  %35 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %34, i32 0, float 0.000000e+00) #24
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 0, i32 0
  store float %28, float* %36, align 4
  %37 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 0, i32 1
  store float %27, float* %37, align 4
  %38 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %38 monotonic, align 1
  %39 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %39 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #24
  br label %40

40:                                               ; preds = %5, %26
  %41 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %42 = load %class.SkPathRef*, %class.SkPathRef** %41, align 8
  %43 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %42, i64 0, i32 3, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %40
  %47 = add nsw i32 %44, -1
  %48 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %42, i64 0, i32 3, i32 0
  %49 = load %struct.SkPoint*, %struct.SkPoint** %48, align 8
  %50 = sext i32 %47 to i64
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %49, i64 %50, i32 0
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %49, i64 %50, i32 1
  %54 = load float, float* %53, align 4
  br label %55

55:                                               ; preds = %40, %46
  %56 = phi float [ %54, %46 ], [ 0.000000e+00, %40 ]
  %57 = phi float [ %52, %46 ], [ 0.000000e+00, %40 ]
  %58 = fadd float %57, %1
  %59 = fadd float %56, %2
  %60 = fadd float %57, %3
  %61 = fadd float %56, %4
  %62 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %0, float %58, float %59, float %60, float %61)
  ret %class.SkPath* %62
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* returned, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.SkPathRef::Editor", align 8
  %8 = alloca %"class.SkPathRef::Editor", align 8
  %9 = fcmp ogt float %5, 0.000000e+00
  br i1 %9, label %12, label %10

10:                                               ; preds = %6
  %11 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %3, float %4)
  br label %69

12:                                               ; preds = %6
  %13 = bitcast float %5 to i32
  %14 = and i32 %13, 2139095040
  %15 = icmp eq i32 %14, 2139095040
  br i1 %15, label %16, label %19

16:                                               ; preds = %12
  %17 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %1, float %2)
  %18 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %3, float %4)
  br label %69

19:                                               ; preds = %12
  %20 = fcmp oeq float %5, 1.000000e+00
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %0, float %1, float %2, float %3, float %4)
  br label %69

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %57

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %29 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %30 = load %class.SkPathRef*, %class.SkPathRef** %29, align 8
  %31 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %30, i64 0, i32 4, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %27
  %35 = xor i32 %25, -1
  %36 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %30, i64 0, i32 3, i32 0
  %37 = load %struct.SkPoint*, %struct.SkPoint** %36, align 8
  %38 = sext i32 %35 to i64
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %37, i64 %38, i32 0
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %37, i64 %38, i32 1
  %42 = load float, float* %41, align 4
  br label %43

43:                                               ; preds = %34, %27
  %44 = phi float [ %42, %34 ], [ 0.000000e+00, %27 ]
  %45 = phi float [ %40, %34 ], [ 0.000000e+00, %27 ]
  %46 = bitcast %"class.SkPathRef::Editor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #24
  %47 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %7, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %47, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %7, %class.sk_sp* %28, i32 0, i32 0) #24
  %48 = load %class.SkPathRef*, %class.SkPathRef** %29, align 8
  %49 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %48, i64 0, i32 3, i32 2
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %24, align 8
  %51 = load %class.SkPathRef*, %class.SkPathRef** %47, align 8
  %52 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %51, i32 0, float 0.000000e+00) #24
  %53 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 0, i32 0
  store float %45, float* %53, align 4
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 0, i32 1
  store float %44, float* %54, align 4
  %55 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %55 monotonic, align 1
  %56 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %56 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #24
  br label %57

57:                                               ; preds = %23, %43
  %58 = bitcast %"class.SkPathRef::Editor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #24
  %59 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %8, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %59, align 8
  %60 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %8, %class.sk_sp* %60, i32 0, i32 0) #24
  %61 = load %class.SkPathRef*, %class.SkPathRef** %59, align 8
  %62 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %61, i32 3, float %5) #24
  %63 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %62, i64 0, i32 0
  store float %1, float* %63, align 4
  %64 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %62, i64 0, i32 1
  store float %2, float* %64, align 4
  %65 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %62, i64 1, i32 0
  store float %3, float* %65, align 4
  %66 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %62, i64 1, i32 1
  store float %4, float* %66, align 4
  %67 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %67 monotonic, align 1
  %68 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %68 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #24
  br label %69

69:                                               ; preds = %16, %57, %21, %10
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath8rConicToEfffff(%class.SkPath* returned, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.SkPathRef::Editor", align 8
  %8 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, 0
  br i1 %10, label %11, label %41

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %14 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 4, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %11
  %19 = xor i32 %9, -1
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 3, i32 0
  %21 = load %struct.SkPoint*, %struct.SkPoint** %20, align 8
  %22 = sext i32 %19 to i64
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %21, i64 %22, i32 0
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %21, i64 %22, i32 1
  %26 = load float, float* %25, align 4
  br label %27

27:                                               ; preds = %18, %11
  %28 = phi float [ %26, %18 ], [ 0.000000e+00, %11 ]
  %29 = phi float [ %24, %18 ], [ 0.000000e+00, %11 ]
  %30 = bitcast %"class.SkPathRef::Editor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #24
  %31 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %7, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %31, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %7, %class.sk_sp* %12, i32 0, i32 0) #24
  %32 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %33 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %32, i64 0, i32 3, i32 2
  %34 = load i32, i32* %33, align 4
  store i32 %34, i32* %8, align 8
  %35 = load %class.SkPathRef*, %class.SkPathRef** %31, align 8
  %36 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %35, i32 0, float 0.000000e+00) #24
  %37 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %36, i64 0, i32 0
  store float %29, float* %37, align 4
  %38 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %36, i64 0, i32 1
  store float %28, float* %38, align 4
  %39 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %39 monotonic, align 1
  %40 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %40 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #24
  br label %41

41:                                               ; preds = %6, %27
  %42 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %43 = load %class.SkPathRef*, %class.SkPathRef** %42, align 8
  %44 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %43, i64 0, i32 3, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp sgt i32 %45, 0
  br i1 %46, label %47, label %56

47:                                               ; preds = %41
  %48 = add nsw i32 %45, -1
  %49 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %43, i64 0, i32 3, i32 0
  %50 = load %struct.SkPoint*, %struct.SkPoint** %49, align 8
  %51 = sext i32 %48 to i64
  %52 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %50, i64 %51, i32 0
  %53 = load float, float* %52, align 4
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %50, i64 %51, i32 1
  %55 = load float, float* %54, align 4
  br label %56

56:                                               ; preds = %41, %47
  %57 = phi float [ %55, %47 ], [ 0.000000e+00, %41 ]
  %58 = phi float [ %53, %47 ], [ 0.000000e+00, %41 ]
  %59 = fadd float %58, %1
  %60 = fadd float %57, %2
  %61 = fadd float %58, %3
  %62 = fadd float %57, %4
  %63 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %59, float %60, float %61, float %62, float %5)
  ret %class.SkPath* %63
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* returned, float, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.SkPathRef::Editor", align 8
  %9 = alloca %"class.SkPathRef::Editor", align 8
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %43

13:                                               ; preds = %7
  %14 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %15 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %16 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 4, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %13
  %21 = xor i32 %11, -1
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 3, i32 0
  %23 = load %struct.SkPoint*, %struct.SkPoint** %22, align 8
  %24 = sext i32 %21 to i64
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %23, i64 %24, i32 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %23, i64 %24, i32 1
  %28 = load float, float* %27, align 4
  br label %29

29:                                               ; preds = %20, %13
  %30 = phi float [ %28, %20 ], [ 0.000000e+00, %13 ]
  %31 = phi float [ %26, %20 ], [ 0.000000e+00, %13 ]
  %32 = bitcast %"class.SkPathRef::Editor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #24
  %33 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %8, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %33, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %8, %class.sk_sp* %14, i32 0, i32 0) #24
  %34 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %35 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %34, i64 0, i32 3, i32 2
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %10, align 8
  %37 = load %class.SkPathRef*, %class.SkPathRef** %33, align 8
  %38 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %37, i32 0, float 0.000000e+00) #24
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %38, i64 0, i32 0
  store float %31, float* %39, align 4
  %40 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %38, i64 0, i32 1
  store float %30, float* %40, align 4
  %41 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %41 monotonic, align 1
  %42 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %42 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #24
  br label %43

43:                                               ; preds = %7, %29
  %44 = bitcast %"class.SkPathRef::Editor"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #24
  %45 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %9, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %45, align 8
  %46 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %9, %class.sk_sp* %46, i32 0, i32 0) #24
  %47 = load %class.SkPathRef*, %class.SkPathRef** %45, align 8
  %48 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %47, i32 4, float 0.000000e+00) #24
  %49 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %48, i64 0, i32 0
  store float %1, float* %49, align 4
  %50 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %48, i64 0, i32 1
  store float %2, float* %50, align 4
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %48, i64 1, i32 0
  store float %3, float* %51, align 4
  %52 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %48, i64 1, i32 1
  store float %4, float* %52, align 4
  %53 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %48, i64 2, i32 0
  store float %5, float* %53, align 4
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %48, i64 2, i32 1
  store float %6, float* %54, align 4
  %55 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %55 monotonic, align 1
  %56 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %56 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #24
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath8rCubicToEffffff(%class.SkPath* returned, float, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.SkPathRef::Editor", align 8
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp slt i32 %10, 0
  br i1 %11, label %12, label %42

12:                                               ; preds = %7
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %14 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %15 = load %class.SkPathRef*, %class.SkPathRef** %14, align 8
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 4, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %12
  %20 = xor i32 %10, -1
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %15, i64 0, i32 3, i32 0
  %22 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %23 = sext i32 %20 to i64
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %22, i64 %23, i32 0
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %22, i64 %23, i32 1
  %27 = load float, float* %26, align 4
  br label %28

28:                                               ; preds = %19, %12
  %29 = phi float [ %27, %19 ], [ 0.000000e+00, %12 ]
  %30 = phi float [ %25, %19 ], [ 0.000000e+00, %12 ]
  %31 = bitcast %"class.SkPathRef::Editor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #24
  %32 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %8, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %32, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %8, %class.sk_sp* %13, i32 0, i32 0) #24
  %33 = load %class.SkPathRef*, %class.SkPathRef** %14, align 8
  %34 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %33, i64 0, i32 3, i32 2
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %9, align 8
  %36 = load %class.SkPathRef*, %class.SkPathRef** %32, align 8
  %37 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %36, i32 0, float 0.000000e+00) #24
  %38 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %37, i64 0, i32 0
  store float %30, float* %38, align 4
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %37, i64 0, i32 1
  store float %29, float* %39, align 4
  %40 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %40 monotonic, align 1
  %41 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %41 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #24
  br label %42

42:                                               ; preds = %7, %28
  %43 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %44 = load %class.SkPathRef*, %class.SkPathRef** %43, align 8
  %45 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %44, i64 0, i32 3, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %57

48:                                               ; preds = %42
  %49 = add nsw i32 %46, -1
  %50 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %44, i64 0, i32 3, i32 0
  %51 = load %struct.SkPoint*, %struct.SkPoint** %50, align 8
  %52 = sext i32 %49 to i64
  %53 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %51, i64 %52, i32 0
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %51, i64 %52, i32 1
  %56 = load float, float* %55, align 4
  br label %57

57:                                               ; preds = %42, %48
  %58 = phi float [ %56, %48 ], [ 0.000000e+00, %42 ]
  %59 = phi float [ %54, %48 ], [ 0.000000e+00, %42 ]
  %60 = fadd float %59, %1
  %61 = fadd float %58, %2
  %62 = fadd float %59, %3
  %63 = fadd float %58, %4
  %64 = fadd float %59, %5
  %65 = fadd float %58, %6
  %66 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %0, float %60, float %61, float %62, float %63, float %64, float %65)
  ret %class.SkPath* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath* returned) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.SkPathRef::Editor", align 8
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %5 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %5, i64 0, i32 4, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %22

9:                                                ; preds = %1
  %10 = add nsw i32 %7, -1
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %5, i64 0, i32 4, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = sext i32 %10 to i64
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = icmp ult i8 %15, 5
  br i1 %16, label %17, label %22

17:                                               ; preds = %9
  %18 = bitcast %"class.SkPathRef::Editor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #24
  %19 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %2, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %19, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %2, %class.sk_sp* %3, i32 0, i32 0) #24
  %20 = load %class.SkPathRef*, %class.SkPathRef** %19, align 8
  %21 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %20, i32 5, float 0.000000e+00) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #24
  br label %22

22:                                               ; preds = %9, %17, %1
  %23 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = ashr i32 %24, 31
  %26 = xor i32 %24, -1
  %27 = xor i32 %25, %26
  store i32 %27, i32* %23, align 8
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* returned, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #5 align 2 {
  %5 = alloca %"class.SkPathRef::Editor", align 8
  %6 = alloca %"class.SkPathRef::Editor", align 8
  %7 = alloca %"class.SkPathRef::Editor", align 8
  %8 = alloca %"class.SkPathRef::Editor", align 8
  %9 = alloca %class.SkAutoPathBoundsUpdate, align 8
  %10 = alloca %class.SkPath_RectPointIterator, align 8
  %11 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %12 = load %class.SkPathRef*, %class.SkPathRef** %11, align 8
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 4, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 4, i32 0
  %18 = load i8*, i8** %17, align 8
  br label %19

19:                                               ; preds = %25, %16
  %20 = phi i32 [ %27, %25 ], [ 0, %16 ]
  %21 = phi i8* [ %26, %25 ], [ %18, %16 ]
  %22 = load i8, i8* %21, align 1
  %23 = add i8 %22, -1
  %24 = icmp ult i8 %23, 4
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds i8, i8* %21, i64 1
  %27 = add nuw nsw i32 %20, 1
  %28 = icmp eq i32 %27, %14
  br i1 %28, label %29, label %19

29:                                               ; preds = %25, %19, %4
  %30 = phi i32 [ %2, %4 ], [ %2, %25 ], [ 2, %19 ]
  %31 = trunc i32 %30 to i8
  %32 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %31, i8* %32 monotonic, align 1
  %33 = load atomic i8, i8* %32 monotonic, align 1
  %34 = bitcast %class.SkAutoPathBoundsUpdate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %34) #24
  %35 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 0
  store %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*), %class.SkPath** %35, align 8
  %36 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 1
  %38 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 2
  %39 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 3
  %40 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 2
  %41 = bitcast float* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 -1, i64 16, i1 false)
  %42 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 3
  %43 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 4
  %44 = bitcast i8* %40 to i64*
  store i64 -6148914691236517206, i64* %44, align 8
  call void @_ZN22SkAutoPathBoundsUpdateC2EP6SkPathRK6SkRect(%class.SkAutoPathBoundsUpdate* nonnull %9, %class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1)
  %45 = bitcast %"class.SkPathRef::Editor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %6, %class.sk_sp* %46, i32 5, i32 5) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  %47 = bitcast %class.SkPath_RectPointIterator* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %47) #24
  %48 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 1
  %49 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 2
  %50 = and i32 %3, 3
  store i32 %50, i32* %48, align 8
  %51 = icmp eq i32 %2, 0
  %52 = select i1 %51, i32 1, i32 3
  store i32 %52, i32* %49, align 4
  %53 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %56 = load float, float* %55, align 4
  %57 = insertelement <2 x float> undef, float %54, i32 0
  %58 = insertelement <2 x float> %57, float %56, i32 1
  %59 = bitcast %class.SkPath_RectPointIterator* %10 to <2 x float>*
  store <2 x float> %58, <2 x float>* %59, align 8
  %60 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %61 = load float, float* %60, align 4
  %62 = insertelement <2 x float> undef, float %61, i32 0
  %63 = insertelement <2 x float> %62, float %56, i32 1
  %64 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 0, i64 1
  %65 = bitcast %struct.SkPoint* %64 to <2 x float>*
  store <2 x float> %63, <2 x float>* %65, align 8
  %66 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %67 = load float, float* %66, align 4
  %68 = insertelement <2 x float> %62, float %67, i32 1
  %69 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 0, i64 2
  %70 = bitcast %struct.SkPoint* %69 to <2 x float>*
  store <2 x float> %68, <2 x float>* %70, align 8
  %71 = insertelement <2 x float> %57, float %67, i32 1
  %72 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 0, i64 3
  %73 = bitcast %struct.SkPoint* %72 to <2 x float>*
  store <2 x float> %71, <2 x float>* %73, align 8
  %74 = zext i32 %50 to i64
  %75 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 0, i64 %74
  %76 = bitcast %struct.SkPoint* %75 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 0, i64 %74, i32 1
  %79 = bitcast float* %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = bitcast %"class.SkPathRef::Editor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #24
  %82 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %5, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %82, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %5, %class.sk_sp* %46, i32 0, i32 0) #24
  %83 = load %class.SkPathRef*, %class.SkPathRef** %11, align 8
  %84 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %83, i64 0, i32 3, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %85, i32* %86, align 8
  %87 = load %class.SkPathRef*, %class.SkPathRef** %82, align 8
  %88 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %87, i32 0, float 0.000000e+00) #24
  %89 = bitcast %struct.SkPoint* %88 to i32*
  store i32 %77, i32* %89, align 4
  %90 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %88, i64 0, i32 1
  %91 = bitcast float* %90 to i32*
  store i32 %80, i32* %91, align 4
  %92 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %92 monotonic, align 1
  store atomic i8 2, i8* %32 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #24
  %93 = load i32, i32* %48, align 8
  %94 = load i32, i32* %49, align 4
  %95 = add i32 %94, %93
  %96 = and i32 %95, 3
  store i32 %96, i32* %48, align 8
  %97 = zext i32 %96 to i64
  %98 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 0, i64 %97, i32 0
  %99 = load float, float* %98, align 8
  %100 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 0, i64 %97, i32 1
  %101 = load float, float* %100, align 4
  %102 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %99, float %101) #24
  %103 = add i32 %95, %94
  %104 = and i32 %103, 3
  store i32 %104, i32* %48, align 8
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 0, i64 %105, i32 0
  %107 = load float, float* %106, align 8
  %108 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 0, i64 %105, i32 1
  %109 = load float, float* %108, align 4
  %110 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %107, float %109) #24
  %111 = add i32 %103, %94
  %112 = and i32 %111, 3
  store i32 %112, i32* %48, align 8
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 0, i64 %113, i32 0
  %115 = load float, float* %114, align 8
  %116 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %10, i64 0, i32 0, i32 0, i64 %113, i32 1
  %117 = load float, float* %116, align 4
  %118 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %115, float %117) #24
  %119 = load %class.SkPathRef*, %class.SkPathRef** %11, align 8
  %120 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %119, i64 0, i32 4, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = icmp sgt i32 %121, 0
  br i1 %122, label %123, label %136

123:                                              ; preds = %29
  %124 = add nsw i32 %121, -1
  %125 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %119, i64 0, i32 4, i32 0
  %126 = load i8*, i8** %125, align 8
  %127 = sext i32 %124 to i64
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  %129 = load i8, i8* %128, align 1
  %130 = icmp ult i8 %129, 5
  br i1 %130, label %131, label %136

131:                                              ; preds = %123
  %132 = bitcast %"class.SkPathRef::Editor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #24
  %133 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %7, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %133, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %7, %class.sk_sp* %46, i32 0, i32 0) #24
  %134 = load %class.SkPathRef*, %class.SkPathRef** %133, align 8
  %135 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %134, i32 5, float 0.000000e+00) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #24
  br label %136

136:                                              ; preds = %29, %123, %131
  %137 = load i32, i32* %86, align 8
  %138 = ashr i32 %137, 31
  %139 = xor i32 %137, -1
  %140 = xor i32 %138, %139
  store i32 %140, i32* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %47) #24
  %141 = load %class.SkPath*, %class.SkPath** %35, align 8
  %142 = load i8, i8* %42, align 1, !range !2
  %143 = icmp eq i8 %142, 0
  %144 = select i1 %143, i8 2, i8 0
  %145 = getelementptr inbounds %class.SkPath, %class.SkPath* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %144, i8* %145 monotonic, align 1
  %146 = load i8, i8* %43, align 2, !range !2
  %147 = load i8, i8* %40, align 8
  %148 = or i8 %147, %146
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %186, label %150

150:                                              ; preds = %136
  %151 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1
  %152 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %151, i64 0, i32 0
  %153 = load float, float* %152, align 8
  %154 = fmul float %153, 0.000000e+00
  %155 = load float, float* %37, align 4
  %156 = fmul float %154, %155
  %157 = load float, float* %38, align 8
  %158 = fmul float %156, %157
  %159 = load float, float* %39, align 4
  %160 = fmul float %158, %159
  %161 = fcmp ord float %160, 0.000000e+00
  br i1 %161, label %162, label %186

162:                                              ; preds = %150
  %163 = bitcast %"class.SkPathRef::Editor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #24
  %164 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %8, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %164, align 8
  %165 = getelementptr inbounds %class.SkPath, %class.SkPath* %141, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %8, %class.sk_sp* %165, i32 0, i32 0) #24
  %166 = load %class.SkPathRef*, %class.SkPathRef** %164, align 8
  %167 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %166, i64 0, i32 1
  %168 = bitcast %struct.SkRect* %167 to i8*
  %169 = bitcast %struct.SkRect* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %168, i8* align 8 %169, i64 16, i1 false) #24
  %170 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %166, i64 0, i32 9
  store i8 0, i8* %170, align 8
  %171 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %167, i64 0, i32 0
  %172 = load float, float* %171, align 4
  %173 = fmul float %172, 0.000000e+00
  %174 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %166, i64 0, i32 1, i32 1
  %175 = load float, float* %174, align 4
  %176 = fmul float %173, %175
  %177 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %166, i64 0, i32 1, i32 2
  %178 = load float, float* %177, align 4
  %179 = fmul float %176, %178
  %180 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %166, i64 0, i32 1, i32 3
  %181 = load float, float* %180, align 4
  %182 = fmul float %179, %181
  %183 = fcmp ord float %182, 0.000000e+00
  %184 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %166, i64 0, i32 10
  %185 = zext i1 %183 to i8
  store i8 %185, i8* %184, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #24
  br label %186

186:                                              ; preds = %136, %150, %162
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %34) #24
  store atomic i8 %33, i8* %32 monotonic, align 1
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN22SkAutoPathBoundsUpdateC2EP6SkPathRK6SkRect(%class.SkAutoPathBoundsUpdate*, %class.SkPath*, %struct.SkRect* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %0, i64 0, i32 0
  store %class.SkPath* %1, %class.SkPath** %4, align 8
  %5 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %0, i64 0, i32 1
  %6 = bitcast %struct.SkRect* %5 to i8*
  %7 = bitcast %struct.SkRect* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 4 %7, i64 16, i1 false)
  %8 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %5, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %0, i64 0, i32 1, i32 2
  %11 = load float, float* %10, align 4
  %12 = fcmp ogt float %9, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  store float %11, float* %8, align 4
  store float %9, float* %10, align 4
  br label %14

14:                                               ; preds = %13, %3
  %15 = phi float [ %9, %13 ], [ %11, %3 ]
  %16 = phi float [ %11, %13 ], [ %9, %3 ]
  %17 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %0, i64 0, i32 1, i32 1
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %0, i64 0, i32 1, i32 3
  %20 = load float, float* %19, align 4
  %21 = fcmp ogt float %18, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %14
  store float %20, float* %17, align 4
  store float %18, float* %19, align 4
  br label %23

23:                                               ; preds = %14, %22
  %24 = phi float [ %20, %14 ], [ %18, %22 ]
  %25 = phi float [ %18, %14 ], [ %20, %22 ]
  %26 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %27 = load %class.SkPathRef*, %class.SkPathRef** %26, align 8
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 9
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %23
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %27, i64 0, i32 10
  %33 = load i8, i8* %32, align 1, !range !2
  br label %34

34:                                               ; preds = %31, %23
  %35 = phi i8 [ 0, %23 ], [ %33, %31 ]
  %36 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %0, i64 0, i32 2
  store i8 %35, i8* %36, align 8
  %37 = load %class.SkPathRef*, %class.SkPathRef** %26, align 8
  %38 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 4, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %0, i64 0, i32 4
  %42 = zext i1 %40 to i8
  store i8 %42, i8* %41, align 2
  %43 = icmp eq i8 %35, 0
  %44 = or i1 %43, %40
  br i1 %44, label %84, label %45

45:                                               ; preds = %34
  %46 = load %class.SkPathRef*, %class.SkPathRef** %26, align 8
  %47 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 9
  %48 = load i8, i8* %47, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 1
  %52 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 3, i32 0
  %53 = load %struct.SkPoint*, %struct.SkPoint** %52, align 8
  %54 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 3, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %51, %struct.SkPoint* %53, i32 %55) #24
  %57 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 10
  %58 = zext i1 %56 to i8
  store i8 %58, i8* %57, align 1
  store i8 0, i8* %47, align 8
  %59 = load float, float* %8, align 4
  %60 = load float, float* %17, align 4
  %61 = load float, float* %10, align 4
  %62 = load float, float* %19, align 4
  br label %63

63:                                               ; preds = %45, %50
  %64 = phi float [ %24, %45 ], [ %62, %50 ]
  %65 = phi float [ %15, %45 ], [ %61, %50 ]
  %66 = phi float [ %25, %45 ], [ %60, %50 ]
  %67 = phi float [ %16, %45 ], [ %59, %50 ]
  %68 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 1, i32 0
  %69 = load float, float* %68, align 4
  %70 = fcmp olt float %69, %67
  %71 = select i1 %70, float %69, float %67
  store float %71, float* %8, align 4
  %72 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 1, i32 1
  %73 = load float, float* %72, align 4
  %74 = fcmp olt float %73, %66
  %75 = select i1 %74, float %73, float %66
  store float %75, float* %17, align 4
  %76 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 1, i32 2
  %77 = load float, float* %76, align 4
  %78 = fcmp olt float %65, %77
  %79 = select i1 %78, float %77, float %65
  store float %79, float* %10, align 4
  %80 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 1, i32 3
  %81 = load float, float* %80, align 4
  %82 = fcmp olt float %64, %81
  %83 = select i1 %82, float %81, float %64
  store float %83, float* %19, align 4
  br label %84

84:                                               ; preds = %34, %63
  %85 = load %class.SkPathRef*, %class.SkPathRef** %26, align 8
  %86 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %85, i64 0, i32 4, i32 2
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %85, i64 0, i32 4, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = icmp sgt i32 %87, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %84
  %92 = zext i32 %87 to i64
  br label %93

93:                                               ; preds = %98, %91
  %94 = phi i64 [ 0, %91 ], [ %99, %98 ]
  %95 = getelementptr inbounds i8, i8* %89, i64 %94
  %96 = load i8, i8* %95, align 1
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %93
  %99 = add nuw nsw i64 %94, 1
  %100 = icmp eq i64 %99, %92
  br i1 %100, label %103, label %93

101:                                              ; preds = %93
  %102 = trunc i64 %94 to i32
  br label %103

103:                                              ; preds = %98, %84, %101
  %104 = phi i32 [ %87, %84 ], [ %102, %101 ], [ %87, %98 ]
  %105 = icmp eq i32 %87, %104
  %106 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %0, i64 0, i32 3
  %107 = zext i1 %105 to i8
  store i8 %107, i8* %106, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPolyEPK7SkPointib(%class.SkPath* returned, %struct.SkPoint* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkPathRef::Editor", align 8
  %6 = icmp slt i32 %2, 1
  br i1 %6, label %49, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %10 = load %class.SkPathRef*, %class.SkPathRef** %9, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 3, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %12, i32* %13, align 8
  %14 = bitcast %"class.SkPathRef::Editor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #24
  %15 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %5, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %15, align 8
  %16 = zext i1 %3 to i32
  %17 = add nuw nsw i32 %16, %2
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %5, %class.sk_sp* %8, i32 %17, i32 %2) #24
  %18 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %19 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %18, i32 0, float 0.000000e+00) #24
  %20 = bitcast %struct.SkPoint* %1 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = bitcast %struct.SkPoint* %19 to i32*
  store i32 %21, i32* %25, align 4
  %26 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %19, i64 0, i32 1
  %27 = bitcast float* %26 to i32*
  store i32 %24, i32* %27, align 4
  %28 = icmp eq i32 %2, 1
  br i1 %28, label %38, label %29

29:                                               ; preds = %7
  %30 = add nsw i32 %2, -1
  %31 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %32 = call %struct.SkPoint* @_ZN9SkPathRef19growForRepeatedVerbEiiPPf(%class.SkPathRef* %31, i32 1, i32 %30, float** null) #24
  %33 = bitcast %struct.SkPoint* %32 to i8*
  %34 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %35 = bitcast %struct.SkPoint* %34 to i8*
  %36 = sext i32 %30 to i64
  %37 = shl nsw i64 %36, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %35, i64 %37, i1 false)
  br label %38

38:                                               ; preds = %7, %29
  br i1 %3, label %39, label %46

39:                                               ; preds = %38
  %40 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %41 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %40, i32 5, float 0.000000e+00) #24
  %42 = load i32, i32* %13, align 8
  %43 = ashr i32 %42, 31
  %44 = xor i32 %42, -1
  %45 = xor i32 %43, %44
  store i32 %45, i32* %13, align 8
  br label %46

46:                                               ; preds = %39, %38
  %47 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %47 monotonic, align 1
  %48 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %48 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #24
  br label %49

49:                                               ; preds = %4, %46
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath12addRoundRectERK6SkRectPKf15SkPathDirection(%class.SkPath* returned, %struct.SkRect* dereferenceable(16), float*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkRRect, align 4
  %6 = bitcast %class.SkRRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %6) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %6, i8 0, i64 52, i1 false) #24
  %7 = bitcast float* %2 to %struct.SkPoint*
  call void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect* nonnull %5, %struct.SkRect* dereferenceable(16) %1, %struct.SkPoint* %7) #24
  %8 = icmp eq i32 %3, 0
  %9 = select i1 %8, i32 6, i32 7
  %10 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPath* %0, %class.SkRRect* nonnull dereferenceable(52) %5, i32 %3, i32 %9) #24
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %6) #24
  ret %class.SkPath* %10
}

declare void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirection(%class.SkPath* returned, %class.SkRRect* dereferenceable(52), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i32 %2, 0
  %5 = select i1 %4, i32 6, i32 7
  %6 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPath* %0, %class.SkRRect* dereferenceable(52) %1, i32 %2, i32 %5)
  ret %class.SkPath* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPath* returned, %class.SkRRect* dereferenceable(52), i32, i32) local_unnamed_addr #5 align 2 {
  %5 = alloca %"class.SkPathRef::Editor", align 8
  %6 = alloca %"class.SkPathRef::Editor", align 8
  %7 = alloca %"class.SkPathRef::Editor", align 8
  %8 = alloca %"class.SkPathRef::Editor", align 8
  %9 = alloca %class.SkAutoPathBoundsUpdate, align 8
  %10 = alloca %class.SkPath_RRectPointIterator, align 8
  %11 = alloca %class.SkPath_RectPointIterator, align 8
  %12 = alloca %"class.SkPathRef::Editor", align 8
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %14 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 4, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %4
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 4, i32 0
  %20 = load i8*, i8** %19, align 8
  br label %21

21:                                               ; preds = %27, %18
  %22 = phi i32 [ %29, %27 ], [ 0, %18 ]
  %23 = phi i8* [ %28, %27 ], [ %20, %18 ]
  %24 = load i8, i8* %23, align 1
  %25 = add i8 %24, -1
  %26 = icmp ult i8 %25, 4
  br i1 %26, label %31, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i64 1
  %29 = add nuw nsw i32 %22, 1
  %30 = icmp eq i32 %29, %16
  br i1 %30, label %31, label %21

31:                                               ; preds = %21, %27, %4
  %32 = phi i8 [ 1, %4 ], [ 0, %21 ], [ 1, %27 ]
  %33 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0
  %34 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  switch i32 %35, label %43 [
    i32 1, label %36
    i32 0, label %36
    i32 2, label %40
  ]

36:                                               ; preds = %31, %31
  %37 = add i32 %3, 1
  %38 = lshr i32 %37, 1
  %39 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addRectERK6SkRect15SkPathDirectionj(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %33, i32 %2, i32 %38)
  br label %474

40:                                               ; preds = %31
  %41 = lshr i32 %3, 1
  %42 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addOvalERK6SkRect15SkPathDirectionj(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %33, i32 %2, i32 %41)
  br label %474

43:                                               ; preds = %31
  br i1 %17, label %44, label %57

44:                                               ; preds = %43
  %45 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 4, i32 0
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %53, %44
  %48 = phi i32 [ %55, %53 ], [ 0, %44 ]
  %49 = phi i8* [ %54, %53 ], [ %46, %44 ]
  %50 = load i8, i8* %49, align 1
  %51 = add i8 %50, -1
  %52 = icmp ult i8 %51, 4
  br i1 %52, label %57, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds i8, i8* %49, i64 1
  %55 = add nuw nsw i32 %48, 1
  %56 = icmp eq i32 %55, %16
  br i1 %56, label %57, label %47

57:                                               ; preds = %53, %47, %43
  %58 = phi i32 [ %2, %43 ], [ %2, %53 ], [ 2, %47 ]
  %59 = trunc i32 %58 to i8
  %60 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %59, i8* %60 monotonic, align 1
  %61 = bitcast %class.SkAutoPathBoundsUpdate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %61) #24
  %62 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 0
  store %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*), %class.SkPath** %62, align 8
  %63 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 1
  %65 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 2
  %66 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 3
  %67 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 2
  %68 = bitcast float* %63 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 -1, i64 16, i1 false)
  %69 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 3
  %70 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 4
  %71 = bitcast i8* %67 to i64*
  store i64 -6148914691236517206, i64* %71, align 8
  call void @_ZN22SkAutoPathBoundsUpdateC2EP6SkPathRK6SkRect(%class.SkAutoPathBoundsUpdate* nonnull %9, %class.SkPath* %0, %struct.SkRect* dereferenceable(16) %33)
  %72 = load atomic i8, i8* %60 monotonic, align 1
  %73 = icmp eq i32 %2, 0
  %74 = and i32 %3, 1
  %75 = icmp ne i32 %74, 0
  %76 = xor i1 %73, %75
  %77 = select i1 %76, i32 10, i32 9
  %78 = bitcast %"class.SkPathRef::Editor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %5, %class.sk_sp* %79, i32 %77, i32 %77) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  %80 = bitcast %class.SkPath_RRectPointIterator* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %80) #24
  %81 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 1
  %82 = and i32 %3, 7
  store i32 %82, i32* %81, align 8
  %83 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 2
  %84 = select i1 %73, i32 1, i32 7
  store i32 %84, i32* %83, align 4
  %85 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 0
  %86 = load float, float* %85, align 4
  %87 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 1
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 2
  %90 = load float, float* %89, align 4
  %91 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 0, i32 3
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 0
  %94 = bitcast %struct.SkPoint* %93 to <2 x float>*
  %95 = load <2 x float>, <2 x float>* %94, align 4
  %96 = extractelement <2 x float> %95, i32 0
  %97 = fadd float %86, %96
  %98 = insertelement <2 x float> undef, float %97, i32 0
  %99 = insertelement <2 x float> %98, float %88, i32 1
  %100 = bitcast %class.SkPath_RRectPointIterator* %10 to <2 x float>*
  store <2 x float> %99, <2 x float>* %100, align 8
  %101 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 1
  %102 = bitcast %struct.SkPoint* %101 to <2 x float>*
  %103 = load <2 x float>, <2 x float>* %102, align 4
  %104 = extractelement <2 x float> %103, i32 0
  %105 = fsub float %90, %104
  %106 = insertelement <2 x float> undef, float %105, i32 0
  %107 = insertelement <2 x float> %106, float %88, i32 1
  %108 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 1
  %109 = bitcast %struct.SkPoint* %108 to <2 x float>*
  store <2 x float> %107, <2 x float>* %109, align 8
  %110 = extractelement <2 x float> %103, i32 1
  %111 = fadd float %88, %110
  %112 = insertelement <2 x float> undef, float %90, i32 0
  %113 = insertelement <2 x float> %112, float %111, i32 1
  %114 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 2
  %115 = bitcast %struct.SkPoint* %114 to <2 x float>*
  store <2 x float> %113, <2 x float>* %115, align 8
  %116 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 2
  %117 = bitcast %struct.SkPoint* %116 to <2 x float>*
  %118 = load <2 x float>, <2 x float>* %117, align 4
  %119 = extractelement <2 x float> %118, i32 1
  %120 = fsub float %92, %119
  %121 = insertelement <2 x float> %112, float %120, i32 1
  %122 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 3
  %123 = bitcast %struct.SkPoint* %122 to <2 x float>*
  store <2 x float> %121, <2 x float>* %123, align 8
  %124 = extractelement <2 x float> %118, i32 0
  %125 = fsub float %90, %124
  %126 = insertelement <2 x float> undef, float %125, i32 0
  %127 = insertelement <2 x float> %126, float %92, i32 1
  %128 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 4
  %129 = bitcast %struct.SkPoint* %128 to <2 x float>*
  store <2 x float> %127, <2 x float>* %129, align 8
  %130 = getelementptr inbounds %class.SkRRect, %class.SkRRect* %1, i64 0, i32 1, i64 3
  %131 = bitcast %struct.SkPoint* %130 to <2 x float>*
  %132 = load <2 x float>, <2 x float>* %131, align 4
  %133 = extractelement <2 x float> %132, i32 0
  %134 = fadd float %86, %133
  %135 = insertelement <2 x float> undef, float %134, i32 0
  %136 = insertelement <2 x float> %135, float %92, i32 1
  %137 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 5
  %138 = bitcast %struct.SkPoint* %137 to <2 x float>*
  store <2 x float> %136, <2 x float>* %138, align 8
  %139 = extractelement <2 x float> %132, i32 1
  %140 = fsub float %92, %139
  %141 = insertelement <2 x float> undef, float %86, i32 0
  %142 = insertelement <2 x float> %141, float %140, i32 1
  %143 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 6
  %144 = bitcast %struct.SkPoint* %143 to <2 x float>*
  store <2 x float> %142, <2 x float>* %144, align 8
  %145 = extractelement <2 x float> %95, i32 1
  %146 = fadd float %88, %145
  %147 = insertelement <2 x float> %141, float %146, i32 1
  %148 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 7
  %149 = bitcast %struct.SkPoint* %148 to <2 x float>*
  store <2 x float> %147, <2 x float>* %149, align 8
  %150 = lshr i32 %3, 1
  %151 = xor i1 %73, true
  %152 = zext i1 %151 to i32
  %153 = add nuw i32 %150, %152
  %154 = bitcast %class.SkPath_RectPointIterator* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %154) #24
  %155 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 1
  %156 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 2
  %157 = and i32 %153, 3
  store i32 %157, i32* %155, align 8
  %158 = select i1 %73, i32 1, i32 3
  store i32 %158, i32* %156, align 4
  %159 = load float, float* %85, align 4
  %160 = load float, float* %87, align 4
  %161 = insertelement <2 x float> undef, float %159, i32 0
  %162 = insertelement <2 x float> %161, float %160, i32 1
  %163 = bitcast %class.SkPath_RectPointIterator* %11 to <2 x float>*
  store <2 x float> %162, <2 x float>* %163, align 8
  %164 = load float, float* %89, align 4
  %165 = insertelement <2 x float> undef, float %164, i32 0
  %166 = insertelement <2 x float> %165, float %160, i32 1
  %167 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 1
  %168 = bitcast %struct.SkPoint* %167 to <2 x float>*
  store <2 x float> %166, <2 x float>* %168, align 8
  %169 = load float, float* %91, align 4
  %170 = insertelement <2 x float> %165, float %169, i32 1
  %171 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 2
  %172 = bitcast %struct.SkPoint* %171 to <2 x float>*
  store <2 x float> %170, <2 x float>* %172, align 8
  %173 = insertelement <2 x float> %161, float %169, i32 1
  %174 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 3
  %175 = bitcast %struct.SkPoint* %174 to <2 x float>*
  store <2 x float> %173, <2 x float>* %175, align 8
  %176 = load i32, i32* %81, align 8
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %177
  %179 = bitcast %struct.SkPoint* %178 to i32*
  %180 = load i32, i32* %179, align 8
  %181 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %177, i32 1
  %182 = bitcast float* %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = bitcast %"class.SkPathRef::Editor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #24
  %185 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %6, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %185, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %6, %class.sk_sp* %79, i32 0, i32 0) #24
  %186 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %187 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %186, i64 0, i32 3, i32 2
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %188, i32* %189, align 8
  %190 = load %class.SkPathRef*, %class.SkPathRef** %185, align 8
  %191 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %190, i32 0, float 0.000000e+00) #24
  %192 = bitcast %struct.SkPoint* %191 to i32*
  store i32 %180, i32* %192, align 4
  %193 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %191, i64 0, i32 1
  %194 = bitcast float* %193 to i32*
  store i32 %183, i32* %194, align 4
  %195 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %195 monotonic, align 1
  store atomic i8 2, i8* %60 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #24
  br i1 %76, label %196, label %293

196:                                              ; preds = %57
  %197 = load i32, i32* %81, align 8
  %198 = load i32, i32* %83, align 4
  %199 = add i32 %198, %197
  %200 = and i32 %199, 7
  store i32 %200, i32* %81, align 8
  %201 = zext i32 %200 to i64
  %202 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %201, i32 0
  %203 = load float, float* %202, align 8
  %204 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %201, i32 1
  %205 = load float, float* %204, align 4
  %206 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %203, float %205) #24
  %207 = load i32, i32* %155, align 8
  %208 = load i32, i32* %156, align 4
  %209 = add i32 %208, %207
  %210 = and i32 %209, 3
  store i32 %210, i32* %155, align 8
  %211 = zext i32 %210 to i64
  %212 = add i32 %199, %198
  %213 = and i32 %212, 7
  store i32 %213, i32* %81, align 8
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %211, i32 0
  %216 = load float, float* %215, align 8
  %217 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %211, i32 1
  %218 = load float, float* %217, align 4
  %219 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %214, i32 0
  %220 = load float, float* %219, align 8
  %221 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %214, i32 1
  %222 = load float, float* %221, align 4
  %223 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %216, float %218, float %220, float %222, float 0x3FE6A09E60000000) #24
  %224 = load i32, i32* %81, align 8
  %225 = load i32, i32* %83, align 4
  %226 = add i32 %225, %224
  %227 = and i32 %226, 7
  store i32 %227, i32* %81, align 8
  %228 = zext i32 %227 to i64
  %229 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %228, i32 0
  %230 = load float, float* %229, align 8
  %231 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %228, i32 1
  %232 = load float, float* %231, align 4
  %233 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %230, float %232) #24
  %234 = load i32, i32* %155, align 8
  %235 = load i32, i32* %156, align 4
  %236 = add i32 %235, %234
  %237 = and i32 %236, 3
  store i32 %237, i32* %155, align 8
  %238 = zext i32 %237 to i64
  %239 = add i32 %226, %225
  %240 = and i32 %239, 7
  store i32 %240, i32* %81, align 8
  %241 = zext i32 %240 to i64
  %242 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %238, i32 0
  %243 = load float, float* %242, align 8
  %244 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %238, i32 1
  %245 = load float, float* %244, align 4
  %246 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %241, i32 0
  %247 = load float, float* %246, align 8
  %248 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %241, i32 1
  %249 = load float, float* %248, align 4
  %250 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %243, float %245, float %247, float %249, float 0x3FE6A09E60000000) #24
  %251 = load i32, i32* %81, align 8
  %252 = load i32, i32* %83, align 4
  %253 = add i32 %252, %251
  %254 = and i32 %253, 7
  store i32 %254, i32* %81, align 8
  %255 = zext i32 %254 to i64
  %256 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %255, i32 0
  %257 = load float, float* %256, align 8
  %258 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %255, i32 1
  %259 = load float, float* %258, align 4
  %260 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %257, float %259) #24
  %261 = load i32, i32* %155, align 8
  %262 = load i32, i32* %156, align 4
  %263 = add i32 %262, %261
  %264 = and i32 %263, 3
  store i32 %264, i32* %155, align 8
  %265 = zext i32 %264 to i64
  %266 = add i32 %253, %252
  %267 = and i32 %266, 7
  store i32 %267, i32* %81, align 8
  %268 = zext i32 %267 to i64
  %269 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %265, i32 0
  %270 = load float, float* %269, align 8
  %271 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %265, i32 1
  %272 = load float, float* %271, align 4
  %273 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %268, i32 0
  %274 = load float, float* %273, align 8
  %275 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %268, i32 1
  %276 = load float, float* %275, align 4
  %277 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %270, float %272, float %274, float %276, float 0x3FE6A09E60000000) #24
  %278 = load i32, i32* %81, align 8
  %279 = load i32, i32* %83, align 4
  %280 = add i32 %279, %278
  %281 = and i32 %280, 7
  store i32 %281, i32* %81, align 8
  %282 = zext i32 %281 to i64
  %283 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %282, i32 0
  %284 = load float, float* %283, align 8
  %285 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %282, i32 1
  %286 = load float, float* %285, align 4
  %287 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %284, float %286) #24
  %288 = load i32, i32* %155, align 8
  %289 = load i32, i32* %156, align 4
  %290 = add i32 %289, %288
  %291 = and i32 %290, 3
  store i32 %291, i32* %155, align 8
  %292 = add i32 %280, %279
  br label %382

293:                                              ; preds = %57
  %294 = load i32, i32* %155, align 8
  %295 = load i32, i32* %156, align 4
  %296 = add i32 %295, %294
  %297 = and i32 %296, 3
  store i32 %297, i32* %155, align 8
  %298 = zext i32 %297 to i64
  %299 = load i32, i32* %81, align 8
  %300 = load i32, i32* %83, align 4
  %301 = add i32 %300, %299
  %302 = and i32 %301, 7
  store i32 %302, i32* %81, align 8
  %303 = zext i32 %302 to i64
  %304 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %298, i32 0
  %305 = load float, float* %304, align 8
  %306 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %298, i32 1
  %307 = load float, float* %306, align 4
  %308 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %303, i32 0
  %309 = load float, float* %308, align 8
  %310 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %303, i32 1
  %311 = load float, float* %310, align 4
  %312 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %305, float %307, float %309, float %311, float 0x3FE6A09E60000000) #24
  %313 = add i32 %301, %300
  %314 = and i32 %313, 7
  store i32 %314, i32* %81, align 8
  %315 = zext i32 %314 to i64
  %316 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %315, i32 0
  %317 = load float, float* %316, align 8
  %318 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %315, i32 1
  %319 = load float, float* %318, align 4
  %320 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %317, float %319) #24
  %321 = load i32, i32* %155, align 8
  %322 = load i32, i32* %156, align 4
  %323 = add i32 %322, %321
  %324 = and i32 %323, 3
  store i32 %324, i32* %155, align 8
  %325 = zext i32 %324 to i64
  %326 = load i32, i32* %81, align 8
  %327 = load i32, i32* %83, align 4
  %328 = add i32 %327, %326
  %329 = and i32 %328, 7
  store i32 %329, i32* %81, align 8
  %330 = zext i32 %329 to i64
  %331 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %325, i32 0
  %332 = load float, float* %331, align 8
  %333 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %325, i32 1
  %334 = load float, float* %333, align 4
  %335 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %330, i32 0
  %336 = load float, float* %335, align 8
  %337 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %330, i32 1
  %338 = load float, float* %337, align 4
  %339 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %332, float %334, float %336, float %338, float 0x3FE6A09E60000000) #24
  %340 = add i32 %328, %327
  %341 = and i32 %340, 7
  store i32 %341, i32* %81, align 8
  %342 = zext i32 %341 to i64
  %343 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %342, i32 0
  %344 = load float, float* %343, align 8
  %345 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %342, i32 1
  %346 = load float, float* %345, align 4
  %347 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %344, float %346) #24
  %348 = load i32, i32* %155, align 8
  %349 = load i32, i32* %156, align 4
  %350 = add i32 %349, %348
  %351 = and i32 %350, 3
  store i32 %351, i32* %155, align 8
  %352 = zext i32 %351 to i64
  %353 = load i32, i32* %81, align 8
  %354 = load i32, i32* %83, align 4
  %355 = add i32 %354, %353
  %356 = and i32 %355, 7
  store i32 %356, i32* %81, align 8
  %357 = zext i32 %356 to i64
  %358 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %352, i32 0
  %359 = load float, float* %358, align 8
  %360 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %352, i32 1
  %361 = load float, float* %360, align 4
  %362 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %357, i32 0
  %363 = load float, float* %362, align 8
  %364 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %357, i32 1
  %365 = load float, float* %364, align 4
  %366 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %359, float %361, float %363, float %365, float 0x3FE6A09E60000000) #24
  %367 = add i32 %355, %354
  %368 = and i32 %367, 7
  store i32 %368, i32* %81, align 8
  %369 = zext i32 %368 to i64
  %370 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %369, i32 0
  %371 = load float, float* %370, align 8
  %372 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %369, i32 1
  %373 = load float, float* %372, align 4
  %374 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %371, float %373) #24
  %375 = load i32, i32* %155, align 8
  %376 = load i32, i32* %156, align 4
  %377 = add i32 %376, %375
  %378 = and i32 %377, 3
  store i32 %378, i32* %155, align 8
  %379 = load i32, i32* %81, align 8
  %380 = load i32, i32* %83, align 4
  %381 = add i32 %380, %379
  br label %382

382:                                              ; preds = %293, %196
  %383 = phi i32 [ %381, %293 ], [ %292, %196 ]
  %384 = phi i32 [ %378, %293 ], [ %291, %196 ]
  %385 = zext i32 %384 to i64
  %386 = and i32 %383, 7
  store i32 %386, i32* %81, align 8
  %387 = zext i32 %386 to i64
  %388 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %385, i32 0
  %389 = load float, float* %388, align 8
  %390 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %385, i32 1
  %391 = load float, float* %390, align 4
  %392 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %387, i32 0
  %393 = load float, float* %392, align 8
  %394 = getelementptr inbounds %class.SkPath_RRectPointIterator, %class.SkPath_RRectPointIterator* %10, i64 0, i32 0, i32 0, i64 %387, i32 1
  %395 = load float, float* %394, align 4
  %396 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %389, float %391, float %393, float %395, float 0x3FE6A09E60000000) #24
  %397 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %398 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %397, i64 0, i32 4, i32 2
  %399 = load i32, i32* %398, align 4
  %400 = icmp sgt i32 %399, 0
  br i1 %400, label %401, label %414

401:                                              ; preds = %382
  %402 = add nsw i32 %399, -1
  %403 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %397, i64 0, i32 4, i32 0
  %404 = load i8*, i8** %403, align 8
  %405 = sext i32 %402 to i64
  %406 = getelementptr inbounds i8, i8* %404, i64 %405
  %407 = load i8, i8* %406, align 1
  %408 = icmp ult i8 %407, 5
  br i1 %408, label %409, label %414

409:                                              ; preds = %401
  %410 = bitcast %"class.SkPathRef::Editor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %410) #24
  %411 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %7, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %411, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %7, %class.sk_sp* %79, i32 0, i32 0) #24
  %412 = load %class.SkPathRef*, %class.SkPathRef** %411, align 8
  %413 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %412, i32 5, float 0.000000e+00) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %410) #24
  br label %414

414:                                              ; preds = %382, %401, %409
  %415 = load i32, i32* %189, align 8
  %416 = ashr i32 %415, 31
  %417 = xor i32 %415, -1
  %418 = xor i32 %416, %417
  store i32 %418, i32* %189, align 8
  %419 = bitcast %"class.SkPathRef::Editor"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %419) #24
  %420 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %12, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %420, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %12, %class.sk_sp* %79, i32 0, i32 0) #24
  %421 = icmp eq i32 %2, 1
  %422 = load %class.SkPathRef*, %class.SkPathRef** %420, align 8
  %423 = zext i1 %421 to i8
  %424 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %422, i64 0, i32 12
  store i8 %32, i8* %424, align 1
  %425 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %422, i64 0, i32 13
  store i8 %423, i8* %425, align 4
  %426 = trunc i32 %82 to i8
  %427 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %422, i64 0, i32 14
  store i8 %426, i8* %427, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %419) #24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %154) #24
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %80) #24
  store atomic i8 %72, i8* %60 monotonic, align 1
  %428 = load %class.SkPath*, %class.SkPath** %62, align 8
  %429 = load i8, i8* %69, align 1, !range !2
  %430 = icmp eq i8 %429, 0
  %431 = select i1 %430, i8 2, i8 0
  %432 = getelementptr inbounds %class.SkPath, %class.SkPath* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %431, i8* %432 monotonic, align 1
  %433 = load i8, i8* %70, align 2, !range !2
  %434 = load i8, i8* %67, align 8
  %435 = or i8 %434, %433
  %436 = icmp eq i8 %435, 0
  br i1 %436, label %473, label %437

437:                                              ; preds = %414
  %438 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1
  %439 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %438, i64 0, i32 0
  %440 = load float, float* %439, align 8
  %441 = fmul float %440, 0.000000e+00
  %442 = load float, float* %64, align 4
  %443 = fmul float %441, %442
  %444 = load float, float* %65, align 8
  %445 = fmul float %443, %444
  %446 = load float, float* %66, align 4
  %447 = fmul float %445, %446
  %448 = fcmp ord float %447, 0.000000e+00
  br i1 %448, label %449, label %473

449:                                              ; preds = %437
  %450 = bitcast %"class.SkPathRef::Editor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %450) #24
  %451 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %8, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %451, align 8
  %452 = getelementptr inbounds %class.SkPath, %class.SkPath* %428, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %8, %class.sk_sp* %452, i32 0, i32 0) #24
  %453 = load %class.SkPathRef*, %class.SkPathRef** %451, align 8
  %454 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %453, i64 0, i32 1
  %455 = bitcast %struct.SkRect* %454 to i8*
  %456 = bitcast %struct.SkRect* %438 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %455, i8* align 8 %456, i64 16, i1 false) #24
  %457 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %453, i64 0, i32 9
  store i8 0, i8* %457, align 8
  %458 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %454, i64 0, i32 0
  %459 = load float, float* %458, align 4
  %460 = fmul float %459, 0.000000e+00
  %461 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %453, i64 0, i32 1, i32 1
  %462 = load float, float* %461, align 4
  %463 = fmul float %460, %462
  %464 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %453, i64 0, i32 1, i32 2
  %465 = load float, float* %464, align 4
  %466 = fmul float %463, %465
  %467 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %453, i64 0, i32 1, i32 3
  %468 = load float, float* %467, align 4
  %469 = fmul float %466, %468
  %470 = fcmp ord float %469, 0.000000e+00
  %471 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %453, i64 0, i32 10
  %472 = zext i1 %470 to i8
  store i8 %472, i8* %471, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %450) #24
  br label %473

473:                                              ; preds = %414, %437, %449
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %61) #24
  br label %474

474:                                              ; preds = %40, %473, %36
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath7addOvalERK6SkRect15SkPathDirectionj(%class.SkPath* returned, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #5 align 2 {
  %5 = alloca %"class.SkPathRef::Editor", align 8
  %6 = alloca %"class.SkPathRef::Editor", align 8
  %7 = alloca %"class.SkPathRef::Editor", align 8
  %8 = alloca %"class.SkPathRef::Editor", align 8
  %9 = alloca %class.SkAutoPathBoundsUpdate, align 8
  %10 = alloca %class.SkPath_OvalPointIterator, align 8
  %11 = alloca %class.SkPath_RectPointIterator, align 8
  %12 = alloca %"class.SkPathRef::Editor", align 8
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %14 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 4, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %31

18:                                               ; preds = %4
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 4, i32 0
  %20 = load i8*, i8** %19, align 8
  br label %21

21:                                               ; preds = %27, %18
  %22 = phi i32 [ %29, %27 ], [ 0, %18 ]
  %23 = phi i8* [ %28, %27 ], [ %20, %18 ]
  %24 = load i8, i8* %23, align 1
  %25 = add i8 %24, -1
  %26 = icmp ult i8 %25, 4
  br i1 %26, label %33, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds i8, i8* %23, i64 1
  %29 = add nuw nsw i32 %22, 1
  %30 = icmp eq i32 %29, %16
  br i1 %30, label %31, label %21

31:                                               ; preds = %27, %4
  %32 = trunc i32 %2 to i8
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi i8 [ %32, %31 ], [ 2, %21 ]
  %35 = phi i8 [ 1, %31 ], [ 0, %21 ]
  %36 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %34, i8* %36 monotonic, align 1
  %37 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i8, i8* %37 monotonic, align 1
  %39 = bitcast %class.SkAutoPathBoundsUpdate* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #24
  %40 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 0
  store %class.SkPath* inttoptr (i64 -6148914691236517206 to %class.SkPath*), %class.SkPath** %40, align 8
  %41 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 1
  %43 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 2
  %44 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1, i32 3
  %45 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 2
  %46 = bitcast float* %41 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 -1, i64 16, i1 false)
  %47 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 3
  %48 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 4
  %49 = bitcast i8* %45 to i64*
  store i64 -6148914691236517206, i64* %49, align 8
  call void @_ZN22SkAutoPathBoundsUpdateC2EP6SkPathRK6SkRect(%class.SkAutoPathBoundsUpdate* nonnull %9, %class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1)
  %50 = bitcast %"class.SkPathRef::Editor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50)
  %51 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %5, %class.sk_sp* %51, i32 6, i32 6) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50)
  %52 = bitcast %class.SkPath_OvalPointIterator* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %52) #24
  %53 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 2
  %55 = and i32 %3, 3
  store i32 %55, i32* %53, align 8
  %56 = icmp eq i32 %2, 0
  %57 = select i1 %56, i32 1, i32 3
  store i32 %57, i32* %54, align 4
  %58 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %59 = load float, float* %58, align 4
  %60 = fmul float %59, 5.000000e-01
  %61 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %62 = load float, float* %61, align 4
  %63 = fmul float %62, 5.000000e-01
  %64 = fadd float %60, %63
  %65 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %66 = load float, float* %65, align 4
  %67 = fmul float %66, 5.000000e-01
  %68 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %69 = load float, float* %68, align 4
  %70 = fmul float %69, 5.000000e-01
  %71 = fadd float %67, %70
  %72 = insertelement <2 x float> undef, float %64, i32 0
  %73 = insertelement <2 x float> %72, float %66, i32 1
  %74 = bitcast %class.SkPath_OvalPointIterator* %10 to <2 x float>*
  store <2 x float> %73, <2 x float>* %74, align 8
  %75 = insertelement <2 x float> undef, float %62, i32 0
  %76 = insertelement <2 x float> %75, float %71, i32 1
  %77 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 1
  %78 = bitcast %struct.SkPoint* %77 to <2 x float>*
  store <2 x float> %76, <2 x float>* %78, align 8
  %79 = insertelement <2 x float> %72, float %69, i32 1
  %80 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 2
  %81 = bitcast %struct.SkPoint* %80 to <2 x float>*
  store <2 x float> %79, <2 x float>* %81, align 8
  %82 = insertelement <2 x float> undef, float %59, i32 0
  %83 = insertelement <2 x float> %82, float %71, i32 1
  %84 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 3
  %85 = bitcast %struct.SkPoint* %84 to <2 x float>*
  store <2 x float> %83, <2 x float>* %85, align 8
  %86 = bitcast %class.SkPath_RectPointIterator* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %86) #24
  %87 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 1
  %88 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 2
  %89 = icmp ne i32 %2, 0
  %90 = zext i1 %89 to i32
  %91 = add i32 %90, %3
  %92 = and i32 %91, 3
  store i32 %92, i32* %87, align 8
  store i32 %57, i32* %88, align 4
  %93 = insertelement <2 x float> %82, float %66, i32 1
  %94 = bitcast %class.SkPath_RectPointIterator* %11 to <2 x float>*
  store <2 x float> %93, <2 x float>* %94, align 8
  %95 = insertelement <2 x float> %75, float %66, i32 1
  %96 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 1
  %97 = bitcast %struct.SkPoint* %96 to <2 x float>*
  store <2 x float> %95, <2 x float>* %97, align 8
  %98 = insertelement <2 x float> %75, float %69, i32 1
  %99 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 2
  %100 = bitcast %struct.SkPoint* %99 to <2 x float>*
  store <2 x float> %98, <2 x float>* %100, align 8
  %101 = insertelement <2 x float> %82, float %69, i32 1
  %102 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 3
  %103 = bitcast %struct.SkPoint* %102 to <2 x float>*
  store <2 x float> %101, <2 x float>* %103, align 8
  %104 = zext i32 %55 to i64
  %105 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 %104
  %106 = bitcast %struct.SkPoint* %105 to i32*
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 %104, i32 1
  %109 = bitcast float* %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = bitcast %"class.SkPathRef::Editor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #24
  %112 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %6, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %112, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %6, %class.sk_sp* %51, i32 0, i32 0) #24
  %113 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %114 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %113, i64 0, i32 3, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %115, i32* %116, align 8
  %117 = load %class.SkPathRef*, %class.SkPathRef** %112, align 8
  %118 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %117, i32 0, float 0.000000e+00) #24
  %119 = bitcast %struct.SkPoint* %118 to i32*
  store i32 %107, i32* %119, align 4
  %120 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %118, i64 0, i32 1
  %121 = bitcast float* %120 to i32*
  store i32 %110, i32* %121, align 4
  %122 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %122 monotonic, align 1
  store atomic i8 2, i8* %37 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #24
  %123 = load i32, i32* %88, align 4
  %124 = load i32, i32* %87, align 8
  %125 = add i32 %123, %124
  %126 = and i32 %125, 3
  store i32 %126, i32* %87, align 8
  %127 = zext i32 %126 to i64
  %128 = load i32, i32* %53, align 8
  %129 = load i32, i32* %54, align 4
  %130 = add i32 %129, %128
  %131 = and i32 %130, 3
  store i32 %131, i32* %53, align 8
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %127, i32 0
  %134 = load float, float* %133, align 8
  %135 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %127, i32 1
  %136 = load float, float* %135, align 4
  %137 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 %132, i32 0
  %138 = load float, float* %137, align 8
  %139 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 %132, i32 1
  %140 = load float, float* %139, align 4
  %141 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %134, float %136, float %138, float %140, float 0x3FE6A09E60000000) #24
  %142 = load i32, i32* %87, align 8
  %143 = add i32 %123, %142
  %144 = and i32 %143, 3
  store i32 %144, i32* %87, align 8
  %145 = zext i32 %144 to i64
  %146 = load i32, i32* %53, align 8
  %147 = load i32, i32* %54, align 4
  %148 = add i32 %147, %146
  %149 = and i32 %148, 3
  store i32 %149, i32* %53, align 8
  %150 = zext i32 %149 to i64
  %151 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %145, i32 0
  %152 = load float, float* %151, align 8
  %153 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %145, i32 1
  %154 = load float, float* %153, align 4
  %155 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 %150, i32 0
  %156 = load float, float* %155, align 8
  %157 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 %150, i32 1
  %158 = load float, float* %157, align 4
  %159 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %152, float %154, float %156, float %158, float 0x3FE6A09E60000000) #24
  %160 = load i32, i32* %87, align 8
  %161 = add i32 %123, %160
  %162 = and i32 %161, 3
  store i32 %162, i32* %87, align 8
  %163 = zext i32 %162 to i64
  %164 = load i32, i32* %53, align 8
  %165 = load i32, i32* %54, align 4
  %166 = add i32 %165, %164
  %167 = and i32 %166, 3
  store i32 %167, i32* %53, align 8
  %168 = zext i32 %167 to i64
  %169 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %163, i32 0
  %170 = load float, float* %169, align 8
  %171 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %163, i32 1
  %172 = load float, float* %171, align 4
  %173 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 %168, i32 0
  %174 = load float, float* %173, align 8
  %175 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 %168, i32 1
  %176 = load float, float* %175, align 4
  %177 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %170, float %172, float %174, float %176, float 0x3FE6A09E60000000) #24
  %178 = load i32, i32* %87, align 8
  %179 = add i32 %123, %178
  %180 = and i32 %179, 3
  store i32 %180, i32* %87, align 8
  %181 = zext i32 %180 to i64
  %182 = load i32, i32* %53, align 8
  %183 = load i32, i32* %54, align 4
  %184 = add i32 %183, %182
  %185 = and i32 %184, 3
  store i32 %185, i32* %53, align 8
  %186 = zext i32 %185 to i64
  %187 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %181, i32 0
  %188 = load float, float* %187, align 8
  %189 = getelementptr inbounds %class.SkPath_RectPointIterator, %class.SkPath_RectPointIterator* %11, i64 0, i32 0, i32 0, i64 %181, i32 1
  %190 = load float, float* %189, align 4
  %191 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 %186, i32 0
  %192 = load float, float* %191, align 8
  %193 = getelementptr inbounds %class.SkPath_OvalPointIterator, %class.SkPath_OvalPointIterator* %10, i64 0, i32 0, i32 0, i64 %186, i32 1
  %194 = load float, float* %193, align 4
  %195 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %188, float %190, float %192, float %194, float 0x3FE6A09E60000000) #24
  %196 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %197 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %196, i64 0, i32 4, i32 2
  %198 = load i32, i32* %197, align 4
  %199 = icmp sgt i32 %198, 0
  br i1 %199, label %200, label %213

200:                                              ; preds = %33
  %201 = add nsw i32 %198, -1
  %202 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %196, i64 0, i32 4, i32 0
  %203 = load i8*, i8** %202, align 8
  %204 = sext i32 %201 to i64
  %205 = getelementptr inbounds i8, i8* %203, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = icmp ult i8 %206, 5
  br i1 %207, label %208, label %213

208:                                              ; preds = %200
  %209 = bitcast %"class.SkPathRef::Editor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %209) #24
  %210 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %7, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %210, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %7, %class.sk_sp* %51, i32 0, i32 0) #24
  %211 = load %class.SkPathRef*, %class.SkPathRef** %210, align 8
  %212 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %211, i32 5, float 0.000000e+00) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %209) #24
  br label %213

213:                                              ; preds = %33, %200, %208
  %214 = load i32, i32* %116, align 8
  %215 = ashr i32 %214, 31
  %216 = xor i32 %214, -1
  %217 = xor i32 %215, %216
  store i32 %217, i32* %116, align 8
  %218 = bitcast %"class.SkPathRef::Editor"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218) #24
  %219 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %12, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %219, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %12, %class.sk_sp* %51, i32 0, i32 0) #24
  %220 = icmp eq i32 %2, 1
  %221 = load %class.SkPathRef*, %class.SkPathRef** %219, align 8
  %222 = zext i1 %220 to i8
  %223 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %221, i64 0, i32 11
  store i8 %35, i8* %223, align 2
  %224 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %221, i64 0, i32 13
  store i8 %222, i8* %224, align 4
  %225 = trunc i32 %55 to i8
  %226 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %221, i64 0, i32 14
  store i8 %225, i8* %226, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218) #24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %86) #24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %52) #24
  %227 = load %class.SkPath*, %class.SkPath** %40, align 8
  %228 = load i8, i8* %47, align 1, !range !2
  %229 = icmp eq i8 %228, 0
  %230 = select i1 %229, i8 2, i8 0
  %231 = getelementptr inbounds %class.SkPath, %class.SkPath* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %230, i8* %231 monotonic, align 1
  %232 = load i8, i8* %48, align 2, !range !2
  %233 = load i8, i8* %45, align 8
  %234 = or i8 %233, %232
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %272, label %236

236:                                              ; preds = %213
  %237 = getelementptr inbounds %class.SkAutoPathBoundsUpdate, %class.SkAutoPathBoundsUpdate* %9, i64 0, i32 1
  %238 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %237, i64 0, i32 0
  %239 = load float, float* %238, align 8
  %240 = fmul float %239, 0.000000e+00
  %241 = load float, float* %42, align 4
  %242 = fmul float %240, %241
  %243 = load float, float* %43, align 8
  %244 = fmul float %242, %243
  %245 = load float, float* %44, align 4
  %246 = fmul float %244, %245
  %247 = fcmp ord float %246, 0.000000e+00
  br i1 %247, label %248, label %272

248:                                              ; preds = %236
  %249 = bitcast %"class.SkPathRef::Editor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %249) #24
  %250 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %8, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %250, align 8
  %251 = getelementptr inbounds %class.SkPath, %class.SkPath* %227, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %8, %class.sk_sp* %251, i32 0, i32 0) #24
  %252 = load %class.SkPathRef*, %class.SkPathRef** %250, align 8
  %253 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %252, i64 0, i32 1
  %254 = bitcast %struct.SkRect* %253 to i8*
  %255 = bitcast %struct.SkRect* %237 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %254, i8* align 8 %255, i64 16, i1 false) #24
  %256 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %252, i64 0, i32 9
  store i8 0, i8* %256, align 8
  %257 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %253, i64 0, i32 0
  %258 = load float, float* %257, align 4
  %259 = fmul float %258, 0.000000e+00
  %260 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %252, i64 0, i32 1, i32 1
  %261 = load float, float* %260, align 4
  %262 = fmul float %259, %261
  %263 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %252, i64 0, i32 1, i32 2
  %264 = load float, float* %263, align 4
  %265 = fmul float %262, %264
  %266 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %252, i64 0, i32 1, i32 3
  %267 = load float, float* %266, align 4
  %268 = fmul float %265, %267
  %269 = fcmp ord float %268, 0.000000e+00
  %270 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %252, i64 0, i32 10
  %271 = zext i1 %269 to i8
  store i8 %271, i8* %270, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %249) #24
  br label %272

272:                                              ; preds = %213, %236, %248
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #24
  store atomic i8 %38, i8* %37 monotonic, align 1
  ret %class.SkPath* %0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath22isZeroLengthSincePointEi(%class.SkPath* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = sub i32 %6, %1
  %8 = icmp slt i32 %7, 2
  br i1 %8, label %32, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 0
  %11 = load %struct.SkPoint*, %struct.SkPoint** %10, align 8
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 %12
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 %12, i32 1
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = zext i32 %7 to i64
  br label %20

18:                                               ; preds = %26
  %19 = icmp eq i64 %31, %17
  br i1 %19, label %32, label %20

20:                                               ; preds = %18, %9
  %21 = phi i64 [ 1, %9 ], [ %31, %18 ]
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 %21
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %22, i64 0, i32 0
  %24 = load float, float* %23, align 4
  %25 = fcmp une float %16, %24
  br i1 %25, label %32, label %26

26:                                               ; preds = %20
  %27 = load float, float* %14, align 4
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %22, i64 0, i32 1
  %29 = load float, float* %28, align 4
  %30 = fcmp une float %27, %29
  %31 = add nuw nsw i64 %21, 1
  br i1 %30, label %32, label %18

32:                                               ; preds = %26, %20, %18, %2
  %33 = phi i1 [ true, %2 ], [ true, %18 ], [ false, %26 ], [ false, %20 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath12addRoundRectERK6SkRectff15SkPathDirection(%class.SkPath*, %struct.SkRect* dereferenceable(16), float, float, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkRRect, align 4
  %7 = fcmp olt float %2, 0.000000e+00
  %8 = fcmp olt float %3, 0.000000e+00
  %9 = or i1 %7, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %5
  %11 = bitcast %class.SkRRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %11) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 0, i64 52, i1 false) #24
  call void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect* nonnull %6, %struct.SkRect* dereferenceable(16) %1, float %2, float %3) #24
  %12 = icmp eq i32 %4, 0
  %13 = select i1 %12, i32 6, i32 7
  %14 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPath* %0, %class.SkRRect* nonnull dereferenceable(52) %6, i32 %4, i32 %13) #24
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %11) #24
  br label %15

15:                                               ; preds = %5, %10
  %16 = phi %class.SkPath* [ %14, %10 ], [ %0, %5 ]
  ret %class.SkPath* %16
}

declare void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect*, %struct.SkRect* dereferenceable(16), float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath7addOvalERK6SkRect15SkPathDirection(%class.SkPath* returned, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addOvalERK6SkRect15SkPathDirectionj(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, i32 %2, i32 1)
  ret %class.SkPath* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath9addCircleEfff15SkPathDirection(%class.SkPath* returned, float, float, float, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = fcmp ogt float %3, 0.000000e+00
  br i1 %7, label %8, label %22

8:                                                ; preds = %5
  %9 = bitcast { <2 x float>, <2 x float> }* %6 to %struct.SkRect*
  %10 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #24
  %11 = fsub float %1, %3
  %12 = fsub float %2, %3
  %13 = fadd float %1, %3
  %14 = fadd float %2, %3
  %15 = insertelement <2 x float> undef, float %11, i32 0
  %16 = insertelement <2 x float> %15, float %12, i32 1
  %17 = insertelement <2 x float> undef, float %13, i32 0
  %18 = insertelement <2 x float> %17, float %14, i32 1
  %19 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  store <2 x float> %16, <2 x float>* %19, align 8
  %20 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  store <2 x float> %18, <2 x float>* %20, align 8
  %21 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addOvalERK6SkRect15SkPathDirectionj(%class.SkPath* %0, %struct.SkRect* nonnull dereferenceable(16) %9, i32 %4, i32 1) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #24
  br label %22

22:                                               ; preds = %8, %5
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath*, %struct.SkRect* readonly dereferenceable(16), float, float, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.SkPathRef::Editor", align 8
  %7 = alloca %class.SkMatrix, align 16
  %8 = alloca %"class.SkPathRef::Editor", align 8
  %9 = alloca %"class.SkPathRef::Editor", align 8
  %10 = alloca %"class.SkPathRef::Editor", align 8
  %11 = alloca %"class.SkPathRef::Editor", align 8
  %12 = alloca %struct.SkPoint, align 4
  %13 = alloca %struct.SkPoint, align 4
  %14 = alloca %struct.SkPoint, align 4
  %15 = alloca [5 x %struct.SkConic], align 16
  %16 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = fsub float %17, %19
  %21 = fcmp olt float %20, 0.000000e+00
  br i1 %21, label %349, label %22

22:                                               ; preds = %5
  %23 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = fsub float %24, %26
  %28 = fcmp olt float %27, 0.000000e+00
  br i1 %28, label %349, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %31 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %32 = load %class.SkPathRef*, %class.SkPathRef** %31, align 8
  %33 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %32, i64 0, i32 4, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  %36 = or i1 %35, %4
  %37 = fcmp oeq float %3, 0.000000e+00
  br i1 %37, label %38, label %46

38:                                               ; preds = %29
  %39 = fcmp oeq float %2, 0.000000e+00
  %40 = fcmp oeq float %2, 3.600000e+02
  %41 = or i1 %39, %40
  br i1 %41, label %42, label %46

42:                                               ; preds = %38
  %43 = fmul float %26, 5.000000e-01
  %44 = fmul float %24, 5.000000e-01
  %45 = fadd float %44, %43
  br label %50

46:                                               ; preds = %38, %29
  %47 = fcmp oeq float %20, 0.000000e+00
  %48 = fcmp oeq float %27, 0.000000e+00
  %49 = and i1 %47, %48
  br i1 %49, label %50, label %67

50:                                               ; preds = %46, %42
  %51 = phi float [ %45, %42 ], [ %26, %46 ]
  br i1 %36, label %52, label %65

52:                                               ; preds = %50
  %53 = bitcast %"class.SkPathRef::Editor"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #24
  %54 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %9, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %54, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %9, %class.sk_sp* %30, i32 0, i32 0) #24
  %55 = load %class.SkPathRef*, %class.SkPathRef** %31, align 8
  %56 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %55, i64 0, i32 3, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %57, i32* %58, align 8
  %59 = load %class.SkPathRef*, %class.SkPathRef** %54, align 8
  %60 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %59, i32 0, float 0.000000e+00) #24
  %61 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %60, i64 0, i32 0
  store float %17, float* %61, align 4
  %62 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %60, i64 0, i32 1
  store float %51, float* %62, align 4
  %63 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %63 monotonic, align 1
  %64 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %64 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #24
  br label %349

65:                                               ; preds = %50
  %66 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %17, float %51) #24
  br label %349

67:                                               ; preds = %46
  %68 = bitcast %struct.SkPoint* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #24
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 0
  %70 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 1
  %71 = bitcast %struct.SkPoint* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #24
  %72 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 0, i32 0
  %73 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 0, i32 1
  %74 = fmul float %2, 0x3F91DF46A0000000
  %75 = fadd float %2, %3
  %76 = fmul float %75, 0x3F91DF46A0000000
  %77 = tail call float @sinf(float %74) #24
  %78 = tail call float @llvm.fabs.f32(float %77) #24
  %79 = fcmp ole float %78, 0x3F30000000000000
  %80 = select i1 %79, float 0.000000e+00, float %77
  store float %80, float* %70, align 4
  %81 = tail call float @cosf(float %74) #24
  %82 = tail call float @llvm.fabs.f32(float %81) #24
  %83 = fcmp ole float %82, 0x3F30000000000000
  %84 = select i1 %83, float 0.000000e+00, float %81
  store float %84, float* %69, align 4
  %85 = tail call float @sinf(float %76) #24
  %86 = tail call float @llvm.fabs.f32(float %85) #24
  %87 = fcmp ole float %86, 0x3F30000000000000
  %88 = select i1 %87, float 0.000000e+00, float %85
  store float %88, float* %73, align 4
  %89 = tail call float @cosf(float %76) #24
  %90 = tail call float @llvm.fabs.f32(float %89) #24
  %91 = fcmp ole float %90, 0x3F30000000000000
  %92 = select i1 %91, float 0.000000e+00, float %89
  store float %92, float* %72, align 4
  %93 = fcmp oeq float %84, %92
  %94 = fcmp oeq float %80, %88
  %95 = and i1 %93, %94
  br i1 %95, label %96, label %118

96:                                               ; preds = %67
  %97 = tail call float @llvm.fabs.f32(float %3) #24
  %98 = fcmp olt float %97, 3.600000e+02
  %99 = fcmp ogt float %97, 3.590000e+02
  %100 = and i1 %98, %99
  br i1 %100, label %101, label %118

101:                                              ; preds = %96
  %102 = tail call float @llvm.copysign.f32(float 0x3F60000000000000, float %3) #24
  br label %103

103:                                              ; preds = %103, %101
  %104 = phi float [ %76, %101 ], [ %105, %103 ]
  %105 = fsub float %104, %102
  %106 = tail call float @sinf(float %105) #24
  %107 = tail call float @llvm.fabs.f32(float %106) #24
  %108 = fcmp ole float %107, 0x3F30000000000000
  %109 = select i1 %108, float 0.000000e+00, float %106
  %110 = tail call float @cosf(float %105) #24
  %111 = tail call float @llvm.fabs.f32(float %110) #24
  %112 = fcmp ole float %111, 0x3F30000000000000
  %113 = select i1 %112, float 0.000000e+00, float %110
  %114 = fcmp oeq float %84, %113
  %115 = fcmp oeq float %80, %109
  %116 = and i1 %114, %115
  br i1 %116, label %103, label %117

117:                                              ; preds = %103
  store float %109, float* %73, align 4
  store float %113, float* %72, align 4
  br label %118

118:                                              ; preds = %117, %67, %96
  %119 = phi float [ %109, %117 ], [ %88, %67 ], [ %88, %96 ]
  %120 = phi float [ %113, %117 ], [ %92, %67 ], [ %92, %96 ]
  %121 = bitcast %struct.SkPoint* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #24
  %122 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %122, align 4
  %123 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %123, align 4
  %124 = fcmp oeq float %84, %120
  %125 = fcmp oeq float %80, %119
  %126 = and i1 %124, %125
  br i1 %126, label %127, label %186

127:                                              ; preds = %118
  %128 = load float, float* %16, align 4
  %129 = load float, float* %18, align 4
  %130 = fsub float %128, %129
  %131 = fmul float %130, 5.000000e-01
  %132 = load float, float* %23, align 4
  %133 = load float, float* %25, align 4
  %134 = fsub float %132, %133
  %135 = fmul float %134, 5.000000e-01
  %136 = fmul float %129, 5.000000e-01
  %137 = fmul float %128, 5.000000e-01
  %138 = fadd float %137, %136
  %139 = tail call float @cosf(float %76) #24
  %140 = fmul float %131, %139
  %141 = fadd float %138, %140
  %142 = load float, float* %25, align 4
  %143 = fmul float %142, 5.000000e-01
  %144 = load float, float* %23, align 4
  %145 = fmul float %144, 5.000000e-01
  %146 = fadd float %143, %145
  %147 = tail call float @sinf(float %76) #24
  %148 = fmul float %135, %147
  %149 = fadd float %146, %148
  store float %141, float* %122, align 4
  store float %149, float* %123, align 4
  br i1 %36, label %150, label %163

150:                                              ; preds = %127
  %151 = bitcast %"class.SkPathRef::Editor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #24
  %152 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %8, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %152, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %8, %class.sk_sp* %30, i32 0, i32 0) #24
  %153 = load %class.SkPathRef*, %class.SkPathRef** %31, align 8
  %154 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %153, i64 0, i32 3, i32 2
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %155, i32* %156, align 8
  %157 = load %class.SkPathRef*, %class.SkPathRef** %152, align 8
  %158 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %157, i32 0, float 0.000000e+00) #24
  %159 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %158, i64 0, i32 0
  store float %141, float* %159, align 4
  %160 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %158, i64 0, i32 1
  store float %149, float* %160, align 4
  %161 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %161 monotonic, align 1
  %162 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %162 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #24
  br label %348

163:                                              ; preds = %127
  %164 = load %class.SkPathRef*, %class.SkPathRef** %31, align 8
  %165 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %164, i64 0, i32 3, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = icmp sgt i32 %166, 0
  br i1 %167, label %168, label %184

168:                                              ; preds = %163
  %169 = add nsw i32 %166, -1
  %170 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %164, i64 0, i32 3, i32 0
  %171 = load %struct.SkPoint*, %struct.SkPoint** %170, align 8
  %172 = sext i32 %169 to i64
  %173 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %171, i64 %172, i32 0
  %174 = load float, float* %173, align 4
  %175 = fsub float %174, %141
  %176 = tail call float @llvm.fabs.f32(float %175) #24
  %177 = fcmp ugt float %176, 0x3F30000000000000
  br i1 %177, label %184, label %178

178:                                              ; preds = %168
  %179 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %171, i64 %172, i32 1
  %180 = load float, float* %179, align 4
  %181 = fsub float %180, %149
  %182 = tail call float @llvm.fabs.f32(float %181) #24
  %183 = fcmp ugt float %182, 0x3F30000000000000
  br i1 %183, label %184, label %348

184:                                              ; preds = %163, %178, %168
  %185 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %141, float %149) #24
  br label %348

186:                                              ; preds = %118
  %187 = fcmp ule float %3, 0.000000e+00
  %188 = zext i1 %187 to i32
  %189 = bitcast [5 x %struct.SkConic]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 140, i8* nonnull %189) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %189, i8 -1, i64 140, i1 false)
  %190 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 0
  %191 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %191) #24
  %192 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %193 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %193, align 16
  %194 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %195 = bitcast float* %194 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %195, align 16
  %196 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %196, align 16
  store i32 16, i32* %192, align 4
  %197 = load float, float* %16, align 4
  %198 = load float, float* %18, align 4
  %199 = fsub float %197, %198
  %200 = fmul float %199, 5.000000e-01
  %201 = load float, float* %23, align 4
  %202 = load float, float* %25, align 4
  %203 = fsub float %201, %202
  %204 = fmul float %203, 5.000000e-01
  %205 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %7, float %200, float %204) #24
  %206 = load float, float* %18, align 4
  %207 = fmul float %206, 5.000000e-01
  %208 = load float, float* %16, align 4
  %209 = fmul float %208, 5.000000e-01
  %210 = fadd float %207, %209
  %211 = load float, float* %25, align 4
  %212 = fmul float %211, 5.000000e-01
  %213 = load float, float* %23, align 4
  %214 = fmul float %213, 5.000000e-01
  %215 = fadd float %212, %214
  %216 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %7, float %210, float %215) #24
  %217 = call i32 @_ZN7SkConic12BuildUnitArcERK7SkPointS2_19SkRotationDirectionPK8SkMatrixPS_(%struct.SkPoint* nonnull dereferenceable(8) %12, %struct.SkPoint* nonnull dereferenceable(8) %13, i32 %188, %class.SkMatrix* nonnull %7, %struct.SkConic* nonnull %190) #24
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %297, label %219

219:                                              ; preds = %186
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %191) #24
  %220 = shl nsw i32 %217, 1
  %221 = or i32 %220, 1
  %222 = bitcast %"class.SkPathRef::Editor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %222)
  %223 = icmp sgt i32 %221, 0
  br i1 %223, label %224, label %225

224:                                              ; preds = %219
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %6, %class.sk_sp* %30, i32 %221, i32 %221) #24
  br label %225

225:                                              ; preds = %219, %224
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %222)
  br i1 %36, label %226, label %245

226:                                              ; preds = %225
  %227 = bitcast [5 x %struct.SkConic]* %15 to i32*
  %228 = load i32, i32* %227, align 16
  %229 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 0, i32 0, i64 0, i32 1
  %230 = bitcast float* %229 to i32*
  %231 = load i32, i32* %230, align 4
  %232 = bitcast %"class.SkPathRef::Editor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #24
  %233 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %10, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %233, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %10, %class.sk_sp* %30, i32 0, i32 0) #24
  %234 = load %class.SkPathRef*, %class.SkPathRef** %31, align 8
  %235 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %234, i64 0, i32 3, i32 2
  %236 = load i32, i32* %235, align 4
  %237 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %236, i32* %237, align 8
  %238 = load %class.SkPathRef*, %class.SkPathRef** %233, align 8
  %239 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %238, i32 0, float 0.000000e+00) #24
  %240 = bitcast %struct.SkPoint* %239 to i32*
  store i32 %228, i32* %240, align 4
  %241 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %239, i64 0, i32 1
  %242 = bitcast float* %241 to i32*
  store i32 %231, i32* %242, align 4
  %243 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %243 monotonic, align 1
  %244 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %244 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #24
  br label %278

245:                                              ; preds = %225
  %246 = load %class.SkPathRef*, %class.SkPathRef** %31, align 8
  %247 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %246, i64 0, i32 3, i32 2
  %248 = load i32, i32* %247, align 4
  %249 = icmp sgt i32 %248, 0
  br i1 %249, label %253, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 0, i32 0, i64 0, i32 0
  %252 = load float, float* %251, align 16
  br label %273

253:                                              ; preds = %245
  %254 = add nsw i32 %248, -1
  %255 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %246, i64 0, i32 3, i32 0
  %256 = load %struct.SkPoint*, %struct.SkPoint** %255, align 8
  %257 = sext i32 %254 to i64
  %258 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %256, i64 %257, i32 0
  %259 = load float, float* %258, align 4
  %260 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 0, i32 0, i64 0, i32 0
  %261 = load float, float* %260, align 16
  %262 = fsub float %259, %261
  %263 = call float @llvm.fabs.f32(float %262) #24
  %264 = fcmp ugt float %263, 0x3F30000000000000
  br i1 %264, label %273, label %265

265:                                              ; preds = %253
  %266 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %256, i64 %257, i32 1
  %267 = load float, float* %266, align 4
  %268 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 0, i32 0, i64 0, i32 1
  %269 = load float, float* %268, align 4
  %270 = fsub float %267, %269
  %271 = call float @llvm.fabs.f32(float %270) #24
  %272 = fcmp ugt float %271, 0x3F30000000000000
  br i1 %272, label %273, label %278

273:                                              ; preds = %265, %253, %250
  %274 = phi float [ %252, %250 ], [ %261, %265 ], [ %261, %253 ]
  %275 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 0, i32 0, i64 0, i32 1
  %276 = load float, float* %275, align 4
  %277 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %274, float %276) #24
  br label %278

278:                                              ; preds = %226, %265, %273
  %279 = icmp sgt i32 %217, 0
  br i1 %279, label %280, label %347

280:                                              ; preds = %278
  %281 = zext i32 %217 to i64
  br label %282

282:                                              ; preds = %282, %280
  %283 = phi i64 [ 0, %280 ], [ %295, %282 ]
  %284 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 %283, i32 1
  %285 = load float, float* %284, align 4
  %286 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 %283, i32 0, i64 1, i32 0
  %287 = load float, float* %286, align 4
  %288 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 %283, i32 0, i64 1, i32 1
  %289 = load float, float* %288, align 4
  %290 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 %283, i32 0, i64 2, i32 0
  %291 = load float, float* %290, align 4
  %292 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 %283, i32 0, i64 2, i32 1
  %293 = load float, float* %292, align 4
  %294 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %287, float %289, float %291, float %293, float %285) #24
  %295 = add nuw nsw i64 %283, 1
  %296 = icmp eq i64 %295, %281
  br i1 %296, label %347, label %282

297:                                              ; preds = %186
  %298 = load float, float* %72, align 4
  %299 = load float, float* %73, align 4
  call void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix* nonnull %7, float %298, float %299, %struct.SkPoint* nonnull %14) #24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %191) #24
  br i1 %36, label %300, label %318

300:                                              ; preds = %297
  %301 = bitcast %struct.SkPoint* %14 to i32*
  %302 = load i32, i32* %301, align 4
  %303 = bitcast float* %123 to i32*
  %304 = load i32, i32* %303, align 4
  %305 = bitcast %"class.SkPathRef::Editor"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #24
  %306 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %11, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %306, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %11, %class.sk_sp* %30, i32 0, i32 0) #24
  %307 = load %class.SkPathRef*, %class.SkPathRef** %31, align 8
  %308 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %307, i64 0, i32 3, i32 2
  %309 = load i32, i32* %308, align 4
  %310 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %309, i32* %310, align 8
  %311 = load %class.SkPathRef*, %class.SkPathRef** %306, align 8
  %312 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %311, i32 0, float 0.000000e+00) #24
  %313 = bitcast %struct.SkPoint* %312 to i32*
  store i32 %302, i32* %313, align 4
  %314 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %312, i64 0, i32 1
  %315 = bitcast float* %314 to i32*
  store i32 %304, i32* %315, align 4
  %316 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %316 monotonic, align 1
  %317 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %317 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #24
  br label %347

318:                                              ; preds = %297
  %319 = load %class.SkPathRef*, %class.SkPathRef** %31, align 8
  %320 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %319, i64 0, i32 3, i32 2
  %321 = load i32, i32* %320, align 4
  %322 = icmp sgt i32 %321, 0
  br i1 %322, label %325, label %323

323:                                              ; preds = %318
  %324 = load float, float* %122, align 4
  br label %343

325:                                              ; preds = %318
  %326 = add nsw i32 %321, -1
  %327 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %319, i64 0, i32 3, i32 0
  %328 = load %struct.SkPoint*, %struct.SkPoint** %327, align 8
  %329 = sext i32 %326 to i64
  %330 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %328, i64 %329, i32 0
  %331 = load float, float* %330, align 4
  %332 = load float, float* %122, align 4
  %333 = fsub float %331, %332
  %334 = call float @llvm.fabs.f32(float %333) #24
  %335 = fcmp ugt float %334, 0x3F30000000000000
  br i1 %335, label %343, label %336

336:                                              ; preds = %325
  %337 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %328, i64 %329, i32 1
  %338 = load float, float* %337, align 4
  %339 = load float, float* %123, align 4
  %340 = fsub float %338, %339
  %341 = call float @llvm.fabs.f32(float %340) #24
  %342 = fcmp ugt float %341, 0x3F30000000000000
  br i1 %342, label %343, label %347

343:                                              ; preds = %336, %325, %323
  %344 = phi float [ %324, %323 ], [ %332, %336 ], [ %332, %325 ]
  %345 = load float, float* %123, align 4
  %346 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %344, float %345) #24
  br label %347

347:                                              ; preds = %282, %278, %343, %336, %300
  call void @llvm.lifetime.end.p0i8(i64 140, i8* nonnull %189) #24
  br label %348

348:                                              ; preds = %184, %178, %150, %347
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #24
  br label %349

349:                                              ; preds = %348, %65, %52, %5, %22
  %350 = phi %class.SkPath* [ %0, %22 ], [ %0, %5 ], [ %0, %348 ], [ %0, %52 ], [ %66, %65 ]
  ret %class.SkPath* %350
}

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath*, float, float, float, i32, i32, float, float) local_unnamed_addr #5 align 2 {
  %9 = alloca %"class.SkPathRef::Editor", align 8
  %10 = alloca %"class.SkPathRef::Editor", align 8
  %11 = alloca %"class.SkPathRef::Editor", align 8
  %12 = alloca [2 x %struct.SkPoint], align 16
  %13 = alloca <2 x float>, align 8
  %14 = bitcast <2 x float>* %13 to %struct.SkPoint*
  %15 = alloca %class.SkMatrix, align 16
  %16 = alloca <2 x float>, align 8
  %17 = bitcast <2 x float>* %16 to %struct.SkPoint*
  %18 = alloca <4 x float>, align 16
  %19 = bitcast <4 x float>* %18 to [2 x %struct.SkPoint]*
  %20 = alloca <2 x float>, align 8
  %21 = bitcast <2 x float>* %20 to %struct.SkPoint*
  %22 = alloca <4 x float>, align 16
  %23 = bitcast <4 x float>* %22 to [2 x %struct.SkPoint]*
  %24 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %27, label %57

27:                                               ; preds = %8
  %28 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %29 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %30 = load %class.SkPathRef*, %class.SkPathRef** %29, align 8
  %31 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %30, i64 0, i32 4, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %43, label %34

34:                                               ; preds = %27
  %35 = xor i32 %25, -1
  %36 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %30, i64 0, i32 3, i32 0
  %37 = load %struct.SkPoint*, %struct.SkPoint** %36, align 8
  %38 = sext i32 %35 to i64
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %37, i64 %38, i32 0
  %40 = load float, float* %39, align 4
  %41 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %37, i64 %38, i32 1
  %42 = load float, float* %41, align 4
  br label %43

43:                                               ; preds = %34, %27
  %44 = phi float [ %42, %34 ], [ 0.000000e+00, %27 ]
  %45 = phi float [ %40, %34 ], [ 0.000000e+00, %27 ]
  %46 = bitcast %"class.SkPathRef::Editor"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #24
  %47 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %11, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %47, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %11, %class.sk_sp* %28, i32 0, i32 0) #24
  %48 = load %class.SkPathRef*, %class.SkPathRef** %29, align 8
  %49 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %48, i64 0, i32 3, i32 2
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %24, align 8
  %51 = load %class.SkPathRef*, %class.SkPathRef** %47, align 8
  %52 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %51, i32 0, float 0.000000e+00) #24
  %53 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 0, i32 0
  store float %45, float* %53, align 4
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 0, i32 1
  store float %44, float* %54, align 4
  %55 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %55 monotonic, align 1
  %56 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %56 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #24
  br label %57

57:                                               ; preds = %8, %43
  %58 = bitcast [2 x %struct.SkPoint]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #24
  %59 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %12, i64 0, i64 0
  %60 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %12, i64 0, i64 1, i32 0
  %61 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %12, i64 0, i64 1, i32 1
  %62 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %63 = bitcast [2 x %struct.SkPoint]* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %63, i8 -1, i64 16, i1 false)
  %64 = load %class.SkPathRef*, %class.SkPathRef** %62, align 8
  %65 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %64, i64 0, i32 3, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp sgt i32 %66, 0
  br i1 %67, label %68, label %82

68:                                               ; preds = %57
  %69 = add nsw i32 %66, -1
  %70 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %64, i64 0, i32 3, i32 0
  %71 = load %struct.SkPoint*, %struct.SkPoint** %70, align 8
  %72 = sext i32 %69 to i64
  %73 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %71, i64 %72
  %74 = bitcast %struct.SkPoint* %73 to i64*
  %75 = bitcast [2 x %struct.SkPoint]* %12 to i64*
  %76 = load i64, i64* %74, align 4
  store i64 %76, i64* %75, align 16
  %77 = trunc i64 %76 to i32
  %78 = bitcast i32 %77 to float
  %79 = lshr i64 %76, 32
  %80 = trunc i64 %79 to i32
  %81 = bitcast i32 %80 to float
  br label %85

82:                                               ; preds = %57
  %83 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %12, i64 0, i64 0, i32 0
  %84 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %12, i64 0, i64 0, i32 1
  store float 0.000000e+00, float* %83, align 16
  store float 0.000000e+00, float* %84, align 4
  br label %85

85:                                               ; preds = %68, %82
  %86 = phi float [ %81, %68 ], [ 0.000000e+00, %82 ]
  %87 = phi float [ %78, %68 ], [ 0.000000e+00, %82 ]
  %88 = fcmp une float %1, 0.000000e+00
  %89 = fcmp une float %2, 0.000000e+00
  %90 = and i1 %88, %89
  br i1 %90, label %93, label %91

91:                                               ; preds = %85
  %92 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %6, float %7)
  br label %338

93:                                               ; preds = %85
  store float %6, float* %60, align 8
  store float %7, float* %61, align 4
  %94 = fcmp oeq float %87, %6
  %95 = fcmp oeq float %86, %7
  %96 = and i1 %94, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %6, float %7)
  br label %338

99:                                               ; preds = %93
  %100 = insertelement <2 x float> undef, float %2, i32 0
  %101 = insertelement <2 x float> %100, float %1, i32 1
  %102 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %101)
  %103 = bitcast <2 x float>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103) #24
  %104 = getelementptr inbounds <2 x float>, <2 x float>* %13, i64 0, i64 0
  %105 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 1
  %106 = fsub float %87, %6
  %107 = fsub float %86, %7
  %108 = fmul float %106, 5.000000e-01
  store float %108, float* %104, align 8
  %109 = fmul float %107, 5.000000e-01
  store float %109, float* %105, align 4
  %110 = bitcast %class.SkMatrix* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %110) #24
  %111 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 1
  %112 = bitcast %class.SkMatrix* %15 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %112, align 16
  %113 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 0, i64 4
  %114 = bitcast float* %113 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %114, align 16
  %115 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %15, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %115, align 16
  store i32 16, i32* %111, align 4
  %116 = fsub float -0.000000e+00, %3
  %117 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setRotateEf(%class.SkMatrix* nonnull %15, float %116) #24
  %118 = bitcast <2 x float>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #24
  %119 = getelementptr inbounds <2 x float>, <2 x float>* %16, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %119, align 8
  %120 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %17, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %120, align 4
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %15, %struct.SkPoint* nonnull %17, %struct.SkPoint* nonnull %14, i32 1) #24
  %121 = insertelement <2 x float> undef, float %1, i32 0
  %122 = insertelement <2 x float> %121, float %2, i32 1
  %123 = fmul <2 x float> %122, %122
  %124 = load <2 x float>, <2 x float>* %16, align 8
  %125 = fmul <2 x float> %124, %124
  %126 = fdiv <2 x float> %125, %123
  %127 = extractelement <2 x float> %126, i32 0
  %128 = extractelement <2 x float> %126, i32 1
  %129 = fadd float %127, %128
  %130 = fcmp ogt float %129, 1.000000e+00
  br i1 %130, label %131, label %136

131:                                              ; preds = %99
  %132 = call float @sqrtf(float %129) #24
  %133 = insertelement <2 x float> undef, float %132, i32 0
  %134 = shufflevector <2 x float> %133, <2 x float> undef, <2 x i32> zeroinitializer
  %135 = fmul <2 x float> %102, %134
  br label %136

136:                                              ; preds = %131, %99
  %137 = phi <2 x float> [ %135, %131 ], [ %102, %99 ]
  %138 = extractelement <2 x float> %137, i32 1
  %139 = fdiv float 1.000000e+00, %138
  %140 = extractelement <2 x float> %137, i32 0
  %141 = fdiv float 1.000000e+00, %140
  %142 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %15, float %139, float %141) #24
  %143 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preRotateEf(%class.SkMatrix* nonnull %15, float %116) #24
  %144 = bitcast <4 x float>* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #24
  %145 = bitcast <4 x float>* %18 to %struct.SkPoint*
  %146 = getelementptr inbounds <4 x float>, <4 x float>* %18, i64 0, i64 0
  %147 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %19, i64 0, i64 0, i32 1
  %148 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %19, i64 0, i64 1
  %149 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %148, i64 0, i32 0
  %150 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %19, i64 0, i64 1, i32 1
  %151 = bitcast <4 x float>* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %151, i8 -1, i64 16, i1 false)
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %15, %struct.SkPoint* nonnull %145, %struct.SkPoint* nonnull %59, i32 2) #24
  %152 = bitcast <2 x float>* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #24
  %153 = bitcast %struct.SkPoint* %148 to <2 x float>*
  %154 = load <2 x float>, <2 x float>* %153, align 8
  %155 = bitcast <4 x float>* %18 to <2 x float>*
  %156 = load <2 x float>, <2 x float>* %155, align 16
  %157 = fsub <2 x float> %154, %156
  store <2 x float> %157, <2 x float>* %20, align 8
  %158 = fmul <2 x float> %157, %157
  %159 = extractelement <2 x float> %158, i32 0
  %160 = extractelement <2 x float> %158, i32 1
  %161 = fadd float %159, %160
  %162 = fdiv float 1.000000e+00, %161
  %163 = fadd float %162, -2.500000e-01
  %164 = fcmp olt float %163, 0.000000e+00
  %165 = select i1 %164, float 0.000000e+00, float %163
  %166 = call float @sqrtf(float %165) #24
  %167 = icmp eq i32 %5, 1
  %168 = icmp ne i32 %4, 0
  %169 = xor i1 %168, %167
  %170 = fsub float -0.000000e+00, %166
  %171 = select i1 %169, float %170, float %166
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %21, float %171, %struct.SkPoint* nonnull %21) #24
  %172 = load <4 x float>, <4 x float>* %18, align 16
  %173 = shufflevector <4 x float> %172, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %174 = shufflevector <4 x float> %172, <4 x float> undef, <2 x i32> <i32 2, i32 3>
  %175 = fadd <2 x float> %173, %174
  %176 = fmul <2 x float> %175, <float 5.000000e-01, float 5.000000e-01>
  %177 = load <2 x float>, <2 x float>* %20, align 8
  %178 = shufflevector <2 x float> %177, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %179 = fsub <2 x float> %176, %178
  %180 = fadd <2 x float> %176, %178
  %181 = shufflevector <2 x float> %179, <2 x float> %180, <2 x i32> <i32 0, i32 3>
  %182 = shufflevector <2 x float> %181, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %183 = fsub <4 x float> %172, %182
  store <4 x float> %183, <4 x float>* %18, align 16
  %184 = extractelement <4 x float> %183, i32 0
  %185 = extractelement <4 x float> %183, i32 1
  %186 = call float @atan2f(float %185, float %184) #24
  %187 = load float, float* %150, align 4
  %188 = load float, float* %149, align 8
  %189 = call float @atan2f(float %187, float %188) #24
  %190 = fsub float %189, %186
  %191 = fcmp olt float %190, 0.000000e+00
  %192 = icmp eq i32 %5, 0
  %193 = and i1 %192, %191
  br i1 %193, label %194, label %196

194:                                              ; preds = %136
  %195 = fadd float %190, 0x401921FB60000000
  br label %202

196:                                              ; preds = %136
  %197 = fcmp ogt float %190, 0.000000e+00
  %198 = icmp ne i32 %5, 0
  %199 = and i1 %198, %197
  %200 = fadd float %190, 0xC01921FB60000000
  %201 = select i1 %199, float %200, float %190
  br label %202

202:                                              ; preds = %196, %194
  %203 = phi float [ %195, %194 ], [ %201, %196 ]
  %204 = call float @llvm.fabs.f32(float %203)
  %205 = fcmp olt float %204, 0x3ECA5A84E0000000
  br i1 %205, label %206, label %208

206:                                              ; preds = %202
  %207 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %6, float %7)
  br label %336

208:                                              ; preds = %202
  %209 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setRotateEf(%class.SkMatrix* nonnull %15, float %3) #24
  %210 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix* nonnull %15, float %138, float %140) #24
  %211 = fdiv float %203, 0x4000C15240000000
  %212 = call float @llvm.fabs.f32(float %211)
  %213 = call float @llvm.ceil.f32(float %212)
  %214 = fcmp olt float %213, 0x41DFFFFFE0000000
  %215 = select i1 %214, float %213, float 0x41DFFFFFE0000000
  %216 = fcmp ogt float %215, 0xC1DFFFFFE0000000
  %217 = select i1 %216, float %215, float 0xC1DFFFFFE0000000
  %218 = fptosi float %217 to i32
  %219 = sitofp i32 %218 to float
  %220 = fdiv float %203, %219
  %221 = fmul float %220, 5.000000e-01
  %222 = call float @tanf(float %221) #24
  %223 = bitcast float %222 to i32
  %224 = and i32 %223, 2139095040
  %225 = icmp eq i32 %224, 2139095040
  br i1 %225, label %336, label %226

226:                                              ; preds = %208
  %227 = call float @cosf(float %220) #24
  %228 = fmul float %227, 5.000000e-01
  %229 = fadd float %228, 5.000000e-01
  %230 = call float @sqrtf(float %229) #24
  %231 = call float @llvm.fabs.f32(float %220)
  %232 = fsub float 0x3FF921FB60000000, %231
  %233 = call float @llvm.fabs.f32(float %232) #24
  %234 = fcmp ole float %233, 0x3F30000000000000
  %235 = call float @llvm.floor.f32(float %138) #24
  %236 = fcmp oeq float %235, %138
  %237 = and i1 %236, %234
  %238 = call float @llvm.floor.f32(float %140) #24
  %239 = fcmp oeq float %238, %140
  %240 = and i1 %239, %237
  %241 = call float @llvm.floor.f32(float %6) #24
  %242 = fcmp oeq float %241, %6
  %243 = and i1 %242, %240
  br i1 %243, label %244, label %247

244:                                              ; preds = %226
  %245 = call float @llvm.floor.f32(float %7) #24
  %246 = fcmp oeq float %245, %7
  br label %247

247:                                              ; preds = %244, %226
  %248 = phi i1 [ false, %226 ], [ %246, %244 ]
  %249 = icmp sgt i32 %218, 0
  br i1 %249, label %250, label %261

250:                                              ; preds = %247
  %251 = bitcast %struct.SkPoint* %148 to i64*
  %252 = bitcast <4 x float>* %22 to i8*
  %253 = bitcast <4 x float>* %22 to %struct.SkPoint*
  %254 = getelementptr inbounds <4 x float>, <4 x float>* %22, i64 0, i64 0
  %255 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %23, i64 0, i64 0, i32 1
  %256 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %23, i64 0, i64 1, i32 0
  %257 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %23, i64 0, i64 1, i32 1
  %258 = bitcast <4 x float>* %22 to i8*
  %259 = extractelement <2 x float> %179, i32 0
  %260 = extractelement <2 x float> %180, i32 1
  br label %291

261:                                              ; preds = %328, %247
  %262 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %263 = load %class.SkPathRef*, %class.SkPathRef** %62, align 8
  %264 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %263, i64 0, i32 3, i32 2
  %265 = load i32, i32* %264, align 4
  %266 = icmp eq i32 %265, 0
  br i1 %266, label %267, label %279

267:                                              ; preds = %261
  %268 = bitcast %"class.SkPathRef::Editor"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %268) #24
  %269 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %9, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %269, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %9, %class.sk_sp* %262, i32 0, i32 0) #24
  %270 = load %class.SkPathRef*, %class.SkPathRef** %62, align 8
  %271 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %270, i64 0, i32 3, i32 2
  %272 = load i32, i32* %271, align 4
  store i32 %272, i32* %24, align 8
  %273 = load %class.SkPathRef*, %class.SkPathRef** %269, align 8
  %274 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %273, i32 0, float 0.000000e+00) #24
  %275 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %274, i64 0, i32 0
  store float %6, float* %275, align 4
  %276 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %274, i64 0, i32 1
  store float %7, float* %276, align 4
  %277 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %277 monotonic, align 1
  %278 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %278 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %268) #24
  br label %336

279:                                              ; preds = %261
  %280 = bitcast %"class.SkPathRef::Editor"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %280) #24
  %281 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %10, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %281, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %10, %class.sk_sp* %262, i32 0, i32 0) #24
  %282 = add nsw i32 %265, -1
  %283 = load %class.SkPathRef*, %class.SkPathRef** %281, align 8
  %284 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %283, i64 0, i32 11
  store i8 0, i8* %284, align 2
  %285 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %283, i64 0, i32 12
  store i8 0, i8* %285, align 1
  %286 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %283, i64 0, i32 3, i32 0
  %287 = load %struct.SkPoint*, %struct.SkPoint** %286, align 8
  %288 = sext i32 %282 to i64
  %289 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %287, i64 %288, i32 0
  store float %6, float* %289, align 4
  %290 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %287, i64 %288, i32 1
  store float %7, float* %290, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %280) #24
  br label %336

291:                                              ; preds = %328, %250
  %292 = phi i32 [ 0, %250 ], [ %334, %328 ]
  %293 = phi float [ %186, %250 ], [ %294, %328 ]
  %294 = fadd float %220, %293
  %295 = call float @sinf(float %294) #24
  %296 = call float @llvm.fabs.f32(float %295) #24
  %297 = fcmp ole float %296, 0x3F30000000000000
  %298 = select i1 %297, float 0.000000e+00, float %295
  %299 = call float @cosf(float %294) #24
  %300 = call float @llvm.fabs.f32(float %299) #24
  %301 = fcmp ole float %300, 0x3F30000000000000
  %302 = select i1 %301, float 0.000000e+00, float %299
  %303 = fadd float %259, %302
  store float %303, float* %149, align 8
  %304 = fadd float %260, %298
  store float %304, float* %150, align 4
  %305 = load i64, i64* %251, align 8
  %306 = fmul float %222, %298
  %307 = fmul float %222, %302
  %308 = trunc i64 %305 to i32
  %309 = bitcast i32 %308 to float
  %310 = fadd float %306, %309
  store float %310, float* %146, align 16
  %311 = lshr i64 %305, 32
  %312 = trunc i64 %311 to i32
  %313 = bitcast i32 %312 to float
  %314 = fsub float %313, %307
  store float %314, float* %147, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %252) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %258, i8 -1, i64 16, i1 false)
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* nonnull %15, %struct.SkPoint* nonnull %253, %struct.SkPoint* nonnull %145, i32 2) #24
  br i1 %248, label %320, label %315

315:                                              ; preds = %291
  %316 = load float, float* %254, align 16
  %317 = load float, float* %255, align 4
  %318 = load float, float* %256, align 8
  %319 = load float, float* %257, align 4
  br label %328

320:                                              ; preds = %291
  %321 = load <4 x float>, <4 x float>* %22, align 16
  %322 = fadd <4 x float> %321, <float 5.000000e-01, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>
  %323 = call <4 x float> @llvm.floor.v4f32(<4 x float> %322)
  store <4 x float> %323, <4 x float>* %22, align 16
  %324 = extractelement <4 x float> %323, i32 0
  %325 = extractelement <4 x float> %323, i32 1
  %326 = extractelement <4 x float> %323, i32 2
  %327 = extractelement <4 x float> %323, i32 3
  br label %328

328:                                              ; preds = %315, %320
  %329 = phi float [ %319, %315 ], [ %327, %320 ]
  %330 = phi float [ %318, %315 ], [ %326, %320 ]
  %331 = phi float [ %317, %315 ], [ %325, %320 ]
  %332 = phi float [ %316, %315 ], [ %324, %320 ]
  %333 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %332, float %331, float %330, float %329, float %230) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %252) #24
  %334 = add nuw nsw i32 %292, 1
  %335 = icmp eq i32 %334, %218
  br i1 %335, label %261, label %291

336:                                              ; preds = %208, %279, %267, %206
  %337 = phi %class.SkPath* [ %207, %206 ], [ %0, %208 ], [ %0, %267 ], [ %0, %279 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #24
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #24
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %110) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103) #24
  br label %338

338:                                              ; preds = %336, %97, %91
  %339 = phi %class.SkPath* [ %98, %97 ], [ %337, %336 ], [ %92, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #24
  ret %class.SkPath* %339
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #10

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setRotateEf(%class.SkMatrix*, float) local_unnamed_addr #1

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #9

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9preRotateEf(%class.SkMatrix*, float) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @atan2f(float, float) local_unnamed_addr #9

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8preScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

; Function Attrs: nofree nounwind
declare float @tanf(float) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath6rArcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath*, float, float, float, i32, i32, float, float) local_unnamed_addr #0 align 2 {
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %10 = load %class.SkPathRef*, %class.SkPathRef** %9, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 3, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %12, 0
  br i1 %13, label %14, label %23

14:                                               ; preds = %8
  %15 = add nsw i32 %12, -1
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 3, i32 0
  %17 = load %struct.SkPoint*, %struct.SkPoint** %16, align 8
  %18 = sext i32 %15 to i64
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %17, i64 %18, i32 0
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %17, i64 %18, i32 1
  %22 = load float, float* %21, align 4
  br label %23

23:                                               ; preds = %8, %14
  %24 = phi float [ %22, %14 ], [ 0.000000e+00, %8 ]
  %25 = phi float [ %20, %14 ], [ 0.000000e+00, %8 ]
  %26 = fadd float %25, %6
  %27 = fadd float %24, %7
  %28 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath* %0, float %1, float %2, float %3, i32 %4, i32 %5, float %26, float %27)
  ret %class.SkPath* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath6addArcERK6SkRectff(%class.SkPath*, %struct.SkRect* dereferenceable(16), float, float) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %8 = load float, float* %7, align 4
  %9 = fcmp olt float %6, %8
  br i1 %9, label %10, label %41

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %14 = load float, float* %13, align 4
  %15 = fcmp uge float %12, %14
  %16 = fcmp oeq float %3, 0.000000e+00
  %17 = or i1 %16, %15
  br i1 %17, label %41, label %18

18:                                               ; preds = %10
  %19 = fcmp oge float %3, 3.600000e+02
  %20 = fcmp ole float %3, -3.600000e+02
  %21 = or i1 %19, %20
  br i1 %21, label %22, label %39

22:                                               ; preds = %18
  %23 = fdiv float %2, 9.000000e+01
  %24 = fadd float %23, 5.000000e-01
  %25 = tail call float @llvm.floor.f32(float %24)
  %26 = fsub float %23, %25
  %27 = tail call float @llvm.fabs.f32(float %26) #24
  %28 = fcmp ugt float %27, 0x3F30000000000000
  br i1 %28, label %39, label %29

29:                                               ; preds = %22
  %30 = fadd float %25, 1.000000e+00
  %31 = tail call float @fmodf(float %30, float 4.000000e+00) #24
  %32 = fcmp olt float %31, 0.000000e+00
  %33 = fadd float %31, 4.000000e+00
  %34 = select i1 %32, float %33, float %31
  %35 = fcmp ule float %3, 0.000000e+00
  %36 = zext i1 %35 to i32
  %37 = fptoui float %34 to i32
  %38 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addOvalERK6SkRect15SkPathDirectionj(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, i32 %36, i32 %37)
  br label %41

39:                                               ; preds = %22, %18
  %40 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, float %2, float %3, i1 zeroext true)
  br label %41

41:                                               ; preds = %4, %29, %39, %10
  %42 = phi %class.SkPath* [ %0, %10 ], [ %40, %39 ], [ %38, %29 ], [ %0, %4 ]
  ret %class.SkPath* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffff(%class.SkPath*, float, float, float, float, float) local_unnamed_addr #5 align 2 {
  %7 = alloca %"class.SkPathRef::Editor", align 8
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %struct.SkPoint*
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %13, label %43

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %15 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %16 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 4, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %13
  %21 = xor i32 %11, -1
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 3, i32 0
  %23 = load %struct.SkPoint*, %struct.SkPoint** %22, align 8
  %24 = sext i32 %21 to i64
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %23, i64 %24, i32 0
  %26 = load float, float* %25, align 4
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %23, i64 %24, i32 1
  %28 = load float, float* %27, align 4
  br label %29

29:                                               ; preds = %20, %13
  %30 = phi float [ %28, %20 ], [ 0.000000e+00, %13 ]
  %31 = phi float [ %26, %20 ], [ 0.000000e+00, %13 ]
  %32 = bitcast %"class.SkPathRef::Editor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #24
  %33 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %7, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %33, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %7, %class.sk_sp* %14, i32 0, i32 0) #24
  %34 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %35 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %34, i64 0, i32 3, i32 2
  %36 = load i32, i32* %35, align 4
  store i32 %36, i32* %10, align 8
  %37 = load %class.SkPathRef*, %class.SkPathRef** %33, align 8
  %38 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %37, i32 0, float 0.000000e+00) #24
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %38, i64 0, i32 0
  store float %31, float* %39, align 4
  %40 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %38, i64 0, i32 1
  store float %30, float* %40, align 4
  %41 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %41 monotonic, align 1
  %42 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %42 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #24
  br label %43

43:                                               ; preds = %6, %29
  %44 = fcmp oeq float %5, 0.000000e+00
  br i1 %44, label %45, label %47

45:                                               ; preds = %43
  %46 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %1, float %2)
  br label %145

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %49 = load %class.SkPathRef*, %class.SkPathRef** %48, align 8
  %50 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %49, i64 0, i32 3, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %61

53:                                               ; preds = %47
  %54 = add nsw i32 %51, -1
  %55 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %49, i64 0, i32 3, i32 0
  %56 = load %struct.SkPoint*, %struct.SkPoint** %55, align 8
  %57 = sext i32 %54 to i64
  %58 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 %57, i32 0
  %59 = bitcast float* %58 to <2 x float>*
  %60 = load <2 x float>, <2 x float>* %59, align 4
  br label %61

61:                                               ; preds = %47, %53
  %62 = phi <2 x float> [ %60, %53 ], [ zeroinitializer, %47 ]
  %63 = insertelement <2 x float> undef, float %1, i32 0
  %64 = insertelement <2 x float> %63, float %2, i32 1
  %65 = fsub <2 x float> %64, %62
  %66 = fpext <2 x float> %65 to <2 x double>
  %67 = fmul <2 x double> %66, %66
  %68 = extractelement <2 x double> %67, i32 0
  %69 = extractelement <2 x double> %67, i32 1
  %70 = fadd double %68, %69
  %71 = call double @sqrt(double %70) #24
  %72 = fdiv double 1.000000e+00, %71
  %73 = insertelement <2 x double> undef, double %72, i32 0
  %74 = shufflevector <2 x double> %73, <2 x double> undef, <2 x i32> zeroinitializer
  %75 = fmul <2 x double> %74, %66
  %76 = insertelement <2 x float> undef, float %3, i32 0
  %77 = insertelement <2 x float> %76, float %4, i32 1
  %78 = fsub <2 x float> %77, %64
  %79 = fpext <2 x float> %78 to <2 x double>
  %80 = fmul <2 x double> %79, %79
  %81 = extractelement <2 x double> %80, i32 0
  %82 = extractelement <2 x double> %80, i32 1
  %83 = fadd double %81, %82
  %84 = call double @sqrt(double %83) #24
  %85 = fdiv double 1.000000e+00, %84
  %86 = insertelement <2 x double> undef, double %85, i32 0
  %87 = shufflevector <2 x double> %86, <2 x double> undef, <2 x i32> zeroinitializer
  %88 = fmul <2 x double> %87, %79
  %89 = extractelement <2 x double> %88, i32 0
  %90 = extractelement <2 x double> %75, i32 0
  %91 = fmul double %90, %89
  %92 = extractelement <2 x double> %88, i32 1
  %93 = extractelement <2 x double> %75, i32 1
  %94 = fmul double %93, %92
  %95 = fadd double %91, %94
  %96 = fmul double %90, %92
  %97 = fmul double %93, %89
  %98 = fsub double %96, %97
  %99 = call <2 x double> @llvm.fabs.v2f64(<2 x double> %75)
  %100 = fcmp ueq <2 x double> %99, <double 0x7FF0000000000000, double 0x7FF0000000000000>
  %101 = extractelement <2 x i1> %100, i32 0
  %102 = extractelement <2 x i1> %100, i32 1
  %103 = or i1 %102, %101
  %104 = call double @llvm.fabs.f64(double %89) #20
  %105 = fcmp ueq double %104, 0x7FF0000000000000
  %106 = or i1 %103, %105
  %107 = xor i1 %106, true
  %108 = call double @llvm.fabs.f64(double %92) #20
  %109 = fcmp one double %108, 0x7FF0000000000000
  %110 = and i1 %109, %107
  br i1 %110, label %111, label %115

111:                                              ; preds = %61
  %112 = fptrunc double %98 to float
  %113 = call float @llvm.fabs.f32(float %112) #24
  %114 = fcmp ugt float %113, 0x3F30000000000000
  br i1 %114, label %117, label %115

115:                                              ; preds = %111, %61
  %116 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %1, float %2)
  br label %145

117:                                              ; preds = %111
  %118 = fptrunc double %90 to float
  %119 = fptrunc double %93 to float
  %120 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #24
  %121 = getelementptr inbounds <2 x float>, <2 x float>* %8, i64 0, i64 0
  %122 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 1
  %123 = fptrunc <2 x double> %88 to <2 x float>
  store <2 x float> %123, <2 x float>* %8, align 8
  %124 = fpext float %5 to double
  %125 = fsub double 1.000000e+00, %95
  %126 = fmul double %125, %124
  %127 = fdiv double %126, %98
  %128 = fptrunc double %127 to float
  %129 = call float @llvm.fabs.f32(float %128)
  %130 = fmul float %129, %118
  %131 = fsub float %1, %130
  %132 = fmul float %129, %119
  %133 = fsub float %2, %132
  %134 = call zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* nonnull %9, float %129) #24
  %135 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %131, float %133)
  %136 = fmul double %95, 5.000000e-01
  %137 = fadd double %136, 5.000000e-01
  %138 = fptrunc double %137 to float
  %139 = call float @sqrtf(float %138) #24
  %140 = load float, float* %121, align 8
  %141 = fadd float %140, %1
  %142 = load float, float* %122, align 4
  %143 = fadd float %142, %2
  %144 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %1, float %2, float %141, float %143, float %139)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #24
  br label %145

145:                                              ; preds = %115, %117, %45
  %146 = phi %class.SkPath* [ %46, %45 ], [ %116, %115 ], [ %144, %117 ]
  ret %class.SkPath* %146
}

declare zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint*, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_ffNS_11AddPathModeE(%class.SkPath*, %class.SkPath* dereferenceable(16), float, float, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkMatrix, align 16
  %7 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #24
  %8 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %9 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %9, align 16
  %10 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %11 = bitcast float* %10 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %11, align 16
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %12, align 16
  store i32 16, i32* %8, align 4
  %13 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %6, float %2, float %3) #24
  %14 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath* %0, %class.SkPath* dereferenceable(16) %1, %class.SkMatrix* nonnull dereferenceable(40) %6, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #24
  ret %class.SkPath* %14
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath7addPathERKS_RK8SkMatrixNS_11AddPathModeE(%class.SkPath*, %class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkPathRef::Editor", align 8
  %6 = alloca %"class.SkPathRef::Editor", align 8
  %7 = alloca %"class.SkPathRef::Editor", align 8
  %8 = alloca %class.SkTLazy, align 8
  %9 = alloca %"class.SkPathRef::Editor", align 8
  %10 = alloca [3 x %struct.SkPoint], align 16
  %11 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %12 = load %class.SkPathRef*, %class.SkPathRef** %11, align 8
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 4, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %337, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %8, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #24
  %18 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  store %class.SkPath* null, %class.SkPath** %18, align 8
  %19 = icmp eq %class.SkPath* %0, %1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  %21 = call %class.SkPath* @_ZN7SkTLazyI6SkPathE3setERKS0_(%class.SkTLazy* nonnull %8, %class.SkPath* dereferenceable(16) %1)
  br label %22

22:                                               ; preds = %20, %16
  %23 = phi %class.SkPath* [ %21, %20 ], [ %1, %16 ]
  %24 = icmp eq i32 %3, 0
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %94

27:                                               ; preds = %22
  %28 = and i32 %26, 192
  %29 = icmp eq i32 %28, 128
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %2) #24
  %32 = zext i8 %31 to i32
  store i32 %32, i32* %25, align 4
  br label %33

33:                                               ; preds = %27, %30
  %34 = phi i32 [ %32, %30 ], [ %26, %27 ]
  %35 = and i32 %34, 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %94

37:                                               ; preds = %33
  %38 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %39 = load %class.SkPathRef*, %class.SkPathRef** %38, align 8
  %40 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %39, i64 0, i32 3, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %class.SkPath, %class.SkPath* %23, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = add nsw i32 %43, %41
  %45 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 %44, i32* %45, align 8
  %46 = bitcast %"class.SkPathRef::Editor"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #24
  %47 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %9, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %47, align 8
  %48 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %9, %class.sk_sp* %48, i32 0, i32 0) #24
  %49 = getelementptr inbounds %class.SkPath, %class.SkPath* %23, i64 0, i32 0, i32 0
  %50 = load %class.SkPathRef*, %class.SkPathRef** %49, align 8
  %51 = load %class.SkPathRef*, %class.SkPathRef** %47, align 8
  %52 = call { %struct.SkPoint*, float* } @_ZN9SkPathRef18growForVerbsInPathERKS_(%class.SkPathRef* %51, %class.SkPathRef* dereferenceable(120) %50) #24
  %53 = extractvalue { %struct.SkPoint*, float* } %52, 0
  %54 = load %class.SkPathRef*, %class.SkPathRef** %49, align 8
  %55 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %54, i64 0, i32 3, i32 0
  %56 = load %struct.SkPoint*, %struct.SkPoint** %55, align 8
  %57 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %54, i64 0, i32 3, i32 2
  %58 = load i32, i32* %57, align 4
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* %53, %struct.SkPoint* %56, i32 %58) #24
  %59 = load %class.SkPathRef*, %class.SkPathRef** %49, align 8
  %60 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %59, i64 0, i32 5, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %37
  %64 = extractvalue { %struct.SkPoint*, float* } %52, 1
  %65 = bitcast float* %64 to i8*
  %66 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %59, i64 0, i32 5, i32 0
  %67 = bitcast float** %66 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = sext i32 %61 to i64
  %70 = shl nsw i64 %69, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %68, i64 %70, i1 false)
  br label %71

71:                                               ; preds = %37, %63
  %72 = load %class.SkPathRef*, %class.SkPathRef** %38, align 8
  %73 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %72, i64 0, i32 4, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = icmp eq i8* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %72, i64 0, i32 4, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %74, i64 %79
  br label %81

81:                                               ; preds = %71, %76
  %82 = phi i8* [ %80, %76 ], [ null, %71 ]
  %83 = getelementptr inbounds i8, i8* %82, i64 -1
  %84 = load i8, i8* %83, align 1
  %85 = icmp eq i8 %84, 5
  br i1 %85, label %86, label %91

86:                                               ; preds = %81
  %87 = load i32, i32* %45, align 8
  %88 = ashr i32 %87, 31
  %89 = xor i32 %87, -1
  %90 = xor i32 %88, %89
  store i32 %90, i32* %45, align 8
  br label %91

91:                                               ; preds = %86, %81
  %92 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %92 monotonic, align 1
  %93 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %93 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #24
  br label %322

94:                                               ; preds = %22, %33
  %95 = phi i32 [ %34, %33 ], [ %26, %22 ]
  %96 = trunc i32 %95 to i8
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %94
  %99 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %100 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #24
  %101 = zext i8 %100 to i32
  store i32 %101, i32* %99, align 4
  br label %102

102:                                              ; preds = %94, %98
  %103 = phi i32 [ %101, %98 ], [ %95, %94 ]
  %104 = and i32 %103, 15
  %105 = zext i32 %104 to i64
  %106 = getelementptr inbounds [0 x void (%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32)*], [0 x void (%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32)*]* @_ZN8SkMatrix12gMapPtsProcsE, i64 0, i64 %105
  %107 = load void (%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32)*, void (%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32)** %106, align 8
  %108 = getelementptr inbounds %class.SkPath, %class.SkPath* %23, i64 0, i32 0, i32 0
  %109 = load %class.SkPathRef*, %class.SkPathRef** %108, align 8
  %110 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %109, i64 0, i32 4, i32 0
  %111 = bitcast i8** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %109, i64 0, i32 9
  %114 = load i8, i8* %113, align 8
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %120

116:                                              ; preds = %102
  %117 = inttoptr i64 %112 to i8*
  %118 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %109, i64 0, i32 10
  %119 = load i8, i8* %118, align 1, !range !2
  br label %132

120:                                              ; preds = %102
  %121 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %109, i64 0, i32 1
  %122 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %109, i64 0, i32 3, i32 0
  %123 = load %struct.SkPoint*, %struct.SkPoint** %122, align 8
  %124 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %109, i64 0, i32 3, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %121, %struct.SkPoint* %123, i32 %125) #24
  %127 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %109, i64 0, i32 10
  %128 = zext i1 %126 to i8
  store i8 %128, i8* %127, align 1
  store i8 0, i8* %113, align 8
  %129 = load %class.SkPathRef*, %class.SkPathRef** %108, align 8
  %130 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %129, i64 0, i32 4, i32 0
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %120, %116
  %133 = phi i8* [ %117, %116 ], [ %131, %120 ]
  %134 = phi %class.SkPathRef* [ %109, %116 ], [ %129, %120 ]
  %135 = phi i8 [ %119, %116 ], [ %128, %120 ]
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %144, label %137

137:                                              ; preds = %132
  %138 = icmp eq i8* %133, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %134, i64 0, i32 4, i32 2
  %141 = load i32, i32* %140, align 4
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds i8, i8* %133, i64 %142
  br label %144

144:                                              ; preds = %132, %137, %139
  %145 = phi i8* [ %143, %139 ], [ null, %137 ], [ %133, %132 ]
  %146 = inttoptr i64 %112 to i8*
  %147 = icmp eq i8* %145, %146
  br i1 %147, label %322, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %134, i64 0, i32 5, i32 0
  %150 = bitcast float** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %134, i64 0, i32 3, i32 0
  %153 = bitcast %struct.SkPoint** %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %156 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %157 = bitcast %"class.SkPathRef::Editor"* %7 to i8*
  %158 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %7, i64 0, i32 0
  %159 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %160 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %10, i64 0, i64 0
  %161 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %10, i64 0, i64 0, i32 0
  %162 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %10, i64 0, i64 0, i32 1
  %163 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %10, i64 0, i64 1, i32 0
  %164 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %10, i64 0, i64 1, i32 1
  %165 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %10, i64 0, i64 2, i32 0
  %166 = getelementptr inbounds [3 x %struct.SkPoint], [3 x %struct.SkPoint]* %10, i64 0, i64 2, i32 1
  %167 = bitcast %"class.SkPathRef::Editor"* %5 to i8*
  %168 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %5, i64 0, i32 0
  %169 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = bitcast [3 x %struct.SkPoint]* %10 to i32*
  %172 = bitcast float* %162 to i32*
  %173 = bitcast %"class.SkPathRef::Editor"* %6 to i8*
  %174 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %6, i64 0, i32 0
  br label %175

175:                                              ; preds = %148, %317
  %176 = phi i8* [ %146, %148 ], [ %303, %317 ]
  %177 = phi i1 [ true, %148 ], [ false, %317 ]
  %178 = phi i64 [ %151, %148 ], [ %319, %317 ]
  %179 = phi i64 [ %154, %148 ], [ %320, %317 ]
  %180 = load i8, i8* %176, align 1, !noalias !11
  switch i8 %180, label %181 [
    i8 0, label %182
    i8 1, label %249
    i8 2, label %254
    i8 3, label %261
    i8 4, label %270
    i8 5, label %279
  ]

181:                                              ; preds = %175
  call void @llvm.trap() #24, !noalias !11
  unreachable

182:                                              ; preds = %175
  %183 = inttoptr i64 %179 to %struct.SkPoint*
  call void %107(%class.SkMatrix* dereferenceable(40) %2, %struct.SkPoint* nonnull %160, %struct.SkPoint* %183, i32 1) #24
  br i1 %177, label %184, label %238

184:                                              ; preds = %182
  %185 = load %class.SkPathRef*, %class.SkPathRef** %156, align 8
  %186 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %185, i64 0, i32 4, i32 2
  %187 = load i32, i32* %186, align 4
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %238, label %189

189:                                              ; preds = %184
  %190 = load i32, i32* %159, align 8
  %191 = icmp slt i32 %190, 0
  br i1 %191, label %192, label %215

192:                                              ; preds = %189
  %193 = xor i32 %190, -1
  %194 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %185, i64 0, i32 3, i32 0
  %195 = load %struct.SkPoint*, %struct.SkPoint** %194, align 8
  %196 = sext i32 %193 to i64
  %197 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %195, i64 %196, i32 0
  %198 = bitcast float* %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %195, i64 %196, i32 1
  %201 = bitcast float* %200 to i32*
  %202 = load i32, i32* %201, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #24
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %168, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %5, %class.sk_sp* %155, i32 0, i32 0) #24
  %203 = load %class.SkPathRef*, %class.SkPathRef** %156, align 8
  %204 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %203, i64 0, i32 3, i32 2
  %205 = load i32, i32* %204, align 4
  store i32 %205, i32* %159, align 8
  %206 = load %class.SkPathRef*, %class.SkPathRef** %168, align 8
  %207 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %206, i32 0, float 0.000000e+00) #24
  %208 = bitcast %struct.SkPoint* %207 to i32*
  store i32 %199, i32* %208, align 4
  %209 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %207, i64 0, i32 1
  %210 = bitcast float* %209 to i32*
  store i32 %202, i32* %210, align 4
  store atomic i8 2, i8* %169 monotonic, align 1
  store atomic i8 2, i8* %170 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #24
  %211 = load i32, i32* %159, align 8
  %212 = icmp slt i32 %211, 0
  br i1 %212, label %234, label %213

213:                                              ; preds = %192
  %214 = load %class.SkPathRef*, %class.SkPathRef** %156, align 8
  br label %215

215:                                              ; preds = %213, %189
  %216 = phi %class.SkPathRef* [ %214, %213 ], [ %185, %189 ]
  %217 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %216, i64 0, i32 3, i32 2
  %218 = load i32, i32* %217, align 4
  %219 = icmp sgt i32 %218, 0
  br i1 %219, label %220, label %234

220:                                              ; preds = %215
  %221 = add nsw i32 %218, -1
  %222 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %216, i64 0, i32 3, i32 0
  %223 = load %struct.SkPoint*, %struct.SkPoint** %222, align 8
  %224 = sext i32 %221 to i64
  %225 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %223, i64 %224, i32 0
  %226 = load float, float* %225, align 4
  %227 = load float, float* %161, align 16
  %228 = fcmp une float %226, %227
  br i1 %228, label %234, label %229

229:                                              ; preds = %220
  %230 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %223, i64 %224, i32 1
  %231 = load float, float* %230, align 4
  %232 = load float, float* %162, align 4
  %233 = fcmp une float %231, %232
  br i1 %233, label %234, label %301

234:                                              ; preds = %220, %215, %229, %192
  %235 = load float, float* %161, align 16
  %236 = load float, float* %162, align 4
  %237 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %235, float %236) #24
  br label %301

238:                                              ; preds = %184, %182
  %239 = load i32, i32* %171, align 16
  %240 = load i32, i32* %172, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #24
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %174, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %6, %class.sk_sp* %155, i32 0, i32 0) #24
  %241 = load %class.SkPathRef*, %class.SkPathRef** %156, align 8
  %242 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %241, i64 0, i32 3, i32 2
  %243 = load i32, i32* %242, align 4
  store i32 %243, i32* %159, align 8
  %244 = load %class.SkPathRef*, %class.SkPathRef** %174, align 8
  %245 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %244, i32 0, float 0.000000e+00) #24
  %246 = bitcast %struct.SkPoint* %245 to i32*
  store i32 %239, i32* %246, align 4
  %247 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %245, i64 0, i32 1
  %248 = bitcast float* %247 to i32*
  store i32 %240, i32* %248, align 4
  store atomic i8 2, i8* %169 monotonic, align 1
  store atomic i8 2, i8* %170 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #24
  br label %301

249:                                              ; preds = %175
  %250 = inttoptr i64 %179 to %struct.SkPoint*
  call void %107(%class.SkMatrix* dereferenceable(40) %2, %struct.SkPoint* nonnull %160, %struct.SkPoint* %250, i32 1) #24
  %251 = load float, float* %161, align 16
  %252 = load float, float* %162, align 4
  %253 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %251, float %252) #24
  br label %301

254:                                              ; preds = %175
  %255 = inttoptr i64 %179 to %struct.SkPoint*
  call void %107(%class.SkMatrix* dereferenceable(40) %2, %struct.SkPoint* nonnull %160, %struct.SkPoint* %255, i32 2) #24
  %256 = load float, float* %161, align 16
  %257 = load float, float* %162, align 4
  %258 = load float, float* %163, align 8
  %259 = load float, float* %164, align 4
  %260 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %0, float %256, float %257, float %258, float %259) #24
  br label %301

261:                                              ; preds = %175
  %262 = inttoptr i64 %179 to %struct.SkPoint*
  call void %107(%class.SkMatrix* dereferenceable(40) %2, %struct.SkPoint* nonnull %160, %struct.SkPoint* %262, i32 2) #24
  %263 = inttoptr i64 %178 to float*
  %264 = load float, float* %263, align 4
  %265 = load float, float* %161, align 16
  %266 = load float, float* %162, align 4
  %267 = load float, float* %163, align 8
  %268 = load float, float* %164, align 4
  %269 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %265, float %266, float %267, float %268, float %264) #24
  br label %301

270:                                              ; preds = %175
  %271 = inttoptr i64 %179 to %struct.SkPoint*
  call void %107(%class.SkMatrix* dereferenceable(40) %2, %struct.SkPoint* nonnull %160, %struct.SkPoint* %271, i32 3) #24
  %272 = load float, float* %161, align 16
  %273 = load float, float* %162, align 4
  %274 = load float, float* %163, align 8
  %275 = load float, float* %164, align 4
  %276 = load float, float* %165, align 16
  %277 = load float, float* %166, align 4
  %278 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %0, float %272, float %273, float %274, float %275, float %276, float %277) #24
  br label %301

279:                                              ; preds = %175
  %280 = inttoptr i64 %179 to %struct.SkPoint*
  %281 = load %class.SkPathRef*, %class.SkPathRef** %156, align 8
  %282 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %281, i64 0, i32 4, i32 2
  %283 = load i32, i32* %282, align 4
  %284 = icmp sgt i32 %283, 0
  br i1 %284, label %285, label %296

285:                                              ; preds = %279
  %286 = add nsw i32 %283, -1
  %287 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %281, i64 0, i32 4, i32 0
  %288 = load i8*, i8** %287, align 8
  %289 = sext i32 %286 to i64
  %290 = getelementptr inbounds i8, i8* %288, i64 %289
  %291 = load i8, i8* %290, align 1
  %292 = icmp ult i8 %291, 5
  br i1 %292, label %293, label %296

293:                                              ; preds = %285
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #24
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %158, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %7, %class.sk_sp* %155, i32 0, i32 0) #24
  %294 = load %class.SkPathRef*, %class.SkPathRef** %158, align 8
  %295 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %294, i32 5, float 0.000000e+00) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #24
  br label %296

296:                                              ; preds = %279, %285, %293
  %297 = load i32, i32* %159, align 8
  %298 = ashr i32 %297, 31
  %299 = xor i32 %297, -1
  %300 = xor i32 %298, %299
  store i32 %300, i32* %159, align 8
  br label %301

301:                                              ; preds = %229, %234, %238, %296, %270, %261, %254, %249
  %302 = phi %struct.SkPoint* [ %183, %238 ], [ %280, %296 ], [ %271, %270 ], [ %262, %261 ], [ %255, %254 ], [ %250, %249 ], [ %183, %234 ], [ %183, %229 ]
  %303 = getelementptr inbounds i8, i8* %176, i64 1
  %304 = load i8, i8* %176, align 1
  switch i8 %304, label %308 [
    i8 0, label %309
    i8 1, label %309
    i8 2, label %305
    i8 3, label %312
    i8 4, label %306
    i8 5, label %307
  ]

305:                                              ; preds = %301
  br label %309

306:                                              ; preds = %301
  br label %309

307:                                              ; preds = %301
  br label %309

308:                                              ; preds = %301
  call void @llvm.trap() #24
  unreachable

309:                                              ; preds = %307, %306, %305, %301, %301
  %310 = phi i64 [ 1, %301 ], [ 1, %301 ], [ 2, %305 ], [ 3, %306 ], [ 0, %307 ]
  %311 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %302, i64 %310
  br label %317

312:                                              ; preds = %301
  %313 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %302, i64 2
  %314 = inttoptr i64 %178 to float*
  %315 = getelementptr inbounds float, float* %314, i64 1
  %316 = ptrtoint float* %315 to i64
  br label %317

317:                                              ; preds = %309, %312
  %318 = phi %struct.SkPoint* [ %311, %309 ], [ %313, %312 ]
  %319 = phi i64 [ %178, %309 ], [ %316, %312 ]
  %320 = ptrtoint %struct.SkPoint* %318 to i64
  %321 = icmp eq i8* %145, %303
  br i1 %321, label %322, label %175

322:                                              ; preds = %317, %144, %91
  %323 = load %class.SkPath*, %class.SkPath** %18, align 8
  %324 = icmp eq %class.SkPath* %323, null
  br i1 %324, label %336, label %325

325:                                              ; preds = %322
  %326 = getelementptr inbounds %class.SkPath, %class.SkPath* %323, i64 0, i32 0, i32 0
  %327 = load %class.SkPathRef*, %class.SkPathRef** %326, align 8
  %328 = icmp eq %class.SkPathRef* %327, null
  br i1 %328, label %335, label %329

329:                                              ; preds = %325
  %330 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %327, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = atomicrmw add i32* %330, i32 -1 acq_rel
  %332 = icmp eq i32 %331, 1
  br i1 %332, label %333, label %335

333:                                              ; preds = %329
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %327) #24
  %334 = bitcast %class.SkPathRef* %327 to i8*
  call void @_ZdlPv(i8* %334) #25
  br label %335

335:                                              ; preds = %333, %329, %325
  store %class.SkPath* null, %class.SkPath** %18, align 8
  br label %336

336:                                              ; preds = %322, %335
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #24
  br label %337

337:                                              ; preds = %4, %336
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkPath* @_ZN7SkTLazyI6SkPathE3setERKS0_(%class.SkTLazy*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %0, i64 0, i32 1
  %4 = load %class.SkPath*, %class.SkPath** %3, align 8
  %5 = icmp eq %class.SkPath* %4, null
  br i1 %5, label %44, label %6

6:                                                ; preds = %2
  %7 = icmp eq %class.SkPath* %4, %1
  br i1 %7, label %73, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %10 = load %class.SkPathRef*, %class.SkPathRef** %9, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %4, i64 0, i32 0, i32 0
  %14 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  store %class.SkPathRef* %10, %class.SkPathRef** %13, align 8
  %15 = icmp eq %class.SkPathRef* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %8
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %16
  tail call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %14) #24
  %21 = bitcast %class.SkPathRef* %14 to i8*
  tail call void @_ZdlPv(i8* %21) #25
  br label %22

22:                                               ; preds = %20, %16, %8
  %23 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = getelementptr inbounds %class.SkPath, %class.SkPath* %4, i64 0, i32 1
  store i32 %24, i32* %25, align 8
  %26 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %27 = load i8, i8* %26, align 2
  %28 = and i8 %27, 3
  %29 = getelementptr inbounds %class.SkPath, %class.SkPath* %4, i64 0, i32 4
  %30 = load i8, i8* %29, align 2
  %31 = and i8 %30, -4
  %32 = or i8 %31, %28
  store i8 %32, i8* %29, align 2
  %33 = load i8, i8* %26, align 2
  %34 = and i8 %33, 4
  %35 = and i8 %32, -5
  %36 = or i8 %35, %34
  store i8 %36, i8* %29, align 2
  %37 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i8, i8* %37 monotonic, align 1
  %39 = getelementptr inbounds %class.SkPath, %class.SkPath* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %38, i8* %39 monotonic, align 1
  %40 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i8, i8* %40 monotonic, align 1
  %42 = getelementptr inbounds %class.SkPath, %class.SkPath* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %41, i8* %42 monotonic, align 1
  %43 = load %class.SkPath*, %class.SkPath** %3, align 8
  br label %73

44:                                               ; preds = %2
  %45 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %46 = load %class.SkPathRef*, %class.SkPathRef** %45, align 8
  %47 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic
  %49 = bitcast %class.SkTLazy* %0 to %class.SkPathRef**
  store %class.SkPathRef* %46, %class.SkPathRef** %49, align 8
  %50 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %0, i64 0, i32 0, i64 8
  %53 = bitcast i8* %52 to i32*
  store i32 %51, i32* %53, align 8
  %54 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %55 = load i8, i8* %54, align 2
  %56 = and i8 %55, 3
  %57 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %0, i64 0, i32 0, i64 14
  %58 = load i8, i8* %57, align 2
  %59 = and i8 %58, -4
  %60 = or i8 %59, %56
  store i8 %60, i8* %57, align 2
  %61 = load i8, i8* %54, align 2
  %62 = and i8 %61, 4
  %63 = and i8 %60, -5
  %64 = or i8 %63, %62
  store i8 %64, i8* %57, align 2
  %65 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i8, i8* %65 monotonic, align 1
  %67 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %0, i64 0, i32 0, i64 12
  store atomic i8 %66, i8* %67 monotonic, align 1
  %68 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i8, i8* %68 monotonic, align 1
  %70 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %0, i64 0, i32 0, i64 13
  store atomic i8 %69, i8* %70 monotonic, align 1
  %71 = bitcast %class.SkPath** %3 to %class.SkTLazy**
  store %class.SkTLazy* %0, %class.SkTLazy** %71, align 8
  %72 = bitcast %class.SkTLazy* %0 to %class.SkPath*
  br label %73

73:                                               ; preds = %22, %6, %44
  %74 = phi %class.SkPath* [ %43, %22 ], [ %1, %6 ], [ %72, %44 ]
  ret %class.SkPath* %74
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath13reversePathToERKS_(%class.SkPath*, %class.SkPath* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 4, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %94, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 4, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  %12 = sext i32 %6 to i64
  %13 = getelementptr inbounds i8, i8* %10, i64 %12
  %14 = select i1 %11, i8* null, i8* %13
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 0
  %16 = load %struct.SkPoint*, %struct.SkPoint** %15, align 8
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %16, i64 %19
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %20, i64 -1
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 5, i32 0
  %23 = load float*, float** %22, align 8
  %24 = icmp eq float* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %8
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 5, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds float, float* %23, i64 %28
  br label %30

30:                                               ; preds = %8, %25
  %31 = phi float* [ %29, %25 ], [ null, %8 ]
  %32 = icmp ugt i8* %14, %10
  br i1 %32, label %33, label %94

33:                                               ; preds = %30, %91
  %34 = phi float* [ %92, %91 ], [ %31, %30 ]
  %35 = phi %struct.SkPoint* [ %44, %91 ], [ %21, %30 ]
  %36 = phi i8* [ %37, %91 ], [ %14, %30 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 -1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i64
  %40 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZZN10SkPathPriv9PtsInVerbEjE10gPtsInVerb, i64 0, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i64
  %43 = sub nsw i64 0, %42
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 %43
  switch i8 %38, label %91 [
    i8 0, label %94
    i8 1, label %45
    i8 2, label %51
    i8 3, label %62
    i8 4, label %75
  ]

45:                                               ; preds = %33
  %46 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 0, i32 0
  %47 = load float, float* %46, align 4
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 %43, i32 1
  %49 = load float, float* %48, align 4
  %50 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %47, float %49) #24
  br label %91

51:                                               ; preds = %33
  %52 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 1
  %53 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 0, i32 0
  %54 = load float, float* %53, align 4
  %55 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %52, i64 0, i32 1
  %56 = load float, float* %55, align 4
  %57 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 0, i32 0
  %58 = load float, float* %57, align 4
  %59 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 %43, i32 1
  %60 = load float, float* %59, align 4
  %61 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %0, float %54, float %56, float %58, float %60) #24
  br label %91

62:                                               ; preds = %33
  %63 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 1
  %64 = getelementptr inbounds float, float* %34, i64 -1
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %63, i64 0, i32 0
  %67 = load float, float* %66, align 4
  %68 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %63, i64 0, i32 1
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 0, i32 0
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 %43, i32 1
  %73 = load float, float* %72, align 4
  %74 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %67, float %69, float %71, float %73, float %65) #24
  br label %91

75:                                               ; preds = %33
  %76 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 2
  %77 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 1
  %78 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %76, i64 0, i32 0
  %79 = load float, float* %78, align 4
  %80 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %76, i64 0, i32 1
  %81 = load float, float* %80, align 4
  %82 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %77, i64 0, i32 0
  %83 = load float, float* %82, align 4
  %84 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %77, i64 0, i32 1
  %85 = load float, float* %84, align 4
  %86 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 %43, i32 1
  %89 = load float, float* %88, align 4
  %90 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %0, float %79, float %81, float %83, float %85, float %87, float %89) #24
  br label %91

91:                                               ; preds = %45, %51, %62, %75, %33
  %92 = phi float* [ %34, %33 ], [ %34, %75 ], [ %64, %62 ], [ %34, %51 ], [ %34, %45 ]
  %93 = icmp ugt i8* %37, %10
  br i1 %93, label %33, label %94

94:                                               ; preds = %91, %33, %30, %2
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %class.SkPath* @_ZN6SkPath14reverseAddPathERKS_(%class.SkPath* returned, %class.SkPath* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.SkPathRef::Editor", align 8
  %4 = alloca %"class.SkPathRef::Editor", align 8
  %5 = alloca %class.SkTLazy, align 8
  %6 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #24
  %7 = getelementptr inbounds %class.SkTLazy, %class.SkTLazy* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  store %class.SkPath* null, %class.SkPath** %7, align 8
  %8 = icmp eq %class.SkPath* %0, %1
  br i1 %8, label %9, label %11

9:                                                ; preds = %2
  %10 = call %class.SkPath* @_ZN7SkTLazyI6SkPathE3setERKS0_(%class.SkTLazy* nonnull %5, %class.SkPath* dereferenceable(16) %0)
  br label %11

11:                                               ; preds = %9, %2
  %12 = phi %class.SkPath* [ %10, %9 ], [ %1, %2 ]
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 0, i32 0
  %14 = load %class.SkPathRef*, %class.SkPathRef** %13, align 8
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 4, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 4, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %16, i64 %21
  br label %23

23:                                               ; preds = %11, %18
  %24 = phi i8* [ %22, %18 ], [ null, %11 ]
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 3, i32 0
  %26 = load %struct.SkPoint*, %struct.SkPoint** %25, align 8
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 3, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 %29
  %31 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 5, i32 0
  %32 = load float*, float** %31, align 8
  %33 = icmp eq float* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %23
  %35 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 5, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds float, float* %32, i64 %37
  br label %39

39:                                               ; preds = %23, %34
  %40 = phi float* [ %38, %34 ], [ null, %23 ]
  %41 = icmp ugt i8* %24, %16
  br i1 %41, label %42, label %166

42:                                               ; preds = %39
  %43 = bitcast %"class.SkPathRef::Editor"* %3 to i8*
  %44 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %3, i64 0, i32 0
  %45 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %46 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %48 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.SkPathRef::Editor"* %4 to i8*
  %51 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %4, i64 0, i32 0
  br label %52

52:                                               ; preds = %42, %160
  %53 = phi i8 [ 0, %42 ], [ %164, %160 ]
  %54 = phi i8 [ 1, %42 ], [ %163, %160 ]
  %55 = phi float* [ %40, %42 ], [ %162, %160 ]
  %56 = phi %struct.SkPoint* [ %30, %42 ], [ %161, %160 ]
  %57 = phi i8* [ %24, %42 ], [ %58, %160 ]
  %58 = getelementptr inbounds i8, i8* %57, i64 -1
  %59 = load i8, i8* %58, align 1
  %60 = zext i8 %59 to i64
  %61 = getelementptr inbounds [7 x i8], [7 x i8]* @_ZZN10SkPathPriv9PtsInVerbEjE10gPtsInVerb, i64 0, i64 %60
  %62 = load i8, i8* %61, align 1
  %63 = and i8 %54, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %80, label %65

65:                                               ; preds = %52
  %66 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 -1
  %67 = bitcast %struct.SkPoint* %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 -1, i32 1
  %70 = bitcast float* %69 to i32*
  %71 = load i32, i32* %70, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #24
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %44, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %3, %class.sk_sp* %45, i32 0, i32 0) #24
  %72 = load %class.SkPathRef*, %class.SkPathRef** %46, align 8
  %73 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %72, i64 0, i32 3, i32 2
  %74 = load i32, i32* %73, align 4
  store i32 %74, i32* %47, align 8
  %75 = load %class.SkPathRef*, %class.SkPathRef** %44, align 8
  %76 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %75, i32 0, float 0.000000e+00) #24
  %77 = bitcast %struct.SkPoint* %76 to i32*
  store i32 %68, i32* %77, align 4
  %78 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %76, i64 0, i32 1
  %79 = bitcast float* %78 to i32*
  store i32 %71, i32* %79, align 4
  store atomic i8 2, i8* %48 monotonic, align 1
  store atomic i8 2, i8* %49 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #24
  br label %80

80:                                               ; preds = %52, %65
  %81 = phi %struct.SkPoint* [ %66, %65 ], [ %56, %52 ]
  %82 = phi i8 [ 0, %65 ], [ %54, %52 ]
  %83 = zext i8 %62 to i64
  %84 = sub nsw i64 0, %83
  %85 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %81, i64 %84
  switch i8 %59, label %160 [
    i8 0, label %86
    i8 1, label %113
    i8 2, label %119
    i8 3, label %130
    i8 4, label %143
    i8 5, label %159
  ]

86:                                               ; preds = %80
  %87 = and i8 %53, 1
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %110, label %89

89:                                               ; preds = %86
  %90 = load %class.SkPathRef*, %class.SkPathRef** %46, align 8
  %91 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %90, i64 0, i32 4, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp sgt i32 %92, 0
  br i1 %93, label %94, label %105

94:                                               ; preds = %89
  %95 = add nsw i32 %92, -1
  %96 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %90, i64 0, i32 4, i32 0
  %97 = load i8*, i8** %96, align 8
  %98 = sext i32 %95 to i64
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = icmp ult i8 %100, 5
  br i1 %101, label %102, label %105

102:                                              ; preds = %94
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #24
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %51, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %4, %class.sk_sp* %45, i32 0, i32 0) #24
  %103 = load %class.SkPathRef*, %class.SkPathRef** %51, align 8
  %104 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %103, i32 5, float 0.000000e+00) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #24
  br label %105

105:                                              ; preds = %89, %94, %102
  %106 = load i32, i32* %47, align 8
  %107 = ashr i32 %106, 31
  %108 = xor i32 %106, -1
  %109 = xor i32 %107, %108
  store i32 %109, i32* %47, align 8
  br label %110

110:                                              ; preds = %86, %105
  %111 = phi i8 [ 0, %105 ], [ %53, %86 ]
  %112 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %85, i64 1
  br label %160

113:                                              ; preds = %80
  %114 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %85, i64 0, i32 0
  %115 = load float, float* %114, align 4
  %116 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %81, i64 %84, i32 1
  %117 = load float, float* %116, align 4
  %118 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %115, float %117) #24
  br label %160

119:                                              ; preds = %80
  %120 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %85, i64 1
  %121 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %120, i64 0, i32 0
  %122 = load float, float* %121, align 4
  %123 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %120, i64 0, i32 1
  %124 = load float, float* %123, align 4
  %125 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %85, i64 0, i32 0
  %126 = load float, float* %125, align 4
  %127 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %81, i64 %84, i32 1
  %128 = load float, float* %127, align 4
  %129 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %0, float %122, float %124, float %126, float %128) #24
  br label %160

130:                                              ; preds = %80
  %131 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %85, i64 1
  %132 = getelementptr inbounds float, float* %55, i64 -1
  %133 = load float, float* %132, align 4
  %134 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %131, i64 0, i32 0
  %135 = load float, float* %134, align 4
  %136 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %131, i64 0, i32 1
  %137 = load float, float* %136, align 4
  %138 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %85, i64 0, i32 0
  %139 = load float, float* %138, align 4
  %140 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %81, i64 %84, i32 1
  %141 = load float, float* %140, align 4
  %142 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %135, float %137, float %139, float %141, float %133) #24
  br label %160

143:                                              ; preds = %80
  %144 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %85, i64 2
  %145 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %85, i64 1
  %146 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %144, i64 0, i32 0
  %147 = load float, float* %146, align 4
  %148 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %144, i64 0, i32 1
  %149 = load float, float* %148, align 4
  %150 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %145, i64 0, i32 0
  %151 = load float, float* %150, align 4
  %152 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %145, i64 0, i32 1
  %153 = load float, float* %152, align 4
  %154 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %85, i64 0, i32 0
  %155 = load float, float* %154, align 4
  %156 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %81, i64 %84, i32 1
  %157 = load float, float* %156, align 4
  %158 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %0, float %147, float %149, float %151, float %153, float %155, float %157) #24
  br label %160

159:                                              ; preds = %80
  br label %160

160:                                              ; preds = %80, %159, %143, %130, %119, %113, %110
  %161 = phi %struct.SkPoint* [ %85, %80 ], [ %85, %159 ], [ %85, %143 ], [ %85, %130 ], [ %85, %119 ], [ %85, %113 ], [ %112, %110 ]
  %162 = phi float* [ %55, %80 ], [ %55, %159 ], [ %55, %143 ], [ %132, %130 ], [ %55, %119 ], [ %55, %113 ], [ %55, %110 ]
  %163 = phi i8 [ %82, %80 ], [ %82, %159 ], [ %82, %143 ], [ %82, %130 ], [ %82, %119 ], [ %82, %113 ], [ 1, %110 ]
  %164 = phi i8 [ %53, %80 ], [ 1, %159 ], [ %53, %143 ], [ %53, %130 ], [ %53, %119 ], [ %53, %113 ], [ %111, %110 ]
  %165 = icmp ugt i8* %58, %16
  br i1 %165, label %52, label %166

166:                                              ; preds = %160, %39
  %167 = load %class.SkPath*, %class.SkPath** %7, align 8
  %168 = icmp eq %class.SkPath* %167, null
  br i1 %168, label %180, label %169

169:                                              ; preds = %166
  %170 = getelementptr inbounds %class.SkPath, %class.SkPath* %167, i64 0, i32 0, i32 0
  %171 = load %class.SkPathRef*, %class.SkPathRef** %170, align 8
  %172 = icmp eq %class.SkPathRef* %171, null
  br i1 %172, label %179, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %171, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = atomicrmw add i32* %174, i32 -1 acq_rel
  %176 = icmp eq i32 %175, 1
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %171) #24
  %178 = bitcast %class.SkPathRef* %171 to i8*
  call void @_ZdlPv(i8* %178) #25
  br label %179

179:                                              ; preds = %177, %173, %169
  store %class.SkPath* null, %class.SkPath** %7, align 8
  br label %180

180:                                              ; preds = %166, %179
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #24
  ret %class.SkPath* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkPath6offsetEffPS_(%class.SkPath*, float, float, %class.SkPath*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkMatrix, align 16
  %6 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #24
  %7 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %8 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %8, align 16
  %9 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %10 = bitcast float* %9 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %10, align 16
  %11 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %11, align 16
  store i32 16, i32* %7, align 4
  %12 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %5, float %1, float %2) #24
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %0, %class.SkMatrix* nonnull dereferenceable(40) %5, %class.SkPath* %3, i32 1)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath*, %class.SkMatrix* dereferenceable(40), %class.SkPath*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.SkPathRef::Editor", align 8
  %6 = alloca %"class.SkPathRef::Editor", align 8
  %7 = alloca %class.SkPath, align 8
  %8 = alloca %class.SkPath, align 8
  %9 = alloca %"class.SkPath::Iter", align 8
  %10 = alloca [4 x %struct.SkPoint], align 16
  %11 = alloca %"class.SkPathRef::Editor", align 8
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = trunc i32 %13 to i8
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %1) #24
  %18 = zext i8 %17 to i32
  store i32 %18, i32* %12, align 4
  br label %19

19:                                               ; preds = %4, %16
  %20 = phi i32 [ %18, %16 ], [ %13, %4 ]
  %21 = and i32 %20, 15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %62

23:                                               ; preds = %19
  %24 = icmp ne %class.SkPath* %2, null
  %25 = icmp ne %class.SkPath* %2, %0
  %26 = and i1 %24, %25
  br i1 %26, label %27, label %362

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %29 = load %class.SkPathRef*, %class.SkPathRef** %28, align 8
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic
  %32 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 0, i32 0
  %33 = load %class.SkPathRef*, %class.SkPathRef** %32, align 8
  store %class.SkPathRef* %29, %class.SkPathRef** %32, align 8
  %34 = icmp eq %class.SkPathRef* %33, null
  br i1 %34, label %41, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 -1 acq_rel
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  tail call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %33) #24
  %40 = bitcast %class.SkPathRef* %33 to i8*
  tail call void @_ZdlPv(i8* %40) #25
  br label %41

41:                                               ; preds = %27, %35, %39
  %42 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %46 = load i8, i8* %45, align 2
  %47 = and i8 %46, 3
  %48 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 4
  %49 = load i8, i8* %48, align 2
  %50 = and i8 %49, -4
  %51 = or i8 %50, %47
  store i8 %51, i8* %48, align 2
  %52 = load i8, i8* %45, align 2
  %53 = and i8 %52, 4
  %54 = and i8 %51, -5
  %55 = or i8 %54, %53
  store i8 %55, i8* %48, align 2
  %56 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i8, i8* %56 monotonic, align 1
  %58 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %57, i8* %58 monotonic, align 1
  %59 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i8, i8* %59 monotonic, align 1
  %61 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %60, i8* %61 monotonic, align 1
  br label %362

62:                                               ; preds = %19
  %63 = icmp eq %class.SkPath* %2, null
  %64 = select i1 %63, %class.SkPath* %0, %class.SkPath* %2
  %65 = and i32 %20, 192
  %66 = icmp eq i32 %65, 128
  br i1 %66, label %67, label %70

67:                                               ; preds = %62
  %68 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1) #24
  %69 = zext i8 %68 to i32
  store i32 %69, i32* %12, align 4
  br label %70

70:                                               ; preds = %62, %67
  %71 = phi i32 [ %69, %67 ], [ %20, %62 ]
  %72 = and i32 %71, 8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %266, label %74

74:                                               ; preds = %70
  %75 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #24
  %76 = getelementptr inbounds %class.SkPath, %class.SkPath* %7, i64 0, i32 0, i32 0
  %77 = getelementptr inbounds %class.SkPath, %class.SkPath* %7, i64 0, i32 1
  %78 = getelementptr inbounds %class.SkPath, %class.SkPath* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = getelementptr inbounds %class.SkPath, %class.SkPath* %7, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds %class.SkPath, %class.SkPath* %7, i64 0, i32 4
  %81 = bitcast %class.SkPath* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false)
  %82 = tail call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24
  store %class.SkPathRef* %82, %class.SkPathRef** %76, align 8
  store i32 -1, i32* %77, align 8
  store atomic i8 2, i8* %78 monotonic, align 4
  store atomic i8 2, i8* %79 monotonic, align 1
  %83 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %84 = load i8, i8* %83, align 2
  %85 = and i8 %84, 3
  %86 = or i8 %85, -88
  store i8 %86, i8* %80, align 2
  %87 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #24
  %88 = getelementptr inbounds %class.SkPath, %class.SkPath* %8, i64 0, i32 0, i32 0
  %89 = getelementptr inbounds %class.SkPath, %class.SkPath* %8, i64 0, i32 1
  %90 = getelementptr inbounds %class.SkPath, %class.SkPath* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = getelementptr inbounds %class.SkPath, %class.SkPath* %8, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = getelementptr inbounds %class.SkPath, %class.SkPath* %8, i64 0, i32 4
  %93 = bitcast %class.SkPath* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 16, i1 false)
  %94 = tail call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24
  store %class.SkPathRef* %94, %class.SkPathRef** %88, align 8
  store i32 -1, i32* %89, align 8
  store atomic i8 2, i8* %90 monotonic, align 4
  store atomic i8 2, i8* %91 monotonic, align 1
  store i8 -88, i8* %92, align 2
  %95 = icmp eq i32 %3, 1
  br i1 %95, label %96, label %99

96:                                               ; preds = %74
  %97 = call zeroext i1 @_ZN10SkPathPriv15PerspectiveClipERK6SkPathRK8SkMatrixPS0_(%class.SkPath* dereferenceable(16) %0, %class.SkMatrix* dereferenceable(40) %1, %class.SkPath* nonnull %8)
  %98 = select i1 %97, %class.SkPath* %8, %class.SkPath* %0
  br label %99

99:                                               ; preds = %96, %74
  %100 = phi %class.SkPath* [ %0, %74 ], [ %98, %96 ]
  %101 = bitcast %"class.SkPath::Iter"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %101) #24
  %102 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %9, i64 0, i32 1
  %103 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %9, i64 0, i32 2
  %104 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %9, i64 0, i32 3
  %105 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %9, i64 0, i32 4, i32 0
  %106 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %9, i64 0, i32 2
  %107 = bitcast i8** %106 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 16, i1 false)
  %108 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %9, i64 0, i32 6
  %109 = bitcast float* %105 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 -1, i64 16, i1 false)
  %110 = getelementptr inbounds %class.SkPath, %class.SkPath* %100, i64 0, i32 0, i32 0
  %111 = bitcast i8* %108 to i64*
  store i64 -6148914691236517206, i64* %111, align 8
  %112 = load %class.SkPathRef*, %class.SkPathRef** %110, align 8
  %113 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %112, i64 0, i32 3, i32 0
  %114 = bitcast %struct.SkPoint** %113 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.SkPath::Iter"* %9 to i64*
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %112, i64 0, i32 4, i32 0
  %118 = bitcast i8** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast i8** %102 to i64*
  store i64 %119, i64* %120, align 8
  %121 = icmp eq i64 %119, 0
  br i1 %121, label %128, label %122

122:                                              ; preds = %99
  %123 = inttoptr i64 %119 to i8*
  %124 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %112, i64 0, i32 4, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %123, i64 %126
  br label %128

128:                                              ; preds = %99, %122
  %129 = phi i8* [ %127, %122 ], [ null, %99 ]
  store i8* %129, i8** %103, align 8
  %130 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %112, i64 0, i32 5, i32 0
  %131 = load float*, float** %130, align 8
  %132 = icmp eq float* %131, null
  %133 = getelementptr inbounds float, float* %131, i64 -1
  %134 = select i1 %132, float* null, float* %133
  store float* %134, float** %104, align 8
  %135 = bitcast [4 x %struct.SkPoint]* %10 to i8*
  %136 = bitcast float* %105 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 18, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %135) #24
  %137 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 0
  %138 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 0, i32 1
  %139 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 1, i32 0
  %140 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 1, i32 1
  %141 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 2, i32 0
  %142 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %10, i64 0, i64 2, i32 1
  %143 = getelementptr inbounds %class.SkPath, %class.SkPath* %7, i64 0, i32 0
  %144 = bitcast %"class.SkPathRef::Editor"* %5 to i8*
  %145 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %5, i64 0, i32 0
  %146 = bitcast [4 x %struct.SkPoint]* %10 to i32*
  %147 = bitcast float* %138 to i32*
  %148 = bitcast %"class.SkPathRef::Editor"* %6 to i8*
  %149 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %6, i64 0, i32 0
  %150 = bitcast [4 x %struct.SkPoint]* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %150, i8 -1, i64 32, i1 false)
  br label %151

151:                                              ; preds = %153, %128
  %152 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %9, %struct.SkPoint* nonnull %137)
  switch i32 %152, label %153 [
    i32 6, label %207
    i32 0, label %154
    i32 1, label %165
    i32 2, label %169
    i32 3, label %176
    i32 4, label %185
    i32 5, label %186
  ]

153:                                              ; preds = %151, %202, %185, %176, %169, %165, %154
  br label %151

154:                                              ; preds = %151
  %155 = load i32, i32* %146, align 16
  %156 = load i32, i32* %147, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %148) #24
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %149, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %6, %class.sk_sp* nonnull %143, i32 0, i32 0) #24
  %157 = load %class.SkPathRef*, %class.SkPathRef** %76, align 8
  %158 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %157, i64 0, i32 3, i32 2
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %77, align 8
  %160 = load %class.SkPathRef*, %class.SkPathRef** %149, align 8
  %161 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %160, i32 0, float 0.000000e+00) #24
  %162 = bitcast %struct.SkPoint* %161 to i32*
  store i32 %155, i32* %162, align 4
  %163 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %161, i64 0, i32 1
  %164 = bitcast float* %163 to i32*
  store i32 %156, i32* %164, align 4
  store atomic i8 2, i8* %78 monotonic, align 4
  store atomic i8 2, i8* %79 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %148) #24
  br label %153

165:                                              ; preds = %151
  %166 = load float, float* %139, align 8
  %167 = load float, float* %140, align 4
  %168 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* nonnull %7, float %166, float %167) #24
  br label %153

169:                                              ; preds = %151
  %170 = call float @_ZN7SkConic10TransformWEPK7SkPointfRK8SkMatrix(%struct.SkPoint* nonnull %137, float 1.000000e+00, %class.SkMatrix* dereferenceable(40) %1) #24
  %171 = load float, float* %139, align 8
  %172 = load float, float* %140, align 4
  %173 = load float, float* %141, align 16
  %174 = load float, float* %142, align 4
  %175 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* nonnull %7, float %171, float %172, float %173, float %174, float %170) #24
  br label %153

176:                                              ; preds = %151
  %177 = load float*, float** %104, align 8
  %178 = load float, float* %177, align 4
  %179 = call float @_ZN7SkConic10TransformWEPK7SkPointfRK8SkMatrix(%struct.SkPoint* nonnull %137, float %178, %class.SkMatrix* dereferenceable(40) %1) #24
  %180 = load float, float* %139, align 8
  %181 = load float, float* %140, align 4
  %182 = load float, float* %141, align 16
  %183 = load float, float* %142, align 4
  %184 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* nonnull %7, float %180, float %181, float %182, float %183, float %179) #24
  br label %153

185:                                              ; preds = %151
  call fastcc void @_ZL18subdivide_cubic_toP6SkPathPK7SkPointi(%class.SkPath* nonnull %7, %struct.SkPoint* nonnull %137, i32 2)
  br label %153

186:                                              ; preds = %151
  %187 = load %class.SkPathRef*, %class.SkPathRef** %76, align 8
  %188 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %187, i64 0, i32 4, i32 2
  %189 = load i32, i32* %188, align 4
  %190 = icmp sgt i32 %189, 0
  br i1 %190, label %191, label %202

191:                                              ; preds = %186
  %192 = add nsw i32 %189, -1
  %193 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %187, i64 0, i32 4, i32 0
  %194 = load i8*, i8** %193, align 8
  %195 = sext i32 %192 to i64
  %196 = getelementptr inbounds i8, i8* %194, i64 %195
  %197 = load i8, i8* %196, align 1
  %198 = icmp ult i8 %197, 5
  br i1 %198, label %199, label %202

199:                                              ; preds = %191
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %144) #24
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %145, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %5, %class.sk_sp* nonnull %143, i32 0, i32 0) #24
  %200 = load %class.SkPathRef*, %class.SkPathRef** %145, align 8
  %201 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %200, i32 5, float 0.000000e+00) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #24
  br label %202

202:                                              ; preds = %186, %191, %199
  %203 = load i32, i32* %77, align 8
  %204 = ashr i32 %203, 31
  %205 = xor i32 %203, -1
  %206 = xor i32 %204, %205
  store i32 %206, i32* %77, align 8
  br label %153

207:                                              ; preds = %151
  %208 = icmp eq %class.SkPath* %64, %7
  br i1 %208, label %236, label %209

209:                                              ; preds = %207
  %210 = bitcast %class.SkPath* %64 to i64*
  %211 = load i64, i64* %210, align 8
  %212 = bitcast %class.SkPath* %7 to i64*
  %213 = load i64, i64* %212, align 8
  store i64 %213, i64* %210, align 8
  store i64 %211, i64* %212, align 8
  %214 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = load i32, i32* %77, align 8
  store i32 %216, i32* %214, align 4
  store i32 %215, i32* %77, align 8
  %217 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 4
  %218 = load i8, i8* %217, align 2
  %219 = and i8 %218, 3
  %220 = load i8, i8* %80, align 2
  %221 = and i8 %220, 3
  %222 = and i8 %218, -8
  %223 = or i8 %221, %222
  %224 = and i8 %220, -8
  %225 = or i8 %224, %219
  %226 = and i8 %218, 4
  %227 = and i8 %220, 4
  %228 = or i8 %223, %227
  store i8 %228, i8* %217, align 2
  %229 = or i8 %225, %226
  store i8 %229, i8* %80, align 2
  %230 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i8, i8* %230 monotonic, align 1
  %232 = load atomic i8, i8* %78 monotonic, align 4
  store atomic i8 %232, i8* %230 monotonic, align 1
  store atomic i8 %231, i8* %78 monotonic, align 4
  %233 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i8, i8* %233 monotonic, align 1
  %235 = load atomic i8, i8* %79 monotonic, align 1
  store atomic i8 %235, i8* %233 monotonic, align 1
  store atomic i8 %234, i8* %79 monotonic, align 1
  br label %236

236:                                              ; preds = %207, %209
  %237 = bitcast %"class.SkPathRef::Editor"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %237) #24
  %238 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %11, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %238, align 8
  %239 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %11, %class.sk_sp* %239, i32 0, i32 0) #24
  %240 = load %class.SkPathRef*, %class.SkPathRef** %238, align 8
  %241 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %240, i64 0, i32 11
  store i8 0, i8* %241, align 2
  %242 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %240, i64 0, i32 12
  store i8 0, i8* %242, align 1
  %243 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %240, i64 0, i32 3, i32 0
  %244 = load %struct.SkPoint*, %struct.SkPoint** %243, align 8
  %245 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %240, i64 0, i32 3, i32 2
  %246 = load i32, i32* %245, align 4
  call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %1, %struct.SkPoint* %244, %struct.SkPoint* %244, i32 %246) #24
  %247 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %247 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %237) #24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %135) #24
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %101) #24
  %248 = load %class.SkPathRef*, %class.SkPathRef** %88, align 8
  %249 = icmp eq %class.SkPathRef* %248, null
  br i1 %249, label %256, label %250

250:                                              ; preds = %236
  %251 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %248, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %252 = atomicrmw add i32* %251, i32 -1 acq_rel
  %253 = icmp eq i32 %252, 1
  br i1 %253, label %254, label %256

254:                                              ; preds = %250
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %248) #24
  %255 = bitcast %class.SkPathRef* %248 to i8*
  call void @_ZdlPv(i8* %255) #25
  br label %256

256:                                              ; preds = %236, %250, %254
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #24
  %257 = load %class.SkPathRef*, %class.SkPathRef** %76, align 8
  %258 = icmp eq %class.SkPathRef* %257, null
  br i1 %258, label %265, label %259

259:                                              ; preds = %256
  %260 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %257, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = atomicrmw add i32* %260, i32 -1 acq_rel
  %262 = icmp eq i32 %261, 1
  br i1 %262, label %263, label %265

263:                                              ; preds = %259
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %257) #24
  %264 = bitcast %class.SkPathRef* %257 to i8*
  call void @_ZdlPv(i8* %264) #25
  br label %265

265:                                              ; preds = %256, %259, %263
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #24
  br label %362

266:                                              ; preds = %70
  %267 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load atomic i8, i8* %267 monotonic, align 1
  %269 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 0
  %270 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %271 = load %class.SkPathRef*, %class.SkPathRef** %270, align 8
  tail call void @_ZN9SkPathRef21CreateTransformedCopyEP5sk_spIS_ERKS_RK8SkMatrix(%class.sk_sp* %269, %class.SkPathRef* dereferenceable(120) %271, %class.SkMatrix* dereferenceable(40) %1) #24
  %272 = icmp eq %class.SkPath* %64, %0
  br i1 %272, label %288, label %273

273:                                              ; preds = %266
  %274 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  %275 = load i32, i32* %274, align 8
  %276 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 1
  store i32 %275, i32* %276, align 8
  %277 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %278 = load i8, i8* %277, align 2
  %279 = and i8 %278, 3
  %280 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 4
  %281 = load i8, i8* %280, align 2
  %282 = and i8 %281, -4
  %283 = or i8 %282, %279
  store i8 %283, i8* %280, align 2
  %284 = load i8, i8* %277, align 2
  %285 = and i8 %284, 4
  %286 = and i8 %283, -5
  %287 = or i8 %286, %285
  store i8 %287, i8* %280, align 2
  br label %288

288:                                              ; preds = %266, %273
  %289 = icmp eq i8 %268, 0
  br i1 %289, label %290, label %328

290:                                              ; preds = %288
  %291 = load i32, i32* %12, align 4
  %292 = trunc i32 %291 to i8
  %293 = icmp slt i8 %292, 0
  br i1 %293, label %294, label %297

294:                                              ; preds = %290
  %295 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %1) #24
  %296 = zext i8 %295 to i32
  store i32 %296, i32* %12, align 4
  br label %297

297:                                              ; preds = %290, %294
  %298 = phi i32 [ %296, %294 ], [ %291, %290 ]
  %299 = and i32 %298, 12
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %328

301:                                              ; preds = %297
  %302 = load %class.SkPathRef*, %class.SkPathRef** %270, align 8
  %303 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %302, i64 0, i32 3, i32 0
  %304 = load %struct.SkPoint*, %struct.SkPoint** %303, align 8
  %305 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %302, i64 0, i32 3, i32 2
  %306 = load i32, i32* %305, align 4
  %307 = icmp sgt i32 %306, 1
  br i1 %307, label %308, label %328

308:                                              ; preds = %301
  %309 = zext i32 %306 to i64
  %310 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %304, i64 0, i32 0
  %311 = load float, float* %310, align 4
  br label %312

312:                                              ; preds = %325, %308
  %313 = phi float [ %311, %308 ], [ %316, %325 ]
  %314 = phi i64 [ 1, %308 ], [ %326, %325 ]
  %315 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %304, i64 %314, i32 0
  %316 = load float, float* %315, align 4
  %317 = fcmp une float %313, %316
  br i1 %317, label %318, label %325

318:                                              ; preds = %312
  %319 = add nsw i64 %314, -1
  %320 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %304, i64 %319, i32 1
  %321 = load float, float* %320, align 4
  %322 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %304, i64 %314, i32 1
  %323 = load float, float* %322, align 4
  %324 = fcmp une float %321, %323
  br i1 %324, label %328, label %325

325:                                              ; preds = %318, %312
  %326 = add nuw nsw i64 %314, 1
  %327 = icmp eq i64 %326, %309
  br i1 %327, label %328, label %312

328:                                              ; preds = %325, %318, %301, %297, %288
  %329 = phi i8 [ %268, %288 ], [ 2, %297 ], [ 0, %301 ], [ 0, %325 ], [ 2, %318 ]
  %330 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %329, i8* %330 monotonic, align 1
  %331 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load atomic i8, i8* %331 monotonic, align 1
  %333 = icmp eq i8 %332, 2
  br i1 %333, label %334, label %336

334:                                              ; preds = %328
  %335 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %335 monotonic, align 1
  br label %362

336:                                              ; preds = %328
  %337 = bitcast %class.SkMatrix* %1 to <2 x float>*
  %338 = load <2 x float>, <2 x float>* %337, align 4
  %339 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 3
  %340 = bitcast float* %339 to <2 x float>*
  %341 = load <2 x float>, <2 x float>* %340, align 4
  %342 = shufflevector <2 x float> %341, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %343 = fmul <2 x float> %338, %342
  %344 = extractelement <2 x float> %343, i32 0
  %345 = extractelement <2 x float> %343, i32 1
  %346 = fsub float %344, %345
  %347 = fcmp olt float %346, 0.000000e+00
  br i1 %347, label %348, label %355

348:                                              ; preds = %336
  %349 = load atomic i8, i8* %331 monotonic, align 1
  %350 = zext i8 %349 to i64
  %351 = getelementptr inbounds [3 x i32], [3 x i32]* @_ZZN10SkPathPriv22OppositeFirstDirectionE20SkPathFirstDirectionE12gOppositeDir, i64 0, i64 %350
  %352 = load i32, i32* %351, align 4
  %353 = trunc i32 %352 to i8
  %354 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %353, i8* %354 monotonic, align 1
  br label %362

355:                                              ; preds = %336
  %356 = fcmp ogt float %346, 0.000000e+00
  br i1 %356, label %357, label %360

357:                                              ; preds = %355
  %358 = load atomic i8, i8* %331 monotonic, align 1
  %359 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %358, i8* %359 monotonic, align 1
  br label %362

360:                                              ; preds = %355
  %361 = getelementptr inbounds %class.SkPath, %class.SkPath* %64, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %361 monotonic, align 1
  br label %362

362:                                              ; preds = %334, %357, %360, %348, %23, %41, %265
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkPathPriv15PerspectiveClipERK6SkPathRK8SkMatrixPS0_(%class.SkPath* dereferenceable(16), %class.SkMatrix* dereferenceable(40), %class.SkPath*) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkMatrix, align 4
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca %class.SkPath, align 8
  %7 = alloca <4 x float>, align 16
  %8 = bitcast <4 x float>* %7 to %struct.SkRect*
  %9 = alloca %struct.Rec, align 8
  %10 = alloca %class.SkPath, align 8
  %11 = alloca %class.SkPath, align 8
  %12 = alloca %class.SkPath, align 8
  %13 = alloca %class.SkPath, align 8
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 192
  %17 = icmp eq i32 %16, 128
  br i1 %17, label %18, label %21

18:                                               ; preds = %3
  %19 = tail call zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix* %1) #24
  %20 = zext i8 %19 to i32
  store i32 %20, i32* %14, align 4
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i32 [ %20, %18 ], [ %15, %3 ]
  %23 = and i32 %22, 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %378, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 6
  %27 = bitcast float* %26 to <2 x float>*
  %28 = load <2 x float>, <2 x float>* %27, align 4
  %29 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %1, i64 0, i32 0, i64 8
  %30 = load float, float* %29, align 4
  %31 = fpext <2 x float> %28 to <2 x double>
  %32 = fmul <2 x double> %31, %31
  %33 = extractelement <2 x double> %32, i32 0
  %34 = extractelement <2 x double> %32, i32 1
  %35 = fadd double %33, %34
  %36 = tail call double @sqrt(double %35) #24
  %37 = fcmp oeq double %36, 0.000000e+00
  br i1 %37, label %65, label %38

38:                                               ; preds = %25
  %39 = fadd float %30, 0xBF50000000000000
  %40 = fpext float %39 to double
  %41 = fdiv double 1.000000e+00, %36
  %42 = extractelement <2 x double> %31, i32 0
  %43 = fmul double %41, %42
  %44 = extractelement <2 x double> %31, i32 1
  %45 = fmul double %41, %44
  %46 = fmul double %41, %40
  %47 = fptrunc double %43 to float
  %48 = bitcast float %47 to i32
  %49 = and i32 %48, 2139095040
  %50 = icmp eq i32 %49, 2139095040
  br i1 %50, label %337, label %51

51:                                               ; preds = %38
  %52 = fptrunc double %45 to float
  %53 = bitcast float %52 to i32
  %54 = and i32 %53, 2139095040
  %55 = icmp eq i32 %54, 2139095040
  br i1 %55, label %337, label %56

56:                                               ; preds = %51
  %57 = fptrunc double %46 to float
  %58 = bitcast float %57 to i32
  %59 = and i32 %58, 2139095040
  %60 = icmp eq i32 %59, 2139095040
  br i1 %60, label %337, label %61

61:                                               ; preds = %56
  %62 = fcmp oeq double %43, 0.000000e+00
  %63 = fcmp oeq double %45, 0.000000e+00
  %64 = and i1 %62, %63
  br i1 %64, label %337, label %65

65:                                               ; preds = %61, %25
  %66 = phi float [ 0.000000e+00, %25 ], [ %52, %61 ]
  %67 = phi float [ 0.000000e+00, %25 ], [ %47, %61 ]
  %68 = phi float [ 1.000000e+00, %25 ], [ %57, %61 ]
  %69 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %70 = load %class.SkPathRef*, %class.SkPathRef** %69, align 8
  %71 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %70, i64 0, i32 9
  %72 = load i8, i8* %71, align 8
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %83, label %74

74:                                               ; preds = %65
  %75 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %70, i64 0, i32 1
  %76 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %70, i64 0, i32 3, i32 0
  %77 = load %struct.SkPoint*, %struct.SkPoint** %76, align 8
  %78 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %70, i64 0, i32 3, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %75, %struct.SkPoint* %77, i32 %79) #24
  %81 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %70, i64 0, i32 10
  %82 = zext i1 %80 to i8
  store i8 %82, i8* %81, align 1
  store i8 0, i8* %71, align 8
  br label %83

83:                                               ; preds = %65, %74
  %84 = fcmp ult float %67, 0.000000e+00
  %85 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %70, i64 0, i32 1, i32 0
  %86 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %70, i64 0, i32 1, i32 2
  %87 = load float, float* %85, align 4
  %88 = load float, float* %86, align 4
  %89 = select i1 %84, float %87, float %88
  %90 = select i1 %84, float %88, float %87
  %91 = fcmp ult float %66, 0.000000e+00
  %92 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %70, i64 0, i32 1, i32 1
  %93 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %70, i64 0, i32 1, i32 3
  %94 = load float, float* %92, align 4
  %95 = load float, float* %93, align 4
  %96 = select i1 %91, float %94, float %95
  %97 = select i1 %91, float %95, float %94
  %98 = fmul float %67, %90
  %99 = fmul float %66, %97
  %100 = fadd float %98, %99
  %101 = fadd float %68, %100
  %102 = fmul float %67, %89
  %103 = fmul float %66, %96
  %104 = fadd float %102, %103
  %105 = fadd float %68, %104
  %106 = fmul float %101, %105
  %107 = fcmp ogt float %106, 0.000000e+00
  %108 = fcmp uge float %101, 0.000000e+00
  %109 = zext i1 %108 to i32
  %110 = select i1 %107, i32 %109, i32 2
  switch i32 %110, label %337 [
    i32 1, label %378
    i32 2, label %111
  ]

111:                                              ; preds = %83
  %112 = bitcast %class.SkPath* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %112) #24
  %113 = bitcast %class.SkMatrix* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #24, !noalias !14
  %114 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 1
  %115 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 0
  %116 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 1
  %117 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 2
  %118 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 3
  %119 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 4
  %120 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 5
  %121 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 6
  %122 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 7
  %123 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %4, i64 0, i32 0, i64 8
  %124 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %124) #24, !noalias !14
  %125 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %126 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %126, align 16, !noalias !14
  %127 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %128 = bitcast float* %127 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %128, align 16, !noalias !14
  %129 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %129, align 16, !noalias !14
  store i32 16, i32* %125, align 4, !noalias !14
  %130 = fsub float -0.000000e+00, %67
  %131 = fmul float %68, %130
  %132 = fmul float %66, %68
  %133 = fsub float -0.000000e+00, %132
  store float %66, float* %115, align 4, !noalias !14
  store float %67, float* %116, align 4, !noalias !14
  store float %131, float* %117, align 4, !noalias !14
  store float %130, float* %118, align 4, !noalias !14
  store float %66, float* %119, align 4, !noalias !14
  store float %133, float* %120, align 4, !noalias !14
  store float 0.000000e+00, float* %121, align 4, !noalias !14
  store float 0.000000e+00, float* %122, align 4, !noalias !14
  store float 1.000000e+00, float* %123, align 4, !noalias !14
  store i32 128, i32* %114, align 4, !noalias !14
  %134 = call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* nonnull %4) #24, !noalias !14
  %135 = zext i8 %134 to i32
  store i32 %135, i32* %114, align 4, !noalias !14
  %136 = and i32 %135, 15
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %111
  %139 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix* nonnull %5) #24, !noalias !14
  br label %149

140:                                              ; preds = %111
  %141 = call zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix* nonnull %4, %class.SkMatrix* nonnull %5) #24, !noalias !14
  br i1 %141, label %149, label %142

142:                                              ; preds = %140
  %143 = call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24, !noalias !14
  %144 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 0, i32 0
  store %class.SkPathRef* %143, %class.SkPathRef** %144, align 8, !alias.scope !14
  %145 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 1
  store i32 -1, i32* %145, align 8, !alias.scope !14
  %146 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 4
  %147 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %147 monotonic, align 4, !alias.scope !14
  %148 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %148 monotonic, align 1, !alias.scope !14
  store i8 0, i8* %146, align 2, !alias.scope !14
  br label %293

149:                                              ; preds = %138, %140
  %150 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %150) #24, !noalias !14
  %151 = getelementptr inbounds %class.SkPath, %class.SkPath* %6, i64 0, i32 0, i32 0
  %152 = getelementptr inbounds %class.SkPath, %class.SkPath* %6, i64 0, i32 1
  %153 = getelementptr inbounds %class.SkPath, %class.SkPath* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = getelementptr inbounds %class.SkPath, %class.SkPath* %6, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = getelementptr inbounds %class.SkPath, %class.SkPath* %6, i64 0, i32 4
  %156 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %156, i8 -86, i64 16, i1 false)
  %157 = call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24, !noalias !14
  store %class.SkPathRef* %157, %class.SkPathRef** %151, align 8, !noalias !14
  store i32 -1, i32* %152, align 8, !noalias !14
  %158 = load i8, i8* %155, align 2, !noalias !14
  store atomic i8 2, i8* %153 monotonic, align 4, !noalias !14
  store atomic i8 2, i8* %154 monotonic, align 1, !noalias !14
  %159 = and i8 %158, -8
  store i8 %159, i8* %155, align 2, !noalias !14
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* %0, %class.SkMatrix* nonnull dereferenceable(40) %5, %class.SkPath* nonnull %6, i32 1) #24, !noalias !14
  %160 = load %class.SkPathRef*, %class.SkPathRef** %151, align 8, !noalias !14
  %161 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %160, i64 0, i32 9
  %162 = load i8, i8* %161, align 8, !noalias !14
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %149
  %165 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %160, i64 0, i32 10
  %166 = load i8, i8* %165, align 1, !range !2, !noalias !14
  br label %176

167:                                              ; preds = %149
  %168 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %160, i64 0, i32 1
  %169 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %160, i64 0, i32 3, i32 0
  %170 = load %struct.SkPoint*, %struct.SkPoint** %169, align 8, !noalias !14
  %171 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %160, i64 0, i32 3, i32 2
  %172 = load i32, i32* %171, align 4, !noalias !14
  %173 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %168, %struct.SkPoint* %170, i32 %172) #24, !noalias !14
  %174 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %160, i64 0, i32 10
  %175 = zext i1 %173 to i8
  store i8 %175, i8* %174, align 1, !noalias !14
  store i8 0, i8* %161, align 8, !noalias !14
  br label %176

176:                                              ; preds = %167, %164
  %177 = phi i8 [ %166, %164 ], [ %175, %167 ]
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %186

179:                                              ; preds = %176
  %180 = call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24, !noalias !14
  %181 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 0, i32 0
  store %class.SkPathRef* %180, %class.SkPathRef** %181, align 8, !alias.scope !14
  %182 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 1
  store i32 -1, i32* %182, align 8, !alias.scope !14
  %183 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 4
  %184 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %184 monotonic, align 4, !alias.scope !14
  %185 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %185 monotonic, align 1, !alias.scope !14
  store i8 0, i8* %183, align 2, !alias.scope !14
  br label %283

186:                                              ; preds = %176
  %187 = bitcast <4 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187) #24, !noalias !14
  store <4 x float> <float 0xC7EFFFFFE0000000, float 0.000000e+00, float 0x47EFFFFFE0000000, float 0x47EFFFFFE0000000>, <4 x float>* %7, align 16, !noalias !14
  %188 = bitcast %struct.Rec* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %188) #24, !noalias !14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %188, i8* align 8 bitcast ({ { %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, i8, [3 x i8], i32, %struct.SkPoint, i8, [3 x i8], i32, i32, i8, [3 x i8], i32 }, %struct.SkPoint }* @__const._ZL4clipRK6SkPathRK11SkHalfPlane.rec to i8*), i64 96, i1 false) #24, !noalias !14
  %189 = getelementptr inbounds %struct.Rec, %struct.Rec* %9, i64 0, i32 0
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %189) #24, !noalias !14
  %190 = getelementptr inbounds %struct.Rec, %struct.Rec* %9, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %190, align 8, !noalias !14
  %191 = getelementptr inbounds %struct.Rec, %struct.Rec* %9, i64 0, i32 1, i32 1
  store float 0.000000e+00, float* %191, align 4, !noalias !14
  call void @_ZN13SkEdgeClipper8ClipPathERK6SkPathRK6SkRectbPFvPS_bPvES7_(%class.SkPath* nonnull dereferenceable(16) %6, %struct.SkRect* nonnull dereferenceable(16) %8, i1 zeroext false, void (%class.SkEdgeClipper*, i1, i8*)* nonnull @"_ZZL4clipRK6SkPathRK11SkHalfPlaneEN3$_78__invokeEP13SkEdgeClipperbPv", i8* nonnull %188) #24, !noalias !14
  %192 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %193 = load i8, i8* %192, align 2, !noalias !14
  %194 = and i8 %193, 3
  %195 = zext i8 %194 to i32
  %196 = getelementptr inbounds %struct.Rec, %struct.Rec* %9, i64 0, i32 0, i32 3
  store i32 %195, i32* %196, align 8, !noalias !14
  %197 = bitcast %class.SkPath* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #24, !noalias !14
  %198 = getelementptr inbounds %class.SkPath, %class.SkPath* %10, i64 0, i32 0, i32 0
  %199 = getelementptr inbounds %class.SkPath, %class.SkPath* %10, i64 0, i32 1
  %200 = getelementptr inbounds %class.SkPath, %class.SkPath* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = getelementptr inbounds %class.SkPath, %class.SkPath* %10, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = getelementptr inbounds %class.SkPath, %class.SkPath* %10, i64 0, i32 4
  %203 = bitcast %class.SkPath* %11 to i8*
  %204 = bitcast %class.SkPath* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %203) #24, !noalias !14
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* nonnull sret %11, %class.SkPathBuilder* nonnull %189) #24, !noalias !14
  %205 = bitcast %class.SkPath* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 -86, i64 16, i1 false)
  %206 = call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24, !noalias !17
  store %class.SkPathRef* %206, %class.SkPathRef** %198, align 8, !alias.scope !17
  store i32 -1, i32* %199, align 8, !alias.scope !17
  store atomic i8 2, i8* %200 monotonic, align 4, !alias.scope !17
  store atomic i8 2, i8* %201 monotonic, align 1, !alias.scope !17
  store i8 -88, i8* %202, align 2, !alias.scope !17
  call void @_ZNK6SkPath9transformERK8SkMatrixPS_22SkApplyPerspectiveClip(%class.SkPath* nonnull %11, %class.SkMatrix* nonnull dereferenceable(40) %4, %class.SkPath* nonnull %10, i32 1) #24
  %207 = getelementptr inbounds %class.SkPath, %class.SkPath* %11, i64 0, i32 0, i32 0
  %208 = load %class.SkPathRef*, %class.SkPathRef** %207, align 8, !noalias !14
  %209 = icmp eq %class.SkPathRef* %208, null
  br i1 %209, label %216, label %210

210:                                              ; preds = %186
  %211 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %208, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = atomicrmw add i32* %211, i32 -1 acq_rel, !noalias !14
  %213 = icmp eq i32 %212, 1
  br i1 %213, label %214, label %216

214:                                              ; preds = %210
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %208) #24, !noalias !14
  %215 = bitcast %class.SkPathRef* %208 to i8*
  call void @_ZdlPv(i8* %215) #25, !noalias !14
  br label %216

216:                                              ; preds = %214, %210, %186
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %203) #24, !noalias !14
  %217 = load %class.SkPathRef*, %class.SkPathRef** %198, align 8, !noalias !14
  %218 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %217, i64 0, i32 9
  %219 = load i8, i8* %218, align 8, !noalias !14
  %220 = icmp eq i8 %219, 0
  br i1 %220, label %221, label %224

221:                                              ; preds = %216
  %222 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %217, i64 0, i32 10
  %223 = load i8, i8* %222, align 1, !range !2, !noalias !14
  br label %233

224:                                              ; preds = %216
  %225 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %217, i64 0, i32 1
  %226 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %217, i64 0, i32 3, i32 0
  %227 = load %struct.SkPoint*, %struct.SkPoint** %226, align 8, !noalias !14
  %228 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %217, i64 0, i32 3, i32 2
  %229 = load i32, i32* %228, align 4, !noalias !14
  %230 = call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %225, %struct.SkPoint* %227, i32 %229) #24, !noalias !14
  %231 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %217, i64 0, i32 10
  %232 = zext i1 %230 to i8
  store i8 %232, i8* %231, align 1, !noalias !14
  store i8 0, i8* %218, align 8, !noalias !14
  br label %233

233:                                              ; preds = %224, %221
  %234 = phi i8 [ %223, %221 ], [ %232, %224 ]
  %235 = icmp eq i8 %234, 0
  br i1 %235, label %236, label %257

236:                                              ; preds = %233
  %237 = call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24, !noalias !14
  %238 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %237, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = atomicrmw add i32* %238, i32 1 monotonic, !noalias !14
  %240 = load %class.SkPathRef*, %class.SkPathRef** %198, align 8, !noalias !14
  store %class.SkPathRef* %237, %class.SkPathRef** %198, align 8, !noalias !14
  %241 = icmp eq %class.SkPathRef* %240, null
  br i1 %241, label %248, label %242

242:                                              ; preds = %236
  %243 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %244 = atomicrmw add i32* %243, i32 -1 acq_rel, !noalias !14
  %245 = icmp eq i32 %244, 1
  br i1 %245, label %246, label %248

246:                                              ; preds = %242
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %240) #24, !noalias !14
  %247 = bitcast %class.SkPathRef* %240 to i8*
  call void @_ZdlPv(i8* %247) #25, !noalias !14
  br label %248

248:                                              ; preds = %246, %242, %236
  store i32 -1, i32* %199, align 8, !noalias !14
  %249 = load i8, i8* %202, align 2, !noalias !14
  %250 = and i8 %249, -8
  store i8 %250, i8* %202, align 2, !noalias !14
  store atomic i8 2, i8* %200 monotonic, align 4, !noalias !14
  store atomic i8 2, i8* %201 monotonic, align 1, !noalias !14
  %251 = icmp eq %class.SkPathRef* %237, null
  br i1 %251, label %257, label %252

252:                                              ; preds = %248
  %253 = atomicrmw add i32* %238, i32 -1 acq_rel, !noalias !14
  %254 = icmp eq i32 %253, 1
  br i1 %254, label %255, label %257

255:                                              ; preds = %252
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %237) #24, !noalias !14
  %256 = bitcast %class.SkPathRef* %237 to i8*
  call void @_ZdlPv(i8* %256) #25, !noalias !14
  br label %257

257:                                              ; preds = %233, %248, %252, %255
  %258 = load %class.SkPathRef*, %class.SkPathRef** %198, align 8, !noalias !14
  %259 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %258, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %260 = atomicrmw add i32* %259, i32 1 monotonic, !noalias !14
  %261 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 0, i32 0
  store %class.SkPathRef* %258, %class.SkPathRef** %261, align 8, !alias.scope !14
  %262 = load i32, i32* %199, align 8, !noalias !14
  %263 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 1
  store i32 %262, i32* %263, align 8, !alias.scope !14
  %264 = load i8, i8* %202, align 2, !noalias !14
  %265 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 4
  %266 = load i8, i8* %265, align 2, !alias.scope !14
  %267 = and i8 %266, -8
  %268 = and i8 %264, 7
  %269 = or i8 %268, %267
  store i8 %269, i8* %265, align 2, !alias.scope !14
  %270 = load atomic i8, i8* %200 monotonic, align 4, !noalias !14
  %271 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %270, i8* %271 monotonic, align 4, !alias.scope !14
  %272 = load atomic i8, i8* %201 monotonic, align 1, !noalias !14
  %273 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %272, i8* %273 monotonic, align 1, !alias.scope !14
  %274 = load %class.SkPathRef*, %class.SkPathRef** %198, align 8, !noalias !14
  %275 = icmp eq %class.SkPathRef* %274, null
  br i1 %275, label %282, label %276

276:                                              ; preds = %257
  %277 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %274, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %278 = atomicrmw add i32* %277, i32 -1 acq_rel, !noalias !14
  %279 = icmp eq i32 %278, 1
  br i1 %279, label %280, label %282

280:                                              ; preds = %276
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %274) #24, !noalias !14
  %281 = bitcast %class.SkPathRef* %274 to i8*
  call void @_ZdlPv(i8* %281) #25, !noalias !14
  br label %282

282:                                              ; preds = %280, %276, %257
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #24, !noalias !14
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %189) #24, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %188) #24, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #24, !noalias !14
  br label %283

283:                                              ; preds = %282, %179
  %284 = load %class.SkPathRef*, %class.SkPathRef** %151, align 8, !noalias !14
  %285 = icmp eq %class.SkPathRef* %284, null
  br i1 %285, label %292, label %286

286:                                              ; preds = %283
  %287 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %284, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = atomicrmw add i32* %287, i32 -1 acq_rel, !noalias !14
  %289 = icmp eq i32 %288, 1
  br i1 %289, label %290, label %292

290:                                              ; preds = %286
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %284) #24, !noalias !14
  %291 = bitcast %class.SkPathRef* %284 to i8*
  call void @_ZdlPv(i8* %291) #25, !noalias !14
  br label %292

292:                                              ; preds = %290, %286, %283
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %150) #24, !noalias !14
  br label %293

293:                                              ; preds = %142, %292
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %124) #24, !noalias !14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #24, !noalias !14
  %294 = icmp eq %class.SkPath* %12, %2
  br i1 %294, label %326, label %295

295:                                              ; preds = %293
  %296 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 0, i32 0
  %297 = load %class.SkPathRef*, %class.SkPathRef** %296, align 8
  %298 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %297, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = atomicrmw add i32* %298, i32 1 monotonic
  %300 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 0, i32 0
  %301 = load %class.SkPathRef*, %class.SkPathRef** %300, align 8
  store %class.SkPathRef* %297, %class.SkPathRef** %300, align 8
  %302 = icmp eq %class.SkPathRef* %301, null
  br i1 %302, label %309, label %303

303:                                              ; preds = %295
  %304 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %301, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = atomicrmw add i32* %304, i32 -1 acq_rel
  %306 = icmp eq i32 %305, 1
  br i1 %306, label %307, label %309

307:                                              ; preds = %303
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %301) #24
  %308 = bitcast %class.SkPathRef* %301 to i8*
  call void @_ZdlPv(i8* %308) #25
  br label %309

309:                                              ; preds = %307, %303, %295
  %310 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 1
  %311 = load i32, i32* %310, align 8
  %312 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 1
  store i32 %311, i32* %312, align 8
  %313 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 4
  %314 = load i8, i8* %313, align 2
  %315 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 4
  %316 = load i8, i8* %315, align 2
  %317 = and i8 %316, -8
  %318 = and i8 %314, 7
  %319 = or i8 %318, %317
  store i8 %319, i8* %315, align 2
  %320 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load atomic i8, i8* %320 monotonic, align 4
  %322 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %321, i8* %322 monotonic, align 1
  %323 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i8, i8* %323 monotonic, align 1
  %325 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %324, i8* %325 monotonic, align 1
  br label %326

326:                                              ; preds = %293, %309
  %327 = getelementptr inbounds %class.SkPath, %class.SkPath* %12, i64 0, i32 0, i32 0
  %328 = load %class.SkPathRef*, %class.SkPathRef** %327, align 8
  %329 = icmp eq %class.SkPathRef* %328, null
  br i1 %329, label %336, label %330

330:                                              ; preds = %326
  %331 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %328, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = atomicrmw add i32* %331, i32 -1 acq_rel
  %333 = icmp eq i32 %332, 1
  br i1 %333, label %334, label %336

334:                                              ; preds = %330
  call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %328) #24
  %335 = bitcast %class.SkPathRef* %328 to i8*
  call void @_ZdlPv(i8* %335) #25
  br label %336

336:                                              ; preds = %326, %330, %334
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %112) #24
  br label %378

337:                                              ; preds = %38, %51, %56, %61, %83
  %338 = bitcast %class.SkPath* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %338) #24
  %339 = tail call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24
  %340 = getelementptr inbounds %class.SkPath, %class.SkPath* %13, i64 0, i32 0, i32 0
  store %class.SkPathRef* %339, %class.SkPathRef** %340, align 8
  %341 = getelementptr inbounds %class.SkPath, %class.SkPath* %13, i64 0, i32 1
  store i32 -1, i32* %341, align 8
  %342 = getelementptr inbounds %class.SkPath, %class.SkPath* %13, i64 0, i32 4
  %343 = getelementptr inbounds %class.SkPath, %class.SkPath* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %343 monotonic, align 4
  %344 = getelementptr inbounds %class.SkPath, %class.SkPath* %13, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %344 monotonic, align 1
  store i8 0, i8* %342, align 2
  %345 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = atomicrmw add i32* %345, i32 1 monotonic
  %347 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 0, i32 0
  %348 = load %class.SkPathRef*, %class.SkPathRef** %347, align 8
  store %class.SkPathRef* %339, %class.SkPathRef** %347, align 8
  %349 = icmp eq %class.SkPathRef* %348, null
  br i1 %349, label %356, label %350

350:                                              ; preds = %337
  %351 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %348, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = atomicrmw add i32* %351, i32 -1 acq_rel
  %353 = icmp eq i32 %352, 1
  br i1 %353, label %354, label %356

354:                                              ; preds = %350
  tail call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %348) #24
  %355 = bitcast %class.SkPathRef* %348 to i8*
  tail call void @_ZdlPv(i8* %355) #25
  br label %356

356:                                              ; preds = %354, %350, %337
  %357 = load i32, i32* %341, align 8
  %358 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 1
  store i32 %357, i32* %358, align 8
  %359 = load i8, i8* %342, align 2
  %360 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 4
  %361 = load i8, i8* %360, align 2
  %362 = and i8 %361, -8
  %363 = and i8 %359, 7
  %364 = or i8 %363, %362
  store i8 %364, i8* %360, align 2
  %365 = load atomic i8, i8* %343 monotonic, align 4
  %366 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %365, i8* %366 monotonic, align 1
  %367 = load atomic i8, i8* %344 monotonic, align 1
  %368 = getelementptr inbounds %class.SkPath, %class.SkPath* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 %367, i8* %368 monotonic, align 1
  %369 = load %class.SkPathRef*, %class.SkPathRef** %340, align 8
  %370 = icmp eq %class.SkPathRef* %369, null
  br i1 %370, label %377, label %371

371:                                              ; preds = %356
  %372 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %369, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %373 = atomicrmw add i32* %372, i32 -1 acq_rel
  %374 = icmp eq i32 %373, 1
  br i1 %374, label %375, label %377

375:                                              ; preds = %371
  tail call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %369) #24
  %376 = bitcast %class.SkPathRef* %369 to i8*
  tail call void @_ZdlPv(i8* %376) #25
  br label %377

377:                                              ; preds = %356, %371, %375
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %338) #24
  br label %378

378:                                              ; preds = %21, %336, %377, %83
  %379 = phi i1 [ false, %21 ], [ true, %377 ], [ true, %336 ], [ false, %83 ]
  ret i1 %379
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"*, %struct.SkPoint* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %8, label %51

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 7
  %10 = load i8, i8* %9, align 1, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %207, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5
  %14 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 0, i32 0
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %14, i64 0, i32 0
  %18 = load float, float* %17, align 4
  %19 = fcmp une float %16, %18
  br i1 %19, label %26, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5, i32 1
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4, i32 1
  %24 = load float, float* %23, align 4
  %25 = fcmp une float %22, %24
  br i1 %25, label %26, label %36

26:                                               ; preds = %20, %12
  %27 = fcmp uno float %16, 0.000000e+00
  br i1 %27, label %50, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5, i32 1
  %30 = load float, float* %29, align 4
  %31 = fcmp uno float %30, %18
  br i1 %31, label %50, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4, i32 1
  %34 = load float, float* %33, align 4
  %35 = fcmp uno float %34, 0.000000e+00
  br i1 %35, label %50, label %40

36:                                               ; preds = %20
  %37 = bitcast %struct.SkPoint* %14 to i64*
  %38 = bitcast %struct.SkPoint* %1 to i64*
  %39 = load i64, i64* %37, align 4
  store i64 %39, i64* %38, align 4
  br label %50

40:                                               ; preds = %32
  %41 = bitcast %struct.SkPoint* %13 to i64*
  %42 = bitcast %struct.SkPoint* %1 to i64*
  %43 = load i64, i64* %41, align 4
  store i64 %43, i64* %42, align 4
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %45 = bitcast %struct.SkPoint* %14 to i64*
  %46 = bitcast %struct.SkPoint* %44 to i64*
  %47 = load i64, i64* %45, align 4
  store i64 %47, i64* %46, align 4
  %48 = load i64, i64* %45, align 4
  store i64 %48, i64* %41, align 8
  %49 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 8
  store i8 1, i8* %49, align 2
  br label %207

50:                                               ; preds = %36, %32, %28, %26
  store i8 0, i8* %9, align 1
  br label %207

51:                                               ; preds = %2
  %52 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %52, i8** %3, align 8
  %53 = load i8, i8* %4, align 1
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 0
  %56 = load %struct.SkPoint*, %struct.SkPoint** %55, align 8
  switch i8 %53, label %204 [
    i8 0, label %57
    i8 1, label %115
    i8 3, label %127
    i8 2, label %131
    i8 4, label %143
    i8 5, label %155
  ]

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 7
  %59 = load i8, i8* %58, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %100, label %61

61:                                               ; preds = %57
  store i8* %4, i8** %3, align 8
  %62 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5
  %63 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %62, i64 0, i32 0
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %63, i64 0, i32 0
  %67 = load float, float* %66, align 4
  %68 = fcmp une float %65, %67
  br i1 %68, label %75, label %69

69:                                               ; preds = %61
  %70 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5, i32 1
  %71 = load float, float* %70, align 4
  %72 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4, i32 1
  %73 = load float, float* %72, align 4
  %74 = fcmp une float %71, %73
  br i1 %74, label %75, label %85

75:                                               ; preds = %69, %61
  %76 = fcmp uno float %65, 0.000000e+00
  br i1 %76, label %99, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5, i32 1
  %79 = load float, float* %78, align 4
  %80 = fcmp uno float %79, %67
  br i1 %80, label %99, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4, i32 1
  %83 = load float, float* %82, align 4
  %84 = fcmp uno float %83, 0.000000e+00
  br i1 %84, label %99, label %89

85:                                               ; preds = %69
  %86 = bitcast %struct.SkPoint* %63 to i64*
  %87 = bitcast %struct.SkPoint* %1 to i64*
  %88 = load i64, i64* %86, align 4
  store i64 %88, i64* %87, align 4
  br label %99

89:                                               ; preds = %81
  %90 = bitcast %struct.SkPoint* %62 to i64*
  %91 = bitcast %struct.SkPoint* %1 to i64*
  %92 = load i64, i64* %90, align 4
  store i64 %92, i64* %91, align 4
  %93 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %94 = bitcast %struct.SkPoint* %63 to i64*
  %95 = bitcast %struct.SkPoint* %93 to i64*
  %96 = load i64, i64* %94, align 4
  store i64 %96, i64* %95, align 4
  %97 = load i64, i64* %94, align 4
  store i64 %97, i64* %90, align 8
  %98 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 8
  store i8 1, i8* %98, align 2
  br label %207

99:                                               ; preds = %85, %81, %77, %75
  store i8 0, i8* %58, align 1
  br label %207

100:                                              ; preds = %57
  %101 = icmp eq i8* %52, %6
  br i1 %101, label %207, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4
  %104 = bitcast %struct.SkPoint* %56 to i64*
  %105 = bitcast %struct.SkPoint* %103 to i64*
  %106 = load i64, i64* %104, align 4
  store i64 %106, i64* %105, align 8
  %107 = bitcast %struct.SkPoint* %1 to i64*
  %108 = load i64, i64* %104, align 4
  store i64 %108, i64* %107, align 4
  %109 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 1
  %110 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5
  %111 = bitcast %struct.SkPoint* %110 to i64*
  %112 = load i64, i64* %105, align 4
  store i64 %112, i64* %111, align 8
  %113 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 6
  %114 = load i8, i8* %113, align 8, !range !2
  store i8 %114, i8* %58, align 1
  br label %204

115:                                              ; preds = %51
  %116 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5
  %117 = bitcast %struct.SkPoint* %116 to i64*
  %118 = bitcast %struct.SkPoint* %1 to i64*
  %119 = load i64, i64* %117, align 4
  store i64 %119, i64* %118, align 4
  %120 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %121 = bitcast %struct.SkPoint* %56 to i64*
  %122 = bitcast %struct.SkPoint* %120 to i64*
  %123 = load i64, i64* %121, align 4
  store i64 %123, i64* %122, align 4
  %124 = load i64, i64* %121, align 4
  store i64 %124, i64* %117, align 8
  %125 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 8
  store i8 0, i8* %125, align 2
  %126 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 1
  br label %204

127:                                              ; preds = %51
  %128 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 3
  %129 = load float*, float** %128, align 8
  %130 = getelementptr inbounds float, float* %129, i64 1
  store float* %130, float** %128, align 8
  br label %131

131:                                              ; preds = %51, %127
  %132 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5
  %133 = bitcast %struct.SkPoint* %132 to i64*
  %134 = bitcast %struct.SkPoint* %1 to i64*
  %135 = load i64, i64* %133, align 4
  store i64 %135, i64* %134, align 4
  %136 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %137 = bitcast %struct.SkPoint* %136 to i8*
  %138 = bitcast %struct.SkPoint* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %137, i8* align 4 %138, i64 16, i1 false)
  %139 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 1
  %140 = bitcast %struct.SkPoint* %139 to i64*
  %141 = load i64, i64* %140, align 4
  store i64 %141, i64* %133, align 8
  %142 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 2
  br label %204

143:                                              ; preds = %51
  %144 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5
  %145 = bitcast %struct.SkPoint* %144 to i64*
  %146 = bitcast %struct.SkPoint* %1 to i64*
  %147 = load i64, i64* %145, align 4
  store i64 %147, i64* %146, align 4
  %148 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %149 = bitcast %struct.SkPoint* %148 to i8*
  %150 = bitcast %struct.SkPoint* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %149, i8* align 4 %150, i64 24, i1 false)
  %151 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 2
  %152 = bitcast %struct.SkPoint* %151 to i64*
  %153 = load i64, i64* %152, align 4
  store i64 %153, i64* %145, align 8
  %154 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 3
  br label %204

155:                                              ; preds = %51
  %156 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5
  %157 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4
  %158 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %156, i64 0, i32 0
  %159 = load float, float* %158, align 4
  %160 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %157, i64 0, i32 0
  %161 = load float, float* %160, align 4
  %162 = fcmp une float %159, %161
  br i1 %162, label %169, label %163

163:                                              ; preds = %155
  %164 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5, i32 1
  %165 = load float, float* %164, align 4
  %166 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4, i32 1
  %167 = load float, float* %166, align 4
  %168 = fcmp une float %165, %167
  br i1 %168, label %169, label %179

169:                                              ; preds = %163, %155
  %170 = fcmp uno float %159, 0.000000e+00
  br i1 %170, label %195, label %171

171:                                              ; preds = %169
  %172 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5, i32 1
  %173 = load float, float* %172, align 4
  %174 = fcmp uno float %173, %161
  br i1 %174, label %195, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4, i32 1
  %177 = load float, float* %176, align 4
  %178 = fcmp uno float %177, 0.000000e+00
  br i1 %178, label %195, label %183

179:                                              ; preds = %163
  %180 = bitcast %struct.SkPoint* %157 to i64*
  %181 = bitcast %struct.SkPoint* %1 to i64*
  %182 = load i64, i64* %180, align 4
  store i64 %182, i64* %181, align 4
  br label %195

183:                                              ; preds = %175
  %184 = bitcast %struct.SkPoint* %156 to i64*
  %185 = bitcast %struct.SkPoint* %1 to i64*
  %186 = load i64, i64* %184, align 4
  store i64 %186, i64* %185, align 4
  %187 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %188 = bitcast %struct.SkPoint* %157 to i64*
  %189 = bitcast %struct.SkPoint* %187 to i64*
  %190 = load i64, i64* %188, align 4
  store i64 %190, i64* %189, align 4
  %191 = load i64, i64* %188, align 4
  store i64 %191, i64* %184, align 8
  %192 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 8
  store i8 1, i8* %192, align 2
  %193 = load i8*, i8** %3, align 8
  %194 = getelementptr inbounds i8, i8* %193, i64 -1
  store i8* %194, i8** %3, align 8
  br label %200

195:                                              ; preds = %179, %175, %171, %169
  %196 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 7
  store i8 0, i8* %196, align 1
  %197 = bitcast %struct.SkPoint* %157 to i64*
  %198 = load i64, i64* %197, align 4
  %199 = bitcast %struct.SkPoint* %156 to i64*
  br label %200

200:                                              ; preds = %195, %183
  %201 = phi i64* [ %199, %195 ], [ %184, %183 ]
  %202 = phi i64 [ %198, %195 ], [ %191, %183 ]
  %203 = phi i32 [ 5, %195 ], [ 1, %183 ]
  store i64 %202, i64* %201, align 8
  br label %204

204:                                              ; preds = %51, %200, %143, %131, %115, %102
  %205 = phi i32 [ %54, %51 ], [ %203, %200 ], [ 4, %143 ], [ %54, %131 ], [ 1, %115 ], [ 0, %102 ]
  %206 = phi %struct.SkPoint* [ %56, %51 ], [ %56, %200 ], [ %154, %143 ], [ %142, %131 ], [ %126, %115 ], [ %109, %102 ]
  store %struct.SkPoint* %206, %struct.SkPoint** %55, align 8
  br label %207

207:                                              ; preds = %89, %40, %204, %99, %100, %8, %50
  %208 = phi i32 [ 5, %50 ], [ 1, %40 ], [ 6, %8 ], [ %205, %204 ], [ 5, %99 ], [ 1, %89 ], [ 6, %100 ]
  ret i32 %208
}

declare float @_ZN7SkConic10TransformWEPK7SkPointfRK8SkMatrix(%struct.SkPoint*, float, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL18subdivide_cubic_toP6SkPathPK7SkPointi(%class.SkPath*, %struct.SkPoint*, i32) unnamed_addr #0 {
  %4 = alloca [7 x %struct.SkPoint], align 16
  %5 = add nsw i32 %2, -1
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = bitcast [7 x %struct.SkPoint]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %8, i8 -1, i64 56, i1 false)
  %9 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %4, i64 0, i64 0
  call void @_Z17SkChopCubicAtHalfPK7SkPointPS_(%struct.SkPoint* %1, %struct.SkPoint* nonnull %9) #24
  call fastcc void @_ZL18subdivide_cubic_toP6SkPathPK7SkPointi(%class.SkPath* %0, %struct.SkPoint* nonnull %9, i32 %5)
  %10 = getelementptr inbounds [7 x %struct.SkPoint], [7 x %struct.SkPoint]* %4, i64 0, i64 3
  call fastcc void @_ZL18subdivide_cubic_toP6SkPathPK7SkPointi(%class.SkPath* %0, %struct.SkPoint* %10, i32 %5)
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #24
  br label %25

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 0
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3, i32 0
  %21 = load float, float* %20, align 4
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3, i32 1
  %23 = load float, float* %22, align 4
  %24 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %0, float %13, float %15, float %17, float %19, float %21, float %23) #24
  br label %25

25:                                               ; preds = %11, %7
  ret void
}

declare void @_ZN9SkPathRef21CreateTransformedCopyEP5sk_spIS_ERKS_RK8SkMatrix(%class.sk_sp*, %class.SkPathRef* dereferenceable(120), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN10SkPathPriv13IsAxisAlignedERK6SkPath(%class.SkPath* nocapture readonly dereferenceable(16)) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 3, i32 0
  %5 = load %struct.SkPoint*, %struct.SkPoint** %4, align 8
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 3, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp sgt i32 %7, 1
  br i1 %8, label %9, label %29

9:                                                ; preds = %1
  %10 = zext i32 %7 to i64
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 0, i32 0
  %12 = load float, float* %11, align 4
  br label %13

13:                                               ; preds = %26, %9
  %14 = phi float [ %12, %9 ], [ %17, %26 ]
  %15 = phi i64 [ 1, %9 ], [ %27, %26 ]
  %16 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 %15, i32 0
  %17 = load float, float* %16, align 4
  %18 = fcmp une float %14, %17
  br i1 %18, label %19, label %26

19:                                               ; preds = %13
  %20 = add nsw i64 %15, -1
  %21 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 %20, i32 1
  %22 = load float, float* %21, align 4
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %5, i64 %15, i32 1
  %24 = load float, float* %23, align 4
  %25 = fcmp une float %22, %24
  br i1 %25, label %29, label %26

26:                                               ; preds = %13, %19
  %27 = add nuw nsw i64 %15, 1
  %28 = icmp eq i64 %27, %10
  br i1 %28, label %29, label %13

29:                                               ; preds = %19, %26, %1
  %30 = phi i1 [ true, %1 ], [ true, %26 ], [ false, %19 ]
  ret i1 %30
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6SkPath4IterC2Ev(%"class.SkPath::Iter"* nocapture) unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 7
  store i8 0, i8* %3, align 1
  %4 = bitcast i8** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath4IterC2ERKS_b(%"class.SkPath::Iter"* nocapture, %class.SkPath* nocapture readonly dereferenceable(16), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %5, i64 0, i32 3, i32 0
  %7 = bitcast %struct.SkPoint** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.SkPath::Iter"* %0 to i64*
  store i64 %8, i64* %9, align 8
  %10 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 4, i32 0
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 4, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 4, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  br label %25

25:                                               ; preds = %3, %20
  %26 = phi i8* [ %24, %20 ], [ null, %3 ]
  %27 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 2
  store i8* %26, i8** %27, align 8
  %28 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %28, i64 0, i32 5, i32 0
  %30 = load float*, float** %29, align 8
  %31 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 3
  %32 = icmp eq float* %30, null
  %33 = getelementptr inbounds float, float* %30, i64 -1
  %34 = select i1 %32, float* null, float* %33
  store float* %34, float** %31, align 8
  %35 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4, i32 0
  %36 = zext i1 %2 to i8
  %37 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 6
  %38 = bitcast float* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #24
  store i8 %36, i8* %37, align 8
  %39 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 7
  store i8 0, i8* %39, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6SkPath4Iter7setPathERKS_b(%"class.SkPath::Iter"* nocapture, %class.SkPath* nocapture readonly dereferenceable(16), i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %5 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %5, i64 0, i32 3, i32 0
  %7 = bitcast %struct.SkPoint** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.SkPath::Iter"* %0 to i64*
  store i64 %8, i64* %9, align 8
  %10 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 4, i32 0
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 1
  %15 = bitcast i8** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 4, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 4, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, i8* %18, i64 %23
  br label %25

25:                                               ; preds = %3, %20
  %26 = phi i8* [ %24, %20 ], [ null, %3 ]
  %27 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 2
  store i8* %26, i8** %27, align 8
  %28 = load %class.SkPathRef*, %class.SkPathRef** %4, align 8
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %28, i64 0, i32 5, i32 0
  %30 = load float*, float** %29, align 8
  %31 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 3
  %32 = icmp eq float* %30, null
  %33 = getelementptr inbounds float, float* %30, i64 -1
  %34 = select i1 %32, float* null, float* %33
  store float* %34, float** %31, align 8
  %35 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4, i32 0
  %36 = zext i1 %2 to i8
  %37 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 6
  %38 = bitcast float* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false)
  store i8 %36, i8* %37, align 8
  %39 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 7
  store i8 0, i8* %39, align 1
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath4Iter15isClosedContourEv(%"class.SkPath::Iter"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %29, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %3, %7
  br i1 %8, label %29, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 6
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %9
  %14 = load i8, i8* %3, align 1
  %15 = icmp eq i8 %14, 0
  %16 = getelementptr inbounds i8, i8* %3, i64 1
  %17 = select i1 %15, i8* %16, i8* %3
  br label %18

18:                                               ; preds = %21, %13
  %19 = phi i8* [ %17, %13 ], [ %22, %21 ]
  %20 = icmp ult i8* %19, %7
  br i1 %20, label %21, label %29

21:                                               ; preds = %18
  %22 = getelementptr inbounds i8, i8* %19, i64 1
  %23 = load i8, i8* %19, align 1
  %24 = icmp eq i8 %23, 5
  %25 = zext i1 %24 to i32
  %26 = icmp eq i8 %23, 0
  %27 = select i1 %26, i32 3, i32 %25
  switch i32 %27, label %28 [
    i32 0, label %18
    i32 3, label %29
  ]

28:                                               ; preds = %21
  br label %29

29:                                               ; preds = %18, %21, %28, %9, %1, %5
  %30 = phi i1 [ false, %5 ], [ false, %1 ], [ true, %9 ], [ true, %28 ], [ false, %21 ], [ false, %18 ]
  ret i1 %30
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZN6SkPath4Iter9autoCloseEP7SkPoint(%"class.SkPath::Iter"* nocapture, %struct.SkPoint* nocapture) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %4, i64 0, i32 0
  %8 = load float, float* %7, align 4
  %9 = fcmp une float %6, %8
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4, i32 1
  %14 = load float, float* %13, align 4
  %15 = fcmp une float %12, %14
  br i1 %15, label %16, label %36

16:                                               ; preds = %2, %10
  %17 = fcmp uno float %6, 0.000000e+00
  br i1 %17, label %40, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 5, i32 1
  %20 = load float, float* %19, align 4
  %21 = fcmp uno float %20, %8
  br i1 %21, label %40, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 4, i32 1
  %24 = load float, float* %23, align 4
  %25 = fcmp uno float %24, 0.000000e+00
  br i1 %25, label %40, label %26

26:                                               ; preds = %22
  %27 = bitcast %struct.SkPoint* %3 to i64*
  %28 = bitcast %struct.SkPoint* %1 to i64*
  %29 = load i64, i64* %27, align 4
  store i64 %29, i64* %28, align 4
  %30 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %31 = bitcast %struct.SkPoint* %4 to i64*
  %32 = bitcast %struct.SkPoint* %30 to i64*
  %33 = load i64, i64* %31, align 4
  store i64 %33, i64* %32, align 4
  %34 = load i64, i64* %31, align 4
  store i64 %34, i64* %27, align 8
  %35 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %0, i64 0, i32 8
  store i8 1, i8* %35, align 2
  br label %40

36:                                               ; preds = %10
  %37 = bitcast %struct.SkPoint* %4 to i64*
  %38 = bitcast %struct.SkPoint* %1 to i64*
  %39 = load i64, i64* %37, align 4
  store i64 %39, i64* %38, align 4
  br label %40

40:                                               ; preds = %16, %18, %22, %36, %26
  %41 = phi i32 [ 1, %26 ], [ 5, %36 ], [ 5, %22 ], [ 5, %18 ], [ 5, %16 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath7RawIter7setPathERKS_(%"class.SkPath::RawIter"* nocapture, %class.SkPath* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 4, i32 0
  %6 = bitcast i8** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 9
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = inttoptr i64 %7 to i8*
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 10
  %14 = load i8, i8* %13, align 1, !range !2
  br label %27

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 1
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 0
  %18 = load %struct.SkPoint*, %struct.SkPoint** %17, align 8
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %16, %struct.SkPoint* %18, i32 %20) #24
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 10
  %23 = zext i1 %21 to i8
  store i8 %23, i8* %22, align 1
  store i8 0, i8* %8, align 8
  %24 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %24, i64 0, i32 4, i32 0
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %15, %11
  %28 = phi i8* [ %12, %11 ], [ %26, %15 ]
  %29 = phi %class.SkPathRef* [ %4, %11 ], [ %24, %15 ]
  %30 = phi i8 [ %14, %11 ], [ %23, %15 ]
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %39, label %32

32:                                               ; preds = %27
  %33 = icmp eq i8* %28, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %32
  %35 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %29, i64 0, i32 4, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %28, i64 %37
  br label %39

39:                                               ; preds = %27, %32, %34
  %40 = phi i8* [ %38, %34 ], [ null, %32 ], [ %28, %27 ]
  %41 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %29, i64 0, i32 3, i32 0
  %42 = bitcast %struct.SkPoint** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %29, i64 0, i32 5, i32 0
  %45 = bitcast float** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = ptrtoint i8* %40 to i64
  %48 = bitcast %"class.SkPath::RawIter"* %0 to i64*
  store i64 %7, i64* %48, align 8
  %49 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 1
  %50 = bitcast %struct.SkPoint** %49 to i64*
  store i64 %43, i64* %50, align 8
  %51 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 2
  %52 = bitcast float** %51 to i64*
  store i64 %46, i64* %52, align 8
  %53 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 1
  %54 = bitcast %"class.SkPath::RangeIter"* %53 to i64*
  store i64 %47, i64* %54, align 8
  %55 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 1, i32 1
  %56 = bitcast %struct.SkPoint** %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6SkPath7RawIter4nextEP7SkPoint(%"class.SkPath::RawIter"* nocapture, %struct.SkPoint* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 1, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %69, label %8

8:                                                ; preds = %2
  %9 = load i8, i8* %4, align 1, !noalias !20
  %10 = zext i8 %9 to i32
  switch i8 %9, label %11 [
    i8 0, label %12
    i8 1, label %16
    i8 2, label %21
    i8 3, label %26
    i8 4, label %36
    i8 5, label %41
  ]

11:                                               ; preds = %8
  tail call void @llvm.trap() #24, !noalias !20
  unreachable

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 1
  %14 = load %struct.SkPoint*, %struct.SkPoint** %13, align 8, !noalias !20
  %15 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 2
  br label %46

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 1
  %18 = load %struct.SkPoint*, %struct.SkPoint** %17, align 8, !noalias !20
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %18, i64 -1
  %20 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 2
  br label %46

21:                                               ; preds = %8
  %22 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 1
  %23 = load %struct.SkPoint*, %struct.SkPoint** %22, align 8, !noalias !20
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %23, i64 -1
  %25 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 2
  br label %46

26:                                               ; preds = %8
  %27 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 1
  %28 = load %struct.SkPoint*, %struct.SkPoint** %27, align 8, !noalias !20
  %29 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %28, i64 -1
  %30 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 2
  %31 = bitcast float** %30 to i32**
  %32 = load i32*, i32** %31, align 8, !noalias !20
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 2
  %35 = bitcast float* %34 to i32*
  store i32 %33, i32* %35, align 8
  br label %46

36:                                               ; preds = %8
  %37 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 1
  %38 = load %struct.SkPoint*, %struct.SkPoint** %37, align 8, !noalias !20
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %38, i64 -1
  %40 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 2
  br label %46

41:                                               ; preds = %8
  %42 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 1
  %43 = load %struct.SkPoint*, %struct.SkPoint** %42, align 8, !noalias !20
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %43, i64 -1
  %45 = getelementptr inbounds %"class.SkPath::RawIter", %"class.SkPath::RawIter"* %0, i64 0, i32 0, i32 2
  br label %46

46:                                               ; preds = %41, %36, %26, %21, %16, %12
  %47 = phi float** [ %45, %41 ], [ %40, %36 ], [ %30, %26 ], [ %25, %21 ], [ %20, %16 ], [ %15, %12 ]
  %48 = phi %struct.SkPoint* [ %44, %41 ], [ %39, %36 ], [ %29, %26 ], [ %24, %21 ], [ %19, %16 ], [ %14, %12 ]
  %49 = phi %struct.SkPoint** [ %42, %41 ], [ %37, %36 ], [ %27, %26 ], [ %22, %21 ], [ %17, %16 ], [ %13, %12 ]
  %50 = phi i64 [ 0, %41 ], [ 32, %36 ], [ 24, %26 ], [ 24, %21 ], [ 16, %16 ], [ 8, %12 ]
  %51 = bitcast %struct.SkPoint* %1 to i8*
  %52 = bitcast %struct.SkPoint* %48 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %51, i8* align 4 %52, i64 %50, i1 false)
  %53 = load i8*, i8** %3, align 8
  %54 = getelementptr inbounds i8, i8* %53, i64 1
  store i8* %54, i8** %3, align 8
  %55 = load i8, i8* %53, align 1
  switch i8 %55, label %59 [
    i8 0, label %60
    i8 1, label %60
    i8 2, label %56
    i8 3, label %64
    i8 4, label %57
    i8 5, label %58
  ]

56:                                               ; preds = %46
  br label %60

57:                                               ; preds = %46
  br label %60

58:                                               ; preds = %46
  br label %60

59:                                               ; preds = %46
  tail call void @llvm.trap() #24
  unreachable

60:                                               ; preds = %58, %57, %56, %46, %46
  %61 = phi i64 [ 1, %46 ], [ 1, %46 ], [ 2, %56 ], [ 3, %57 ], [ 0, %58 ]
  %62 = load %struct.SkPoint*, %struct.SkPoint** %49, align 8
  %63 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %62, i64 %61
  store %struct.SkPoint* %63, %struct.SkPoint** %49, align 8
  br label %69

64:                                               ; preds = %46
  %65 = load %struct.SkPoint*, %struct.SkPoint** %49, align 8
  %66 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %65, i64 2
  store %struct.SkPoint* %66, %struct.SkPoint** %49, align 8
  %67 = load float*, float** %47, align 8
  %68 = getelementptr inbounds float, float* %67, i64 1
  store float* %68, float** %47, align 8
  br label %69

69:                                               ; preds = %2, %64, %60
  %70 = phi i32 [ 6, %2 ], [ %10, %60 ], [ %10, %64 ]
  ret i32 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkPath4dumpEP9SkWStreamb(%class.SkPath* nocapture readonly, %class.SkWStream*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.SkPath::Iter", align 8
  %5 = alloca [4 x %struct.SkPoint], align 16
  %6 = alloca %class.SkString, align 8
  %7 = zext i1 %2 to i32
  %8 = bitcast %"class.SkPath::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #24
  %9 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %4, i64 0, i32 1
  %10 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %4, i64 0, i32 2
  %11 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %4, i64 0, i32 3
  %12 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %4, i64 0, i32 4, i32 0
  %13 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %4, i64 0, i32 2
  %14 = bitcast i8** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false)
  %15 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %4, i64 0, i32 6
  %16 = bitcast float* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 -1, i64 16, i1 false)
  %17 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %18 = bitcast i8* %15 to i64*
  store i64 -6148914691236517206, i64* %18, align 8
  %19 = load %class.SkPathRef*, %class.SkPathRef** %17, align 8
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 3, i32 0
  %21 = bitcast %struct.SkPoint** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.SkPath::Iter"* %4 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 4, i32 0
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i8** %9 to i64*
  store i64 %26, i64* %27, align 8
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %3
  %30 = inttoptr i64 %26 to i8*
  %31 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 4, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %30, i64 %33
  br label %35

35:                                               ; preds = %3, %29
  %36 = phi i8* [ %34, %29 ], [ null, %3 ]
  store i8* %36, i8** %10, align 8
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %19, i64 0, i32 5, i32 0
  %38 = load float*, float** %37, align 8
  %39 = icmp eq float* %38, null
  %40 = getelementptr inbounds float, float* %38, i64 -1
  %41 = select i1 %39, float* null, float* %40
  store float* %41, float** %11, align 8
  %42 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  %43 = bitcast float* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 18, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #24
  %44 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 0
  %45 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %5, i64 0, i64 1
  %46 = bitcast %class.SkString* %6 to i8*
  %47 = bitcast [4 x %struct.SkPoint]* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %47, i8 -1, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #24
  %48 = getelementptr inbounds %class.SkString, %class.SkString* %6, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %48, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %6) #24
  %49 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %50 = load i8, i8* %49, align 2
  %51 = and i8 %50, 3
  %52 = zext i8 %51 to i64
  %53 = getelementptr inbounds [4 x i8*], [4 x i8*]* @_ZZNK6SkPath10dumpArraysEP9SkWStreambE13gFillTypeStrs, i64 0, i64 %52
  %54 = load i8*, i8** %53, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %6, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i8* %54) #24
  %55 = icmp eq %class.SkWStream* %1, null
  br label %56

56:                                               ; preds = %73, %35
  %57 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %4, %struct.SkPoint* nonnull %44)
  switch i32 %57, label %66 [
    i32 6, label %76
    i32 0, label %58
    i32 1, label %59
    i32 2, label %60
    i32 3, label %61
    i32 4, label %64
    i32 5, label %65
  ]

58:                                               ; preds = %56
  call fastcc void @_ZL13append_paramsP8SkStringPKcPK7SkPointi20SkScalarAsStringTypef(%class.SkString* nonnull %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), %struct.SkPoint* nonnull %44, i32 1, i32 %7, float -1.234500e+04)
  br label %67

59:                                               ; preds = %56
  call fastcc void @_ZL13append_paramsP8SkStringPKcPK7SkPointi20SkScalarAsStringTypef(%class.SkString* nonnull %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), %struct.SkPoint* %45, i32 1, i32 %7, float -1.234500e+04)
  br label %67

60:                                               ; preds = %56
  call fastcc void @_ZL13append_paramsP8SkStringPKcPK7SkPointi20SkScalarAsStringTypef(%class.SkString* nonnull %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.7, i64 0, i64 0), %struct.SkPoint* %45, i32 2, i32 %7, float -1.234500e+04)
  br label %67

61:                                               ; preds = %56
  %62 = load float*, float** %11, align 8
  %63 = load float, float* %62, align 4
  call fastcc void @_ZL13append_paramsP8SkStringPKcPK7SkPointi20SkScalarAsStringTypef(%class.SkString* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), %struct.SkPoint* %45, i32 2, i32 %7, float %63)
  br label %67

64:                                               ; preds = %56
  call fastcc void @_ZL13append_paramsP8SkStringPKcPK7SkPointi20SkScalarAsStringTypef(%class.SkString* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i64 0, i64 0), %struct.SkPoint* %45, i32 3, i32 %7, float -1.234500e+04)
  br label %67

65:                                               ; preds = %56
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %6, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0)) #24
  br label %67

66:                                               ; preds = %56
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0), i32 1928, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.12, i64 0, i64 0), i32 %57) #24
  br label %67

67:                                               ; preds = %66, %65, %64, %61, %60, %59, %58
  br i1 %55, label %68, label %73

68:                                               ; preds = %67
  %69 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %48, align 8
  %70 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %69, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %68, %67, %74
  br label %56

74:                                               ; preds = %68
  %75 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %69, i64 0, i32 2
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0), i32 1933, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i8* %75) #24
  call void @_ZN8SkString5resetEv(%class.SkString* nonnull %6) #24
  br label %73

76:                                               ; preds = %56
  br i1 %55, label %86, label %77

77:                                               ; preds = %76
  %78 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %48, align 8
  %79 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %78, i64 0, i32 2
  %80 = call i64 @strlen(i8* %79) #27
  %81 = bitcast %class.SkWStream* %1 to i1 (%class.SkWStream*, i8*, i64)***
  %82 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %81, align 8
  %83 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %82, i64 2
  %84 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %83, align 8
  %85 = call zeroext i1 %84(%class.SkWStream* nonnull %1, i8* %79, i64 %80) #24
  br label %86

86:                                               ; preds = %76, %77
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %6) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #24
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #24
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #24
  ret void
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #1

declare void @_ZN8SkString6printfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL13append_paramsP8SkStringPKcPK7SkPointi20SkScalarAsStringTypef(%class.SkString*, i8*, %struct.SkPoint* nocapture readonly, i32, i32, float) unnamed_addr #0 {
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %0, i64 -1, i8* %1) #24
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #24
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %8 = shl nsw i32 %3, 1
  %9 = icmp sgt i32 %3, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = add nsw i32 %8, -1
  %12 = sext i32 %11 to i64
  %13 = sext i32 %8 to i64
  br label %16

14:                                               ; preds = %22, %6
  %15 = fcmp une float %5, -1.234500e+04
  br i1 %15, label %25, label %26

16:                                               ; preds = %10, %22
  %17 = phi i64 [ 0, %10 ], [ %23, %22 ]
  %18 = getelementptr inbounds float, float* %7, i64 %17
  %19 = load float, float* %18, align 4
  tail call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* %0, float %19, i32 %4) #24
  %20 = icmp slt i64 %17, %12
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #24
  br label %22

22:                                               ; preds = %16, %21
  %23 = add nuw nsw i64 %17, 1
  %24 = icmp slt i64 %23, %13
  br i1 %24, label %16, label %14

25:                                               ; preds = %14
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #24
  tail call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* %0, float %5, i32 %4) #24
  br label %26

26:                                               ; preds = %25, %14
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.42, i64 0, i64 0)) #24
  %27 = icmp eq i32 %4, 1
  br i1 %27, label %28, label %45

28:                                               ; preds = %26
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.43, i64 0, i64 0)) #24
  br i1 %9, label %29, label %33

29:                                               ; preds = %28
  %30 = add nsw i32 %8, -1
  %31 = sext i32 %30 to i64
  %32 = sext i32 %8 to i64
  br label %35

33:                                               ; preds = %41, %28
  %34 = fcmp ult float %5, 0.000000e+00
  br i1 %34, label %45, label %44

35:                                               ; preds = %29, %41
  %36 = phi i64 [ 0, %29 ], [ %42, %41 ]
  %37 = getelementptr inbounds float, float* %7, i64 %36
  %38 = load float, float* %37, align 4
  tail call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* %0, float %38, i32 0) #24
  %39 = icmp slt i64 %36, %31
  br i1 %39, label %40, label %41

40:                                               ; preds = %35
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #24
  br label %41

41:                                               ; preds = %35, %40
  %42 = add nuw nsw i64 %36, 1
  %43 = icmp slt i64 %42, %32
  br i1 %43, label %35, label %33

44:                                               ; preds = %33
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %0, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #24
  tail call void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString* %0, float %5, i32 0) #24
  br label %45

45:                                               ; preds = %33, %44, %26
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %0, i64 -1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.44, i64 0, i64 0)) #24
  ret void
}

declare void @_Z17SkDebugf_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #1

declare void @_ZN8SkString5resetEv(%class.SkString*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6SkPath10dumpArraysEP9SkWStreamb(%class.SkPath* nocapture readonly, %class.SkWStream*, i1 zeroext) local_unnamed_addr #5 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = alloca [6 x i8*], align 16
  %6 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #24
  %7 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %7, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %4) #24
  %8 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %9 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %10 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %9, i64 0, i32 9
  %11 = load i8, i8* %10, align 8
  %12 = icmp eq i8 %11, 0
  %13 = select i1 %12, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0), i8* %13) #24
  %14 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 6
  %16 = load i32, i32* %15, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0), i32 %16) #24
  %17 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 15
  %19 = load i8, i8* %18, align 2
  %20 = zext i8 %19 to i32
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0), i32 %20) #24
  %21 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %21, i64 0, i32 11
  %23 = load i8, i8* %22, align 2, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = select i1 %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i64 0, i64 0), i8* %25) #24
  %26 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %26, i64 0, i32 12
  %28 = load i8, i8* %27, align 1, !range !2
  %29 = icmp eq i8 %28, 0
  %30 = select i1 %29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i8* %30) #24
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.19, i64 0, i64 0)) #24
  %31 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %31, i64 0, i32 3, i32 2
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, 0
  br i1 %34, label %45, label %35

35:                                               ; preds = %70, %3
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.23, i64 0, i64 0)) #24
  %36 = bitcast [6 x i8*]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #24
  %37 = bitcast [6 x i8*]* %5 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0)>, <2 x i8*>* %37, align 16
  %38 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 2
  %39 = bitcast i8** %38 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.27, i64 0, i64 0)>, <2 x i8*>* %39, align 16
  %40 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 4
  %41 = bitcast i8** %40 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.29, i64 0, i64 0)>, <2 x i8*>* %41, align 16
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.30, i64 0, i64 0)) #24
  %42 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %43 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %42, i64 0, i32 4, i32 0
  %44 = load i8*, i8** %43, align 8
  br label %77

45:                                               ; preds = %3, %70
  %46 = phi i64 [ %71, %70 ], [ 0, %3 ]
  %47 = phi i32 [ %74, %70 ], [ %33, %3 ]
  %48 = phi %class.SkPathRef* [ %72, %70 ], [ %31, %3 ]
  %49 = zext i32 %47 to i64
  %50 = icmp ult i64 %46, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %45
  %52 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %48, i64 0, i32 3, i32 0
  %53 = load %struct.SkPoint*, %struct.SkPoint** %52, align 8
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %53, i64 %46
  %55 = bitcast %struct.SkPoint* %54 to <2 x float>*
  %56 = load <2 x float>, <2 x float>* %55, align 4
  br label %57

57:                                               ; preds = %45, %51
  %58 = phi <2 x float> [ %56, %51 ], [ zeroinitializer, %45 ]
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i64 0, i64 0)) #24
  %59 = extractelement <2 x float> %58, i32 0
  br i1 %2, label %60, label %66

60:                                               ; preds = %57
  %61 = bitcast float %59 to i32
  %62 = fpext float %59 to double
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i64 0, i64 0), i32 %61, double %62) #24
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #24
  %63 = extractelement <2 x float> %58, i32 1
  %64 = bitcast float %63 to i32
  %65 = fpext float %63 to double
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i64 0, i64 0), i32 %64, double %65) #24
  br label %70

66:                                               ; preds = %57
  %67 = fpext float %59 to double
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), double %67) #24
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #24
  %68 = extractelement <2 x float> %58, i32 1
  %69 = fpext float %68 to double
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), double %69) #24
  br label %70

70:                                               ; preds = %60, %66
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0)) #24
  %71 = add nuw nsw i64 %46, 1
  %72 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %73 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %72, i64 0, i32 3, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = sext i32 %74 to i64
  %76 = icmp slt i64 %71, %75
  br i1 %76, label %45, label %35

77:                                               ; preds = %108, %35
  %78 = phi i8* [ %44, %35 ], [ %116, %108 ]
  %79 = phi %class.SkPathRef* [ %42, %35 ], [ %114, %108 ]
  %80 = phi i8* [ %44, %35 ], [ %113, %108 ]
  %81 = icmp eq i8* %78, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %79, i64 0, i32 4, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, i8* %78, i64 %85
  br label %87

87:                                               ; preds = %77, %82
  %88 = phi i8* [ %86, %82 ], [ null, %77 ]
  %89 = icmp eq i8* %80, %88
  br i1 %89, label %90, label %108

90:                                               ; preds = %87
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0)) #24
  %91 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %92 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %91, i64 0, i32 5, i32 0
  %93 = load float*, float** %92, align 8
  %94 = icmp eq float* %93, null
  br i1 %94, label %101, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %91, i64 0, i32 5, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds float, float* %93, i64 %98
  %100 = ptrtoint float* %99 to i64
  br label %101

101:                                              ; preds = %90, %95
  %102 = phi i64 [ %100, %95 ], [ 0, %90 ]
  %103 = ptrtoint float* %93 to i64
  %104 = sub i64 %102, %103
  %105 = lshr exact i64 %104, 2
  %106 = trunc i64 %105 to i32
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %117, label %148

108:                                              ; preds = %87
  %109 = load i8, i8* %80, align 1
  %110 = zext i8 %109 to i64
  %111 = getelementptr inbounds [6 x i8*], [6 x i8*]* %5, i64 0, i64 %110
  %112 = load i8*, i8** %111, align 8
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31, i64 0, i64 0), i8* %112) #24
  %113 = getelementptr inbounds i8, i8* %80, i64 1
  %114 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %115 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %114, i64 0, i32 4, i32 0
  %116 = load i8*, i8** %115, align 8
  br label %77

117:                                              ; preds = %101
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.33, i64 0, i64 0)) #24
  %118 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %119 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %118, i64 0, i32 5, i32 0
  %120 = load float*, float** %119, align 8
  br label %121

121:                                              ; preds = %143, %117
  %122 = phi float* [ %120, %117 ], [ %147, %143 ]
  %123 = phi %class.SkPathRef* [ %118, %117 ], [ %145, %143 ]
  %124 = phi float* [ %120, %117 ], [ %144, %143 ]
  %125 = icmp eq float* %122, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %123, i64 0, i32 5, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds float, float* %122, i64 %129
  br label %131

131:                                              ; preds = %121, %126
  %132 = phi float* [ %130, %126 ], [ null, %121 ]
  %133 = icmp eq float* %124, %132
  br i1 %133, label %134, label %136

134:                                              ; preds = %131
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0)) #24
  %135 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  br label %148

136:                                              ; preds = %131
  %137 = load float, float* %124, align 4
  br i1 %2, label %138, label %141

138:                                              ; preds = %136
  %139 = bitcast float %137 to i32
  %140 = fpext float %137 to double
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.47, i64 0, i64 0), i32 %139, double %140) #24
  br label %143

141:                                              ; preds = %136
  %142 = fpext float %137 to double
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), double %142) #24
  br label %143

143:                                              ; preds = %138, %141
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.21, i64 0, i64 0)) #24
  %144 = getelementptr inbounds float, float* %124, i64 1
  %145 = load %class.SkPathRef*, %class.SkPathRef** %8, align 8
  %146 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %145, i64 0, i32 5, i32 0
  %147 = load float*, float** %146, align 8
  br label %121

148:                                              ; preds = %134, %101
  %149 = phi %class.SkPathRef* [ %135, %134 ], [ %91, %101 ]
  %150 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %149, i64 0, i32 3, i32 2
  %151 = load i32, i32* %150, align 4
  %152 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %149, i64 0, i32 4, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = select i1 %107, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.36, i64 0, i64 0)
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.34, i64 0, i64 0), i32 %151, i32 %153, i8* %154, i32 %106) #24
  %155 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %156 = load i8, i8* %155, align 2
  %157 = and i8 %156, 3
  %158 = zext i8 %157 to i64
  %159 = getelementptr inbounds [4 x i8*], [4 x i8*]* @_ZZNK6SkPath10dumpArraysEP9SkWStreambE13gFillTypeStrs, i64 0, i64 %158
  %160 = load i8*, i8** %159, align 8
  %161 = and i8 %156, 4
  %162 = icmp eq i8 %161, 0
  %163 = select i1 %162, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0)
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.37, i64 0, i64 0), i8* %160, i8* %163) #24
  %164 = icmp eq %class.SkWStream* %1, null
  %165 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %7, align 8
  %166 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %165, i64 0, i32 2
  br i1 %164, label %174, label %167

167:                                              ; preds = %148
  %168 = call i64 @strlen(i8* %166) #27
  %169 = bitcast %class.SkWStream* %1 to i1 (%class.SkWStream*, i8*, i64)***
  %170 = load i1 (%class.SkWStream*, i8*, i64)**, i1 (%class.SkWStream*, i8*, i64)*** %169, align 8
  %171 = getelementptr inbounds i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %170, i64 2
  %172 = load i1 (%class.SkWStream*, i8*, i64)*, i1 (%class.SkWStream*, i8*, i64)** %171, align 8
  %173 = call zeroext i1 %172(%class.SkWStream* nonnull %1, i8* %166, i64 %168) #24
  br label %175

174:                                              ; preds = %148
  call void (i8*, i32, i8*, ...) @_Z17SkDebugf_FileLinePKciS0_z(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.11, i64 0, i64 0), i32 2008, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.38, i64 0, i64 0), i8* %166) #24
  br label %175

175:                                              ; preds = %174, %167
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #24
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #24
  ret void
}

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath11isValidImplEv(%class.SkPath* nocapture readnone) local_unnamed_addr #13 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN12Convexicator6BySignEPK7SkPointi(%struct.SkPoint*, i32) local_unnamed_addr #5 comdat align 2 {
  %3 = icmp slt i32 %1, 4
  br i1 %3, label %62, label %4

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 %5
  %7 = bitcast %struct.SkPoint* %0 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %10 = bitcast float* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = bitcast i32 %8 to float
  %13 = bitcast i32 %11 to float
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1
  br label %15

15:                                               ; preds = %4, %55
  %16 = phi %struct.SkPoint* [ %14, %4 ], [ %60, %55 ]
  %17 = phi i32 [ 2, %4 ], [ %59, %55 ]
  %18 = phi i32 [ 2, %4 ], [ %58, %55 ]
  %19 = phi i32 [ 0, %4 ], [ %57, %55 ]
  %20 = phi i32 [ 0, %4 ], [ %56, %55 ]
  %21 = phi %struct.SkPoint* [ %0, %4 ], [ %16, %55 ]
  %22 = phi i32 [ %8, %4 ], [ %35, %55 ]
  %23 = phi i32 [ %11, %4 ], [ %36, %55 ]
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %16, i64 0, i32 0
  %25 = load float, float* %24, align 4
  %26 = bitcast i32 %22 to float
  %27 = fsub float %25, %26
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %21, i64 1, i32 1
  %29 = load float, float* %28, align 4
  %30 = bitcast i32 %23 to float
  %31 = fsub float %29, %30
  %32 = fcmp oeq float %27, 0.000000e+00
  %33 = fcmp oeq float %31, 0.000000e+00
  %34 = and i1 %32, %33
  %35 = bitcast float %25 to i32
  %36 = bitcast float %29 to i32
  br i1 %34, label %55, label %37

37:                                               ; preds = %15
  %38 = fmul float %27, 0.000000e+00
  %39 = fmul float %38, %31
  %40 = fcmp ord float %39, 0.000000e+00
  br i1 %40, label %41, label %62

41:                                               ; preds = %37
  %42 = fcmp olt float %27, 0.000000e+00
  %43 = zext i1 %42 to i32
  %44 = fcmp olt float %31, 0.000000e+00
  %45 = zext i1 %44 to i32
  %46 = icmp ne i32 %18, %43
  %47 = zext i1 %46 to i32
  %48 = add nsw i32 %20, %47
  %49 = icmp ne i32 %17, %45
  %50 = zext i1 %49 to i32
  %51 = add nsw i32 %19, %50
  %52 = icmp sgt i32 %48, 3
  %53 = icmp sgt i32 %51, 3
  %54 = or i1 %52, %53
  br i1 %54, label %62, label %55

55:                                               ; preds = %41, %15
  %56 = phi i32 [ %20, %15 ], [ %48, %41 ]
  %57 = phi i32 [ %19, %15 ], [ %51, %41 ]
  %58 = phi i32 [ %18, %15 ], [ %43, %41 ]
  %59 = phi i32 [ %17, %15 ], [ %45, %41 ]
  %60 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %16, i64 1
  %61 = icmp eq %struct.SkPoint* %60, %6
  br i1 %61, label %64, label %15

62:                                               ; preds = %37, %41, %88, %74, %70, %2
  %63 = phi i32 [ 0, %2 ], [ 0, %88 ], [ 1, %74 ], [ 2, %70 ], [ 2, %37 ], [ 1, %41 ]
  ret i32 %63

64:                                               ; preds = %55
  %65 = fsub float %12, %25
  %66 = fsub float %13, %29
  %67 = fcmp oeq float %65, 0.000000e+00
  %68 = fcmp oeq float %66, 0.000000e+00
  %69 = and i1 %67, %68
  br i1 %69, label %88, label %70

70:                                               ; preds = %64
  %71 = fmul float %65, 0.000000e+00
  %72 = fmul float %71, %66
  %73 = fcmp ord float %72, 0.000000e+00
  br i1 %73, label %74, label %62

74:                                               ; preds = %70
  %75 = fcmp olt float %65, 0.000000e+00
  %76 = zext i1 %75 to i32
  %77 = fcmp olt float %66, 0.000000e+00
  %78 = zext i1 %77 to i32
  %79 = icmp ne i32 %58, %76
  %80 = zext i1 %79 to i32
  %81 = add nsw i32 %56, %80
  %82 = icmp ne i32 %59, %78
  %83 = zext i1 %82 to i32
  %84 = add nsw i32 %57, %83
  %85 = icmp sgt i32 %81, 3
  %86 = icmp sgt i32 %84, 3
  %87 = or i1 %85, %86
  br i1 %87, label %62, label %88

88:                                               ; preds = %64, %74
  br label %62
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11ContourIterC2ERK9SkPathRef(%class.ContourIter* nocapture, %class.SkPathRef* nocapture readonly dereferenceable(120)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds i8, i8* %4, i64 %9
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi i8* [ %10, %6 ], [ null, %2 ]
  %13 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 4
  store i8* %12, i8** %13, align 8
  %14 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 6
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 0
  %16 = bitcast %struct.SkPoint** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 2
  %19 = bitcast %struct.SkPoint** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = load i8*, i8** %3, align 8
  %21 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 3
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 5, i32 0
  %23 = bitcast float** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 5
  %26 = bitcast float** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 0
  store i32 0, i32* %27, align 8
  %28 = icmp ult i8* %20, %12
  br i1 %28, label %30, label %29

29:                                               ; preds = %11
  store i8 1, i8* %14, align 8
  br label %57

30:                                               ; preds = %11
  store i64 %17, i64* %19, align 8
  %31 = getelementptr inbounds i8, i8* %20, i64 1
  %32 = icmp ult i8* %31, %12
  br i1 %32, label %33, label %54

33:                                               ; preds = %30
  %34 = inttoptr i64 %24 to float*
  br label %35

35:                                               ; preds = %33, %49
  %36 = phi float* [ %50, %49 ], [ %34, %33 ]
  %37 = phi i8* [ %52, %49 ], [ %31, %33 ]
  %38 = phi i32 [ %51, %49 ], [ 1, %33 ]
  %39 = load i8, i8* %37, align 1
  switch i8 %39, label %49 [
    i8 0, label %54
    i8 1, label %40
    i8 3, label %42
    i8 2, label %44
    i8 4, label %47
  ]

40:                                               ; preds = %35
  %41 = add nsw i32 %38, 1
  br label %49

42:                                               ; preds = %35
  %43 = getelementptr inbounds float, float* %36, i64 1
  store float* %43, float** %25, align 8
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi float* [ %43, %42 ], [ %36, %35 ]
  %46 = add nsw i32 %38, 2
  br label %49

47:                                               ; preds = %35
  %48 = add nsw i32 %38, 3
  br label %49

49:                                               ; preds = %47, %44, %40, %35
  %50 = phi float* [ %36, %35 ], [ %36, %47 ], [ %45, %44 ], [ %36, %40 ]
  %51 = phi i32 [ %38, %35 ], [ %48, %47 ], [ %46, %44 ], [ %41, %40 ]
  %52 = getelementptr inbounds i8, i8* %37, i64 1
  %53 = icmp eq i8* %52, %12
  br i1 %53, label %54, label %35

54:                                               ; preds = %49, %35, %30
  %55 = phi i32 [ 1, %30 ], [ %38, %35 ], [ %51, %49 ]
  %56 = phi i8* [ %31, %30 ], [ %37, %35 ], [ %12, %49 ]
  store i32 %55, i32* %27, align 8
  store i8* %56, i8** %21, align 8
  br label %57

57:                                               ; preds = %29, %54
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN11ContourIter4nextEv(%class.ContourIter* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 4
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ult i8* %3, %5
  %7 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 6
  br i1 %6, label %9, label %8

8:                                                ; preds = %1
  store i8 1, i8* %7, align 8
  br label %43

9:                                                ; preds = %1
  %10 = load i8, i8* %7, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %43

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 2
  %16 = load %struct.SkPoint*, %struct.SkPoint** %15, align 8
  %17 = sext i32 %14 to i64
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %16, i64 %17
  store %struct.SkPoint* %18, %struct.SkPoint** %15, align 8
  %19 = getelementptr inbounds i8, i8* %3, i64 1
  %20 = icmp ult i8* %19, %5
  br i1 %20, label %21, label %40

21:                                               ; preds = %12
  %22 = getelementptr inbounds %class.ContourIter, %class.ContourIter* %0, i64 0, i32 5
  br label %23

23:                                               ; preds = %36, %21
  %24 = phi i8* [ %19, %21 ], [ %38, %36 ]
  %25 = phi i32 [ 1, %21 ], [ %37, %36 ]
  %26 = load i8, i8* %24, align 1
  switch i8 %26, label %36 [
    i8 0, label %40
    i8 1, label %27
    i8 3, label %29
    i8 2, label %32
    i8 4, label %34
  ]

27:                                               ; preds = %23
  %28 = add nsw i32 %25, 1
  br label %36

29:                                               ; preds = %23
  %30 = load float*, float** %22, align 8
  %31 = getelementptr inbounds float, float* %30, i64 1
  store float* %31, float** %22, align 8
  br label %32

32:                                               ; preds = %23, %29
  %33 = add nsw i32 %25, 2
  br label %36

34:                                               ; preds = %23
  %35 = add nsw i32 %25, 3
  br label %36

36:                                               ; preds = %27, %32, %34, %23
  %37 = phi i32 [ %25, %23 ], [ %35, %34 ], [ %33, %32 ], [ %28, %27 ]
  %38 = getelementptr inbounds i8, i8* %24, i64 1
  %39 = icmp eq i8* %38, %5
  br i1 %39, label %40, label %23

40:                                               ; preds = %23, %36, %12
  %41 = phi i32 [ 1, %12 ], [ %37, %36 ], [ %25, %23 ]
  %42 = phi i8* [ %19, %12 ], [ %5, %36 ], [ %24, %23 ]
  store i32 %41, i32* %13, align 8
  store i8* %42, i8** %2, align 8
  br label %43

43:                                               ; preds = %8, %9, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6SkPath8containsEff(%class.SkPath* nocapture readonly, float, float) local_unnamed_addr #5 align 2 {
  %4 = alloca %struct.SkConic, align 4
  %5 = alloca [2 x float], align 4
  %6 = alloca float, align 4
  %7 = alloca %struct.SkConic, align 4
  %8 = alloca [2 x %struct.SkConic], align 16
  %9 = alloca [5 x %struct.SkPoint], align 16
  %10 = alloca [10 x %struct.SkPoint], align 16
  %11 = alloca float, align 4
  %12 = alloca i64, align 8
  %13 = alloca %"class.SkPath::Iter", align 8
  %14 = alloca i32, align 4
  %15 = alloca [4 x %struct.SkPoint], align 16
  %16 = alloca [4 x %struct.SkPoint], align 16
  %17 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %18 = load i8, i8* %17, align 2
  %19 = and i8 %18, 2
  %20 = icmp ne i8 %19, 0
  %21 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %22 = load %class.SkPathRef*, %class.SkPathRef** %21, align 8
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 4, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %856, label %26

26:                                               ; preds = %3
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 9
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %39, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 1
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 3, i32 0
  %33 = load %struct.SkPoint*, %struct.SkPoint** %32, align 8
  %34 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 3, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %31, %struct.SkPoint* %33, i32 %35) #24
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 10
  %38 = zext i1 %36 to i8
  store i8 %38, i8* %37, align 1
  store i8 0, i8* %27, align 8
  br label %39

39:                                               ; preds = %26, %30
  %40 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 1, i32 0
  %41 = load float, float* %40, align 4
  %42 = fcmp ugt float %41, %1
  br i1 %42, label %856, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 1, i32 2
  %45 = load float, float* %44, align 4
  %46 = fcmp ult float %45, %1
  br i1 %46, label %856, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 1, i32 1
  %49 = load float, float* %48, align 4
  %50 = fcmp ugt float %49, %2
  br i1 %50, label %856, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 1, i32 3
  %53 = load float, float* %52, align 4
  %54 = fcmp ult float %53, %2
  br i1 %54, label %856, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.SkPath::Iter"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %56) #24
  %57 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %13, i64 0, i32 1
  %58 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %13, i64 0, i32 2
  %59 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %13, i64 0, i32 3
  %60 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %13, i64 0, i32 4, i32 0
  %61 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %13, i64 0, i32 2
  %62 = bitcast i8** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 16, i1 false)
  %63 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %13, i64 0, i32 6
  %64 = bitcast float* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 -1, i64 16, i1 false)
  %65 = getelementptr inbounds %"class.SkPath::Iter", %"class.SkPath::Iter"* %13, i64 0, i32 7
  %66 = bitcast i8* %63 to i64*
  store i64 -6148914691236517206, i64* %66, align 8
  %67 = load %class.SkPathRef*, %class.SkPathRef** %21, align 8
  %68 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 3, i32 0
  %69 = bitcast %struct.SkPoint** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.SkPath::Iter"* %13 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 4, i32 0
  %73 = bitcast i8** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast i8** %57 to i64*
  store i64 %74, i64* %75, align 8
  %76 = icmp eq i64 %74, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %55
  %78 = inttoptr i64 %74 to i8*
  %79 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 4, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8, i8* %78, i64 %81
  br label %83

83:                                               ; preds = %55, %77
  %84 = phi i8* [ %82, %77 ], [ null, %55 ]
  store i8* %84, i8** %58, align 8
  %85 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 5, i32 0
  %86 = load float*, float** %85, align 8
  %87 = icmp eq float* %86, null
  %88 = getelementptr inbounds float, float* %86, i64 -1
  %89 = select i1 %87, float* null, float* %88
  store float* %89, float** %59, align 8
  %90 = bitcast float* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #24
  store i8 1, i8* %63, align 8
  store i8 0, i8* %65, align 1
  %91 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %91) #24
  store i32 0, i32* %14, align 4
  %92 = bitcast [4 x %struct.SkPoint]* %15 to i8*
  %93 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 0
  %94 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 0, i32 0
  %95 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 0, i32 1
  %96 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 1, i32 0
  %97 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 1, i32 1
  %98 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %15, i64 0, i64 2, i32 1
  %99 = bitcast float** %59 to i32**
  %100 = bitcast %struct.SkConic* %7 to i8*
  %101 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %7, i64 0, i32 1
  %102 = bitcast float* %101 to i32*
  %103 = bitcast [2 x %struct.SkConic]* %8 to i8*
  %104 = getelementptr inbounds [2 x %struct.SkConic], [2 x %struct.SkConic]* %8, i64 0, i64 0
  %105 = getelementptr inbounds [2 x %struct.SkConic], [2 x %struct.SkConic]* %8, i64 0, i64 1
  %106 = bitcast [5 x %struct.SkPoint]* %9 to i8*
  %107 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %9, i64 0, i64 0
  %108 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %9, i64 0, i64 2
  %109 = bitcast float* %95 to i32*
  %110 = bitcast [10 x %struct.SkPoint]* %10 to i8*
  %111 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %10, i64 0, i64 0
  %112 = bitcast float* %6 to i8*
  %113 = bitcast [4 x %struct.SkPoint]* %15 to i8*
  br label %114

114:                                              ; preds = %352, %83
  %115 = phi i32 [ 0, %83 ], [ %353, %352 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %92) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %113, i8 -1, i64 32, i1 false)
  %116 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %13, %struct.SkPoint* nonnull %93)
  switch i32 %116, label %352 [
    i32 6, label %349
    i32 4, label %224
    i32 1, label %117
    i32 2, label %177
    i32 3, label %200
  ]

117:                                              ; preds = %114
  %118 = load float, float* %94, align 16
  %119 = load i32, i32* %109, align 4
  %120 = load float, float* %96, align 8
  %121 = load float, float* %97, align 4
  %122 = bitcast float %121 to i32
  %123 = bitcast i32 %119 to float
  %124 = fsub float %121, %123
  %125 = fcmp olt float %121, %123
  %126 = select i1 %125, i32 %122, i32 %119
  %127 = select i1 %125, i32 %119, i32 %122
  %128 = select i1 %125, i32 -1, i32 1
  %129 = bitcast i32 %126 to float
  %130 = fcmp ogt float %129, %2
  %131 = bitcast i32 %127 to float
  %132 = fcmp olt float %131, %2
  %133 = or i1 %130, %132
  br i1 %133, label %174, label %134

134:                                              ; preds = %117
  %135 = fcmp oeq float %121, %123
  br i1 %135, label %136, label %143

136:                                              ; preds = %134
  %137 = fsub float %118, %1
  %138 = fsub float %120, %1
  %139 = fmul float %137, %138
  %140 = fcmp ole float %139, 0.000000e+00
  %141 = fcmp une float %120, %1
  %142 = and i1 %141, %140
  br i1 %142, label %147, label %150

143:                                              ; preds = %134
  %144 = fcmp oeq float %118, %1
  %145 = fcmp oeq float %123, %2
  %146 = and i1 %144, %145
  br i1 %146, label %147, label %150

147:                                              ; preds = %143, %136
  %148 = load i32, i32* %14, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %14, align 4
  br label %174

150:                                              ; preds = %143, %136
  %151 = fcmp oeq float %131, %2
  br i1 %151, label %174, label %152

152:                                              ; preds = %150
  %153 = fsub float %120, %118
  %154 = fsub float %2, %123
  %155 = fmul float %153, %154
  %156 = fsub float %1, %118
  %157 = fmul float %156, %124
  %158 = fsub float %155, %157
  %159 = fcmp une float %158, 0.000000e+00
  br i1 %159, label %167, label %160

160:                                              ; preds = %152
  %161 = fcmp une float %120, %1
  %162 = fcmp une float %121, %2
  %163 = or i1 %161, %162
  br i1 %163, label %164, label %174

164:                                              ; preds = %160
  %165 = load i32, i32* %14, align 4
  %166 = add nsw i32 %165, 1
  store i32 %166, i32* %14, align 4
  br label %174

167:                                              ; preds = %152
  %168 = fcmp olt float %158, 0.000000e+00
  %169 = fcmp ogt float %158, 0.000000e+00
  %170 = zext i1 %169 to i32
  %171 = select i1 %168, i32 -1, i32 %170
  %172 = icmp eq i32 %171, %128
  %173 = select i1 %172, i32 0, i32 %128
  br label %174

174:                                              ; preds = %117, %147, %150, %160, %164, %167
  %175 = phi i32 [ 0, %147 ], [ 0, %117 ], [ 0, %150 ], [ 0, %164 ], [ %173, %167 ], [ 0, %160 ]
  %176 = add nsw i32 %175, %115
  br label %352

177:                                              ; preds = %114
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %106) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %106, i8 -1, i64 40, i1 false) #24
  %178 = load float, float* %95, align 4
  %179 = load float, float* %97, align 4
  %180 = load float, float* %98, align 4
  %181 = fcmp oeq float %178, %179
  br i1 %181, label %188, label %182

182:                                              ; preds = %177
  %183 = fcmp olt float %178, %179
  br i1 %183, label %184, label %186

184:                                              ; preds = %182
  %185 = fcmp ugt float %179, %180
  br i1 %185, label %190, label %188

186:                                              ; preds = %182
  %187 = fcmp ult float %179, %180
  br i1 %187, label %190, label %188

188:                                              ; preds = %186, %184, %177
  %189 = call fastcc i32 @_ZL17winding_mono_quadPK7SkPointffPi(%struct.SkPoint* nonnull %93, float %1, float %2, i32* nonnull %14) #24
  br label %197

190:                                              ; preds = %186, %184
  %191 = call i32 @_Z20SkChopQuadAtYExtremaPK7SkPointPS_(%struct.SkPoint* nonnull %93, %struct.SkPoint* nonnull %107) #24
  %192 = icmp sgt i32 %191, 0
  %193 = call fastcc i32 @_ZL17winding_mono_quadPK7SkPointffPi(%struct.SkPoint* nonnull %107, float %1, float %2, i32* nonnull %14) #24
  br i1 %192, label %194, label %197

194:                                              ; preds = %190
  %195 = call fastcc i32 @_ZL17winding_mono_quadPK7SkPointffPi(%struct.SkPoint* %108, float %1, float %2, i32* nonnull %14) #24
  %196 = add nsw i32 %195, %193
  br label %197

197:                                              ; preds = %188, %190, %194
  %198 = phi i32 [ %196, %194 ], [ %193, %190 ], [ %189, %188 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %106) #24
  %199 = add nsw i32 %198, %115
  br label %352

200:                                              ; preds = %114
  %201 = load i32*, i32** %99, align 8
  %202 = load i32, i32* %201, align 4
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %100) #24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %100, i8* nonnull align 16 %92, i64 24, i1 false) #24
  store i32 %202, i32* %102, align 4
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %103) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %103, i8 -1, i64 56, i1 false) #24
  %203 = load float, float* %95, align 4
  %204 = load float, float* %97, align 4
  %205 = load float, float* %98, align 4
  %206 = fcmp oeq float %203, %204
  br i1 %206, label %215, label %207

207:                                              ; preds = %200
  %208 = fcmp olt float %203, %204
  br i1 %208, label %209, label %211

209:                                              ; preds = %207
  %210 = fcmp ugt float %204, %205
  br i1 %210, label %213, label %215

211:                                              ; preds = %207
  %212 = fcmp ult float %204, %205
  br i1 %212, label %213, label %215

213:                                              ; preds = %211, %209
  %214 = call zeroext i1 @_ZNK7SkConic14chopAtYExtremaEPS_(%struct.SkConic* nonnull %7, %struct.SkConic* nonnull %104) #24
  br i1 %214, label %217, label %215

215:                                              ; preds = %213, %211, %209, %200
  %216 = call fastcc i32 @_ZL18winding_mono_conicRK7SkConicffPi(%struct.SkConic* nonnull dereferenceable(28) %7, float %1, float %2, i32* nonnull %14) #24
  br label %221

217:                                              ; preds = %213
  %218 = call fastcc i32 @_ZL18winding_mono_conicRK7SkConicffPi(%struct.SkConic* nonnull dereferenceable(28) %104, float %1, float %2, i32* nonnull %14) #24
  %219 = call fastcc i32 @_ZL18winding_mono_conicRK7SkConicffPi(%struct.SkConic* dereferenceable(28) %105, float %1, float %2, i32* nonnull %14) #24
  %220 = add nsw i32 %219, %218
  br label %221

221:                                              ; preds = %215, %217
  %222 = phi i32 [ %220, %217 ], [ %216, %215 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %103) #24
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %100) #24
  %223 = add nsw i32 %222, %115
  br label %352

224:                                              ; preds = %114
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %110) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %110, i8 -1, i64 80, i1 false) #24
  %225 = call i32 @_Z21SkChopCubicAtYExtremaPK7SkPointPS_(%struct.SkPoint* nonnull %93, %struct.SkPoint* nonnull %111) #24
  %226 = icmp slt i32 %225, 0
  br i1 %226, label %346, label %227

227:                                              ; preds = %224
  %228 = add nuw i32 %225, 1
  %229 = zext i32 %228 to i64
  %230 = load i32, i32* %14, align 4
  br label %231

231:                                              ; preds = %339, %227
  %232 = phi i32 [ %340, %339 ], [ %230, %227 ]
  %233 = phi i64 [ %343, %339 ], [ 0, %227 ]
  %234 = phi i32 [ %342, %339 ], [ 0, %227 ]
  %235 = mul i64 %233, 3
  %236 = and i64 %235, 4294967295
  %237 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %10, i64 0, i64 %236
  %238 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %10, i64 0, i64 %236, i32 1
  %239 = bitcast float* %238 to i32*
  %240 = load i32, i32* %239, align 4
  %241 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %237, i64 3
  %242 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %237, i64 3, i32 1
  %243 = load float, float* %242, align 4
  %244 = bitcast float %243 to i32
  %245 = bitcast i32 %240 to float
  %246 = fcmp olt float %243, %245
  %247 = select i1 %246, i32 %240, i32 %244
  %248 = select i1 %246, i32 %244, i32 %240
  %249 = select i1 %246, i32 -1, i32 1
  %250 = bitcast i32 %248 to float
  %251 = fcmp ogt float %250, %2
  %252 = bitcast i32 %247 to float
  %253 = fcmp olt float %252, %2
  %254 = or i1 %251, %253
  br i1 %254, label %339, label %255

255:                                              ; preds = %231
  %256 = fcmp oeq float %243, %245
  %257 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %237, i64 0, i32 0
  %258 = load float, float* %257, align 8
  br i1 %256, label %259, label %268

259:                                              ; preds = %255
  %260 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %241, i64 0, i32 0
  %261 = load float, float* %260, align 8
  %262 = fsub float %258, %1
  %263 = fsub float %261, %1
  %264 = fmul float %262, %263
  %265 = fcmp ole float %264, 0.000000e+00
  %266 = fcmp une float %261, %1
  %267 = and i1 %266, %265
  br i1 %267, label %272, label %274

268:                                              ; preds = %255
  %269 = fcmp oeq float %258, %1
  %270 = fcmp oeq float %245, %2
  %271 = and i1 %270, %269
  br i1 %271, label %272, label %274

272:                                              ; preds = %268, %259
  %273 = add nsw i32 %232, 1
  br label %339

274:                                              ; preds = %268, %259
  %275 = fcmp oeq float %252, %2
  br i1 %275, label %339, label %276

276:                                              ; preds = %274
  %277 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %237, i64 1, i32 0
  %278 = load float, float* %277, align 8
  %279 = fcmp olt float %278, %258
  %280 = select i1 %279, float %278, float %258
  %281 = fcmp olt float %258, %278
  %282 = select i1 %281, float %278, float %258
  %283 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %237, i64 2, i32 0
  %284 = load float, float* %283, align 8
  %285 = fcmp olt float %284, %280
  %286 = select i1 %285, float %284, float %280
  %287 = fcmp olt float %282, %284
  %288 = select i1 %287, float %284, float %282
  %289 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %237, i64 3, i32 0
  %290 = load float, float* %289, align 8
  %291 = fcmp olt float %290, %286
  %292 = select i1 %291, float %290, float %286
  %293 = fcmp ogt float %292, %1
  br i1 %293, label %339, label %294

294:                                              ; preds = %276
  %295 = fcmp olt float %288, %290
  %296 = select i1 %295, float %290, float %288
  %297 = fcmp olt float %296, %1
  br i1 %297, label %339, label %298

298:                                              ; preds = %294
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #24
  store float 0xFFFFFFFFE0000000, float* %6, align 4
  %299 = call zeroext i1 @_ZN14SkCubicClipper11ChopMonoAtYEPK7SkPointfPf(%struct.SkPoint* %237, float %2, float* nonnull %6) #24
  br i1 %299, label %300, label %336

300:                                              ; preds = %298
  %301 = load float, float* %257, align 8
  %302 = load float, float* %277, align 8
  %303 = load float, float* %283, align 8
  %304 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %241, i64 0, i32 0
  %305 = load float, float* %304, align 8
  %306 = load float, float* %6, align 4
  %307 = fsub float %302, %303
  %308 = fmul float %307, 3.000000e+00
  %309 = fadd float %305, %308
  %310 = fsub float %309, %301
  %311 = fsub float %303, %302
  %312 = fsub float %311, %302
  %313 = fadd float %301, %312
  %314 = fmul float %313, 3.000000e+00
  %315 = fsub float %302, %301
  %316 = fmul float %315, 3.000000e+00
  %317 = fmul float %306, %310
  %318 = fadd float %314, %317
  %319 = fmul float %306, %318
  %320 = fadd float %316, %319
  %321 = fmul float %306, %320
  %322 = fadd float %301, %321
  %323 = fsub float %322, %1
  %324 = call float @llvm.fabs.f32(float %323) #24
  %325 = fcmp ugt float %324, 0x3F30000000000000
  br i1 %325, label %333, label %326

326:                                              ; preds = %300
  %327 = fcmp une float %305, %1
  br i1 %327, label %331, label %328

328:                                              ; preds = %326
  %329 = load float, float* %242, align 4
  %330 = fcmp une float %329, %2
  br i1 %330, label %331, label %333

331:                                              ; preds = %328, %326
  %332 = add nsw i32 %232, 1
  br label %336

333:                                              ; preds = %328, %300
  %334 = fcmp olt float %322, %1
  %335 = select i1 %334, i32 %249, i32 0
  br label %336

336:                                              ; preds = %333, %331, %298
  %337 = phi i32 [ %232, %298 ], [ %332, %331 ], [ %232, %333 ]
  %338 = phi i32 [ 0, %298 ], [ 0, %331 ], [ %335, %333 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #24
  br label %339

339:                                              ; preds = %336, %294, %276, %274, %272, %231
  %340 = phi i32 [ %273, %272 ], [ %232, %231 ], [ %232, %274 ], [ %337, %336 ], [ %232, %276 ], [ %232, %294 ]
  %341 = phi i32 [ 0, %272 ], [ 0, %231 ], [ 0, %274 ], [ %338, %336 ], [ 0, %276 ], [ %249, %294 ]
  %342 = add nsw i32 %341, %234
  %343 = add nuw nsw i64 %233, 1
  %344 = icmp eq i64 %343, %229
  br i1 %344, label %345, label %231

345:                                              ; preds = %339
  store i32 %340, i32* %14, align 4
  br label %346

346:                                              ; preds = %345, %224
  %347 = phi i32 [ 0, %224 ], [ %342, %345 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %110) #24
  %348 = add nsw i32 %347, %115
  br label %352

349:                                              ; preds = %114
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #24
  %350 = load i8, i8* %17, align 2
  %351 = and i8 %350, 3
  switch i8 %351, label %356 [
    i8 1, label %354
    i8 3, label %354
  ]

352:                                              ; preds = %114, %346, %221, %197, %174
  %353 = phi i32 [ %115, %114 ], [ %223, %221 ], [ %199, %197 ], [ %176, %174 ], [ %348, %346 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %92) #24
  br label %114

354:                                              ; preds = %349, %349
  %355 = and i32 %115, 1
  br label %356

356:                                              ; preds = %349, %354
  %357 = phi i1 [ true, %354 ], [ false, %349 ]
  %358 = phi i32 [ %355, %354 ], [ %115, %349 ]
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %362, label %360

360:                                              ; preds = %356
  %361 = xor i1 %20, true
  br label %854

362:                                              ; preds = %356
  %363 = load i32, i32* %14, align 4
  %364 = icmp slt i32 %363, 2
  br i1 %364, label %365, label %368

365:                                              ; preds = %362
  %366 = icmp ne i32 %363, 0
  %367 = xor i1 %20, %366
  br label %854

368:                                              ; preds = %362
  %369 = and i32 %363, 1
  %370 = icmp ne i32 %369, 0
  %371 = or i1 %357, %370
  br i1 %371, label %372, label %374

372:                                              ; preds = %368
  %373 = xor i1 %20, %370
  br label %854

374:                                              ; preds = %368
  %375 = load %class.SkPathRef*, %class.SkPathRef** %21, align 8
  %376 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %375, i64 0, i32 3, i32 0
  %377 = bitcast %struct.SkPoint** %376 to i64*
  %378 = load i64, i64* %377, align 8
  store i64 %378, i64* %71, align 8
  %379 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %375, i64 0, i32 4, i32 0
  %380 = bitcast i8** %379 to i64*
  %381 = load i64, i64* %380, align 8
  store i64 %381, i64* %75, align 8
  %382 = icmp eq i64 %381, 0
  br i1 %382, label %389, label %383

383:                                              ; preds = %374
  %384 = inttoptr i64 %381 to i8*
  %385 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %375, i64 0, i32 4, i32 2
  %386 = load i32, i32* %385, align 4
  %387 = sext i32 %386 to i64
  %388 = getelementptr inbounds i8, i8* %384, i64 %387
  br label %389

389:                                              ; preds = %374, %383
  %390 = phi i8* [ %388, %383 ], [ null, %374 ]
  store i8* %390, i8** %58, align 8
  %391 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %375, i64 0, i32 5, i32 0
  %392 = load float*, float** %391, align 8
  %393 = icmp eq float* %392, null
  %394 = getelementptr inbounds float, float* %392, i64 -1
  %395 = select i1 %393, float* null, float* %394
  store float* %395, float** %59, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #24
  store i8 1, i8* %63, align 8
  store i8 0, i8* %65, align 1
  %396 = bitcast [4 x %struct.SkPoint]* %16 to i8*
  %397 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 0
  %398 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 0, i32 0
  %399 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 0, i32 1
  %400 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 1, i32 0
  %401 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 1, i32 1
  %402 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 2, i32 0
  %403 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 2, i32 1
  %404 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 3, i32 0
  %405 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %16, i64 0, i64 3, i32 1
  %406 = bitcast [2 x float]* %5 to i8*
  %407 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 0
  %408 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 1
  %409 = bitcast %struct.SkConic* %4 to i8*
  %410 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %4, i64 0, i32 1
  %411 = bitcast i64* %12 to %struct.SkPoint*
  %412 = bitcast float* %11 to i8*
  %413 = bitcast i64* %12 to i8*
  %414 = bitcast i64* %12 to float*
  %415 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %411, i64 0, i32 1
  %416 = bitcast [4 x %struct.SkPoint]* %16 to i8*
  br label %417

417:                                              ; preds = %849, %389
  %418 = phi i32 [ 0, %389 ], [ %852, %849 ]
  %419 = phi i32 [ 0, %389 ], [ %853, %849 ]
  %420 = phi i8* [ null, %389 ], [ %850, %849 ]
  %421 = phi %struct.SkPoint* [ null, %389 ], [ %851, %849 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %396) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %416, i8 -1, i64 32, i1 false)
  %422 = call i32 @_ZN6SkPath4Iter4nextEP7SkPoint(%"class.SkPath::Iter"* nonnull %13, %struct.SkPoint* nonnull %397)
  switch i32 %422, label %849 [
    i32 6, label %791
    i32 4, label %675
    i32 1, label %423
    i32 2, label %471
    i32 3, label %566
  ]

423:                                              ; preds = %417
  %424 = load float, float* %399, align 4
  %425 = load float, float* %401, align 4
  %426 = fsub float %424, %2
  %427 = fsub float %425, %2
  %428 = fmul float %426, %427
  %429 = fcmp ugt float %428, 0.000000e+00
  br i1 %429, label %849, label %430

430:                                              ; preds = %423
  %431 = load float, float* %398, align 16
  %432 = load float, float* %400, align 8
  %433 = fsub float %431, %1
  %434 = fsub float %432, %1
  %435 = fmul float %433, %434
  %436 = fcmp ugt float %435, 0.000000e+00
  br i1 %436, label %849, label %437

437:                                              ; preds = %430
  %438 = fsub float %432, %431
  %439 = fsub float %425, %424
  %440 = fsub float %1, %431
  %441 = fmul float %439, %440
  %442 = fsub float %2, %424
  %443 = fmul float %442, %438
  %444 = fsub float %441, %443
  %445 = call float @llvm.fabs.f32(float %444) #24
  %446 = fcmp ugt float %445, 0x3F30000000000000
  br i1 %446, label %849, label %447

447:                                              ; preds = %437
  %448 = add i32 %419, 1
  %449 = icmp sgt i32 %448, -1
  br i1 %449, label %451, label %450

450:                                              ; preds = %447
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i64 0, i64 0)) #26
  unreachable

451:                                              ; preds = %447
  %452 = icmp slt i32 %418, %448
  br i1 %452, label %453, label %464

453:                                              ; preds = %451
  %454 = add i32 %419, 5
  %455 = lshr i32 %454, 2
  %456 = add nuw i32 %455, %454
  %457 = icmp sgt i32 %456, -1
  br i1 %457, label %459, label %458

458:                                              ; preds = %453
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.52, i64 0, i64 0)) #26
  unreachable

459:                                              ; preds = %453
  %460 = sext i32 %456 to i64
  %461 = shl nsw i64 %460, 3
  %462 = call i8* @_Z16sk_realloc_throwPvm(i8* %420, i64 %461) #24
  %463 = bitcast i8* %462 to %struct.SkPoint*
  br label %464

464:                                              ; preds = %451, %459
  %465 = phi i32 [ %456, %459 ], [ %418, %451 ]
  %466 = phi i8* [ %462, %459 ], [ %420, %451 ]
  %467 = phi %struct.SkPoint* [ %463, %459 ], [ %421, %451 ]
  %468 = sext i32 %419 to i64
  %469 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %467, i64 %468, i32 0
  store float %438, float* %469, align 4
  %470 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %467, i64 %468, i32 1
  store float %439, float* %470, align 4
  br label %794

471:                                              ; preds = %417
  %472 = load float, float* %399, align 4
  %473 = load float, float* %401, align 4
  %474 = fsub float %472, %2
  %475 = fsub float %473, %2
  %476 = fmul float %474, %475
  %477 = fcmp ugt float %476, 0.000000e+00
  br i1 %477, label %478, label %483

478:                                              ; preds = %471
  %479 = load float, float* %403, align 4
  %480 = fsub float %479, %2
  %481 = fmul float %475, %480
  %482 = fcmp ugt float %481, 0.000000e+00
  br i1 %482, label %849, label %483

483:                                              ; preds = %478, %471
  %484 = load float, float* %398, align 16
  %485 = load float, float* %400, align 8
  %486 = fsub float %484, %1
  %487 = fsub float %485, %1
  %488 = fmul float %486, %487
  %489 = fcmp ugt float %488, 0.000000e+00
  br i1 %489, label %490, label %495

490:                                              ; preds = %483
  %491 = load float, float* %402, align 16
  %492 = fsub float %491, %1
  %493 = fmul float %487, %492
  %494 = fcmp ugt float %493, 0.000000e+00
  br i1 %494, label %849, label %495

495:                                              ; preds = %490, %483
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %406) #24
  store float 0xFFFFFFFFE0000000, float* %407, align 4
  store float 0xFFFFFFFFE0000000, float* %408, align 4
  %496 = fmul float %473, 2.000000e+00
  %497 = fsub float %472, %496
  %498 = load float, float* %403, align 4
  %499 = fadd float %497, %498
  %500 = fsub float %473, %472
  %501 = fmul float %500, 2.000000e+00
  %502 = call i32 @_Z19SkFindUnitQuadRootsfffPf(float %499, float %501, float %474, float* nonnull %407) #24
  %503 = icmp sgt i32 %502, 0
  br i1 %503, label %504, label %506

504:                                              ; preds = %495
  %505 = zext i32 %502 to i64
  br label %511

506:                                              ; preds = %559, %495
  %507 = phi i32 [ %418, %495 ], [ %560, %559 ]
  %508 = phi i32 [ %419, %495 ], [ %561, %559 ]
  %509 = phi i8* [ %420, %495 ], [ %562, %559 ]
  %510 = phi %struct.SkPoint* [ %421, %495 ], [ %563, %559 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %406) #24
  br label %794

511:                                              ; preds = %559, %504
  %512 = phi i32 [ %418, %504 ], [ %560, %559 ]
  %513 = phi i32 [ %419, %504 ], [ %561, %559 ]
  %514 = phi i8* [ %420, %504 ], [ %562, %559 ]
  %515 = phi %struct.SkPoint* [ %421, %504 ], [ %563, %559 ]
  %516 = phi i64 [ 0, %504 ], [ %564, %559 ]
  %517 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 %516
  %518 = load float, float* %517, align 4
  %519 = load float, float* %398, align 16
  %520 = load float, float* %402, align 16
  %521 = load float, float* %400, align 8
  %522 = fmul float %521, 2.000000e+00
  %523 = fsub float %520, %522
  %524 = fadd float %519, %523
  %525 = fsub float %521, %519
  %526 = fmul float %525, 2.000000e+00
  %527 = fmul float %518, %524
  %528 = fadd float %526, %527
  %529 = fmul float %518, %528
  %530 = fadd float %519, %529
  %531 = fsub float %1, %530
  %532 = call float @llvm.fabs.f32(float %531) #24
  %533 = fcmp ugt float %532, 0x3F30000000000000
  br i1 %533, label %559, label %534

534:                                              ; preds = %511
  %535 = call <2 x float> @_Z19SkEvalQuadTangentAtPK7SkPointf(%struct.SkPoint* nonnull %397, float %518) #24
  %536 = add i32 %513, 1
  %537 = icmp sgt i32 %536, -1
  br i1 %537, label %539, label %538

538:                                              ; preds = %534
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i64 0, i64 0)) #26
  unreachable

539:                                              ; preds = %534
  %540 = icmp slt i32 %512, %536
  br i1 %540, label %541, label %552

541:                                              ; preds = %539
  %542 = add i32 %513, 5
  %543 = lshr i32 %542, 2
  %544 = add nuw i32 %543, %542
  %545 = icmp sgt i32 %544, -1
  br i1 %545, label %547, label %546

546:                                              ; preds = %541
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.52, i64 0, i64 0)) #26
  unreachable

547:                                              ; preds = %541
  %548 = sext i32 %544 to i64
  %549 = shl nsw i64 %548, 3
  %550 = call i8* @_Z16sk_realloc_throwPvm(i8* %514, i64 %549) #24
  %551 = bitcast i8* %550 to %struct.SkPoint*
  br label %552

552:                                              ; preds = %539, %547
  %553 = phi i32 [ %544, %547 ], [ %512, %539 ]
  %554 = phi i8* [ %550, %547 ], [ %514, %539 ]
  %555 = phi %struct.SkPoint* [ %551, %547 ], [ %515, %539 ]
  %556 = sext i32 %513 to i64
  %557 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %555, i64 %556
  %558 = bitcast %struct.SkPoint* %557 to <2 x float>*
  store <2 x float> %535, <2 x float>* %558, align 4
  br label %559

559:                                              ; preds = %552, %511
  %560 = phi i32 [ %512, %511 ], [ %553, %552 ]
  %561 = phi i32 [ %513, %511 ], [ %536, %552 ]
  %562 = phi i8* [ %514, %511 ], [ %554, %552 ]
  %563 = phi %struct.SkPoint* [ %515, %511 ], [ %555, %552 ]
  %564 = add nuw nsw i64 %516, 1
  %565 = icmp eq i64 %564, %505
  br i1 %565, label %506, label %511

566:                                              ; preds = %417
  %567 = load float*, float** %59, align 8
  %568 = load float, float* %567, align 4
  %569 = load float, float* %399, align 4
  %570 = load float, float* %401, align 4
  %571 = fsub float %569, %2
  %572 = fsub float %570, %2
  %573 = fmul float %571, %572
  %574 = fcmp ugt float %573, 0.000000e+00
  br i1 %574, label %575, label %580

575:                                              ; preds = %566
  %576 = load float, float* %403, align 4
  %577 = fsub float %576, %2
  %578 = fmul float %572, %577
  %579 = fcmp ugt float %578, 0.000000e+00
  br i1 %579, label %849, label %580

580:                                              ; preds = %575, %566
  %581 = load float, float* %398, align 16
  %582 = load float, float* %400, align 8
  %583 = fsub float %581, %1
  %584 = fsub float %582, %1
  %585 = fmul float %583, %584
  %586 = fcmp ugt float %585, 0.000000e+00
  br i1 %586, label %587, label %592

587:                                              ; preds = %580
  %588 = load float, float* %402, align 16
  %589 = fsub float %588, %1
  %590 = fmul float %584, %589
  %591 = fcmp ugt float %590, 0.000000e+00
  br i1 %591, label %849, label %592

592:                                              ; preds = %587, %580
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %406) #24
  store float 0xFFFFFFFFE0000000, float* %407, align 4
  store float 0xFFFFFFFFE0000000, float* %408, align 4
  %593 = load float, float* %403, align 4
  %594 = fmul float %568, %570
  %595 = fmul float %568, %2
  %596 = fsub float %594, %595
  %597 = fadd float %596, %2
  %598 = fmul float %597, 2.000000e+00
  %599 = fsub float %569, %598
  %600 = fadd float %599, %593
  %601 = fsub float %597, %569
  %602 = fmul float %601, 2.000000e+00
  %603 = call i32 @_Z19SkFindUnitQuadRootsfffPf(float %600, float %602, float %571, float* nonnull %407) #24
  %604 = icmp sgt i32 %603, 0
  br i1 %604, label %605, label %609

605:                                              ; preds = %592
  %606 = fadd float %568, -1.000000e+00
  %607 = fmul float %606, 2.000000e+00
  %608 = zext i32 %603 to i64
  br label %614

609:                                              ; preds = %668, %592
  %610 = phi i32 [ %418, %592 ], [ %669, %668 ]
  %611 = phi i32 [ %419, %592 ], [ %670, %668 ]
  %612 = phi i8* [ %420, %592 ], [ %671, %668 ]
  %613 = phi %struct.SkPoint* [ %421, %592 ], [ %672, %668 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %406) #24
  br label %794

614:                                              ; preds = %668, %605
  %615 = phi i32 [ %418, %605 ], [ %669, %668 ]
  %616 = phi i32 [ %419, %605 ], [ %670, %668 ]
  %617 = phi i8* [ %420, %605 ], [ %671, %668 ]
  %618 = phi %struct.SkPoint* [ %421, %605 ], [ %672, %668 ]
  %619 = phi i64 [ 0, %605 ], [ %673, %668 ]
  %620 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 %619
  %621 = load float, float* %620, align 4
  %622 = load float, float* %400, align 8
  %623 = fmul float %568, %622
  %624 = load float, float* %398, align 16
  %625 = load float, float* %402, align 16
  %626 = fmul float %623, 2.000000e+00
  %627 = fsub float %625, %626
  %628 = fadd float %624, %627
  %629 = fsub float %623, %624
  %630 = fmul float %629, 2.000000e+00
  %631 = fmul float %621, %628
  %632 = fadd float %630, %631
  %633 = fmul float %621, %632
  %634 = fadd float %624, %633
  %635 = fmul float %607, %621
  %636 = fsub float %607, %635
  %637 = fmul float %621, %636
  %638 = fadd float %637, 1.000000e+00
  %639 = fdiv float %634, %638
  %640 = fsub float %1, %639
  %641 = call float @llvm.fabs.f32(float %640) #24
  %642 = fcmp ugt float %641, 0x3F30000000000000
  br i1 %642, label %668, label %643

643:                                              ; preds = %614
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %409) #24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %409, i8* nonnull align 16 %396, i64 24, i1 false) #24
  store float %568, float* %410, align 4
  %644 = call <2 x float> @_ZNK7SkConic13evalTangentAtEf(%struct.SkConic* nonnull %4, float %621) #24
  %645 = add i32 %616, 1
  %646 = icmp sgt i32 %645, -1
  br i1 %646, label %648, label %647

647:                                              ; preds = %643
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i64 0, i64 0)) #26
  unreachable

648:                                              ; preds = %643
  %649 = icmp slt i32 %615, %645
  br i1 %649, label %650, label %661

650:                                              ; preds = %648
  %651 = add i32 %616, 5
  %652 = lshr i32 %651, 2
  %653 = add nuw i32 %652, %651
  %654 = icmp sgt i32 %653, -1
  br i1 %654, label %656, label %655

655:                                              ; preds = %650
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.52, i64 0, i64 0)) #26
  unreachable

656:                                              ; preds = %650
  %657 = sext i32 %653 to i64
  %658 = shl nsw i64 %657, 3
  %659 = call i8* @_Z16sk_realloc_throwPvm(i8* %617, i64 %658) #24
  %660 = bitcast i8* %659 to %struct.SkPoint*
  br label %661

661:                                              ; preds = %648, %656
  %662 = phi i32 [ %653, %656 ], [ %615, %648 ]
  %663 = phi i8* [ %659, %656 ], [ %617, %648 ]
  %664 = phi %struct.SkPoint* [ %660, %656 ], [ %618, %648 ]
  %665 = sext i32 %616 to i64
  %666 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %664, i64 %665
  %667 = bitcast %struct.SkPoint* %666 to <2 x float>*
  store <2 x float> %644, <2 x float>* %667, align 4
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %409) #24
  br label %668

668:                                              ; preds = %661, %614
  %669 = phi i32 [ %615, %614 ], [ %662, %661 ]
  %670 = phi i32 [ %616, %614 ], [ %645, %661 ]
  %671 = phi i8* [ %617, %614 ], [ %663, %661 ]
  %672 = phi %struct.SkPoint* [ %618, %614 ], [ %664, %661 ]
  %673 = add nuw nsw i64 %619, 1
  %674 = icmp eq i64 %673, %608
  br i1 %674, label %609, label %614

675:                                              ; preds = %417
  %676 = load float, float* %399, align 4
  %677 = load float, float* %401, align 4
  %678 = fsub float %676, %2
  %679 = fsub float %677, %2
  %680 = fmul float %678, %679
  %681 = fcmp ugt float %680, 0.000000e+00
  br i1 %681, label %682, label %692

682:                                              ; preds = %675
  %683 = load float, float* %403, align 4
  %684 = fsub float %683, %2
  %685 = fmul float %679, %684
  %686 = fcmp ugt float %685, 0.000000e+00
  br i1 %686, label %687, label %692

687:                                              ; preds = %682
  %688 = load float, float* %405, align 4
  %689 = fsub float %688, %2
  %690 = fmul float %684, %689
  %691 = fcmp ugt float %690, 0.000000e+00
  br i1 %691, label %849, label %692

692:                                              ; preds = %687, %682, %675
  %693 = load float, float* %398, align 16
  %694 = load float, float* %400, align 8
  %695 = fsub float %693, %1
  %696 = fsub float %694, %1
  %697 = fmul float %695, %696
  %698 = fcmp ugt float %697, 0.000000e+00
  br i1 %698, label %699, label %709

699:                                              ; preds = %692
  %700 = load float, float* %402, align 16
  %701 = fsub float %700, %1
  %702 = fmul float %696, %701
  %703 = fcmp ugt float %702, 0.000000e+00
  br i1 %703, label %704, label %709

704:                                              ; preds = %699
  %705 = load float, float* %404, align 8
  %706 = fsub float %705, %1
  %707 = fmul float %701, %706
  %708 = fcmp ugt float %707, 0.000000e+00
  br i1 %708, label %849, label %709

709:                                              ; preds = %704, %699, %692
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %110) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %110, i8 -1, i64 80, i1 false) #24
  %710 = call i32 @_Z21SkChopCubicAtYExtremaPK7SkPointPS_(%struct.SkPoint* nonnull %397, %struct.SkPoint* nonnull %111) #24
  %711 = icmp slt i32 %710, 0
  br i1 %711, label %715, label %712

712:                                              ; preds = %709
  %713 = add nuw i32 %710, 1
  %714 = zext i32 %713 to i64
  br label %720

715:                                              ; preds = %784, %709
  %716 = phi i32 [ %418, %709 ], [ %785, %784 ]
  %717 = phi i32 [ %419, %709 ], [ %786, %784 ]
  %718 = phi i8* [ %420, %709 ], [ %787, %784 ]
  %719 = phi %struct.SkPoint* [ %421, %709 ], [ %788, %784 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %110) #24
  br label %794

720:                                              ; preds = %784, %712
  %721 = phi i32 [ %418, %712 ], [ %785, %784 ]
  %722 = phi i32 [ %419, %712 ], [ %786, %784 ]
  %723 = phi i8* [ %420, %712 ], [ %787, %784 ]
  %724 = phi %struct.SkPoint* [ %421, %712 ], [ %788, %784 ]
  %725 = phi i64 [ 0, %712 ], [ %789, %784 ]
  %726 = mul i64 %725, 3
  %727 = and i64 %726, 4294967295
  %728 = getelementptr inbounds [10 x %struct.SkPoint], [10 x %struct.SkPoint]* %10, i64 0, i64 %727
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %412) #24
  store float 0xFFFFFFFFE0000000, float* %11, align 4
  %729 = call zeroext i1 @_ZN14SkCubicClipper11ChopMonoAtYEPK7SkPointfPf(%struct.SkPoint* %728, float %2, float* nonnull %11) #24
  br i1 %729, label %730, label %784

730:                                              ; preds = %720
  %731 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %728, i64 0, i32 0
  %732 = load float, float* %731, align 8
  %733 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %728, i64 1, i32 0
  %734 = load float, float* %733, align 8
  %735 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %728, i64 2, i32 0
  %736 = load float, float* %735, align 8
  %737 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %728, i64 3, i32 0
  %738 = load float, float* %737, align 8
  %739 = load float, float* %11, align 4
  %740 = fsub float %734, %736
  %741 = fmul float %740, 3.000000e+00
  %742 = fadd float %738, %741
  %743 = fsub float %742, %732
  %744 = fsub float %736, %734
  %745 = fsub float %744, %734
  %746 = fadd float %732, %745
  %747 = fmul float %746, 3.000000e+00
  %748 = fsub float %734, %732
  %749 = fmul float %748, 3.000000e+00
  %750 = fmul float %739, %743
  %751 = fadd float %747, %750
  %752 = fmul float %739, %751
  %753 = fadd float %749, %752
  %754 = fmul float %739, %753
  %755 = fadd float %732, %754
  %756 = fsub float %1, %755
  %757 = call float @llvm.fabs.f32(float %756) #24
  %758 = fcmp ugt float %757, 0x3F30000000000000
  br i1 %758, label %784, label %759

759:                                              ; preds = %730
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %413) #24
  store float 0xFFFFFFFFE0000000, float* %414, align 8
  store float 0xFFFFFFFFE0000000, float* %415, align 4
  call void @_Z13SkEvalCubicAtPK7SkPointfPS_S2_S2_(%struct.SkPoint* %728, float %739, %struct.SkPoint* null, %struct.SkPoint* nonnull %411, %struct.SkPoint* null) #24
  %760 = add i32 %722, 1
  %761 = icmp sgt i32 %760, -1
  br i1 %761, label %763, label %762

762:                                              ; preds = %759
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.51, i64 0, i64 0)) #26
  unreachable

763:                                              ; preds = %759
  %764 = icmp slt i32 %721, %760
  br i1 %764, label %765, label %776

765:                                              ; preds = %763
  %766 = add i32 %722, 5
  %767 = lshr i32 %766, 2
  %768 = add nuw i32 %767, %766
  %769 = icmp sgt i32 %768, -1
  br i1 %769, label %771, label %770

770:                                              ; preds = %765
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.50, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.52, i64 0, i64 0)) #26
  unreachable

771:                                              ; preds = %765
  %772 = sext i32 %768 to i64
  %773 = shl nsw i64 %772, 3
  %774 = call i8* @_Z16sk_realloc_throwPvm(i8* %723, i64 %773) #24
  %775 = bitcast i8* %774 to %struct.SkPoint*
  br label %776

776:                                              ; preds = %763, %771
  %777 = phi i32 [ %768, %771 ], [ %721, %763 ]
  %778 = phi i8* [ %774, %771 ], [ %723, %763 ]
  %779 = phi %struct.SkPoint* [ %775, %771 ], [ %724, %763 ]
  %780 = sext i32 %722 to i64
  %781 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %779, i64 %780
  %782 = bitcast %struct.SkPoint* %781 to i64*
  %783 = load i64, i64* %12, align 8
  store i64 %783, i64* %782, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %413) #24
  br label %784

784:                                              ; preds = %776, %730, %720
  %785 = phi i32 [ %721, %730 ], [ %777, %776 ], [ %721, %720 ]
  %786 = phi i32 [ %722, %730 ], [ %760, %776 ], [ %722, %720 ]
  %787 = phi i8* [ %723, %730 ], [ %778, %776 ], [ %723, %720 ]
  %788 = phi %struct.SkPoint* [ %724, %730 ], [ %779, %776 ], [ %724, %720 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %412) #24
  %789 = add nuw nsw i64 %725, 1
  %790 = icmp eq i64 %789, %714
  br i1 %790, label %715, label %720

791:                                              ; preds = %417
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %396) #24
  %792 = icmp ne i32 %419, 0
  %793 = xor i1 %20, %792
  call void @_Z7sk_freePv(i8* %420) #24
  br label %854

794:                                              ; preds = %715, %609, %506, %464
  %795 = phi i32 [ %465, %464 ], [ %507, %506 ], [ %610, %609 ], [ %716, %715 ]
  %796 = phi i32 [ %448, %464 ], [ %508, %506 ], [ %611, %609 ], [ %717, %715 ]
  %797 = phi i8* [ %466, %464 ], [ %509, %506 ], [ %612, %609 ], [ %718, %715 ]
  %798 = phi %struct.SkPoint* [ %467, %464 ], [ %510, %506 ], [ %613, %609 ], [ %719, %715 ]
  %799 = icmp sgt i32 %796, %419
  br i1 %799, label %800, label %849

800:                                              ; preds = %794
  %801 = add nsw i32 %796, -1
  %802 = sext i32 %801 to i64
  %803 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %798, i64 %802, i32 0
  %804 = bitcast float* %803 to <2 x float>*
  %805 = load <2 x float>, <2 x float>* %804, align 4
  %806 = fmul <2 x float> %805, %805
  %807 = extractelement <2 x float> %806, i32 0
  %808 = extractelement <2 x float> %806, i32 1
  %809 = fadd float %807, %808
  %810 = call float @llvm.fabs.f32(float %809) #24
  %811 = fcmp ugt float %810, 0x3F30000000000000
  br i1 %811, label %812, label %849

812:                                              ; preds = %800
  %813 = icmp sgt i32 %801, 0
  br i1 %813, label %814, label %849

814:                                              ; preds = %812
  %815 = zext i32 %801 to i64
  %816 = extractelement <2 x float> %805, i32 1
  %817 = extractelement <2 x float> %805, i32 0
  br label %818

818:                                              ; preds = %846, %814
  %819 = phi i64 [ 0, %814 ], [ %847, %846 ]
  %820 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %798, i64 %819
  %821 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %820, i64 0, i32 0
  %822 = load float, float* %821, align 4
  %823 = fmul float %816, %822
  %824 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %798, i64 %819, i32 1
  %825 = load float, float* %824, align 4
  %826 = fmul float %817, %825
  %827 = fsub float %823, %826
  %828 = call float @llvm.fabs.f32(float %827) #24
  %829 = fcmp ole float %828, 0x3F30000000000000
  %830 = fmul float %817, %822
  %831 = fcmp ule float %830, 0.000000e+00
  %832 = and i1 %831, %829
  %833 = fmul float %816, %825
  %834 = fcmp ule float %833, 0.000000e+00
  %835 = and i1 %834, %832
  br i1 %835, label %836, label %846

836:                                              ; preds = %818
  %837 = trunc i64 %819 to i32
  %838 = add nsw i32 %796, -2
  %839 = icmp eq i32 %838, %837
  br i1 %839, label %849, label %840

840:                                              ; preds = %836
  %841 = sext i32 %838 to i64
  %842 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %798, i64 %841
  %843 = bitcast %struct.SkPoint* %842 to i64*
  %844 = bitcast %struct.SkPoint* %820 to i64*
  %845 = load i64, i64* %843, align 4
  store i64 %845, i64* %844, align 4
  br label %849

846:                                              ; preds = %818
  %847 = add nuw nsw i64 %819, 1
  %848 = icmp eq i64 %847, %815
  br i1 %848, label %849, label %818

849:                                              ; preds = %846, %800, %812, %704, %687, %587, %575, %490, %478, %437, %430, %423, %417, %840, %836, %794
  %850 = phi i8* [ %797, %794 ], [ %797, %836 ], [ %797, %840 ], [ %420, %417 ], [ %420, %423 ], [ %420, %430 ], [ %420, %437 ], [ %420, %478 ], [ %420, %490 ], [ %420, %575 ], [ %420, %587 ], [ %420, %687 ], [ %420, %704 ], [ %797, %812 ], [ %797, %800 ], [ %797, %846 ]
  %851 = phi %struct.SkPoint* [ %798, %794 ], [ %798, %836 ], [ %798, %840 ], [ %421, %417 ], [ %421, %423 ], [ %421, %430 ], [ %421, %437 ], [ %421, %478 ], [ %421, %490 ], [ %421, %575 ], [ %421, %587 ], [ %421, %687 ], [ %421, %704 ], [ %798, %812 ], [ %798, %800 ], [ %798, %846 ]
  %852 = phi i32 [ %795, %794 ], [ %795, %836 ], [ %795, %840 ], [ %418, %417 ], [ %418, %423 ], [ %418, %430 ], [ %418, %437 ], [ %418, %478 ], [ %418, %490 ], [ %418, %575 ], [ %418, %587 ], [ %418, %687 ], [ %418, %704 ], [ %795, %812 ], [ %795, %800 ], [ %795, %846 ]
  %853 = phi i32 [ %796, %794 ], [ %837, %836 ], [ %838, %840 ], [ %419, %417 ], [ %419, %423 ], [ %419, %430 ], [ %419, %437 ], [ %419, %478 ], [ %419, %490 ], [ %419, %575 ], [ %419, %587 ], [ %419, %687 ], [ %419, %704 ], [ %796, %812 ], [ %801, %800 ], [ %796, %846 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %396) #24
  br label %417

854:                                              ; preds = %791, %372, %365, %360
  %855 = phi i1 [ %361, %360 ], [ %367, %365 ], [ %373, %372 ], [ %793, %791 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %91) #24
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %56) #24
  br label %856

856:                                              ; preds = %51, %39, %43, %47, %3, %854
  %857 = phi i1 [ %855, %854 ], [ %20, %3 ], [ %20, %51 ], [ %20, %47 ], [ %20, %43 ], [ %20, %39 ]
  ret i1 %857
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6SkPath19ConvertConicToQuadsERK7SkPointS2_S2_fPS0_i(%struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), float, %struct.SkPoint*, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SkConic, align 8
  %8 = bitcast %struct.SkConic* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %8) #24
  %9 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %7, i64 0, i32 1
  %10 = bitcast %struct.SkPoint* %0 to i64*
  %11 = bitcast %struct.SkConic* %7 to i64*
  %12 = load i64, i64* %10, align 4
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %7, i64 0, i32 0, i64 1
  %14 = bitcast %struct.SkPoint* %1 to i64*
  %15 = bitcast %struct.SkPoint* %13 to i64*
  %16 = load i64, i64* %14, align 4
  store i64 %16, i64* %15, align 8
  %17 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %7, i64 0, i32 0, i64 2
  %18 = bitcast %struct.SkPoint* %2 to i64*
  %19 = bitcast %struct.SkPoint* %17 to i64*
  %20 = load i64, i64* %18, align 4
  store i64 %20, i64* %19, align 8
  store float %3, float* %9, align 8
  %21 = call i32 @_ZNK7SkConic17chopIntoQuadsPOW2EP7SkPointi(%struct.SkConic* nonnull %7, %struct.SkPoint* %4, i32 %5) #24
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %8) #24
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkPathPriv12IsSimpleRectERK6SkPathbP6SkRectP15SkPathDirectionPj(%class.SkPath* nocapture readonly dereferenceable(16), i1 zeroext, %struct.SkRect* nocapture, i32* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca [5 x %struct.SkPoint], align 16
  %7 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %8 = load %class.SkPathRef*, %class.SkPathRef** %7, align 8
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 15
  %10 = load i8, i8* %9, align 2
  %11 = icmp eq i8 %10, 1
  br i1 %11, label %12, label %221

12:                                               ; preds = %5
  %13 = bitcast [5 x %struct.SkPoint]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %13) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -1, i64 40, i1 false)
  %14 = xor i1 %1, true
  %15 = zext i1 %14 to i8
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 4, i32 0
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 9
  %20 = load i8, i8* %19, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %12
  %23 = inttoptr i64 %18 to i8*
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 10
  %25 = load i8, i8* %24, align 1, !range !2
  br label %38

26:                                               ; preds = %12
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 1
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 3, i32 0
  %29 = load %struct.SkPoint*, %struct.SkPoint** %28, align 8
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 3, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %27, %struct.SkPoint* %29, i32 %31) #24
  %33 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %8, i64 0, i32 10
  %34 = zext i1 %32 to i8
  store i8 %34, i8* %33, align 1
  store i8 0, i8* %19, align 8
  %35 = load %class.SkPathRef*, %class.SkPathRef** %7, align 8
  %36 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %35, i64 0, i32 4, i32 0
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %26, %22
  %39 = phi i8* [ %23, %22 ], [ %37, %26 ]
  %40 = phi %class.SkPathRef* [ %8, %22 ], [ %35, %26 ]
  %41 = phi i8 [ %25, %22 ], [ %34, %26 ]
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = icmp eq i8* %39, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %43
  %46 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %40, i64 0, i32 4, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, i8* %39, i64 %48
  br label %50

50:                                               ; preds = %38, %43, %45
  %51 = phi i8* [ %49, %45 ], [ null, %43 ], [ %39, %38 ]
  %52 = inttoptr i64 %18 to i8*
  %53 = icmp eq i8* %51, %52
  br i1 %53, label %219, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %40, i64 0, i32 3, i32 0
  %56 = bitcast %struct.SkPoint** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 4
  %59 = bitcast [5 x %struct.SkPoint]* %6 to i64*
  %60 = bitcast %struct.SkPoint* %58 to i64*
  br label %61

61:                                               ; preds = %54, %114
  %62 = phi i8* [ %52, %54 ], [ %115, %114 ]
  %63 = phi i32 [ 0, %54 ], [ %116, %114 ]
  %64 = phi i8 [ %15, %54 ], [ %117, %114 ]
  %65 = phi i64 [ %57, %54 ], [ %119, %114 ]
  %66 = load i8, i8* %62, align 1
  switch i8 %66, label %67 [
    i8 0, label %68
    i8 1, label %74
    i8 2, label %219
    i8 3, label %219
    i8 4, label %219
    i8 5, label %84
  ]

67:                                               ; preds = %61
  tail call void @llvm.trap() #24, !noalias !23
  unreachable

68:                                               ; preds = %61
  %69 = icmp eq i32 %63, 0
  br i1 %69, label %70, label %219

70:                                               ; preds = %68
  %71 = inttoptr i64 %65 to %struct.SkPoint*
  %72 = inttoptr i64 %65 to i64*
  %73 = load i64, i64* %72, align 4
  store i64 %73, i64* %59, align 16
  br label %91

74:                                               ; preds = %61
  %75 = icmp eq i32 %63, 5
  br i1 %75, label %219, label %76

76:                                               ; preds = %74
  %77 = inttoptr i64 %65 to %struct.SkPoint*
  %78 = sext i32 %63 to i64
  %79 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 %78
  %80 = inttoptr i64 %65 to i64*
  %81 = bitcast %struct.SkPoint* %79 to i64*
  %82 = load i64, i64* %80, align 4
  store i64 %82, i64* %81, align 8
  %83 = add nsw i32 %63, 1
  br label %91

84:                                               ; preds = %61
  %85 = inttoptr i64 %65 to %struct.SkPoint*
  %86 = icmp eq i32 %63, 4
  br i1 %86, label %89, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds i8, i8* %62, i64 1
  br label %99

89:                                               ; preds = %84
  %90 = load i64, i64* %59, align 16
  store i64 %90, i64* %60, align 16
  br label %91

91:                                               ; preds = %89, %76, %70
  %92 = phi %struct.SkPoint* [ %77, %76 ], [ %71, %70 ], [ %85, %89 ]
  %93 = phi i8 [ %64, %76 ], [ %64, %70 ], [ 0, %89 ]
  %94 = phi i32 [ %83, %76 ], [ 1, %70 ], [ 5, %89 ]
  %95 = load i8, i8* %62, align 1
  %96 = getelementptr inbounds i8, i8* %62, i64 1
  switch i8 %95, label %104 [
    i8 0, label %105
    i8 1, label %105
    i8 2, label %97
    i8 3, label %112
    i8 4, label %98
    i8 5, label %99
  ]

97:                                               ; preds = %91
  br label %105

98:                                               ; preds = %91
  br label %105

99:                                               ; preds = %87, %91
  %100 = phi i8* [ %88, %87 ], [ %96, %91 ]
  %101 = phi i32 [ %63, %87 ], [ %94, %91 ]
  %102 = phi i8 [ 0, %87 ], [ %93, %91 ]
  %103 = phi %struct.SkPoint* [ %85, %87 ], [ %92, %91 ]
  br label %105

104:                                              ; preds = %91
  tail call void @llvm.trap() #24
  unreachable

105:                                              ; preds = %99, %98, %97, %91, %91
  %106 = phi i8* [ %96, %91 ], [ %96, %91 ], [ %96, %97 ], [ %96, %98 ], [ %100, %99 ]
  %107 = phi i32 [ %94, %91 ], [ %94, %91 ], [ %94, %97 ], [ %94, %98 ], [ %101, %99 ]
  %108 = phi i8 [ %93, %91 ], [ %93, %91 ], [ %93, %97 ], [ %93, %98 ], [ %102, %99 ]
  %109 = phi %struct.SkPoint* [ %92, %91 ], [ %92, %91 ], [ %92, %97 ], [ %92, %98 ], [ %103, %99 ]
  %110 = phi i64 [ 1, %91 ], [ 1, %91 ], [ 2, %97 ], [ 3, %98 ], [ 0, %99 ]
  %111 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %109, i64 %110
  br label %114

112:                                              ; preds = %91
  %113 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %92, i64 2
  br label %114

114:                                              ; preds = %105, %112
  %115 = phi i8* [ %106, %105 ], [ %96, %112 ]
  %116 = phi i32 [ %107, %105 ], [ %94, %112 ]
  %117 = phi i8 [ %108, %105 ], [ %93, %112 ]
  %118 = phi %struct.SkPoint* [ %111, %105 ], [ %113, %112 ]
  %119 = ptrtoint %struct.SkPoint* %118 to i64
  %120 = icmp eq i8* %51, %115
  br i1 %120, label %121, label %61

121:                                              ; preds = %114
  %122 = and i8 %117, 1
  %123 = icmp ne i8 %122, 0
  %124 = icmp slt i32 %116, 5
  %125 = or i1 %124, %123
  br i1 %125, label %219, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 0, i32 0
  %128 = load float, float* %127, align 16
  %129 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 4, i32 0
  %130 = load float, float* %129, align 16
  %131 = fcmp une float %128, %130
  br i1 %131, label %219, label %132

132:                                              ; preds = %126
  %133 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 0, i32 1
  %134 = load float, float* %133, align 4
  %135 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 4, i32 1
  %136 = load float, float* %135, align 4
  %137 = fcmp une float %134, %136
  br i1 %137, label %219, label %138

138:                                              ; preds = %132
  %139 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 3, i32 0
  %140 = load float, float* %139, align 8
  %141 = fcmp oeq float %128, %140
  br i1 %141, label %142, label %162

142:                                              ; preds = %138
  %143 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 1, i32 0
  %144 = load float, float* %143, align 8
  %145 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 2, i32 0
  %146 = load float, float* %145, align 16
  %147 = fcmp oeq float %144, %146
  br i1 %147, label %148, label %162

148:                                              ; preds = %142
  %149 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 1, i32 1
  %150 = load float, float* %149, align 4
  %151 = fcmp oeq float %134, %150
  br i1 %151, label %152, label %162

152:                                              ; preds = %148
  %153 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 3, i32 1
  %154 = load float, float* %153, align 4
  %155 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 2, i32 1
  %156 = load float, float* %155, align 4
  %157 = fcmp oeq float %154, %156
  br i1 %157, label %158, label %162

158:                                              ; preds = %152
  %159 = fcmp oeq float %128, %144
  %160 = fcmp oeq float %134, %154
  %161 = or i1 %159, %160
  br i1 %161, label %219, label %183

162:                                              ; preds = %152, %148, %142, %138
  %163 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 3, i32 1
  %164 = load float, float* %163, align 4
  %165 = fcmp oeq float %134, %164
  br i1 %165, label %166, label %219

166:                                              ; preds = %162
  %167 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 1, i32 1
  %168 = load float, float* %167, align 4
  %169 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 2, i32 1
  %170 = load float, float* %169, align 4
  %171 = fcmp oeq float %168, %170
  br i1 %171, label %172, label %219

172:                                              ; preds = %166
  %173 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 1, i32 0
  %174 = load float, float* %173, align 8
  %175 = fcmp oeq float %128, %174
  br i1 %175, label %176, label %219

176:                                              ; preds = %172
  %177 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %6, i64 0, i64 2, i32 0
  %178 = load float, float* %177, align 16
  %179 = fcmp une float %140, %178
  %180 = fcmp oeq float %134, %168
  %181 = or i1 %141, %180
  %182 = or i1 %181, %179
  br i1 %182, label %219, label %183

183:                                              ; preds = %176, %158
  %184 = phi float [ %156, %158 ], [ %170, %176 ]
  %185 = phi float [ %146, %158 ], [ %178, %176 ]
  %186 = phi i1 [ true, %158 ], [ false, %176 ]
  %187 = fcmp uge float %128, %185
  %188 = zext i1 %187 to i32
  %189 = fcmp olt float %134, %184
  %190 = select i1 %189, i32 0, i32 2
  %191 = or i32 %190, %188
  switch i32 %191, label %218 [
    i32 0, label %192
    i32 1, label %199
    i32 2, label %205
    i32 3, label %211
  ]

192:                                              ; preds = %183
  %193 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  store float %128, float* %193, align 4
  %194 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  store float %134, float* %194, align 4
  %195 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  store float %185, float* %195, align 4
  %196 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  store float %184, float* %196, align 4
  %197 = xor i1 %186, true
  %198 = zext i1 %197 to i32
  store i32 %198, i32* %3, align 4
  store i32 0, i32* %4, align 4
  br label %219

199:                                              ; preds = %183
  %200 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  store float %185, float* %200, align 4
  %201 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  store float %134, float* %201, align 4
  %202 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  store float %128, float* %202, align 4
  %203 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  store float %184, float* %203, align 4
  %204 = zext i1 %186 to i32
  store i32 %204, i32* %3, align 4
  store i32 1, i32* %4, align 4
  br label %219

205:                                              ; preds = %183
  %206 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  store float %128, float* %206, align 4
  %207 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  store float %184, float* %207, align 4
  %208 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  store float %185, float* %208, align 4
  %209 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  store float %134, float* %209, align 4
  %210 = zext i1 %186 to i32
  store i32 %210, i32* %3, align 4
  store i32 3, i32* %4, align 4
  br label %219

211:                                              ; preds = %183
  %212 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 0
  store float %185, float* %212, align 4
  %213 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 1
  store float %184, float* %213, align 4
  %214 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 2
  store float %128, float* %214, align 4
  %215 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %2, i64 0, i32 3
  store float %134, float* %215, align 4
  %216 = xor i1 %186, true
  %217 = zext i1 %216 to i32
  store i32 %217, i32* %3, align 4
  store i32 2, i32* %4, align 4
  br label %219

218:                                              ; preds = %183
  unreachable

219:                                              ; preds = %61, %61, %61, %68, %74, %50, %176, %126, %121, %158, %172, %166, %162, %211, %205, %199, %192, %132
  %220 = phi i1 [ false, %121 ], [ false, %132 ], [ false, %158 ], [ false, %176 ], [ false, %172 ], [ false, %166 ], [ false, %162 ], [ true, %211 ], [ true, %205 ], [ true, %199 ], [ true, %192 ], [ false, %126 ], [ false, %50 ], [ false, %74 ], [ false, %68 ], [ false, %61 ], [ false, %61 ], [ false, %61 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %13) #24
  br label %221

221:                                              ; preds = %5, %219
  %222 = phi i1 [ %220, %219 ], [ false, %5 ]
  ret i1 %222
}

; Function Attrs: nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN10SkPathPriv15DrawArcIsConvexEfbb(float, i1 zeroext, i1 zeroext) local_unnamed_addr #14 align 2 {
  %4 = xor i1 %2, true
  %5 = tail call float @llvm.fabs.f32(float %0)
  %6 = fcmp ult float %5, 3.600000e+02
  %7 = or i1 %6, %4
  br i1 %7, label %8, label %13

8:                                                ; preds = %3
  br i1 %1, label %9, label %11

9:                                                ; preds = %8
  %10 = fcmp ole float %5, 1.800000e+02
  br label %13

11:                                               ; preds = %8
  %12 = fcmp ole float %5, 3.600000e+02
  br label %13

13:                                               ; preds = %3, %11, %9
  %14 = phi i1 [ %10, %9 ], [ %12, %11 ], [ true, %3 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkPathPriv17CreateDrawArcPathEP6SkPathRK6SkRectffbb(%class.SkPath*, %struct.SkRect* dereferenceable(16), float, float, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.SkPathRef::Editor", align 8
  %8 = alloca %"class.SkPathRef::Editor", align 8
  %9 = tail call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %11 = load %class.SkPathRef*, %class.SkPathRef** %10, align 8
  store %class.SkPathRef* %9, %class.SkPathRef** %10, align 8
  %12 = icmp eq %class.SkPathRef* %11, null
  br i1 %12, label %19, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 -1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  tail call void @_ZN9SkPathRefD1Ev(%class.SkPathRef* nonnull %11) #24
  %18 = bitcast %class.SkPathRef* %11 to i8*
  tail call void @_ZdlPv(i8* %18) #25
  br label %19

19:                                               ; preds = %6, %13, %17
  %20 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 -1, i32* %20, align 8
  %21 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %22 = load i8, i8* %21, align 2
  %23 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %23 monotonic, align 1
  %24 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %24 monotonic, align 1
  %25 = and i8 %22, -8
  %26 = or i8 %25, 4
  store i8 %26, i8* %21, align 2
  %27 = xor i1 %5, true
  %28 = tail call float @llvm.fabs.f32(float %3)
  %29 = fcmp ult float %28, 3.600000e+02
  %30 = or i1 %29, %27
  br i1 %30, label %33, label %31

31:                                               ; preds = %19
  %32 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addOvalERK6SkRect15SkPathDirectionj(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, i32 0, i32 1) #24
  br label %136

33:                                               ; preds = %19
  br i1 %4, label %34, label %59

34:                                               ; preds = %33
  %35 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %36 = load float, float* %35, align 4
  %37 = fmul float %36, 5.000000e-01
  %38 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %39 = load float, float* %38, align 4
  %40 = fmul float %39, 5.000000e-01
  %41 = fadd float %37, %40
  %42 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %43 = load float, float* %42, align 4
  %44 = fmul float %43, 5.000000e-01
  %45 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %46 = load float, float* %45, align 4
  %47 = fmul float %46, 5.000000e-01
  %48 = fadd float %44, %47
  %49 = bitcast %"class.SkPathRef::Editor"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #24
  %50 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %7, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %50, align 8
  %51 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %7, %class.sk_sp* %51, i32 0, i32 0) #24
  %52 = load %class.SkPathRef*, %class.SkPathRef** %10, align 8
  %53 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %52, i64 0, i32 3, i32 2
  %54 = load i32, i32* %53, align 4
  store i32 %54, i32* %20, align 8
  %55 = load %class.SkPathRef*, %class.SkPathRef** %50, align 8
  %56 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %55, i32 0, float 0.000000e+00) #24
  %57 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 0, i32 0
  store float %41, float* %57, align 4
  %58 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %56, i64 0, i32 1
  store float %48, float* %58, align 4
  store atomic i8 2, i8* %23 monotonic, align 1
  store atomic i8 2, i8* %24 monotonic, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #24
  br label %59

59:                                               ; preds = %33, %34
  %60 = phi float [ 1.800000e+02, %34 ], [ 3.600000e+02, %33 ]
  %61 = fcmp ugt float %28, %60
  %62 = fcmp ule float %3, 0.000000e+00
  %63 = xor i1 %4, true
  %64 = zext i1 %63 to i8
  %65 = fcmp ugt float %3, -3.600000e+02
  br i1 %65, label %73, label %66

66:                                               ; preds = %59
  %67 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, float %2, float -1.800000e+02, i1 zeroext %63)
  %68 = fadd float %2, -1.800000e+02
  %69 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, float %68, float -1.800000e+02, i1 zeroext false)
  %70 = fadd float %68, -1.800000e+02
  %71 = fadd float %3, 3.600000e+02
  %72 = fcmp ugt float %71, -3.600000e+02
  br i1 %72, label %73, label %86

73:                                               ; preds = %66, %86, %59
  %74 = phi float [ %3, %59 ], [ %71, %66 ], [ %93, %86 ]
  %75 = phi float [ %2, %59 ], [ %70, %66 ], [ %92, %86 ]
  %76 = phi i8 [ %64, %59 ], [ 0, %86 ], [ 0, %66 ]
  %77 = fcmp ult float %74, 3.600000e+02
  %78 = icmp ne i8 %76, 0
  br i1 %77, label %104, label %79

79:                                               ; preds = %73
  %80 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, float %75, float 1.800000e+02, i1 zeroext %78)
  %81 = fadd float %75, 1.800000e+02
  %82 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, float %81, float 1.800000e+02, i1 zeroext false)
  %83 = fadd float %81, 1.800000e+02
  %84 = fadd float %74, -3.600000e+02
  %85 = fcmp ult float %84, 3.600000e+02
  br i1 %85, label %104, label %95

86:                                               ; preds = %66, %86
  %87 = phi float [ %92, %86 ], [ %70, %66 ]
  %88 = phi float [ %93, %86 ], [ %71, %66 ]
  %89 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, float %87, float -1.800000e+02, i1 zeroext false)
  %90 = fadd float %87, -1.800000e+02
  %91 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, float %90, float -1.800000e+02, i1 zeroext false)
  %92 = fadd float %90, -1.800000e+02
  %93 = fadd float %88, 3.600000e+02
  %94 = fcmp ugt float %93, -3.600000e+02
  br i1 %94, label %73, label %86, !llvm.loop !26

95:                                               ; preds = %79, %95
  %96 = phi float [ %101, %95 ], [ %83, %79 ]
  %97 = phi float [ %102, %95 ], [ %84, %79 ]
  %98 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, float %96, float 1.800000e+02, i1 zeroext false)
  %99 = fadd float %96, 1.800000e+02
  %100 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, float %99, float 1.800000e+02, i1 zeroext false)
  %101 = fadd float %99, 1.800000e+02
  %102 = fadd float %97, -3.600000e+02
  %103 = fcmp ult float %102, 3.600000e+02
  br i1 %103, label %104, label %95, !llvm.loop !27

104:                                              ; preds = %79, %95, %73
  %105 = phi float [ %74, %73 ], [ %84, %79 ], [ %102, %95 ]
  %106 = phi float [ %75, %73 ], [ %83, %79 ], [ %101, %95 ]
  %107 = phi i1 [ %78, %73 ], [ false, %95 ], [ false, %79 ]
  %108 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToERK6SkRectffb(%class.SkPath* %0, %struct.SkRect* dereferenceable(16) %1, float %106, float %105, i1 zeroext %107)
  br i1 %4, label %109, label %133

109:                                              ; preds = %104
  %110 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0
  %111 = load %class.SkPathRef*, %class.SkPathRef** %10, align 8
  %112 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %111, i64 0, i32 4, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %128

115:                                              ; preds = %109
  %116 = add nsw i32 %113, -1
  %117 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %111, i64 0, i32 4, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = sext i32 %116 to i64
  %120 = getelementptr inbounds i8, i8* %118, i64 %119
  %121 = load i8, i8* %120, align 1
  %122 = icmp ult i8 %121, 5
  br i1 %122, label %123, label %128

123:                                              ; preds = %115
  %124 = bitcast %"class.SkPathRef::Editor"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #24
  %125 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %8, i64 0, i32 0
  store %class.SkPathRef* inttoptr (i64 -6148914691236517206 to %class.SkPathRef*), %class.SkPathRef** %125, align 8
  call void @_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nonnull %8, %class.sk_sp* %110, i32 0, i32 0) #24
  %126 = load %class.SkPathRef*, %class.SkPathRef** %125, align 8
  %127 = call %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* %126, i32 5, float 0.000000e+00) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #24
  br label %128

128:                                              ; preds = %109, %115, %123
  %129 = load i32, i32* %20, align 8
  %130 = ashr i32 %129, 31
  %131 = xor i32 %129, -1
  %132 = xor i32 %130, %131
  store i32 %132, i32* %20, align 8
  br label %133

133:                                              ; preds = %128, %104
  %134 = zext i1 %61 to i8
  store atomic i8 %134, i8* %23 monotonic, align 1
  %135 = zext i1 %62 to i8
  store atomic i8 %135, i8* %24 monotonic, align 1
  br label %136

136:                                              ; preds = %133, %31
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK6SkPath18computeTightBoundsEv(%class.SkPath* nocapture readonly) local_unnamed_addr #15 align 2 {
  %2 = alloca %struct.SkConic, align 8
  %3 = alloca [2 x float], align 4
  %4 = alloca [4 x float], align 16
  %5 = alloca [5 x %struct.SkPoint], align 16
  %6 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %7 = load %class.SkPathRef*, %class.SkPathRef** %6, align 8
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 4, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %356, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 15
  %13 = load i8, i8* %12, align 2
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %35

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 9
  %17 = load i8, i8* %16, align 8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %28, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 1
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 3, i32 0
  %22 = load %struct.SkPoint*, %struct.SkPoint** %21, align 8
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 3, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %20, %struct.SkPoint* %22, i32 %24) #24
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 10
  %27 = zext i1 %25 to i8
  store i8 %27, i8* %26, align 1
  store i8 0, i8* %16, align 8
  br label %28

28:                                               ; preds = %15, %19
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 1
  %30 = bitcast %struct.SkRect* %29 to <2 x float>*
  %31 = load <2 x float>, <2 x float>* %30, align 4
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 1, i32 2
  %33 = bitcast float* %32 to <2 x float>*
  %34 = load <2 x float>, <2 x float>* %33, align 4
  br label %356

35:                                               ; preds = %11
  %36 = bitcast [5 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %36) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 -1, i64 40, i1 false)
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 3, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 3, i32 0
  %42 = bitcast %struct.SkPoint** %41 to i64**
  %43 = load i64*, i64** %42, align 8
  %44 = load i64, i64* %43, align 4
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi i64 [ %44, %40 ], [ 0, %35 ]
  %47 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %46, i32 0
  %48 = bitcast <2 x i64> %47 to <4 x float>
  %49 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 4, i32 0
  %50 = bitcast i8** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 9
  %53 = load i8, i8* %52, align 8
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %45
  %56 = inttoptr i64 %51 to i8*
  %57 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 10
  %58 = load i8, i8* %57, align 1, !range !2
  br label %69

59:                                               ; preds = %45
  %60 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 1
  %61 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 3, i32 0
  %62 = load %struct.SkPoint*, %struct.SkPoint** %61, align 8
  %63 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %60, %struct.SkPoint* %62, i32 %38) #24
  %64 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 10
  %65 = zext i1 %63 to i8
  store i8 %65, i8* %64, align 1
  store i8 0, i8* %52, align 8
  %66 = load %class.SkPathRef*, %class.SkPathRef** %6, align 8
  %67 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %66, i64 0, i32 4, i32 0
  %68 = load i8*, i8** %67, align 8
  br label %69

69:                                               ; preds = %59, %55
  %70 = phi i8* [ %56, %55 ], [ %68, %59 ]
  %71 = phi %class.SkPathRef* [ %7, %55 ], [ %66, %59 ]
  %72 = phi i8 [ %58, %55 ], [ %65, %59 ]
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %81, label %74

74:                                               ; preds = %69
  %75 = icmp eq i8* %70, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %71, i64 0, i32 4, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, i8* %70, i64 %79
  br label %81

81:                                               ; preds = %69, %74, %76
  %82 = phi i8* [ %80, %76 ], [ null, %74 ], [ %70, %69 ]
  %83 = inttoptr i64 %51 to i8*
  %84 = icmp eq i8* %82, %83
  br i1 %84, label %106, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %71, i64 0, i32 5, i32 0
  %87 = bitcast float** %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %71, i64 0, i32 3, i32 0
  %90 = bitcast %struct.SkPoint** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast [4 x float]* %4 to i8*
  %93 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 0
  %94 = bitcast %struct.SkConic* %2 to i8*
  %95 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %2, i64 0, i32 1
  %96 = bitcast %struct.SkConic* %2 to i64*
  %97 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %2, i64 0, i32 0, i64 1
  %98 = bitcast %struct.SkPoint* %97 to i64*
  %99 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %2, i64 0, i32 0, i64 2
  %100 = bitcast %struct.SkPoint* %99 to i64*
  %101 = bitcast float* %95 to i32*
  %102 = bitcast [2 x float]* %3 to i8*
  %103 = getelementptr inbounds [2 x float], [2 x float]* %3, i64 0, i64 0
  %104 = getelementptr inbounds [2 x float], [2 x float]* %3, i64 0, i64 1
  %105 = bitcast [5 x %struct.SkPoint]* %5 to i64*
  br label %111

106:                                              ; preds = %309, %81
  %107 = phi <4 x float> [ %48, %81 ], [ %312, %309 ]
  %108 = phi <4 x float> [ %48, %81 ], [ %311, %309 ]
  %109 = shufflevector <4 x float> %108, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %110 = shufflevector <4 x float> %107, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %36) #24
  br label %356

111:                                              ; preds = %85, %309
  %112 = phi i8* [ %83, %85 ], [ %310, %309 ]
  %113 = phi <4 x float> [ %48, %85 ], [ %311, %309 ]
  %114 = phi <4 x float> [ %48, %85 ], [ %312, %309 ]
  %115 = phi i64 [ %88, %85 ], [ %314, %309 ]
  %116 = phi i64 [ %91, %85 ], [ %315, %309 ]
  %117 = load i8, i8* %112, align 1
  switch i8 %117, label %121 [
    i8 0, label %122
    i8 1, label %126
    i8 2, label %130
    i8 3, label %169
    i8 4, label %206
    i8 5, label %118
  ]

118:                                              ; preds = %111
  %119 = inttoptr i64 %116 to %struct.SkPoint*
  %120 = getelementptr inbounds i8, i8* %112, i64 1
  br label %291

121:                                              ; preds = %111
  call void @llvm.trap() #24, !noalias !28
  unreachable

122:                                              ; preds = %111
  %123 = inttoptr i64 %116 to %struct.SkPoint*
  %124 = inttoptr i64 %116 to i64*
  %125 = load i64, i64* %124, align 4
  store i64 %125, i64* %105, align 16
  br label %252

126:                                              ; preds = %111
  %127 = inttoptr i64 %116 to %struct.SkPoint*
  %128 = inttoptr i64 %116 to i64*
  %129 = load i64, i64* %128, align 4
  store i64 %129, i64* %105, align 16
  br label %252

130:                                              ; preds = %111
  %131 = inttoptr i64 %116 to %struct.SkPoint*
  %132 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %131, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #24
  store float 0xFFFFFFFFE0000000, float* %103, align 4
  store float 0xFFFFFFFFE0000000, float* %104, align 4
  %133 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %132, i64 0, i32 0
  %134 = load float, float* %133, align 4
  %135 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %131, i64 0, i32 0
  %136 = load float, float* %135, align 4
  %137 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %131, i64 1
  %138 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %137, i64 0, i32 0
  %139 = load float, float* %138, align 4
  %140 = call i32 @_Z17SkFindQuadExtremafffPf(float %134, float %136, float %139, float* nonnull %103) #24
  %141 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %131, i64 -1, i32 1
  %142 = load float, float* %141, align 4
  %143 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %131, i64 0, i32 1
  %144 = load float, float* %143, align 4
  %145 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %131, i64 1, i32 1
  %146 = load float, float* %145, align 4
  %147 = sext i32 %140 to i64
  %148 = getelementptr inbounds [2 x float], [2 x float]* %3, i64 0, i64 %147
  %149 = call i32 @_Z17SkFindQuadExtremafffPf(float %142, float %144, float %146, float* %148) #24
  %150 = add i32 %149, %140
  %151 = icmp sgt i32 %150, 0
  br i1 %151, label %152, label %163

152:                                              ; preds = %130
  %153 = zext i32 %150 to i64
  br label %154

154:                                              ; preds = %154, %152
  %155 = phi i64 [ 0, %152 ], [ %161, %154 ]
  %156 = getelementptr inbounds [2 x float], [2 x float]* %3, i64 0, i64 %155
  %157 = load float, float* %156, align 4
  %158 = call <2 x float> @_Z12SkEvalQuadAtPK7SkPointf(%struct.SkPoint* %132, float %157) #24
  %159 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %155
  %160 = bitcast %struct.SkPoint* %159 to <2 x float>*
  store <2 x float> %158, <2 x float>* %160, align 8
  %161 = add nuw nsw i64 %155, 1
  %162 = icmp eq i64 %161, %153
  br i1 %162, label %163, label %154

163:                                              ; preds = %154, %130
  %164 = sext i32 %150 to i64
  %165 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %164
  %166 = bitcast %struct.SkPoint* %137 to i64*
  %167 = bitcast %struct.SkPoint* %165 to i64*
  %168 = load i64, i64* %166, align 4
  store i64 %168, i64* %167, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #24
  br label %247

169:                                              ; preds = %111
  %170 = inttoptr i64 %116 to %struct.SkPoint*
  %171 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %170, i64 -1
  %172 = inttoptr i64 %115 to i32*
  %173 = load i32, i32* %172, align 4
  call void @llvm.lifetime.start.p0i8(i64 28, i8* nonnull %94) #24
  %174 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %170, i64 1
  %175 = bitcast %struct.SkPoint* %171 to i64*
  %176 = load i64, i64* %175, align 4
  store i64 %176, i64* %96, align 8
  %177 = inttoptr i64 %116 to i64*
  %178 = load i64, i64* %177, align 4
  store i64 %178, i64* %98, align 8
  %179 = bitcast %struct.SkPoint* %174 to i64*
  %180 = load i64, i64* %179, align 4
  store i64 %180, i64* %100, align 8
  store i32 %173, i32* %101, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #24
  store float 0xFFFFFFFFE0000000, float* %103, align 4
  store float 0xFFFFFFFFE0000000, float* %104, align 4
  %181 = call zeroext i1 @_ZNK7SkConic12findXExtremaEPf(%struct.SkConic* nonnull %2, float* nonnull %103) #24
  %182 = zext i1 %181 to i32
  %183 = zext i1 %181 to i64
  %184 = getelementptr inbounds [2 x float], [2 x float]* %3, i64 0, i64 %183
  %185 = call zeroext i1 @_ZNK7SkConic12findYExtremaEPf(%struct.SkConic* nonnull %2, float* %184) #24
  %186 = zext i1 %185 to i32
  %187 = add nuw nsw i32 %186, %182
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %200, label %189

189:                                              ; preds = %169
  %190 = zext i32 %187 to i64
  br label %191

191:                                              ; preds = %191, %189
  %192 = phi i64 [ 0, %189 ], [ %198, %191 ]
  %193 = getelementptr inbounds [2 x float], [2 x float]* %3, i64 0, i64 %192
  %194 = load float, float* %193, align 4
  %195 = call <2 x float> @_ZNK7SkConic6evalAtEf(%struct.SkConic* nonnull %2, float %194) #24
  %196 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %192
  %197 = bitcast %struct.SkPoint* %196 to <2 x float>*
  store <2 x float> %195, <2 x float>* %197, align 8
  %198 = add nuw nsw i64 %192, 1
  %199 = icmp eq i64 %198, %190
  br i1 %199, label %200, label %191

200:                                              ; preds = %191, %169
  %201 = phi i64 [ 0, %169 ], [ %190, %191 ]
  %202 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %201
  %203 = bitcast %struct.SkPoint* %202 to i64*
  %204 = load i64, i64* %179, align 4
  store i64 %204, i64* %203, align 8
  %205 = add nuw nsw i32 %187, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #24
  call void @llvm.lifetime.end.p0i8(i64 28, i8* nonnull %94) #24
  br label %252

206:                                              ; preds = %111
  %207 = inttoptr i64 %116 to %struct.SkPoint*
  %208 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %207, i64 -1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #24
  %209 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %208, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %92, i8 -1, i64 16, i1 false) #24
  %210 = load float, float* %209, align 4
  %211 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %207, i64 0, i32 0
  %212 = load float, float* %211, align 4
  %213 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %207, i64 1, i32 0
  %214 = load float, float* %213, align 4
  %215 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %207, i64 2
  %216 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %215, i64 0, i32 0
  %217 = load float, float* %216, align 4
  %218 = call i32 @_Z18SkFindCubicExtremaffffPf(float %210, float %212, float %214, float %217, float* nonnull %93) #24
  %219 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %207, i64 -1, i32 1
  %220 = load float, float* %219, align 4
  %221 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %207, i64 0, i32 1
  %222 = load float, float* %221, align 4
  %223 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %207, i64 1, i32 1
  %224 = load float, float* %223, align 4
  %225 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %207, i64 2, i32 1
  %226 = load float, float* %225, align 4
  %227 = sext i32 %218 to i64
  %228 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 %227
  %229 = call i32 @_Z18SkFindCubicExtremaffffPf(float %220, float %222, float %224, float %226, float* %228) #24
  %230 = add i32 %229, %218
  %231 = icmp sgt i32 %230, 0
  br i1 %231, label %232, label %241

232:                                              ; preds = %206
  %233 = zext i32 %230 to i64
  br label %234

234:                                              ; preds = %234, %232
  %235 = phi i64 [ 0, %232 ], [ %239, %234 ]
  %236 = getelementptr inbounds [4 x float], [4 x float]* %4, i64 0, i64 %235
  %237 = load float, float* %236, align 4
  %238 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %235
  call void @_Z13SkEvalCubicAtPK7SkPointfPS_S2_S2_(%struct.SkPoint* %208, float %237, %struct.SkPoint* %238, %struct.SkPoint* null, %struct.SkPoint* null) #24
  %239 = add nuw nsw i64 %235, 1
  %240 = icmp eq i64 %239, %233
  br i1 %240, label %241, label %234

241:                                              ; preds = %234, %206
  %242 = sext i32 %230 to i64
  %243 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %242
  %244 = bitcast %struct.SkPoint* %215 to i64*
  %245 = bitcast %struct.SkPoint* %243 to i64*
  %246 = load i64, i64* %244, align 4
  store i64 %246, i64* %245, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #24
  br label %247

247:                                              ; preds = %241, %163
  %248 = phi %struct.SkPoint* [ %207, %241 ], [ %131, %163 ]
  %249 = phi i32 [ %230, %241 ], [ %150, %163 ]
  %250 = add nsw i32 %249, 1
  %251 = icmp sgt i32 %249, -1
  br i1 %251, label %252, label %283

252:                                              ; preds = %122, %126, %200, %247
  %253 = phi i32 [ %250, %247 ], [ 1, %122 ], [ 1, %126 ], [ %205, %200 ]
  %254 = phi %struct.SkPoint* [ %248, %247 ], [ %123, %122 ], [ %127, %126 ], [ %170, %200 ]
  %255 = zext i32 %253 to i64
  %256 = add nsw i64 %255, -1
  %257 = and i64 %255, 3
  %258 = icmp ult i64 %256, 3
  br i1 %258, label %261, label %259

259:                                              ; preds = %252
  %260 = sub nsw i64 %255, %257
  br label %317

261:                                              ; preds = %317, %252
  %262 = phi <4 x float> [ undef, %252 ], [ %351, %317 ]
  %263 = phi <4 x float> [ undef, %252 ], [ %352, %317 ]
  %264 = phi i64 [ 0, %252 ], [ %353, %317 ]
  %265 = phi <4 x float> [ %113, %252 ], [ %351, %317 ]
  %266 = phi <4 x float> [ %114, %252 ], [ %352, %317 ]
  %267 = icmp eq i64 %257, 0
  br i1 %267, label %283, label %268

268:                                              ; preds = %261, %268
  %269 = phi i64 [ %280, %268 ], [ %264, %261 ]
  %270 = phi <4 x float> [ %278, %268 ], [ %265, %261 ]
  %271 = phi <4 x float> [ %279, %268 ], [ %266, %261 ]
  %272 = phi i64 [ %281, %268 ], [ %257, %261 ]
  %273 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %269
  %274 = bitcast %struct.SkPoint* %273 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %275, i32 0
  %277 = bitcast <2 x i64> %276 to <4 x float>
  %278 = call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %270, <4 x float> %277) #24
  %279 = call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %271, <4 x float> %277) #24
  %280 = add nuw nsw i64 %269, 1
  %281 = add i64 %272, -1
  %282 = icmp eq i64 %281, 0
  br i1 %282, label %283, label %268, !llvm.loop !31

283:                                              ; preds = %261, %268, %247
  %284 = phi %struct.SkPoint* [ %248, %247 ], [ %254, %268 ], [ %254, %261 ]
  %285 = phi <4 x float> [ %114, %247 ], [ %263, %261 ], [ %279, %268 ]
  %286 = phi <4 x float> [ %113, %247 ], [ %262, %261 ], [ %278, %268 ]
  %287 = load i8, i8* %112, align 1
  %288 = getelementptr inbounds i8, i8* %112, i64 1
  switch i8 %287, label %296 [
    i8 0, label %297
    i8 1, label %297
    i8 2, label %289
    i8 3, label %304
    i8 4, label %290
    i8 5, label %291
  ]

289:                                              ; preds = %283
  br label %297

290:                                              ; preds = %283
  br label %297

291:                                              ; preds = %118, %283
  %292 = phi i8* [ %120, %118 ], [ %288, %283 ]
  %293 = phi <4 x float> [ %113, %118 ], [ %286, %283 ]
  %294 = phi <4 x float> [ %114, %118 ], [ %285, %283 ]
  %295 = phi %struct.SkPoint* [ %119, %118 ], [ %284, %283 ]
  br label %297

296:                                              ; preds = %283
  call void @llvm.trap() #24
  unreachable

297:                                              ; preds = %291, %290, %289, %283, %283
  %298 = phi i8* [ %288, %283 ], [ %288, %283 ], [ %288, %289 ], [ %288, %290 ], [ %292, %291 ]
  %299 = phi <4 x float> [ %286, %283 ], [ %286, %283 ], [ %286, %289 ], [ %286, %290 ], [ %293, %291 ]
  %300 = phi <4 x float> [ %285, %283 ], [ %285, %283 ], [ %285, %289 ], [ %285, %290 ], [ %294, %291 ]
  %301 = phi %struct.SkPoint* [ %284, %283 ], [ %284, %283 ], [ %284, %289 ], [ %284, %290 ], [ %295, %291 ]
  %302 = phi i64 [ 1, %283 ], [ 1, %283 ], [ 2, %289 ], [ 3, %290 ], [ 0, %291 ]
  %303 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %301, i64 %302
  br label %309

304:                                              ; preds = %283
  %305 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %284, i64 2
  %306 = inttoptr i64 %115 to float*
  %307 = getelementptr inbounds float, float* %306, i64 1
  %308 = ptrtoint float* %307 to i64
  br label %309

309:                                              ; preds = %297, %304
  %310 = phi i8* [ %298, %297 ], [ %288, %304 ]
  %311 = phi <4 x float> [ %299, %297 ], [ %286, %304 ]
  %312 = phi <4 x float> [ %300, %297 ], [ %285, %304 ]
  %313 = phi %struct.SkPoint* [ %303, %297 ], [ %305, %304 ]
  %314 = phi i64 [ %115, %297 ], [ %308, %304 ]
  %315 = ptrtoint %struct.SkPoint* %313 to i64
  %316 = icmp eq i8* %82, %310
  br i1 %316, label %106, label %111

317:                                              ; preds = %317, %259
  %318 = phi i64 [ 0, %259 ], [ %353, %317 ]
  %319 = phi <4 x float> [ %113, %259 ], [ %351, %317 ]
  %320 = phi <4 x float> [ %114, %259 ], [ %352, %317 ]
  %321 = phi i64 [ %260, %259 ], [ %354, %317 ]
  %322 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %318
  %323 = bitcast %struct.SkPoint* %322 to i64*
  %324 = load i64, i64* %323, align 16
  %325 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %324, i32 0
  %326 = bitcast <2 x i64> %325 to <4 x float>
  %327 = call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %319, <4 x float> %326) #24
  %328 = call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %320, <4 x float> %326) #24
  %329 = or i64 %318, 1
  %330 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %329
  %331 = bitcast %struct.SkPoint* %330 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %332, i32 0
  %334 = bitcast <2 x i64> %333 to <4 x float>
  %335 = call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %327, <4 x float> %334) #24
  %336 = call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %328, <4 x float> %334) #24
  %337 = or i64 %318, 2
  %338 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %337
  %339 = bitcast %struct.SkPoint* %338 to i64*
  %340 = load i64, i64* %339, align 16
  %341 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %340, i32 0
  %342 = bitcast <2 x i64> %341 to <4 x float>
  %343 = call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %335, <4 x float> %342) #24
  %344 = call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %336, <4 x float> %342) #24
  %345 = or i64 %318, 3
  %346 = getelementptr inbounds [5 x %struct.SkPoint], [5 x %struct.SkPoint]* %5, i64 0, i64 %345
  %347 = bitcast %struct.SkPoint* %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %348, i32 0
  %350 = bitcast <2 x i64> %349 to <4 x float>
  %351 = call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %343, <4 x float> %350) #24
  %352 = call <4 x float> @llvm.x86.sse.max.ps(<4 x float> %344, <4 x float> %350) #24
  %353 = add nuw nsw i64 %318, 4
  %354 = add i64 %321, -4
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %261, label %317

356:                                              ; preds = %1, %106, %28
  %357 = phi <2 x float> [ %31, %28 ], [ %109, %106 ], [ zeroinitializer, %1 ]
  %358 = phi <2 x float> [ %34, %28 ], [ %110, %106 ], [ zeroinitializer, %1 ]
  %359 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %357, 0
  %360 = insertvalue { <2 x float>, <2 x float> } %359, <2 x float> %358, 1
  ret { <2 x float>, <2 x float> } %360
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6SkPath16IsLineDegenerateERK7SkPointS2_b(%struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %7 = load float, float* %6, align 4
  br i1 %2, label %8, label %16

8:                                                ; preds = %3
  %9 = fcmp oeq float %5, %7
  br i1 %9, label %10, label %34

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fcmp oeq float %12, %14
  br label %34

16:                                               ; preds = %3
  %17 = fsub float %5, %7
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %19 = load float, float* %18, align 4
  %20 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = fsub float %19, %21
  %23 = bitcast float %17 to i32
  %24 = and i32 %23, 2139095040
  %25 = icmp eq i32 %24, 2139095040
  br i1 %25, label %34, label %26

26:                                               ; preds = %16
  %27 = bitcast float %22 to i32
  %28 = and i32 %27, 2139095040
  %29 = icmp eq i32 %28, 2139095040
  br i1 %29, label %34, label %30

30:                                               ; preds = %26
  %31 = fcmp oeq float %17, 0.000000e+00
  %32 = fcmp oeq float %22, 0.000000e+00
  %33 = and i1 %31, %32
  br label %34

34:                                               ; preds = %30, %26, %16, %10, %8
  %35 = phi i1 [ false, %8 ], [ %15, %10 ], [ true, %26 ], [ %33, %30 ], [ true, %16 ]
  ret i1 %35
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6SkPath16IsQuadDegenerateERK7SkPointS2_S2_b(%struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %8 = load float, float* %7, align 4
  br i1 %3, label %9, label %25

9:                                                ; preds = %4
  %10 = fcmp oeq float %6, %8
  br i1 %10, label %11, label %61

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = fcmp oeq float %13, %15
  br i1 %16, label %17, label %61

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %19 = load float, float* %18, align 4
  %20 = fcmp oeq float %8, %19
  br i1 %20, label %21, label %61

21:                                               ; preds = %17
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = fcmp oeq float %15, %23
  br label %61

25:                                               ; preds = %4
  %26 = fsub float %6, %8
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = fsub float %28, %30
  %32 = bitcast float %26 to i32
  %33 = and i32 %32, 2139095040
  %34 = icmp eq i32 %33, 2139095040
  br i1 %34, label %43, label %35

35:                                               ; preds = %25
  %36 = bitcast float %31 to i32
  %37 = and i32 %36, 2139095040
  %38 = icmp eq i32 %37, 2139095040
  br i1 %38, label %43, label %39

39:                                               ; preds = %35
  %40 = fcmp oeq float %26, 0.000000e+00
  %41 = fcmp oeq float %31, 0.000000e+00
  %42 = and i1 %40, %41
  br i1 %42, label %43, label %61

43:                                               ; preds = %25, %35, %39
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %45 = load float, float* %44, align 4
  %46 = fsub float %8, %45
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %48 = load float, float* %47, align 4
  %49 = fsub float %30, %48
  %50 = bitcast float %46 to i32
  %51 = and i32 %50, 2139095040
  %52 = icmp eq i32 %51, 2139095040
  br i1 %52, label %61, label %53

53:                                               ; preds = %43
  %54 = bitcast float %49 to i32
  %55 = and i32 %54, 2139095040
  %56 = icmp eq i32 %55, 2139095040
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  %58 = fcmp oeq float %46, 0.000000e+00
  %59 = fcmp oeq float %49, 0.000000e+00
  %60 = and i1 %58, %59
  br label %61

61:                                               ; preds = %9, %57, %53, %43, %21, %17, %39, %11
  %62 = phi i1 [ false, %11 ], [ false, %39 ], [ false, %17 ], [ %24, %21 ], [ true, %53 ], [ %60, %57 ], [ true, %43 ], [ false, %9 ]
  ret i1 %62
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6SkPath17IsCubicDegenerateERK7SkPointS2_S2_S2_b(%struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #7 align 2 {
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %9 = load float, float* %8, align 4
  br i1 %4, label %10, label %34

10:                                               ; preds = %5
  %11 = fcmp oeq float %7, %9
  br i1 %11, label %12, label %88

12:                                               ; preds = %10
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fcmp oeq float %14, %16
  br i1 %17, label %18, label %88

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = fcmp oeq float %9, %20
  br i1 %21, label %22, label %88

22:                                               ; preds = %18
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %24 = load float, float* %23, align 4
  %25 = fcmp oeq float %16, %24
  br i1 %25, label %26, label %88

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %28 = load float, float* %27, align 4
  %29 = fcmp oeq float %20, %28
  br i1 %29, label %30, label %88

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = fcmp oeq float %24, %32
  br label %88

34:                                               ; preds = %5
  %35 = fsub float %7, %9
  %36 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %37 = load float, float* %36, align 4
  %38 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %39 = load float, float* %38, align 4
  %40 = fsub float %37, %39
  %41 = bitcast float %35 to i32
  %42 = and i32 %41, 2139095040
  %43 = icmp eq i32 %42, 2139095040
  br i1 %43, label %52, label %44

44:                                               ; preds = %34
  %45 = bitcast float %40 to i32
  %46 = and i32 %45, 2139095040
  %47 = icmp eq i32 %46, 2139095040
  br i1 %47, label %52, label %48

48:                                               ; preds = %44
  %49 = fcmp oeq float %35, 0.000000e+00
  %50 = fcmp oeq float %40, 0.000000e+00
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %88

52:                                               ; preds = %34, %44, %48
  %53 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %54 = load float, float* %53, align 4
  %55 = fsub float %9, %54
  %56 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %57 = load float, float* %56, align 4
  %58 = fsub float %39, %57
  %59 = bitcast float %55 to i32
  %60 = and i32 %59, 2139095040
  %61 = icmp eq i32 %60, 2139095040
  br i1 %61, label %70, label %62

62:                                               ; preds = %52
  %63 = bitcast float %58 to i32
  %64 = and i32 %63, 2139095040
  %65 = icmp eq i32 %64, 2139095040
  br i1 %65, label %70, label %66

66:                                               ; preds = %62
  %67 = fcmp oeq float %55, 0.000000e+00
  %68 = fcmp oeq float %58, 0.000000e+00
  %69 = and i1 %67, %68
  br i1 %69, label %70, label %88

70:                                               ; preds = %52, %62, %66
  %71 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %72 = load float, float* %71, align 4
  %73 = fsub float %54, %72
  %74 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %75 = load float, float* %74, align 4
  %76 = fsub float %57, %75
  %77 = bitcast float %73 to i32
  %78 = and i32 %77, 2139095040
  %79 = icmp eq i32 %78, 2139095040
  br i1 %79, label %88, label %80

80:                                               ; preds = %70
  %81 = bitcast float %76 to i32
  %82 = and i32 %81, 2139095040
  %83 = icmp eq i32 %82, 2139095040
  br i1 %83, label %88, label %84

84:                                               ; preds = %80
  %85 = fcmp oeq float %73, 0.000000e+00
  %86 = fcmp oeq float %76, 0.000000e+00
  %87 = and i1 %85, %86
  br label %88

88:                                               ; preds = %18, %10, %84, %80, %70, %30, %26, %48, %66, %12, %22
  %89 = phi i1 [ false, %22 ], [ false, %12 ], [ false, %66 ], [ false, %48 ], [ false, %26 ], [ %33, %30 ], [ true, %80 ], [ %87, %84 ], [ true, %70 ], [ false, %10 ], [ false, %18 ]
  ret i1 %89
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i64 } @_Z21sk_path_analyze_verbsPKhi(i8* nocapture readonly, i32) local_unnamed_addr #7 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %18

6:                                                ; preds = %55, %2
  %7 = phi i64 [ 0, %2 ], [ %56, %55 ]
  %8 = phi i32 [ 0, %2 ], [ %57, %55 ]
  %9 = phi i8 [ 0, %2 ], [ %59, %55 ]
  %10 = and i8 %9, 1
  %11 = xor i8 %10, 1
  %12 = zext i32 %8 to i64
  %13 = shl nuw i64 %12, 32
  %14 = zext i8 %11 to i64
  %15 = or i64 %13, %14
  %16 = insertvalue { i64, i64 } undef, i64 %15, 0
  %17 = insertvalue { i64, i64 } %16, i64 %7, 1
  ret { i64, i64 } %17

18:                                               ; preds = %55, %4
  %19 = phi i64 [ 0, %4 ], [ %60, %55 ]
  %20 = phi i8 [ 0, %4 ], [ %59, %55 ]
  %21 = phi i8 [ 1, %4 ], [ %58, %55 ]
  %22 = phi i32 [ 0, %4 ], [ %57, %55 ]
  %23 = phi i64 [ 0, %4 ], [ %56, %55 ]
  %24 = getelementptr inbounds i8, i8* %0, i64 %19
  %25 = load i8, i8* %24, align 1
  switch i8 %25, label %55 [
    i8 0, label %26
    i8 1, label %28
    i8 2, label %33
    i8 3, label %38
    i8 4, label %47
    i8 5, label %52
  ]

26:                                               ; preds = %18
  %27 = add nsw i32 %22, 1
  br label %55

28:                                               ; preds = %18
  %29 = or i8 %20, %21
  %30 = and i8 %29, 1
  %31 = or i64 %23, 4294967296
  %32 = add nsw i32 %22, 1
  br label %55

33:                                               ; preds = %18
  %34 = or i8 %20, %21
  %35 = and i8 %34, 1
  %36 = or i64 %23, 8589934592
  %37 = add nsw i32 %22, 2
  br label %55

38:                                               ; preds = %18
  %39 = or i8 %20, %21
  %40 = and i8 %39, 1
  %41 = and i64 %23, -21474836480
  %42 = add nsw i32 %22, 2
  %43 = add i64 %23, 1
  %44 = and i64 %43, 4294967295
  %45 = or i64 %41, %44
  %46 = or i64 %45, 17179869184
  br label %55

47:                                               ; preds = %18
  %48 = or i8 %20, %21
  %49 = and i8 %48, 1
  %50 = or i64 %23, 34359738368
  %51 = add nsw i32 %22, 3
  br label %55

52:                                               ; preds = %18
  %53 = or i8 %20, %21
  %54 = and i8 %53, 1
  br label %55

55:                                               ; preds = %18, %26, %28, %33, %38, %47, %52
  %56 = phi i64 [ %23, %52 ], [ %50, %47 ], [ %46, %38 ], [ %36, %33 ], [ %31, %28 ], [ %23, %26 ], [ %23, %18 ]
  %57 = phi i32 [ %22, %52 ], [ %51, %47 ], [ %42, %38 ], [ %37, %33 ], [ %32, %28 ], [ %27, %26 ], [ %22, %18 ]
  %58 = phi i8 [ 1, %52 ], [ %21, %47 ], [ %21, %38 ], [ %21, %33 ], [ %21, %28 ], [ 0, %26 ], [ %21, %18 ]
  %59 = phi i8 [ %54, %52 ], [ %49, %47 ], [ %40, %38 ], [ %35, %33 ], [ %30, %28 ], [ %20, %26 ], [ 1, %18 ]
  %60 = add nuw nsw i64 %19, 1
  %61 = icmp eq i64 %60, %5
  br i1 %61, label %6, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath4MakeEPK7SkPointiPKhiPKfi14SkPathFillTypeb(%class.SkPath* noalias nocapture sret, %struct.SkPoint* nocapture readonly, i32, i8* nocapture readonly, i32, float* nocapture readonly, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %10 = icmp slt i32 %4, 1
  br i1 %10, label %11, label %20

11:                                               ; preds = %9
  %12 = tail call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24
  %13 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  store %class.SkPathRef* %12, %class.SkPathRef** %13, align 8
  %14 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 -1, i32* %14, align 8
  %15 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %16 = load i8, i8* %15, align 2
  %17 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %17 monotonic, align 1
  %18 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %18 monotonic, align 1
  %19 = and i8 %16, -8
  store i8 %19, i8* %15, align 2
  br label %163

20:                                               ; preds = %9
  %21 = zext i32 %4 to i64
  br label %22

22:                                               ; preds = %59, %20
  %23 = phi i64 [ 0, %20 ], [ %64, %59 ]
  %24 = phi i8 [ 0, %20 ], [ %63, %59 ]
  %25 = phi i8 [ 1, %20 ], [ %62, %59 ]
  %26 = phi i32 [ 0, %20 ], [ %61, %59 ]
  %27 = phi i64 [ 0, %20 ], [ %60, %59 ]
  %28 = getelementptr inbounds i8, i8* %3, i64 %23
  %29 = load i8, i8* %28, align 1
  switch i8 %29, label %59 [
    i8 0, label %30
    i8 1, label %32
    i8 2, label %37
    i8 3, label %42
    i8 4, label %51
    i8 5, label %56
  ]

30:                                               ; preds = %22
  %31 = add nsw i32 %26, 1
  br label %59

32:                                               ; preds = %22
  %33 = or i8 %25, %24
  %34 = and i8 %33, 1
  %35 = or i64 %27, 4294967296
  %36 = add nsw i32 %26, 1
  br label %59

37:                                               ; preds = %22
  %38 = or i8 %25, %24
  %39 = and i8 %38, 1
  %40 = or i64 %27, 8589934592
  %41 = add nsw i32 %26, 2
  br label %59

42:                                               ; preds = %22
  %43 = or i8 %25, %24
  %44 = and i8 %43, 1
  %45 = and i64 %27, -21474836480
  %46 = add nsw i32 %26, 2
  %47 = add i64 %27, 1
  %48 = and i64 %47, 4294967295
  %49 = or i64 %45, %48
  %50 = or i64 %49, 17179869184
  br label %59

51:                                               ; preds = %22
  %52 = or i8 %25, %24
  %53 = and i8 %52, 1
  %54 = or i64 %27, 34359738368
  %55 = add nsw i32 %26, 3
  br label %59

56:                                               ; preds = %22
  %57 = or i8 %25, %24
  %58 = and i8 %57, 1
  br label %59

59:                                               ; preds = %56, %51, %42, %37, %32, %30, %22
  %60 = phi i64 [ %27, %56 ], [ %54, %51 ], [ %50, %42 ], [ %40, %37 ], [ %35, %32 ], [ %27, %30 ], [ %27, %22 ]
  %61 = phi i32 [ %26, %56 ], [ %55, %51 ], [ %46, %42 ], [ %41, %37 ], [ %36, %32 ], [ %31, %30 ], [ %26, %22 ]
  %62 = phi i8 [ 1, %56 ], [ %25, %51 ], [ %25, %42 ], [ %25, %37 ], [ %25, %32 ], [ 0, %30 ], [ %25, %22 ]
  %63 = phi i8 [ %58, %56 ], [ %53, %51 ], [ %44, %42 ], [ %39, %37 ], [ %34, %32 ], [ %24, %30 ], [ 1, %22 ]
  %64 = add nuw nsw i64 %23, 1
  %65 = icmp eq i64 %64, %21
  br i1 %65, label %66, label %22

66:                                               ; preds = %59
  %67 = and i8 %63, 1
  %68 = icmp ne i8 %67, 0
  %69 = icmp sgt i32 %61, %2
  %70 = or i1 %69, %68
  br i1 %70, label %74, label %71

71:                                               ; preds = %66
  %72 = trunc i64 %60 to i32
  %73 = icmp sgt i32 %72, %6
  br i1 %73, label %74, label %83

74:                                               ; preds = %66, %71
  %75 = tail call %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() #24
  %76 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  store %class.SkPathRef* %75, %class.SkPathRef** %76, align 8
  %77 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 -1, i32* %77, align 8
  %78 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %79 = load i8, i8* %78, align 2
  %80 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %80 monotonic, align 1
  %81 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i8 2, i8* %81 monotonic, align 1
  %82 = and i8 %79, -8
  store i8 %82, i8* %78, align 2
  br label %163

83:                                               ; preds = %71
  %84 = tail call i8* @_Znwm(i64 120) #25
  %85 = icmp eq i32 %61, 0
  br i1 %85, label %92, label %86

86:                                               ; preds = %83
  %87 = sext i32 %61 to i64
  %88 = shl nsw i64 %87, 3
  %89 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %88, i32 2) #24
  %90 = ptrtoint i8* %89 to i64
  %91 = bitcast %struct.SkPoint* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %89, i8* align 4 %91, i64 %88, i1 false) #24
  br label %92

92:                                               ; preds = %83, %86
  %93 = phi i64 [ 0, %83 ], [ %90, %86 ]
  %94 = icmp eq i32 %4, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %92
  %96 = sext i32 %4 to i64
  %97 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %96, i32 2) #24
  %98 = ptrtoint i8* %97 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %3, i64 %96, i1 false) #24
  br label %99

99:                                               ; preds = %92, %95
  %100 = phi i64 [ 0, %92 ], [ %98, %95 ]
  %101 = icmp eq i32 %72, 0
  br i1 %101, label %108, label %102

102:                                              ; preds = %99
  %103 = shl i64 %60, 32
  %104 = ashr exact i64 %103, 30
  %105 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %104, i32 2) #24
  %106 = ptrtoint i8* %105 to i64
  %107 = bitcast float* %5 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %105, i8* align 4 %107, i64 %104, i1 false) #24
  br label %108

108:                                              ; preds = %102, %99
  %109 = phi i64 [ 0, %99 ], [ %106, %102 ]
  %110 = lshr i64 %60, 32
  %111 = bitcast i8* %84 to i32*
  store i32 1, i32* %111, align 4
  %112 = getelementptr inbounds i8, i8* %84, i64 24
  %113 = getelementptr inbounds i8, i8* %84, i64 32
  %114 = bitcast i8* %113 to i32*
  %115 = getelementptr inbounds i8, i8* %84, i64 36
  %116 = bitcast i8* %115 to i32*
  %117 = bitcast i8* %112 to i64*
  store i64 %93, i64* %117, align 8
  store i32 %61, i32* %114, align 4
  store i32 %61, i32* %116, align 4
  %118 = getelementptr inbounds i8, i8* %84, i64 40
  %119 = getelementptr inbounds i8, i8* %84, i64 48
  %120 = bitcast i8* %119 to i32*
  %121 = getelementptr inbounds i8, i8* %84, i64 52
  %122 = bitcast i8* %121 to i32*
  %123 = bitcast i8* %118 to i64*
  store i64 %100, i64* %123, align 8
  store i32 %4, i32* %120, align 4
  store i32 %4, i32* %122, align 4
  %124 = getelementptr inbounds i8, i8* %84, i64 56
  %125 = getelementptr inbounds i8, i8* %84, i64 64
  %126 = bitcast i8* %125 to i32*
  %127 = getelementptr inbounds i8, i8* %84, i64 68
  %128 = bitcast i8* %127 to i32*
  %129 = bitcast i8* %124 to i64*
  store i64 %109, i64* %129, align 8
  store i32 %72, i32* %126, align 4
  store i32 %72, i32* %128, align 4
  %130 = getelementptr inbounds i8, i8* %84, i64 80
  %131 = bitcast i8* %130 to %"class.SkIDChangeListener::List"*
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %131) #24
  %132 = getelementptr inbounds i8, i8* %84, i64 112
  store i8 1, i8* %132, align 8
  %133 = getelementptr inbounds i8, i8* %84, i64 72
  %134 = bitcast i8* %133 to i32*
  store i32 0, i32* %134, align 8
  %135 = trunc i64 %110 to i8
  %136 = getelementptr inbounds i8, i8* %84, i64 118
  store i8 %135, i8* %136, align 2
  %137 = getelementptr inbounds i8, i8* %84, i64 114
  store i8 0, i8* %137, align 2
  %138 = getelementptr inbounds i8, i8* %84, i64 115
  store i8 0, i8* %138, align 1
  %139 = getelementptr inbounds i8, i8* %84, i64 116
  store i8 0, i8* %139, align 4
  %140 = getelementptr inbounds i8, i8* %84, i64 117
  store i8 -84, i8* %140, align 1
  %141 = getelementptr inbounds i8, i8* %84, i64 4
  %142 = bitcast i8* %141 to %struct.SkRect*
  %143 = bitcast i8* %112 to %struct.SkPoint**
  %144 = load %struct.SkPoint*, %struct.SkPoint** %143, align 8
  %145 = load i32, i32* %116, align 4
  %146 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %142, %struct.SkPoint* %144, i32 %145) #24
  %147 = getelementptr inbounds i8, i8* %84, i64 113
  %148 = zext i1 %146 to i8
  store i8 %148, i8* %147, align 1
  store i8 0, i8* %132, align 8
  %149 = ptrtoint i8* %84 to i64
  %150 = zext i1 %8 to i8
  %151 = bitcast %class.SkPath* %0 to i64*
  store i64 %149, i64* %151, align 8
  %152 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 1
  store i32 -1, i32* %152, align 8
  %153 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 2, i8* %153, align 1
  %154 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 2, i8* %154, align 1
  %155 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 4
  %156 = trunc i32 %7 to i8
  %157 = load i8, i8* %155, align 2
  %158 = and i8 %156, 3
  %159 = and i8 %157, -8
  %160 = shl nuw nsw i8 %150, 2
  %161 = or i8 %160, %158
  %162 = or i8 %161, %159
  store i8 %162, i8* %155, align 2
  tail call void @_Z7sk_freePv(i8* null) #24
  tail call void @_Z7sk_freePv(i8* null) #24
  tail call void @_Z7sk_freePv(i8* null) #24
  br label %163

163:                                              ; preds = %74, %108, %11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* noalias sret, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPathBuilder, align 8
  %6 = bitcast %class.SkPathBuilder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #24
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %5) #24
  %7 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addRectERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* nonnull %5, %struct.SkRect* dereferenceable(16) %1, i32 %2, i32 %3) #24
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret %0, %class.SkPathBuilder* %7) #24
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %5) #24
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #24
  ret void
}

declare void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder*) unnamed_addr #1

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addRectERK6SkRect15SkPathDirectionj(%class.SkPathBuilder*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #1

declare void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret, %class.SkPathBuilder*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder*) unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath4OvalERK6SkRect15SkPathDirection(%class.SkPath* noalias sret, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPathBuilder, align 8
  %5 = bitcast %class.SkPathBuilder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #24
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %4) #24
  %6 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addOvalERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* nonnull %4, %struct.SkRect* dereferenceable(16) %1, i32 %2, i32 1) #24
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret %0, %class.SkPathBuilder* %6) #24
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %4) #24
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath4OvalERK6SkRect15SkPathDirectionj(%class.SkPath* noalias sret, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPathBuilder, align 8
  %6 = bitcast %class.SkPathBuilder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #24
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %5) #24
  %7 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addOvalERK6SkRect15SkPathDirectionj(%class.SkPathBuilder* nonnull %5, %struct.SkRect* dereferenceable(16) %1, i32 %2, i32 %3) #24
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret %0, %class.SkPathBuilder* %7) #24
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %5) #24
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #24
  ret void
}

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7addOvalERK6SkRect15SkPathDirectionj(%class.SkPathBuilder*, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath6CircleEfff15SkPathDirection(%class.SkPath* noalias sret, float, float, float, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkPathBuilder, align 8
  %7 = bitcast %class.SkPathBuilder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %7) #24
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %6) #24
  %8 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder9addCircleEfff15SkPathDirection(%class.SkPathBuilder* nonnull %6, float %1, float %2, float %3, i32 %4) #24
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret %0, %class.SkPathBuilder* %8) #24
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %6) #24
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %7) #24
  ret void
}

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder9addCircleEfff15SkPathDirection(%class.SkPathBuilder*, float, float, float, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath5RRectERK7SkRRect15SkPathDirection(%class.SkPath* noalias sret, %class.SkRRect* dereferenceable(52), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkPathBuilder, align 8
  %5 = bitcast %class.SkPathBuilder* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %5) #24
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %4) #24
  %6 = icmp eq i32 %2, 0
  %7 = select i1 %6, i32 6, i32 7
  %8 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPathBuilder* nonnull %4, %class.SkRRect* dereferenceable(52) %1, i32 %2, i32 %7) #24
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret %0, %class.SkPathBuilder* %8) #24
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %4) #24
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %5) #24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath5RRectERK7SkRRect15SkPathDirectionj(%class.SkPath* noalias sret, %class.SkRRect* dereferenceable(52), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPathBuilder, align 8
  %6 = bitcast %class.SkPathBuilder* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %6) #24
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %5) #24
  %7 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPathBuilder* nonnull %5, %class.SkRRect* dereferenceable(52) %1, i32 %2, i32 %3) #24
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret %0, %class.SkPathBuilder* %7) #24
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %5) #24
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %6) #24
  ret void
}

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPathBuilder*, %class.SkRRect* dereferenceable(52), i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath5RRectERK6SkRectff15SkPathDirection(%class.SkPath* noalias sret, %struct.SkRect* dereferenceable(16), float, float, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %class.SkPathBuilder, align 8
  %7 = alloca %class.SkRRect, align 4
  %8 = bitcast %class.SkPathBuilder* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #24
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %6) #24
  %9 = bitcast %class.SkRRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %9) #24
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %9, i8 0, i64 52, i1 false) #24, !alias.scope !32
  call void @_ZN7SkRRect9setRectXYERK6SkRectff(%class.SkRRect* nonnull %7, %struct.SkRect* dereferenceable(16) %1, float %2, float %3) #24
  %10 = icmp eq i32 %4, 0
  %11 = select i1 %10, i32 6, i32 7
  %12 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder8addRRectERK7SkRRect15SkPathDirectionj(%class.SkPathBuilder* nonnull %6, %class.SkRRect* nonnull dereferenceable(52) %7, i32 %4, i32 %11) #24
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret %0, %class.SkPathBuilder* %12) #24
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %9) #24
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %6) #24
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath7PolygonEPK7SkPointib14SkPathFillTypeb(%class.SkPath* noalias sret, %struct.SkPoint*, i32, i1 zeroext, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %class.SkPathBuilder, align 8
  %8 = bitcast %class.SkPathBuilder* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %8) #24
  call void @_ZN13SkPathBuilderC1Ev(%class.SkPathBuilder* nonnull %7) #24
  %9 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder10addPolygonEPK7SkPointib(%class.SkPathBuilder* nonnull %7, %struct.SkPoint* %1, i32 %2, i1 zeroext %3) #24
  %10 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %9, i64 0, i32 3
  store i32 %4, i32* %10, align 8
  %11 = zext i1 %5 to i8
  %12 = getelementptr inbounds %class.SkPathBuilder, %class.SkPathBuilder* %9, i64 0, i32 4
  store i8 %11, i8* %12, align 4
  call void @_ZN13SkPathBuilder6detachEv(%class.SkPath* sret %0, %class.SkPathBuilder* %9) #24
  call void @_ZN13SkPathBuilderD1Ev(%class.SkPathBuilder* nonnull %7) #24
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %8) #24
  ret void
}

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder10addPolygonEPK7SkPointib(%class.SkPathBuilder*, %struct.SkPoint*, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkPathPriv17IsNestedFillRectsERK6SkPathP6SkRectP15SkPathDirection(%class.SkPath* nocapture readonly dereferenceable(16), %struct.SkRect*, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %struct.SkPoint*, align 8
  %6 = alloca [2 x i32], align 4
  %7 = alloca [2 x %struct.SkRect], align 16
  %8 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #24
  store i32 0, i32* %4, align 4
  %9 = bitcast %struct.SkPoint** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #24
  %10 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %11 = load %class.SkPathRef*, %class.SkPathRef** %10, align 8
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %11, i64 0, i32 3, i32 0
  %13 = bitcast %struct.SkPoint** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %struct.SkPoint** %5 to i64*
  store i64 %14, i64* %15, align 8
  %16 = bitcast [2 x i32]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #24
  %17 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 0
  store i32 -1431655766, i32* %17, align 4
  %18 = getelementptr inbounds [2 x i32], [2 x i32]* %6, i64 0, i64 1
  store i32 -1431655766, i32* %18, align 4
  %19 = bitcast [2 x %struct.SkRect]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #24
  %20 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %7, i64 0, i64 0
  %21 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %7, i64 0, i64 0, i32 0
  %22 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %7, i64 0, i64 0, i32 1
  %23 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %7, i64 0, i64 0, i32 2
  %24 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %7, i64 0, i64 0, i32 3
  %25 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %7, i64 0, i64 1
  %26 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %25, i64 0, i32 0
  %27 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %7, i64 0, i64 1, i32 1
  %28 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %7, i64 0, i64 1, i32 2
  %29 = getelementptr inbounds [2 x %struct.SkRect], [2 x %struct.SkRect]* %7, i64 0, i64 1, i32 3
  %30 = bitcast [2 x %struct.SkRect]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %30, i8 -1, i64 32, i1 false)
  %31 = call zeroext i1 @_ZN10SkPathPriv13IsRectContourERK6SkPathbPiPPK7SkPointPbP15SkPathDirectionP6SkRect(%class.SkPath* dereferenceable(16) %0, i1 zeroext true, i32* nonnull %4, %struct.SkPoint** nonnull %5, i8* null, i32* nonnull %17, %struct.SkRect* nonnull %20)
  br i1 %31, label %32, label %106

32:                                               ; preds = %3
  %33 = call zeroext i1 @_ZN10SkPathPriv13IsRectContourERK6SkPathbPiPPK7SkPointPbP15SkPathDirectionP6SkRect(%class.SkPath* dereferenceable(16) %0, i1 zeroext false, i32* nonnull %4, %struct.SkPoint** nonnull %5, i8* null, i32* %18, %struct.SkRect* %25)
  br i1 %33, label %34, label %106

34:                                               ; preds = %32
  %35 = load float, float* %26, align 16
  %36 = load float, float* %28, align 8
  %37 = fcmp olt float %35, %36
  br i1 %37, label %38, label %71

38:                                               ; preds = %34
  %39 = load float, float* %27, align 4
  %40 = load float, float* %29, align 4
  %41 = fcmp uge float %39, %40
  br i1 %41, label %71, label %42

42:                                               ; preds = %38
  %43 = load float, float* %21, align 16
  %44 = load float, float* %23, align 8
  %45 = fcmp olt float %43, %44
  br i1 %45, label %46, label %71

46:                                               ; preds = %42
  %47 = load float, float* %22, align 4
  %48 = load float, float* %24, align 4
  %49 = fcmp uge float %47, %48
  %50 = fcmp ugt float %43, %35
  %51 = or i1 %50, %49
  br i1 %51, label %71, label %52

52:                                               ; preds = %46
  %53 = fcmp ole float %47, %39
  %54 = fcmp oge float %44, %36
  %55 = fcmp oge float %48, %40
  %56 = and i1 %54, %53
  %57 = and i1 %55, %56
  br i1 %57, label %58, label %71

58:                                               ; preds = %52
  %59 = icmp eq %struct.SkRect* %1, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %58
  %61 = bitcast %struct.SkRect* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %61, i8* nonnull align 16 %19, i64 16, i1 false)
  %62 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 1
  %63 = bitcast %struct.SkRect* %62 to i8*
  %64 = bitcast %struct.SkRect* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %63, i8* align 16 %64, i64 16, i1 false)
  br label %65

65:                                               ; preds = %58, %60
  %66 = icmp eq i32* %2, null
  br i1 %66, label %106, label %67

67:                                               ; preds = %65
  %68 = load i32, i32* %17, align 4
  store i32 %68, i32* %2, align 4
  %69 = load i32, i32* %18, align 4
  %70 = getelementptr inbounds i32, i32* %2, i64 1
  store i32 %69, i32* %70, align 4
  br label %106

71:                                               ; preds = %34, %38, %42, %46, %52
  %72 = load float, float* %21, align 16
  %73 = load float, float* %23, align 8
  %74 = fcmp olt float %72, %73
  br i1 %74, label %75, label %106

75:                                               ; preds = %71
  %76 = load float, float* %22, align 4
  %77 = load float, float* %24, align 4
  %78 = fcmp uge float %76, %77
  %79 = xor i1 %37, true
  %80 = or i1 %78, %79
  br i1 %80, label %106, label %81

81:                                               ; preds = %75
  %82 = load float, float* %27, align 4
  %83 = load float, float* %29, align 4
  %84 = fcmp uge float %82, %83
  %85 = fcmp ugt float %35, %72
  %86 = or i1 %85, %84
  br i1 %86, label %106, label %87

87:                                               ; preds = %81
  %88 = fcmp ole float %82, %76
  %89 = fcmp oge float %36, %73
  %90 = fcmp oge float %83, %77
  %91 = and i1 %89, %88
  %92 = and i1 %90, %91
  br i1 %92, label %93, label %106

93:                                               ; preds = %87
  %94 = icmp eq %struct.SkRect* %1, null
  br i1 %94, label %100, label %95

95:                                               ; preds = %93
  %96 = bitcast %struct.SkRect* %1 to i8*
  %97 = bitcast %struct.SkRect* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %96, i8* align 16 %97, i64 16, i1 false)
  %98 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 1
  %99 = bitcast %struct.SkRect* %98 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* nonnull align 16 %19, i64 16, i1 false)
  br label %100

100:                                              ; preds = %93, %95
  %101 = icmp eq i32* %2, null
  br i1 %101, label %106, label %102

102:                                              ; preds = %100
  %103 = load i32, i32* %18, align 4
  store i32 %103, i32* %2, align 4
  %104 = load i32, i32* %17, align 4
  %105 = getelementptr inbounds i32, i32* %2, i64 1
  store i32 %104, i32* %105, align 4
  br label %106

106:                                              ; preds = %75, %71, %81, %32, %87, %102, %100, %67, %65, %3
  %107 = phi i1 [ false, %3 ], [ true, %65 ], [ true, %67 ], [ true, %100 ], [ true, %102 ], [ false, %87 ], [ false, %32 ], [ false, %81 ], [ false, %75 ], [ false, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #24
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #24
  ret i1 %107
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkPathPriv25GenIDChangeListenersCountERK6SkPath(%class.SkPath* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = tail call i32 @_ZN9SkPathRef24genIDChangeListenerCountEv(%class.SkPathRef* %3) #24
  ret i32 %4
}

declare i32 @_ZN9SkPathRef24genIDChangeListenerCountEv(%class.SkPathRef*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix5resetEv(%class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #17

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #18

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #1

declare void @_ZNK9SkPathRef8getRRectEv(%class.SkRRect* sret, %class.SkPathRef*) local_unnamed_addr #1

declare %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef*, i32, float) local_unnamed_addr #1

declare %struct.SkPoint* @_ZN9SkPathRef19growForRepeatedVerbEiiPPf(%class.SkPathRef*, i32, i32, float**) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.copysign.f32(float, float) #10

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare i32 @_ZN7SkConic12BuildUnitArcERK7SkPointS2_19SkRotationDirectionPK8SkMatrixPS_(%struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8), i32, %class.SkMatrix*, %struct.SkConic*) local_unnamed_addr #1

declare void @_ZNK8SkMatrix5mapXYEffP7SkPoint(%class.SkMatrix*, float, float, %struct.SkPoint*) local_unnamed_addr #1

declare void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint*, float, %struct.SkPoint*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @fmodf(float, float) local_unnamed_addr #9

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #9

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #10

declare zeroext i8 @_ZNK8SkMatrix26computePerspectiveTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #1

declare { %struct.SkPoint*, float* } @_ZN9SkPathRef18growForVerbsInPathERKS_(%class.SkPathRef*, %class.SkPathRef* dereferenceable(120)) local_unnamed_addr #1

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #1

declare void @_Z17SkChopCubicAtHalfPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #1

declare void @_Z14SkAppendScalarP8SkStringf20SkScalarAsStringType(%class.SkString*, float, i32) local_unnamed_addr #1

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #19

declare i32 @_Z20SkChopQuadAtYExtremaPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL17winding_mono_quadPK7SkPointffPi(%struct.SkPoint* nocapture readonly, float, float, i32* nocapture) unnamed_addr #0 {
  %5 = alloca [2 x float], align 4
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 1
  %7 = bitcast float* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 2, i32 1
  %11 = load float, float* %10, align 4
  %12 = bitcast float %11 to i32
  %13 = bitcast i32 %8 to float
  %14 = fcmp olt float %11, %13
  %15 = select i1 %14, i32 %12, i32 %8
  %16 = select i1 %14, i32 %8, i32 %12
  %17 = select i1 %14, i32 -1, i32 1
  %18 = bitcast i32 %15 to float
  %19 = fcmp ogt float %18, %2
  %20 = bitcast i32 %16 to float
  %21 = fcmp olt float %20, %2
  %22 = or i1 %19, %21
  br i1 %22, label %100, label %23

23:                                               ; preds = %4
  %24 = fcmp oeq float %11, %13
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 0, i32 0
  %26 = load float, float* %25, align 4
  br i1 %24, label %27, label %36

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 0
  %29 = load float, float* %28, align 4
  %30 = fsub float %26, %1
  %31 = fsub float %29, %1
  %32 = fmul float %30, %31
  %33 = fcmp ole float %32, 0.000000e+00
  %34 = fcmp une float %29, %1
  %35 = and i1 %34, %33
  br i1 %35, label %40, label %43

36:                                               ; preds = %23
  %37 = fcmp oeq float %26, %1
  %38 = fcmp oeq float %13, %2
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %43

40:                                               ; preds = %27, %36
  %41 = load i32, i32* %3, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %3, align 4
  br label %100

43:                                               ; preds = %27, %36
  %44 = fcmp oeq float %20, %2
  br i1 %44, label %100, label %45

45:                                               ; preds = %43
  %46 = bitcast [2 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #24
  %47 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %47, align 4
  %48 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  %49 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 1
  %50 = load float, float* %49, align 4
  %51 = fmul float %50, 2.000000e+00
  %52 = fsub float %13, %51
  %53 = fadd float %11, %52
  %54 = fsub float %50, %13
  %55 = fmul float %54, 2.000000e+00
  %56 = fsub float %13, %2
  %57 = call i32 @_Z19SkFindUnitQuadRootsfffPf(float %53, float %55, float %56, float* nonnull %47) #24
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %64

59:                                               ; preds = %45
  %60 = sub nsw i32 1, %17
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 %61, i32 0
  %63 = load float, float* %62, align 4
  br label %80

64:                                               ; preds = %45
  %65 = load float, float* %47, align 4
  %66 = load float, float* %25, align 4
  %67 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %0, i64 1, i32 0
  %70 = load float, float* %69, align 4
  %71 = fmul float %70, 2.000000e+00
  %72 = fsub float %68, %71
  %73 = fadd float %66, %72
  %74 = fsub float %70, %66
  %75 = fmul float %74, 2.000000e+00
  %76 = fmul float %65, %73
  %77 = fadd float %75, %76
  %78 = fmul float %65, %77
  %79 = fadd float %66, %78
  br label %80

80:                                               ; preds = %64, %59
  %81 = phi float [ %63, %59 ], [ %79, %64 ]
  %82 = fsub float %81, %1
  %83 = call float @llvm.fabs.f32(float %82) #24
  %84 = fcmp ugt float %83, 0x3F30000000000000
  br i1 %84, label %95, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 0
  %87 = load float, float* %86, align 4
  %88 = fcmp une float %87, %1
  br i1 %88, label %92, label %89

89:                                               ; preds = %85
  %90 = load float, float* %10, align 4
  %91 = fcmp une float %90, %2
  br i1 %91, label %92, label %95

92:                                               ; preds = %89, %85
  %93 = load i32, i32* %3, align 4
  %94 = add nsw i32 %93, 1
  store i32 %94, i32* %3, align 4
  br label %98

95:                                               ; preds = %80, %89
  %96 = fcmp olt float %81, %1
  %97 = select i1 %96, i32 %17, i32 0
  br label %98

98:                                               ; preds = %95, %92
  %99 = phi i32 [ 0, %92 ], [ %97, %95 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #24
  br label %100

100:                                              ; preds = %43, %4, %98, %40
  %101 = phi i32 [ 0, %40 ], [ %99, %98 ], [ 0, %4 ], [ 0, %43 ]
  ret i32 %101
}

declare i32 @_Z19SkFindUnitQuadRootsfffPf(float, float, float, float*) local_unnamed_addr #1

declare zeroext i1 @_ZNK7SkConic14chopAtYExtremaEPS_(%struct.SkConic*, %struct.SkConic*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZL18winding_mono_conicRK7SkConicffPi(%struct.SkConic* nocapture readonly dereferenceable(28), float, float, i32* nocapture) unnamed_addr #0 {
  %5 = alloca [2 x float], align 4
  %6 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 0, i32 1
  %7 = bitcast float* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 2
  %10 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 2, i32 1
  %11 = load float, float* %10, align 4
  %12 = bitcast float %11 to i32
  %13 = bitcast i32 %8 to float
  %14 = fcmp olt float %11, %13
  %15 = select i1 %14, i32 %12, i32 %8
  %16 = select i1 %14, i32 %8, i32 %12
  %17 = select i1 %14, i32 -1, i32 1
  %18 = bitcast i32 %15 to float
  %19 = fcmp ogt float %18, %2
  %20 = bitcast i32 %16 to float
  %21 = fcmp olt float %20, %2
  %22 = or i1 %19, %21
  br i1 %22, label %115, label %23

23:                                               ; preds = %4
  %24 = fcmp oeq float %11, %13
  %25 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 0, i32 0
  %26 = load float, float* %25, align 4
  br i1 %24, label %27, label %36

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 0
  %29 = load float, float* %28, align 4
  %30 = fsub float %26, %1
  %31 = fsub float %29, %1
  %32 = fmul float %30, %31
  %33 = fcmp ole float %32, 0.000000e+00
  %34 = fcmp une float %29, %1
  %35 = and i1 %34, %33
  br i1 %35, label %40, label %43

36:                                               ; preds = %23
  %37 = fcmp oeq float %26, %1
  %38 = fcmp oeq float %13, %2
  %39 = and i1 %38, %37
  br i1 %39, label %40, label %43

40:                                               ; preds = %27, %36
  %41 = load i32, i32* %3, align 4
  %42 = add nsw i32 %41, 1
  store i32 %42, i32* %3, align 4
  br label %115

43:                                               ; preds = %27, %36
  %44 = fcmp oeq float %20, %2
  br i1 %44, label %115, label %45

45:                                               ; preds = %43
  %46 = bitcast [2 x float]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #24
  %47 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %47, align 4
  %48 = getelementptr inbounds [2 x float], [2 x float]* %5, i64 0, i64 1
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  %49 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 1, i32 1
  %50 = load float, float* %49, align 4
  %51 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = fmul float %50, %52
  %54 = fmul float %52, %2
  %55 = fsub float %53, %54
  %56 = fadd float %55, %2
  %57 = fmul float %56, 2.000000e+00
  %58 = fsub float %13, %57
  %59 = fadd float %11, %58
  %60 = fsub float %56, %13
  %61 = fsub float %13, %2
  %62 = fmul float %60, 2.000000e+00
  %63 = call i32 @_Z19SkFindUnitQuadRootsfffPf(float %59, float %62, float %61, float* nonnull %47) #24
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %70

65:                                               ; preds = %45
  %66 = sub nsw i32 1, %17
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds %struct.SkConic, %struct.SkConic* %0, i64 0, i32 0, i64 %67, i32 0
  %69 = load float, float* %68, align 4
  br label %95

70:                                               ; preds = %45
  %71 = load float, float* %47, align 4
  %72 = load float, float* %51, align 4
  %73 = getelementptr inbounds float, float* %25, i64 2
  %74 = load float, float* %73, align 4
  %75 = fmul float %72, %74
  %76 = load float, float* %25, align 4
  %77 = getelementptr inbounds float, float* %25, i64 4
  %78 = load float, float* %77, align 4
  %79 = fmul float %75, 2.000000e+00
  %80 = fsub float %78, %79
  %81 = fadd float %76, %80
  %82 = fsub float %75, %76
  %83 = fmul float %82, 2.000000e+00
  %84 = fmul float %71, %81
  %85 = fadd float %83, %84
  %86 = fmul float %71, %85
  %87 = fadd float %76, %86
  %88 = fadd float %72, -1.000000e+00
  %89 = fmul float %88, 2.000000e+00
  %90 = fmul float %71, %89
  %91 = fsub float %89, %90
  %92 = fmul float %71, %91
  %93 = fadd float %92, 1.000000e+00
  %94 = fdiv float %87, %93
  br label %95

95:                                               ; preds = %70, %65
  %96 = phi float [ %69, %65 ], [ %94, %70 ]
  %97 = fsub float %96, %1
  %98 = call float @llvm.fabs.f32(float %97) #24
  %99 = fcmp ugt float %98, 0x3F30000000000000
  br i1 %99, label %110, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %9, i64 0, i32 0
  %102 = load float, float* %101, align 4
  %103 = fcmp une float %102, %1
  %104 = load float, float* %10, align 4
  %105 = fcmp une float %104, %2
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %110

107:                                              ; preds = %100
  %108 = load i32, i32* %3, align 4
  %109 = add nsw i32 %108, 1
  store i32 %109, i32* %3, align 4
  br label %113

110:                                              ; preds = %95, %100
  %111 = fcmp olt float %96, %1
  %112 = select i1 %111, i32 %17, i32 0
  br label %113

113:                                              ; preds = %110, %107
  %114 = phi i32 [ 0, %107 ], [ %112, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #24
  br label %115

115:                                              ; preds = %43, %4, %113, %40
  %116 = phi i32 [ 0, %40 ], [ %114, %113 ], [ 0, %4 ], [ 0, %43 ]
  ret i32 %116
}

declare i32 @_Z21SkChopCubicAtYExtremaPK7SkPointPS_(%struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #1

declare zeroext i1 @_ZN14SkCubicClipper11ChopMonoAtYEPK7SkPointfPf(%struct.SkPoint*, float, float*) local_unnamed_addr #1

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #1

declare <2 x float> @_Z19SkEvalQuadTangentAtPK7SkPointf(%struct.SkPoint*, float) local_unnamed_addr #1

declare <2 x float> @_ZNK7SkConic13evalTangentAtEf(%struct.SkConic*, float) local_unnamed_addr #1

declare void @_Z13SkEvalCubicAtPK7SkPointfPS_S2_S2_(%struct.SkPoint*, float, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*) local_unnamed_addr #1

declare i32 @_Z17SkFindQuadExtremafffPf(float, float, float, float*) local_unnamed_addr #1

declare <2 x float> @_Z12SkEvalQuadAtPK7SkPointf(%struct.SkPoint*, float) local_unnamed_addr #1

declare zeroext i1 @_ZNK7SkConic12findXExtremaEPf(%struct.SkConic*, float*) local_unnamed_addr #1

declare zeroext i1 @_ZNK7SkConic12findYExtremaEPf(%struct.SkConic*, float*) local_unnamed_addr #1

declare <2 x float> @_ZNK7SkConic6evalAtEf(%struct.SkConic*, float) local_unnamed_addr #1

declare i32 @_Z18SkFindCubicExtremaffffPf(float, float, float, float, float*) local_unnamed_addr #1

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.min.ps(<4 x float>, <4 x float>) #20

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.max.ps(<4 x float>, <4 x float>) #20

declare void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"*) unnamed_addr #1

declare void @_ZN13SkEdgeClipper8ClipPathERK6SkPathRK6SkRectbPFvPS_bPvES7_(%class.SkPath* dereferenceable(16), %struct.SkRect* dereferenceable(16), i1 zeroext, void (%class.SkEdgeClipper*, i1, i8*)*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK8SkMatrix17invertNonIdentityEPS_(%class.SkMatrix*, %class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @"_ZZL4clipRK6SkPathRK11SkHalfPlaneEN3$_78__invokeEP13SkEdgeClipperbPv"(%class.SkEdgeClipper*, i1 zeroext, i8*) #21 align 2 {
  %4 = alloca [4 x %struct.SkPoint], align 16
  %5 = bitcast [4 x %struct.SkPoint]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #24
  %6 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 0
  %7 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 0, i32 0
  %8 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 0, i32 1
  %9 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 1
  %10 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 2
  %11 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %4, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -1, i64 32, i1 false) #24
  %12 = call i32 @_ZN13SkEdgeClipper4nextEP7SkPoint(%class.SkEdgeClipper* %0, %struct.SkPoint* nonnull %6) #24
  %13 = icmp eq i32 %12, 6
  br i1 %13, label %95, label %14

14:                                               ; preds = %3
  %15 = zext i1 %1 to i8
  %16 = bitcast i8* %2 to %class.SkPathBuilder*
  %17 = bitcast [4 x %struct.SkPoint]* %4 to <2 x float>*
  %18 = getelementptr inbounds i8, i8* %2, i64 88
  %19 = bitcast [4 x %struct.SkPoint]* %4 to i64*
  %20 = bitcast i8* %18 to i64*
  %21 = bitcast i8* %18 to float*
  %22 = getelementptr inbounds i8, i8* %2, i64 92
  %23 = bitcast i8* %22 to float*
  %24 = bitcast %struct.SkPoint* %9 to <2 x float>*
  %25 = bitcast %struct.SkPoint* %10 to <2 x float>*
  %26 = bitcast %struct.SkPoint* %11 to <2 x float>*
  br i1 %1, label %27, label %31

27:                                               ; preds = %14
  %28 = load <2 x float>, <2 x float>* %17, align 16
  %29 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %16, <2 x float> %28) #24
  %30 = load i64, i64* %19, align 16
  store i64 %30, i64* %20, align 8
  br label %31

31:                                               ; preds = %27, %14
  %32 = phi i8 [ 0, %27 ], [ %15, %14 ]
  %33 = load float, float* %7, align 16
  %34 = load float, float* %21, align 4
  %35 = fcmp une float %33, %34
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = load float, float* %8, align 4
  %38 = load float, float* %23, align 4
  %39 = fcmp une float %37, %38
  br i1 %39, label %40, label %43

40:                                               ; preds = %36, %31
  %41 = load <2 x float>, <2 x float>* %17, align 16
  %42 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %16, <2 x float> %41) #24
  br label %43

43:                                               ; preds = %40, %36
  switch i32 %12, label %60 [
    i32 1, label %53
    i32 2, label %49
    i32 4, label %44
  ]

44:                                               ; preds = %43
  %45 = load <2 x float>, <2 x float>* %24, align 8
  %46 = load <2 x float>, <2 x float>* %25, align 16
  %47 = load <2 x float>, <2 x float>* %26, align 8
  %48 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder* %16, <2 x float> %45, <2 x float> %46, <2 x float> %47) #24
  br label %56

49:                                               ; preds = %43
  %50 = load <2 x float>, <2 x float>* %24, align 8
  %51 = load <2 x float>, <2 x float>* %25, align 16
  %52 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder* %16, <2 x float> %50, <2 x float> %51) #24
  br label %56

53:                                               ; preds = %43
  %54 = load <2 x float>, <2 x float>* %24, align 8
  %55 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %16, <2 x float> %54) #24
  br label %56

56:                                               ; preds = %53, %49, %44
  %57 = phi %struct.SkPoint* [ %11, %44 ], [ %10, %49 ], [ %9, %53 ]
  %58 = bitcast %struct.SkPoint* %57 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %20, align 8
  br label %60

60:                                               ; preds = %56, %43
  %61 = call i32 @_ZN13SkEdgeClipper4nextEP7SkPoint(%class.SkEdgeClipper* %0, %struct.SkPoint* nonnull %6) #24
  %62 = icmp eq i32 %61, 6
  br i1 %62, label %95, label %63

63:                                               ; preds = %60, %92
  %64 = phi i32 [ %93, %92 ], [ %61, %60 ]
  %65 = phi i8 [ %73, %92 ], [ %32, %60 ]
  %66 = and i8 %65, 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %72, label %68

68:                                               ; preds = %63
  %69 = load <2 x float>, <2 x float>* %17, align 16
  %70 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder* %16, <2 x float> %69) #24
  %71 = load i64, i64* %19, align 16
  store i64 %71, i64* %20, align 8
  br label %72

72:                                               ; preds = %63, %68
  %73 = phi i8 [ 0, %68 ], [ %65, %63 ]
  %74 = load <2 x float>, <2 x float>* %17, align 16
  %75 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %16, <2 x float> %74) #24
  switch i32 %64, label %92 [
    i32 1, label %76
    i32 2, label %79
    i32 4, label %83
  ]

76:                                               ; preds = %72
  %77 = load <2 x float>, <2 x float>* %24, align 8
  %78 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder* %16, <2 x float> %77) #24
  br label %88

79:                                               ; preds = %72
  %80 = load <2 x float>, <2 x float>* %24, align 8
  %81 = load <2 x float>, <2 x float>* %25, align 16
  %82 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder* %16, <2 x float> %80, <2 x float> %81) #24
  br label %88

83:                                               ; preds = %72
  %84 = load <2 x float>, <2 x float>* %24, align 8
  %85 = load <2 x float>, <2 x float>* %25, align 16
  %86 = load <2 x float>, <2 x float>* %26, align 8
  %87 = call dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder* %16, <2 x float> %84, <2 x float> %85, <2 x float> %86) #24
  br label %88

88:                                               ; preds = %76, %79, %83
  %89 = phi %struct.SkPoint* [ %11, %83 ], [ %10, %79 ], [ %9, %76 ]
  %90 = bitcast %struct.SkPoint* %89 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %20, align 8
  br label %92

92:                                               ; preds = %88, %72
  %93 = call i32 @_ZN13SkEdgeClipper4nextEP7SkPoint(%class.SkEdgeClipper* %0, %struct.SkPoint* nonnull %6) #24
  %94 = icmp eq i32 %93, 6
  br i1 %94, label %95, label %63, !llvm.loop !35

95:                                               ; preds = %60, %92, %3
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #24
  ret void
}

declare i32 @_ZN13SkEdgeClipper4nextEP7SkPoint(%class.SkEdgeClipper*, %struct.SkPoint*) local_unnamed_addr #1

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6moveToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #1

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6lineToE7SkPoint(%class.SkPathBuilder*, <2 x float>) local_unnamed_addr #1

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder6quadToE7SkPointS0_(%class.SkPathBuilder*, <2 x float>, <2 x float>) local_unnamed_addr #1

declare dereferenceable(88) %class.SkPathBuilder* @_ZN13SkPathBuilder7cubicToE7SkPointS0_S0_(%class.SkPathBuilder*, <2 x float>, <2 x float>, <2 x float>) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9SkPathRefD1Ev(%class.SkPathRef*) unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #22

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #23

; Function Attrs: nounwind readnone speculatable
declare <4 x float> @llvm.floor.v4f32(<4 x float>) #10

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #10

; Function Attrs: nounwind readnone speculatable
declare <2 x double> @llvm.fabs.v2f64(<2 x double>) #10

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { cold noreturn nounwind }
attributes #18 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #19 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #20 = { nounwind readnone }
attributes #21 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #22 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #23 = { nofree nounwind readonly }
attributes #24 = { nounwind }
attributes #25 = { builtin nounwind }
attributes #26 = { noreturn nounwind }
attributes #27 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK6SkPath9RangeIterdeEv: argument 0"}
!5 = distinct !{!5, !"_ZNK6SkPath9RangeIterdeEv"}
!6 = distinct !{!6, !7}
!7 = !{!"llvm.loop.unroll.disable"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK6SkPath9RangeIterdeEv: argument 0"}
!10 = distinct !{!10, !"_ZNK6SkPath9RangeIterdeEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK6SkPath9RangeIterdeEv: argument 0"}
!13 = distinct !{!13, !"_ZNK6SkPath9RangeIterdeEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZL4clipRK6SkPathRK11SkHalfPlane: argument 0"}
!16 = distinct !{!16, !"_ZL4clipRK6SkPathRK11SkHalfPlane"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNK6SkPath13makeTransformERK8SkMatrix22SkApplyPerspectiveClip: argument 0"}
!19 = distinct !{!19, !"_ZNK6SkPath13makeTransformERK8SkMatrix22SkApplyPerspectiveClip"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK6SkPath9RangeIterdeEv: argument 0"}
!22 = distinct !{!22, !"_ZNK6SkPath9RangeIterdeEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK6SkPath9RangeIterdeEv: argument 0"}
!25 = distinct !{!25, !"_ZNK6SkPath9RangeIterdeEv"}
!26 = distinct !{!26, !7}
!27 = distinct !{!27, !7}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK6SkPath9RangeIterdeEv: argument 0"}
!30 = distinct !{!30, !"_ZNK6SkPath9RangeIterdeEv"}
!31 = distinct !{!31, !7}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN7SkRRect10MakeRectXYERK6SkRectff: argument 0"}
!34 = distinct !{!34, !"_ZN7SkRRect10MakeRectXYERK6SkRectff"}
!35 = distinct !{!35, !7}
