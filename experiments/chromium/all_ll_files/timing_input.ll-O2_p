; ModuleID = '../../third_party/blink/renderer/core/animation/timing_input.cc'
source_filename = "../../third_party/blink/renderer/core/animation/timing_input.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.blink::LinearTimingFunction" = type { %"class.blink::TimingFunction" }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AnimationTimeDelta" = type { double }
%union.anon = type { %"class.blink::AnimationTimeDelta" }
%class.scoped_refptr = type { %"class.blink::TimingFunction"* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.156", %"class.std::__1::unique_ptr.162", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.192", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.57", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.64", %"class.std::__1::unique_ptr.71", %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.99", %"class.std::__1::unique_ptr.106", %"class.std::__1::unique_ptr.131", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.49" = type { %"struct.std::__1::__atomic_base.50" }
%"struct.std::__1::__atomic_base.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i64 }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.blink::Worklist.60"* }
%"class.blink::Worklist.60" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::Worklist.67"* }
%"class.blink::Worklist.67" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.blink::Worklist.74"* }
%"class.blink::Worklist.74" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.blink::Worklist.81"* }
%"class.blink::Worklist.81" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::Worklist.88"* }
%"class.blink::Worklist.88" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist.95"* }
%"class.blink::Worklist.95" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::Worklist.102"* }
%"class.blink::Worklist.102" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.49" }
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.109", %"class.std::__1::__compressed_pair.118", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.125", [4 x i8] }>
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111", %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { i64 }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { float }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.134", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.154" }
%"class.WTF::VectorBuffer.154" = type { %"class.WTF::VectorBufferBase.155" }
%"class.WTF::VectorBufferBase.155" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.168" }
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.60"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.67"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.74"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.81"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.88"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.191 }
%class.scoped_refptr.191 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__cxx_atomic_impl.194" }
%"struct.std::__1::__cxx_atomic_impl.194" = type { %"struct.std::__1::__cxx_atomic_base_impl.195" }
%"struct.std::__1::__cxx_atomic_base_impl.195" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional", i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.blink::OptionalEffectTiming" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, %"class.WTF::String", %"class.blink::UnrestrictedDoubleOrString", %"class.WTF::String", double, %"class.WTF::String", double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::UnrestrictedDoubleOrString" = type { i32, %"class.WTF::String", double }
%"class.WTF::String" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.WTF::StringImpl"* }
%"class.blink::Document" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.14 }
%union.anon.14 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::V8UnionKeyframeEffectOptionsOrUnrestrictedDouble" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member", double }
%"class.blink::bindings::UnionBase" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::KeyframeEffectOptions"* }
%"class.blink::KeyframeEffectOptions" = type { %"class.blink::EffectTiming", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::EffectTiming" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, %"class.WTF::String", %"class.blink::UnrestrictedDoubleOrString", %"class.WTF::String", double, %"class.WTF::String", double, double }
%"class.blink::V8UnionKeyframeAnimationOptionsOrUnrestrictedDouble" = type { %"class.blink::bindings::UnionBase", i32, %"class.blink::Member.9", double }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::KeyframeAnimationOptions"* }
%"class.blink::KeyframeAnimationOptions" = type { %"class.blink::KeyframeEffectOptions", i8, %"class.WTF::String", %"class.blink::Member.11" }
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink11TimingInput6UpdateINS_20OptionalEffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE = comdat any

$_ZN5blink20LinearTimingFunction6SharedEv = comdat any

$_ZN5blink11TimingInput6UpdateINS_12EffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

$_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [36 x i8] c"iterationStart must be non-negative\00", align 1
@.str.1 = private unnamed_addr constant [36 x i8] c"iterationCount must be non-negative\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"duration must be non-negative or auto\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"reverse\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"alternate\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"alternate-reverse\00", align 1
@_ZZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden local_unnamed_addr global %"class.blink::LinearTimingFunction"* null, comdat, align 8
@_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear = linkonce_odr hidden global i64 0, comdat, align 8
@.str.7 = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZTVN5blink20LinearTimingFunctionE = external unnamed_addr constant { [9 x i8*] }, align 8
@__const._ZN5blink12_GLOBAL__N_119ConvertEffectTimingEPKNS_12EffectTimingEPNS_8DocumentERNS_14ExceptionStateE.timing_output = private unnamed_addr constant <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, { { { { i8, [7 x i8], %union.anon } } } }, i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }> <{ %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF }, %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF } } } } } }, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %class.scoped_refptr { %"class.blink::TimingFunction"* inttoptr (i64 -6148914691236517206 to %"class.blink::TimingFunction"*) }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.11 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN5blink11TimingInput6UpdateINS_20OptionalEffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* dereferenceable(80), %"class.blink::OptionalEffectTiming"*, %"class.blink::Document"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.blink::AnimationTimeDelta", align 8
  %15 = alloca %"class.blink::AnimationTimeDelta", align 8
  %16 = alloca %"class.absl::optional", align 8
  %17 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 3
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 11
  %22 = load double, double* %21, align 8
  %23 = fcmp olt double %22, 0.000000e+00
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0)) #7
  br label %359

25:                                               ; preds = %4, %20
  %26 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 12
  %31 = load double, double* %30, align 8
  %32 = fcmp ult double %31, 0.000000e+00
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %359

34:                                               ; preds = %25, %29
  %35 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 7, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %73, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 7
  %40 = icmp eq i32 %36, 2
  br i1 %40, label %41, label %45

41:                                               ; preds = %38
  %42 = tail call double @_ZNK5blink26UnrestrictedDoubleOrString23GetAsUnrestrictedDoubleEv(%"class.blink::UnrestrictedDoubleOrString"* %39) #7
  %43 = fcmp ult double %42, 0.000000e+00
  br i1 %43, label %44, label %73

44:                                               ; preds = %41
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %359

45:                                               ; preds = %38
  %46 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink26UnrestrictedDoubleOrString11GetAsStringEv(%"class.blink::UnrestrictedDoubleOrString"* %39) #7
  %47 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #7
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %52, align 8
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %54 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %53, i64* %54, align 8
  br label %63

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 1
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %61 = bitcast i8** %60 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %61, align 8
  %62 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %63

63:                                               ; preds = %55, %51
  %64 = phi i64 [ %62, %55 ], [ %53, %51 ]
  %65 = phi i32 [ %58, %55 ], [ 0, %51 ]
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %65, i32* %66, align 8
  %67 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #7
  %68 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %64, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 4, i32* %70, align 8
  %71 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #7
  br i1 %71, label %73, label %72

72:                                               ; preds = %63
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %359

73:                                               ; preds = %63, %34, %41
  %74 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 8, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 8
  %79 = call %"class.blink::TimingFunction"* @_ZN5blink21AnimationInputHelpers19ParseTimingFunctionERKN3WTF6StringEPNS_8DocumentERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8) %78, %"class.blink::Document"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %80 = ptrtoint %"class.blink::TimingFunction"* %79 to i64
  %81 = icmp eq %"class.blink::TimingFunction"* %79, null
  br i1 %81, label %359, label %82

82:                                               ; preds = %77, %73
  %83 = phi i64 [ %80, %77 ], [ 0, %73 ]
  %84 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 1
  %85 = load i8, i8* %84, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %104, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 0
  %89 = bitcast %"class.blink::AnimationTimeDelta"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #7
  %90 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 5
  %91 = load double, double* %90, align 8
  %92 = fdiv double %91, 1.000000e+03
  %93 = getelementptr inbounds %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta"* %14, i64 0, i32 0
  store double %92, double* %93, align 8
  %94 = call zeroext i1 @_ZN5blinkneERKNS_18AnimationTimeDeltaES2_(%"class.blink::AnimationTimeDelta"* dereferenceable(8) %88, %"class.blink::AnimationTimeDelta"* nonnull dereferenceable(8) %14) #7
  br i1 %94, label %95, label %99

95:                                               ; preds = %87
  %96 = bitcast %"class.blink::AnimationTimeDelta"* %14 to i64*
  %97 = bitcast %"struct.blink::Timing"* %0 to i64*
  %98 = load i64, i64* %96, align 8
  store i64 %98, i64* %97, align 8
  br label %99

99:                                               ; preds = %87, %95
  %100 = phi i8 [ 1, %95 ], [ 0, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #7
  %101 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %102 = load i16, i16* %101, align 8
  %103 = or i16 %102, 64
  store i16 %103, i16* %101, align 8
  br label %104

104:                                              ; preds = %82, %99
  %105 = phi i8 [ %100, %99 ], [ 0, %82 ]
  %106 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 2
  %107 = load i8, i8* %106, align 1, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %127, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 1
  %111 = bitcast %"class.blink::AnimationTimeDelta"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #7
  %112 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 9
  %113 = load double, double* %112, align 8
  %114 = fdiv double %113, 1.000000e+03
  %115 = getelementptr inbounds %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta"* %15, i64 0, i32 0
  store double %114, double* %115, align 8
  %116 = call zeroext i1 @_ZN5blinkneERKNS_18AnimationTimeDeltaES2_(%"class.blink::AnimationTimeDelta"* dereferenceable(8) %110, %"class.blink::AnimationTimeDelta"* nonnull dereferenceable(8) %15) #7
  br i1 %116, label %117, label %121

117:                                              ; preds = %109
  %118 = bitcast %"class.blink::AnimationTimeDelta"* %15 to i64*
  %119 = bitcast %"class.blink::AnimationTimeDelta"* %110 to i64*
  %120 = load i64, i64* %118, align 8
  store i64 %120, i64* %119, align 8
  br label %121

121:                                              ; preds = %109, %117
  %122 = phi i8 [ 1, %117 ], [ 0, %109 ]
  %123 = or i8 %122, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #7
  %124 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %125 = load i16, i16* %124, align 8
  %126 = or i16 %125, 4
  store i16 %126, i16* %124, align 8
  br label %127

127:                                              ; preds = %104, %121
  %128 = phi i8 [ %123, %121 ], [ %105, %104 ]
  %129 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 10, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %146, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  %134 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 10
  %135 = call i32 @_ZN5blink6Timing16StringToFillModeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %134) #7
  %136 = load i32, i32* %133, align 4
  %137 = icmp eq i32 %136, %135
  br i1 %137, label %139, label %138

138:                                              ; preds = %132
  store i32 %135, i32* %133, align 4
  br label %139

139:                                              ; preds = %132, %138
  %140 = phi i8 [ 1, %138 ], [ 0, %132 ]
  %141 = and i8 %128, 1
  %142 = or i8 %140, %141
  %143 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %144 = load i16, i16* %143, align 8
  %145 = or i16 %144, 8
  store i16 %145, i16* %143, align 8
  br label %146

146:                                              ; preds = %127, %139
  %147 = phi i8 [ %142, %139 ], [ %128, %127 ]
  %148 = load i8, i8* %17, align 2, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %164, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 4
  %152 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 11
  %153 = load double, double* %152, align 8
  %154 = load double, double* %151, align 8
  %155 = fcmp une double %154, %153
  br i1 %155, label %156, label %157

156:                                              ; preds = %150
  store double %153, double* %151, align 8
  br label %157

157:                                              ; preds = %150, %156
  %158 = phi i8 [ 1, %156 ], [ 0, %150 ]
  %159 = and i8 %147, 1
  %160 = or i8 %158, %159
  %161 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %162 = load i16, i16* %161, align 8
  %163 = or i16 %162, 32
  store i16 %163, i16* %161, align 8
  br label %164

164:                                              ; preds = %146, %157
  %165 = phi i8 [ %160, %157 ], [ %147, %146 ]
  %166 = load i8, i8* %26, align 1, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %182, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 5
  %170 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 12
  %171 = load double, double* %170, align 8
  %172 = load double, double* %169, align 8
  %173 = fcmp une double %172, %171
  br i1 %173, label %174, label %175

174:                                              ; preds = %168
  store double %171, double* %169, align 8
  br label %175

175:                                              ; preds = %168, %174
  %176 = phi i8 [ 1, %174 ], [ 0, %168 ]
  %177 = and i8 %165, 1
  %178 = or i8 %176, %177
  %179 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %180 = load i16, i16* %179, align 8
  %181 = or i16 %180, 16
  store i16 %181, i16* %179, align 8
  br label %182

182:                                              ; preds = %164, %175
  %183 = phi i8 [ %178, %175 ], [ %165, %164 ]
  %184 = load i32, i32* %35, align 8
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %220, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187) #7
  %188 = icmp eq i32 %184, 2
  br i1 %188, label %189, label %193

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 7
  %191 = call double @_ZNK5blink26UnrestrictedDoubleOrString23GetAsUnrestrictedDoubleEv(%"class.blink::UnrestrictedDoubleOrString"* %190) #7
  %192 = fdiv double %191, 1.000000e+03
  br label %193

193:                                              ; preds = %186, %189
  %194 = phi i8 [ 1, %189 ], [ 0, %186 ]
  %195 = phi double [ %192, %189 ], [ undef, %186 ]
  store i8 %194, i8* %187, align 8
  %196 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store double %195, double* %196, align 8
  %197 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %198 = load i8, i8* %197, align 8, !range !2
  %199 = icmp ne i8 %198, 0
  %200 = icmp ne i8 %194, 0
  %201 = xor i1 %200, %199
  %202 = xor i1 %199, true
  %203 = or i1 %201, %202
  br i1 %203, label %211, label %204

204:                                              ; preds = %193
  %205 = icmp eq i8 %194, 0
  br i1 %205, label %206, label %207, !prof !3

206:                                              ; preds = %204
  call void @llvm.trap() #7
  unreachable

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %209 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %210 = call zeroext i1 @_ZN5blinkneERKNS_18AnimationTimeDeltaES2_(%"class.blink::AnimationTimeDelta"* dereferenceable(8) %208, %"class.blink::AnimationTimeDelta"* dereferenceable(8) %209) #7
  br i1 %210, label %212, label %213

211:                                              ; preds = %193
  br i1 %201, label %212, label %213

212:                                              ; preds = %211, %207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* nonnull align 8 %187, i64 16, i1 false) #7
  br label %213

213:                                              ; preds = %207, %211, %212
  %214 = phi i8 [ 1, %212 ], [ 0, %211 ], [ 0, %207 ]
  %215 = and i8 %183, 1
  %216 = or i8 %214, %215
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #7
  %217 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %218 = load i16, i16* %217, align 8
  %219 = or i16 %218, 2
  store i16 %219, i16* %217, align 8
  br label %220

220:                                              ; preds = %182, %213
  %221 = phi i8 [ %216, %213 ], [ %183, %182 ]
  %222 = getelementptr inbounds %"class.blink::OptionalEffectTiming", %"class.blink::OptionalEffectTiming"* %1, i64 0, i32 6, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %304, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 7
  %227 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %227) #7
  %228 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %228, align 8
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 1
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %233 = bitcast i8** %232 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %231, %"class.WTF::StringImpl"** %233, align 8
  %234 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %230, i32* %235, align 8
  %236 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #7
  %237 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %234, i64* %237, align 8
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8** %238, align 8
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 7, i32* %239, align 8
  %240 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %227) #7
  br i1 %240, label %292, label %241

241:                                              ; preds = %225
  %242 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #7
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %245, label %249

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %246, align 8
  %247 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %248 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %247, i64* %248, align 8
  br label %257

249:                                              ; preds = %241
  %250 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %243, %"class.WTF::StringImpl"** %250, align 8
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 1
  %254 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %255 = bitcast i8** %254 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %253, %"class.WTF::StringImpl"** %255, align 8
  %256 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %257

257:                                              ; preds = %249, %245
  %258 = phi i64 [ %256, %249 ], [ %247, %245 ]
  %259 = phi i32 [ %252, %249 ], [ 0, %245 ]
  %260 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %259, i32* %260, align 8
  %261 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %261) #7
  %262 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %258, i64* %262, align 8
  %263 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8** %263, align 8
  %264 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 9, i32* %264, align 8
  %265 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %261) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #7
  br i1 %265, label %292, label %266

266:                                              ; preds = %257
  %267 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #7
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %270, label %274

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %271, align 8
  %272 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %273 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %272, i64* %273, align 8
  br label %282

274:                                              ; preds = %266
  %275 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %268, %"class.WTF::StringImpl"** %275, align 8
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 1
  %279 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %280 = bitcast i8** %279 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %278, %"class.WTF::StringImpl"** %280, align 8
  %281 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %282

282:                                              ; preds = %274, %270
  %283 = phi i64 [ %281, %274 ], [ %272, %270 ]
  %284 = phi i32 [ %277, %274 ], [ 0, %270 ]
  %285 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %284, i32* %285, align 8
  %286 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %286) #7
  %287 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %283, i64* %287, align 8
  %288 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8** %288, align 8
  %289 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 17, i32* %289, align 8
  %290 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %286) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #7
  %291 = select i1 %290, i32 3, i32 0
  br label %292

292:                                              ; preds = %225, %257, %282
  %293 = phi i32 [ 1, %225 ], [ 2, %257 ], [ %291, %282 ]
  %294 = load i32, i32* %226, align 4
  %295 = icmp eq i32 %294, %293
  br i1 %295, label %297, label %296

296:                                              ; preds = %292
  store i32 %293, i32* %226, align 4
  br label %297

297:                                              ; preds = %292, %296
  %298 = phi i8 [ 1, %296 ], [ 0, %292 ]
  %299 = and i8 %221, 1
  %300 = or i8 %298, %299
  %301 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %302 = load i16, i16* %301, align 8
  %303 = or i16 %302, 1
  store i16 %303, i16* %301, align 8
  br label %304

304:                                              ; preds = %220, %297
  %305 = phi i8 [ %300, %297 ], [ %221, %220 ]
  %306 = inttoptr i64 %83 to %"class.blink::TimingFunction"*
  %307 = icmp eq i64 %83, 0
  br i1 %307, label %342, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 9
  %310 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %309, i64 0, i32 0
  %311 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %310, align 8
  %312 = call zeroext i1 @_ZN5blinkneERKNS_14TimingFunctionES2_(%"class.blink::TimingFunction"* dereferenceable(16) %311, %"class.blink::TimingFunction"* nonnull dereferenceable(16) %306) #7
  %313 = zext i1 %312 to i8
  %314 = and i8 %305, 1
  %315 = or i8 %314, %313
  %316 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %306, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = atomicrmw add i32* %316, i32 1 monotonic
  %318 = icmp sgt i32 %317, 0
  br i1 %318, label %322, label %319

319:                                              ; preds = %308
  %320 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %320) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #7
  %321 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %320) #7
  br label %322

322:                                              ; preds = %308, %319
  %323 = bitcast %class.scoped_refptr* %309 to i64*
  %324 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %310, align 8
  store i64 %83, i64* %323, align 8
  %325 = icmp eq %"class.blink::TimingFunction"* %324, null
  br i1 %325, label %338, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %324, i64 0, i32 1, i32 0
  %328 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %327, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = atomicrmw sub i32* %328, i32 1 acq_rel
  %330 = icmp eq i32 %329, 1
  br i1 %330, label %331, label %338

331:                                              ; preds = %326
  %332 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %327, i64 -2
  %333 = bitcast %"class.base::RefCountedThreadSafe"* %332 to %"class.blink::TimingFunction"*
  %334 = bitcast %"class.base::RefCountedThreadSafe"* %332 to void (%"class.blink::TimingFunction"*)***
  %335 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %334, align 8
  %336 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %335, i64 1
  %337 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %336, align 8
  call void %337(%"class.blink::TimingFunction"* nonnull %333) #7
  br label %338

338:                                              ; preds = %322, %326, %331
  %339 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %340 = load i16, i16* %339, align 8
  %341 = or i16 %340, 128
  store i16 %341, i16* %339, align 8
  br label %342

342:                                              ; preds = %338, %304
  %343 = phi i8 [ %315, %338 ], [ %305, %304 ]
  %344 = and i8 %343, 1
  %345 = icmp ne i8 %344, 0
  %346 = icmp eq i64 %83, 0
  br i1 %346, label %359, label %347

347:                                              ; preds = %342
  %348 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %306, i64 0, i32 1, i32 0
  %349 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %348, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = atomicrmw sub i32* %349, i32 1 acq_rel
  %351 = icmp eq i32 %350, 1
  br i1 %351, label %352, label %359

352:                                              ; preds = %347
  %353 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %348, i64 -2
  %354 = bitcast %"class.base::RefCountedThreadSafe"* %353 to %"class.blink::TimingFunction"*
  %355 = bitcast %"class.base::RefCountedThreadSafe"* %353 to void (%"class.blink::TimingFunction"*)***
  %356 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %355, align 8
  %357 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %356, i64 1
  %358 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %357, align 8
  call void %358(%"class.blink::TimingFunction"* nonnull %354) #7
  br label %359

359:                                              ; preds = %77, %352, %347, %342, %72, %44, %33, %24
  %360 = phi i1 [ false, %24 ], [ false, %33 ], [ false, %44 ], [ false, %72 ], [ %345, %342 ], [ %345, %347 ], [ %345, %352 ], [ false, %77 ]
  ret i1 %360
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare double @_ZNK5blink26UnrestrictedDoubleOrString23GetAsUnrestrictedDoubleEv(%"class.blink::UnrestrictedDoubleOrString"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare dereferenceable(8) %"class.WTF::String"* @_ZNK5blink26UnrestrictedDoubleOrString11GetAsStringEv(%"class.blink::UnrestrictedDoubleOrString"*) local_unnamed_addr #1

declare %"class.blink::TimingFunction"* @_ZN5blink21AnimationInputHelpers19ParseTimingFunctionERKN3WTF6StringEPNS_8DocumentERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Document"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare i32 @_ZN5blink6Timing16StringToFillModeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blinkneERKNS_14TimingFunctionES2_(%"class.blink::TimingFunction"* dereferenceable(16), %"class.blink::TimingFunction"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11TimingInput7ConvertEPKNS_48V8UnionKeyframeEffectOptionsOrUnrestrictedDoubleEPNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* noalias sret, %"class.blink::V8UnionKeyframeEffectOptionsOrUnrestrictedDouble"* readonly, %"class.blink::Document"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.blink::UnrestrictedDoubleOrString", align 8
  %10 = icmp eq %"class.blink::V8UnionKeyframeEffectOptionsOrUnrestrictedDouble"* %1, null
  br i1 %10, label %11, label %31

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  %13 = bitcast %"struct.blink::Timing"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 80, i1 false)
  store i32 4, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 4
  %15 = bitcast double* %14 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %15, align 8
  %16 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 7
  store i32 0, i32* %17, align 8
  %18 = tail call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #7
  %19 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 9, i32 0
  store %"class.blink::TimingFunction"* %19, %"class.blink::TimingFunction"** %20, align 8
  %21 = icmp eq %"class.blink::LinearTimingFunction"* %18, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #7
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %29

29:                                               ; preds = %11, %22, %26
  %30 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  store i16 0, i16* %30, align 8
  br label %108

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"class.blink::V8UnionKeyframeEffectOptionsOrUnrestrictedDouble", %"class.blink::V8UnionKeyframeEffectOptionsOrUnrestrictedDouble"* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  switch i32 %33, label %88 [
    i32 0, label %34
    i32 1, label %58
  ]

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.blink::V8UnionKeyframeEffectOptionsOrUnrestrictedDouble", %"class.blink::V8UnionKeyframeEffectOptionsOrUnrestrictedDouble"* %1, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::KeyframeEffectOptions"*, %"class.blink::KeyframeEffectOptions"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::KeyframeEffectOptions", %"class.blink::KeyframeEffectOptions"* %36, i64 0, i32 0
  %38 = bitcast %"struct.blink::Timing"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 bitcast (<{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, { { { { i8, [7 x i8], %union.anon } } } }, i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }>* @__const._ZN5blink12_GLOBAL__N_119ConvertEffectTimingEPKNS_12EffectTimingEPNS_8DocumentERNS_14ExceptionStateE.timing_output to i8*), i64 80, i1 false) #7
  %39 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #7
  store i32 4, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 4
  %41 = bitcast double* %40 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %41, align 8
  %42 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 7
  store i32 0, i32* %43, align 8
  %44 = tail call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #7
  %45 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %44, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 9, i32 0
  store %"class.blink::TimingFunction"* %45, %"class.blink::TimingFunction"** %46, align 8
  %47 = icmp eq %"class.blink::LinearTimingFunction"* %44, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %44, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #7
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #7
  br label %55

55:                                               ; preds = %34, %48, %52
  %56 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  store i16 0, i16* %56, align 8
  %57 = call zeroext i1 @_ZN5blink11TimingInput6UpdateINS_12EffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* dereferenceable(80) %0, %"class.blink::EffectTiming"* %37, %"class.blink::Document"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %108

58:                                               ; preds = %31
  %59 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 96) #7
  %60 = bitcast i8* %59 to %"class.blink::EffectTiming"*
  tail call void @_ZN5blink12EffectTimingC1Ev(%"class.blink::EffectTiming"* %60) #7
  %61 = getelementptr inbounds i8, i8* %59, i64 -4
  %62 = bitcast i8* %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = or i16 %63, 1
  store atomic i16 %64, i16* %62 release, align 2
  %65 = bitcast %"class.blink::UnrestrictedDoubleOrString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #7
  %66 = getelementptr inbounds %"class.blink::V8UnionKeyframeEffectOptionsOrUnrestrictedDouble", %"class.blink::V8UnionKeyframeEffectOptionsOrUnrestrictedDouble"* %1, i64 0, i32 3
  %67 = load double, double* %66, align 8
  call void @_ZN5blink26UnrestrictedDoubleOrString22FromUnrestrictedDoubleEd(%"class.blink::UnrestrictedDoubleOrString"* nonnull sret %9, double %67) #7
  call void @_ZN5blink12EffectTiming11setDurationERKNS_26UnrestrictedDoubleOrStringE(%"class.blink::EffectTiming"* %60, %"class.blink::UnrestrictedDoubleOrString"* nonnull dereferenceable(24) %9) #7
  call void @_ZN5blink26UnrestrictedDoubleOrStringD1Ev(%"class.blink::UnrestrictedDoubleOrString"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #7
  %68 = bitcast %"struct.blink::Timing"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 bitcast (<{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, { { { { i8, [7 x i8], %union.anon } } } }, i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }>* @__const._ZN5blink12_GLOBAL__N_119ConvertEffectTimingEPKNS_12EffectTimingEPNS_8DocumentERNS_14ExceptionStateE.timing_output to i8*), i64 80, i1 false) #7
  %69 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #7
  store i32 4, i32* %69, align 8
  %70 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 4
  %71 = bitcast double* %70 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %71, align 8
  %72 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %72, align 8
  %73 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 7
  store i32 0, i32* %73, align 8
  %74 = call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #7
  %75 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %74, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 9, i32 0
  store %"class.blink::TimingFunction"* %75, %"class.blink::TimingFunction"** %76, align 8
  %77 = icmp eq %"class.blink::LinearTimingFunction"* %74, null
  br i1 %77, label %85, label %78

78:                                               ; preds = %58
  %79 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %74, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 1 monotonic
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #7
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #7
  br label %85

85:                                               ; preds = %58, %78, %82
  %86 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  store i16 0, i16* %86, align 8
  %87 = call zeroext i1 @_ZN5blink11TimingInput6UpdateINS_12EffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* dereferenceable(80) %0, %"class.blink::EffectTiming"* %60, %"class.blink::Document"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %108

88:                                               ; preds = %31
  %89 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  %90 = bitcast %"struct.blink::Timing"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 80, i1 false)
  store i32 4, i32* %89, align 8
  %91 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 4
  %92 = bitcast double* %91 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %92, align 8
  %93 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %93, align 8
  %94 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 7
  store i32 0, i32* %94, align 8
  %95 = tail call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #7
  %96 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %95, i64 0, i32 0
  %97 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 9, i32 0
  store %"class.blink::TimingFunction"* %96, %"class.blink::TimingFunction"** %97, align 8
  %98 = icmp eq %"class.blink::LinearTimingFunction"* %95, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %88
  %100 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %95, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 1 monotonic
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #7
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #7
  br label %106

106:                                              ; preds = %88, %99, %103
  %107 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  store i16 0, i16* %107, align 8
  br label %108

108:                                              ; preds = %106, %85, %55, %29
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink12EffectTiming11setDurationERKNS_26UnrestrictedDoubleOrStringE(%"class.blink::EffectTiming"*, %"class.blink::UnrestrictedDoubleOrString"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN5blink26UnrestrictedDoubleOrString22FromUnrestrictedDoubleEd(%"class.blink::UnrestrictedDoubleOrString"* sret, double) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink26UnrestrictedDoubleOrStringD1Ev(%"class.blink::UnrestrictedDoubleOrString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11TimingInput7ConvertEPKNS_51V8UnionKeyframeAnimationOptionsOrUnrestrictedDoubleEPNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* noalias sret, %"class.blink::V8UnionKeyframeAnimationOptionsOrUnrestrictedDouble"* readonly, %"class.blink::Document"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = alloca %"class.blink::UnrestrictedDoubleOrString", align 8
  %10 = icmp eq %"class.blink::V8UnionKeyframeAnimationOptionsOrUnrestrictedDouble"* %1, null
  br i1 %10, label %11, label %31

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  %13 = bitcast %"struct.blink::Timing"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 80, i1 false)
  store i32 4, i32* %12, align 8
  %14 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 4
  %15 = bitcast double* %14 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %15, align 8
  %16 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 7
  store i32 0, i32* %17, align 8
  %18 = tail call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #7
  %19 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 9, i32 0
  store %"class.blink::TimingFunction"* %19, %"class.blink::TimingFunction"** %20, align 8
  %21 = icmp eq %"class.blink::LinearTimingFunction"* %18, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %11
  %23 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %18, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i32* %23, i32 1 monotonic
  %25 = icmp sgt i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #7
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #7
  br label %29

29:                                               ; preds = %11, %22, %26
  %30 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  store i16 0, i16* %30, align 8
  br label %108

31:                                               ; preds = %4
  %32 = getelementptr inbounds %"class.blink::V8UnionKeyframeAnimationOptionsOrUnrestrictedDouble", %"class.blink::V8UnionKeyframeAnimationOptionsOrUnrestrictedDouble"* %1, i64 0, i32 1
  %33 = load i32, i32* %32, align 8
  switch i32 %33, label %88 [
    i32 0, label %34
    i32 1, label %58
  ]

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.blink::V8UnionKeyframeAnimationOptionsOrUnrestrictedDouble", %"class.blink::V8UnionKeyframeAnimationOptionsOrUnrestrictedDouble"* %1, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::KeyframeAnimationOptions"*, %"class.blink::KeyframeAnimationOptions"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::KeyframeAnimationOptions", %"class.blink::KeyframeAnimationOptions"* %36, i64 0, i32 0, i32 0
  %38 = bitcast %"struct.blink::Timing"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 bitcast (<{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, { { { { i8, [7 x i8], %union.anon } } } }, i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }>* @__const._ZN5blink12_GLOBAL__N_119ConvertEffectTimingEPKNS_12EffectTimingEPNS_8DocumentERNS_14ExceptionStateE.timing_output to i8*), i64 80, i1 false) #7
  %39 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #7
  store i32 4, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 4
  %41 = bitcast double* %40 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %41, align 8
  %42 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 7
  store i32 0, i32* %43, align 8
  %44 = tail call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #7
  %45 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %44, i64 0, i32 0
  %46 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 9, i32 0
  store %"class.blink::TimingFunction"* %45, %"class.blink::TimingFunction"** %46, align 8
  %47 = icmp eq %"class.blink::LinearTimingFunction"* %44, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %34
  %49 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %44, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 1 monotonic
  %51 = icmp sgt i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %48
  %53 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #7
  %54 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #7
  br label %55

55:                                               ; preds = %34, %48, %52
  %56 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  store i16 0, i16* %56, align 8
  %57 = call zeroext i1 @_ZN5blink11TimingInput6UpdateINS_12EffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* dereferenceable(80) %0, %"class.blink::EffectTiming"* %37, %"class.blink::Document"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %108

58:                                               ; preds = %31
  %59 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 96) #7
  %60 = bitcast i8* %59 to %"class.blink::EffectTiming"*
  tail call void @_ZN5blink12EffectTimingC1Ev(%"class.blink::EffectTiming"* %60) #7
  %61 = getelementptr inbounds i8, i8* %59, i64 -4
  %62 = bitcast i8* %61 to i16*
  %63 = load atomic i16, i16* %62 monotonic, align 2
  %64 = or i16 %63, 1
  store atomic i16 %64, i16* %62 release, align 2
  %65 = bitcast %"class.blink::UnrestrictedDoubleOrString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #7
  %66 = getelementptr inbounds %"class.blink::V8UnionKeyframeAnimationOptionsOrUnrestrictedDouble", %"class.blink::V8UnionKeyframeAnimationOptionsOrUnrestrictedDouble"* %1, i64 0, i32 3
  %67 = load double, double* %66, align 8
  call void @_ZN5blink26UnrestrictedDoubleOrString22FromUnrestrictedDoubleEd(%"class.blink::UnrestrictedDoubleOrString"* nonnull sret %9, double %67) #7
  call void @_ZN5blink12EffectTiming11setDurationERKNS_26UnrestrictedDoubleOrStringE(%"class.blink::EffectTiming"* %60, %"class.blink::UnrestrictedDoubleOrString"* nonnull dereferenceable(24) %9) #7
  call void @_ZN5blink26UnrestrictedDoubleOrStringD1Ev(%"class.blink::UnrestrictedDoubleOrString"* nonnull %9) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #7
  %68 = bitcast %"struct.blink::Timing"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 bitcast (<{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, { { { { i8, [7 x i8], %union.anon } } } }, i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }>* @__const._ZN5blink12_GLOBAL__N_119ConvertEffectTimingEPKNS_12EffectTimingEPNS_8DocumentERNS_14ExceptionStateE.timing_output to i8*), i64 80, i1 false) #7
  %69 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #7
  store i32 4, i32* %69, align 8
  %70 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 4
  %71 = bitcast double* %70 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %71, align 8
  %72 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %72, align 8
  %73 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 7
  store i32 0, i32* %73, align 8
  %74 = call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #7
  %75 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %74, i64 0, i32 0
  %76 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 9, i32 0
  store %"class.blink::TimingFunction"* %75, %"class.blink::TimingFunction"** %76, align 8
  %77 = icmp eq %"class.blink::LinearTimingFunction"* %74, null
  br i1 %77, label %85, label %78

78:                                               ; preds = %58
  %79 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %74, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i32* %79, i32 1 monotonic
  %81 = icmp sgt i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #7
  %84 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #7
  br label %85

85:                                               ; preds = %58, %78, %82
  %86 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  store i16 0, i16* %86, align 8
  %87 = call zeroext i1 @_ZN5blink11TimingInput6UpdateINS_12EffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* dereferenceable(80) %0, %"class.blink::EffectTiming"* %60, %"class.blink::Document"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  br label %108

88:                                               ; preds = %31
  %89 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  %90 = bitcast %"struct.blink::Timing"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 80, i1 false)
  store i32 4, i32* %89, align 8
  %91 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 4
  %92 = bitcast double* %91 to <2 x double>*
  store <2 x double> <double 0.000000e+00, double 1.000000e+00>, <2 x double>* %92, align 8
  %93 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %93, align 8
  %94 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 7
  store i32 0, i32* %94, align 8
  %95 = tail call %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() #7
  %96 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %95, i64 0, i32 0
  %97 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 9, i32 0
  store %"class.blink::TimingFunction"* %96, %"class.blink::TimingFunction"** %97, align 8
  %98 = icmp eq %"class.blink::LinearTimingFunction"* %95, null
  br i1 %98, label %106, label %99

99:                                               ; preds = %88
  %100 = getelementptr inbounds %"class.blink::LinearTimingFunction", %"class.blink::LinearTimingFunction"* %95, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = atomicrmw add i32* %100, i32 1 monotonic
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %106, label %103

103:                                              ; preds = %99
  %104 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #7
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #7
  br label %106

106:                                              ; preds = %88, %99, %103
  %107 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  store i16 0, i16* %107, align 8
  br label %108

108:                                              ; preds = %106, %85, %55, %29
  ret void
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LinearTimingFunction"* @_ZN5blink20LinearTimingFunction6SharedEv() local_unnamed_addr #0 comdat align 2 {
  %1 = alloca %"class.logging::CheckError", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %31, !prof !4

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #7
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %31, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 16) #7
  %9 = getelementptr inbounds i8, i8* %8, i64 8
  %10 = bitcast i8* %9 to i32*
  store i32 1, i32* %10, align 4
  %11 = bitcast i8* %8 to i32 (...)***
  %12 = getelementptr inbounds i8, i8* %8, i64 12
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink20LinearTimingFunctionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = icmp eq i8* %8, null
  br i1 %14, label %30, label %15

15:                                               ; preds = %7
  %16 = atomicrmw add i32* %10, i32 1 monotonic
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = bitcast %"class.logging::CheckError"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #7
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %1) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %1) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #7
  br label %21

21:                                               ; preds = %18, %15
  %22 = atomicrmw sub i32* %10, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %30

24:                                               ; preds = %21
  %25 = bitcast i8* %8 to %"class.blink::TimingFunction"*
  %26 = bitcast i8* %8 to void (%"class.blink::TimingFunction"*)***
  %27 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %27, i64 1
  %29 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, align 8
  call void %29(%"class.blink::TimingFunction"* nonnull %25) #7
  br label %30

30:                                               ; preds = %7, %21, %24
  store i8* %8, i8** bitcast (%"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink20LinearTimingFunction6SharedEvE6linear) #7
  br label %31

31:                                               ; preds = %4, %30, %0
  %32 = load %"class.blink::LinearTimingFunction"*, %"class.blink::LinearTimingFunction"** @_ZZN5blink20LinearTimingFunction6SharedEvE6linear, align 8
  ret %"class.blink::LinearTimingFunction"* %32
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink11TimingInput6UpdateINS_12EffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* dereferenceable(80), %"class.blink::EffectTiming"*, %"class.blink::Document"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  %14 = alloca %"class.blink::AnimationTimeDelta", align 8
  %15 = alloca %"class.blink::AnimationTimeDelta", align 8
  %16 = alloca %"class.absl::optional", align 8
  %17 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 3
  %18 = load i8, i8* %17, align 2, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 11
  %22 = load double, double* %21, align 8
  %23 = fcmp olt double %22, 0.000000e+00
  br i1 %23, label %24, label %25

24:                                               ; preds = %20
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0)) #7
  br label %359

25:                                               ; preds = %4, %20
  %26 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 12
  %31 = load double, double* %30, align 8
  %32 = fcmp ult double %31, 0.000000e+00
  br i1 %32, label %33, label %34

33:                                               ; preds = %29
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %359

34:                                               ; preds = %25, %29
  %35 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 7, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %73, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 7
  %40 = icmp eq i32 %36, 2
  br i1 %40, label %41, label %45

41:                                               ; preds = %38
  %42 = tail call double @_ZNK5blink26UnrestrictedDoubleOrString23GetAsUnrestrictedDoubleEv(%"class.blink::UnrestrictedDoubleOrString"* %39) #7
  %43 = fcmp ult double %42, 0.000000e+00
  br i1 %43, label %44, label %73

44:                                               ; preds = %41
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %359

45:                                               ; preds = %38
  %46 = tail call dereferenceable(8) %"class.WTF::String"* @_ZNK5blink26UnrestrictedDoubleOrString11GetAsStringEv(%"class.blink::UnrestrictedDoubleOrString"* %39) #7
  %47 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #7
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %46, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %51, label %55

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %52, align 8
  %53 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %54 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %53, i64* %54, align 8
  br label %63

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 1
  %60 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %61 = bitcast i8** %60 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"** %61, align 8
  %62 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %63

63:                                               ; preds = %55, %51
  %64 = phi i64 [ %62, %55 ], [ %53, %51 ]
  %65 = phi i32 [ %58, %55 ], [ 0, %51 ]
  %66 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %65, i32* %66, align 8
  %67 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #7
  %68 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %64, i64* %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 4, i32* %70, align 8
  %71 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #7
  br i1 %71, label %73, label %72

72:                                               ; preds = %63
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %359

73:                                               ; preds = %63, %34, %41
  %74 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 8, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %82, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 8
  %79 = call %"class.blink::TimingFunction"* @_ZN5blink21AnimationInputHelpers19ParseTimingFunctionERKN3WTF6StringEPNS_8DocumentERNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8) %78, %"class.blink::Document"* %2, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %80 = ptrtoint %"class.blink::TimingFunction"* %79 to i64
  %81 = icmp eq %"class.blink::TimingFunction"* %79, null
  br i1 %81, label %359, label %82

82:                                               ; preds = %77, %73
  %83 = phi i64 [ %80, %77 ], [ 0, %73 ]
  %84 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 1
  %85 = load i8, i8* %84, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %104, label %87

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 0
  %89 = bitcast %"class.blink::AnimationTimeDelta"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #7
  %90 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 5
  %91 = load double, double* %90, align 8
  %92 = fdiv double %91, 1.000000e+03
  %93 = getelementptr inbounds %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta"* %14, i64 0, i32 0
  store double %92, double* %93, align 8
  %94 = call zeroext i1 @_ZN5blinkneERKNS_18AnimationTimeDeltaES2_(%"class.blink::AnimationTimeDelta"* dereferenceable(8) %88, %"class.blink::AnimationTimeDelta"* nonnull dereferenceable(8) %14) #7
  br i1 %94, label %95, label %99

95:                                               ; preds = %87
  %96 = bitcast %"class.blink::AnimationTimeDelta"* %14 to i64*
  %97 = bitcast %"struct.blink::Timing"* %0 to i64*
  %98 = load i64, i64* %96, align 8
  store i64 %98, i64* %97, align 8
  br label %99

99:                                               ; preds = %87, %95
  %100 = phi i8 [ 1, %95 ], [ 0, %87 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #7
  %101 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %102 = load i16, i16* %101, align 8
  %103 = or i16 %102, 64
  store i16 %103, i16* %101, align 8
  br label %104

104:                                              ; preds = %82, %99
  %105 = phi i8 [ %100, %99 ], [ 0, %82 ]
  %106 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 2
  %107 = load i8, i8* %106, align 1, !range !2
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %127, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 1
  %111 = bitcast %"class.blink::AnimationTimeDelta"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #7
  %112 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 9
  %113 = load double, double* %112, align 8
  %114 = fdiv double %113, 1.000000e+03
  %115 = getelementptr inbounds %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta"* %15, i64 0, i32 0
  store double %114, double* %115, align 8
  %116 = call zeroext i1 @_ZN5blinkneERKNS_18AnimationTimeDeltaES2_(%"class.blink::AnimationTimeDelta"* dereferenceable(8) %110, %"class.blink::AnimationTimeDelta"* nonnull dereferenceable(8) %15) #7
  br i1 %116, label %117, label %121

117:                                              ; preds = %109
  %118 = bitcast %"class.blink::AnimationTimeDelta"* %15 to i64*
  %119 = bitcast %"class.blink::AnimationTimeDelta"* %110 to i64*
  %120 = load i64, i64* %118, align 8
  store i64 %120, i64* %119, align 8
  br label %121

121:                                              ; preds = %109, %117
  %122 = phi i8 [ 1, %117 ], [ 0, %109 ]
  %123 = or i8 %122, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #7
  %124 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %125 = load i16, i16* %124, align 8
  %126 = or i16 %125, 4
  store i16 %126, i16* %124, align 8
  br label %127

127:                                              ; preds = %104, %121
  %128 = phi i8 [ %123, %121 ], [ %105, %104 ]
  %129 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 10, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %146, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 2
  %134 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 10
  %135 = call i32 @_ZN5blink6Timing16StringToFillModeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %134) #7
  %136 = load i32, i32* %133, align 4
  %137 = icmp eq i32 %136, %135
  br i1 %137, label %139, label %138

138:                                              ; preds = %132
  store i32 %135, i32* %133, align 4
  br label %139

139:                                              ; preds = %132, %138
  %140 = phi i8 [ 1, %138 ], [ 0, %132 ]
  %141 = and i8 %128, 1
  %142 = or i8 %140, %141
  %143 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %144 = load i16, i16* %143, align 8
  %145 = or i16 %144, 8
  store i16 %145, i16* %143, align 8
  br label %146

146:                                              ; preds = %127, %139
  %147 = phi i8 [ %142, %139 ], [ %128, %127 ]
  %148 = load i8, i8* %17, align 2, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %164, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 4
  %152 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 11
  %153 = load double, double* %152, align 8
  %154 = load double, double* %151, align 8
  %155 = fcmp une double %154, %153
  br i1 %155, label %156, label %157

156:                                              ; preds = %150
  store double %153, double* %151, align 8
  br label %157

157:                                              ; preds = %150, %156
  %158 = phi i8 [ 1, %156 ], [ 0, %150 ]
  %159 = and i8 %147, 1
  %160 = or i8 %158, %159
  %161 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %162 = load i16, i16* %161, align 8
  %163 = or i16 %162, 32
  store i16 %163, i16* %161, align 8
  br label %164

164:                                              ; preds = %146, %157
  %165 = phi i8 [ %160, %157 ], [ %147, %146 ]
  %166 = load i8, i8* %26, align 1, !range !2
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %182, label %168

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 5
  %170 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 12
  %171 = load double, double* %170, align 8
  %172 = load double, double* %169, align 8
  %173 = fcmp une double %172, %171
  br i1 %173, label %174, label %175

174:                                              ; preds = %168
  store double %171, double* %169, align 8
  br label %175

175:                                              ; preds = %168, %174
  %176 = phi i8 [ 1, %174 ], [ 0, %168 ]
  %177 = and i8 %165, 1
  %178 = or i8 %176, %177
  %179 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %180 = load i16, i16* %179, align 8
  %181 = or i16 %180, 16
  store i16 %181, i16* %179, align 8
  br label %182

182:                                              ; preds = %164, %175
  %183 = phi i8 [ %178, %175 ], [ %165, %164 ]
  %184 = load i32, i32* %35, align 8
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %220, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %187) #7
  %188 = icmp eq i32 %184, 2
  br i1 %188, label %189, label %193

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 7
  %191 = call double @_ZNK5blink26UnrestrictedDoubleOrString23GetAsUnrestrictedDoubleEv(%"class.blink::UnrestrictedDoubleOrString"* %190) #7
  %192 = fdiv double %191, 1.000000e+03
  br label %193

193:                                              ; preds = %186, %189
  %194 = phi i8 [ 1, %189 ], [ 0, %186 ]
  %195 = phi double [ %192, %189 ], [ undef, %186 ]
  store i8 %194, i8* %187, align 8
  %196 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store double %195, double* %196, align 8
  %197 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %198 = load i8, i8* %197, align 8, !range !2
  %199 = icmp ne i8 %198, 0
  %200 = icmp ne i8 %194, 0
  %201 = xor i1 %200, %199
  %202 = xor i1 %199, true
  %203 = or i1 %201, %202
  br i1 %203, label %211, label %204

204:                                              ; preds = %193
  %205 = icmp eq i8 %194, 0
  br i1 %205, label %206, label %207, !prof !3

206:                                              ; preds = %204
  call void @llvm.trap() #7
  unreachable

207:                                              ; preds = %204
  %208 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %209 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %210 = call zeroext i1 @_ZN5blinkneERKNS_18AnimationTimeDeltaES2_(%"class.blink::AnimationTimeDelta"* dereferenceable(8) %208, %"class.blink::AnimationTimeDelta"* dereferenceable(8) %209) #7
  br i1 %210, label %212, label %213

211:                                              ; preds = %193
  br i1 %201, label %212, label %213

212:                                              ; preds = %211, %207
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %197, i8* nonnull align 8 %187, i64 16, i1 false) #7
  br label %213

213:                                              ; preds = %207, %211, %212
  %214 = phi i8 [ 1, %212 ], [ 0, %211 ], [ 0, %207 ]
  %215 = and i8 %183, 1
  %216 = or i8 %214, %215
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %187) #7
  %217 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %218 = load i16, i16* %217, align 8
  %219 = or i16 %218, 2
  store i16 %219, i16* %217, align 8
  br label %220

220:                                              ; preds = %182, %213
  %221 = phi i8 [ %216, %213 ], [ %183, %182 ]
  %222 = getelementptr inbounds %"class.blink::EffectTiming", %"class.blink::EffectTiming"* %1, i64 0, i32 6, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %304, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 7
  %227 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %227) #7
  %228 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %228, align 8
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 1
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %233 = bitcast i8** %232 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %231, %"class.WTF::StringImpl"** %233, align 8
  %234 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %230, i32* %235, align 8
  %236 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %236) #7
  %237 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %234, i64* %237, align 8
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0), i8** %238, align 8
  %239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 7, i32* %239, align 8
  %240 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %236) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %227) #7
  br i1 %240, label %292, label %241

241:                                              ; preds = %225
  %242 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #7
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %245, label %249

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %246, align 8
  %247 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %248 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %247, i64* %248, align 8
  br label %257

249:                                              ; preds = %241
  %250 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %243, %"class.WTF::StringImpl"** %250, align 8
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 1
  %252 = load i32, i32* %251, align 4
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 1
  %254 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %255 = bitcast i8** %254 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %253, %"class.WTF::StringImpl"** %255, align 8
  %256 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %257

257:                                              ; preds = %249, %245
  %258 = phi i64 [ %256, %249 ], [ %247, %245 ]
  %259 = phi i32 [ %252, %249 ], [ 0, %245 ]
  %260 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %259, i32* %260, align 8
  %261 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %261) #7
  %262 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %258, i64* %262, align 8
  %263 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), i8** %263, align 8
  %264 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 9, i32* %264, align 8
  %265 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %261) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #7
  br i1 %265, label %292, label %266

266:                                              ; preds = %257
  %267 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %267) #7
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %270, label %274

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* null, i8** %271, align 8
  %272 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %273 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %272, i64* %273, align 8
  br label %282

274:                                              ; preds = %266
  %275 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %268, %"class.WTF::StringImpl"** %275, align 8
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 1
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 1
  %279 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %280 = bitcast i8** %279 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %278, %"class.WTF::StringImpl"** %280, align 8
  %281 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %282

282:                                              ; preds = %274, %270
  %283 = phi i64 [ %281, %274 ], [ %272, %270 ]
  %284 = phi i32 [ %277, %274 ], [ 0, %270 ]
  %285 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %284, i32* %285, align 8
  %286 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %286) #7
  %287 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %283, i64* %287, align 8
  %288 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i8** %288, align 8
  %289 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 17, i32* %289, align 8
  %290 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %12) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %286) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %267) #7
  %291 = select i1 %290, i32 3, i32 0
  br label %292

292:                                              ; preds = %225, %257, %282
  %293 = phi i32 [ 1, %225 ], [ 2, %257 ], [ %291, %282 ]
  %294 = load i32, i32* %226, align 4
  %295 = icmp eq i32 %294, %293
  br i1 %295, label %297, label %296

296:                                              ; preds = %292
  store i32 %293, i32* %226, align 4
  br label %297

297:                                              ; preds = %292, %296
  %298 = phi i8 [ 1, %296 ], [ 0, %292 ]
  %299 = and i8 %221, 1
  %300 = or i8 %298, %299
  %301 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %302 = load i16, i16* %301, align 8
  %303 = or i16 %302, 1
  store i16 %303, i16* %301, align 8
  br label %304

304:                                              ; preds = %220, %297
  %305 = phi i8 [ %300, %297 ], [ %221, %220 ]
  %306 = inttoptr i64 %83 to %"class.blink::TimingFunction"*
  %307 = icmp eq i64 %83, 0
  br i1 %307, label %342, label %308

308:                                              ; preds = %304
  %309 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 9
  %310 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %309, i64 0, i32 0
  %311 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %310, align 8
  %312 = call zeroext i1 @_ZN5blinkneERKNS_14TimingFunctionES2_(%"class.blink::TimingFunction"* dereferenceable(16) %311, %"class.blink::TimingFunction"* nonnull dereferenceable(16) %306) #7
  %313 = zext i1 %312 to i8
  %314 = and i8 %305, 1
  %315 = or i8 %314, %313
  %316 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %306, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = atomicrmw add i32* %316, i32 1 monotonic
  %318 = icmp sgt i32 %317, 0
  br i1 %318, label %322, label %319

319:                                              ; preds = %308
  %320 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %320) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0)) #7
  %321 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %320) #7
  br label %322

322:                                              ; preds = %308, %319
  %323 = bitcast %class.scoped_refptr* %309 to i64*
  %324 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %310, align 8
  store i64 %83, i64* %323, align 8
  %325 = icmp eq %"class.blink::TimingFunction"* %324, null
  br i1 %325, label %338, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %324, i64 0, i32 1, i32 0
  %328 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %327, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = atomicrmw sub i32* %328, i32 1 acq_rel
  %330 = icmp eq i32 %329, 1
  br i1 %330, label %331, label %338

331:                                              ; preds = %326
  %332 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %327, i64 -2
  %333 = bitcast %"class.base::RefCountedThreadSafe"* %332 to %"class.blink::TimingFunction"*
  %334 = bitcast %"class.base::RefCountedThreadSafe"* %332 to void (%"class.blink::TimingFunction"*)***
  %335 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %334, align 8
  %336 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %335, i64 1
  %337 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %336, align 8
  call void %337(%"class.blink::TimingFunction"* nonnull %333) #7
  br label %338

338:                                              ; preds = %322, %326, %331
  %339 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %0, i64 0, i32 10
  %340 = load i16, i16* %339, align 8
  %341 = or i16 %340, 128
  store i16 %341, i16* %339, align 8
  br label %342

342:                                              ; preds = %338, %304
  %343 = phi i8 [ %315, %338 ], [ %305, %304 ]
  %344 = and i8 %343, 1
  %345 = icmp ne i8 %344, 0
  %346 = icmp eq i64 %83, 0
  br i1 %346, label %359, label %347

347:                                              ; preds = %342
  %348 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %306, i64 0, i32 1, i32 0
  %349 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %348, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = atomicrmw sub i32* %349, i32 1 acq_rel
  %351 = icmp eq i32 %350, 1
  br i1 %351, label %352, label %359

352:                                              ; preds = %347
  %353 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %348, i64 -2
  %354 = bitcast %"class.base::RefCountedThreadSafe"* %353 to %"class.blink::TimingFunction"*
  %355 = bitcast %"class.base::RefCountedThreadSafe"* %353 to void (%"class.blink::TimingFunction"*)***
  %356 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %355, align 8
  %357 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %356, i64 1
  %358 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %357, align 8
  call void %358(%"class.blink::TimingFunction"* nonnull %354) #7
  br label %359

359:                                              ; preds = %77, %352, %347, %342, %72, %44, %33, %24
  %360 = phi i1 [ false, %24 ], [ false, %33 ], [ false, %44 ], [ false, %72 ], [ %345, %342 ], [ %345, %347 ], [ %345, %352 ], [ false, %77 ]
  ret i1 %360
}

declare void @_ZN5blink12EffectTimingC1Ev(%"class.blink::EffectTiming"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.2"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.2"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.2"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blinkneERKNS_18AnimationTimeDeltaES2_(%"class.blink::AnimationTimeDelta"* dereferenceable(8), %"class.blink::AnimationTimeDelta"* dereferenceable(8)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nofree nounwind }
attributes #6 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
