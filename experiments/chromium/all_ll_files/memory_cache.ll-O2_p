; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/memory_cache.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/memory_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::Persistent.376" = type { %"class.blink::PersistentBase.377" }
%"class.blink::PersistentBase.377" = type { %"class.blink::MemoryCache"*, %"class.blink::PersistentNodePtr" }
%"class.blink::MemoryCache" = type { %"class.blink::MemoryCacheDumpClient", %"class.blink::MemoryPressureListener", %"class.blink::HeapHashMap", i8, i8, %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i64, %"class.base::TimeDelta", i64, %class.scoped_refptr.365 }
%"class.blink::MemoryCacheDumpClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.blink::Member" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapHashMap.3"* }
%"class.blink::HeapHashMap.3" = type { %"class.WTF::HashMap.6" }
%"class.WTF::HashMap.6" = type { %"class.WTF::HashTable.7" }
%"class.WTF::HashTable.7" = type <{ %"struct.WTF::KeyValuePair.9"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.9" = type { %"class.WTF::String", %"class.blink::Member.10" }
%"class.blink::Member.10" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::MemoryCacheEntry"* }
%"class.blink::MemoryCacheEntry" = type { %"class.blink::UntracedMember" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.14" }
%"class.blink::MemberBase.14" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.38", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.341", %"class.blink::ResourceResponse", %class.scoped_refptr.343, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.18", i8, %"class.absl::optional.27", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.absl::optional.18" = type { %"class.absl::optional_internal::optional_data.19" }
%"class.absl::optional_internal::optional_data.19" = type { %"class.absl::optional_internal::optional_data_base.20" }
%"class.absl::optional_internal::optional_data_base.20" = type { %"class.absl::optional_internal::optional_data_dtor_base.21" }
%"class.absl::optional_internal::optional_data_dtor_base.21" = type { i8, [7 x i8], %union.anon.22 }
%union.anon.22 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.25 }
%union.anon.25 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.27" = type { %"class.absl::optional_internal::optional_data.28" }
%"class.absl::optional_internal::optional_data.28" = type { %"class.absl::optional_internal::optional_data_base.29" }
%"class.absl::optional_internal::optional_data_base.29" = type { %"class.absl::optional_internal::optional_data_dtor_base.30" }
%"class.absl::optional_internal::optional_data_dtor_base.30" = type { i8, %union.anon.31 }
%union.anon.31 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector", %"class.WTF::Vector.33" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.WTF::Vector.33" = type { %"class.WTF::VectorBuffer.34" }
%"class.WTF::VectorBuffer.34" = type { %"class.WTF::VectorBufferBase.35" }
%"class.WTF::VectorBufferBase.35" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.38" = type { %"class.WTF::VectorBuffer.39" }
%"class.WTF::VectorBuffer.39" = type { %"class.WTF::VectorBufferBase.40" }
%"class.WTF::VectorBufferBase.40" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.138" }
%"class.WTF::HashMap.138" = type { %"class.WTF::HashTable.139" }
%"class.WTF::HashTable.139" = type <{ %"struct.WTF::KeyValuePair.141"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.141" = type <{ %"class.blink::WeakMember.475", i32, [4 x i8] }>
%"class.blink::WeakMember.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.144" }
%"class.WTF::HashTable.144" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.146", i8, i8, %class.scoped_refptr.150, %class.scoped_refptr.336, %class.scoped_refptr.338 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.146" = type { %"class.WTF::HashTable.147" }
%"class.WTF::HashTable.147" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type opaque
%class.scoped_refptr.150 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.151" }
%"class.base::RefCounted.151" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%class.scoped_refptr.336 = type { %"class.base::RefCountedData.337"* }
%"class.base::RefCountedData.337" = type opaque
%class.scoped_refptr.338 = type { %"class.base::RefCountedData.339"* }
%"class.base::RefCountedData.339" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.101" }
%"class.base::time_internal::TimeBase.101" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.340 }
%class.scoped_refptr.340 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.46, %class.scoped_refptr.46, %class.scoped_refptr.46, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.52, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.65", %"class.absl::optional.70", %"class.absl::optional.80", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.90", %"class.absl::optional.80", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.80", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.90", %"class.absl::optional.95", i8, %class.scoped_refptr.100 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.41" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.46 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.374", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.41", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.46 }
%"class.WTF::RefCounted.374" = type { %"class.base::RefCounted.375" }
%"class.base::RefCounted.375" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.47" }
%"class.WTF::HashMap.47" = type { %"class.WTF::HashTable.48" }
%"class.WTF::HashTable.48" = type <{ %"struct.WTF::KeyValuePair.51"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.51" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.52 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.59, i8, %"class.url::Origin" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.53"*, %"class.std::__1::unique_ptr.53"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.463" }
%"struct.std::__1::__compressed_pair_elem.463" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.53"* }
%class.scoped_refptr.59 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.60" }
%"struct.std::__1::atomic.60" = type { %"struct.std::__1::__atomic_base.61" }
%"struct.std::__1::__atomic_base.61" = type { %"struct.std::__1::__atomic_base.62" }
%"struct.std::__1::__atomic_base.62" = type { %"struct.std::__1::__cxx_atomic_impl.63" }
%"struct.std::__1::__cxx_atomic_impl.63" = type { %"struct.std::__1::__cxx_atomic_base_impl.64" }
%"struct.std::__1::__cxx_atomic_base_impl.64" = type { i32 }
%"class.absl::optional.65" = type { %"class.absl::optional_internal::optional_data.66" }
%"class.absl::optional_internal::optional_data.66" = type { %"class.absl::optional_internal::optional_data_base.67" }
%"class.absl::optional_internal::optional_data_base.67" = type { %"class.absl::optional_internal::optional_data_dtor_base.68" }
%"class.absl::optional_internal::optional_data_dtor_base.68" = type { i8, %union.anon.69 }
%union.anon.69 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.70" = type { %"class.absl::optional_internal::optional_data.71" }
%"class.absl::optional_internal::optional_data.71" = type { %"class.absl::optional_internal::optional_data_base.72" }
%"class.absl::optional_internal::optional_data_base.72" = type { %"class.absl::optional_internal::optional_data_dtor_base.73" }
%"class.absl::optional_internal::optional_data_dtor_base.73" = type { i8, %union.anon.74 }
%union.anon.74 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.75", %"class.WTF::Vector.33", %"class.WTF::String" }
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77" }
%"class.WTF::VectorBufferBase.77" = type { %class.scoped_refptr.46*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.85", %"class.absl::optional.85" }
%"class.absl::optional.85" = type { %"class.absl::optional_internal::optional_data.86" }
%"class.absl::optional_internal::optional_data.86" = type { %"class.absl::optional_internal::optional_data_base.87" }
%"class.absl::optional_internal::optional_data_base.87" = type { %"class.absl::optional_internal::optional_data_dtor_base.88" }
%"class.absl::optional_internal::optional_data_dtor_base.88" = type { i8, %union.anon.89 }
%union.anon.89 = type { %"class.base::TimeDelta" }
%"class.absl::optional.80" = type { %"class.absl::optional_internal::optional_data.81" }
%"class.absl::optional_internal::optional_data.81" = type { %"class.absl::optional_internal::optional_data_base.82" }
%"class.absl::optional_internal::optional_data_base.82" = type { %"class.absl::optional_internal::optional_data_dtor_base.83" }
%"class.absl::optional_internal::optional_data_dtor_base.83" = type { i8, %union.anon.84 }
%union.anon.84 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.90" = type { %"class.absl::optional_internal::optional_data.91" }
%"class.absl::optional_internal::optional_data.91" = type { %"class.absl::optional_internal::optional_data_base.92" }
%"class.absl::optional_internal::optional_data_base.92" = type { %"class.absl::optional_internal::optional_data_dtor_base.93" }
%"class.absl::optional_internal::optional_data_dtor_base.93" = type { i8, %union.anon.94 }
%union.anon.94 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.95" = type { %"class.absl::optional_internal::optional_data.96" }
%"class.absl::optional_internal::optional_data.96" = type { %"class.absl::optional_internal::optional_data_base.97" }
%"class.absl::optional_internal::optional_data_base.97" = type { %"class.absl::optional_internal::optional_data_dtor_base.98" }
%"class.absl::optional_internal::optional_data_dtor_base.98" = type { i8, %union.anon.99 }
%union.anon.99 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.100 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.467", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.467" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.468" }
%"class.std::__1::vector.468" = type { %"class.std::__1::__vector_base.469" }
%"class.std::__1::__vector_base.469" = type { i32*, i32*, %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { i32* }
%"class.blink::Member.341" = type { %"class.blink::MemberBase.342" }
%"class.blink::MemberBase.342" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.102", %class.scoped_refptr.117, %class.scoped_refptr.118, %"struct.blink::CacheControlHeader", %"class.absl::optional.85", %"class.absl::optional.119", %"class.absl::optional.119", %"class.absl::optional.119", i64, %"class.blink::KURL", %"class.WTF::Vector.124", %"class.WTF::String", %"class.WTF::Vector.33", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.90", %"class.WTF::Vector.33", %"class.blink::KURL", %"class.absl::optional.129" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.102" = type { %"class.absl::optional_internal::optional_data.103" }
%"class.absl::optional_internal::optional_data.103" = type { %"class.absl::optional_internal::optional_data_base.104" }
%"class.absl::optional_internal::optional_data_base.104" = type { %"class.absl::optional_internal::optional_data_dtor_base.105" }
%"class.absl::optional_internal::optional_data_dtor_base.105" = type { i8, %union.anon.106 }
%union.anon.106 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.33", %"class.WTF::String", i64, i64, %"class.WTF::Vector.107", %"class.WTF::Vector.112" }
%"class.WTF::Vector.107" = type { %"class.WTF::VectorBuffer.108" }
%"class.WTF::VectorBuffer.108" = type { %"class.WTF::VectorBufferBase.109" }
%"class.WTF::VectorBufferBase.109" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.112" = type { %"class.WTF::VectorBuffer.113" }
%"class.WTF::VectorBuffer.113" = type { %"class.WTF::VectorBufferBase.114" }
%"class.WTF::VectorBufferBase.114" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.117 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.118 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.119" = type { %"class.absl::optional_internal::optional_data.120" }
%"class.absl::optional_internal::optional_data.120" = type { %"class.absl::optional_internal::optional_data_base.121" }
%"class.absl::optional_internal::optional_data_base.121" = type { %"class.absl::optional_internal::optional_data_dtor_base.122" }
%"class.absl::optional_internal::optional_data_dtor_base.122" = type { i8, %union.anon.123 }
%union.anon.123 = type { %"class.base::Time" }
%"class.WTF::Vector.124" = type { %"class.WTF::VectorBuffer.125" }
%"class.WTF::VectorBuffer.125" = type { %"class.WTF::VectorBufferBase.126" }
%"class.WTF::VectorBufferBase.126" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.129" = type { %"class.absl::optional_internal::optional_data.130" }
%"class.absl::optional_internal::optional_data.130" = type { %"class.absl::optional_internal::optional_data_base.131" }
%"class.absl::optional_internal::optional_data_base.131" = type { %"class.absl::optional_internal::optional_data_dtor_base.132" }
%"class.absl::optional_internal::optional_data_dtor_base.132" = type { i8, %union.anon.133 }
%union.anon.133 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.343 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.344", i64, %"class.WTF::Vector.346", %"class.WTF::Vector.351" }
%"class.WTF::RefCounted.344" = type { %"class.base::RefCounted.345" }
%"class.base::RefCounted.345" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.346" = type { %"class.WTF::VectorBuffer.347" }
%"class.WTF::VectorBuffer.347" = type { %"class.WTF::VectorBufferBase.348" }
%"class.WTF::VectorBufferBase.348" = type { i8*, i32, i32 }
%"class.WTF::Vector.351" = type { %"class.WTF::VectorBuffer.352" }
%"class.WTF::VectorBuffer.352" = type { %"class.WTF::VectorBufferBase.353" }
%"class.WTF::VectorBufferBase.353" = type { %"class.std::__1::unique_ptr.354"*, i32, i32 }
%"class.std::__1::unique_ptr.354" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%class.scoped_refptr.365 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.366" }>
%"class.base::RefCountedThreadSafe.366" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.152", i32, [4 x i8], %"class.std::__1::unique_ptr.290", %"class.std::__1::unique_ptr.290", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.307", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.319", %"class.std::__1::unique_ptr.325", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.332", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.173", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.196", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.210", %"class.std::__1::unique_ptr.217", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.238", %"class.std::__1::unique_ptr.245", %"class.std::__1::unique_ptr.270", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.173" = type { %"class.std::__1::__compressed_pair.174" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i64 }
%"class.std::__1::unique_ptr.196" = type { %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { %"class.blink::Worklist.199"* }
%"class.blink::Worklist.199" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::Worklist.206"* }
%"class.blink::Worklist.206" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.210" = type { %"class.std::__1::__compressed_pair.211" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.blink::Worklist.213"* }
%"class.blink::Worklist.213" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.blink::Worklist.220"* }
%"class.blink::Worklist.220" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::Worklist.227"* }
%"class.blink::Worklist.227" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::Worklist.234"* }
%"class.blink::Worklist.234" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.blink::Worklist.241"* }
%"class.blink::Worklist.241" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.188" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.248", %"class.std::__1::__compressed_pair.257", %"class.std::__1::__compressed_pair.262", %"class.std::__1::__compressed_pair.264", [4 x i8] }>
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250", %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { float }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.273", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.282" }
%"class.WTF::Vector.282" = type { %"class.WTF::VectorBuffer.283" }
%"class.WTF::VectorBuffer.283" = type { %"class.WTF::VectorBufferBase.284" }
%"class.WTF::VectorBufferBase.284" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.290" = type { %"class.std::__1::__compressed_pair.291" }
%"class.std::__1::__compressed_pair.291" = type { %"struct.std::__1::__compressed_pair_elem.292" }
%"struct.std::__1::__compressed_pair_elem.292" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.298" }
%"class.WTF::VectorBuffer.298" = type { %"class.WTF::VectorBufferBase.299" }
%"class.WTF::VectorBufferBase.299" = type { %"struct.std::__1::pair.300"*, i32, i32 }
%"struct.std::__1::pair.300" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.313" }
%"class.std::__1::unique_ptr.313" = type { %"class.std::__1::__compressed_pair.314" }
%"class.std::__1::__compressed_pair.314" = type { %"struct.std::__1::__compressed_pair_elem.315" }
%"struct.std::__1::__compressed_pair_elem.315" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.199"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.206"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.213"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.220"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.227"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.367", i64 }
%"class.std::__1::vector.367" = type { %"class.std::__1::__vector_base.368" }
%"class.std::__1::__vector_base.368" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.369" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.369" = type { %"struct.std::__1::__compressed_pair_elem.370" }
%"struct.std::__1::__compressed_pair_elem.370" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.319" = type { %"class.std::__1::__compressed_pair.320" }
%"class.std::__1::__compressed_pair.320" = type { %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.331 }
%class.scoped_refptr.331 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.332" = type { %"struct.std::__1::__atomic_base.333" }
%"struct.std::__1::__atomic_base.333" = type { %"struct.std::__1::__cxx_atomic_impl.334" }
%"struct.std::__1::__cxx_atomic_impl.334" = type { %"struct.std::__1::__cxx_atomic_base_impl.335" }
%"struct.std::__1::__cxx_atomic_base_impl.335" = type { i8 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.60" }
%"class.blink::Thread" = type { i32 (...)** }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.366", [4 x i8] }>
%"class.blink::MemoryCacheDumpProvider" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.blink::WeakPersistent" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.378" }
%"class.blink::PersistentBase.378" = type { %"class.blink::MemoryCacheDumpClient"*, %"class.blink::PersistentNodePtr.379" }
%"class.blink::PersistentNodePtr.379" = type { %"class.blink::PersistentNode"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::MemoryPressureListenerRegistry" = type { %"class.blink::HeapHashSet.382", %"class.WTF::HashSet.389", %"class.WTF::Mutex" }
%"class.blink::HeapHashSet.382" = type { %"class.WTF::HashSet.385" }
%"class.WTF::HashSet.385" = type { %"class.WTF::HashTable.386" }
%"class.WTF::HashTable.386" = type <{ %"class.blink::WeakMember.388"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.388" = type opaque
%"class.WTF::HashSet.389" = type { %"class.WTF::HashTable.390" }
%"class.WTF::HashTable.390" = type <{ %"class.blink::Thread"**, i32, i32, i32, [4 x i8] }>
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.498", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.500", i64, i64 }
%"class.std::__1::unique_ptr.500" = type { %"class.std::__1::__compressed_pair.501" }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.511" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.WTF::HashTableIteratorAdapter" = type { %"class.WTF::HashTableIterator" }
%"class.WTF::HashTableIterator" = type { %"class.WTF::HashTableConstIterator" }
%"class.WTF::HashTableConstIterator" = type { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.396" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.blink::Member.399"*, i32, i32 }
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::Resource"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.405 }
%class.scoped_refptr.405 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.406", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.406" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.blink::MemoryCache::TypeStatistic" = type { i64, i64, i64, i64, i64, i64, i64 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"struct.blink::MemoryCache::Statistics" = type { %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic" }
%"class.blink::WebProcessMemoryDump" = type { %"class.std::__1::unique_ptr.407", %"class.base::trace_event::ProcessMemoryDump"*, i32, [4 x i8], %"class.WTF::HashMap.451", %"class.WTF::Vector.456" }
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.base::trace_event::ProcessMemoryDump"* }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map", %"class.std::__1::map.419", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.430" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.410" }
%"class.std::__1::__tree.410" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.411", %"class.std::__1::__compressed_pair.415" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"class.std::__1::map.419" = type { %"class.std::__1::__tree.420" }
%"class.std::__1::__tree.420" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.421", %"class.std::__1::__compressed_pair.425" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional.433", %"class.std::__1::vector.438" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional.433" = type { %"class.absl::optional_internal::optional_data.434" }
%"class.absl::optional_internal::optional_data.434" = type { %"class.absl::optional_internal::optional_data_base.435" }
%"class.absl::optional_internal::optional_data_base.435" = type { %"class.absl::optional_internal::optional_data_dtor_base.436" }
%"class.absl::optional_internal::optional_data_dtor_base.436" = type { i8, %union.anon.437 }
%union.anon.437 = type { i64 }
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.440" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.WTF::HashMap.451" = type { %"class.WTF::HashTable.452" }
%"class.WTF::HashTable.452" = type <{ %"struct.WTF::KeyValuePair.455"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.455" = type opaque
%"class.WTF::Vector.456" = type { %"class.WTF::VectorBuffer.457" }
%"class.WTF::VectorBuffer.457" = type { %"class.WTF::VectorBufferBase.458" }
%"class.WTF::VectorBufferBase.458" = type { %"class.std::__1::unique_ptr.459"*, i32, i32 }
%"class.std::__1::unique_ptr.459" = type opaque
%"class.blink::WebMemoryAllocatorDump" = type { %"class.base::trace_event::MemoryAllocatorDump"*, i64 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.478", %"class.blink::FreeList", %"class.WTF::Vector.483" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.477" }
%"struct.std::__1::array.477" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.478" = type { %"class.WTF::VectorBuffer.479" }
%"class.WTF::VectorBuffer.479" = type { %"class.WTF::VectorBufferBase.480" }
%"class.WTF::VectorBufferBase.480" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.483" = type { %"class.WTF::VectorBuffer.484" }
%"class.WTF::VectorBuffer.484" = type { %"class.WTF::VectorBufferBase.485" }
%"class.WTF::VectorBufferBase.485" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapHashTableBacking.531" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZN5blink22MemoryPressureListener13OnPurgeMemoryEv = comdat any

$_ZN5blink14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_21MemoryCacheDumpClientEEEbPKT_ = comdat any

$_ZZN7logging15CheckOpValueStrIPN5blink8ResourceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_11MemoryCacheEE4CallIJ13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11MemoryCacheEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_11MemoryCacheEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_11MemoryCacheEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_11MemoryCacheEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11MemoryCacheELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_11MemoryCacheELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_ = comdat any

$_ZN5blink14PersistentBaseINS_11MemoryCacheELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv = comdat any

$_ZN5blink26WeakCallbackMethodDelegateINS_16MemoryCacheEntryEXadL_ZNS1_17ClearResourceWeakERKNS_14LivenessBrokerEEEE10TrampolineES4_PKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_11HeapHashMapIS3_NS6_INS5_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS3_EENSB_IS9_EEEEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16MemoryCacheEntryEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS8_SI_SJ_EES1_EEbRKT0_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS3_10StringHashENS3_10HashTraitsIS4_EENS9_IS7_EEEEEEPhm = comdat any

$_ZN5blink9NameTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_S8_SJ_EERKS1_PSC_EENS_18HashTableAddResultISK_SE_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6ExpandEPSE_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE12ExpandBufferEjPSE_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE8RehashToEPSE_jSL_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_11HeapHashMapIS3_NS5_INS_16MemoryCacheEntryEEENS1_10StringHashENS1_10HashTraitsIS3_EENSA_IS8_EEEEEEEENS1_24KeyValuePairKeyExtractorES9_NS1_18HashMapValueTraitsISB_NSA_ISE_EEEESB_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_11HeapHashMapIS5_NS7_INS_16MemoryCacheEntryEEENS3_10StringHashENS3_10HashTraitsIS5_EENSC_ISA_EEEEEEEENS3_24KeyValuePairKeyExtractorESB_NS3_18HashMapValueTraitsISD_NSC_ISG_EEEESD_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6LookupERKS1_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16MemoryCacheEntryEEEPhm = comdat any

$_ZN5blink9NameTraitINS_16MemoryCacheEntryEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERNS3_4KURLERPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_16MemoryCacheEntryEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_16MemoryCacheEntryEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_ = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE5eraseEPKSE_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink11MemoryCacheEFvNS4_13PruneStrategyEEJNS0_17UnretainedWrapperIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink11MemoryCacheEFvNS3_13PruneStrategyEEJNS0_17UnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_11MemoryCacheEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11MemoryCacheEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16MemoryCacheEntryEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16MemoryCacheEntryEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blinkL14g_memory_cacheE = internal unnamed_addr global %"class.blink::Persistent.376"* null, align 8
@_ZTVN5blink11MemoryCacheE = hidden unnamed_addr constant { [7 x i8*], [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::MemoryCache"*, %"class.blink::Visitor"*)* @_ZNK5blink11MemoryCache5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::MemoryCache"*)* @_ZN5blink11MemoryCacheD2Ev to i8*), i8* bitcast (void (%"class.blink::MemoryCache"*)* @_ZN5blink11MemoryCacheD0Ev to i8*), i8* bitcast (i1 (%"class.blink::MemoryCache"*, i32, %"class.blink::WebProcessMemoryDump"*)* @_ZN5blink11MemoryCache12OnMemoryDumpENS_26WebMemoryDumpLevelOfDetailEPNS_20WebProcessMemoryDumpE to i8*), i8* bitcast (void (%"class.blink::MemoryCache"*, i32)* @_ZN5blink11MemoryCache16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::MemoryCache"*, %"class.blink::Visitor"*)* @_ZThn8_NK5blink11MemoryCache5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::MemoryCache"*)* @_ZThn8_N5blink11MemoryCacheD1Ev to i8*), i8* bitcast (void (%"class.blink::MemoryCache"*)* @_ZThn8_N5blink11MemoryCacheD0Ev to i8*), i8* bitcast (void (%"class.blink::MemoryCache"*, i32)* @_ZThn8_N5blink11MemoryCache16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE to i8*), i8* bitcast (void (%"class.blink::MemoryPressureListener"*)* @_ZN5blink22MemoryPressureListener13OnPurgeMemoryEv to i8*)] }, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str = private unnamed_addr constant [71 x i8] c"../../third_party/blink/renderer/platform/loader/fetch/memory_cache.cc\00", align 1
@.str.1 = private unnamed_addr constant [20 x i8] c"result.is_new_entry\00", align 1
@.str.2 = private unnamed_addr constant [25 x i8] c"old_resource != resource\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.3 = private unnamed_addr constant [19 x i8] c"MemoryCache::evict\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"resource\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"MemoryCache::prune()\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"Prune\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"web_cache/Image_resources\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"web_cache/CSS stylesheet_resources\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"web_cache/Script_resources\00", align 1
@.str.12 = private unnamed_addr constant [35 x i8] c"web_cache/XSL stylesheet_resources\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"web_cache/Font_resources\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"web_cache/Code_cache\00", align 1
@.str.15 = private unnamed_addr constant [47 x i8] c"web_cache/Encoded_size_duplicated_in_data_urls\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"web_cache/Other_resources\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.17 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11MemoryCacheEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MemoryCache]\00", align 1
@.str.18 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.19 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_11MemoryCacheEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11MemoryCacheEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_11MemoryCacheEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11MemoryCacheEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11MemoryCacheEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.20 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS_6StringENS1_6MemberINS1_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EEEEEEPKcv = private unnamed_addr constant [225 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashMap<WTF::String, blink::Member<blink::MemoryCacheEntry>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::MemoryCacheEntry> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.21 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.24 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.25 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_11HeapHashMapIS5_NS7_INS_16MemoryCacheEntryEEENS3_10StringHashENS3_10HashTraitsIS5_EENSC_ISA_EEEEEEEENS3_24KeyValuePairKeyExtractorESB_NS3_18HashMapValueTraitsISD_NSC_ISG_EEEESD_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_11HeapHashMapIS4_NS6_INS1_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [702 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::HeapHashMap<WTF::String, blink::Member<blink::MemoryCacheEntry>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::MemoryCacheEntry> > > > >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::HeapHashMap<WTF::String, blink::Member<blink::MemoryCacheEntry>, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::MemoryCacheEntry> > > > > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16MemoryCacheEntryEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MemoryCacheEntry]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16MemoryCacheEntryEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16MemoryCacheEntryEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16MemoryCacheEntryEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16MemoryCacheEntryEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_16MemoryCacheEntryEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [392 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::MemoryCacheEntry> >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::MemoryCacheEntry> > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@.str.26 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.27 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.28 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.29 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8ResourceEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [157 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Resource>, WTF::VectorTraits<blink::Member<blink::Resource> > >]\00", align 1

@_ZN5blink11MemoryCacheC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEE = hidden unnamed_addr alias void (%"class.blink::MemoryCache"*, %"class.base::SingleThreadTaskRunner"*), void (%"class.blink::MemoryCache"*, %"class.base::SingleThreadTaskRunner"*)* @_ZN5blink11MemoryCacheC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE
@_ZN5blink11MemoryCacheD1Ev = hidden unnamed_addr alias void (%"class.blink::MemoryCache"*), void (%"class.blink::MemoryCache"*)* @_ZN5blink11MemoryCacheD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() local_unnamed_addr #0 {
  %1 = alloca %class.scoped_refptr.365, align 8
  %2 = load %"class.blink::Persistent.376"*, %"class.blink::Persistent.376"** @_ZN5blinkL14g_memory_cacheE, align 8
  %3 = icmp eq %"class.blink::Persistent.376"* %2, null
  %4 = getelementptr inbounds %"class.blink::Persistent.376", %"class.blink::Persistent.376"* %2, i64 0, i32 0
  br i1 %3, label %5, label %59

5:                                                ; preds = %0
  %6 = tail call noalias i8* @malloc(i64 16) #11
  %7 = bitcast %class.scoped_refptr.365* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = tail call %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() #11
  %9 = bitcast %"class.blink::Thread"* %8 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)***
  %10 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %10, i64 3
  %12 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::Thread"*)** %11, align 8
  %13 = tail call %"class.base::SingleThreadTaskRunner"* %12(%"class.blink::Thread"* %8) #11
  %14 = getelementptr inbounds %class.scoped_refptr.365, %class.scoped_refptr.365* %1, i64 0, i32 0
  store %"class.base::SingleThreadTaskRunner"* %13, %"class.base::SingleThreadTaskRunner"** %14, align 8
  %15 = call %"class.blink::MemoryCache"* @_ZN5blink25MakeGarbageCollectedTraitINS_11MemoryCacheEE4CallIJ13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEPS1_DpOT_(%class.scoped_refptr.365* nonnull dereferenceable(8) %1) #11
  %16 = bitcast i8* %6 to %"class.blink::MemoryCache"**
  store %"class.blink::MemoryCache"* %15, %"class.blink::MemoryCache"** %16, align 8
  %17 = getelementptr inbounds i8, i8* %6, i64 8
  %18 = bitcast i8* %17 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %18, align 8
  %19 = ptrtoint %"class.blink::MemoryCache"* %15 to i64
  switch i64 %19, label %20 [
    i64 0, label %46
    i64 -1, label %46
  ]

20:                                               ; preds = %5
  %21 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %22 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %21, i64 0, i32 1
  %23 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %22) #11
  %24 = icmp eq i8* %23, null
  br i1 %24, label %25, label %27, !prof !2

25:                                               ; preds = %20
  %26 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %22, i8* %26) #11
  br label %27

27:                                               ; preds = %25, %20
  %28 = phi i8* [ %26, %25 ], [ %23, %20 ]
  %29 = bitcast i8* %28 to %"class.blink::ThreadState"**
  %30 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %30, i64 0, i32 3, i32 0, i32 0, i32 0
  %32 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %33, align 8
  %35 = icmp eq %"class.blink::PersistentNode"* %34, null
  br i1 %35, label %36, label %39, !prof !2

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %32, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %37) #11
  %38 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %33, align 8
  br label %39

39:                                               ; preds = %36, %27
  %40 = phi %"class.blink::PersistentNode"* [ %38, %36 ], [ %34, %27 ]
  %41 = bitcast %"class.blink::PersistentNode"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.blink::PersistentRegion"* %32 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %40, i64 0, i32 0
  store i8* %6, i8** %44, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %40, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11MemoryCacheELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %45, align 8
  store %"class.blink::PersistentNode"* %40, %"class.blink::PersistentNode"** %18, align 8
  br label %46

46:                                               ; preds = %5, %5, %39
  store i8* %6, i8** bitcast (%"class.blink::Persistent.376"** @_ZN5blinkL14g_memory_cacheE to i8**), align 8
  %47 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %14, align 8
  %48 = icmp eq %"class.base::SingleThreadTaskRunner"* %47, null
  br i1 %48, label %57, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %47, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %50, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = atomicrmw sub i32* %51, i32 1 acq_rel
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %54, label %57

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %50, i64 -2
  %56 = bitcast %"class.base::RefCountedThreadSafe.366"* %55 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %56) #11
  br label %57

57:                                               ; preds = %46, %49, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %58 = load %"class.blink::PersistentBase.377"*, %"class.blink::PersistentBase.377"** bitcast (%"class.blink::Persistent.376"** @_ZN5blinkL14g_memory_cacheE to %"class.blink::PersistentBase.377"**), align 8
  br label %59

59:                                               ; preds = %0, %57
  %60 = phi %"class.blink::PersistentBase.377"* [ %4, %0 ], [ %58, %57 ]
  %61 = getelementptr inbounds %"class.blink::PersistentBase.377", %"class.blink::PersistentBase.377"* %60, i64 0, i32 0
  %62 = load %"class.blink::MemoryCache"*, %"class.blink::MemoryCache"** %61, align 8
  ret %"class.blink::MemoryCache"* %62
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::Thread"* @_ZN5blink6Thread10MainThreadEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MemoryCache"* @_ZN5blink28ReplaceMemoryCacheForTestingEPNS_11MemoryCacheE(%"class.blink::MemoryCache"*) local_unnamed_addr #0 {
  %2 = tail call %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv()
  %3 = load %"class.blink::PersistentBase.377"*, %"class.blink::PersistentBase.377"** bitcast (%"class.blink::Persistent.376"** @_ZN5blinkL14g_memory_cacheE to %"class.blink::PersistentBase.377"**), align 8
  %4 = getelementptr inbounds %"class.blink::PersistentBase.377", %"class.blink::PersistentBase.377"* %3, i64 0, i32 0
  %5 = load %"class.blink::MemoryCache"*, %"class.blink::MemoryCache"** %4, align 8
  store %"class.blink::MemoryCache"* null, %"class.blink::MemoryCache"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::PersistentBase.377", %"class.blink::PersistentBase.377"* %3, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  %9 = bitcast %"class.blink::PersistentBase.377"* %3 to %"class.blink::Persistent.376"*
  br i1 %8, label %30, label %10

10:                                               ; preds = %1
  %11 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %12 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %11, i64 0, i32 1
  %13 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %12) #11
  %14 = icmp eq i8* %13, null
  br i1 %14, label %15, label %17, !prof !2

15:                                               ; preds = %10
  %16 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %12, i8* %16) #11
  br label %17

17:                                               ; preds = %15, %10
  %18 = phi i8* [ %16, %15 ], [ %13, %10 ]
  %19 = bitcast i8* %18 to %"class.blink::ThreadState"**
  %20 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %20, i64 0, i32 3, i32 0, i32 0, i32 0
  %22 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %21, align 8
  %23 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %22, i64 0, i32 0, i32 0
  %25 = bitcast %"class.blink::PersistentRegion"* %22 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentNode"* %23 to i64*
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %23, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %28, align 8
  store %"class.blink::PersistentNode"* %23, %"class.blink::PersistentNode"** %24, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %6, align 8
  %29 = load %"class.blink::Persistent.376"*, %"class.blink::Persistent.376"** @_ZN5blinkL14g_memory_cacheE, align 8
  br label %30

30:                                               ; preds = %1, %17
  %31 = phi %"class.blink::Persistent.376"* [ %9, %1 ], [ %29, %17 ]
  %32 = getelementptr inbounds %"class.blink::Persistent.376", %"class.blink::Persistent.376"* %31, i64 0, i32 0
  tail call void @_ZN5blink14PersistentBaseINS_11MemoryCacheELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.377"* %32, %"class.blink::MemoryCache"* %0) #11
  %33 = tail call %"class.blink::MemoryCacheDumpProvider"* @_ZN5blink23MemoryCacheDumpProvider8InstanceEv() #11
  %34 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 0
  %35 = getelementptr inbounds %"class.blink::MemoryCacheDumpProvider", %"class.blink::MemoryCacheDumpProvider"* %33, i64 0, i32 1, i32 0
  tail call void @_ZN5blink14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.378"* %35, %"class.blink::MemoryCacheDumpClient"* %34) #11
  ret %"class.blink::MemoryCache"* %5
}

declare %"class.blink::MemoryCacheDumpProvider"* @_ZN5blink23MemoryCacheDumpProvider8InstanceEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16MemoryCacheEntry5TraceEPNS_7VisitorE(%"class.blink::MemoryCacheEntry"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::MemoryCacheEntry"* %0 to i8*
  %4 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %5 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, i64 2
  %7 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %6, align 8
  tail call void %7(%"class.blink::Visitor"* %1, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink26WeakCallbackMethodDelegateINS_16MemoryCacheEntryEXadL_ZNS1_17ClearResourceWeakERKNS_14LivenessBrokerEEEE10TrampolineES4_PKv, i8* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16MemoryCacheEntry17ClearResourceWeakERKNS_14LivenessBrokerE(%"class.blink::MemoryCacheEntry"* nocapture, %"class.blink::LivenessBroker"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MemoryCacheEntry", %"class.blink::MemoryCacheEntry"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::Resource"*, %"class.blink::Resource"** %3, align 8
  %5 = icmp eq %"class.blink::Resource"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %4, i64 -1, i32 32, i32 0, i32 2
  %20 = bitcast %"class.std::__1::__compressed_pair.362"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = tail call %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv()
  %27 = load %"class.blink::Resource"*, %"class.blink::Resource"** %3, align 8
  tail call void @_ZN5blink11MemoryCache6RemoveEPNS_8ResourceE(%"class.blink::MemoryCache"* %26, %"class.blink::Resource"* %27)
  store %"class.blink::Resource"* null, %"class.blink::Resource"** %3, align 8
  br label %28

28:                                               ; preds = %18, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache6RemoveEPNS_8ResourceE(%"class.blink::MemoryCache"*, %"class.blink::Resource"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 26
  %7 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %6) #11
  %8 = tail call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %7) #11
  br i1 %8, label %126, label %9

9:                                                ; preds = %2
  %10 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %11 = and i8 %10, 25
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %26, label %13, !prof !3

13:                                               ; preds = %9
  %14 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %6) #11
  %16 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %15, i64 0, i32 4
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %3, %"class.WTF::String"* %16, i32 0) #11
  %17 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3)
  %18 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %13, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  br label %26

26:                                               ; preds = %9, %25
  %27 = phi i8* [ null, %9 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %25 ]
  %28 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %9 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @.str.3, i64 0, i64 0), %25 ]
  %29 = phi i64 [ -6148914691236517206, %9 ], [ %17, %25 ]
  %30 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 8, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i33
  %43 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #11
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !2

48:                                               ; preds = %39
  call void @llvm.trap() #11
  unreachable

49:                                               ; preds = %39
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %40, align 4
  br label %51

51:                                               ; preds = %26, %34, %49
  %52 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %52, align 8
  %53 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0
  %54 = call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"* %53, %"class.WTF::String"* nonnull dereferenceable(8) %4) #11
  %55 = icmp eq %"struct.WTF::KeyValuePair"* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %54, i64 0, i32 1, i32 0, i32 0
  %58 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %57, align 8
  br label %59

59:                                               ; preds = %51, %56
  %60 = phi %"class.blink::HeapHashMap.3"* [ %58, %56 ], [ null, %51 ]
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #11
  br label %76

76:                                               ; preds = %59, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #11
  %77 = icmp eq %"class.blink::HeapHashMap.3"* %60, null
  br i1 %77, label %120, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %79) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 -86, i64 112, i1 false)
  %80 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %6) #11
  call void @_ZN5blink11MemoryCache32RemoveFragmentIdentifierIfNeededERKNS_4KURLE(%"class.blink::KURL"* nonnull sret %5, %"class.blink::KURL"* dereferenceable(112) %80)
  %81 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 4
  %82 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %60, i64 0, i32 0, i32 0
  %83 = call { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.7"* %82, %"class.WTF::String"* dereferenceable(8) %81) #11
  %84 = extractvalue { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } %83, 0
  %85 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %60, i64 0, i32 0, i32 0, i32 0
  %86 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %60, i64 0, i32 0, i32 0, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = zext i32 %88 to i64
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %86, i64 %89
  %91 = icmp eq %"struct.WTF::KeyValuePair.9"* %84, %90
  br i1 %91, label %119, label %92

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %84, i64 0, i32 1, i32 0, i32 0
  %94 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::MemoryCacheEntry", %"class.blink::MemoryCacheEntry"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::Resource"*, %"class.blink::Resource"** %95, align 8
  %97 = icmp eq %"class.blink::Resource"* %96, %1
  br i1 %97, label %98, label %119

98:                                               ; preds = %92
  %99 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 5
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 7
  %102 = load i64, i64* %101, align 8
  %103 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 27
  %104 = load i64, i64* %103, align 8
  %105 = call zeroext i1 @_ZNK5blink11MemoryCache8ContainsEPKNS_8ResourceE(%"class.blink::MemoryCache"* %0, %"class.blink::Resource"* %1) #11
  br i1 %105, label %106, label %112

106:                                              ; preds = %98
  %107 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 11
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %102, %100
  %110 = add i64 %109, %104
  %111 = sub i64 %108, %110
  store i64 %111, i64* %107, align 8
  br label %112

112:                                              ; preds = %106, %98
  %113 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %85, align 8
  %114 = load i32, i32* %87, align 8
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %113, i64 %115
  %117 = icmp eq %"struct.WTF::KeyValuePair.9"* %116, %84
  br i1 %117, label %119, label %118

118:                                              ; preds = %112
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.7"* %82, %"struct.WTF::KeyValuePair.9"* %84) #11
  br label %119

119:                                              ; preds = %118, %112, %78, %92
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %79) #11
  br label %120

120:                                              ; preds = %76, %119
  %121 = icmp eq i8* %27, null
  br i1 %121, label %126, label %122

122:                                              ; preds = %120
  %123 = load i8, i8* %27, align 1
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %126, label %125

125:                                              ; preds = %122
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %27, i8* %28, i64 %29) #11
  br label %126

126:                                              ; preds = %125, %122, %120, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCacheC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEE(%"class.blink::MemoryCache"*, %"class.base::SingleThreadTaskRunner"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.base::SingleThreadTaskRunner"* %1 to i64
  %4 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 0
  %5 = bitcast %"class.blink::MemoryCache"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %5, align 8
  %6 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2
  %7 = bitcast %"class.blink::HeapHashMap"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 20, i1 false) #11
  %8 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 3
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 4
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 5, i32 0
  %11 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 9
  %12 = bitcast i64* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false)
  %13 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 8388608, i64 1000000>, <2 x i64>* %13, align 8
  %14 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 11
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 12
  %16 = bitcast %class.scoped_refptr.365* %15 to i64*
  store i64 %3, i64* %16, align 8
  %17 = tail call %"class.blink::MemoryCacheDumpProvider"* @_ZN5blink23MemoryCacheDumpProvider8InstanceEv() #11
  %18 = getelementptr inbounds %"class.blink::MemoryCacheDumpProvider", %"class.blink::MemoryCacheDumpProvider"* %17, i64 0, i32 1, i32 0
  tail call void @_ZN5blink14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.378"* %18, %"class.blink::MemoryCacheDumpClient"* %4) #11
  %19 = tail call zeroext i1 @_ZN5blink30MemoryPressureListenerRegistry14IsLowEndDeviceEv() #11
  br i1 %19, label %20, label %23

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 1
  %22 = tail call dereferenceable(88) %"class.blink::MemoryPressureListenerRegistry"* @_ZN5blink30MemoryPressureListenerRegistry8InstanceEv() #11
  tail call void @_ZN5blink30MemoryPressureListenerRegistry14RegisterClientEPNS_22MemoryPressureListenerE(%"class.blink::MemoryPressureListenerRegistry"* %22, %"class.blink::MemoryPressureListener"* %21) #11
  br label %23

23:                                               ; preds = %2, %20
  ret void
}

declare zeroext i1 @_ZN5blink30MemoryPressureListenerRegistry14IsLowEndDeviceEv() local_unnamed_addr #2

declare dereferenceable(88) %"class.blink::MemoryPressureListenerRegistry"* @_ZN5blink30MemoryPressureListenerRegistry8InstanceEv() local_unnamed_addr #2

declare void @_ZN5blink30MemoryPressureListenerRegistry14RegisterClientEPNS_22MemoryPressureListenerE(%"class.blink::MemoryPressureListenerRegistry"*, %"class.blink::MemoryPressureListener"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCacheD2Ev(%"class.blink::MemoryCache"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::MemoryCache"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 12, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.366"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #11
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink11MemoryCacheD1Ev(%"class.blink::MemoryCache"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 -1, i32 12
  %3 = bitcast %class.scoped_refptr.365* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %class.scoped_refptr.365, %class.scoped_refptr.365* %2, i64 13, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.366"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #11
  br label %15

15:                                               ; preds = %1, %7, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCacheD0Ev(%"class.blink::MemoryCache"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::MemoryCache"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 12, i32 0
  %4 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %3, align 8
  %5 = icmp eq %"class.base::SingleThreadTaskRunner"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %4, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe.366"* %12 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %13) #11
  br label %14

14:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink11MemoryCacheD0Ev(%"class.blink::MemoryCache"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 -1, i32 12
  %3 = bitcast %class.scoped_refptr.365* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %class.scoped_refptr.365, %class.scoped_refptr.365* %2, i64 13, i32 0
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.366"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #11
  br label %15

15:                                               ; preds = %1, %7, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11MemoryCache5TraceEPNS_7VisitorE(%"class.blink::MemoryCache"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::HeapHashMap"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast %"class.blink::HeapHashMap"* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %1, i8** %6) #11
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 0
  tail call void @_ZNK5blink21MemoryCacheDumpClient5TraceEPNS_7VisitorE(%"class.blink::MemoryCacheDumpClient"* %19, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink21MemoryCacheDumpClient5TraceEPNS_7VisitorE(%"class.blink::MemoryCacheDumpClient"*, %"class.blink::Visitor"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_NK5blink11MemoryCache5TraceEPNS_7VisitorE(%"class.blink::MemoryCache"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 -1, i32 12
  %4 = getelementptr inbounds %class.scoped_refptr.365, %class.scoped_refptr.365* %3, i64 2
  %5 = bitcast %class.scoped_refptr.365* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = bitcast %class.scoped_refptr.365* %4 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #11
  %12 = icmp eq i64 %6, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = inttoptr i64 %6 to i8*
  %15 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, i64 5
  %18 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %17, align 8
  tail call void %18(%"class.blink::Visitor"* %1, i8* nonnull %14, i8* nonnull %14, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %19

19:                                               ; preds = %2, %13
  %20 = bitcast %class.scoped_refptr.365* %3 to %"class.blink::MemoryCacheDumpClient"*
  tail call void @_ZNK5blink21MemoryCacheDumpClient5TraceEPNS_7VisitorE(%"class.blink::MemoryCacheDumpClient"* %20, %"class.blink::Visitor"* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache32RemoveFragmentIdentifierIfNeededERKNS_4KURLE(%"class.blink::KURL"* noalias sret, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::KURL", align 8
  %4 = tail call zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"* %1) #11
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %1) #11
  br label %11

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"* %1) #11
  br i1 %7, label %9, label %8

8:                                                ; preds = %6
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* dereferenceable(112) %1) #11
  br label %11

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %3, %"class.blink::KURL"* dereferenceable(112) %1) #11
  call void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"* nonnull %3) #11
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %3) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #11
  br label %11

11:                                               ; preds = %9, %8, %5
  ret void
}

declare zeroext i1 @_ZNK5blink4KURL21HasFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #2

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL22ProtocolIsInHTTPFamilyEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink4KURL24RemoveFragmentIdentifierEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink11MemoryCache22DefaultCacheIdentifierEv() local_unnamed_addr #0 align 2 {
  %1 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %2 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %0
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #11
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #11
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %0, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::HeapHashMap.3"* @_ZN5blink11MemoryCache17EnsureResourceMapERKN3WTF6StringE(%"class.blink::MemoryCache"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapHashMap.3"*, align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = tail call zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS8_SI_SJ_EES1_EEbRKT0_(%"class.WTF::HashTable"* %5, %"class.WTF::String"* dereferenceable(8) %1) #11
  br i1 %6, label %22, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::HeapHashMap.3"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS3_10StringHashENS3_10HashTraitsIS4_EENS9_IS7_EEEEEEPhm(i64 24) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #11
  %10 = getelementptr inbounds i8, i8* %9, i64 -4
  %11 = bitcast i8* %10 to i16*
  %12 = load atomic i16, i16* %11 monotonic, align 2
  %13 = or i16 %12, 1
  store atomic i16 %13, i16* %11 release, align 2
  %14 = bitcast %"class.blink::HeapHashMap.3"** %3 to i8**
  store i8* %9, i8** %14, align 8
  %15 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_S8_SJ_EERKS1_PSC_EENS_18HashTableAddResultISK_SE_EEOT0_OT1_(%"class.WTF::HashTable"* %5, %"class.WTF::String"* dereferenceable(8) %1, %"class.blink::HeapHashMap.3"** nonnull dereferenceable(8) %3) #11
  %16 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %15, 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  %17 = and i8 %16, 1
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %7
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 124, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1, i64 0, i64 0)) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %19, %7, %2
  %23 = call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"* %5, %"class.WTF::String"* dereferenceable(8) %1) #11
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 1, i32 0, i32 0
  %27 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %26, align 8
  br label %28

28:                                               ; preds = %22, %25
  %29 = phi %"class.blink::HeapHashMap.3"* [ %27, %25 ], [ null, %22 ]
  ret %"class.blink::HeapHashMap.3"* %29
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache3AddEPNS_8ResourceE(%"class.blink::MemoryCache"*, %"class.blink::Resource"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = ptrtoint %"class.blink::Resource"* %1 to i64
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 8, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #11
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #11
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %2, %9, %24
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %27, align 8
  %28 = call %"class.blink::HeapHashMap.3"* @_ZN5blink11MemoryCache17EnsureResourceMapERKN3WTF6StringE(%"class.blink::MemoryCache"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11
  br label %44

44:                                               ; preds = %26, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %45 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16MemoryCacheEntryEEEPhm(i64 8) #11
  %46 = bitcast i8* %45 to %"class.blink::MemoryCacheEntry"*
  %47 = bitcast i8* %45 to i64*
  store i64 %4, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %45, i64 -4
  %49 = bitcast i8* %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = or i16 %50, 1
  store atomic i16 %51, i16* %49 release, align 2
  call void @_ZN5blink11MemoryCache11AddInternalEPNS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEPS5_(%"class.blink::MemoryCache"* %0, %"class.blink::HeapHashMap.3"* %28, %"class.blink::MemoryCacheEntry"* %46)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache11AddInternalEPNS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEPS5_(%"class.blink::MemoryCache"*, %"class.blink::HeapHashMap.3"*, %"class.blink::MemoryCacheEntry"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.blink::MemoryCacheEntry"*, align 8
  %6 = alloca %"class.blink::Resource"*, align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = alloca %"class.blink::Resource"*, align 8
  %9 = alloca %"class.logging::CheckOpResult", align 8
  %10 = alloca %"class.logging::CheckError", align 8
  store %"class.blink::MemoryCacheEntry"* %2, %"class.blink::MemoryCacheEntry"** %5, align 8
  %11 = bitcast %"class.blink::Resource"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::MemoryCacheEntry", %"class.blink::MemoryCacheEntry"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::Resource"*, %"class.blink::Resource"** %12, align 8
  store %"class.blink::Resource"* %13, %"class.blink::Resource"** %6, align 8
  %14 = icmp eq %"class.blink::Resource"* %13, null
  br i1 %14, label %98, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 112, i1 false)
  %17 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %13, i64 0, i32 26
  %18 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %17) #11
  call void @_ZN5blink11MemoryCache32RemoveFragmentIdentifierIfNeededERKNS_4KURLE(%"class.blink::KURL"* nonnull sret %7, %"class.blink::KURL"* dereferenceable(112) %18)
  %19 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 4
  %20 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %1, i64 0, i32 0, i32 0
  %21 = call { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.7"* %20, %"class.WTF::String"* dereferenceable(8) %19) #11
  %22 = extractvalue { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } %21, 0
  %23 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %1, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %1, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %24, i64 %27
  %29 = icmp eq %"struct.WTF::KeyValuePair.9"* %22, %28
  br i1 %29, label %66, label %30

30:                                               ; preds = %15
  %31 = bitcast %"class.blink::Resource"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  store %"class.blink::Resource"* inttoptr (i64 -6148914691236517206 to %"class.blink::Resource"*), %"class.blink::Resource"** %8, align 8
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %22, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::MemoryCacheEntry", %"class.blink::MemoryCacheEntry"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Resource"*, %"class.blink::Resource"** %34, align 8
  store %"class.blink::Resource"* %35, %"class.blink::Resource"** %8, align 8
  %36 = bitcast %"class.logging::CheckOpResult"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #11
  %37 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %9, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %37, align 8
  %38 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = icmp eq %"class.blink::Resource"* %35, %13
  br i1 %39, label %41, label %40

40:                                               ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  store i8* null, i8** %37, align 8
  br label %50

41:                                               ; preds = %30
  %42 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %31, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink8ResourceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #11
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %11, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN5blink8ResourceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.2, i64 0, i64 0), i8* %42, i8* %43) #11
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  store i8* %45, i8** %37, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %41
  %48 = bitcast %"class.logging::CheckError"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %10, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 152, %"class.logging::CheckOpResult"* nonnull %9) #11
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %10) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #11
  br label %50

50:                                               ; preds = %40, %41, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #11
  %51 = load %"class.blink::Resource"*, %"class.blink::Resource"** %8, align 8
  %52 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %51, i64 0, i32 5
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %51, i64 0, i32 7
  %55 = load i64, i64* %54, align 8
  %56 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %51, i64 0, i32 27
  %57 = load i64, i64* %56, align 8
  %58 = call zeroext i1 @_ZNK5blink11MemoryCache8ContainsEPKNS_8ResourceE(%"class.blink::MemoryCache"* %0, %"class.blink::Resource"* %51) #11
  br i1 %58, label %59, label %65

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 11
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %55, %53
  %63 = add i64 %62, %57
  %64 = sub i64 %61, %63
  store i64 %64, i64* %60, align 8
  br label %65

65:                                               ; preds = %50, %59
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  br label %66

66:                                               ; preds = %15, %65
  %67 = call { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERNS3_4KURLERPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.7"* %20, %"class.blink::KURL"* nonnull dereferenceable(112) %7, %"class.blink::MemoryCacheEntry"** nonnull dereferenceable(8) %5) #11
  %68 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %67, 1
  %69 = and i8 %68, 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %82

71:                                               ; preds = %66
  %72 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %67, 0
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %72, i64 0, i32 1
  %74 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %5, align 8
  %75 = ptrtoint %"class.blink::MemoryCacheEntry"* %74 to i64
  %76 = bitcast %"class.blink::Member.10"* %73 to i64*
  store atomic i64 %75, i64* %76 monotonic, align 8
  %77 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %71
  %80 = bitcast %"class.blink::MemoryCacheEntry"* %74 to i8*
  %81 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %80) #11
  br label %82

82:                                               ; preds = %66, %71, %79
  %83 = load %"class.blink::Resource"*, %"class.blink::Resource"** %6, align 8
  %84 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %83, i64 0, i32 5
  %85 = load i64, i64* %84, align 8
  %86 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %83, i64 0, i32 7
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %83, i64 0, i32 27
  %89 = load i64, i64* %88, align 8
  %90 = call zeroext i1 @_ZNK5blink11MemoryCache8ContainsEPKNS_8ResourceE(%"class.blink::MemoryCache"* %0, %"class.blink::Resource"* %83) #11
  br i1 %90, label %91, label %97

91:                                               ; preds = %82
  %92 = add i64 %87, %85
  %93 = add i64 %92, %89
  %94 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 11
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %93, %95
  store i64 %96, i64* %94, align 8
  br label %97

97:                                               ; preds = %82, %91
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #11
  br label %98

98:                                               ; preds = %3, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache6UpdateEPNS_8ResourceEmm(%"class.blink::MemoryCache"*, %"class.blink::Resource"*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = tail call zeroext i1 @_ZNK5blink11MemoryCache8ContainsEPKNS_8ResourceE(%"class.blink::MemoryCache"* %0, %"class.blink::Resource"* %1)
  br i1 %5, label %6, label %11

6:                                                ; preds = %4
  %7 = sub i64 %3, %2
  %8 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 11
  %9 = load i64, i64* %8, align 8
  %10 = add i64 %7, %9
  store i64 %10, i64* %8, align 8
  br label %11

11:                                               ; preds = %4, %6
  ret void
}

declare zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 7, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  %28 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8**
  store i8* %27, i8** %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %30 = load i8, i8* %16, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %9, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %9 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #11
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #11
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #11
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #11
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #12
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %16, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %29
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache14RemoveInternalEPNS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEERKNS2_24HashTableIteratorAdapterINS2_9HashTableIS3_NS2_12KeyValuePairIS3_S6_EENS2_24KeyValuePairKeyExtractorES7_NS2_18HashMapValueTraitsIS9_SA_EES9_NS_13HeapAllocatorEEESG_EE(%"class.blink::MemoryCache"*, %"class.blink::HeapHashMap.3"*, %"struct.WTF::HashTableIteratorAdapter"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.WTF::HashTableIteratorAdapter", %"struct.WTF::HashTableIteratorAdapter"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %4, align 8
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::MemoryCacheEntry", %"class.blink::MemoryCacheEntry"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Resource"*, %"class.blink::Resource"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %9, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %9, i64 0, i32 7
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %9, i64 0, i32 27
  %15 = load i64, i64* %14, align 8
  %16 = tail call zeroext i1 @_ZNK5blink11MemoryCache8ContainsEPKNS_8ResourceE(%"class.blink::MemoryCache"* %0, %"class.blink::Resource"* %9) #11
  br i1 %16, label %17, label %23

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 11
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %13, %11
  %21 = add i64 %20, %15
  %22 = sub i64 %19, %21
  store i64 %22, i64* %18, align 8
  br label %23

23:                                               ; preds = %3, %17
  %24 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %4, align 8
  %25 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %1, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %1, i64 0, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %26, i64 %29
  %31 = icmp eq %"struct.WTF::KeyValuePair.9"* %30, %24
  br i1 %31, label %34, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.7"* %33, %"struct.WTF::KeyValuePair.9"* %24) #11
  br label %34

34:                                               ; preds = %23, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11MemoryCache8ContainsEPKNS_8ResourceE(%"class.blink::MemoryCache"*, %"class.blink::Resource"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = icmp eq %"class.blink::Resource"* %1, null
  br i1 %5, label %76, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 26
  %8 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %7) #11
  %9 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %8) #11
  br i1 %9, label %76, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 8, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #11
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !2

29:                                               ; preds = %20
  tail call void @llvm.trap() #11
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %10, %15, %30
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0
  %35 = call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"* %34, %"class.WTF::String"* nonnull dereferenceable(8) %3) #11
  %36 = icmp eq %"struct.WTF::KeyValuePair"* %35, null
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %38, align 8
  br label %40

40:                                               ; preds = %32, %37
  %41 = phi %"class.blink::HeapHashMap.3"* [ %39, %37 ], [ null, %32 ]
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #11
  br label %57

57:                                               ; preds = %40, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %58 = icmp eq %"class.blink::HeapHashMap.3"* %41, null
  br i1 %58, label %76, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %60) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 112, i1 false)
  %61 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %7) #11
  call void @_ZN5blink11MemoryCache32RemoveFragmentIdentifierIfNeededERKNS_4KURLE(%"class.blink::KURL"* nonnull sret %4, %"class.blink::KURL"* dereferenceable(112) %61)
  %62 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 4
  %63 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %41, i64 0, i32 0, i32 0
  %64 = call %"struct.WTF::KeyValuePair.9"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.7"* %63, %"class.WTF::String"* dereferenceable(8) %62) #11
  %65 = icmp eq %"struct.WTF::KeyValuePair.9"* %64, null
  br i1 %65, label %74, label %66

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 0, i32 1, i32 0, i32 0
  %68 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %67, align 8
  %69 = icmp eq %"class.blink::MemoryCacheEntry"* %68, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::MemoryCacheEntry", %"class.blink::MemoryCacheEntry"* %68, i64 0, i32 0, i32 0, i32 0
  %72 = load %"class.blink::Resource"*, %"class.blink::Resource"** %71, align 8
  %73 = icmp eq %"class.blink::Resource"* %72, %1
  br label %74

74:                                               ; preds = %59, %66, %70
  %75 = phi i1 [ false, %66 ], [ %73, %70 ], [ false, %59 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %60) #11
  br label %76

76:                                               ; preds = %74, %57, %6, %2
  %77 = phi i1 [ false, %2 ], [ false, %6 ], [ %75, %74 ], [ false, %57 ]
  ret i1 %77
}

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Resource"* @_ZNK5blink11MemoryCache14ResourceForURLERKNS_4KURLE(%"class.blink::MemoryCache"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #11
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #11
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #11
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %2, %9, %24
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %27, align 8
  %28 = call %"class.blink::Resource"* @_ZNK5blink11MemoryCache14ResourceForURLERKNS_4KURLERKN3WTF6StringE(%"class.blink::MemoryCache"* %0, %"class.blink::KURL"* dereferenceable(112) %1, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #11
  br label %44

44:                                               ; preds = %26, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #11
  ret %"class.blink::Resource"* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Resource"* @_ZNK5blink11MemoryCache14ResourceForURLERKNS_4KURLERKN3WTF6StringE(%"class.blink::MemoryCache"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = tail call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %1) #11
  br i1 %5, label %6, label %31

6:                                                ; preds = %3
  %7 = tail call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %1) #11
  br i1 %7, label %31, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = tail call %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"* %9, %"class.WTF::String"* dereferenceable(8) %2) #11
  %11 = icmp eq %"struct.WTF::KeyValuePair"* %10, null
  br i1 %11, label %31, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %10, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %13, align 8
  %15 = icmp eq %"class.blink::HeapHashMap.3"* %14, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %17) #11
  call void @_ZN5blink11MemoryCache32RemoveFragmentIdentifierIfNeededERKNS_4KURLE(%"class.blink::KURL"* nonnull sret %4, %"class.blink::KURL"* dereferenceable(112) %1)
  %18 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 4
  %19 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %14, i64 0, i32 0, i32 0
  %20 = call %"struct.WTF::KeyValuePair.9"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.7"* %19, %"class.WTF::String"* dereferenceable(8) %18) #11
  %21 = icmp eq %"struct.WTF::KeyValuePair.9"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %20, i64 0, i32 1, i32 0, i32 0
  %24 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %23, align 8
  br label %25

25:                                               ; preds = %16, %22
  %26 = phi %"class.blink::MemoryCacheEntry"* [ %24, %22 ], [ null, %16 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %17) #11
  %27 = icmp eq %"class.blink::MemoryCacheEntry"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::MemoryCacheEntry", %"class.blink::MemoryCacheEntry"* %26, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::Resource"*, %"class.blink::Resource"** %29, align 8
  br label %31

31:                                               ; preds = %8, %12, %25, %28, %3, %6
  %32 = phi %"class.blink::Resource"* [ null, %6 ], [ null, %3 ], [ null, %12 ], [ %30, %28 ], [ null, %25 ], [ null, %8 ]
  ret %"class.blink::Resource"* %32
}

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11MemoryCache15ResourcesForURLERKNS_4KURLE(%"class.blink::HeapVector"* noalias sret, %"class.blink::MemoryCache"* nocapture readonly, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.blink::Resource"*, align 8
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 112, i1 false)
  call void @_ZN5blink11MemoryCache32RemoveFragmentIdentifierIfNeededERKNS_4KURLE(%"class.blink::KURL"* nonnull sret %4, %"class.blink::KURL"* dereferenceable(112) %2)
  %7 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #11
  %11 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 %18
  br i1 %13, label %37, label %20

20:                                               ; preds = %3
  %21 = icmp eq i32 %17, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %20, %26
  %23 = phi %"struct.WTF::KeyValuePair"* [ %27, %26 ], [ %15, %20 ]
  %24 = bitcast %"struct.WTF::KeyValuePair"* %23 to i64*
  %25 = load i64, i64* %24, align 8
  switch i64 %25, label %29 [
    i64 -1, label %26
    i64 0, label %26
  ]

26:                                               ; preds = %22, %22
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 1
  %28 = icmp eq %"struct.WTF::KeyValuePair"* %27, %19
  br i1 %28, label %37, label %22

29:                                               ; preds = %22, %20
  %30 = phi %"struct.WTF::KeyValuePair"* [ %15, %20 ], [ %23, %22 ]
  %31 = icmp eq %"struct.WTF::KeyValuePair"* %30, %19
  br i1 %31, label %37, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 4
  %34 = bitcast %"class.blink::Resource"** %5 to i8*
  %35 = bitcast %"class.blink::Resource"** %5 to i64*
  %36 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0
  br label %38

37:                                               ; preds = %26, %70, %80, %77, %3, %29
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #11
  ret void

38:                                               ; preds = %32, %80
  %39 = phi %"struct.WTF::KeyValuePair"* [ %30, %32 ], [ %74, %80 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 0, i32 1, i32 0, i32 0
  %41 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %41, i64 0, i32 0, i32 0
  %43 = call %"struct.WTF::KeyValuePair.9"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.7"* %42, %"class.WTF::String"* dereferenceable(8) %33) #11
  %44 = icmp eq %"struct.WTF::KeyValuePair.9"* %43, null
  br i1 %44, label %70, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %43, i64 0, i32 1, i32 0, i32 0
  %47 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %46, align 8
  %48 = icmp eq %"class.blink::MemoryCacheEntry"* %47, null
  br i1 %48, label %70, label %49

49:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  store %"class.blink::Resource"* inttoptr (i64 -6148914691236517206 to %"class.blink::Resource"*), %"class.blink::Resource"** %5, align 8
  %50 = bitcast %"class.blink::MemoryCacheEntry"* %47 to i64*
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %35, align 8
  %52 = load i32, i32* %9, align 4
  %53 = load i32, i32* %8, align 8
  %54 = icmp eq i32 %52, %53
  br i1 %54, label %68, label %55, !prof !2

55:                                               ; preds = %49
  %56 = load %"class.blink::Member.399"*, %"class.blink::Member.399"** %7, align 8
  %57 = zext i32 %52 to i64
  %58 = getelementptr inbounds %"class.blink::Member.399", %"class.blink::Member.399"* %56, i64 %57
  %59 = bitcast %"class.blink::Member.399"* %58 to i64*
  store atomic i64 %51, i64* %59 monotonic, align 8
  %60 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %55
  %63 = inttoptr i64 %51 to i8*
  %64 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %63) #11
  br label %65

65:                                               ; preds = %62, %55
  %66 = load i32, i32* %9, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %9, align 4
  br label %69

68:                                               ; preds = %49
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.396"* %36, %"class.blink::Resource"** nonnull dereferenceable(8) %5) #11
  br label %69

69:                                               ; preds = %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %70

70:                                               ; preds = %38, %45, %69
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %39, i64 1
  %72 = icmp eq %"struct.WTF::KeyValuePair"* %71, %19
  br i1 %72, label %37, label %73

73:                                               ; preds = %70, %77
  %74 = phi %"struct.WTF::KeyValuePair"* [ %78, %77 ], [ %71, %70 ]
  %75 = bitcast %"struct.WTF::KeyValuePair"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  switch i64 %76, label %80 [
    i64 -1, label %77
    i64 0, label %77
  ]

77:                                               ; preds = %73, %73
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %74, i64 1
  %79 = icmp eq %"struct.WTF::KeyValuePair"* %78, %19
  br i1 %79, label %37, label %73

80:                                               ; preds = %73
  %81 = icmp eq %"struct.WTF::KeyValuePair"* %74, %19
  br i1 %81, label %37, label %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache14PruneResourcesENS0_13PruneStrategyE(%"class.blink::MemoryCache"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 1
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 9
  %6 = load i64, i64* %5, align 8
  br label %7

7:                                                ; preds = %2, %4
  %8 = phi i64 [ %6, %4 ], [ 0, %2 ]
  %9 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 11
  %10 = load i64, i64* %9, align 8
  %11 = icmp ugt i64 %10, %8
  br i1 %11, label %12, label %111

12:                                               ; preds = %7
  %13 = uitofp i64 %8 to float
  %14 = fmul float %13, 0x3FEE666660000000
  %15 = fptoui float %14 to i64
  %16 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %20, i64 %23
  br i1 %18, label %111, label %25

25:                                               ; preds = %12
  %26 = icmp eq i32 %22, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %25, %31
  %28 = phi %"struct.WTF::KeyValuePair"* [ %32, %31 ], [ %20, %25 ]
  %29 = bitcast %"struct.WTF::KeyValuePair"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  switch i64 %30, label %34 [
    i64 -1, label %31
    i64 0, label %31
  ]

31:                                               ; preds = %27, %27
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 1
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, %24
  br i1 %33, label %111, label %27

34:                                               ; preds = %27, %25
  %35 = phi %"struct.WTF::KeyValuePair"* [ %20, %25 ], [ %28, %27 ]
  %36 = icmp eq %"struct.WTF::KeyValuePair"* %35, %24
  br i1 %36, label %111, label %37

37:                                               ; preds = %34
  %38 = icmp eq i32 %1, 0
  %39 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 7, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 10, i32 0
  br label %41

41:                                               ; preds = %37, %109
  %42 = phi %"struct.WTF::KeyValuePair"* [ %35, %37 ], [ %103, %109 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 0, i32 1, i32 0, i32 0
  %44 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %44, i64 0, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %44, i64 0, i32 0, i32 0, i32 0
  %49 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %44, i64 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %49, i64 %52
  br i1 %47, label %99, label %54

54:                                               ; preds = %41
  %55 = icmp eq i32 %51, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %54, %60
  %57 = phi %"struct.WTF::KeyValuePair.9"* [ %61, %60 ], [ %49, %54 ]
  %58 = bitcast %"struct.WTF::KeyValuePair.9"* %57 to i64*
  %59 = load i64, i64* %58, align 8
  switch i64 %59, label %63 [
    i64 -1, label %60
    i64 0, label %60
  ]

60:                                               ; preds = %56, %56
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %57, i64 1
  %62 = icmp eq %"struct.WTF::KeyValuePair.9"* %61, %53
  br i1 %62, label %99, label %56

63:                                               ; preds = %56, %54
  %64 = phi %"struct.WTF::KeyValuePair.9"* [ %49, %54 ], [ %57, %56 ]
  %65 = icmp eq %"struct.WTF::KeyValuePair.9"* %64, %53
  br i1 %65, label %99, label %66

66:                                               ; preds = %63, %97
  %67 = phi %"struct.WTF::KeyValuePair.9"* [ %91, %97 ], [ %64, %63 ]
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %67, i64 0, i32 1, i32 0, i32 0
  %69 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::MemoryCacheEntry", %"class.blink::MemoryCacheEntry"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.blink::Resource"*, %"class.blink::Resource"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %71, i64 0, i32 2
  %73 = load i8, i8* %72, align 1
  %74 = icmp ugt i8 %73, 1
  br i1 %74, label %75, label %87

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %71, i64 0, i32 7
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %87, label %79

79:                                               ; preds = %75
  br i1 %38, label %80, label %84

80:                                               ; preds = %79
  %81 = load i64, i64* %39, align 8
  %82 = load i64, i64* %40, align 8
  %83 = icmp slt i64 %81, %82
  br i1 %83, label %87, label %84

84:                                               ; preds = %79, %80
  tail call void @_ZN5blink8Resource5PruneEv(%"class.blink::Resource"* %71) #11
  %85 = load i64, i64* %9, align 8
  %86 = icmp ugt i64 %85, %15
  br i1 %86, label %87, label %111

87:                                               ; preds = %66, %75, %84, %80
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %67, i64 1
  %89 = icmp eq %"struct.WTF::KeyValuePair.9"* %88, %53
  br i1 %89, label %99, label %90

90:                                               ; preds = %87, %94
  %91 = phi %"struct.WTF::KeyValuePair.9"* [ %95, %94 ], [ %88, %87 ]
  %92 = bitcast %"struct.WTF::KeyValuePair.9"* %91 to i64*
  %93 = load i64, i64* %92, align 8
  switch i64 %93, label %97 [
    i64 -1, label %94
    i64 0, label %94
  ]

94:                                               ; preds = %90, %90
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %91, i64 1
  %96 = icmp eq %"struct.WTF::KeyValuePair.9"* %95, %53
  br i1 %96, label %99, label %90

97:                                               ; preds = %90
  %98 = icmp eq %"struct.WTF::KeyValuePair.9"* %91, %53
  br i1 %98, label %99, label %66

99:                                               ; preds = %60, %87, %97, %94, %41, %63
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %42, i64 1
  %101 = icmp eq %"struct.WTF::KeyValuePair"* %100, %24
  br i1 %101, label %111, label %102

102:                                              ; preds = %99, %106
  %103 = phi %"struct.WTF::KeyValuePair"* [ %107, %106 ], [ %100, %99 ]
  %104 = bitcast %"struct.WTF::KeyValuePair"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  switch i64 %105, label %109 [
    i64 -1, label %106
    i64 0, label %106
  ]

106:                                              ; preds = %102, %102
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %103, i64 1
  %108 = icmp eq %"struct.WTF::KeyValuePair"* %107, %24
  br i1 %108, label %111, label %102

109:                                              ; preds = %102
  %110 = icmp eq %"struct.WTF::KeyValuePair"* %103, %24
  br i1 %110, label %111, label %41

111:                                              ; preds = %31, %99, %109, %84, %106, %12, %34, %7
  ret void
}

declare void @_ZN5blink8Resource5PruneEv(%"class.blink::Resource"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache11SetCapacityEm(%"class.blink::MemoryCache"*, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 9
  store i64 %1, i64* %3, align 8
  tail call void @_ZN5blink11MemoryCache5PruneEv(%"class.blink::MemoryCache"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache5PruneEv(%"class.blink::MemoryCache"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = alloca %"class.base::Location", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 105, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !3

8:                                                ; preds = %1
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %10 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 105, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  br label %14

14:                                               ; preds = %1, %8
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 105, i32 0), %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), %8 ]
  %17 = phi i64 [ -6148914691236517206, %1 ], [ %13, %8 ]
  %18 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 3
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %67

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 11
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 9
  %25 = load i64, i64* %24, align 8
  %26 = icmp ugt i64 %23, %25
  br i1 %26, label %27, label %67

27:                                               ; preds = %21
  %28 = call i64 @_ZN4base9TimeTicks3NowEv() #11
  %29 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 4
  %30 = load i8, i8* %29, align 1, !range !4
  %31 = icmp eq i8 %30, 0
  %32 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 6, i32 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = sub nsw i64 %28, %33
  %35 = icmp sgt i64 %34, 499999
  br i1 %31, label %43, label %36

36:                                               ; preds = %27
  br i1 %35, label %37, label %67

37:                                               ; preds = %36
  store i8 0, i8* %29, align 1
  %38 = load i8, i8* %18, align 1, !range !4
  store i8 1, i8* %18, align 1
  call void @_ZN5blink11MemoryCache14PruneResourcesENS0_13PruneStrategyE(%"class.blink::MemoryCache"* %0, i32 0) #11
  %39 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 8, i32 0, i32 0
  %40 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 7, i32 0, i32 0
  %41 = load i64, i64* %39, align 8
  store i64 %41, i64* %40, align 8
  %42 = call i64 @_ZN4base9TimeTicks3NowEv() #11
  store i64 %42, i64* %32, align 8
  store i8 %38, i8* %18, align 1
  br label %67

43:                                               ; preds = %27
  br i1 %35, label %44, label %50

44:                                               ; preds = %43
  store i8 0, i8* %29, align 1
  %45 = load i8, i8* %18, align 1, !range !4
  store i8 1, i8* %18, align 1
  call void @_ZN5blink11MemoryCache14PruneResourcesENS0_13PruneStrategyE(%"class.blink::MemoryCache"* %0, i32 0) #11
  %46 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 8, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 7, i32 0, i32 0
  %48 = load i64, i64* %46, align 8
  store i64 %48, i64* %47, align 8
  %49 = call i64 @_ZN4base9TimeTicks3NowEv() #11
  store i64 %49, i64* %32, align 8
  store i8 %45, i8* %18, align 1
  br label %67

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 12, i32 0
  %52 = bitcast %"class.base::SingleThreadTaskRunner"** %51 to %"class.base::TaskRunner"**
  %53 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %52, align 8
  %54 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %54) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str, i64 0, i64 0), i32 375) #11
  %55 = ptrtoint %"class.blink::MemoryCache"* %0 to i64
  %56 = call i8* @_Znwm(i64 64) #12, !noalias !5
  %57 = bitcast i8* %56 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %57, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink11MemoryCacheEFvNS4_13PruneStrategyEEJNS0_17UnretainedWrapperIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink11MemoryCacheEFvNS3_13PruneStrategyEEJNS0_17UnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !5
  %58 = getelementptr inbounds i8, i8* %56, i64 32
  %59 = bitcast i8* %58 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MemoryCache"*, i32)* @_ZN5blink11MemoryCache8PruneNowENS0_13PruneStrategyE to i64), i64 0>, <2 x i64>* %59, align 8, !noalias !5
  %60 = getelementptr inbounds i8, i8* %56, i64 48
  %61 = bitcast i8* %60 to i64*
  store i64 %55, i64* %61, align 8, !noalias !5
  %62 = getelementptr inbounds i8, i8* %56, i64 56
  %63 = bitcast i8* %62 to i32*
  store i32 0, i32* %63, align 4, !noalias !5
  %64 = bitcast %"class.base::OnceCallback"* %4 to i8**
  store i8* %56, i8** %64, align 8, !alias.scope !5
  %65 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %53, %"class.base::Location"* nonnull dereferenceable(32) %3, %"class.base::OnceCallback"* nonnull %4) #11
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %54) #11
  store i8 1, i8* %29, align 1
  br label %67

67:                                               ; preds = %37, %36, %50, %44, %21, %14
  %68 = icmp eq i8* %15, null
  br i1 %68, label %73, label %69

69:                                               ; preds = %67
  %70 = load i8, i8* %15, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %69
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %16, i64 %17) #11
  br label %73

73:                                               ; preds = %67, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache18RemoveURLFromCacheERKNS_4KURLE(%"class.blink::MemoryCache"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector", align 8
  %4 = bitcast %"class.blink::HeapVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #11
  %5 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.blink::HeapVector"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink11MemoryCache15ResourcesForURLERKNS_4KURLE(%"class.blink::HeapVector"* nonnull sret %3, %"class.blink::MemoryCache"* %0, %"class.blink::KURL"* dereferenceable(112) %1)
  %8 = load %"class.blink::Member.399"*, %"class.blink::Member.399"** %5, align 8
  %9 = load i32, i32* %6, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.blink::Member.399", %"class.blink::Member.399"* %8, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %14, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #11
  ret void

14:                                               ; preds = %2, %14
  %15 = phi %"class.blink::Member.399"* [ %18, %14 ], [ %8, %2 ]
  %16 = getelementptr inbounds %"class.blink::Member.399", %"class.blink::Member.399"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.blink::Resource"*, %"class.blink::Resource"** %16, align 8
  call void @_ZN5blink11MemoryCache6RemoveEPNS_8ResourceE(%"class.blink::MemoryCache"* %0, %"class.blink::Resource"* %17)
  %18 = getelementptr inbounds %"class.blink::Member.399", %"class.blink::Member.399"* %15, i64 1
  %19 = icmp eq %"class.blink::Member.399"* %18, %11
  br i1 %19, label %13, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache13TypeStatistic11AddResourceEPNS_8ResourceE(%"struct.blink::MemoryCache::TypeStatistic"* nocapture, %"class.blink::Resource"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = getelementptr inbounds %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic"* %0, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 1
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 5
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 7
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, %8
  %12 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 27
  %13 = load i64, i64* %12, align 8
  %14 = add i64 %11, %13
  %15 = getelementptr inbounds %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic"* %0, i64 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %14, %16
  store i64 %17, i64* %15, align 8
  %18 = load i64, i64* %9, align 8
  %19 = getelementptr inbounds %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic"* %0, i64 0, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  store i64 %21, i64* %19, align 8
  %22 = load i64, i64* %7, align 8
  %23 = getelementptr inbounds %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic"* %0, i64 0, i32 3
  %24 = load i64, i64* %23, align 8
  %25 = add i64 %24, %22
  store i64 %25, i64* %23, align 8
  %26 = load i64, i64* %12, align 8
  %27 = getelementptr inbounds %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic"* %0, i64 0, i32 4
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, %26
  store i64 %29, i64* %27, align 8
  %30 = bitcast %"class.blink::Resource"* %1 to i64 (%"class.blink::Resource"*)***
  %31 = load i64 (%"class.blink::Resource"*)**, i64 (%"class.blink::Resource"*)*** %30, align 8
  %32 = getelementptr inbounds i64 (%"class.blink::Resource"*)*, i64 (%"class.blink::Resource"*)** %31, i64 11
  %33 = load i64 (%"class.blink::Resource"*)*, i64 (%"class.blink::Resource"*)** %32, align 8
  %34 = tail call i64 %33(%"class.blink::Resource"* %1) #11
  %35 = getelementptr inbounds %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic"* %0, i64 0, i32 5
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, %34
  store i64 %37, i64* %35, align 8
  %38 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 26
  %39 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %38) #11
  %40 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40)
  %41 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %42 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.17, i64 0, i64 0), i8** %43, align 8
  %44 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 4, i32* %44, align 8
  %45 = tail call zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"* %39, %"class.WTF::StringView"* nonnull byval(%"class.WTF::StringView") align 8 %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40)
  br i1 %45, label %46, label %48

46:                                               ; preds = %2
  %47 = load i64, i64* %7, align 8
  br label %48

48:                                               ; preds = %2, %46
  %49 = phi i64 [ %47, %46 ], [ 0, %2 ]
  %50 = getelementptr inbounds %"struct.blink::MemoryCache::TypeStatistic", %"struct.blink::MemoryCache::TypeStatistic"* %0, i64 0, i32 6
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, %49
  store i64 %52, i64* %50, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11MemoryCache13GetStatisticsEv(%"struct.blink::MemoryCache::Statistics"* noalias nocapture sret, %"class.blink::MemoryCache"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.blink::MemoryCache::Statistics"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 336, i1 false) #11
  %4 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %1, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %1, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  br i1 %6, label %32, label %13

13:                                               ; preds = %2
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"struct.WTF::KeyValuePair"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"struct.WTF::KeyValuePair"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 1
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %20, %12
  br i1 %21, label %32, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"struct.WTF::KeyValuePair"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, %12
  br i1 %24, label %32, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %0, i64 0, i32 4
  %27 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %0, i64 0, i32 3
  %28 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %0, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %0, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %0, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %0, i64 0, i32 5
  br label %33

32:                                               ; preds = %19, %58, %68, %65, %2, %22
  ret void

33:                                               ; preds = %25, %68
  %34 = phi %"struct.WTF::KeyValuePair"* [ %23, %25 ], [ %62, %68 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 0, i32 1, i32 0, i32 0
  %36 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %36, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %36, i64 0, i32 0, i32 0, i32 0
  %41 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %36, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %41, i64 %44
  br i1 %39, label %58, label %46

46:                                               ; preds = %33
  %47 = icmp eq i32 %43, 0
  br i1 %47, label %55, label %48

48:                                               ; preds = %46, %52
  %49 = phi %"struct.WTF::KeyValuePair.9"* [ %53, %52 ], [ %41, %46 ]
  %50 = bitcast %"struct.WTF::KeyValuePair.9"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %55 [
    i64 -1, label %52
    i64 0, label %52
  ]

52:                                               ; preds = %48, %48
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %49, i64 1
  %54 = icmp eq %"struct.WTF::KeyValuePair.9"* %53, %45
  br i1 %54, label %58, label %48

55:                                               ; preds = %48, %46
  %56 = phi %"struct.WTF::KeyValuePair.9"* [ %41, %46 ], [ %49, %48 ]
  %57 = icmp eq %"struct.WTF::KeyValuePair.9"* %56, %45
  br i1 %57, label %58, label %70

58:                                               ; preds = %52, %83, %94, %91, %33, %55
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %34, i64 1
  %60 = icmp eq %"struct.WTF::KeyValuePair"* %59, %12
  br i1 %60, label %32, label %61

61:                                               ; preds = %58, %65
  %62 = phi %"struct.WTF::KeyValuePair"* [ %66, %65 ], [ %59, %58 ]
  %63 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %68 [
    i64 -1, label %65
    i64 0, label %65
  ]

65:                                               ; preds = %61, %61
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 1
  %67 = icmp eq %"struct.WTF::KeyValuePair"* %66, %12
  br i1 %67, label %32, label %61

68:                                               ; preds = %61
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %62, %12
  br i1 %69, label %32, label %33

70:                                               ; preds = %55, %94
  %71 = phi %"struct.WTF::KeyValuePair.9"* [ %88, %94 ], [ %56, %55 ]
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %71, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::MemoryCacheEntry", %"class.blink::MemoryCacheEntry"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::Resource"*, %"class.blink::Resource"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %75, i64 0, i32 1
  %77 = load i8, i8* %76, align 8
  switch i8 %77, label %82 [
    i8 1, label %83
    i8 2, label %78
    i8 3, label %79
    i8 7, label %80
    i8 4, label %81
  ]

78:                                               ; preds = %70
  br label %83

79:                                               ; preds = %70
  br label %83

80:                                               ; preds = %70
  br label %83

81:                                               ; preds = %70
  br label %83

82:                                               ; preds = %70
  br label %83

83:                                               ; preds = %70, %82, %81, %80, %79, %78
  %84 = phi %"struct.blink::MemoryCache::TypeStatistic"* [ %31, %82 ], [ %26, %81 ], [ %27, %80 ], [ %28, %79 ], [ %29, %78 ], [ %30, %70 ]
  tail call void @_ZN5blink11MemoryCache13TypeStatistic11AddResourceEPNS_8ResourceE(%"struct.blink::MemoryCache::TypeStatistic"* %84, %"class.blink::Resource"* %75)
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %71, i64 1
  %86 = icmp eq %"struct.WTF::KeyValuePair.9"* %85, %45
  br i1 %86, label %58, label %87

87:                                               ; preds = %83, %91
  %88 = phi %"struct.WTF::KeyValuePair.9"* [ %92, %91 ], [ %85, %83 ]
  %89 = bitcast %"struct.WTF::KeyValuePair.9"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %94 [
    i64 -1, label %91
    i64 0, label %91
  ]

91:                                               ; preds = %87, %87
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %88, i64 1
  %93 = icmp eq %"struct.WTF::KeyValuePair.9"* %92, %45
  br i1 %93, label %58, label %87

94:                                               ; preds = %87
  %95 = icmp eq %"struct.WTF::KeyValuePair.9"* %88, %45
  br i1 %95, label %58, label %70
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache14EvictResourcesEv(%"class.blink::MemoryCache"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0
  %3 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %7, i64 %10
  br i1 %5, label %27, label %12

12:                                               ; preds = %1
  %13 = icmp eq i32 %9, 0
  br i1 %13, label %21, label %14

14:                                               ; preds = %12, %18
  %15 = phi %"struct.WTF::KeyValuePair"* [ %19, %18 ], [ %7, %12 ]
  %16 = bitcast %"struct.WTF::KeyValuePair"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  switch i64 %17, label %21 [
    i64 -1, label %18
    i64 0, label %18
  ]

18:                                               ; preds = %14, %14
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %15, i64 1
  %20 = icmp eq %"struct.WTF::KeyValuePair"* %19, %11
  br i1 %20, label %27, label %14

21:                                               ; preds = %14, %12
  %22 = phi %"struct.WTF::KeyValuePair"* [ %7, %12 ], [ %15, %14 ]
  %23 = icmp eq %"struct.WTF::KeyValuePair"* %22, %11
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 11
  %26 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %2, i64 0, i32 0
  br label %28

27:                                               ; preds = %18, %86, %1, %21
  ret void

28:                                               ; preds = %24, %86
  %29 = phi i32 [ %9, %24 ], [ %72, %86 ]
  %30 = phi %"struct.WTF::KeyValuePair"* [ %7, %24 ], [ %73, %86 ]
  %31 = phi %"struct.WTF::KeyValuePair"* [ %22, %24 ], [ %87, %86 ]
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %31, i64 0, i32 1, i32 0, i32 0
  %33 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %33, i64 0, i32 0, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %33, i64 0, i32 0, i32 0, i32 0
  %38 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %33, i64 0, i32 0, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %38, i64 %41
  br i1 %36, label %60, label %43

43:                                               ; preds = %28
  %44 = icmp eq i32 %40, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %43, %49
  %46 = phi %"struct.WTF::KeyValuePair.9"* [ %50, %49 ], [ %38, %43 ]
  %47 = bitcast %"struct.WTF::KeyValuePair.9"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %46, i64 1
  %51 = icmp eq %"struct.WTF::KeyValuePair.9"* %50, %42
  br i1 %51, label %60, label %45

52:                                               ; preds = %45, %43
  %53 = phi %"struct.WTF::KeyValuePair.9"* [ %38, %43 ], [ %46, %45 ]
  %54 = icmp eq %"struct.WTF::KeyValuePair.9"* %53, %42
  br i1 %54, label %60, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %33, i64 0, i32 0, i32 0
  br label %91

57:                                               ; preds = %119, %135, %132
  %58 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %59 = load i32, i32* %8, align 8
  br label %60

60:                                               ; preds = %49, %28, %57, %52
  %61 = phi i32 [ %59, %57 ], [ %29, %52 ], [ %29, %28 ], [ %29, %49 ]
  %62 = phi %"struct.WTF::KeyValuePair"* [ %58, %57 ], [ %30, %52 ], [ %30, %28 ], [ %30, %49 ]
  %63 = zext i32 %61 to i64
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 %63
  %65 = icmp eq %"struct.WTF::KeyValuePair"* %64, %31
  br i1 %65, label %70, label %66

66:                                               ; preds = %60
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE5eraseEPKSE_(%"class.WTF::HashTable"* %26, %"struct.WTF::KeyValuePair"* %31) #11
  %67 = load i32, i32* %8, align 8
  %68 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %6, align 8
  %69 = zext i32 %67 to i64
  br label %70

70:                                               ; preds = %60, %66
  %71 = phi i64 [ %63, %60 ], [ %69, %66 ]
  %72 = phi i32 [ %61, %60 ], [ %67, %66 ]
  %73 = phi %"struct.WTF::KeyValuePair"* [ %62, %60 ], [ %68, %66 ]
  %74 = load i32, i32* %3, align 4
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 %71
  br i1 %75, label %86, label %77

77:                                               ; preds = %70
  %78 = icmp eq i32 %72, 0
  br i1 %78, label %86, label %79

79:                                               ; preds = %77, %83
  %80 = phi %"struct.WTF::KeyValuePair"* [ %84, %83 ], [ %73, %77 ]
  %81 = bitcast %"struct.WTF::KeyValuePair"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  switch i64 %82, label %86 [
    i64 -1, label %83
    i64 0, label %83
  ]

83:                                               ; preds = %79, %79
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %80, i64 1
  %85 = icmp eq %"struct.WTF::KeyValuePair"* %84, %76
  br i1 %85, label %86, label %79

86:                                               ; preds = %79, %83, %70, %77
  %87 = phi %"struct.WTF::KeyValuePair"* [ %76, %70 ], [ %73, %77 ], [ %80, %79 ], [ %76, %83 ]
  %88 = zext i32 %72 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %73, i64 %88
  %90 = icmp eq %"struct.WTF::KeyValuePair"* %87, %89
  br i1 %90, label %27, label %28

91:                                               ; preds = %55, %135
  %92 = phi %"struct.WTF::KeyValuePair.9"* [ %53, %55 ], [ %136, %135 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %92, i64 0, i32 1, i32 0, i32 0
  %94 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::MemoryCacheEntry", %"class.blink::MemoryCacheEntry"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::Resource"*, %"class.blink::Resource"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %96, i64 0, i32 5
  %98 = load i64, i64* %97, align 8
  %99 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %96, i64 0, i32 7
  %100 = load i64, i64* %99, align 8
  %101 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %96, i64 0, i32 27
  %102 = load i64, i64* %101, align 8
  %103 = tail call zeroext i1 @_ZNK5blink11MemoryCache8ContainsEPKNS_8ResourceE(%"class.blink::MemoryCache"* %0, %"class.blink::Resource"* %96) #11
  br i1 %103, label %104, label %109

104:                                              ; preds = %91
  %105 = load i64, i64* %25, align 8
  %106 = add i64 %100, %98
  %107 = add i64 %106, %102
  %108 = sub i64 %105, %107
  store i64 %108, i64* %25, align 8
  br label %109

109:                                              ; preds = %104, %91
  %110 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %37, align 8
  %111 = load i32, i32* %39, align 8
  %112 = zext i32 %111 to i64
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %110, i64 %112
  %114 = icmp eq %"struct.WTF::KeyValuePair.9"* %113, %92
  br i1 %114, label %119, label %115

115:                                              ; preds = %109
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.7"* %56, %"struct.WTF::KeyValuePair.9"* %92) #11
  %116 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %37, align 8
  %117 = load i32, i32* %39, align 8
  %118 = zext i32 %117 to i64
  br label %119

119:                                              ; preds = %109, %115
  %120 = phi i64 [ %112, %109 ], [ %118, %115 ]
  %121 = phi i32 [ %111, %109 ], [ %117, %115 ]
  %122 = phi %"struct.WTF::KeyValuePair.9"* [ %110, %109 ], [ %116, %115 ]
  %123 = load i32, i32* %34, align 4
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %122, i64 %120
  br i1 %124, label %57, label %126

126:                                              ; preds = %119
  %127 = icmp eq i32 %121, 0
  br i1 %127, label %135, label %128

128:                                              ; preds = %126, %132
  %129 = phi %"struct.WTF::KeyValuePair.9"* [ %133, %132 ], [ %122, %126 ]
  %130 = bitcast %"struct.WTF::KeyValuePair.9"* %129 to i64*
  %131 = load i64, i64* %130, align 8
  switch i64 %131, label %135 [
    i64 -1, label %132
    i64 0, label %132
  ]

132:                                              ; preds = %128, %128
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %129, i64 1
  %134 = icmp eq %"struct.WTF::KeyValuePair.9"* %133, %125
  br i1 %134, label %57, label %128

135:                                              ; preds = %128, %126
  %136 = phi %"struct.WTF::KeyValuePair.9"* [ %122, %126 ], [ %129, %128 ]
  %137 = icmp eq %"struct.WTF::KeyValuePair.9"* %136, %125
  br i1 %137, label %57, label %91
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache8PruneNowENS0_13PruneStrategyE(%"class.blink::MemoryCache"*, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 4
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 1, !range !4
  store i8 1, i8* %4, align 1
  tail call void @_ZN5blink11MemoryCache14PruneResourcesENS0_13PruneStrategyE(%"class.blink::MemoryCache"* %0, i32 %1)
  %6 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 8, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %7, align 8
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %10 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  %11 = icmp eq i8* %4, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %2
  store i8 %5, i8* %4, align 1
  br label %13

13:                                               ; preds = %2, %12
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache8PruneAllEv(%"class.blink::MemoryCache"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 4
  store i8 0, i8* %2, align 1
  %3 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 1, !range !4
  store i8 1, i8* %3, align 1
  tail call void @_ZN5blink11MemoryCache14PruneResourcesENS0_13PruneStrategyE(%"class.blink::MemoryCache"* %0, i32 1) #11
  %5 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 8, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 7, i32 0, i32 0
  %7 = load i64, i64* %5, align 8
  store i64 %7, i64* %6, align 8
  %8 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %9 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %8, i64* %9, align 8
  store i8 %4, i8* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache25UpdateFramePaintTimestampEv(%"class.blink::MemoryCache"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %3 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 8, i32 0, i32 0
  store i64 %2, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11MemoryCache12OnMemoryDumpENS_26WebMemoryDumpLevelOfDetailEPNS_20WebProcessMemoryDumpE(%"class.blink::MemoryCache"* nocapture readonly, i32, %"class.blink::WebProcessMemoryDump"*) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::MemoryCache::Statistics", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %14, label %203

14:                                               ; preds = %3
  %15 = bitcast %"struct.blink::MemoryCache::Statistics"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 336, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 336, i1 false)
  call void @_ZNK5blink11MemoryCache13GetStatisticsEv(%"struct.blink::MemoryCache::Statistics"* nonnull sret %4, %"class.blink::MemoryCache"* %0)
  %16 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i64 25) #11
  %17 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5) #11
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #11
  br label %34

34:                                               ; preds = %14, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  %35 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 0, i32 3
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 0, i32 4
  %38 = load i64, i64* %37, align 8
  %39 = add i64 %38, %36
  call void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"* %17, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 %39) #11
  %40 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0), i64 34) #11
  %41 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %6) #11
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #11
  br label %58

58:                                               ; preds = %34, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #11
  %59 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 1, i32 3
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 1, i32 4
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, %60
  call void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"* %41, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 %63) #11
  %64 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i64 26) #11
  %65 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %7) #11
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %58
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #11
  br label %82

82:                                               ; preds = %58, %78, %81
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #11
  %83 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 2, i32 3
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 2, i32 4
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, %84
  call void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"* %65, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 %87) #11
  %88 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.12, i64 0, i64 0), i64 34) #11
  %89 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %8) #11
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %82
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #11
  br label %106

106:                                              ; preds = %82, %102, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #11
  %107 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 3, i32 3
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 3, i32 4
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, %108
  call void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"* %89, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 %111) #11
  %112 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i64 0, i64 0), i64 24) #11
  %113 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %9) #11
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %106
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #11
  br label %130

130:                                              ; preds = %106, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #11
  %131 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 4, i32 3
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 4, i32 4
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, %132
  call void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"* %113, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 %135) #11
  %136 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %136) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0), i64 20) #11
  %137 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %10) #11
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %130
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #11
  br label %154

154:                                              ; preds = %130, %150, %153
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %136) #11
  %155 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 2, i32 5
  %156 = load i64, i64* %155, align 8
  call void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"* %137, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 %156) #11
  %157 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.15, i64 0, i64 0), i64 46) #11
  %158 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %11) #11
  %159 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %154
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #11
  br label %175

175:                                              ; preds = %154, %171, %174
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %157) #11
  %176 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 5, i32 3
  %177 = load i64, i64* %176, align 8
  %178 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 5, i32 6
  %179 = load i64, i64* %178, align 8
  %180 = add i64 %179, %177
  call void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"* %158, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 %180) #11
  %181 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #11
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), i64 25) #11
  %182 = call %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %12) #11
  %183 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %175
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #11
  br label %199

199:                                              ; preds = %175, %195, %198
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #11
  %200 = getelementptr inbounds %"struct.blink::MemoryCache::Statistics", %"struct.blink::MemoryCache::Statistics"* %4, i64 0, i32 5, i32 4
  %201 = load i64, i64* %200, align 8
  %202 = add i64 %201, %177
  call void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"* %182, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i64 %202) #11
  call void @llvm.lifetime.end.p0i8(i64 336, i8* nonnull %15) #11
  br label %283

203:                                              ; preds = %3
  %204 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %205 = load i32, i32* %204, align 4
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %208 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %207, align 8
  %209 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %208, i64 %211
  br i1 %206, label %283, label %213

213:                                              ; preds = %203
  %214 = icmp eq i32 %210, 0
  br i1 %214, label %222, label %215

215:                                              ; preds = %213, %219
  %216 = phi %"struct.WTF::KeyValuePair"* [ %220, %219 ], [ %208, %213 ]
  %217 = bitcast %"struct.WTF::KeyValuePair"* %216 to i64*
  %218 = load i64, i64* %217, align 8
  switch i64 %218, label %222 [
    i64 -1, label %219
    i64 0, label %219
  ]

219:                                              ; preds = %215, %215
  %220 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %216, i64 1
  %221 = icmp eq %"struct.WTF::KeyValuePair"* %220, %212
  br i1 %221, label %283, label %215

222:                                              ; preds = %215, %213
  %223 = phi %"struct.WTF::KeyValuePair"* [ %208, %213 ], [ %216, %215 ]
  %224 = icmp eq %"struct.WTF::KeyValuePair"* %223, %212
  br i1 %224, label %283, label %225

225:                                              ; preds = %222, %260
  %226 = phi %"struct.WTF::KeyValuePair"* [ %254, %260 ], [ %223, %222 ]
  %227 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %226, i64 0, i32 1, i32 0, i32 0
  %228 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %227, align 8
  %229 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %228, i64 0, i32 0, i32 0, i32 2
  %230 = load i32, i32* %229, align 4
  %231 = icmp eq i32 %230, 0
  %232 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %228, i64 0, i32 0, i32 0, i32 0
  %233 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %232, align 8
  %234 = getelementptr inbounds %"class.blink::HeapHashMap.3", %"class.blink::HeapHashMap.3"* %228, i64 0, i32 0, i32 0, i32 1
  %235 = load i32, i32* %234, align 8
  %236 = zext i32 %235 to i64
  %237 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %233, i64 %236
  br i1 %231, label %250, label %238

238:                                              ; preds = %225
  %239 = icmp eq i32 %235, 0
  br i1 %239, label %247, label %240

240:                                              ; preds = %238, %244
  %241 = phi %"struct.WTF::KeyValuePair.9"* [ %245, %244 ], [ %233, %238 ]
  %242 = bitcast %"struct.WTF::KeyValuePair.9"* %241 to i64*
  %243 = load i64, i64* %242, align 8
  switch i64 %243, label %247 [
    i64 -1, label %244
    i64 0, label %244
  ]

244:                                              ; preds = %240, %240
  %245 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %241, i64 1
  %246 = icmp eq %"struct.WTF::KeyValuePair.9"* %245, %237
  br i1 %246, label %250, label %240

247:                                              ; preds = %240, %238
  %248 = phi %"struct.WTF::KeyValuePair.9"* [ %233, %238 ], [ %241, %240 ]
  %249 = icmp eq %"struct.WTF::KeyValuePair.9"* %248, %237
  br i1 %249, label %250, label %262

250:                                              ; preds = %244, %262, %281, %278, %225, %247
  %251 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %226, i64 1
  %252 = icmp eq %"struct.WTF::KeyValuePair"* %251, %212
  br i1 %252, label %283, label %253

253:                                              ; preds = %250, %257
  %254 = phi %"struct.WTF::KeyValuePair"* [ %258, %257 ], [ %251, %250 ]
  %255 = bitcast %"struct.WTF::KeyValuePair"* %254 to i64*
  %256 = load i64, i64* %255, align 8
  switch i64 %256, label %260 [
    i64 -1, label %257
    i64 0, label %257
  ]

257:                                              ; preds = %253, %253
  %258 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %254, i64 1
  %259 = icmp eq %"struct.WTF::KeyValuePair"* %258, %212
  br i1 %259, label %283, label %253

260:                                              ; preds = %253
  %261 = icmp eq %"struct.WTF::KeyValuePair"* %254, %212
  br i1 %261, label %283, label %225

262:                                              ; preds = %247, %281
  %263 = phi %"struct.WTF::KeyValuePair.9"* [ %275, %281 ], [ %248, %247 ]
  %264 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %263, i64 0, i32 1, i32 0, i32 0
  %265 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %264, align 8
  %266 = getelementptr inbounds %"class.blink::MemoryCacheEntry", %"class.blink::MemoryCacheEntry"* %265, i64 0, i32 0, i32 0, i32 0
  %267 = load %"class.blink::Resource"*, %"class.blink::Resource"** %266, align 8
  %268 = bitcast %"class.blink::Resource"* %267 to void (%"class.blink::Resource"*, i32, %"class.blink::WebProcessMemoryDump"*)***
  %269 = load void (%"class.blink::Resource"*, i32, %"class.blink::WebProcessMemoryDump"*)**, void (%"class.blink::Resource"*, i32, %"class.blink::WebProcessMemoryDump"*)*** %268, align 8
  %270 = getelementptr inbounds void (%"class.blink::Resource"*, i32, %"class.blink::WebProcessMemoryDump"*)*, void (%"class.blink::Resource"*, i32, %"class.blink::WebProcessMemoryDump"*)** %269, i64 26
  %271 = load void (%"class.blink::Resource"*, i32, %"class.blink::WebProcessMemoryDump"*)*, void (%"class.blink::Resource"*, i32, %"class.blink::WebProcessMemoryDump"*)** %270, align 8
  tail call void %271(%"class.blink::Resource"* %267, i32 %1, %"class.blink::WebProcessMemoryDump"* %2) #11
  %272 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %263, i64 1
  %273 = icmp eq %"struct.WTF::KeyValuePair.9"* %272, %237
  br i1 %273, label %250, label %274

274:                                              ; preds = %262, %278
  %275 = phi %"struct.WTF::KeyValuePair.9"* [ %279, %278 ], [ %272, %262 ]
  %276 = bitcast %"struct.WTF::KeyValuePair.9"* %275 to i64*
  %277 = load i64, i64* %276, align 8
  switch i64 %277, label %281 [
    i64 -1, label %278
    i64 0, label %278
  ]

278:                                              ; preds = %274, %274
  %279 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %275, i64 1
  %280 = icmp eq %"struct.WTF::KeyValuePair.9"* %279, %237
  br i1 %280, label %250, label %274

281:                                              ; preds = %274
  %282 = icmp eq %"struct.WTF::KeyValuePair.9"* %275, %237
  br i1 %282, label %250, label %262

283:                                              ; preds = %219, %250, %260, %257, %203, %222, %199
  ret i1 true
}

declare %"class.blink::WebMemoryAllocatorDump"* @_ZN5blink20WebProcessMemoryDump25CreateMemoryAllocatorDumpERKN3WTF6StringE(%"class.blink::WebProcessMemoryDump"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink22WebMemoryAllocatorDump9AddScalarEPKcS2_m(%"class.blink::WebMemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11MemoryCache16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE(%"class.blink::MemoryCache"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 4
  store i8 0, i8* %3, align 1
  %4 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 1, !range !4
  store i8 1, i8* %4, align 1
  tail call void @_ZN5blink11MemoryCache14PruneResourcesENS0_13PruneStrategyE(%"class.blink::MemoryCache"* %0, i32 1) #11
  %6 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 8, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 7, i32 0, i32 0
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %7, align 8
  %9 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %10 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 0, i32 6, i32 0, i32 0
  store i64 %9, i64* %10, align 8
  store i8 %5, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink11MemoryCache16OnMemoryPressureEN4base22MemoryPressureListener19MemoryPressureLevelE(%"class.blink::MemoryCache"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %0, i64 -1, i32 12
  %4 = bitcast %class.scoped_refptr.365* %3 to %"class.blink::MemoryCache"*
  %5 = getelementptr inbounds %"class.blink::MemoryCache", %"class.blink::MemoryCache"* %4, i64 0, i32 4
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %class.scoped_refptr.365, %class.scoped_refptr.365* %3, i64 5
  %7 = bitcast %class.scoped_refptr.365* %6 to i8*
  %8 = load i8, i8* %7, align 1, !range !4
  store i8 1, i8* %7, align 1
  tail call void @_ZN5blink11MemoryCache14PruneResourcesENS0_13PruneStrategyE(%"class.blink::MemoryCache"* %4, i32 1) #11
  %9 = getelementptr inbounds %class.scoped_refptr.365, %class.scoped_refptr.365* %3, i64 9
  %10 = bitcast %class.scoped_refptr.365* %9 to i64*
  %11 = getelementptr inbounds %class.scoped_refptr.365, %class.scoped_refptr.365* %3, i64 8
  %12 = bitcast %class.scoped_refptr.365* %11 to i64*
  %13 = load i64, i64* %10, align 8
  store i64 %13, i64* %12, align 8
  %14 = tail call i64 @_ZN4base9TimeTicks3NowEv() #11
  %15 = getelementptr inbounds %class.scoped_refptr.365, %class.scoped_refptr.365* %3, i64 7
  %16 = bitcast %class.scoped_refptr.365* %15 to i64*
  store i64 %14, i64* %16, align 8
  store i8 %8, i8* %7, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22MemoryPressureListener13OnPurgeMemoryEv(%"class.blink::MemoryPressureListener"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.378"*, %"class.blink::MemoryCacheDumpClient"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.378", %"class.blink::PersistentBase.378"* %0, i64 0, i32 0
  store %"class.blink::MemoryCacheDumpClient"* %1, %"class.blink::MemoryCacheDumpClient"** %3, align 8
  %4 = ptrtoint %"class.blink::MemoryCacheDumpClient"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %10
    i64 -1, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.378", %"class.blink::PersistentBase.378"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  tail call void @_ZN5blink14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.378"* %0) #11
  br label %33

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.blink::PersistentBase.378", %"class.blink::PersistentBase.378"* %0, i64 0, i32 1, i32 0
  %12 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %13 = icmp eq %"class.blink::PersistentNode"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #11
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #11
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %28, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %11, align 8
  br label %33

33:                                               ; preds = %21, %10, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.378"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::PersistentBase.378"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %4 [
    i64 0, label %31
    i64 -1, label %31
  ]

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %19 = icmp eq %"class.blink::PersistentNode"* %18, null
  br i1 %19, label %20, label %23, !prof !2

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %21) #11
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  br label %23

23:                                               ; preds = %11, %20
  %24 = phi %"class.blink::PersistentNode"* [ %22, %20 ], [ %18, %11 ]
  %25 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentRegion"* %16 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to %"class.blink::PersistentBase.378"**
  store %"class.blink::PersistentBase.378"* %0, %"class.blink::PersistentBase.378"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentBase.378", %"class.blink::PersistentBase.378"* %0, i64 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %30, align 8
  br label %31

31:                                               ; preds = %1, %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MemoryCacheDumpClient"**
  %4 = load %"class.blink::MemoryCacheDumpClient"*, %"class.blink::MemoryCacheDumpClient"** %3, align 8
  %5 = icmp eq %"class.blink::MemoryCacheDumpClient"* %4, null
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_21MemoryCacheDumpClientEEEbPKT_(%"class.blink::LivenessBroker"* %0, %"class.blink::MemoryCacheDumpClient"* nonnull %4)
  br i1 %7, label %32, label %8

8:                                                ; preds = %6
  store %"class.blink::MemoryCacheDumpClient"* null, %"class.blink::MemoryCacheDumpClient"** %3, align 8
  %9 = getelementptr inbounds i8, i8* %1, i64 8
  %10 = bitcast i8* %9 to %"class.blink::PersistentNode"**
  %11 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %12 = icmp eq %"class.blink::PersistentNode"* %11, null
  br i1 %12, label %32, label %13

13:                                               ; preds = %8
  %14 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %15 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %14, i64 0, i32 1
  %16 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %15) #11
  %17 = icmp eq i8* %16, null
  br i1 %17, label %18, label %20, !prof !2

18:                                               ; preds = %13
  %19 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %15, i8* %19) #11
  br label %20

20:                                               ; preds = %18, %13
  %21 = phi i8* [ %19, %18 ], [ %16, %13 ]
  %22 = bitcast i8* %21 to %"class.blink::ThreadState"**
  %23 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %23, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %24, align 8
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %10, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %25, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::PersistentRegion"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::PersistentNode"* %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %26, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %31, align 8
  store %"class.blink::PersistentNode"* %26, %"class.blink::PersistentNode"** %27, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8
  br label %32

32:                                               ; preds = %20, %8, %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_21MemoryCacheDumpClientEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::MemoryCacheDumpClient"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::MemoryCacheDumpClient"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::MemoryCacheDumpClient"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #11, !range !10
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #5

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN5blink8ResourceEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #4 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #11
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZNK5blink4KURL10ProtocolIsEN3WTF10StringViewE(%"class.blink::KURL"*, %"class.WTF::StringView"* byval(%"class.WTF::StringView") align 8) local_unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #2

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #2

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::MemoryCache"* @_ZN5blink25MakeGarbageCollectedTraitINS_11MemoryCacheEE4CallIJ13scoped_refptrIN4base22SingleThreadTaskRunnerEEEEEPS1_DpOT_(%class.scoped_refptr.365* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11MemoryCacheEEEPhm(i64 112) #11
  %3 = bitcast i8* %2 to %"class.blink::MemoryCache"*
  %4 = getelementptr inbounds %class.scoped_refptr.365, %class.scoped_refptr.365* %0, i64 0, i32 0
  %5 = bitcast %class.scoped_refptr.365* %0 to i64*
  %6 = load i64, i64* %5, align 8
  store %"class.base::SingleThreadTaskRunner"* null, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %7 = bitcast i8* %2 to %"class.blink::MemoryCacheDumpClient"*
  %8 = bitcast i8* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  %9 = getelementptr inbounds i8, i8* %2, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #11
  %10 = getelementptr inbounds i8, i8* %2, i64 40
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds i8, i8* %2, i64 41
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds i8, i8* %2, i64 48
  %13 = getelementptr inbounds i8, i8* %2, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 32, i1 false) #11
  %14 = bitcast i8* %13 to <2 x i64>*
  store <2 x i64> <i64 8388608, i64 1000000>, <2 x i64>* %14, align 8
  %15 = getelementptr inbounds i8, i8* %2, i64 96
  %16 = bitcast i8* %15 to i64*
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %2, i64 104
  %18 = bitcast i8* %17 to i64*
  store i64 %6, i64* %18, align 8
  %19 = tail call %"class.blink::MemoryCacheDumpProvider"* @_ZN5blink23MemoryCacheDumpProvider8InstanceEv() #11
  %20 = getelementptr inbounds %"class.blink::MemoryCacheDumpProvider", %"class.blink::MemoryCacheDumpProvider"* %19, i64 0, i32 1, i32 0
  tail call void @_ZN5blink14PersistentBaseINS_21MemoryCacheDumpClientELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.378"* %20, %"class.blink::MemoryCacheDumpClient"* %7) #11
  %21 = tail call zeroext i1 @_ZN5blink30MemoryPressureListenerRegistry14IsLowEndDeviceEv() #11
  br i1 %21, label %22, label %26

22:                                               ; preds = %1
  %23 = getelementptr inbounds i8, i8* %2, i64 8
  %24 = bitcast i8* %23 to %"class.blink::MemoryPressureListener"*
  %25 = tail call dereferenceable(88) %"class.blink::MemoryPressureListenerRegistry"* @_ZN5blink30MemoryPressureListenerRegistry8InstanceEv() #11
  tail call void @_ZN5blink30MemoryPressureListenerRegistry14RegisterClientEPNS_22MemoryPressureListenerE(%"class.blink::MemoryPressureListenerRegistry"* %25, %"class.blink::MemoryPressureListener"* %24) #11
  br label %26

26:                                               ; preds = %1, %22
  %27 = getelementptr inbounds i8, i8* %2, i64 -4
  %28 = bitcast i8* %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = or i16 %29, 1
  store atomic i16 %30, i16* %28 release, align 2
  ret %"class.blink::MemoryCache"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11MemoryCacheEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11MemoryCacheEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11MemoryCacheEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11MemoryCacheEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11MemoryCacheEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #11
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.18, i64 0, i64 0), i8* %21, i8* %22) #11
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.19, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #11
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #11
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11MemoryCacheEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 16
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = bitcast i8* %3 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #11
  %11 = icmp eq i64 %5, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %18

18:                                               ; preds = %2, %12
  %19 = bitcast i8* %1 to %"class.blink::MemoryCacheDumpClient"*
  tail call void @_ZNK5blink21MemoryCacheDumpClient5TraceEPNS_7VisitorE(%"class.blink::MemoryCacheDumpClient"* %19, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_11MemoryCacheEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*], [7 x i8*] }, { [7 x i8*], [7 x i8*] }* @_ZTVN5blink11MemoryCacheE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 104
  %4 = bitcast i8* %3 to %"class.base::SingleThreadTaskRunner"**
  %5 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %4, align 8
  %6 = icmp eq %"class.base::SingleThreadTaskRunner"* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe.366", %"class.base::RefCountedThreadSafe.366"* %8, i64 -2
  %14 = bitcast %"class.base::RefCountedThreadSafe.366"* %13 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %14) #11
  br label %15

15:                                               ; preds = %1, %7, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11MemoryCacheEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11MemoryCacheELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::MemoryCache"**
  %5 = load %"class.blink::MemoryCache"*, %"class.blink::MemoryCache"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #11
  %7 = icmp eq %"class.blink::MemoryCache"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::MemoryCache"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11MemoryCacheEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_11MemoryCacheELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE10AssignSafeEPS1_(%"class.blink::PersistentBase.377"*, %"class.blink::MemoryCache"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.377", %"class.blink::PersistentBase.377"* %0, i64 0, i32 0
  store %"class.blink::MemoryCache"* %1, %"class.blink::MemoryCache"** %3, align 8
  %4 = ptrtoint %"class.blink::MemoryCache"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %10
    i64 -1, label %10
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.377", %"class.blink::PersistentBase.377"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  tail call void @_ZN5blink14PersistentBaseINS_11MemoryCacheELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.377"* %0) #11
  br label %33

10:                                               ; preds = %2, %2
  %11 = getelementptr inbounds %"class.blink::PersistentBase.377", %"class.blink::PersistentBase.377"* %0, i64 0, i32 1, i32 0
  %12 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %13 = icmp eq %"class.blink::PersistentNode"* %12, null
  br i1 %13, label %33, label %14

14:                                               ; preds = %10
  %15 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %16 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %15, i64 0, i32 1
  %17 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %16) #11
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %21, !prof !2

19:                                               ; preds = %14
  %20 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %16, i8* %20) #11
  br label %21

21:                                               ; preds = %19, %14
  %22 = phi i8* [ %20, %19 ], [ %17, %14 ]
  %23 = bitcast i8* %22 to %"class.blink::ThreadState"**
  %24 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %24, i64 0, i32 3, i32 0, i32 0, i32 0
  %26 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %25, align 8
  %27 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %11, align 8
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %26, i64 0, i32 0, i32 0
  %29 = bitcast %"class.blink::PersistentRegion"* %26 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.blink::PersistentNode"* %27 to i64*
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %27, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %32, align 8
  store %"class.blink::PersistentNode"* %27, %"class.blink::PersistentNode"** %28, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %11, align 8
  br label %33

33:                                               ; preds = %21, %10, %5, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_11MemoryCacheELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EE16InitializeUnsafeEv(%"class.blink::PersistentBase.377"*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::PersistentBase.377"* %0 to i64*
  %3 = load i64, i64* %2, align 8
  switch i64 %3, label %4 [
    i64 0, label %31
    i64 -1, label %31
  ]

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  %19 = icmp eq %"class.blink::PersistentNode"* %18, null
  br i1 %19, label %20, label %23, !prof !2

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %16, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %21) #11
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %17, align 8
  br label %23

23:                                               ; preds = %11, %20
  %24 = phi %"class.blink::PersistentNode"* [ %22, %20 ], [ %18, %11 ]
  %25 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.blink::PersistentRegion"* %16 to i64*
  store i64 %26, i64* %27, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to %"class.blink::PersistentBase.377"**
  store %"class.blink::PersistentBase.377"* %0, %"class.blink::PersistentBase.377"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11MemoryCacheELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  %30 = getelementptr inbounds %"class.blink::PersistentBase.377", %"class.blink::PersistentBase.377"* %0, i64 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %30, align 8
  br label %31

31:                                               ; preds = %1, %1, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26WeakCallbackMethodDelegateINS_16MemoryCacheEntryEXadL_ZNS1_17ClearResourceWeakERKNS_14LivenessBrokerEEEE10TrampolineES4_PKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Resource"**
  %4 = load %"class.blink::Resource"*, %"class.blink::Resource"** %3, align 8
  %5 = icmp eq %"class.blink::Resource"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %28, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %4, i64 -1, i32 32, i32 0, i32 2
  %20 = bitcast %"class.std::__1::__compressed_pair.362"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %18
  %26 = tail call %"class.blink::MemoryCache"* @_ZN5blink14GetMemoryCacheEv() #11
  %27 = load %"class.blink::Resource"*, %"class.blink::Resource"** %3, align 8
  tail call void @_ZN5blink11MemoryCache6RemoveEPNS_8ResourceE(%"class.blink::MemoryCache"* %26, %"class.blink::Resource"* %27) #11
  store %"class.blink::Resource"* null, %"class.blink::Resource"** %3, align 8
  br label %28

28:                                               ; preds = %2, %13, %18, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_11HeapHashMapIS3_NS6_INS5_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS3_EENSB_IS9_EEEEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_11HeapHashMapIS3_NS6_INS5_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS3_EENSB_IS9_EEEEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5TraceEPNS_7VisitorEPKv) #11
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #11
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #11
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #11
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #11
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.9"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #11
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.9"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.10"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16MemoryCacheEntryEE5TraceEPNS_7VisitorEPKv) #11
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.10"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16MemoryCacheEntryEE5TraceEPNS_7VisitorEPKv) #11
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16MemoryCacheEntryEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink26WeakCallbackMethodDelegateINS_16MemoryCacheEntryEXadL_ZNS1_17ClearResourceWeakERKNS_14LivenessBrokerEEEE10TrampolineES4_PKv, i8* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS8_SI_SJ_EES1_EEbRKT0_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #11
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #11
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  %63 = icmp ne %"struct.WTF::KeyValuePair"* %62, null
  ret i1 %63
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS3_10StringHashENS3_10HashTraitsIS4_EENS9_IS7_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([225 x i8], [225 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS_6StringENS1_6MemberINS1_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS3_EENS8_IS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_S8_SJ_EERKS1_PSC_EENS_18HashTableAddResultISK_SE_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::HeapHashMap.3"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #11
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #11
  br i1 %57, label %176, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #11
  %72 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #11
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #11
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #11
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %79, i64 0, i32 1
  %120 = load %"class.blink::HeapHashMap.3"*, %"class.blink::HeapHashMap.3"** %2, align 8
  %121 = ptrtoint %"class.blink::HeapHashMap.3"* %120 to i64
  %122 = bitcast %"class.blink::Member"* %119 to i64*
  store atomic i64 %121, i64* %122 monotonic, align 8
  %123 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %118
  %126 = bitcast %"class.blink::HeapHashMap.3"* %120 to i8*
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #11
  br label %128

128:                                              ; preds = %118, %125
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %164, label %131

131:                                              ; preds = %128
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #11
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !2

136:                                              ; preds = %131
  %137 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #11
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 9
  %143 = load i8, i8* %142, align 1, !range !4
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %164, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 13
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %149, align 8
  %151 = load atomic i64, i64* %122 monotonic, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %150, i64 0, i32 0, i32 0
  %155 = inttoptr i64 %151 to i8*
  %156 = bitcast %"class.blink::MarkingVisitor"* %150 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %157 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %157, i64 5
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %158, align 8
  tail call void %159(%"class.blink::Visitor"* %154, i8* nonnull %155, i8* %155, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapIN3WTF6StringENS_6MemberINS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS3_EENS8_IS6_EEEEE5TraceEPNS_7VisitorEPKv) #11
  %160 = load i64, i64* %146, align 8
  br label %161

161:                                              ; preds = %153, %145
  %162 = phi i64 [ %148, %145 ], [ %160, %153 ]
  %163 = add i64 %162, -1
  store i64 %163, i64* %146, align 8
  br label %164

164:                                              ; preds = %128, %138, %161
  %165 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %167
  %171 = shl i32 %170, 1
  %172 = load i32, i32* %12, align 8
  %173 = icmp ult i32 %171, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %79)
  br label %176

176:                                              ; preds = %54, %164, %174
  %177 = phi i8 [ 1, %164 ], [ 1, %174 ], [ 0, %54 ]
  %178 = phi %"struct.WTF::KeyValuePair"* [ %79, %164 ], [ %175, %174 ], [ %47, %54 ]
  %179 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %178, 0
  %180 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %179, i8 %177, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %180
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE12ExpandBufferEjPSE_Rb(%"class.WTF::HashTable"* %0, i32 %35, %"struct.WTF::KeyValuePair"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair"*
  %44 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE8RehashToEPSE_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %43, i32 %40, %"struct.WTF::KeyValuePair"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair"* %46
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE12ExpandBufferEjPSE_Rb(%"class.WTF::HashTable"*, i32, %"struct.WTF::KeyValuePair"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE8RehashToEPSE_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %42, i32 %1, %"struct.WTF::KeyValuePair"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair"* %64, %"struct.WTF::KeyValuePair"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #11
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE8RehashToEPSE_jSL_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #11
  %101 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #11
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair"* %101, %"struct.WTF::KeyValuePair"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.25, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_11HeapHashMapIS3_NS5_INS_16MemoryCacheEntryEEENS1_10StringHashENS1_10HashTraitsIS3_EENSA_IS8_EEEEEEEENS1_24KeyValuePairKeyExtractorES9_NS1_18HashMapValueTraitsISB_NSA_ISE_EEEESB_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_11HeapHashMapIS3_NS5_INS_16MemoryCacheEntryEEENS1_10StringHashENS1_10HashTraitsIS3_EENSA_IS8_EEEEEEEENS1_24KeyValuePairKeyExtractorES9_NS1_18HashMapValueTraitsISB_NSA_ISE_EEEESB_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([702 x i8], [702 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_11HeapHashMapIS4_NS6_INS1_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS_24KeyValuePairKeyExtractorESA_NS_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_11HeapHashMapIS5_NS7_INS_16MemoryCacheEntryEEENS3_10StringHashENS3_10HashTraitsIS5_EENSC_ISA_EEEEEEEENS3_24KeyValuePairKeyExtractorESB_NS3_18HashMapValueTraitsISD_NSC_ISG_EEEESD_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #11
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #11
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #11
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #2

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #11
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #11
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  ret %"struct.WTF::KeyValuePair"* %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16MemoryCacheEntryEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16MemoryCacheEntryEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16MemoryCacheEntryEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16MemoryCacheEntryEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16MemoryCacheEntryEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16MemoryCacheEntryEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.7"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.9"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #11
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.9"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.9"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #11
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.9"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.9"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.9"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } undef, %"struct.WTF::KeyValuePair.9"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } %77, %"struct.WTF::KeyValuePair.9"* %76, 1
  ret { %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERNS3_4KURLERPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.7"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::MemoryCacheEntry"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.9"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.7"* %0, %"struct.WTF::KeyValuePair.9"* null)
  %9 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.9"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %1, i64 0, i32 4, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #11
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.9"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.9"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.9"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #11
  br i1 %57, label %176, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.9"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.9"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.9"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #11
  %72 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.9"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #11
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !2

96:                                               ; preds = %87
  tail call void @llvm.trap() #11
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %97, %82, %78
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"struct.WTF::KeyValuePair.9"* %79 to i64*
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %79, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  store i64 %100, i64* %101, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #11
  br label %118

118:                                              ; preds = %117, %114, %99
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %79, i64 0, i32 1
  %120 = load %"class.blink::MemoryCacheEntry"*, %"class.blink::MemoryCacheEntry"** %2, align 8
  %121 = ptrtoint %"class.blink::MemoryCacheEntry"* %120 to i64
  %122 = bitcast %"class.blink::Member.10"* %119 to i64*
  store atomic i64 %121, i64* %122 monotonic, align 8
  %123 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %128, label %125

125:                                              ; preds = %118
  %126 = bitcast %"class.blink::MemoryCacheEntry"* %120 to i8*
  %127 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %126) #11
  br label %128

128:                                              ; preds = %118, %125
  %129 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %164, label %131

131:                                              ; preds = %128
  %132 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %133 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %132, i64 0, i32 1
  %134 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %133) #11
  %135 = icmp eq i8* %134, null
  br i1 %135, label %136, label %138, !prof !2

136:                                              ; preds = %131
  %137 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %133, i8* %137) #11
  br label %138

138:                                              ; preds = %136, %131
  %139 = phi i8* [ %137, %136 ], [ %134, %131 ]
  %140 = bitcast i8* %139 to %"class.blink::ThreadState"**
  %141 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %140, align 8
  %142 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 9
  %143 = load i8, i8* %142, align 1, !range !4
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %164, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 13
  %147 = load i64, i64* %146, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %146, align 8
  %149 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %141, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %149, align 8
  %151 = load atomic i64, i64* %122 monotonic, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %145
  %154 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %150, i64 0, i32 0, i32 0
  %155 = inttoptr i64 %151 to i8*
  %156 = bitcast %"class.blink::MarkingVisitor"* %150 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %157 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %157, i64 5
  %159 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %158, align 8
  tail call void %159(%"class.blink::Visitor"* %154, i8* nonnull %155, i8* %155, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16MemoryCacheEntryEE5TraceEPNS_7VisitorEPKv) #11
  %160 = load i64, i64* %146, align 8
  br label %161

161:                                              ; preds = %153, %145
  %162 = phi i64 [ %148, %145 ], [ %160, %153 ]
  %163 = add i64 %162, -1
  store i64 %163, i64* %146, align 8
  br label %164

164:                                              ; preds = %128, %138, %161
  %165 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %167
  %171 = shl i32 %170, 1
  %172 = load i32, i32* %12, align 8
  %173 = icmp ult i32 %171, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.7"* %0, %"struct.WTF::KeyValuePair.9"* %79)
  br label %176

176:                                              ; preds = %54, %164, %174
  %177 = phi i8 [ 1, %164 ], [ 1, %174 ], [ 0, %54 ]
  %178 = phi %"struct.WTF::KeyValuePair.9"* [ %79, %164 ], [ %175, %174 ], [ %47, %54 ]
  %179 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } undef, %"struct.WTF::KeyValuePair.9"* %178, 0
  %180 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %179, i8 %177, 1
  ret { %"struct.WTF::KeyValuePair.9"*, i8 } %180
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.7"*, %"struct.WTF::KeyValuePair.9"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #11
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %23, i8* %24) #11
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #11
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #11
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.7"* %0, i32 %35, %"struct.WTF::KeyValuePair.9"* %1, i8* nonnull dereferenceable(1) %4) #11
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #11
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.531"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #11
  %43 = bitcast %"class.blink::HeapHashTableBacking.531"* %42 to %"struct.WTF::KeyValuePair.9"*
  %44 = call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.7"* %0, %"struct.WTF::KeyValuePair.9"* %43, i32 %40, %"struct.WTF::KeyValuePair.9"* %1) #11
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.9"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.9"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.7"*, i32, %"struct.WTF::KeyValuePair.9"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #11
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !2

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #11
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0)) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.9"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.9"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #11
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.531"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #11
  %45 = bitcast %"class.blink::HeapHashTableBacking.531"* %44 to %"struct.WTF::KeyValuePair.9"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.9"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.7"* %0 to %"class.blink::HeapHashTableBacking.531"**
  store %"class.blink::HeapHashTableBacking.531"* %44, %"class.blink::HeapHashTableBacking.531"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.531", %"class.blink::HeapHashTableBacking.531"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #11
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.9"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.7"* %0, %"struct.WTF::KeyValuePair.9"* %42, i32 %1, %"struct.WTF::KeyValuePair.9"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.9"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.9"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.9"* %64, %"struct.WTF::KeyValuePair.9"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.9"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.9"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #11
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.9"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.10"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.10"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.9"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.9"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.7"*, %"struct.WTF::KeyValuePair.9"*, i32, %"struct.WTF::KeyValuePair.9"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.7", align 8
  %6 = bitcast %"class.WTF::HashTable.7"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.7"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.9"* %1, %"struct.WTF::KeyValuePair.9"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.9"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.9"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.7"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.9"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.7"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #11
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.7"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.7"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #11
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.9"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.9"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.10"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #11
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #11
  ret %"struct.WTF::KeyValuePair.9"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.9"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.9"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.9"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.7"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #11
  %101 = extractvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #11
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.9"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.10"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.10"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.9"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.9"* %101, %"struct.WTF::KeyValuePair.9"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.9"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.9"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.531"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.25, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_16MemoryCacheEntryEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.531"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.531"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_16MemoryCacheEntryEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([392 x i8], [392 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_16MemoryCacheEntryEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !2

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.9"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #11
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.9"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.7"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #11
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.9"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.9"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.9"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.9"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.9"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.9"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.9"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.9"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #11
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.9"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.9"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.9"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } undef, %"struct.WTF::KeyValuePair.9"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.9"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.9"*, i8 } %77
}

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.7"*, %"struct.WTF::KeyValuePair.9"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.9"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %1, i64 0, i32 1
  %22 = bitcast %"class.blink::Member.10"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  %26 = and i32 %25, 2147483647
  %27 = and i32 %24, -2147483648
  %28 = or i32 %26, %27
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = mul i32 %31, 6
  %33 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %32, %34
  %36 = icmp ugt i32 %34, 8
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %67

38:                                               ; preds = %19
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #11
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %38
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #11
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 6
  %50 = load i8, i8* %49, align 8, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %67, label %56

56:                                               ; preds = %45, %52
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 13
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = load i32, i32* %33, align 8
  %62 = lshr i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = tail call %"class.blink::HeapHashTableBacking.531"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_16MemoryCacheEntryEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %63) #11
  %65 = bitcast %"class.blink::HeapHashTableBacking.531"* %64 to %"struct.WTF::KeyValuePair.9"*
  %66 = tail call %"struct.WTF::KeyValuePair.9"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.7"* %0, %"struct.WTF::KeyValuePair.9"* %65, i32 %62, %"struct.WTF::KeyValuePair.9"* null) #11
  br label %67

67:                                               ; preds = %52, %19, %60, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.9"* @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_16MemoryCacheEntryEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6LookupERKS1_(%"class.WTF::HashTable.7"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.9"*, %"struct.WTF::KeyValuePair.9"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.9"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.7", %"class.WTF::HashTable.7"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #11
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.9"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.9"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #11
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.9", %"struct.WTF::KeyValuePair.9"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.9"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  ret %"struct.WTF::KeyValuePair.9"* %62
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.396"*, %"class.blink::Resource"** dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.396", %"class.WTF::Vector.396"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.396", %"class.WTF::Vector.396"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.396"* %0, i32 %14) #11
  %15 = getelementptr inbounds %"class.WTF::Vector.396", %"class.WTF::Vector.396"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.399"*, %"class.blink::Member.399"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.399", %"class.blink::Member.399"* %16, i64 %18
  %20 = bitcast %"class.blink::Resource"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.399"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #11
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.396"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.396", %"class.WTF::Vector.396"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.396", %"class.WTF::Vector.396"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.399"*, %"class.blink::Member.399"** %8, align 8
  %10 = icmp eq %"class.blink::Member.399"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm(i64 %11) #11
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #11
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.396"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.399"*, %"class.blink::Member.399"** %8, align 8
  %26 = icmp eq %"class.blink::Member.399"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.399"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #11
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #11
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #11
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.26, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0)) #11
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.396"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_8ResourceEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.396"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.396"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.396", %"class.WTF::Vector.396"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.396"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.396", %"class.WTF::Vector.396"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #11
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #11
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm(i64 %14) #11
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #11
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.396", %"class.WTF::Vector.396"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.399"*, %"class.blink::Member.399"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.396", %"class.WTF::Vector.396"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.399"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.399"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.396"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #11
  %33 = bitcast %"class.WTF::Vector.396"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #11
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #11
  %42 = bitcast %"class.WTF::Vector.396"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.396", %"class.WTF::Vector.396"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #11
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_8ResourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.27, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.28, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.29, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #11
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #11
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([157 x i8], [157 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_8ResourceEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.399"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.399", %"class.blink::Member.399"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.399"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv) #11
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_8ResourceEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8ResourceEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Resource"*
  %4 = bitcast i8* %1 to void (%"class.blink::Resource"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Resource"*, %"class.blink::Visitor"*)**, void (%"class.blink::Resource"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::Resource"*, %"class.blink::Visitor"*)*, void (%"class.blink::Resource"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::Resource"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #2

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #2

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE5eraseEPKSE_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #11
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %22 = bitcast %"class.blink::Member"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  %26 = and i32 %25, 2147483647
  %27 = and i32 %24, -2147483648
  %28 = or i32 %26, %27
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = mul i32 %31, 6
  %33 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %32, %34
  %36 = icmp ugt i32 %34, 8
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %67

38:                                               ; preds = %19
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #11
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !2

43:                                               ; preds = %38
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #11
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 6
  %50 = load i8, i8* %49, align 8, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %67, label %56

56:                                               ; preds = %45, %52
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 13
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = load i32, i32* %33, align 8
  %62 = lshr i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_11HeapHashMapIS4_NS6_INS_16MemoryCacheEntryEEENS2_10StringHashENS2_10HashTraitsIS4_EENSB_IS9_EEEEEEEENS2_24KeyValuePairKeyExtractorESA_NS2_18HashMapValueTraitsISC_NSB_ISF_EEEESC_NS_13HeapAllocatorEEEEEE4CallEm(i64 %63) #11
  %65 = bitcast %"class.blink::HeapHashTableBacking"* %64 to %"struct.WTF::KeyValuePair"*
  %66 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_11HeapHashMapIS1_NS4_INS3_16MemoryCacheEntryEEENS_10StringHashENS_10HashTraitsIS1_EENS9_IS7_EEEEEEEENS_24KeyValuePairKeyExtractorES8_NS_18HashMapValueTraitsISA_NS9_ISD_EEEESA_NS3_13HeapAllocatorEE8RehashToEPSE_jSL_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %65, i32 %62, %"struct.WTF::KeyValuePair"* null) #11
  br label %67

67:                                               ; preds = %52, %19, %60, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink11MemoryCacheEFvNS4_13PruneStrategyEEJNS0_17UnretainedWrapperIS4_EES5_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i32*
  %8 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %5, i64 %12
  %14 = bitcast i8* %13 to %"class.blink::MemoryCache"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.blink::MemoryCache"*, i32)**
  %23 = load void (%"class.blink::MemoryCache"*, i32)*, void (%"class.blink::MemoryCache"*, i32)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %9 to void (%"class.blink::MemoryCache"*, i32)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.blink::MemoryCache"*, i32)* [ %23, %17 ], [ %25, %24 ]
  %28 = load i32, i32* %7, align 4
  tail call void %27(%"class.blink::MemoryCache"* %14, i32 %28) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink11MemoryCacheEFvNS3_13PruneStrategyEEJNS0_17UnretainedWrapperIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
!5 = !{!6, !8}
!6 = distinct !{!6, !7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink11MemoryCacheEFvNS4_13PruneStrategyEEJNS0_17UnretainedWrapperIS4_EES5_EEEDcOT0_DpOT1_: argument 0"}
!7 = distinct !{!7, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink11MemoryCacheEFvNS4_13PruneStrategyEEJNS0_17UnretainedWrapperIS4_EES5_EEEDcOT0_DpOT1_"}
!8 = distinct !{!8, !9, !"_ZN4base8BindOnceIMN5blink11MemoryCacheEFvNS2_13PruneStrategyEEJNS_8internal17UnretainedWrapperIS2_EES3_EEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8BindOnceIMN5blink11MemoryCacheEFvNS2_13PruneStrategyEEJNS_8internal17UnretainedWrapperIS2_EES3_EEENS_12OnceCallbackINS6_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!10 = !{i32 24, i32 33}
