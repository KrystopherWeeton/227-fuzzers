; ModuleID = '../../third_party/blink/renderer/platform/scheduler/worker/non_main_thread_scheduler_helper.cc'
source_filename = "../../third_party/blink/renderer/platform/scheduler/worker/non_main_thread_scheduler_helper.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::scheduler::NonMainThreadSchedulerHelper" = type { %"class.blink::scheduler::SchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %class.scoped_refptr.1, %class.scoped_refptr.1 }
%"class.blink::scheduler::SchedulerHelper" = type { %"class.base::sequence_manager::SequenceManager::Observer", %"class.base::sequence_manager::SequenceManager"*, %class.scoped_refptr, %"class.blink::scheduler::SchedulerHelper::Observer"*, %"class.blink::scheduler::UkmTaskSampler", %"class.absl::optional" }
%"class.base::sequence_manager::SequenceManager::Observer" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::scheduler::SchedulerHelper::Observer" = type { i32 (...)** }
%"class.blink::scheduler::UkmTaskSampler" = type { double, double, %"class.std::__1::mersenne_twister_engine" }
%"class.std::__1::mersenne_twister_engine" = type { [312 x i64], i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.base::SimpleTaskExecutor" }
%"class.base::SimpleTaskExecutor" = type { %"class.base::TaskExecutor", %class.scoped_refptr, %"class.base::TaskExecutor"* }
%"class.base::TaskExecutor" = type { i32 (...)** }
%class.scoped_refptr.1 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type { %"class.base::sequence_manager::TaskQueue", %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.absl::optional.73" }
%"class.base::sequence_manager::TaskQueue" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.2", %"class.base::internal::CheckedLock", %"class.std::__1::unique_ptr", %"class.base::WeakPtr", %class.scoped_refptr.3, %class.scoped_refptr, i32, i32, i8*, %"class.base::WeakPtrFactory" }
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::CheckedLock" = type { %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::sequence_manager::internal::TaskQueueImpl" = type <{ i8*, %"class.base::sequence_manager::internal::SequenceManagerImpl"*, %class.scoped_refptr.3, %class.scoped_refptr.5, %"class.base::internal::CheckedLock", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread", %"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly", %"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag", i8, i8, i8, [5 x i8] }>
%"class.base::sequence_manager::internal::SequenceManagerImpl" = type opaque
%class.scoped_refptr.5 = type { %"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster"* }
%"class.base::sequence_manager::internal::TaskQueueImpl::GuardedTaskPoster" = type { %"class.base::RefCountedThreadSafe.6", [4 x i8], %"class.base::internal::OperationsController", %"class.base::sequence_manager::internal::TaskQueueImpl"* }
%"class.base::RefCountedThreadSafe.6" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::OperationsController" = type { %"struct.std::__1::atomic.7", [4 x i8], %"class.base::WaitableEvent" }
%"struct.std::__1::atomic.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl.10" }
%"struct.std::__1::__cxx_atomic_impl.10" = type { %"struct.std::__1::__cxx_atomic_base_impl.11" }
%"struct.std::__1::__cxx_atomic_base_impl.11" = type { i32 }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.12, i8, [7 x i8] }>
%class.scoped_refptr.12 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.13", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.14" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i64 }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread" = type { %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.base::sequence_manager::internal::LazilyDeallocatedDeque", i8, i8, i8, %"class.base::RepeatingCallback", %"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" }
%"class.base::sequence_manager::TimeDomain" = type opaque
%"class.base::sequence_manager::TaskQueue::Observer" = type { i32 (...)** }
%"class.base::sequence_manager::internal::LazilyDeallocatedDeque" = type { %"class.std::__1::unique_ptr.17", %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"*, i64, i64, %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring"* }
%"struct.base::sequence_manager::internal::LazilyDeallocatedDeque<base::sequence_manager::Task, &base::subtle::TimeTicksNowIgnoringOverride>::Ring" = type opaque
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.22", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::AnyThread::TracingOnly" = type <{ i8, [7 x i8], %"class.absl::optional.23", i8, [7 x i8] }>
%"class.absl::optional.23" = type { %"class.absl::optional_internal::optional_data.24" }
%"class.absl::optional_internal::optional_data.24" = type { %"class.absl::optional_internal::optional_data_base.25" }
%"class.absl::optional_internal::optional_data_base.25" = type { %"class.absl::optional_internal::optional_data_dtor_base.26" }
%"class.absl::optional_internal::optional_data_dtor_base.26" = type { i8, %union.anon.27 }
%union.anon.27 = type { %"class.base::TimeTicks" }
%"struct.base::sequence_manager::internal::TaskQueueImpl::MainThreadOnly" = type <{ %"class.base::sequence_manager::TimeDomain"*, %"class.base::sequence_manager::TaskQueue::Observer"*, %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.30", %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue", %"class.base::ObserverList", %"class.base::HeapHandle", i8, [7 x i8], %"class.base::trace_event::BlameContext"*, %"class.base::sequence_manager::EnqueueOrder", %"class.absl::optional.23", %"class.base::sequence_manager::EnqueueOrder", %"class.base::sequence_manager::EnqueueOrder", %"class.base::RepeatingCallback.49", %"class.base::RepeatingCallback.50", %"class.absl::optional.51", i8, [7 x i8], %"class.absl::optional.23", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.base::sequence_manager::internal::WorkQueue"* }
%"class.base::sequence_manager::internal::WorkQueue" = type opaque
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue" = type { %"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue", i32, [4 x i8] }
%"struct.base::sequence_manager::internal::TaskQueueImpl::DelayedIncomingQueue::PQueue" = type { %"class.std::__1::priority_queue.base", [7 x i8] }
%"class.std::__1::priority_queue.base" = type <{ %"class.std::__1::vector", %"struct.std::__1::less" }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.base::sequence_manager::Task"*, %"struct.base::sequence_manager::Task"*, %"class.std::__1::__compressed_pair.37" }
%"struct.base::sequence_manager::Task" = type { %"struct.base::PendingTask.base", i8, i8, i8, %class.scoped_refptr.36, %"class.base::sequence_manager::EnqueueOrder" }
%"struct.base::PendingTask.base" = type <{ %"class.base::OnceCallback", %"class.base::Location", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.std::__1::array", i32, [4 x i8], i8*, i32, i8 }>
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"struct.std::__1::array" = type { [4 x i8*] }
%class.scoped_refptr.36 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.base::sequence_manager::Task"* }
%"struct.std::__1::less" = type { i8 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.42", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.44" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::HeapHandle" = type { i64 }
%"class.base::trace_event::BlameContext" = type opaque
%"class.base::sequence_manager::EnqueueOrder" = type { i64 }
%"class.base::RepeatingCallback.49" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::RepeatingCallback.50" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"struct.base::sequence_manager::internal::DelayedWakeUp" }
%"struct.base::sequence_manager::internal::DelayedWakeUp" = type { %"class.base::TimeTicks", i32, i32 }
%"class.base::sequence_manager::internal::AtomicFlagSet::AtomicFlag" = type { %"class.base::sequence_manager::internal::AtomicFlagSet"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, i64 }
%"class.base::sequence_manager::internal::AtomicFlagSet" = type { %class.scoped_refptr.3, %"class.std::__1::unique_ptr.56", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.base::sequence_manager::internal::AtomicFlagSet::Group" = type { %"struct.std::__1::atomic.78", i64, [64 x %"class.base::RepeatingCallback.83"], %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"class.std::__1::unique_ptr.56", %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"*, %"struct.base::sequence_manager::internal::AtomicFlagSet::Group"* }
%"struct.std::__1::atomic.78" = type { %"struct.std::__1::__atomic_base.79" }
%"struct.std::__1::__atomic_base.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__cxx_atomic_impl.81" }
%"struct.std::__1::__cxx_atomic_impl.81" = type { %"struct.std::__1::__cxx_atomic_base_impl.82" }
%"struct.std::__1::__cxx_atomic_base_impl.82" = type { i64 }
%"class.base::RepeatingCallback.83" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.65 }
%class.scoped_refptr.65 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.66", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.66" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.67" }
%"struct.std::__1::atomic.67" = type { %"struct.std::__1::__atomic_base.68" }
%"struct.std::__1::__atomic_base.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { i8 }
%class.scoped_refptr.3 = type { %"class.base::sequence_manager::internal::AssociatedThreadId"* }
%"class.base::sequence_manager::internal::AssociatedThreadId" = type { %"class.base::RefCountedThreadSafe.4", %"struct.std::__1::atomic" }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.72 }
%class.scoped_refptr.72 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.absl::optional.73" = type { %"class.absl::optional_internal::optional_data.74" }
%"class.absl::optional_internal::optional_data.74" = type { %"class.absl::optional_internal::optional_data_base.75" }
%"class.absl::optional_internal::optional_data_base.75" = type { %"class.absl::optional_internal::optional_data_dtor_base.76" }
%"class.absl::optional_internal::optional_data_dtor_base.76" = type { i8, %union.anon.77 }
%union.anon.77 = type { i32 }
%"class.base::sequence_manager::SequenceManager" = type { i32 (...)** }
%"class.blink::scheduler::NonMainThreadSchedulerImpl" = type opaque
%"struct.base::sequence_manager::TaskQueue::Spec" = type <{ i8*, i8, [7 x i8], %"class.base::sequence_manager::TimeDomain"*, i8, i8, [6 x i8] }>

@_ZTVN5blink9scheduler28NonMainThreadSchedulerHelperE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::scheduler::NonMainThreadSchedulerHelper"*)* @_ZN5blink9scheduler28NonMainThreadSchedulerHelperD2Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::NonMainThreadSchedulerHelper"*)* @_ZN5blink9scheduler28NonMainThreadSchedulerHelperD0Ev to i8*), i8* bitcast (void (%"class.blink::scheduler::SchedulerHelper"*)* @_ZN5blink9scheduler15SchedulerHelper20OnBeginNestedRunLoopEv to i8*), i8* bitcast (void (%"class.blink::scheduler::SchedulerHelper"*)* @_ZN5blink9scheduler15SchedulerHelper19OnExitNestedRunLoopEv to i8*), i8* bitcast (%class.scoped_refptr* (%"class.blink::scheduler::NonMainThreadSchedulerHelper"*)* @_ZN5blink9scheduler28NonMainThreadSchedulerHelper17DefaultTaskRunnerEv to i8*), i8* bitcast (%class.scoped_refptr* (%"class.blink::scheduler::NonMainThreadSchedulerHelper"*)* @_ZN5blink9scheduler28NonMainThreadSchedulerHelper17ControlTaskRunnerEv to i8*), i8* bitcast (void (%"class.blink::scheduler::NonMainThreadSchedulerHelper"*)* @_ZN5blink9scheduler28NonMainThreadSchedulerHelper17ShutdownAllQueuesEv to i8*)] }, align 8
@.str = private unnamed_addr constant [21 x i8] c"subthread_default_tq\00", align 1
@.str.1 = private unnamed_addr constant [21 x i8] c"subthread_control_tq\00", align 1

@_ZN5blink9scheduler28NonMainThreadSchedulerHelperC1EPN4base16sequence_manager15SequenceManagerEPNS0_26NonMainThreadSchedulerImplENS_8TaskTypeE = hidden unnamed_addr alias void (%"class.blink::scheduler::NonMainThreadSchedulerHelper"*, %"class.base::sequence_manager::SequenceManager"*, %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, i8), void (%"class.blink::scheduler::NonMainThreadSchedulerHelper"*, %"class.base::sequence_manager::SequenceManager"*, %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, i8)* @_ZN5blink9scheduler28NonMainThreadSchedulerHelperC2EPN4base16sequence_manager15SequenceManagerEPNS0_26NonMainThreadSchedulerImplENS_8TaskTypeE
@_ZN5blink9scheduler28NonMainThreadSchedulerHelperD1Ev = hidden unnamed_addr alias void (%"class.blink::scheduler::NonMainThreadSchedulerHelper"*), void (%"class.blink::scheduler::NonMainThreadSchedulerHelper"*)* @_ZN5blink9scheduler28NonMainThreadSchedulerHelperD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler28NonMainThreadSchedulerHelperC2EPN4base16sequence_manager15SequenceManagerEPNS0_26NonMainThreadSchedulerImplENS_8TaskTypeE(%"class.blink::scheduler::NonMainThreadSchedulerHelper"*, %"class.base::sequence_manager::SequenceManager"*, %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, i8 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.base::sequence_manager::TaskQueue::Spec", align 8
  %6 = alloca %"struct.base::sequence_manager::TaskQueue::Spec", align 8
  %7 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 0
  tail call void @_ZN5blink9scheduler15SchedulerHelperC2EPN4base16sequence_manager15SequenceManagerE(%"class.blink::scheduler::SchedulerHelper"* %7, %"class.base::sequence_manager::SequenceManager"* %1) #8
  %8 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler28NonMainThreadSchedulerHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 1
  store %"class.blink::scheduler::NonMainThreadSchedulerImpl"* %2, %"class.blink::scheduler::NonMainThreadSchedulerImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 2
  %11 = bitcast %"struct.base::sequence_manager::TaskQueue::Spec"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"struct.base::sequence_manager::TaskQueue::Spec", %"struct.base::sequence_manager::TaskQueue::Spec"* %5, i64 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str, i64 0, i64 0), i8** %12, align 8
  %13 = getelementptr inbounds %"struct.base::sequence_manager::TaskQueue::Spec", %"struct.base::sequence_manager::TaskQueue::Spec"* %5, i64 0, i32 1
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"struct.base::sequence_manager::TaskQueue::Spec", %"struct.base::sequence_manager::TaskQueue::Spec"* %5, i64 0, i32 3
  store %"class.base::sequence_manager::TimeDomain"* null, %"class.base::sequence_manager::TimeDomain"** %14, align 8
  %15 = getelementptr inbounds %"struct.base::sequence_manager::TaskQueue::Spec", %"struct.base::sequence_manager::TaskQueue::Spec"* %5, i64 0, i32 4
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"struct.base::sequence_manager::TaskQueue::Spec", %"struct.base::sequence_manager::TaskQueue::Spec"* %5, i64 0, i32 5
  store i8 0, i8* %16, align 1
  %17 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %17, align 8
  %19 = tail call i8* @_Znwm(i64 144) #9
  %20 = bitcast i8* %19 to %"class.blink::scheduler::NonMainThreadTaskQueue"*
  %21 = bitcast %"class.base::sequence_manager::SequenceManager"* %18 to %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)***
  %22 = load %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)**, %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)*, %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)** %22, i64 27
  %24 = load %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)*, %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)** %23, align 8
  %25 = call %"class.base::sequence_manager::internal::TaskQueueImpl"* %24(%"class.base::sequence_manager::SequenceManager"* %18, %"struct.base::sequence_manager::TaskQueue::Spec"* nonnull dereferenceable(32) %5) #8
  %26 = load %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadSchedulerImpl"** %9, align 8
  call void @_ZN5blink9scheduler22NonMainThreadTaskQueueC1ENSt3__110unique_ptrIN4base16sequence_manager8internal13TaskQueueImplENS2_14default_deleteIS7_EEEERKNS5_9TaskQueue4SpecEPNS0_26NonMainThreadSchedulerImplE(%"class.blink::scheduler::NonMainThreadTaskQueue"* nonnull %20, %"class.base::sequence_manager::internal::TaskQueueImpl"* %25, %"struct.base::sequence_manager::TaskQueue::Spec"* nonnull dereferenceable(32) %5, %"class.blink::scheduler::NonMainThreadSchedulerImpl"* %26) #8
  %27 = getelementptr inbounds i8, i8* %19, i64 8
  %28 = bitcast i8* %27 to i32*
  %29 = atomicrmw add i32* %28, i32 1 monotonic
  %30 = bitcast %class.scoped_refptr.1* %10 to i8**
  store i8* %19, i8** %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #8
  %31 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 3
  %32 = bitcast %"struct.base::sequence_manager::TaskQueue::Spec"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"struct.base::sequence_manager::TaskQueue::Spec", %"struct.base::sequence_manager::TaskQueue::Spec"* %6, i64 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i8** %33, align 8
  %34 = getelementptr inbounds %"struct.base::sequence_manager::TaskQueue::Spec", %"struct.base::sequence_manager::TaskQueue::Spec"* %6, i64 0, i32 1
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"struct.base::sequence_manager::TaskQueue::Spec", %"struct.base::sequence_manager::TaskQueue::Spec"* %6, i64 0, i32 3
  store %"class.base::sequence_manager::TimeDomain"* null, %"class.base::sequence_manager::TimeDomain"** %35, align 8
  %36 = getelementptr inbounds %"struct.base::sequence_manager::TaskQueue::Spec", %"struct.base::sequence_manager::TaskQueue::Spec"* %6, i64 0, i32 4
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"struct.base::sequence_manager::TaskQueue::Spec", %"struct.base::sequence_manager::TaskQueue::Spec"* %6, i64 0, i32 5
  store i8 0, i8* %37, align 1
  %38 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %17, align 8
  %39 = call i8* @_Znwm(i64 144) #9
  %40 = bitcast i8* %39 to %"class.blink::scheduler::NonMainThreadTaskQueue"*
  %41 = bitcast %"class.base::sequence_manager::SequenceManager"* %38 to %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)***
  %42 = load %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)**, %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)*, %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)** %42, i64 27
  %44 = load %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)*, %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)** %43, align 8
  %45 = call %"class.base::sequence_manager::internal::TaskQueueImpl"* %44(%"class.base::sequence_manager::SequenceManager"* %38, %"struct.base::sequence_manager::TaskQueue::Spec"* nonnull dereferenceable(32) %6) #8
  %46 = load %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadSchedulerImpl"** %9, align 8
  call void @_ZN5blink9scheduler22NonMainThreadTaskQueueC1ENSt3__110unique_ptrIN4base16sequence_manager8internal13TaskQueueImplENS2_14default_deleteIS7_EEEERKNS5_9TaskQueue4SpecEPNS0_26NonMainThreadSchedulerImplE(%"class.blink::scheduler::NonMainThreadTaskQueue"* nonnull %40, %"class.base::sequence_manager::internal::TaskQueueImpl"* %45, %"struct.base::sequence_manager::TaskQueue::Spec"* nonnull dereferenceable(32) %6, %"class.blink::scheduler::NonMainThreadSchedulerImpl"* %46) #8
  %47 = getelementptr inbounds i8, i8* %39, i64 8
  %48 = bitcast i8* %47 to i32*
  %49 = atomicrmw add i32* %48, i32 1 monotonic
  %50 = bitcast %class.scoped_refptr.1* %31 to i8**
  store i8* %39, i8** %50, align 8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #8
  %51 = bitcast %class.scoped_refptr.1* %10 to %"class.base::sequence_manager::TaskQueue"**
  %52 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %51, align 8
  %53 = icmp eq %"class.base::sequence_manager::TaskQueue"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %4
  %55 = bitcast i8* %39 to %"class.base::sequence_manager::TaskQueue"*
  br label %62

56:                                               ; preds = %4
  %57 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %52, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = atomicrmw add i32* %57, i32 1 monotonic
  %59 = bitcast %class.scoped_refptr.1* %31 to %"class.base::sequence_manager::TaskQueue"**
  %60 = load %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"** %59, align 8
  %61 = icmp eq %"class.base::sequence_manager::TaskQueue"* %60, null
  br i1 %61, label %66, label %62

62:                                               ; preds = %54, %56
  %63 = phi %"class.base::sequence_manager::TaskQueue"* [ %55, %54 ], [ %60, %56 ]
  %64 = getelementptr inbounds %"class.base::sequence_manager::TaskQueue", %"class.base::sequence_manager::TaskQueue"* %63, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw add i32* %64, i32 1 monotonic
  br label %66

66:                                               ; preds = %56, %62
  %67 = phi %"class.base::sequence_manager::TaskQueue"* [ null, %56 ], [ %63, %62 ]
  call void @_ZN5blink9scheduler15SchedulerHelper17InitDefaultQueuesE13scoped_refptrIN4base16sequence_manager9TaskQueueEES6_NS_8TaskTypeE(%"class.blink::scheduler::SchedulerHelper"* %7, %"class.base::sequence_manager::TaskQueue"* %52, %"class.base::sequence_manager::TaskQueue"* %67, i8 zeroext %3) #8
  ret void
}

declare void @_ZN5blink9scheduler15SchedulerHelperC2EPN4base16sequence_manager15SequenceManagerE(%"class.blink::scheduler::SchedulerHelper"*, %"class.base::sequence_manager::SequenceManager"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler28NonMainThreadSchedulerHelper12NewTaskQueueERKN4base16sequence_manager9TaskQueue4SpecE(%"class.blink::scheduler::NonMainThreadSchedulerHelper"* nocapture readonly, %"struct.base::sequence_manager::TaskQueue::Spec"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.base::sequence_manager::SequenceManager"*, %"class.base::sequence_manager::SequenceManager"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 1
  %6 = tail call i8* @_Znwm(i64 144) #9
  %7 = bitcast i8* %6 to %"class.blink::scheduler::NonMainThreadTaskQueue"*
  %8 = bitcast %"class.base::sequence_manager::SequenceManager"* %4 to %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)***
  %9 = load %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)**, %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)*, %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)** %9, i64 27
  %11 = load %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)*, %"class.base::sequence_manager::internal::TaskQueueImpl"* (%"class.base::sequence_manager::SequenceManager"*, %"struct.base::sequence_manager::TaskQueue::Spec"*)** %10, align 8
  %12 = tail call %"class.base::sequence_manager::internal::TaskQueueImpl"* %11(%"class.base::sequence_manager::SequenceManager"* %4, %"struct.base::sequence_manager::TaskQueue::Spec"* dereferenceable(32) %1) #8
  %13 = load %"class.blink::scheduler::NonMainThreadSchedulerImpl"*, %"class.blink::scheduler::NonMainThreadSchedulerImpl"** %5, align 8
  tail call void @_ZN5blink9scheduler22NonMainThreadTaskQueueC1ENSt3__110unique_ptrIN4base16sequence_manager8internal13TaskQueueImplENS2_14default_deleteIS7_EEEERKNS5_9TaskQueue4SpecEPNS0_26NonMainThreadSchedulerImplE(%"class.blink::scheduler::NonMainThreadTaskQueue"* nonnull %7, %"class.base::sequence_manager::internal::TaskQueueImpl"* %12, %"struct.base::sequence_manager::TaskQueue::Spec"* dereferenceable(32) %1, %"class.blink::scheduler::NonMainThreadSchedulerImpl"* %13) #8
  %14 = getelementptr inbounds i8, i8* %6, i64 8
  %15 = bitcast i8* %14 to i32*
  %16 = atomicrmw add i32* %15, i32 1 monotonic
  ret %"class.blink::scheduler::NonMainThreadTaskQueue"* %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink9scheduler15SchedulerHelper17InitDefaultQueuesE13scoped_refptrIN4base16sequence_manager9TaskQueueEES6_NS_8TaskTypeE(%"class.blink::scheduler::SchedulerHelper"*, %"class.base::sequence_manager::TaskQueue"*, %"class.base::sequence_manager::TaskQueue"*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler28NonMainThreadSchedulerHelperD2Ev(%"class.blink::scheduler::NonMainThreadSchedulerHelper"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler28NonMainThreadSchedulerHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %4, i64 0, i32 0
  %6 = bitcast %"class.blink::scheduler::NonMainThreadTaskQueue"* %4 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %7 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %6, align 8
  %8 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %7, align 8
  tail call void %8(%"class.base::sequence_manager::TaskQueue"* %5) #8
  %9 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 2, i32 0
  %10 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %10, i64 0, i32 0
  %12 = bitcast %"class.blink::scheduler::NonMainThreadTaskQueue"* %10 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %13 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %12, align 8
  %14 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %13, align 8
  tail call void %14(%"class.base::sequence_manager::TaskQueue"* %11) #8
  %15 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %3, align 8
  %16 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %15, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe.2"* %23 to %"class.base::sequence_manager::TaskQueue"*
  %25 = bitcast %"class.base::RefCountedThreadSafe.2"* %23 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %26 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %26, i64 3
  %28 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %27, align 8
  tail call void %28(%"class.base::sequence_manager::TaskQueue"* nonnull %24) #8
  br label %29

29:                                               ; preds = %1, %17, %22
  %30 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %9, align 8
  %31 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %30, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %33, i64 -2
  %39 = bitcast %"class.base::RefCountedThreadSafe.2"* %38 to %"class.base::sequence_manager::TaskQueue"*
  %40 = bitcast %"class.base::RefCountedThreadSafe.2"* %38 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %41 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %41, i64 3
  %43 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %42, align 8
  tail call void %43(%"class.base::sequence_manager::TaskQueue"* nonnull %39) #8
  br label %44

44:                                               ; preds = %29, %32, %37
  %45 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 0
  tail call void @_ZN5blink9scheduler15SchedulerHelperD2Ev(%"class.blink::scheduler::SchedulerHelper"* %45) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9scheduler15SchedulerHelperD2Ev(%"class.blink::scheduler::SchedulerHelper"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler28NonMainThreadSchedulerHelperD0Ev(%"class.blink::scheduler::NonMainThreadSchedulerHelper"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink9scheduler28NonMainThreadSchedulerHelperE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %4, i64 0, i32 0
  %6 = bitcast %"class.blink::scheduler::NonMainThreadTaskQueue"* %4 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %7 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %6, align 8
  %8 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %7, align 8
  tail call void %8(%"class.base::sequence_manager::TaskQueue"* %5) #8
  %9 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 2, i32 0
  %10 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %10, i64 0, i32 0
  %12 = bitcast %"class.blink::scheduler::NonMainThreadTaskQueue"* %10 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %13 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %12, align 8
  %14 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %13, align 8
  tail call void %14(%"class.base::sequence_manager::TaskQueue"* %11) #8
  %15 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %3, align 8
  %16 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %15, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %15, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i32* %19, i32 1 acq_rel
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %18, i64 -2
  %24 = bitcast %"class.base::RefCountedThreadSafe.2"* %23 to %"class.base::sequence_manager::TaskQueue"*
  %25 = bitcast %"class.base::RefCountedThreadSafe.2"* %23 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %26 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %26, i64 3
  %28 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %27, align 8
  tail call void %28(%"class.base::sequence_manager::TaskQueue"* nonnull %24) #8
  br label %29

29:                                               ; preds = %22, %17, %1
  %30 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %9, align 8
  %31 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %30, null
  br i1 %31, label %44, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %30, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 acq_rel
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %44

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2", %"class.base::RefCountedThreadSafe.2"* %33, i64 -2
  %39 = bitcast %"class.base::RefCountedThreadSafe.2"* %38 to %"class.base::sequence_manager::TaskQueue"*
  %40 = bitcast %"class.base::RefCountedThreadSafe.2"* %38 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %41 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %41, i64 3
  %43 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %42, align 8
  tail call void %43(%"class.base::sequence_manager::TaskQueue"* nonnull %39) #8
  br label %44

44:                                               ; preds = %29, %32, %37
  %45 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 0
  tail call void @_ZN5blink9scheduler15SchedulerHelperD2Ev(%"class.blink::scheduler::SchedulerHelper"* %45) #8
  %46 = bitcast %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0 to i8*
  tail call void @_ZdlPv(i8* %46) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler28NonMainThreadSchedulerHelper29DefaultNonMainThreadTaskQueueEv(%"class.blink::scheduler::NonMainThreadSchedulerHelper"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %2, align 8
  %4 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %1, %5
  ret %"class.blink::scheduler::NonMainThreadTaskQueue"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %class.scoped_refptr* @_ZN5blink9scheduler28NonMainThreadSchedulerHelper17DefaultTaskRunnerEv(%"class.blink::scheduler::NonMainThreadSchedulerHelper"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, i64 0, i32 0, i32 6
  ret %class.scoped_refptr* %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.blink::scheduler::NonMainThreadTaskQueue"* @_ZN5blink9scheduler28NonMainThreadSchedulerHelper29ControlNonMainThreadTaskQueueEv(%"class.blink::scheduler::NonMainThreadSchedulerHelper"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %2, align 8
  %4 = icmp eq %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %1, %5
  ret %"class.blink::scheduler::NonMainThreadTaskQueue"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(8) %class.scoped_refptr* @_ZN5blink9scheduler28NonMainThreadSchedulerHelper17ControlTaskRunnerEv(%"class.blink::scheduler::NonMainThreadSchedulerHelper"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, i64 0, i32 0, i32 6
  ret %class.scoped_refptr* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink9scheduler28NonMainThreadSchedulerHelper17ShutdownAllQueuesEv(%"class.blink::scheduler::NonMainThreadSchedulerHelper"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %3, i64 0, i32 0
  %5 = bitcast %"class.blink::scheduler::NonMainThreadTaskQueue"* %3 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %6 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %5, align 8
  %7 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %6, align 8
  tail call void %7(%"class.base::sequence_manager::TaskQueue"* %4) #8
  %8 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadSchedulerHelper", %"class.blink::scheduler::NonMainThreadSchedulerHelper"* %0, i64 0, i32 3, i32 0
  %9 = load %"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.blink::scheduler::NonMainThreadTaskQueue"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::scheduler::NonMainThreadTaskQueue", %"class.blink::scheduler::NonMainThreadTaskQueue"* %9, i64 0, i32 0
  %11 = bitcast %"class.blink::scheduler::NonMainThreadTaskQueue"* %9 to void (%"class.base::sequence_manager::TaskQueue"*)***
  %12 = load void (%"class.base::sequence_manager::TaskQueue"*)**, void (%"class.base::sequence_manager::TaskQueue"*)*** %11, align 8
  %13 = load void (%"class.base::sequence_manager::TaskQueue"*)*, void (%"class.base::sequence_manager::TaskQueue"*)** %12, align 8
  tail call void %13(%"class.base::sequence_manager::TaskQueue"* %10) #8
  ret void
}

declare void @_ZN5blink9scheduler15SchedulerHelper20OnBeginNestedRunLoopEv(%"class.blink::scheduler::SchedulerHelper"*) unnamed_addr #1

declare void @_ZN5blink9scheduler15SchedulerHelper19OnExitNestedRunLoopEv(%"class.blink::scheduler::SchedulerHelper"*) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN5blink9scheduler22NonMainThreadTaskQueueC1ENSt3__110unique_ptrIN4base16sequence_manager8internal13TaskQueueImplENS2_14default_deleteIS7_EEEERKNS5_9TaskQueue4SpecEPNS0_26NonMainThreadSchedulerImplE(%"class.blink::scheduler::NonMainThreadTaskQueue"*, %"class.base::sequence_manager::internal::TaskQueueImpl"*, %"struct.base::sequence_manager::TaskQueue::Spec"* dereferenceable(32), %"class.blink::scheduler::NonMainThreadSchedulerImpl"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
