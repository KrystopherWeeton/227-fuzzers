; ModuleID = '../../net/base/lookup_string_in_fixed_set.cc'
source_filename = "../../net/base/lookup_string_in_fixed_set.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.net::FixedSetIncrementalLookup" = type <{ i8*, i8*, i8, [7 x i8] }>

@_ZN3net25FixedSetIncrementalLookupC1EPKhm = hidden unnamed_addr alias void (%"class.net::FixedSetIncrementalLookup"*, i8*, i64), void (%"class.net::FixedSetIncrementalLookup"*, i8*, i64)* @_ZN3net25FixedSetIncrementalLookupC2EPKhm
@_ZN3net25FixedSetIncrementalLookupC1ERKS0_ = hidden unnamed_addr alias void (%"class.net::FixedSetIncrementalLookup"*, %"class.net::FixedSetIncrementalLookup"*), void (%"class.net::FixedSetIncrementalLookup"*, %"class.net::FixedSetIncrementalLookup"*)* @_ZN3net25FixedSetIncrementalLookupC2ERKS0_
@_ZN3net25FixedSetIncrementalLookupD1Ev = hidden unnamed_addr alias void (%"class.net::FixedSetIncrementalLookup"*), void (%"class.net::FixedSetIncrementalLookup"*)* @_ZN3net25FixedSetIncrementalLookupD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net25FixedSetIncrementalLookupC2EPKhm(%"class.net::FixedSetIncrementalLookup"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.net::FixedSetIncrementalLookup", %"class.net::FixedSetIncrementalLookup"* %0, i64 0, i32 0
  store i8* %1, i8** %4, align 8
  %5 = getelementptr inbounds %"class.net::FixedSetIncrementalLookup", %"class.net::FixedSetIncrementalLookup"* %0, i64 0, i32 1
  %6 = getelementptr inbounds i8, i8* %1, i64 %2
  store i8* %6, i8** %5, align 8
  %7 = getelementptr inbounds %"class.net::FixedSetIncrementalLookup", %"class.net::FixedSetIncrementalLookup"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net25FixedSetIncrementalLookupC2ERKS0_(%"class.net::FixedSetIncrementalLookup"* nocapture, %"class.net::FixedSetIncrementalLookup"* nocapture readonly dereferenceable(24)) unnamed_addr #1 align 2 {
  %3 = bitcast %"class.net::FixedSetIncrementalLookup"* %0 to i8*
  %4 = bitcast %"class.net::FixedSetIncrementalLookup"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 17, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.net::FixedSetIncrementalLookup"* @_ZN3net25FixedSetIncrementalLookupaSERKS0_(%"class.net::FixedSetIncrementalLookup"* returned, %"class.net::FixedSetIncrementalLookup"* nocapture readonly dereferenceable(24)) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.net::FixedSetIncrementalLookup"* %0 to i8*
  %4 = bitcast %"class.net::FixedSetIncrementalLookup"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 17, i1 false)
  ret %"class.net::FixedSetIncrementalLookup"* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net25FixedSetIncrementalLookupD2Ev(%"class.net::FixedSetIncrementalLookup"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net25FixedSetIncrementalLookup7AdvanceEc(%"class.net::FixedSetIncrementalLookup"* nocapture, i8 signext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.net::FixedSetIncrementalLookup", %"class.net::FixedSetIncrementalLookup"* %0, i64 0, i32 0
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  %7 = icmp sgt i8 %1, 31
  br i1 %7, label %8, label %69

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.net::FixedSetIncrementalLookup", %"class.net::FixedSetIncrementalLookup"* %0, i64 0, i32 2
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = load i8, i8* %4, align 1
  %14 = and i8 %13, 127
  %15 = zext i8 %14 to i32
  %16 = sext i8 %1 to i32
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %18, label %69

18:                                               ; preds = %12
  %19 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %19, i8** %3, align 8
  %20 = lshr i8 %13, 7
  %21 = xor i8 %20, 1
  store i8 %21, i8* %9, align 8
  br label %71

22:                                               ; preds = %8
  %23 = sext i8 %1 to i32
  br label %26

24:                                               ; preds = %53
  %25 = icmp eq i8* %60, null
  br i1 %25, label %69, label %26

26:                                               ; preds = %22, %24
  %27 = phi i8* [ %4, %22 ], [ %57, %24 ]
  %28 = phi i8* [ %4, %22 ], [ %60, %24 ]
  %29 = load i8, i8* %28, align 1
  %30 = zext i8 %29 to i32
  %31 = and i32 %30, 96
  switch i32 %31, label %51 [
    i32 96, label %32
    i32 64, label %44
  ]

32:                                               ; preds = %26
  %33 = shl nuw nsw i32 %30, 16
  %34 = and i32 %33, 2031616
  %35 = getelementptr inbounds i8, i8* %28, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i32
  %38 = shl nuw nsw i32 %37, 8
  %39 = or i32 %38, %34
  %40 = getelementptr inbounds i8, i8* %28, i64 2
  %41 = load i8, i8* %40, align 1
  %42 = zext i8 %41 to i32
  %43 = or i32 %39, %42
  br label %53

44:                                               ; preds = %26
  %45 = shl nuw nsw i32 %30, 8
  %46 = and i32 %45, 7936
  %47 = getelementptr inbounds i8, i8* %28, i64 1
  %48 = load i8, i8* %47, align 1
  %49 = zext i8 %48 to i32
  %50 = or i32 %46, %49
  br label %53

51:                                               ; preds = %26
  %52 = and i32 %30, 63
  br label %53

53:                                               ; preds = %32, %44, %51
  %54 = phi i32 [ %43, %32 ], [ %50, %44 ], [ %52, %51 ]
  %55 = phi i64 [ 3, %32 ], [ 2, %44 ], [ 1, %51 ]
  %56 = zext i32 %54 to i64
  %57 = getelementptr inbounds i8, i8* %27, i64 %56
  %58 = icmp slt i8 %29, 0
  %59 = getelementptr inbounds i8, i8* %28, i64 %55
  %60 = select i1 %58, i8* null, i8* %59
  store i8* %60, i8** %3, align 8
  %61 = load i8, i8* %57, align 1
  %62 = and i8 %61, 127
  %63 = zext i8 %62 to i32
  %64 = icmp eq i32 %63, %23
  br i1 %64, label %65, label %24

65:                                               ; preds = %53
  %66 = getelementptr inbounds i8, i8* %57, i64 1
  store i8* %66, i8** %3, align 8
  %67 = lshr i8 %61, 7
  %68 = xor i8 %67, 1
  store i8 %68, i8* %9, align 8
  br label %71

69:                                               ; preds = %24, %12, %6
  store i8* null, i8** %3, align 8
  %70 = getelementptr inbounds %"class.net::FixedSetIncrementalLookup", %"class.net::FixedSetIncrementalLookup"* %0, i64 0, i32 2
  store i8 0, i8* %70, align 8
  br label %71

71:                                               ; preds = %65, %18, %2, %69
  %72 = phi i1 [ false, %69 ], [ true, %65 ], [ false, %2 ], [ true, %18 ]
  ret i1 %72
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net25FixedSetIncrementalLookup27GetResultForCurrentSequenceEv(%"class.net::FixedSetIncrementalLookup"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.net::FixedSetIncrementalLookup", %"class.net::FixedSetIncrementalLookup"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.net::FixedSetIncrementalLookup", %"class.net::FixedSetIncrementalLookup"* %0, i64 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 224
  %11 = icmp eq i32 %10, 128
  %12 = and i32 %9, 31
  %13 = select i1 %11, i32 %12, i32 -1
  ret i32 %13

14:                                               ; preds = %1
  %15 = bitcast %"class.net::FixedSetIncrementalLookup"* %0 to i64*
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %47, %14
  %18 = phi i64 [ %16, %14 ], [ %57, %47 ]
  %19 = phi i64 [ %16, %14 ], [ %53, %47 ]
  %20 = inttoptr i64 %18 to i8*
  %21 = icmp eq i64 %18, 0
  br i1 %21, label %64, label %22

22:                                               ; preds = %17
  %23 = load i8, i8* %20, align 1
  %24 = zext i8 %23 to i32
  %25 = and i32 %24, 96
  switch i32 %25, label %45 [
    i32 96, label %26
    i32 64, label %38
  ]

26:                                               ; preds = %22
  %27 = shl nuw nsw i32 %24, 16
  %28 = and i32 %27, 2031616
  %29 = getelementptr inbounds i8, i8* %20, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i32
  %32 = shl nuw nsw i32 %31, 8
  %33 = or i32 %32, %28
  %34 = getelementptr inbounds i8, i8* %20, i64 2
  %35 = load i8, i8* %34, align 1
  %36 = zext i8 %35 to i32
  %37 = or i32 %33, %36
  br label %47

38:                                               ; preds = %22
  %39 = shl nuw nsw i32 %24, 8
  %40 = and i32 %39, 7936
  %41 = getelementptr inbounds i8, i8* %20, i64 1
  %42 = load i8, i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = or i32 %40, %43
  br label %47

45:                                               ; preds = %22
  %46 = and i32 %24, 63
  br label %47

47:                                               ; preds = %26, %38, %45
  %48 = phi i32 [ %37, %26 ], [ %44, %38 ], [ %46, %45 ]
  %49 = phi i64 [ 3, %26 ], [ 2, %38 ], [ 1, %45 ]
  %50 = inttoptr i64 %19 to i8*
  %51 = zext i32 %48 to i64
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = ptrtoint i8* %52 to i64
  %54 = icmp slt i8 %23, 0
  %55 = getelementptr inbounds i8, i8* %20, i64 %49
  %56 = ptrtoint i8* %55 to i64
  %57 = select i1 %54, i64 0, i64 %56
  %58 = load i8, i8* %52, align 1
  %59 = and i8 %58, -32
  %60 = icmp eq i8 %59, -128
  br i1 %60, label %61, label %17

61:                                               ; preds = %47
  %62 = and i8 %58, 31
  %63 = zext i8 %62 to i32
  br label %64

64:                                               ; preds = %17, %61
  %65 = phi i32 [ %63, %61 ], [ -1, %17 ]
  ret i32 %65
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN3net22LookupStringInFixedSetEPKhmPKcm(i8*, i64, i8* readonly, i64) local_unnamed_addr #4 {
  %5 = getelementptr inbounds i8, i8* %2, i64 %3
  %6 = icmp eq i64 %3, 0
  br i1 %6, label %74, label %7

7:                                                ; preds = %4, %64
  %8 = phi i8* [ %70, %64 ], [ %2, %4 ]
  %9 = phi i8* [ %67, %64 ], [ %0, %4 ]
  %10 = phi i8 [ %69, %64 ], [ 0, %4 ]
  %11 = load i8, i8* %8, align 1
  %12 = icmp ne i8* %9, null
  %13 = icmp sgt i8 %11, 31
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %129

15:                                               ; preds = %7
  %16 = icmp eq i8 %10, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %15
  %18 = load i8, i8* %9, align 1
  %19 = and i8 %18, 127
  %20 = zext i8 %19 to i32
  %21 = sext i8 %11 to i32
  %22 = icmp eq i32 %20, %21
  br i1 %22, label %64, label %129

23:                                               ; preds = %15
  %24 = sext i8 %11 to i32
  br label %28

25:                                               ; preds = %55
  %26 = getelementptr inbounds i8, i8* %30, i64 %57
  %27 = icmp slt i8 %31, 0
  br i1 %27, label %129, label %28

28:                                               ; preds = %25, %23
  %29 = phi i8* [ %9, %23 ], [ %59, %25 ]
  %30 = phi i8* [ %9, %23 ], [ %26, %25 ]
  %31 = load i8, i8* %30, align 1
  %32 = zext i8 %31 to i32
  %33 = and i32 %32, 96
  switch i32 %33, label %53 [
    i32 96, label %34
    i32 64, label %46
  ]

34:                                               ; preds = %28
  %35 = shl nuw nsw i32 %32, 16
  %36 = and i32 %35, 2031616
  %37 = getelementptr inbounds i8, i8* %30, i64 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = shl nuw nsw i32 %39, 8
  %41 = or i32 %40, %36
  %42 = getelementptr inbounds i8, i8* %30, i64 2
  %43 = load i8, i8* %42, align 1
  %44 = zext i8 %43 to i32
  %45 = or i32 %41, %44
  br label %55

46:                                               ; preds = %28
  %47 = shl nuw nsw i32 %32, 8
  %48 = and i32 %47, 7936
  %49 = getelementptr inbounds i8, i8* %30, i64 1
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = or i32 %48, %51
  br label %55

53:                                               ; preds = %28
  %54 = and i32 %32, 63
  br label %55

55:                                               ; preds = %53, %46, %34
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ], [ %45, %34 ]
  %57 = phi i64 [ 1, %53 ], [ 2, %46 ], [ 3, %34 ]
  %58 = zext i32 %56 to i64
  %59 = getelementptr inbounds i8, i8* %29, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = and i8 %60, 127
  %62 = zext i8 %61 to i32
  %63 = icmp eq i32 %62, %24
  br i1 %63, label %64, label %25

64:                                               ; preds = %55, %17
  %65 = phi i8 [ %18, %17 ], [ %60, %55 ]
  %66 = phi i8* [ %9, %17 ], [ %59, %55 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 1
  %68 = lshr i8 %65, 7
  %69 = xor i8 %68, 1
  %70 = getelementptr inbounds i8, i8* %8, i64 1
  %71 = icmp eq i8* %70, %5
  br i1 %71, label %72, label %7

72:                                               ; preds = %64
  %73 = icmp eq i8 %69, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %4, %72
  %75 = phi i8* [ %67, %72 ], [ %0, %4 ]
  %76 = ptrtoint i8* %75 to i64
  br label %84

77:                                               ; preds = %72
  %78 = load i8, i8* %67, align 1
  %79 = zext i8 %78 to i32
  %80 = and i32 %79, 224
  %81 = icmp eq i32 %80, 128
  %82 = and i32 %79, 31
  %83 = select i1 %81, i32 %82, i32 -1
  br label %129

84:                                               ; preds = %74, %114
  %85 = phi i64 [ %122, %114 ], [ %76, %74 ]
  %86 = phi i8* [ %118, %114 ], [ %75, %74 ]
  %87 = inttoptr i64 %85 to i8*
  %88 = icmp eq i64 %85, 0
  br i1 %88, label %129, label %89

89:                                               ; preds = %84
  %90 = load i8, i8* %87, align 1
  %91 = zext i8 %90 to i32
  %92 = and i32 %91, 96
  switch i32 %92, label %112 [
    i32 96, label %93
    i32 64, label %105
  ]

93:                                               ; preds = %89
  %94 = shl nuw nsw i32 %91, 16
  %95 = and i32 %94, 2031616
  %96 = getelementptr inbounds i8, i8* %87, i64 1
  %97 = load i8, i8* %96, align 1
  %98 = zext i8 %97 to i32
  %99 = shl nuw nsw i32 %98, 8
  %100 = or i32 %99, %95
  %101 = getelementptr inbounds i8, i8* %87, i64 2
  %102 = load i8, i8* %101, align 1
  %103 = zext i8 %102 to i32
  %104 = or i32 %100, %103
  br label %114

105:                                              ; preds = %89
  %106 = shl nuw nsw i32 %91, 8
  %107 = and i32 %106, 7936
  %108 = getelementptr inbounds i8, i8* %87, i64 1
  %109 = load i8, i8* %108, align 1
  %110 = zext i8 %109 to i32
  %111 = or i32 %107, %110
  br label %114

112:                                              ; preds = %89
  %113 = and i32 %91, 63
  br label %114

114:                                              ; preds = %112, %105, %93
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ], [ %104, %93 ]
  %116 = phi i64 [ 1, %112 ], [ 2, %105 ], [ 3, %93 ]
  %117 = zext i32 %115 to i64
  %118 = getelementptr inbounds i8, i8* %86, i64 %117
  %119 = icmp slt i8 %90, 0
  %120 = getelementptr inbounds i8, i8* %87, i64 %116
  %121 = ptrtoint i8* %120 to i64
  %122 = select i1 %119, i64 0, i64 %121
  %123 = load i8, i8* %118, align 1
  %124 = and i8 %123, -32
  %125 = icmp eq i8 %124, -128
  br i1 %125, label %126, label %84

126:                                              ; preds = %114
  %127 = and i8 %123, 31
  %128 = zext i8 %127 to i32
  br label %129

129:                                              ; preds = %7, %17, %25, %84, %77, %126
  %130 = phi i32 [ %83, %77 ], [ %128, %126 ], [ -1, %84 ], [ -1, %25 ], [ -1, %17 ], [ -1, %7 ]
  ret i32 %130
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net25LookupSuffixInReversedSetEPKhmbN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPm(i8*, i64, i1 zeroext, i8*, i64, i64* nocapture) local_unnamed_addr #1 {
  store i64 0, i64* %5, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 %4
  %8 = icmp eq i64 %4, 0
  br i1 %8, label %145, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %7 to i64
  br label %11

11:                                               ; preds = %9, %143
  %12 = phi i8* [ %7, %9 ], [ %16, %143 ]
  %13 = phi i32 [ -1, %9 ], [ %144, %143 ]
  %14 = phi i8* [ %0, %9 ], [ %73, %143 ]
  %15 = phi i8 [ 0, %9 ], [ %76, %143 ]
  %16 = getelementptr inbounds i8, i8* %12, i64 -1
  %17 = load i8, i8* %16, align 1
  %18 = icmp ne i8* %14, null
  %19 = icmp sgt i8 %17, 31
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %145

21:                                               ; preds = %11
  %22 = icmp eq i8 %15, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %21
  %24 = load i8, i8* %14, align 1
  %25 = and i8 %24, 127
  %26 = zext i8 %25 to i32
  %27 = sext i8 %17 to i32
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %70, label %145

29:                                               ; preds = %21
  %30 = sext i8 %17 to i32
  br label %34

31:                                               ; preds = %61
  %32 = getelementptr inbounds i8, i8* %36, i64 %63
  %33 = icmp slt i8 %37, 0
  br i1 %33, label %145, label %34

34:                                               ; preds = %31, %29
  %35 = phi i8* [ %14, %29 ], [ %65, %31 ]
  %36 = phi i8* [ %14, %29 ], [ %32, %31 ]
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  %39 = and i32 %38, 96
  switch i32 %39, label %59 [
    i32 96, label %40
    i32 64, label %52
  ]

40:                                               ; preds = %34
  %41 = shl nuw nsw i32 %38, 16
  %42 = and i32 %41, 2031616
  %43 = getelementptr inbounds i8, i8* %36, i64 1
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = shl nuw nsw i32 %45, 8
  %47 = or i32 %46, %42
  %48 = getelementptr inbounds i8, i8* %36, i64 2
  %49 = load i8, i8* %48, align 1
  %50 = zext i8 %49 to i32
  %51 = or i32 %47, %50
  br label %61

52:                                               ; preds = %34
  %53 = shl nuw nsw i32 %38, 8
  %54 = and i32 %53, 7936
  %55 = getelementptr inbounds i8, i8* %36, i64 1
  %56 = load i8, i8* %55, align 1
  %57 = zext i8 %56 to i32
  %58 = or i32 %54, %57
  br label %61

59:                                               ; preds = %34
  %60 = and i32 %38, 63
  br label %61

61:                                               ; preds = %59, %52, %40
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ], [ %51, %40 ]
  %63 = phi i64 [ 1, %59 ], [ 2, %52 ], [ 3, %40 ]
  %64 = zext i32 %62 to i64
  %65 = getelementptr inbounds i8, i8* %35, i64 %64
  %66 = load i8, i8* %65, align 1
  %67 = and i8 %66, 127
  %68 = zext i8 %67 to i32
  %69 = icmp eq i32 %68, %30
  br i1 %69, label %70, label %31

70:                                               ; preds = %61, %23
  %71 = phi i8 [ %24, %23 ], [ %66, %61 ]
  %72 = phi i8* [ %14, %23 ], [ %65, %61 ]
  %73 = getelementptr inbounds i8, i8* %72, i64 1
  %74 = lshr i8 %71, 7
  %75 = ptrtoint i8* %73 to i64
  %76 = xor i8 %74, 1
  %77 = icmp eq i8* %16, %3
  br i1 %77, label %82, label %78

78:                                               ; preds = %70
  %79 = getelementptr inbounds i8, i8* %12, i64 -2
  %80 = load i8, i8* %79, align 1
  %81 = icmp eq i8 %80, 46
  br i1 %81, label %82, label %143

82:                                               ; preds = %78, %70
  %83 = icmp eq i8 %76, 0
  br i1 %83, label %90, label %84

84:                                               ; preds = %82
  %85 = load i8, i8* %73, align 1
  %86 = zext i8 %85 to i32
  %87 = and i32 %86, 224
  %88 = icmp eq i32 %87, 128
  %89 = and i32 %86, 31
  br i1 %88, label %135, label %143

90:                                               ; preds = %82, %120
  %91 = phi i64 [ %128, %120 ], [ %75, %82 ]
  %92 = phi i8* [ %124, %120 ], [ %73, %82 ]
  %93 = inttoptr i64 %91 to i8*
  %94 = icmp eq i64 %91, 0
  br i1 %94, label %143, label %95

95:                                               ; preds = %90
  %96 = load i8, i8* %93, align 1
  %97 = zext i8 %96 to i32
  %98 = and i32 %97, 96
  switch i32 %98, label %118 [
    i32 96, label %99
    i32 64, label %111
  ]

99:                                               ; preds = %95
  %100 = shl nuw nsw i32 %97, 16
  %101 = and i32 %100, 2031616
  %102 = getelementptr inbounds i8, i8* %93, i64 1
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = shl nuw nsw i32 %104, 8
  %106 = or i32 %105, %101
  %107 = getelementptr inbounds i8, i8* %93, i64 2
  %108 = load i8, i8* %107, align 1
  %109 = zext i8 %108 to i32
  %110 = or i32 %106, %109
  br label %120

111:                                              ; preds = %95
  %112 = shl nuw nsw i32 %97, 8
  %113 = and i32 %112, 7936
  %114 = getelementptr inbounds i8, i8* %93, i64 1
  %115 = load i8, i8* %114, align 1
  %116 = zext i8 %115 to i32
  %117 = or i32 %113, %116
  br label %120

118:                                              ; preds = %95
  %119 = and i32 %97, 63
  br label %120

120:                                              ; preds = %118, %111, %99
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ], [ %110, %99 ]
  %122 = phi i64 [ 1, %118 ], [ 2, %111 ], [ 3, %99 ]
  %123 = zext i32 %121 to i64
  %124 = getelementptr inbounds i8, i8* %92, i64 %123
  %125 = icmp slt i8 %96, 0
  %126 = getelementptr inbounds i8, i8* %93, i64 %122
  %127 = ptrtoint i8* %126 to i64
  %128 = select i1 %125, i64 0, i64 %127
  %129 = load i8, i8* %124, align 1
  %130 = and i8 %129, -32
  %131 = icmp eq i8 %130, -128
  br i1 %131, label %132, label %90

132:                                              ; preds = %120
  %133 = and i8 %129, 31
  %134 = zext i8 %133 to i32
  br label %135

135:                                              ; preds = %84, %132
  %136 = phi i32 [ %134, %132 ], [ %89, %84 ]
  %137 = and i32 %136, 4
  %138 = icmp eq i32 %137, 0
  %139 = or i1 %138, %2
  br i1 %139, label %140, label %145

140:                                              ; preds = %135
  %141 = ptrtoint i8* %16 to i64
  %142 = sub i64 %10, %141
  store i64 %142, i64* %5, align 8
  br label %143

143:                                              ; preds = %90, %84, %140, %78
  %144 = phi i32 [ %13, %78 ], [ %136, %140 ], [ %13, %84 ], [ %13, %90 ]
  br i1 %77, label %145, label %11

145:                                              ; preds = %143, %135, %23, %11, %31, %6
  %146 = phi i32 [ -1, %6 ], [ %13, %31 ], [ %144, %143 ], [ %13, %135 ], [ %13, %23 ], [ %13, %11 ]
  ret i32 %146
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
